[
  {
    "oid": "80874749bf4af8798ef4eda6ecf94ab8c0c5fab1",
    "message": "[ISSUE #7220] replace with lambda (#7222)\n\n* replace with lambda\r\n\r\n* replace with lambda",
    "date": "2021-11-12T02:20:54Z",
    "url": "https://github.com/alibaba/nacos/commit/80874749bf4af8798ef4eda6ecf94ab8c0c5fab1",
    "details": {
      "sha": "7d87bd13741d2447005ed1783dab7350c4d73c36",
      "filename": "client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java",
      "status": "modified",
      "additions": 14,
      "deletions": 24,
      "changes": 38,
      "blob_url": "https://github.com/alibaba/nacos/blob/80874749bf4af8798ef4eda6ecf94ab8c0c5fab1/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fconfig%2Fimpl%2FServerListManager.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/80874749bf4af8798ef4eda6ecf94ab8c0c5fab1/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fconfig%2Fimpl%2FServerListManager.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fconfig%2Fimpl%2FServerListManager.java?ref=80874749bf4af8798ef4eda6ecf94ab8c0c5fab1",
      "patch": "@@ -44,10 +44,8 @@\n import java.util.Properties;\n import java.util.Random;\n import java.util.StringTokenizer;\n-import java.util.concurrent.Callable;\n import java.util.concurrent.ScheduledExecutorService;\n import java.util.concurrent.ScheduledThreadPoolExecutor;\n-import java.util.concurrent.ThreadFactory;\n import java.util.concurrent.TimeUnit;\n \n /**\n@@ -65,14 +63,11 @@ public class ServerListManager implements Closeable {\n     \n     private final NacosRestTemplate nacosRestTemplate = ConfigHttpClientManager.getInstance().getNacosRestTemplate();\n     \n-    private final ScheduledExecutorService executorService = new ScheduledThreadPoolExecutor(1, new ThreadFactory() {\n-        @Override\n-        public Thread newThread(Runnable r) {\n-            Thread t = new Thread(r);\n-            t.setName(\"com.alibaba.nacos.client.ServerListManager\");\n-            t.setDaemon(true);\n-            return t;\n-        }\n+    private final ScheduledExecutorService executorService = new ScheduledThreadPoolExecutor(1, r -> {\n+        Thread t = new Thread(r);\n+        t.setName(\"com.alibaba.nacos.client.ServerListManager\");\n+        t.setDaemon(true);\n+        return t;\n     });\n     \n     /**\n@@ -109,7 +104,7 @@ public Thread newThread(Runnable r) {\n     \n     private String serverListName = ParamUtil.getDefaultNodesPath();\n     \n-    volatile List<String> serverUrls = new ArrayList<String>();\n+    volatile List<String> serverUrls = new ArrayList<>();\n     \n     private volatile String currentServerAddr;\n     \n@@ -134,7 +129,7 @@ public ServerListManager(List<String> fixed) {\n     public ServerListManager(List<String> fixed, String namespace) {\n         this.isFixed = true;\n         this.isStarted = true;\n-        List<String> serverAddrs = new ArrayList<String>();\n+        List<String> serverAddrs = new ArrayList<>();\n         for (String serverAddr : fixed) {\n             String[] serverAddrArr = InternetAddressUtil.splitIPPortStr(serverAddr);\n             if (serverAddrArr.length == 1) {\n@@ -143,7 +138,7 @@ public ServerListManager(List<String> fixed, String namespace) {\n                 serverAddrs.add(serverAddr);\n             }\n         }\n-        this.serverUrls = new ArrayList<String>(serverAddrs);\n+        this.serverUrls = new ArrayList<>(serverAddrs);\n         if (StringUtils.isBlank(namespace)) {\n             this.name = FIXED_NAME + \"-\" + getFixedNameSuffix(serverAddrs.toArray(new String[serverAddrs.size()]));\n         } else {\n@@ -200,7 +195,7 @@ public ServerListManager(Properties properties) throws NacosException {\n         \n         if (StringUtils.isNotEmpty(serverAddrsStr)) {\n             this.isFixed = true;\n-            List<String> serverAddrs = new ArrayList<String>();\n+            List<String> serverAddrs = new ArrayList<>();\n             StringTokenizer serverAddrsTokens = new StringTokenizer(this.serverAddrsStr, \",;\");\n             while (serverAddrsTokens.hasMoreTokens()) {\n                 String serverAddr = serverAddrsTokens.nextToken().trim();\n@@ -263,12 +258,7 @@ private String initEndpoint(final Properties properties) {\n         \n         String endpointPortTmp = TemplateUtils\n                 .stringEmptyAndThenExecute(System.getenv(PropertyKeyConst.SystemEnv.ALIBABA_ALIWARE_ENDPOINT_PORT),\n-                        new Callable<String>() {\n-                            @Override\n-                            public String call() {\n-                                return properties.getProperty(PropertyKeyConst.ENDPOINT_PORT);\n-                            }\n-                        });\n+                        () -> properties.getProperty(PropertyKeyConst.ENDPOINT_PORT));\n         \n         if (StringUtils.isNotBlank(endpointPortTmp)) {\n             this.endpointPort = Integer.parseInt(endpointPortTmp);\n@@ -370,7 +360,7 @@ private void updateIfChanged(List<String> newList) {\n             return;\n         }\n         \n-        List<String> newServerAddrList = new ArrayList<String>();\n+        List<String> newServerAddrList = new ArrayList<>();\n         for (String server : newList) {\n             if (server.startsWith(HTTP) || server.startsWith(HTTPS)) {\n                 newServerAddrList.add(server);\n@@ -385,7 +375,7 @@ private void updateIfChanged(List<String> newList) {\n         if (newServerAddrList.equals(serverUrls)) {\n             return;\n         }\n-        serverUrls = new ArrayList<String>(newServerAddrList);\n+        serverUrls = new ArrayList<>(newServerAddrList);\n         iterator = iterator();\n         currentServerAddr = iterator.next();\n         \n@@ -403,7 +393,7 @@ private List<String> getApacheServerList(String url, String name) {\n                     EnvUtil.setSelfEnv(httpResult.getHeader().getOriginalResponseHeader());\n                 }\n                 List<String> lines = IoUtils.readLines(new StringReader(httpResult.getData()));\n-                List<String> result = new ArrayList<String>(lines.size());\n+                List<String> result = new ArrayList<>(lines.size());\n                 for (String serverAddr : lines) {\n                     if (StringUtils.isNotBlank(serverAddr)) {\n                         String[] ipPort = InternetAddressUtil.splitIPPortStr(serverAddr.trim());\n@@ -543,7 +533,7 @@ public int compareTo(RandomizedServerAddress other) {\n         }\n         \n         public ServerAddressIterator(List<String> source) {\n-            sorted = new ArrayList<RandomizedServerAddress>();\n+            sorted = new ArrayList<>();\n             for (String address : source) {\n                 sorted.add(new RandomizedServerAddress(address));\n             }",
      "parent_sha": "0719200c38457d4ccc458d261e2ead1c2136207a"
    }
  },
  {
    "oid": "3cfe5e82f228c6a5082378eb174371091e60c94d",
    "message": "Fix server push is intercepted by SetupRequestHandler problem.",
    "date": "2023-09-28T03:55:00Z",
    "url": "https://github.com/alibaba/nacos/commit/3cfe5e82f228c6a5082378eb174371091e60c94d",
    "details": {
      "sha": "923acc99741bb97eb68df869c21def2f6dd73d30",
      "filename": "common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcClient.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/alibaba/nacos/blob/3cfe5e82f228c6a5082378eb174371091e60c94d/common%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Fremote%2Fclient%2Fgrpc%2FGrpcClient.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/3cfe5e82f228c6a5082378eb174371091e60c94d/common%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Fremote%2Fclient%2Fgrpc%2FGrpcClient.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/common%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Fremote%2Fclient%2Fgrpc%2FGrpcClient.java?ref=3cfe5e82f228c6a5082378eb174371091e60c94d",
      "patch": "@@ -518,8 +518,9 @@ public Response requestReply(Request request, Connection connection) {\n                 SetupAckRequest setupAckRequest = (SetupAckRequest) request;\n                 // remove and count down\n                 recAbilityContext.release(setupAckRequest.getAbilityTable());\n+                return new SetupAckResponse();\n             }\n-            return new SetupAckResponse();\n+            return null;\n         }\n     }\n     ",
      "parent_sha": "40b46dba816bb1335fd064e6376d64b20c068914"
    }
  },
  {
    "oid": "01fb64fb589869673f7b6e21a08fe1fc32633f3b",
    "message": "Fix typo (#8567)",
    "date": "2022-06-17T03:06:43Z",
    "url": "https://github.com/alibaba/nacos/commit/01fb64fb589869673f7b6e21a08fe1fc32633f3b",
    "details": {
      "sha": "dfe52c7cfbbf99f20fdd3b4a4072c33eafaaac70",
      "filename": "client/src/main/java/com/alibaba/nacos/client/monitor/MetricsMonitor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/alibaba/nacos/blob/01fb64fb589869673f7b6e21a08fe1fc32633f3b/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fmonitor%2FMetricsMonitor.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/01fb64fb589869673f7b6e21a08fe1fc32633f3b/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fmonitor%2FMetricsMonitor.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fmonitor%2FMetricsMonitor.java?ref=01fb64fb589869673f7b6e21a08fe1fc32633f3b",
      "patch": "@@ -42,7 +42,7 @@ public static Gauge.Child getDom2BeatSizeMonitor() {\n     }\n     \n     public static Gauge.Child getListenConfigCountMonitor() {\n-        return NACOS_MONITOR.labels(\"naming\", \"listenConfigCount\");\n+        return NACOS_MONITOR.labels(\"config\", \"listenConfigCount\");\n     }\n     \n     public static Histogram.Child getConfigRequestMonitor(String method, String url, String code) {",
      "parent_sha": "20af7252054fa508262bbafe096495cd96078457"
    }
  },
  {
    "oid": "fbe7d956c5bb2fd92639ffe25e5e92f97ab4a085",
    "message": "polish:change log level warn to info when succeed (#9749)",
    "date": "2022-12-27T07:08:09Z",
    "url": "https://github.com/alibaba/nacos/commit/fbe7d956c5bb2fd92639ffe25e5e92f97ab4a085",
    "details": {
      "sha": "56682ad580bbfe2e919dfa3f665c662f4e9ba329",
      "filename": "core/src/main/java/com/alibaba/nacos/core/cluster/remote/ClusterRpcClientProxy.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/alibaba/nacos/blob/fbe7d956c5bb2fd92639ffe25e5e92f97ab4a085/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fcluster%2Fremote%2FClusterRpcClientProxy.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/fbe7d956c5bb2fd92639ffe25e5e92f97ab4a085/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fcluster%2Fremote%2FClusterRpcClientProxy.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fcluster%2Fremote%2FClusterRpcClientProxy.java?ref=fbe7d956c5bb2fd92639ffe25e5e92f97ab4a085",
      "patch": "@@ -71,7 +71,7 @@ public void init() {\n             List<Member> members = serverMemberManager.allMembersWithoutSelf();\n             refresh(members);\n             Loggers.CLUSTER\n-                    .warn(\"[ClusterRpcClientProxy] success to refresh cluster rpc client on start up,members ={} \",\n+                    .info(\"[ClusterRpcClientProxy] success to refresh cluster rpc client on start up,members ={} \",\n                             members);\n         } catch (NacosException e) {\n             Loggers.CLUSTER.warn(\"[ClusterRpcClientProxy] fail to refresh cluster rpc client,{} \", e.getMessage());\n@@ -120,7 +120,7 @@ private void createRpcClientAndStart(Member member, ConnectionType type) throws\n         String memberClientKey = memberClientKey(member);\n         RpcClient client = buildRpcClient(type, labels, memberClientKey);\n         if (!client.getConnectionType().equals(type)) {\n-            Loggers.CLUSTER.info(\",connection type changed,destroy client of member - > : {}\", member);\n+            Loggers.CLUSTER.info(\"connection type changed,destroy client of member - > : {}\", member);\n             RpcClientFactory.destroyClient(memberClientKey);\n             client = buildRpcClient(type, labels, memberClientKey);\n         }",
      "parent_sha": "42d928264a3a8dddd76266851ad9bf590e5eb201"
    }
  },
  {
    "oid": "b55b42cc0e058a2eaa38b510c3e31d1cd60fe329",
    "message": "Remove any extra curly braces from the @Value annotation (#5838)",
    "date": "2021-05-26T02:06:30Z",
    "url": "https://github.com/alibaba/nacos/commit/b55b42cc0e058a2eaa38b510c3e31d1cd60fe329",
    "details": {
      "sha": "939c1172c58cfd8991373935371133069bae404d",
      "filename": "auth/src/main/java/com/alibaba/nacos/auth/common/AuthConfigs.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/alibaba/nacos/blob/b55b42cc0e058a2eaa38b510c3e31d1cd60fe329/auth%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fauth%2Fcommon%2FAuthConfigs.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/b55b42cc0e058a2eaa38b510c3e31d1cd60fe329/auth%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fauth%2Fcommon%2FAuthConfigs.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/auth%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fauth%2Fcommon%2FAuthConfigs.java?ref=b55b42cc0e058a2eaa38b510c3e31d1cd60fe329",
      "patch": "@@ -65,10 +65,10 @@ public class AuthConfigs {\n     @Value(\"${nacos.core.auth.server.identity.key:}\")\n     private String serverIdentityKey;\n     \n-    @Value((\"${nacos.core.auth.server.identity.value:}\"))\n+    @Value(\"${nacos.core.auth.server.identity.value:}\")\n     private String serverIdentityValue;\n     \n-    @Value((\"${nacos.core.auth.enable.userAgentAuthWhite:true}\"))\n+    @Value(\"${nacos.core.auth.enable.userAgentAuthWhite:true}\")\n     private boolean enableUserAgentAuthWhite;\n     \n     public byte[] getSecretKeyBytes() {",
      "parent_sha": "0e4e1f6ad876421a356b3cdeb95a6a83c8ba7be8"
    }
  },
  {
    "oid": "47dd0785455354f49edd10110b0950588d2f1be3",
    "message": "fix #11984 (#12091)",
    "date": "2024-05-14T05:37:08Z",
    "url": "https://github.com/alibaba/nacos/commit/47dd0785455354f49edd10110b0950588d2f1be3",
    "details": {
      "sha": "b9065ef539141857ae24a7b33e858521f9e5ca21",
      "filename": "common/src/main/java/com/alibaba/nacos/common/remote/client/RpcClient.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/alibaba/nacos/blob/47dd0785455354f49edd10110b0950588d2f1be3/common%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Fremote%2Fclient%2FRpcClient.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/47dd0785455354f49edd10110b0950588d2f1be3/common%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Fremote%2Fclient%2FRpcClient.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/common%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Fremote%2Fclient%2FRpcClient.java?ref=47dd0785455354f49edd10110b0950588d2f1be3",
      "patch": "@@ -529,8 +529,9 @@ protected void reconnect(final ServerInfo recommendServerInfo, boolean onRequest\n                     \n                     lastException = null;\n                     \n-                } catch (Exception e) {\n-                    lastException = e;\n+                } catch (Throwable throwable) {\n+                    LoggerUtils.printIfErrorEnabled(LOGGER, \"Fail to connect server, error = {}\", throwable.getMessage());\n+                    lastException = new Exception(throwable);\n                 } finally {\n                     recommendServer.set(null);\n                 }",
      "parent_sha": "b047a90fba7887309bcb50d29bf9813b6721035f"
    }
  },
  {
    "oid": "fb1cf6fcecc7375670b8880f5670ddba80b8f659",
    "message": "bugfix, when -Dnacos.preferHostnameOverIp=true , the localhostIp error . bug #325",
    "date": "2018-11-21T09:33:00Z",
    "url": "https://github.com/alibaba/nacos/commit/fb1cf6fcecc7375670b8880f5670ddba80b8f659",
    "details": {
      "sha": "9d891cdba2d8293497ab6a1dc12c475babba3b63",
      "filename": "naming/src/main/java/com/alibaba/nacos/naming/core/DistroMapper.java",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/alibaba/nacos/blob/fb1cf6fcecc7375670b8880f5670ddba80b8f659/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2FDistroMapper.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/fb1cf6fcecc7375670b8880f5670ddba80b8f659/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2FDistroMapper.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2FDistroMapper.java?ref=fb1cf6fcecc7375670b8880f5670ddba80b8f659",
      "patch": "@@ -56,11 +56,7 @@ public static List<String> getHealthyList() {\n     private static Synchronizer synchronizer = new ServerStatusSynchronizer();\n \n     static {\n-        try {\n-            localhostIP = InetAddress.getLocalHost().getHostAddress() + \":\" + RunningConfig.getServerPort();\n-        } catch (UnknownHostException e) {\n-            throw new IllegalStateException(\"Unable to resolve current host IP\");\n-        }\n+        localhostIP = NetUtils.localServer();\n \n         init();\n \n@@ -471,7 +467,7 @@ public void run() {\n                     weight = 1;\n                 }\n \n-                localhostIP = InetAddress.getLocalHost().getHostAddress() + \":\" + RunningConfig.getServerPort();\n+                localhostIP = NetUtils.localServer();\n \n                 long curTime = System.currentTimeMillis();\n                 String status = LOCALHOST_SITE + \"#\" + localhostIP + \"#\" + curTime + \"#\" + weight + \"\\r\\n\";",
      "parent_sha": "46648dbdce459b6ee6720caf3943481c1774902b"
    }
  },
  {
    "oid": "882be9e726a81a4f6b69ae41af6fc356efd5e390",
    "message": "Add comment for config aspect.",
    "date": "2022-07-28T09:58:33Z",
    "url": "https://github.com/alibaba/nacos/commit/882be9e726a81a4f6b69ae41af6fc356efd5e390",
    "details": {
      "sha": "d19e2170f46a605a7daf53058253f42e72ac52cd",
      "filename": "config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java",
      "status": "modified",
      "additions": 11,
      "deletions": 1,
      "changes": 12,
      "blob_url": "https://github.com/alibaba/nacos/blob/882be9e726a81a4f6b69ae41af6fc356efd5e390/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fcontroller%2FConfigController.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/882be9e726a81a4f6b69ae41af6fc356efd5e390/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fcontroller%2FConfigController.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fcontroller%2FConfigController.java?ref=882be9e726a81a4f6b69ae41af6fc356efd5e390",
      "patch": "@@ -118,7 +118,11 @@ public ConfigController(ConfigServletInner inner, PersistService persistService,\n     \n     /**\n      * Adds or updates non-aggregated data.\n-     *\n+     * <p>\n+     * request and response will be used in aspect, see\n+     * {@link com.alibaba.nacos.config.server.aspect.CapacityManagementAspect} and\n+     * {@link com.alibaba.nacos.config.server.aspect.RequestLogAspect}.\n+     * </p>\n      * @throws NacosException NacosException.\n      */\n     @PostMapping\n@@ -253,6 +257,12 @@ public ConfigAllInfo detailConfigInfo(@RequestParam(\"dataId\") String dataId, @Re\n     /**\n      * Synchronously delete all pre-aggregation data under a dataId.\n      *\n+     * <p>\n+     * request and response will be used in aspect, see\n+     * {@link com.alibaba.nacos.config.server.aspect.CapacityManagementAspect} and\n+     * {@link com.alibaba.nacos.config.server.aspect.RequestLogAspect}.\n+     * </p>\n+     *\n      * @throws NacosException NacosException.\n      */\n     @DeleteMapping",
      "parent_sha": "ff336d97b93d53737375d2bd2ff78de2a1d70f57"
    }
  },
  {
    "oid": "5891ae0a754c20797afa4a9981741c914f69f82d",
    "message": "separate log and metrics",
    "date": "2019-01-11T10:03:27Z",
    "url": "https://github.com/alibaba/nacos/commit/5891ae0a754c20797afa4a9981741c914f69f82d",
    "details": {
      "sha": "d8ebc3b9877e80f4d421add65b2845e7b370a56c",
      "filename": "naming/src/main/java/com/alibaba/nacos/naming/monitor/PerformanceLoggerThread.java",
      "status": "modified",
      "additions": 27,
      "deletions": 19,
      "changes": 46,
      "blob_url": "https://github.com/alibaba/nacos/blob/5891ae0a754c20797afa4a9981741c914f69f82d/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fmonitor%2FPerformanceLoggerThread.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/5891ae0a754c20797afa4a9981741c914f69f82d/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fmonitor%2FPerformanceLoggerThread.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fmonitor%2FPerformanceLoggerThread.java?ref=5891ae0a754c20797afa4a9981741c914f69f82d",
      "patch": "@@ -86,14 +86,40 @@ private void start() {\n     }\n \n     @Scheduled(cron = \"0 0 0 * * ?\")\n-    public void refresh() {\n+    public void refreshMetrics() {\n         PushService.setFailedPush(0);\n         PushService.setTotalPush(0);\n         MetricsMonitor.getHttpHealthCheckMonitor().set(0);\n         MetricsMonitor.getMysqlHealthCheckMonitor().set(0);\n         MetricsMonitor.getTcpHealthCheckMonitor().set(0);\n     }\n \n+    @Scheduled(cron = \"0/15 * * * * ?\")\n+    public void collectmetrics() {\n+        int domCount = domainsManager.getDomCount();\n+        MetricsMonitor.getDomCountMonitor().set(domCount);\n+\n+        int ipCount = domainsManager.getIPCount();\n+        MetricsMonitor.getIpCountMonitor().set(ipCount);\n+\n+        long maxPushCost = getMaxPushCost();\n+        MetricsMonitor.getMaxPushCostMonitor().set(maxPushCost);\n+\n+        long avgPushCost = getAvgPushCost();\n+        MetricsMonitor.getAvgPushCostMonitor().set(avgPushCost);\n+\n+        MetricsMonitor.getTotalPushMonitor().set(PushService.getTotalPush());\n+        MetricsMonitor.getFailedPushMonitor().set(PushService.getFailedPushCount());\n+\n+        if (RaftCore.isLeader()) {\n+            MetricsMonitor.getLeaderStatusMonitor().set(1);\n+        } else if (RaftCore.getPeerSet().local().state == FOLLOWER) {\n+            MetricsMonitor.getLeaderStatusMonitor().set(0);\n+        } else {\n+            MetricsMonitor.getLeaderStatusMonitor().set(2);\n+        }\n+    }\n+\n     class AllDomNamesTask implements Runnable {\n \n         @Override\n@@ -113,27 +139,9 @@ class PerformanceLogTask implements Runnable {\n         public void run() {\n             try {\n                 int domCount = domainsManager.getDomCount();\n-                MetricsMonitor.getDomCountMonitor().set(domCount);\n-\n                 int ipCount = domainsManager.getIPCount();\n-                MetricsMonitor.getIpCountMonitor().set(ipCount);\n-\n                 long maxPushCost = getMaxPushCost();\n-                MetricsMonitor.getMaxPushCostMonitor().set(maxPushCost);\n-\n                 long avgPushCost = getAvgPushCost();\n-                MetricsMonitor.getAvgPushCostMonitor().set(avgPushCost);\n-\n-                MetricsMonitor.getTotalPushMonitor().set(PushService.getTotalPush());\n-                MetricsMonitor.getFailedPushMonitor().set(PushService.getFailedPushCount());\n-\n-                if (RaftCore.isLeader()) {\n-                    MetricsMonitor.getLeaderStatusMonitor().set(1);\n-                } else if (RaftCore.getPeerSet().local().state == FOLLOWER) {\n-                    MetricsMonitor.getLeaderStatusMonitor().set(0);\n-                } else {\n-                    MetricsMonitor.getLeaderStatusMonitor().set(2);\n-                }\n \n                 Loggers.PERFORMANCE_LOG.info(\"PERFORMANCE:\" + \"|\" + domCount + \"|\" + ipCount + \"|\" + maxPushCost + \"|\" + avgPushCost);\n             } catch (Exception e) {",
      "parent_sha": "93d2bd253de603036a8bedcb3c8c308c88703ba1"
    }
  },
  {
    "oid": "eca0ea5760b175b03979a2cbd28a1454bfd4ec83",
    "message": "Add log",
    "date": "2019-04-15T02:49:41Z",
    "url": "https://github.com/alibaba/nacos/commit/eca0ea5760b175b03979a2cbd28a1454bfd4ec83",
    "details": {
      "sha": "7bc7497a5b5a971c7762b8a36f1e2c7d59b5d69b",
      "filename": "naming/src/main/java/com/alibaba/nacos/naming/cluster/ServerListManager.java",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/alibaba/nacos/blob/eca0ea5760b175b03979a2cbd28a1454bfd4ec83/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcluster%2FServerListManager.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/eca0ea5760b175b03979a2cbd28a1454bfd4ec83/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcluster%2FServerListManager.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcluster%2FServerListManager.java?ref=eca0ea5760b175b03979a2cbd28a1454bfd4ec83",
      "patch": "@@ -165,6 +165,9 @@ public Map<String, List<Server>> getDistroConfig() {\n     }\n \n     public synchronized void onReceiveServerStatus(String configInfo) {\n+\n+        Loggers.SRV_LOG.info(\"receive config info: {}\", configInfo);\n+\n         String[] configs = configInfo.split(\"\\r\\n\");\n         if (configs.length == 0) {\n             return;\n@@ -274,7 +277,8 @@ public synchronized void onReceiveServerStatus(String configInfo) {\n             // for every change disable healthy check for some while\n             if (switchDomain.isHealthCheckEnabled()) {\n                 Loggers.SRV_LOG.info(\"[NACOS-DISTRO] healthy server list changed, \" +\n-                    \"disable health check for {} ms from now on\", STABLE_PERIOD);\n+                    \"disable health check for {} ms from now on, old: {}, new: {}\", STABLE_PERIOD,\n+                    healthyServers, newHealthyList);\n \n                 switchDomain.setHealthCheckEnabled(false);\n                 autoDisabledHealthCheck = true;",
      "parent_sha": "ffa1da871db7033ab840eca9863efbc1d8d04a38"
    }
  },
  {
    "oid": "d203421a8dfabd255d5a22fd2e5b4d4600c4a15d",
    "message": "modify log level when expcetion occur.",
    "date": "2022-01-07T07:40:19Z",
    "url": "https://github.com/alibaba/nacos/commit/d203421a8dfabd255d5a22fd2e5b4d4600c4a15d",
    "details": {
      "sha": "7fa9ba290ad7e5119a3c557ab4915ce19d14ae22",
      "filename": "core/src/main/java/com/alibaba/nacos/core/distributed/raft/JRaftServer.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/alibaba/nacos/blob/d203421a8dfabd255d5a22fd2e5b4d4600c4a15d/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fdistributed%2Fraft%2FJRaftServer.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/d203421a8dfabd255d5a22fd2e5b4d4600c4a15d/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fdistributed%2Fraft%2FJRaftServer.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fdistributed%2Fraft%2FJRaftServer.java?ref=d203421a8dfabd255d5a22fd2e5b4d4600c4a15d",
      "patch": "@@ -368,7 +368,7 @@ void registerSelfToCluster(String groupId, PeerId selfIp, Configuration conf) {\n                 }\n                 Loggers.RAFT.warn(\"Failed to join the cluster, retry...\");\n             } catch (Exception e) {\n-                Loggers.RAFT.warn(\"Failed to join the cluster, retry...\", e);\n+                Loggers.RAFT.error(\"Failed to join the cluster, retry...\", e);\n             }\n             ThreadUtils.sleep(1_000L);\n         }",
      "parent_sha": "74345bb9c9319fe81bec7f94d368d9e14f7823f7"
    }
  },
  {
    "oid": "1f28e2854979a94d3054c2cf5476c8a97f2b49c3",
    "message": "[ISSUE #10308] Use Generic Type (#10309)\n\n* code optimization for `ConfigChangeHandler`\r\n\r\n* [ISSUE #9930] fix word spelling error in com.alibaba.nacos.common.http.AbstractHttpClientFactory#ASYNC_IO_REACTOR_NAME\r\n\r\n* [ISSUE #10020] Use Generic Type When Declaring `authFilterRegistration` in com.alibaba.nacos.core.auth.AuthConfig\r\n\r\n* fix code format\r\n\r\n* fix code format\r\n\r\n* Fix Code Format\r\n\r\n* Fix Code Format\r\n\r\n* [ISSUE #10308] Use Generic Type",
    "date": "2023-04-13T10:01:51Z",
    "url": "https://github.com/alibaba/nacos/commit/1f28e2854979a94d3054c2cf5476c8a97f2b49c3",
    "details": {
      "sha": "7f1dd5ee536692e52ea82907ad8402335aebb81d",
      "filename": "prometheus/src/main/java/com/alibaba/nacos/prometheus/filter/PrometheusAuthFilter.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/alibaba/nacos/blob/1f28e2854979a94d3054c2cf5476c8a97f2b49c3/prometheus%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fprometheus%2Ffilter%2FPrometheusAuthFilter.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/1f28e2854979a94d3054c2cf5476c8a97f2b49c3/prometheus%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fprometheus%2Ffilter%2FPrometheusAuthFilter.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/prometheus%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fprometheus%2Ffilter%2FPrometheusAuthFilter.java?ref=1f28e2854979a94d3054c2cf5476c8a97f2b49c3",
      "patch": "@@ -61,7 +61,7 @@ public FilterRegistrationBean<AnonymousAuthenticationFilter> anonymousAuthentica\n     @Bean\n     public FilterRegistrationBean<AuthorizationFilter> authorizationFilter() {\n         FilterRegistrationBean<AuthorizationFilter> registration = new FilterRegistrationBean<>();\n-        registration.setFilter(new AuthorizationFilter(new AuthenticatedAuthorizationManager()));\n+        registration.setFilter(new AuthorizationFilter(new AuthenticatedAuthorizationManager<>()));\n         registration.addUrlPatterns(PROMETHEUS_CONTROLLER_PATH);\n         registration.setName(\"prometheusAuthorizationFilter\");\n         registration.setOrder(4);",
      "parent_sha": "b3b5236cd40d29e9556affece51b40a77cde62c8"
    }
  },
  {
    "oid": "290316d2acca86d2731120b13bb860566f3313c4",
    "message": "not publish server list change event when the servers is not change. (#7165)",
    "date": "2021-11-04T01:58:09Z",
    "url": "https://github.com/alibaba/nacos/commit/290316d2acca86d2731120b13bb860566f3313c4",
    "details": {
      "sha": "01d4c625cdc4f788bdc00e3db82056ee70ae4562",
      "filename": "client/src/main/java/com/alibaba/nacos/client/naming/core/ServerListManager.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/alibaba/nacos/blob/290316d2acca86d2731120b13bb860566f3313c4/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fcore%2FServerListManager.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/290316d2acca86d2731120b13bb860566f3313c4/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fcore%2FServerListManager.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fcore%2FServerListManager.java?ref=290316d2acca86d2731120b13bb860566f3313c4",
      "patch": "@@ -149,10 +149,10 @@ private void refreshServerListIfNeed() {\n             }\n             if (null == serversFromEndpoint || !CollectionUtils.isEqualCollection(list, serversFromEndpoint)) {\n                 NAMING_LOGGER.info(\"[SERVER-LIST] server list is updated: \" + list);\n+                serversFromEndpoint = list;\n+                lastServerListRefreshTime = System.currentTimeMillis();\n+                NotifyCenter.publishEvent(new ServerListChangedEvent());\n             }\n-            serversFromEndpoint = list;\n-            lastServerListRefreshTime = System.currentTimeMillis();\n-            NotifyCenter.publishEvent(new ServerListChangedEvent());\n         } catch (Throwable e) {\n             NAMING_LOGGER.warn(\"failed to update server list\", e);\n         }",
      "parent_sha": "0677323d5958383cf9e8e66a6931f4e0b5f9f01f"
    }
  },
  {
    "oid": "d8eef4f2f5ea5958361aca6ccd79a206f806e6d8",
    "message": "Fix standalone mode cannot use MySQL bug.",
    "date": "2019-07-08T03:00:00Z",
    "url": "https://github.com/alibaba/nacos/commit/d8eef4f2f5ea5958361aca6ccd79a206f806e6d8",
    "details": {
      "sha": "ac8fe8bb488b04de49cd0f34de7615ac875d9f1f",
      "filename": "config/src/main/java/com/alibaba/nacos/config/server/service/DynamicDataSource.java",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/alibaba/nacos/blob/d8eef4f2f5ea5958361aca6ccd79a206f806e6d8/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fservice%2FDynamicDataSource.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/d8eef4f2f5ea5958361aca6ccd79a206f806e6d8/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fservice%2FDynamicDataSource.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fservice%2FDynamicDataSource.java?ref=d8eef4f2f5ea5958361aca6ccd79a206f806e6d8",
      "patch": "@@ -16,6 +16,7 @@\n package com.alibaba.nacos.config.server.service;\n \n import com.alibaba.nacos.config.server.utils.PropertyUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.context.ApplicationContext;\n import org.springframework.context.ApplicationContextAware;\n import org.springframework.stereotype.Component;\n@@ -30,6 +31,9 @@\n @Component\n public class DynamicDataSource implements ApplicationContextAware {\n \n+    @Autowired\n+    private PropertyUtil propertyUtil;\n+\n     private ApplicationContext applicationContext;\n \n     @Override\n@@ -44,7 +48,7 @@ public ApplicationContext getApplicationContext() {\n     public DataSourceService getDataSource() {\n         DataSourceService dataSourceService = null;\n \n-        if (STANDALONE_MODE && !PropertyUtil.isStandaloneUseMysql()) {\n+        if (STANDALONE_MODE && !propertyUtil.isStandaloneUseMysql()) {\n             dataSourceService = (DataSourceService)applicationContext.getBean(\"localDataSourceService\");\n         } else {\n             dataSourceService = (DataSourceService)applicationContext.getBean(\"basicDataSourceService\");",
      "parent_sha": "a15fc9faf74b84ab7dfefc6d91670f691628c727"
    }
  },
  {
    "oid": "4d771b340ed370d8f72765d68befaccab94ecd95",
    "message": "fmt AppTest",
    "date": "2019-07-11T12:19:24Z",
    "url": "https://github.com/alibaba/nacos/commit/4d771b340ed370d8f72765d68befaccab94ecd95",
    "details": {
      "sha": "d190bd8fc5bdf1826cf640812fddba786fb66dcb",
      "filename": "client/src/test/java/com/alibaba/nacos/client/AppTest.java",
      "status": "modified",
      "additions": 8,
      "deletions": 12,
      "changes": 20,
      "blob_url": "https://github.com/alibaba/nacos/blob/4d771b340ed370d8f72765d68befaccab94ecd95/client%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2FAppTest.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/4d771b340ed370d8f72765d68befaccab94ecd95/client%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2FAppTest.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/client%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2FAppTest.java?ref=4d771b340ed370d8f72765d68befaccab94ecd95",
      "patch": "@@ -22,32 +22,28 @@\n /**\n  * Unit test for simple App.\n  */\n-public class AppTest \n-    extends TestCase\n-{\n+public class AppTest\n+    extends TestCase {\n     /**\n      * Create the test case\n      *\n      * @param testName name of the test case\n      */\n-    public AppTest( String testName )\n-    {\n-        super( testName );\n+    public AppTest(String testName) {\n+        super(testName);\n     }\n \n     /**\n      * @return the suite of tests being tested\n      */\n-    public static Test suite()\n-    {\n-        return new TestSuite( AppTest.class );\n+    public static Test suite() {\n+        return new TestSuite(AppTest.class);\n     }\n \n     /**\n      * Rigourous Test :-)\n      */\n-    public void testApp()\n-    {\n-        assertTrue( true );\n+    public void testApp() {\n+        assertTrue(true);\n     }\n }",
      "parent_sha": "a265196a8918eedc8df58eccdfe317708b57b3f0"
    }
  },
  {
    "oid": "c277d2a438a15e504513e7abdbd220b54e0d476d",
    "message": "code optimize",
    "date": "2020-05-25T09:18:05Z",
    "url": "https://github.com/alibaba/nacos/commit/c277d2a438a15e504513e7abdbd220b54e0d476d",
    "details": {
      "sha": "6fdc5638eb640eb6c9b3d9ea4dfcbc49cebb7006",
      "filename": "naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java",
      "status": "modified",
      "additions": 9,
      "deletions": 11,
      "changes": 20,
      "blob_url": "https://github.com/alibaba/nacos/blob/c277d2a438a15e504513e7abdbd220b54e0d476d/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2FServiceManager.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/c277d2a438a15e504513e7abdbd220b54e0d476d/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2FServiceManager.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2FServiceManager.java?ref=c277d2a438a15e504513e7abdbd220b54e0d476d",
      "patch": "@@ -308,17 +308,15 @@ public void updatedHealthStatus(String namespaceId, String serviceName, String s\n \n         if (changed) {\n             pushService.serviceChanged(service);\n-        }\n-\n-        StringBuilder stringBuilder = new StringBuilder();\n-        List<Instance> allIps = service.allIPs();\n-        for (Instance instance : allIps) {\n-            stringBuilder.append(instance.toIPAddr()).append(\"_\").append(instance.isHealthy()).append(\",\");\n-        }\n-\n-        if (changed && Loggers.EVT_LOG.isDebugEnabled()) {\n-            Loggers.EVT_LOG.debug(\"[HEALTH-STATUS-UPDATED] namespace: {}, service: {}, ips: {}\",\n-                service.getNamespaceId(), service.getName(), stringBuilder.toString());\n+            if (Loggers.EVT_LOG.isDebugEnabled()){\n+                StringBuilder stringBuilder = new StringBuilder();\n+                List<Instance> allIps = service.allIPs();\n+                for (Instance instance : allIps) {\n+                    stringBuilder.append(instance.toIPAddr()).append(\"_\").append(instance.isHealthy()).append(\",\");\n+                }\n+                Loggers.EVT_LOG.debug(\"[HEALTH-STATUS-UPDATED] namespace: {}, service: {}, ips: {}\",\n+                    service.getNamespaceId(), service.getName(), stringBuilder.toString());\n+            }\n         }\n \n     }",
      "parent_sha": "fc5089602f6335061f427cd7372e4e1d6336630f"
    }
  },
  {
    "oid": "1e9d9e2a85ed7f6bd83a0bccdf146332d77fbde1",
    "message": "Fix HTTP method value error",
    "date": "2019-01-22T02:08:49Z",
    "url": "https://github.com/alibaba/nacos/commit/1e9d9e2a85ed7f6bd83a0bccdf146332d77fbde1",
    "details": {
      "sha": "acbcc2675244f6f5ef5a69ca4682c62979af3aa2",
      "filename": "common/src/main/java/com/alibaba/nacos/common/util/HttpMethod.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/alibaba/nacos/blob/1e9d9e2a85ed7f6bd83a0bccdf146332d77fbde1/common%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Futil%2FHttpMethod.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/1e9d9e2a85ed7f6bd83a0bccdf146332d77fbde1/common%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Futil%2FHttpMethod.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/common%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Futil%2FHttpMethod.java?ref=1e9d9e2a85ed7f6bd83a0bccdf146332d77fbde1",
      "patch": "@@ -33,7 +33,7 @@ public class HttpMethod {\n \n     public static final String DELETE = \"DELETE\";\n \n-    public static final String OPTIONS = \"PATCH\";\n+    public static final String OPTIONS = \"OPTIONS\";\n \n     public static final String TRACE = \"TRACE\";\n }",
      "parent_sha": "25ad3ff696396d3ec8693135f11155f394338246"
    }
  },
  {
    "oid": "9e652a21df95a53d48a3813f3a6bfb538f85ec32",
    "message": "Revert \"service list testcases\"\n\nThis reverts commit 94eb697e45d456a47e29a1af4381fdf791fbf2ca.",
    "date": "2019-01-15T11:27:55Z",
    "url": "https://github.com/alibaba/nacos/commit/9e652a21df95a53d48a3813f3a6bfb538f85ec32",
    "details": {
      "sha": "25af75031b6b59767d538fb29efbafb46f697ef0",
      "filename": "test/src/test/java/com/alibaba/nacos/test/naming/ServiceListTest.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/alibaba/nacos/blob/9e652a21df95a53d48a3813f3a6bfb538f85ec32/test%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Ftest%2Fnaming%2FServiceListTest.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/9e652a21df95a53d48a3813f3a6bfb538f85ec32/test%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Ftest%2Fnaming%2FServiceListTest.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/test%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Ftest%2Fnaming%2FServiceListTest.java?ref=9e652a21df95a53d48a3813f3a6bfb538f85ec32",
      "patch": "@@ -92,6 +92,7 @@ public void getSubscribeServices() throws NacosException, InterruptedException {\n         Assert.assertTrue(verifyInstanceList(instances, naming.getAllInstances(serviceName)));\n         serviceInfoList = naming.getSubscribeServices();\n \n+        System.out.println(\"dfdfdfd = \" + serviceInfoList);\n         Assert.assertEquals(count+1, serviceInfoList.size());\n     }\n \n@@ -125,7 +126,6 @@ public void onEvent(Event event) {\n \n         naming.deregisterInstance(serviceName, \"127.0.0.1\", TEST_PORT, \"c1\");\n         naming.deregisterInstance(serviceName, \"127.0.0.1\", TEST_PORT, \"c2\");\n-        TimeUnit.SECONDS.sleep(5);\n \n         Assert.assertEquals(count+1, serviceInfoList.size());\n     }",
      "parent_sha": "5c4662ae489b363679a38717f47b79311c0f4199"
    }
  },
  {
    "oid": "5c141593d8120a76e6e4fff79a6967d8358374e8",
    "message": "issue:11943\uff08\u4fdd\u5b58\u5bfc\u5165\u7528\u6237\uff09 (#11945)",
    "date": "2024-04-11T07:28:54Z",
    "url": "https://github.com/alibaba/nacos/commit/5c141593d8120a76e6e4fff79a6967d8358374e8",
    "details": {
      "sha": "d10aa0dacbf562a9166b076b88037c60d012b347",
      "filename": "config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/alibaba/nacos/blob/5c141593d8120a76e6e4fff79a6967d8358374e8/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fcontroller%2FConfigController.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/5c141593d8120a76e6e4fff79a6967d8358374e8/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fcontroller%2FConfigController.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fcontroller%2FConfigController.java?ref=5c141593d8120a76e6e4fff79a6967d8358374e8",
      "patch": "@@ -634,9 +634,9 @@ public RestResult<Map<String, Object>> importAndPublishConfig(HttpServletRequest\n             RestResult<Map<String, Object>> errorResult;\n             if (metaDataZipItem != null && Constants.CONFIG_EXPORT_METADATA_NEW.equals(metaDataZipItem.getItemName())) {\n                 // new export\n-                errorResult = parseImportDataV2(unziped, configInfoList, unrecognizedList, namespace);\n+                errorResult = parseImportDataV2(srcUser, unziped, configInfoList, unrecognizedList, namespace);\n             } else {\n-                errorResult = parseImportData(unziped, configInfoList, unrecognizedList, namespace);\n+                errorResult = parseImportData(srcUser, unziped, configInfoList, unrecognizedList, namespace);\n             }\n             if (errorResult != null) {\n                 return errorResult;\n@@ -682,7 +682,7 @@ public RestResult<Map<String, Object>> importAndPublishConfig(HttpServletRequest\n      * @param namespace        import namespace.\n      * @return error result.\n      */\n-    private RestResult<Map<String, Object>> parseImportData(ZipUtils.UnZipResult unziped,\n+    private RestResult<Map<String, Object>> parseImportData(String srcUser, ZipUtils.UnZipResult unziped,\n             List<ConfigAllInfo> configInfoList, List<Map<String, String>> unrecognizedList, String namespace) {\n         ZipUtils.ZipItem metaDataZipItem = unziped.getMetaDataItem();\n         \n@@ -735,6 +735,7 @@ private RestResult<Map<String, Object>> parseImportData(ZipUtils.UnZipResult unz\n                 }\n                 ci.setTenant(namespace);\n                 ci.setEncryptedDataKey(pair.getFirst());\n+                ci.setCreateUser(srcUser);\n                 configInfoList.add(ci);\n             }\n         }\n@@ -750,7 +751,7 @@ private RestResult<Map<String, Object>> parseImportData(ZipUtils.UnZipResult unz\n      * @param namespace        import namespace.\n      * @return error result.\n      */\n-    private RestResult<Map<String, Object>> parseImportDataV2(ZipUtils.UnZipResult unziped,\n+    private RestResult<Map<String, Object>> parseImportDataV2(String srcUser, ZipUtils.UnZipResult unziped,\n             List<ConfigAllInfo> configInfoList, List<Map<String, String>> unrecognizedList, String namespace) {\n         ZipUtils.ZipItem metaDataItem = unziped.getMetaDataItem();\n         String metaData = metaDataItem.getItemData();\n@@ -826,6 +827,7 @@ private RestResult<Map<String, Object>> parseImportDataV2(ZipUtils.UnZipResult u\n             ci.setAppName(configExportItem.getAppName());\n             ci.setTenant(namespace);\n             ci.setEncryptedDataKey(pair.getFirst());\n+            ci.setCreateUser(srcUser);\n             configInfoList.add(ci);\n         }\n         return null;",
      "parent_sha": "d179e47df44d0ac967fbee3a0a692157c25f3695"
    }
  },
  {
    "oid": "df4f338a41f0563e8e73725624505ed810090fb5",
    "message": "Fixes #984",
    "date": "2019-04-01T03:37:30Z",
    "url": "https://github.com/alibaba/nacos/commit/df4f338a41f0563e8e73725624505ed810090fb5",
    "details": {
      "sha": "838f06d5fcdc7e81b2941fefc33a52c0b9d2b31b",
      "filename": "config/src/main/java/com/alibaba/nacos/config/server/service/DiskUtil.java",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/alibaba/nacos/blob/df4f338a41f0563e8e73725624505ed810090fb5/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fservice%2FDiskUtil.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/df4f338a41f0563e8e73725624505ed810090fb5/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fservice%2FDiskUtil.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fservice%2FDiskUtil.java?ref=df4f338a41f0563e8e73725624505ed810090fb5",
      "patch": "@@ -157,16 +157,17 @@ static public File targetTagFile(String dataId, String group, String tenant, Str\n \n     static public String getConfig(String dataId, String group, String tenant)\n         throws IOException {\n-        FileInputStream fis = null;\n         File file = targetFile(dataId, group, tenant);\n         if (file.exists()) {\n+            FileInputStream fis = null;\n             try {\n                 fis = new FileInputStream(file);\n+                return IOUtils.toString(fis, Constants.ENCODE);\n             } catch (FileNotFoundException e) {\n                 return StringUtils.EMPTY;\n+            } finally {\n+                IOUtils.closeQuietly(fis);\n             }\n-            String content = IOUtils.toString(fis, Constants.ENCODE);\n-            return content;\n         } else {\n             return StringUtils.EMPTY;\n         }",
      "parent_sha": "b1790fa09e3ebd83336792ea5fd88caf7ae49c63"
    }
  },
  {
    "oid": "92ff0a0873dbb144916a33f5a0f0198d63246cb6",
    "message": "fix(remove ConfigLongPollTest):",
    "date": "2019-06-07T08:58:29Z",
    "url": "https://github.com/alibaba/nacos/commit/92ff0a0873dbb144916a33f5a0f0198d63246cb6",
    "details": {
      "sha": "fc21944be4e4f349d4d2dd313d8ecba30e2e57ee",
      "filename": "client/src/test/java/com/alibaba/nacos/client/ConfigLongPollTest.java",
      "status": "modified",
      "additions": 81,
      "deletions": 81,
      "changes": 162,
      "blob_url": "https://github.com/alibaba/nacos/blob/92ff0a0873dbb144916a33f5a0f0198d63246cb6/client%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2FConfigLongPollTest.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/92ff0a0873dbb144916a33f5a0f0198d63246cb6/client%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2FConfigLongPollTest.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/client%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2FConfigLongPollTest.java?ref=92ff0a0873dbb144916a33f5a0f0198d63246cb6",
      "patch": "@@ -1,81 +1,81 @@\n-/*\n- * Copyright 1999-2018 Alibaba Group Holding Ltd.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package com.alibaba.nacos.client;\n-\n-import com.alibaba.nacos.api.NacosFactory;\n-import com.alibaba.nacos.api.PropertyKeyConst;\n-import com.alibaba.nacos.api.config.ConfigService;\n-import com.alibaba.nacos.api.config.listener.Listener;\n-import com.alibaba.nacos.api.exception.NacosException;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-import java.util.Properties;\n-import java.util.concurrent.Executor;\n-\n-/**\n- * @author liaochuntao\n- * @date 2019-06-07 16:37\n- **/\n-public class ConfigLongPollTest {\n-\n-    private ConfigService configService;\n-\n-    @Before\n-    public void init() throws NacosException {\n-        Properties properties = new Properties();\n-        properties.put(PropertyKeyConst.SERVER_ADDR, \"127.0.0.1:8848\");\n-        properties.put(PropertyKeyConst.CONFIG_RETRY_TIME, 2000);\n-        properties.put(PropertyKeyConst.CONFIG_RETRY_TIME, 5000);\n-        configService = NacosFactory.createConfigService(properties);\n-    }\n-\n-    @Test\n-    public void test() throws InterruptedException, NacosException {\n-\n-        synchronized (this) {\n-\n-            configService.addListener(\"test\", \"DEFAULT_GROUP\", new Listener() {\n-                @Override\n-                public Executor getExecutor() {\n-                    return null;\n-                }\n-\n-                @Override\n-                public void receiveConfigInfo(String configInfo) {\n-                    System.out.println(configInfo);\n-                }\n-            });\n-\n-            configService.addListener(\"test-1\", \"DEFAULT_GROUP\", new Listener() {\n-                @Override\n-                public Executor getExecutor() {\n-                    return null;\n-                }\n-\n-                @Override\n-                public void receiveConfigInfo(String configInfo) {\n-                    System.out.println(configInfo);\n-                }\n-            });\n-\n-            wait();\n-        }\n-\n-    }\n-\n-}\n+///*\n+// * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+// *\n+// * Licensed under the Apache License, Version 2.0 (the \"License\");\n+// * you may not use this file except in compliance with the License.\n+// * You may obtain a copy of the License at\n+// *\n+// *      http://www.apache.org/licenses/LICENSE-2.0\n+// *\n+// * Unless required by applicable law or agreed to in writing, software\n+// * distributed under the License is distributed on an \"AS IS\" BASIS,\n+// * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// * See the License for the specific language governing permissions and\n+// * limitations under the License.\n+// */\n+//\n+//package com.alibaba.nacos.client;\n+//\n+//import com.alibaba.nacos.api.NacosFactory;\n+//import com.alibaba.nacos.api.PropertyKeyConst;\n+//import com.alibaba.nacos.api.config.ConfigService;\n+//import com.alibaba.nacos.api.config.listener.Listener;\n+//import com.alibaba.nacos.api.exception.NacosException;\n+//import org.junit.Before;\n+//import org.junit.Test;\n+//\n+//import java.util.Properties;\n+//import java.util.concurrent.Executor;\n+//\n+///**\n+// * @author liaochuntao\n+// * @date 2019-06-07 16:37\n+// **/\n+//public class ConfigLongPollTest {\n+//\n+//    private ConfigService configService;\n+//\n+//    @Before\n+//    public void init() throws NacosException {\n+//        Properties properties = new Properties();\n+//        properties.put(PropertyKeyConst.SERVER_ADDR, \"127.0.0.1:8848\");\n+//        properties.put(PropertyKeyConst.CONFIG_RETRY_TIME, 2000);\n+//        properties.put(PropertyKeyConst.CONFIG_RETRY_TIME, 5000);\n+//        configService = NacosFactory.createConfigService(properties);\n+//    }\n+//\n+//    @Test\n+//    public void test() throws InterruptedException, NacosException {\n+//\n+//        synchronized (this) {\n+//\n+//            configService.addListener(\"test\", \"DEFAULT_GROUP\", new Listener() {\n+//                @Override\n+//                public Executor getExecutor() {\n+//                    return null;\n+//                }\n+//\n+//                @Override\n+//                public void receiveConfigInfo(String configInfo) {\n+//                    System.out.println(configInfo);\n+//                }\n+//            });\n+//\n+//            configService.addListener(\"test-1\", \"DEFAULT_GROUP\", new Listener() {\n+//                @Override\n+//                public Executor getExecutor() {\n+//                    return null;\n+//                }\n+//\n+//                @Override\n+//                public void receiveConfigInfo(String configInfo) {\n+//                    System.out.println(configInfo);\n+//                }\n+//            });\n+//\n+//            wait();\n+//        }\n+//\n+//    }\n+//\n+//}",
      "parent_sha": "be213f56011b72f997b4fea4603a9f2a4f752378"
    }
  },
  {
    "oid": "30ab49b1f63fefc7d234c28c15934865ad063b43",
    "message": "fix: fix jraft response instance (#4644)",
    "date": "2021-01-07T05:52:41Z",
    "url": "https://github.com/alibaba/nacos/commit/30ab49b1f63fefc7d234c28c15934865ad063b43",
    "details": {
      "sha": "c3fa803cc7208fb8d4ea87bb3ca79fd8e51ddc10",
      "filename": "core/src/main/java/com/alibaba/nacos/core/distributed/raft/utils/JRaftUtils.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/alibaba/nacos/blob/30ab49b1f63fefc7d234c28c15934865ad063b43/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fdistributed%2Fraft%2Futils%2FJRaftUtils.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/30ab49b1f63fefc7d234c28c15934865ad063b43/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fdistributed%2Fraft%2Futils%2FJRaftUtils.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fdistributed%2Fraft%2Futils%2FJRaftUtils.java?ref=30ab49b1f63fefc7d234c28c15934865ad063b43",
      "patch": "@@ -71,8 +71,8 @@ public static RpcServer initRpcServer(JRaftServer server, PeerId peerId) {\n         registry.registerResponseInstance(Log.class.getName(), Response.getDefaultInstance());\n         registry.registerResponseInstance(GetRequest.class.getName(), Response.getDefaultInstance());\n     \n-        registry.registerResponseInstance(WriteRequest.class.getName(), WriteRequest.getDefaultInstance());\n-        registry.registerResponseInstance(ReadRequest.class.getName(), ReadRequest.getDefaultInstance());\n+        registry.registerResponseInstance(WriteRequest.class.getName(), Response.getDefaultInstance());\n+        registry.registerResponseInstance(ReadRequest.class.getName(), Response.getDefaultInstance());\n         \n         final RpcServer rpcServer = raftRpcFactory.createRpcServer(peerId.getEndpoint());\n         RaftRpcServerFactory.addRaftRequestProcessors(rpcServer, RaftExecutor.getRaftCoreExecutor(),",
      "parent_sha": "5f225d49c1108115e637d6b2debd939bf44f02a0"
    }
  },
  {
    "oid": "b1ffbad4830730ad754ee7999bea290a96d77e51",
    "message": "#2237 directly use byte[]",
    "date": "2020-01-15T03:52:13Z",
    "url": "https://github.com/alibaba/nacos/commit/b1ffbad4830730ad754ee7999bea290a96d77e51",
    "details": {
      "sha": "ab7b9402af11066ae0b6c26c733f8e65ff78d586",
      "filename": "naming/src/main/java/com/alibaba/nacos/naming/controllers/DistroController.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/alibaba/nacos/blob/b1ffbad4830730ad754ee7999bea290a96d77e51/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcontrollers%2FDistroController.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/b1ffbad4830730ad754ee7999bea290a96d77e51/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcontrollers%2FDistroController.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcontrollers%2FDistroController.java?ref=b1ffbad4830730ad754ee7999bea290a96d77e51",
      "patch": "@@ -103,13 +103,13 @@ public ResponseEntity get(@RequestBody JSONObject body) throws Exception {\n             datumMap.put(key, datum);\n         }\n \n-        String content = new String(serializer.serialize(datumMap), StandardCharsets.UTF_8);\n+        byte[] content = serializer.serialize(datumMap);\n         return ResponseEntity.ok(content);\n     }\n \n     @GetMapping(\"/datums\")\n     public ResponseEntity getAllDatums() {\n-        String content = new String(serializer.serialize(dataStore.getDataMap()), StandardCharsets.UTF_8);\n+        byte[] content = serializer.serialize(dataStore.getDataMap());\n         return ResponseEntity.ok(content);\n     }\n }",
      "parent_sha": "c99747609ff487c13c6adc58dcd8677e8062f1ab"
    }
  },
  {
    "oid": "fa1421b5f1834be8b09bf75f389d09b63a3f1a43",
    "message": "fix: https://github.com/alibaba/nacos/issues/2527",
    "date": "2020-03-25T16:07:15Z",
    "url": "https://github.com/alibaba/nacos/commit/fa1421b5f1834be8b09bf75f389d09b63a3f1a43",
    "details": {
      "sha": "c32b216e1d5e20df1bf12fc6e297eddad15ad872",
      "filename": "client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/alibaba/nacos/blob/fa1421b5f1834be8b09bf75f389d09b63a3f1a43/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fnet%2FNamingProxy.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/fa1421b5f1834be8b09bf75f389d09b63a3f1a43/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fnet%2FNamingProxy.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fnet%2FNamingProxy.java?ref=fa1421b5f1834be8b09bf75f389d09b63a3f1a43",
      "patch": "@@ -48,7 +48,9 @@\n \n import java.io.IOException;\n import java.io.StringReader;\n+import java.io.UnsupportedEncodingException;\n import java.net.HttpURLConnection;\n+import java.net.URLEncoder;\n import java.util.*;\n import java.util.concurrent.*;\n \n@@ -327,7 +329,11 @@ public JSONObject sendBeat(BeatInfo beatInfo, boolean lightBeatEnabled) throws N\n         Map<String, String> params = new HashMap<String, String>(8);\n         String body = StringUtils.EMPTY;\n         if (!lightBeatEnabled) {\n-            body = \"beat=\" + JSON.toJSONString(beatInfo);\n+            try {\n+                body = \"beat=\" + URLEncoder.encode(JSON.toJSONString(beatInfo), \"UTF-8\");\n+            } catch (UnsupportedEncodingException e) {\n+                throw new NacosException(NacosException.SERVER_ERROR, \"encod beatInfo error\", e);\n+            }\n         }\n         params.put(CommonParams.NAMESPACE_ID, namespaceId);\n         params.put(CommonParams.SERVICE_NAME, beatInfo.getServiceName());",
      "parent_sha": "53be70a5416be19a8967faafe6dd614b60853e92"
    }
  },
  {
    "oid": "deab304d5bc45c0740b82e678a25ab1f7c65063d",
    "message": "fix log error",
    "date": "2020-02-27T06:41:25Z",
    "url": "https://github.com/alibaba/nacos/commit/deab304d5bc45c0740b82e678a25ab1f7c65063d",
    "details": {
      "sha": "d2f5d134fbc731d28d9a25559a391a34207e82b0",
      "filename": "naming/src/main/java/com/alibaba/nacos/naming/push/PushService.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/alibaba/nacos/blob/deab304d5bc45c0740b82e678a25ab1f7c65063d/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fpush%2FPushService.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/deab304d5bc45c0740b82e678a25ab1f7c65063d/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fpush%2FPushService.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fpush%2FPushService.java?ref=deab304d5bc45c0740b82e678a25ab1f7c65063d",
      "patch": "@@ -647,7 +647,7 @@ public void run() {\n                 try {\n                     udpSocket.receive(packet);\n \n-                    String json = new String(packet.getData(), 0, packet.getLength(), Charset.forName(\"UTF-8\")).trim();\n+                    String json = new String(packet.getData(), 0, packet.getLength(), StandardCharsets.UTF_8).trim();\n                     AckPacket ackPacket = JSON.parseObject(json, AckPacket.class);\n \n                     InetSocketAddress socketAddress = (InetSocketAddress) packet.getSocketAddress();\n@@ -667,7 +667,7 @@ public void run() {\n \n                     long pushCost = System.currentTimeMillis() - udpSendTimeMap.get(ackKey);\n \n-                    Loggers.PUSH.info(\"received ack: {} from: {}:, cost: {} ms, unacked: {}, total push: {}\",\n+                    Loggers.PUSH.info(\"received ack: {} from: {}:{}, cost: {} ms, unacked: {}, total push: {}\",\n                         json, ip, port, pushCost, ackMap.size(), totalPush);\n \n                     pushCostMap.put(ackKey, pushCost);",
      "parent_sha": "1b9e1db3519b00a7791b572b5e618dd9c43f983c"
    }
  },
  {
    "oid": "481d25a6c7c2f8a6af8404c312155588d76e1312",
    "message": "listener bugfix (#5079)",
    "date": "2021-03-12T02:30:52Z",
    "url": "https://github.com/alibaba/nacos/commit/481d25a6c7c2f8a6af8404c312155588d76e1312",
    "details": {
      "sha": "96c4636a56ed2eedbc1b394520e485f7e2bbf201",
      "filename": "config/src/main/java/com/alibaba/nacos/config/server/controller/CommunicationController.java",
      "status": "modified",
      "additions": 13,
      "deletions": 10,
      "changes": 23,
      "blob_url": "https://github.com/alibaba/nacos/blob/481d25a6c7c2f8a6af8404c312155588d76e1312/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fcontroller%2FCommunicationController.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/481d25a6c7c2f8a6af8404c312155588d76e1312/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fcontroller%2FCommunicationController.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fcontroller%2FCommunicationController.java?ref=481d25a6c7c2f8a6af8404c312155588d76e1312",
      "patch": "@@ -16,6 +16,7 @@\n \n package com.alibaba.nacos.config.server.controller;\n \n+import com.alibaba.nacos.common.utils.CollectionUtils;\n import com.alibaba.nacos.config.server.constant.Constants;\n import com.alibaba.nacos.config.server.model.SampleResult;\n import com.alibaba.nacos.config.server.remote.ConfigChangeListenContext;\n@@ -102,18 +103,20 @@ public SampleResult getSubClientConfig(@RequestParam(\"dataId\") String dataId, @R\n         // rpc listeners.\n         String groupKey = GroupKey2.getKey(dataId, group, tenant);\n         Set<String> listenersClients = configChangeListenContext.getListeners(groupKey);\n-        SampleResult rpcSample = new SampleResult();\n-        Map<String, String> lisentersGroupkeyStatus = new HashMap<String, String>(listenersClients.size(), 1);\n-        for (String connectionId : listenersClients) {\n-            Connection client = connectionManager.getConnection(connectionId);\n-            if (client != null) {\n-                String md5 = configChangeListenContext.getListenKeyMd5(connectionId, groupKey);\n-                if (md5 != null) {\n-                    lisentersGroupkeyStatus.put(client.getMetaInfo().getClientIp(), md5);\n+        if (CollectionUtils.isNotEmpty(listenersClients)) {\n+            Map<String, String> lisentersGroupkeyStatus = new HashMap<String, String>(listenersClients.size(), 1);\n+            for (String connectionId : listenersClients) {\n+                Connection client = connectionManager.getConnection(connectionId);\n+                if (client != null) {\n+                    String md5 = configChangeListenContext.getListenKeyMd5(connectionId, groupKey);\n+                    if (md5 != null) {\n+                        lisentersGroupkeyStatus.put(client.getMetaInfo().getClientIp(), md5);\n+                    }\n                 }\n             }\n+            result.getLisentersGroupkeyStatus().putAll(lisentersGroupkeyStatus);\n         }\n-        result.getLisentersGroupkeyStatus().putAll(lisentersGroupkeyStatus);\n+        \n         return result;\n     }\n     \n@@ -136,5 +139,5 @@ public SampleResult getSubClientConfigByIp(HttpServletRequest request, HttpServl\n         return result;\n         \n     }\n-\n+    \n }",
      "parent_sha": "711afc7bac6c6df2768668124cf0904e485f6d3c"
    }
  },
  {
    "oid": "27b0a0cd8a108910ed749b0796f484740adfeed4",
    "message": "[ISSUE #6643] Add unit tests for package com.alibaba.nacos.naming.core.v2.service. (#6644)",
    "date": "2021-08-13T01:47:00Z",
    "url": "https://github.com/alibaba/nacos/commit/27b0a0cd8a108910ed749b0796f484740adfeed4",
    "details": {
      "sha": "a367864a8bbbd6b87c31b4289b620196787da63e",
      "filename": "naming/src/test/java/com/alibaba/nacos/naming/core/v2/service/impl/PersistentClientOperationServiceImplTest.java",
      "status": "modified",
      "additions": 48,
      "deletions": 1,
      "changes": 49,
      "blob_url": "https://github.com/alibaba/nacos/blob/27b0a0cd8a108910ed749b0796f484740adfeed4/naming%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2Fv2%2Fservice%2Fimpl%2FPersistentClientOperationServiceImplTest.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/27b0a0cd8a108910ed749b0796f484740adfeed4/naming%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2Fv2%2Fservice%2Fimpl%2FPersistentClientOperationServiceImplTest.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2Fv2%2Fservice%2Fimpl%2FPersistentClientOperationServiceImplTest.java?ref=27b0a0cd8a108910ed749b0796f484740adfeed4",
      "patch": "@@ -17,22 +17,30 @@\n package com.alibaba.nacos.naming.core.v2.service.impl;\n \n import com.alibaba.nacos.api.naming.pojo.Instance;\n+import com.alibaba.nacos.consistency.DataOperation;\n import com.alibaba.nacos.consistency.Serializer;\n import com.alibaba.nacos.consistency.cp.CPProtocol;\n+import com.alibaba.nacos.consistency.entity.ReadRequest;\n+import com.alibaba.nacos.consistency.entity.Response;\n import com.alibaba.nacos.consistency.entity.WriteRequest;\n import com.alibaba.nacos.core.distributed.ProtocolManager;\n+import com.alibaba.nacos.naming.core.v2.ServiceManager;\n+import com.alibaba.nacos.naming.core.v2.client.impl.IpPortBasedClient;\n import com.alibaba.nacos.naming.core.v2.client.manager.impl.PersistentIpPortClientManager;\n import com.alibaba.nacos.naming.core.v2.pojo.Service;\n import com.alibaba.nacos.naming.pojo.Subscriber;\n import com.alibaba.nacos.sys.utils.ApplicationUtils;\n+import org.junit.Assert;\n import org.junit.Before;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n import org.mockito.Mock;\n+import org.mockito.Mockito;\n import org.mockito.junit.MockitoJUnitRunner;\n import org.springframework.context.ConfigurableApplicationContext;\n \n import java.lang.reflect.Field;\n+\n import static org.mockito.ArgumentMatchers.any;\n import static org.mockito.Mockito.times;\n import static org.mockito.Mockito.verify;\n@@ -78,7 +86,6 @@ public void setUp() throws Exception {\n         ApplicationUtils.injectContext(applicationContext);\n         Field serializerField = PersistentClientOperationServiceImpl.class.getDeclaredField(\"serializer\");\n         serializerField.setAccessible(true);\n-        clientManager = new PersistentIpPortClientManager();\n         persistentClientOperationServiceImpl = new PersistentClientOperationServiceImpl(clientManager);\n         serializerField.set(persistentClientOperationServiceImpl, serializer);\n     }\n@@ -104,4 +111,44 @@ public void testSubscribeService() {\n     public void testUnsubscribeService() {\n         persistentClientOperationServiceImpl.unsubscribeService(service, subscriber, clientId);\n     }\n+    \n+    @Test(expected = UnsupportedOperationException.class)\n+    public void testOnRequest() {\n+        persistentClientOperationServiceImpl.onRequest(ReadRequest.newBuilder().build());\n+    }\n+    \n+    @Test\n+    public void testOnApply() {\n+        PersistentClientOperationServiceImpl.InstanceStoreRequest request = new PersistentClientOperationServiceImpl.InstanceStoreRequest();\n+        Service service1 = Service.newService(\"A\", \"B\", \"C\");\n+        request.setService(service1);\n+        request.setClientId(\"xxxx\");\n+        request.setInstance(new Instance());\n+        \n+        Mockito.when(serializer.deserialize(Mockito.any())).thenReturn(request);\n+        \n+        Mockito.when(clientManager.contains(Mockito.anyString())).thenReturn(true);\n+    \n+        IpPortBasedClient ipPortBasedClient = Mockito.mock(IpPortBasedClient.class);\n+        Mockito.when(clientManager.getClient(Mockito.anyString())).thenReturn(ipPortBasedClient);\n+        \n+        WriteRequest writeRequest = WriteRequest.newBuilder()\n+                .setOperation(DataOperation.ADD.name())\n+                .build();\n+        Response response = persistentClientOperationServiceImpl.onApply(writeRequest);\n+        Assert.assertTrue(response.getSuccess());\n+    \n+        writeRequest = WriteRequest.newBuilder()\n+                .setOperation(DataOperation.DELETE.name())\n+                .build();\n+        response = persistentClientOperationServiceImpl.onApply(writeRequest);\n+        Assert.assertTrue(response.getSuccess());\n+        ServiceManager.getInstance().removeSingleton(service1);\n+    \n+        writeRequest = WriteRequest.newBuilder()\n+                .setOperation(DataOperation.VERIFY.name())\n+                .build();\n+        response = persistentClientOperationServiceImpl.onApply(writeRequest);\n+        Assert.assertFalse(response.getSuccess());\n+    }\n }\n\\ No newline at end of file",
      "parent_sha": "5388290e3f96e2cba1ba72877cc13a226eb9154a"
    }
  },
  {
    "oid": "810827c91c5f1fca9045c2b77929c74149287c11",
    "message": "Fix serverStatus api jackson error",
    "date": "2020-05-29T04:05:22Z",
    "url": "https://github.com/alibaba/nacos/commit/810827c91c5f1fca9045c2b77929c74149287c11",
    "details": {
      "sha": "bf4a694aa06f2e2083fc0475be65b0d95f0af297",
      "filename": "naming/src/main/java/com/alibaba/nacos/naming/controllers/ServiceController.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/alibaba/nacos/blob/810827c91c5f1fca9045c2b77929c74149287c11/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcontrollers%2FServiceController.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/810827c91c5f1fca9045c2b77929c74149287c11/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcontrollers%2FServiceController.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcontrollers%2FServiceController.java?ref=810827c91c5f1fca9045c2b77929c74149287c11",
      "patch": "@@ -288,8 +288,8 @@ public String serviceStatus(HttpServletRequest request) throws Exception {\n         JsonNode json = JacksonUtils.toObj(value);\n \n         //format: service1@@checksum@@@service2@@checksum\n-        String statuses = json.get(\"statuses\").toString();\n-        String serverIp = json.get(\"clientIP\").toString();\n+        String statuses = json.get(\"statuses\").asText();\n+        String serverIp = json.get(\"clientIP\").asText();\n \n         if (!memberManager.hasMember(serverIp)) {\n             throw new NacosException(NacosException.INVALID_PARAM,",
      "parent_sha": "93f8533565176c46232db406f3ddcc45388c584b"
    }
  },
  {
    "oid": "9bb08d9f4d938c8029551b661d86e14c43d79014",
    "message": "remote reconnect bugfix (#5136)\n\n* remote reconnect bugfix\r\n\r\n* remote reconnect bugfix",
    "date": "2021-03-19T01:30:08Z",
    "url": "https://github.com/alibaba/nacos/commit/9bb08d9f4d938c8029551b661d86e14c43d79014",
    "details": {
      "sha": "1676caa7cb26aa9949cdd46c13686e0d95a41ba6",
      "filename": "common/src/main/java/com/alibaba/nacos/common/remote/client/RpcClient.java",
      "status": "modified",
      "additions": 3,
      "deletions": 7,
      "changes": 10,
      "blob_url": "https://github.com/alibaba/nacos/blob/9bb08d9f4d938c8029551b661d86e14c43d79014/common%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Fremote%2Fclient%2FRpcClient.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/9bb08d9f4d938c8029551b661d86e14c43d79014/common%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Fremote%2Fclient%2FRpcClient.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/common%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Fremote%2Fclient%2FRpcClient.java?ref=9bb08d9f4d938c8029551b661d86e14c43d79014",
      "patch": "@@ -301,12 +301,8 @@ public void run() {\n                                     LoggerUtils.printIfInfoEnabled(LOGGER,\n                                             \"[{}]Server healthy check fail,currentConnection={}\", name,\n                                             currentConnection.getConnectionId());\n-                                    if (rpcClientStatus\n-                                            .compareAndSet(RpcClientStatus.RUNNING, RpcClientStatus.UNHEALTHY)) {\n-                                        reconnectContext = new ReconnectContext(null, false);\n-                                    } else {\n-                                        continue;\n-                                    }\n+                                    rpcClientStatus.set(RpcClientStatus.UNHEALTHY);\n+                                    reconnectContext = new ReconnectContext(null, false);\n                                     \n                                 } else {\n                                     lastActiveTimeStamp = System.currentTimeMillis();\n@@ -565,7 +561,7 @@ protected void reconnect(final ServerInfo recommendServerInfo, boolean onRequest\n             }\n             \n         } catch (Exception e) {\n-            LoggerUtils.printIfWarnEnabled(LOGGER, \"[{}] Fail to  connect to server \", name);\n+            LoggerUtils.printIfWarnEnabled(LOGGER, \"[{}] Fail to  re connect to server ,error is \", name, e);\n         }\n     }\n     ",
      "parent_sha": "e1dc906b2464bc469fcb0e45e9114d7183481f4f"
    }
  },
  {
    "oid": "445377d49caca0a2b034b82b83b5fd5fa3821c13",
    "message": "fix #2577: Naming client http read timeout and connect timeout controlled by the same property",
    "date": "2020-04-04T04:56:57Z",
    "url": "https://github.com/alibaba/nacos/commit/445377d49caca0a2b034b82b83b5fd5fa3821c13",
    "details": {
      "sha": "f24ac7dc433d0d13e6ba5e7d31577dd9744cc0ae",
      "filename": "client/src/main/java/com/alibaba/nacos/client/naming/net/HttpClient.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/alibaba/nacos/blob/445377d49caca0a2b034b82b83b5fd5fa3821c13/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fnet%2FHttpClient.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/445377d49caca0a2b034b82b83b5fd5fa3821c13/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fnet%2FHttpClient.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fnet%2FHttpClient.java?ref=445377d49caca0a2b034b82b83b5fd5fa3821c13",
      "patch": "@@ -38,8 +38,8 @@\n  */\n public class HttpClient {\n \n-    public static final int TIME_OUT_MILLIS = Integer\n-        .getInteger(\"com.alibaba.nacos.client.naming.ctimeout\", 50000);\n+    public static final int READ_TIME_OUT_MILLIS = Integer\n+        .getInteger(\"com.alibaba.nacos.client.naming.rtimeout\", 50000);\n     public static final int CON_TIME_OUT_MILLIS = Integer\n         .getInteger(\"com.alibaba.nacos.client.naming.ctimeout\", 3000);\n     private static final boolean ENABLE_HTTPS = Boolean\n@@ -73,7 +73,7 @@ public static HttpResult request(String url, List<String> headers, Map<String, S\n \n             setHeaders(conn, headers, encoding);\n             conn.setConnectTimeout(CON_TIME_OUT_MILLIS);\n-            conn.setReadTimeout(TIME_OUT_MILLIS);\n+            conn.setReadTimeout(READ_TIME_OUT_MILLIS);\n             conn.setRequestMethod(method);\n             conn.setDoOutput(true);\n             if (StringUtils.isNotBlank(body)) {",
      "parent_sha": "2e1b5a0303c25f832f3938b7aa2aa9d7aba3dbbf"
    }
  },
  {
    "oid": "eb6ea55fef20cf76f6da870d3b6f00c63befe5dc",
    "message": "load server abilities from ServerAbilities if config doesn't define",
    "date": "2022-09-04T09:11:26Z",
    "url": "https://github.com/alibaba/nacos/commit/eb6ea55fef20cf76f6da870d3b6f00c63befe5dc",
    "details": {
      "sha": "61d32bc64519a9c213a07f7f4d0a9fe7c22d6427",
      "filename": "core/src/main/java/com/alibaba/nacos/core/ability/control/ServerAbilityControlManager.java",
      "status": "modified",
      "additions": 18,
      "deletions": 6,
      "changes": 24,
      "blob_url": "https://github.com/alibaba/nacos/blob/eb6ea55fef20cf76f6da870d3b6f00c63befe5dc/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fability%2Fcontrol%2FServerAbilityControlManager.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/eb6ea55fef20cf76f6da870d3b6f00c63befe5dc/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fability%2Fcontrol%2FServerAbilityControlManager.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fability%2Fcontrol%2FServerAbilityControlManager.java?ref=eb6ea55fef20cf76f6da870d3b6f00c63befe5dc",
      "patch": "@@ -32,6 +32,7 @@\n \n import java.util.Collections;\n import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.Map;\n import java.util.Optional;\n import java.util.Set;\n@@ -71,19 +72,30 @@ public ServerAbilityControlManager() {\n     \n     @Override\n     protected Map<AbilityKey, Boolean> getCurrentNodeSupportAbility() {\n-        Set<AbilityKey> abilityKeys = ServerAbilities.getStaticAbilities().keySet();\n+        // static abilities\n+        Map<AbilityKey, Boolean> staticAbilities = ServerAbilities.getStaticAbilities();\n+        // all function server can support\n+        Set<AbilityKey> abilityKeys = staticAbilities.keySet();\n         Map<AbilityKey, Boolean> abilityTable = new HashMap<>(abilityKeys.size());\n+        // if not define in config, then load from ServerAbilities\n+        Set<AbilityKey> unIncludedInConfig = new HashSet<>();\n         abilityKeys.forEach(abilityKey -> {\n             String key = AbilityConfigs.PREFIX + abilityKey.getName();\n             try {\n-                // default true\n-                Boolean property = EnvUtil.getProperty(key, Boolean.class, true);\n-                abilityTable.put(abilityKey, property);\n+                Boolean property = EnvUtil.getProperty(key, Boolean.class);\n+                // if not null\n+                if (property != null) {\n+                    abilityTable.put(abilityKey, property);\n+                } else {\n+                    unIncludedInConfig.add(abilityKey);\n+                }\n             } catch (Exception e) {\n-                // default true\n-                abilityTable.put(abilityKey, true);\n+                // from ServerAbilities\n+                unIncludedInConfig.add(abilityKey);\n             }\n         });\n+        // load from ServerAbilities\n+        unIncludedInConfig.forEach(abilityKey -> abilityTable.put(abilityKey, staticAbilities.get(abilityKey)));\n         return abilityTable;\n     }\n     ",
      "parent_sha": "fd6938566f1653781a389ce30a8979cd78371fc2"
    }
  },
  {
    "oid": "ff0838268aa4f53fc22e97ff0c5edf0d565e579d",
    "message": "Fix distro client verify return error code problem.",
    "date": "2021-03-08T09:48:54Z",
    "url": "https://github.com/alibaba/nacos/commit/ff0838268aa4f53fc22e97ff0c5edf0d565e579d",
    "details": {
      "sha": "35836ee694030c3b909134e7228ea1fa7c661228",
      "filename": "naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/DistroDataRequestHandler.java",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/alibaba/nacos/blob/ff0838268aa4f53fc22e97ff0c5edf0d565e579d/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fremote%2Frpc%2Fhandler%2FDistroDataRequestHandler.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/ff0838268aa4f53fc22e97ff0c5edf0d565e579d/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fremote%2Frpc%2Fhandler%2FDistroDataRequestHandler.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fremote%2Frpc%2Fhandler%2FDistroDataRequestHandler.java?ref=ff0838268aa4f53fc22e97ff0c5edf0d565e579d",
      "patch": "@@ -72,8 +72,7 @@ public DistroDataResponse handle(DistroDataRequest request, RequestMeta meta) th\n     private DistroDataResponse handleVerify(DistroData distroData, RequestMeta meta) {\n         DistroDataResponse result = new DistroDataResponse();\n         if (!distroProtocol.onVerify(distroData, meta.getClientIp())) {\n-            result.setErrorCode(ResponseCode.FAIL.getCode());\n-            result.setMessage(\"[DISTRO-FAILED] distro data verify failed\");\n+            result.setErrorInfo(ResponseCode.FAIL.getCode(), \"[DISTRO-FAILED] distro data verify failed\");\n         }\n         return result;\n     }",
      "parent_sha": "b007f302b601cf0ae413975ab40656bfa19c1e68"
    }
  },
  {
    "oid": "861e8c52336c255ce5b02d07240fc509773dd6f3",
    "message": "judge endpoint",
    "date": "2022-08-12T10:21:46Z",
    "url": "https://github.com/alibaba/nacos/commit/861e8c52336c255ce5b02d07240fc509773dd6f3",
    "details": {
      "sha": "362f1f4c1c5ad6524d22dd2e7bdd909e6701a3e1",
      "filename": "client/src/main/java/com/alibaba/nacos/client/naming/core/ServerListManager.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/alibaba/nacos/blob/861e8c52336c255ce5b02d07240fc509773dd6f3/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fcore%2FServerListManager.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/861e8c52336c255ce5b02d07240fc509773dd6f3/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fcore%2FServerListManager.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fcore%2FServerListManager.java?ref=861e8c52336c255ce5b02d07240fc509773dd6f3",
      "patch": "@@ -88,7 +88,7 @@ public ServerListManager(Properties properties, String namespace) {\n         if (!serverList.isEmpty()) {\n             currentIndex.set(new Random().nextInt(serverList.size()));\n         }\n-        if (serverList.isEmpty() && StringUtils.isNotEmpty(endpoint)) {\n+        if (serverList.isEmpty() && StringUtils.isEmpty(endpoint)) {\n             throw new NacosLoadException(\"serverList is empty,please check configuration\");\n         }\n     }",
      "parent_sha": "b91abb83cb7958b655bf4679269f8a0f7b57c494"
    }
  },
  {
    "oid": "5290c1653914c1610328115a34c923728758e9b6",
    "message": "#498 Update test case",
    "date": "2019-01-09T13:08:05Z",
    "url": "https://github.com/alibaba/nacos/commit/5290c1653914c1610328115a34c923728758e9b6",
    "details": {
      "sha": "fd80a1d5d2bc2426105e1994990cfb6b474c238d",
      "filename": "test/src/test/java/com/alibaba/nacos/test/naming/RegisterInstance_ITCase.java",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/alibaba/nacos/blob/5290c1653914c1610328115a34c923728758e9b6/test%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Ftest%2Fnaming%2FRegisterInstance_ITCase.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/5290c1653914c1610328115a34c923728758e9b6/test%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Ftest%2Fnaming%2FRegisterInstance_ITCase.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/test%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Ftest%2Fnaming%2FRegisterInstance_ITCase.java?ref=5290c1653914c1610328115a34c923728758e9b6",
      "patch": "@@ -42,9 +42,9 @@\n  * @author wangtong.wt\n  * @date 2018/6/20\n  */\n-//@RunWith(SpringRunner.class)\n-//@SpringBootTest(classes = NamingApp.class, properties = {\"server.servlet.context-path=/nacos\"},\n-//        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\n+@RunWith(SpringRunner.class)\n+@SpringBootTest(classes = NamingApp.class, properties = {\"server.servlet.context-path=/nacos\"},\n+        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\n public class RegisterInstance_ITCase {\n \n     private NamingService naming;\n@@ -54,14 +54,14 @@ public class RegisterInstance_ITCase {\n \n     @Before\n     public void init() throws Exception {\n-//        if (naming == null) {\n-//            TimeUnit.SECONDS.sleep(10);\n-//            naming = NamingFactory.createNamingService(\"127.0.0.1\" + \":\" + port);\n-//        }\n+        if (naming == null) {\n+            TimeUnit.SECONDS.sleep(10);\n+            naming = NamingFactory.createNamingService(\"127.0.0.1\" + \":\" + port);\n+        }\n     }\n \n     @Test\n-//    @Ignore\n+    @Ignore\n     public void regService() throws NacosException, InterruptedException {\n \n         Properties properties = new Properties();",
      "parent_sha": "ec8117d7cdcda63b0331fccd6eef443c39c0afe7"
    }
  },
  {
    "oid": "71af535efd93aed0507a7a5284b421e0385e0112",
    "message": "#502 Rename key",
    "date": "2019-02-20T03:45:32Z",
    "url": "https://github.com/alibaba/nacos/commit/71af535efd93aed0507a7a5284b421e0385e0112",
    "details": {
      "sha": "f3a14217ec877e994582e01363463b5769fe47c1",
      "filename": "naming/src/main/java/com/alibaba/nacos/naming/consistency/KeyBuilder.java",
      "status": "modified",
      "additions": 10,
      "deletions": 9,
      "changes": 19,
      "blob_url": "https://github.com/alibaba/nacos/blob/71af535efd93aed0507a7a5284b421e0385e0112/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fconsistency%2FKeyBuilder.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/71af535efd93aed0507a7a5284b421e0385e0112/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fconsistency%2FKeyBuilder.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fconsistency%2FKeyBuilder.java?ref=71af535efd93aed0507a7a5284b421e0385e0112",
      "patch": "@@ -26,7 +26,8 @@\n  */\n public class KeyBuilder {\n \n-    public static final String KEY_CONNECTOR = \"##\";\n+    public static final String NAMESPACE_KEY_CONNECTOR = \"##\";\n+\n     private static final String EPHEMERAL_KEY_PREFIX = \"ephemeral.\";\n \n     public static final String SERVICE_META_KEY_PREFIX = \"com.alibaba.nacos.naming.domains.meta.\";\n@@ -38,12 +39,12 @@ public class KeyBuilder {\n     public static final String BRIEF_INSTANCE_LIST_KEY_PREFIX = \"iplist.\";\n \n     private static String buildEphemeralInstanceListKey(String namespaceId, String serviceName) {\n-        return INSTANCE_LIST_KEY_PREFIX + EPHEMERAL_KEY_PREFIX + namespaceId + KEY_CONNECTOR\n+        return INSTANCE_LIST_KEY_PREFIX + EPHEMERAL_KEY_PREFIX + namespaceId + NAMESPACE_KEY_CONNECTOR\n             + serviceName;\n     }\n \n     private static String buildPersistentInstanceListKey(String namespaceId, String serviceName) {\n-        return INSTANCE_LIST_KEY_PREFIX + namespaceId + KEY_CONNECTOR\n+        return INSTANCE_LIST_KEY_PREFIX + namespaceId + NAMESPACE_KEY_CONNECTOR\n             + serviceName;\n     }\n \n@@ -53,7 +54,7 @@ public static String buildInstanceListKey(String namespaceId, String serviceName\n     }\n \n     public static String buildServiceMetaKey(String namespaceId, String serviceName) {\n-        return SERVICE_META_KEY_PREFIX + namespaceId + KEY_CONNECTOR + serviceName;\n+        return SERVICE_META_KEY_PREFIX + namespaceId + NAMESPACE_KEY_CONNECTOR + serviceName;\n     }\n \n     public static String getSwitchDomainKey() {\n@@ -77,7 +78,7 @@ public static boolean matchSwitchKey(String key) {\n     }\n \n     public static boolean matchServiceName(String key, String namespaceId, String serviceName) {\n-        return key.endsWith(namespaceId + KEY_CONNECTOR + serviceName);\n+        return key.endsWith(namespaceId + NAMESPACE_KEY_CONNECTOR + serviceName);\n     }\n \n     public static boolean matchServiceMetaKey(String key, String namespaceId, String serviceName) {\n@@ -122,21 +123,21 @@ public static String getNamespace(String key) {\n         }\n \n         if (matchServiceMetaKey(key)) {\n-            return key.split(KEY_CONNECTOR)[0].substring(SERVICE_META_KEY_PREFIX.length());\n+            return key.split(NAMESPACE_KEY_CONNECTOR)[0].substring(SERVICE_META_KEY_PREFIX.length());\n         }\n \n         if (matchEphemeralInstanceListKey(key)) {\n-            return key.split(KEY_CONNECTOR)[0].substring(INSTANCE_LIST_KEY_PREFIX.length() + EPHEMERAL_KEY_PREFIX.length());\n+            return key.split(NAMESPACE_KEY_CONNECTOR)[0].substring(INSTANCE_LIST_KEY_PREFIX.length() + EPHEMERAL_KEY_PREFIX.length());\n         }\n \n         if (matchInstanceListKey(key)) {\n-            return key.split(KEY_CONNECTOR)[0].substring(INSTANCE_LIST_KEY_PREFIX.length());\n+            return key.split(NAMESPACE_KEY_CONNECTOR)[0].substring(INSTANCE_LIST_KEY_PREFIX.length());\n         }\n \n         return StringUtils.EMPTY;\n     }\n \n     public static String getServiceName(String key) {\n-        return key.split(KEY_CONNECTOR)[1];\n+        return key.split(NAMESPACE_KEY_CONNECTOR)[1];\n     }\n }",
      "parent_sha": "7af1b480b854f703ad25516937736eff57e06eb8"
    }
  },
  {
    "oid": "c2367d687c47f0537a38e5ff473a625c9f5e7ff7",
    "message": "Fix Logging in with the wrong username or password will cause jackson serialization results to fail (#3695) (#3721)",
    "date": "2020-09-01T02:01:12Z",
    "url": "https://github.com/alibaba/nacos/commit/c2367d687c47f0537a38e5ff473a625c9f5e7ff7",
    "details": {
      "sha": "bebba34eac5519b66beb959e05da24f7cbdba2b0",
      "filename": "common/src/main/java/com/alibaba/nacos/common/http/param/Header.java",
      "status": "modified",
      "additions": 15,
      "deletions": 3,
      "changes": 18,
      "blob_url": "https://github.com/alibaba/nacos/blob/c2367d687c47f0537a38e5ff473a625c9f5e7ff7/common%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Fhttp%2Fparam%2FHeader.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/c2367d687c47f0537a38e5ff473a625c9f5e7ff7/common%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Fhttp%2Fparam%2FHeader.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/common%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Fhttp%2Fparam%2FHeader.java?ref=c2367d687c47f0537a38e5ff473a625c9f5e7ff7",
      "patch": "@@ -51,9 +51,18 @@ private Header() {\n     public static Header newInstance() {\n         return new Header();\n     }\n-    \n+\n+    /**\n+     * Add the key and value to the header.\n+     *\n+     * @param key the key\n+     * @param value the value\n+     * @return header\n+     */\n     public Header addParam(String key, String value) {\n-        header.put(key, value);\n+        if (StringUtils.isNotEmpty(key)) {\n+            header.put(key, value);\n+        }\n         return this;\n     }\n     \n@@ -107,7 +116,10 @@ public Header addAll(List<String> list) {\n             throw new IllegalArgumentException(\"list size must be a multiple of 2\");\n         }\n         for (int i = 0; i < list.size(); ) {\n-            header.put(list.get(i++), list.get(i++));\n+            String key = list.get(i++);\n+            if (StringUtils.isNotEmpty(key)) {\n+                header.put(key, list.get(i++));\n+            }\n         }\n         return this;\n     }",
      "parent_sha": "879bfaf7dee3c12597eef218e6ea9dfb7c639f24"
    }
  },
  {
    "oid": "01e3352e8e00bf75e1e54970f4aa04edc1cf2b20",
    "message": "[ISSUE #5884] add permission check to history config. (#6173)",
    "date": "2021-06-28T02:10:41Z",
    "url": "https://github.com/alibaba/nacos/commit/01e3352e8e00bf75e1e54970f4aa04edc1cf2b20",
    "details": {
      "sha": "59e07f72237531f2b83e661c21fca57252c40b0f",
      "filename": "config/src/main/java/com/alibaba/nacos/config/server/controller/HistoryController.java",
      "status": "modified",
      "additions": 57,
      "deletions": 4,
      "changes": 61,
      "blob_url": "https://github.com/alibaba/nacos/blob/01e3352e8e00bf75e1e54970f4aa04edc1cf2b20/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fcontroller%2FHistoryController.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/01e3352e8e00bf75e1e54970f4aa04edc1cf2b20/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fcontroller%2FHistoryController.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fcontroller%2FHistoryController.java?ref=01e3352e8e00bf75e1e54970f4aa04edc1cf2b20",
      "patch": "@@ -16,6 +16,11 @@\n \n package com.alibaba.nacos.config.server.controller;\n \n+import com.alibaba.nacos.auth.annotation.Secured;\n+import com.alibaba.nacos.auth.common.ActionTypes;\n+import com.alibaba.nacos.auth.exception.AccessException;\n+import com.alibaba.nacos.common.utils.Objects;\n+import com.alibaba.nacos.config.server.auth.ConfigResourceParser;\n import com.alibaba.nacos.config.server.constant.Constants;\n import com.alibaba.nacos.config.server.model.ConfigHistoryInfo;\n import com.alibaba.nacos.config.server.model.Page;\n@@ -42,6 +47,8 @@ public class HistoryController {\n     \n     /**\n      * Query the list history config.\n+     * notes:\n+     * @since 2.0.3 add {@link Secured} for history config permission check.\n      *\n      * @param dataId   dataId string value.\n      * @param group    group string value.\n@@ -53,6 +60,7 @@ public class HistoryController {\n      * @return the page of history config.\n      */\n     @GetMapping(params = \"search=accurate\")\n+    @Secured(action = ActionTypes.READ, parser = ConfigResourceParser.class)\n     public Page<ConfigHistoryInfo> listConfigHistory(@RequestParam(\"dataId\") String dataId,\n             @RequestParam(\"group\") String group,\n             @RequestParam(value = \"tenant\", required = false, defaultValue = StringUtils.EMPTY) String tenant,\n@@ -69,25 +77,70 @@ public Page<ConfigHistoryInfo> listConfigHistory(@RequestParam(\"dataId\") String\n     \n     /**\n      * Query the detailed configuration history information.\n+     * notes:\n+     * @since 2.0.3 add {@link Secured}, dataId, groupId and tenant for history config permission check.\n      *\n      * @param nid history_config_info nid\n+     * @param dataId dataId  @since 2.0.3\n+     * @param group groupId  @since 2.0.3\n+     * @param tenant tenantId  @since 2.0.3\n      * @return history config info\n      */\n     @GetMapping\n-    public ConfigHistoryInfo getConfigHistoryInfo(@RequestParam(\"nid\") Long nid) {\n-        return persistService.detailConfigHistory(nid);\n+    @Secured(action = ActionTypes.READ, parser = ConfigResourceParser.class)\n+    public ConfigHistoryInfo getConfigHistoryInfo(@RequestParam(\"dataId\") String dataId, @RequestParam(\"group\") String group,\n+            @RequestParam(value = \"tenant\", required = false, defaultValue = StringUtils.EMPTY) String tenant, @RequestParam(\"nid\") Long nid)\n+            throws AccessException {\n+        ConfigHistoryInfo configHistoryInfo = persistService.detailConfigHistory(nid);\n+        if (Objects.isNull(configHistoryInfo)) {\n+            return null;\n+        }\n+        // check if history config match the input\n+        checkHistoryInfoPermission(configHistoryInfo, dataId, group, tenant);\n+        return configHistoryInfo;\n+    }\n+    \n+    /**\n+     * Check if the input dataId and group match the history config.\n+     *\n+     * @param configHistoryInfo history config.\n+     * @param dataId dataId\n+     * @param group group\n+     * @param tenant tenant\n+     * @throws AccessException not match exception.\n+     * @since 2.0.3\n+     */\n+    private void checkHistoryInfoPermission(ConfigHistoryInfo configHistoryInfo, String dataId, String group, String tenant) throws AccessException {\n+        if (Objects.equals(configHistoryInfo.getDataId(), dataId) && Objects.equals(configHistoryInfo.getGroup(), group)) {\n+            return;\n+        }\n+        throw new AccessException(\"Please check dataId and group.\");\n     }\n     \n     /**\n      * Query previous config history information.\n+     * notes:\n+     * @since 2.0.3 add {@link Secured}, dataId, groupId and tenant for history config permission check.\n      *\n      * @param id config_info id\n+     * @param dataId dataId  @since 2.0.3\n+     * @param group groupId  @since 2.0.3\n+     * @param tenant tenantId  @since 2.0.3\n      * @return history config info\n      * @since 1.4.0\n      */\n     @GetMapping(value = \"/previous\")\n-    public ConfigHistoryInfo getPreviousConfigHistoryInfo(@RequestParam(\"id\") Long id) {\n-        return persistService.detailPreviousConfigHistory(id);\n+    @Secured(action = ActionTypes.READ, parser = ConfigResourceParser.class)\n+    public ConfigHistoryInfo getPreviousConfigHistoryInfo(@RequestParam(\"dataId\") String dataId, @RequestParam(\"group\") String group,\n+            @RequestParam(value = \"tenant\", required = false, defaultValue = StringUtils.EMPTY) String tenant, @RequestParam(\"id\") Long id)\n+            throws AccessException {\n+        ConfigHistoryInfo configHistoryInfo = persistService.detailPreviousConfigHistory(id);\n+        if (Objects.isNull(configHistoryInfo)) {\n+            return null;\n+        }\n+        // check if history config match the input\n+        checkHistoryInfoPermission(configHistoryInfo, dataId, group, tenant);\n+        return configHistoryInfo;\n     }\n     \n }",
      "parent_sha": "38e907584ab897f634b56739b1b7661dc4e594a7"
    }
  },
  {
    "oid": "08c26d6fae62882f9ef20e13516a0585698d6578",
    "message": "Resolve dependency import path errors (#6070)\n\n* fix #3215 bug by improve code quality for client.\r\n\r\n* Fix line indent.\r\n\r\n* Resolve dependency import path errors\r\n\r\nCo-authored-by: jiele.cao <jiele.cao@sinocare.com>",
    "date": "2021-06-16T02:29:27Z",
    "url": "https://github.com/alibaba/nacos/commit/08c26d6fae62882f9ef20e13516a0585698d6578",
    "details": {
      "sha": "67f8ec1232f2500afc1db84b30ac6fa60bc3ce7a",
      "filename": "config/src/main/java/com/alibaba/nacos/config/server/utils/AppNameUtils.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/alibaba/nacos/blob/08c26d6fae62882f9ef20e13516a0585698d6578/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Futils%2FAppNameUtils.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/08c26d6fae62882f9ef20e13516a0585698d6578/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Futils%2FAppNameUtils.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Futils%2FAppNameUtils.java?ref=08c26d6fae62882f9ef20e13516a0585698d6578",
      "patch": "@@ -14,7 +14,7 @@\n  * limitations under the License.\n  */\n \n-package com.alibaba.nacos.client.utils;\n+package com.alibaba.nacos.config.server.utils;\n \n import com.alibaba.nacos.common.utils.StringUtils;\n ",
      "parent_sha": "1b18f2c3ca5d92458853bce642abf20a2c7de32c"
    }
  },
  {
    "oid": "d07e89098d273e586ef2c185ecda562875238515",
    "message": "memory optimize. (#5273)",
    "date": "2021-04-08T08:11:55Z",
    "url": "https://github.com/alibaba/nacos/commit/d07e89098d273e586ef2c185ecda562875238515",
    "details": {
      "sha": "8334d7185c157c08f145573724307fe97c7e20bf",
      "filename": "core/src/main/java/com/alibaba/nacos/core/distributed/raft/NacosClosure.java",
      "status": "modified",
      "additions": 10,
      "deletions": 3,
      "changes": 13,
      "blob_url": "https://github.com/alibaba/nacos/blob/d07e89098d273e586ef2c185ecda562875238515/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fdistributed%2Fraft%2FNacosClosure.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/d07e89098d273e586ef2c185ecda562875238515/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fdistributed%2Fraft%2FNacosClosure.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fdistributed%2Fraft%2FNacosClosure.java?ref=d07e89098d273e586ef2c185ecda562875238515",
      "patch": "@@ -29,11 +29,11 @@\n  */\n public class NacosClosure implements Closure {\n     \n-    private final Message message;\n+    private Message message;\n     \n-    private final Closure closure;\n+    private Closure closure;\n     \n-    private final NacosStatus nacosStatus = new NacosStatus();\n+    private NacosStatus nacosStatus = new NacosStatus();\n     \n     public NacosClosure(Message message, Closure closure) {\n         this.message = message;\n@@ -44,6 +44,13 @@ public NacosClosure(Message message, Closure closure) {\n     public void run(Status status) {\n         nacosStatus.setStatus(status);\n         closure.run(nacosStatus);\n+        clear();\n+    }\n+    \n+    private void clear() {\n+        message = null;\n+        closure = null;\n+        nacosStatus = null;\n     }\n     \n     public void setResponse(Response response) {",
      "parent_sha": "68fb60b6c4797dd55b1e12c75bf0b8b08e042eb8"
    }
  },
  {
    "oid": "4ce897e40945cce1cd1d8d22a307f8d558a17474",
    "message": "bug: fix the problem of incorrect judgment of http response code in SubscribeManager#getSubscribers() method (#3879)",
    "date": "2020-09-21T07:18:23Z",
    "url": "https://github.com/alibaba/nacos/commit/4ce897e40945cce1cd1d8d22a307f8d558a17474",
    "details": {
      "sha": "fcefcc0b3a1b6b285a03084b45005d28ded7d0d3",
      "filename": "naming/src/main/java/com/alibaba/nacos/naming/core/SubscribeManager.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/alibaba/nacos/blob/4ce897e40945cce1cd1d8d22a307f8d558a17474/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2FSubscribeManager.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/4ce897e40945cce1cd1d8d22a307f8d558a17474/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2FSubscribeManager.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2FSubscribeManager.java?ref=4ce897e40945cce1cd1d8d22a307f8d558a17474",
      "patch": "@@ -102,7 +102,7 @@ public List<Subscriber> getSubscribers(String serviceName, String namespaceId, b\n                                 + UtilsAndCommons.NACOS_NAMING_CONTEXT + SUBSCRIBER_ON_SYNC_URL, new ArrayList<>(),\n                         paramValues);\n                 \n-                if (!result.ok()) {\n+                if (result.ok()) {\n                     Subscribers subscribers = JacksonUtils.toObj(result.getData(), Subscribers.class);\n                     subscriberList.addAll(subscribers.getSubscribers());\n                 }",
      "parent_sha": "7fd4d9a5d1206063460828de747afe132466bf58"
    }
  },
  {
    "oid": "01faa47c766ebfee22d451f254178bb454d5af46",
    "message": "\u5feb\u7167\u9996\u6b21\u52a0\u8f7d\u5931\u8d25\u95ee\u9898 (#9838)",
    "date": "2023-01-13T02:36:57Z",
    "url": "https://github.com/alibaba/nacos/commit/01faa47c766ebfee22d451f254178bb454d5af46",
    "details": {
      "sha": "7fdd0d9ee273da458e2e2e6da151eb89189fb1db",
      "filename": "core/src/main/java/com/alibaba/nacos/core/cluster/remote/ClusterRpcClientProxy.java",
      "status": "modified",
      "additions": 2,
      "deletions": 7,
      "changes": 9,
      "blob_url": "https://github.com/alibaba/nacos/blob/01faa47c766ebfee22d451f254178bb454d5af46/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fcluster%2Fremote%2FClusterRpcClientProxy.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/01faa47c766ebfee22d451f254178bb454d5af46/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fcluster%2Fremote%2FClusterRpcClientProxy.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fcluster%2Fremote%2FClusterRpcClientProxy.java?ref=01faa47c766ebfee22d451f254178bb454d5af46",
      "patch": "@@ -29,7 +29,6 @@\n import com.alibaba.nacos.common.utils.CollectionUtils;\n import com.alibaba.nacos.core.cluster.Member;\n import com.alibaba.nacos.core.cluster.MemberChangeListener;\n-import com.alibaba.nacos.core.cluster.MemberUtil;\n import com.alibaba.nacos.core.cluster.MembersChangeEvent;\n import com.alibaba.nacos.core.cluster.ServerMemberManager;\n import com.alibaba.nacos.core.utils.Loggers;\n@@ -88,17 +87,13 @@ private void refresh(List<Member> members) throws NacosException {\n         \n         //ensure to create client of new members\n         for (Member member : members) {\n-            \n-            if (MemberUtil.isSupportedLongCon(member)) {\n-                createRpcClientAndStart(member, ConnectionType.GRPC);\n-            }\n+            createRpcClientAndStart(member, ConnectionType.GRPC);\n         }\n         \n         //shutdown and remove old members.\n         Set<Map.Entry<String, RpcClient>> allClientEntrys = RpcClientFactory.getAllClientEntries();\n         Iterator<Map.Entry<String, RpcClient>> iterator = allClientEntrys.iterator();\n-        List<String> newMemberKeys = members.stream().filter(MemberUtil::isSupportedLongCon)\n-                .map(this::memberClientKey).collect(Collectors.toList());\n+        List<String> newMemberKeys = members.stream().map(this::memberClientKey).collect(Collectors.toList());\n         while (iterator.hasNext()) {\n             Map.Entry<String, RpcClient> next1 = iterator.next();\n             if (next1.getKey().startsWith(\"Cluster-\") && !newMemberKeys.contains(next1.getKey())) {",
      "parent_sha": "ba15e233625d95bf69a8f4ed6ebc9e4757fda3b6"
    }
  },
  {
    "oid": "98f7066519bdfad7480017d8cf9a682d2d36816f",
    "message": "[ISSUE #9423] ExternalDataSourceProperties add isEmpty check to support external config (#9439)\n\n* [conf]Update group_id length from 255 to 128\r\n\r\n* [impr]\u4fee\u6539\u5916\u90e8\u6570\u636e\u6e90\u52a0\u8f7d\u9a71\u52a8\u540d\u79f0\u5224\u65ad\u903b\u8f91\uff0c\u5916\u90e8\u914d\u7f6e\u4e3a\u7a7a\u65f6,\u624d\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4mysql\u914d\u7f6e\r\n\r\n* [impr]\u4fee\u6539\u5916\u90e8\u6570\u636e\u6e90\u52a0\u8f7d\u9a71\u52a8\u540d\u79f0\u5224\u65ad\u903b\u8f91\uff0c\u5916\u90e8\u914d\u7f6e\u4e3a\u7a7a\u65f6,\u624d\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4mysql\u914d\u7f6e\r\n\r\n* [impr]\u4fee\u6539\u53d8\u91cf\u540d\u79f0\uff0c\u786e\u4fddCI\u53ef\u4ee5\u901a\u8fc7",
    "date": "2022-11-02T06:14:29Z",
    "url": "https://github.com/alibaba/nacos/commit/98f7066519bdfad7480017d8cf9a682d2d36816f",
    "details": {
      "sha": "8d3b493ecb77bd58cb6768ea8ca945c487a95ce1",
      "filename": "config/src/main/java/com/alibaba/nacos/config/server/service/datasource/ExternalDataSourceProperties.java",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/alibaba/nacos/blob/98f7066519bdfad7480017d8cf9a682d2d36816f/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fservice%2Fdatasource%2FExternalDataSourceProperties.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/98f7066519bdfad7480017d8cf9a682d2d36816f/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fservice%2Fdatasource%2FExternalDataSourceProperties.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fservice%2Fdatasource%2FExternalDataSourceProperties.java?ref=98f7066519bdfad7480017d8cf9a682d2d36816f",
      "patch": "@@ -14,6 +14,7 @@\n package com.alibaba.nacos.config.server.service.datasource;\n \n import com.alibaba.nacos.common.utils.Preconditions;\n+import com.alibaba.nacos.common.utils.StringUtils;\n import com.zaxxer.hikari.HikariDataSource;\n import org.apache.commons.collections.CollectionUtils;\n import org.springframework.boot.context.properties.bind.Bindable;\n@@ -78,12 +79,16 @@ List<HikariDataSource> build(Environment environment, Callback<HikariDataSource>\n             int currentSize = index + 1;\n             Preconditions.checkArgument(url.size() >= currentSize, \"db.url.%s is null\", index);\n             DataSourcePoolProperties poolProperties = DataSourcePoolProperties.build(environment);\n-            poolProperties.setDriverClassName(JDBC_DRIVER_NAME);\n+            if (StringUtils.isEmpty(poolProperties.getDataSource().getDriverClassName())) {\n+                poolProperties.setDriverClassName(JDBC_DRIVER_NAME);\n+            }\n             poolProperties.setJdbcUrl(url.get(index).trim());\n             poolProperties.setUsername(getOrDefault(user, index, user.get(0)).trim());\n             poolProperties.setPassword(getOrDefault(password, index, password.get(0)).trim());\n             HikariDataSource ds = poolProperties.getDataSource();\n-            ds.setConnectionTestQuery(TEST_QUERY);\n+            if (StringUtils.isEmpty(ds.getConnectionTestQuery())) {\n+                ds.setConnectionTestQuery(TEST_QUERY);\n+            }\n             dataSources.add(ds);\n             callback.accept(ds);\n         }",
      "parent_sha": "0a8027641eea9430b0c7f89ef5c175c6eae5ab50"
    }
  },
  {
    "oid": "a76f0771e72562963b980cc9c2ff6b5ac97a397f",
    "message": "For #10734,fix the param check rule (#10858)",
    "date": "2023-07-28T01:33:07Z",
    "url": "https://github.com/alibaba/nacos/commit/a76f0771e72562963b980cc9c2ff6b5ac97a397f",
    "details": {
      "sha": "d2b24c47861fd6cdbb560158e197ba5f57020a99",
      "filename": "common/src/main/java/com/alibaba/nacos/common/paramcheck/ParamCheckRules.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/alibaba/nacos/blob/a76f0771e72562963b980cc9c2ff6b5ac97a397f/common%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Fparamcheck%2FParamCheckRules.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/a76f0771e72562963b980cc9c2ff6b5ac97a397f/common%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Fparamcheck%2FParamCheckRules.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/common%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Fparamcheck%2FParamCheckRules.java?ref=a76f0771e72562963b980cc9c2ff6b5ac97a397f",
      "patch": "@@ -37,7 +37,7 @@ public class ParamCheckRules {\n     \n     public static final int MAX_SERVICE_NAME_LENGTH = 512;\n     \n-    public static final String SERVICE_NAME_PATTERN_STRING = \"^(?!@).((?!@@)[^\\\\u4E00-\\\\u9FA5])*$\";\n+    public static final String SERVICE_NAME_PATTERN_STRING = \"^(?!@).((?!@@)[^\\\\u4E00-\\\\u9FA5\\\\s])*$\";\n     \n     public static final int MAX_GROUP_LENGTH = 128;\n     \n@@ -49,7 +49,7 @@ public class ParamCheckRules {\n     \n     public static final int MAX_IP_LENGTH = 128;\n     \n-    public static final String IP_PATTERN_STRING = \"^[^\\\\u4E00-\\\\u9FA5]*$\";\n+    public static final String IP_PATTERN_STRING = \"^[^\\\\u4E00-\\\\u9FA5\\\\s]*$\";\n     \n     public static final int MAX_PORT = 65535;\n     ",
      "parent_sha": "4321e777a433ff323dc53e7359d682fcc62a2dee"
    }
  },
  {
    "oid": "27216603c23901b0f3f0135ae0f78fef9a1856a7",
    "message": "(bugfix)  check null when obtaining the RpcClient. (#11042)\n\n* fix-11028\r\n\r\n* fix-11028\r\n\r\n* fix-11028",
    "date": "2023-09-06T09:08:22Z",
    "url": "https://github.com/alibaba/nacos/commit/27216603c23901b0f3f0135ae0f78fef9a1856a7",
    "details": {
      "sha": "ac6f8b9af3da4ae33a984a348aed233c5634357b",
      "filename": "core/src/main/java/com/alibaba/nacos/core/cluster/remote/ClusterRpcClientProxy.java",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/alibaba/nacos/blob/27216603c23901b0f3f0135ae0f78fef9a1856a7/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fcluster%2Fremote%2FClusterRpcClientProxy.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/27216603c23901b0f3f0135ae0f78fef9a1856a7/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fcluster%2Fremote%2FClusterRpcClientProxy.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fcluster%2Fremote%2FClusterRpcClientProxy.java?ref=27216603c23901b0f3f0135ae0f78fef9a1856a7",
      "patch": "@@ -98,7 +98,10 @@ private void refresh(List<Member> members) throws NacosException {\n             Map.Entry<String, RpcClient> next1 = iterator.next();\n             if (next1.getKey().startsWith(\"Cluster-\") && !newMemberKeys.contains(next1.getKey())) {\n                 Loggers.CLUSTER.info(\"member leave,destroy client of member - > : {}\", next1.getKey());\n-                RpcClientFactory.getClient(next1.getKey()).shutdown();\n+                RpcClient client = RpcClientFactory.getClient(next1.getKey());\n+                if (client != null) {\n+                    RpcClientFactory.getClient(next1.getKey()).shutdown();\n+                }\n                 iterator.remove();\n             }\n         }",
      "parent_sha": "35bc0373a5b8a62abb710b9908710eaa5a1e3c67"
    }
  },
  {
    "oid": "f5d27829013a824196fd015e62c83e1cd57e2fc2",
    "message": "Update NamingProxy.java",
    "date": "2019-02-22T09:43:54Z",
    "url": "https://github.com/alibaba/nacos/commit/f5d27829013a824196fd015e62c83e1cd57e2fc2",
    "details": {
      "sha": "8c09966e0571310bb9ff36ef5e4f0d0b8961e36e",
      "filename": "client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/alibaba/nacos/blob/f5d27829013a824196fd015e62c83e1cd57e2fc2/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fnet%2FNamingProxy.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/f5d27829013a824196fd015e62c83e1cd57e2fc2/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fnet%2FNamingProxy.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fnet%2FNamingProxy.java?ref=f5d27829013a824196fd015e62c83e1cd57e2fc2",
      "patch": "@@ -116,7 +116,7 @@ public List<String> getServerListFromEndpoint() {\n         try {\n             String urlString = \"http://\" + endpoint + \"/nacos/serverlist\";\n \n-            String nacosNamingMode = System.getProperty(SystemPropertyKeyConst.NACOS_NAMING_MODE, \"Naming\");\n+            String nacosNamingMode = System.getProperty(SystemPropertyKeyConst.NACOS_NAMING_REQUEST_MODULE, \"Naming\");\n \n             List<String> headers = Arrays.asList(\"Client-Version\", UtilAndComs.VERSION,\n                 \"Accept-Encoding\", \"gzip,deflate,sdch\", \"Connection\", \"Keep-Alive\",",
      "parent_sha": "e916431d65886546b39fe2172fcac47ac97d4b0e"
    }
  },
  {
    "oid": "2cb96d12086f6cb5c30efa025713144e4599d875",
    "message": "#923 Recognize 'cluster'",
    "date": "2019-04-03T03:52:33Z",
    "url": "https://github.com/alibaba/nacos/commit/2cb96d12086f6cb5c30efa025713144e4599d875",
    "details": {
      "sha": "2be944606f27165052276c756ee328b78d313e48",
      "filename": "naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/alibaba/nacos/blob/2cb96d12086f6cb5c30efa025713144e4599d875/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcontrollers%2FInstanceController.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/2cb96d12086f6cb5c30efa025713144e4599d875/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcontrollers%2FInstanceController.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcontrollers%2FInstanceController.java?ref=2cb96d12086f6cb5c30efa025713144e4599d875",
      "patch": "@@ -112,6 +112,7 @@ public String deregister(HttpServletRequest request) throws Exception {\n \n         Service service = serviceManager.getService(namespaceId, serviceName);\n         if (service == null) {\n+            Loggers.SRV_LOG.warn(\"remove instance from non-exist service: {}\", serviceName);\n             return \"ok\";\n         }\n \n@@ -332,10 +333,12 @@ private Instance getIPAddress(HttpServletRequest request) {\n         String ip = WebUtils.required(request, \"ip\");\n         String port = WebUtils.required(request, \"port\");\n         String weight = WebUtils.optional(request, \"weight\", \"1\");\n-        String cluster = WebUtils.optional(request, CommonParams.CLUSTER_NAME, UtilsAndCommons.DEFAULT_CLUSTER_NAME);\n+        String cluster = WebUtils.optional(request, CommonParams.CLUSTER_NAME, StringUtils.EMPTY);\n+        if (StringUtils.isBlank(cluster)) {\n+            cluster = WebUtils.optional(request, \"cluster\", UtilsAndCommons.DEFAULT_CLUSTER_NAME);\n+        }\n         boolean healthy = BooleanUtils.toBoolean(WebUtils.optional(request, \"healthy\", \"true\"));\n         boolean enabled = BooleanUtils.toBoolean(WebUtils.optional(request, \"enable\", \"true\"));\n-        // If server running in CP mode, we set this flag to false:\n         boolean ephemeral = BooleanUtils.toBoolean(WebUtils.optional(request, \"ephemeral\",\n             String.valueOf(switchDomain.isDefaultInstanceEphemeral())));\n ",
      "parent_sha": "4dc40311e68bfeb54269e6bd7e380a6d05796b95"
    }
  },
  {
    "oid": "29ba11eb887d8c291e2a7a4e1f691f51537cbc18",
    "message": "for #3621 (#3668)",
    "date": "2020-08-24T05:25:29Z",
    "url": "https://github.com/alibaba/nacos/commit/29ba11eb887d8c291e2a7a4e1f691f51537cbc18",
    "details": {
      "sha": "51e83f6f0ad85fa1c48e3edcefc0806615af2e84",
      "filename": "client/src/main/java/com/alibaba/nacos/client/security/SecurityProxy.java",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/alibaba/nacos/blob/29ba11eb887d8c291e2a7a4e1f691f51537cbc18/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fsecurity%2FSecurityProxy.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/29ba11eb887d8c291e2a7a4e1f691f51537cbc18/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fsecurity%2FSecurityProxy.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fsecurity%2FSecurityProxy.java?ref=29ba11eb887d8c291e2a7a4e1f691f51537cbc18",
      "patch": "@@ -28,6 +28,8 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+import java.io.UnsupportedEncodingException;\n+import java.net.URLEncoder;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n@@ -125,13 +127,13 @@ public boolean login(List<String> servers) {\n      * @param server server address\n      * @return true if login successfully\n      */\n-    public boolean login(String server) {\n+    public boolean login(String server) throws UnsupportedEncodingException {\n         \n         if (StringUtils.isNotBlank(username)) {\n             Map<String, String> params = new HashMap<String, String>(2);\n             Map<String, String> bodyMap = new HashMap<String, String>(2);\n             params.put(\"username\", username);\n-            bodyMap.put(\"password\", password);\n+            bodyMap.put(\"password\", URLEncoder.encode(password, \"utf-8\"));\n             String url = \"http://\" + server + contextPath + LOGIN_URL;\n             \n             if (server.contains(Constants.HTTP_PREFIX)) {",
      "parent_sha": "3428d8830e885837c3328b0a41a86a28dbaf2c9c"
    }
  },
  {
    "oid": "ca7e4cc7805518f9739f5733a3e44a7672997fc1",
    "message": "[#5549] Fix Unit test for NamingSnapshotOperationTest.java (#5550)",
    "date": "2021-04-30T10:05:45Z",
    "url": "https://github.com/alibaba/nacos/commit/ca7e4cc7805518f9739f5733a3e44a7672997fc1",
    "details": {
      "sha": "8d7fc707c7d60d91b054502c3e51066ddcea71f5",
      "filename": "naming/src/test/java/com/alibaba/nacos/naming/consistency/persistent/impl/NamingSnapshotOperationTest.java",
      "status": "modified",
      "additions": 14,
      "deletions": 6,
      "changes": 20,
      "blob_url": "https://github.com/alibaba/nacos/blob/ca7e4cc7805518f9739f5733a3e44a7672997fc1/naming%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fconsistency%2Fpersistent%2Fimpl%2FNamingSnapshotOperationTest.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/ca7e4cc7805518f9739f5733a3e44a7672997fc1/naming%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fconsistency%2Fpersistent%2Fimpl%2FNamingSnapshotOperationTest.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fconsistency%2Fpersistent%2Fimpl%2FNamingSnapshotOperationTest.java?ref=ca7e4cc7805518f9739f5733a3e44a7672997fc1",
      "patch": "@@ -22,12 +22,13 @@\n import com.alibaba.nacos.core.distributed.raft.utils.RaftExecutor;\n import com.alibaba.nacos.core.storage.kv.KvStorage;\n import com.alibaba.nacos.sys.env.EnvUtil;\n-import com.alibaba.nacos.sys.utils.DiskUtils;\n import org.junit.After;\n import org.junit.Assert;\n import org.junit.Before;\n import org.junit.Test;\n+import org.junit.runner.RunWith;\n import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n import org.springframework.mock.env.MockEnvironment;\n \n import java.nio.file.Paths;\n@@ -36,6 +37,10 @@\n import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.concurrent.locks.ReentrantReadWriteLock;\n \n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.doAnswer;\n+\n+@RunWith(MockitoJUnitRunner.class)\n public class NamingSnapshotOperationTest {\n     \n     static {\n@@ -46,21 +51,23 @@ public class NamingSnapshotOperationTest {\n     @Mock\n     private KvStorage storage;\n     \n-    private final String tmpDir = Paths.get(EnvUtil.getNacosTmpDir(), \"rocks_test\").toString();\n-    \n     private final String snapshotDir = Paths.get(EnvUtil.getNacosTmpDir(), \"rocks_snapshot_test\").toString();\n     \n     private final ReentrantReadWriteLock lock = new ReentrantReadWriteLock();\n     \n+    private boolean isSnapshoted = false;\n+    \n     @Before\n-    public void init() {\n-        DiskUtils.deleteQuietly(Paths.get(EnvUtil.getNacosTmpDir()));\n+    public void init() throws Exception {\n+        doAnswer(invocationOnMock -> {\n+            isSnapshoted = true;\n+            return null;\n+        }).when(storage).doSnapshot(any(String.class));\n     }\n     \n     @After\n     public void after() {\n         storage.shutdown();\n-        DiskUtils.deleteQuietly(Paths.get(EnvUtil.getNacosTmpDir()));\n     }\n     \n     @Test\n@@ -75,6 +82,7 @@ public void testNamingSnapshot() throws InterruptedException {\n             latch.countDown();\n         });\n         latch.await(10, TimeUnit.SECONDS);\n+        Assert.assertTrue(isSnapshoted);\n         Assert.assertTrue(result.get());\n         \n         final Reader reader = new Reader(snapshotDir, writer.listFiles());",
      "parent_sha": "ae83b9b3d55de7edad97dad0fa47cbcc233c853b"
    }
  },
  {
    "oid": "3e37ac4bf257102c821c0b8c27cb9208f30095dd",
    "message": "Fix 1.3 version don't report server status to lower version.",
    "date": "2020-06-04T07:09:18Z",
    "url": "https://github.com/alibaba/nacos/commit/3e37ac4bf257102c821c0b8c27cb9208f30095dd",
    "details": {
      "sha": "75e86a65c7c4401b8dd2806756c193d0e5304e0a",
      "filename": "naming/src/main/java/com/alibaba/nacos/naming/cluster/ServerListManager.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/alibaba/nacos/blob/3e37ac4bf257102c821c0b8c27cb9208f30095dd/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcluster%2FServerListManager.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/3e37ac4bf257102c821c0b8c27cb9208f30095dd/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcluster%2FServerListManager.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcluster%2FServerListManager.java?ref=3e37ac4bf257102c821c0b8c27cb9208f30095dd",
      "patch": "@@ -210,7 +210,8 @@ public void run() {\n \n \t\t\t\t\t\t// This metadata information exists from 1.3.0 onwards \"version\"\n \t\t\t\t\t\tif (server.getExtendVal(MemberMetaDataConstants.VERSION) != null) {\n-\t\t\t\t\t\t\treturn;\n+\t\t\t\t\t\t    Loggers.SRV_LOG.debug(\"[SERVER-STATUS] target {} has extend val {} = {}, use new api report status\", server.getAddress(), MemberMetaDataConstants.VERSION, server.getExtendVal(MemberMetaDataConstants.VERSION));\n+\t\t\t\t\t\t\tcontinue;\n \t\t\t\t\t\t}\n \n \t\t\t\t\t\tMessage msg = new Message();\n@@ -228,4 +229,4 @@ public void run() {\n \t\t}\n \t}\n \n-}\n\\ No newline at end of file\n+}",
      "parent_sha": "f71c5d85c99b305615668535d33edbce3532255a"
    }
  },
  {
    "oid": "46c9a96ec5822581f934f424f0645667940fa9a5",
    "message": "Fix #5178, Fix NPE when init server list failed. (#5188)",
    "date": "2021-03-26T01:36:20Z",
    "url": "https://github.com/alibaba/nacos/commit/46c9a96ec5822581f934f424f0645667940fa9a5",
    "details": {
      "sha": "ea96e5b53b2ed3d0ff21edcedf1ecad2bb4bf943",
      "filename": "client/src/main/java/com/alibaba/nacos/client/naming/core/ServerListManager.java",
      "status": "modified",
      "additions": 7,
      "deletions": 9,
      "changes": 16,
      "blob_url": "https://github.com/alibaba/nacos/blob/46c9a96ec5822581f934f424f0645667940fa9a5/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fcore%2FServerListManager.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/46c9a96ec5822581f934f424f0645667940fa9a5/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fcore%2FServerListManager.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fcore%2FServerListManager.java?ref=46c9a96ec5822581f934f424f0645667940fa9a5",
      "patch": "@@ -60,9 +60,9 @@ public class ServerListManager implements ServerListFactory, Closeable {\n     \n     private final AtomicInteger currentIndex = new AtomicInteger();\n     \n-    private List<String> serversFromEndpoint = new ArrayList<String>();\n+    private final List<String> serverList = new ArrayList<>();\n     \n-    private List<String> serverList = new ArrayList<String>();\n+    private List<String> serversFromEndpoint = new ArrayList<>();\n     \n     private ScheduledExecutorService refreshServerListExecutor;\n     \n@@ -85,12 +85,9 @@ private void initServerAddr(Properties properties) {\n             this.serversFromEndpoint = getServerListFromEndpoint();\n             refreshServerListExecutor = new ScheduledThreadPoolExecutor(1,\n                     new NameThreadFactory(\"com.alibaba.nacos.client.naming.server.list.refresher\"));\n-            refreshServerListExecutor.scheduleWithFixedDelay(new Runnable() {\n-                @Override\n-                public void run() {\n-                    refreshServerListIfNeed();\n-                }\n-            }, 0, refreshServerListInternal, TimeUnit.MILLISECONDS);\n+            refreshServerListExecutor\n+                    .scheduleWithFixedDelay(this::refreshServerListIfNeed, 0, refreshServerListInternal,\n+                            TimeUnit.MILLISECONDS);\n         } else {\n             String serverListFromProps = properties.getProperty(PropertyKeyConst.SERVER_ADDR);\n             if (StringUtils.isNotEmpty(serverListFromProps)) {\n@@ -138,7 +135,7 @@ private void refreshServerListIfNeed() {\n             if (CollectionUtils.isEmpty(list)) {\n                 throw new Exception(\"Can not acquire Nacos list\");\n             }\n-            if (!CollectionUtils.isEqualCollection(list, serversFromEndpoint)) {\n+            if (null == serversFromEndpoint || !CollectionUtils.isEqualCollection(list, serversFromEndpoint)) {\n                 NAMING_LOGGER.info(\"[SERVER-LIST] server list is updated: \" + list);\n             }\n             serversFromEndpoint = list;\n@@ -156,6 +153,7 @@ public String getNacosDomain() {\n         return nacosDomain;\n     }\n     \n+    @Override\n     public List<String> getServerList() {\n         return serverList.isEmpty() ? serversFromEndpoint : serverList;\n     }",
      "parent_sha": "db49388f621f6bfa705e85c93bb62dfcbb7fd2ae"
    }
  },
  {
    "oid": "65244c5de48cb28d90b69a936ba27feeb7d1a245",
    "message": "judge endpoint (#8933)",
    "date": "2022-08-11T06:16:59Z",
    "url": "https://github.com/alibaba/nacos/commit/65244c5de48cb28d90b69a936ba27feeb7d1a245",
    "details": {
      "sha": "bec1d6a3a20de32a341a6f000485586c53804b04",
      "filename": "client/src/main/java/com/alibaba/nacos/client/naming/core/ServerListManager.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/alibaba/nacos/blob/65244c5de48cb28d90b69a936ba27feeb7d1a245/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fcore%2FServerListManager.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/65244c5de48cb28d90b69a936ba27feeb7d1a245/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fcore%2FServerListManager.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fcore%2FServerListManager.java?ref=65244c5de48cb28d90b69a936ba27feeb7d1a245",
      "patch": "@@ -87,7 +87,8 @@ public ServerListManager(Properties properties, String namespace) {\n         initServerAddr(properties);\n         if (!serverList.isEmpty()) {\n             currentIndex.set(new Random().nextInt(serverList.size()));\n-        } else {\n+        }\n+        if (serverList.isEmpty() && StringUtils.isNotEmpty(endpoint)) {\n             throw new NacosLoadException(\"serverList is empty,please check configuration\");\n         }\n     }",
      "parent_sha": "3586ad64c9d8892301efa9cc893c9ea9625712b2"
    }
  },
  {
    "oid": "4321e777a433ff323dc53e7359d682fcc62a2dee",
    "message": "bugfix for PersistentClientOperationServiceImpl log (#10825)",
    "date": "2023-07-25T03:07:11Z",
    "url": "https://github.com/alibaba/nacos/commit/4321e777a433ff323dc53e7359d682fcc62a2dee",
    "details": {
      "sha": "b27a654a1f17c493443f8293f42453b290bd3d4f",
      "filename": "naming/src/main/java/com/alibaba/nacos/naming/core/v2/service/impl/PersistentClientOperationServiceImpl.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/alibaba/nacos/blob/4321e777a433ff323dc53e7359d682fcc62a2dee/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2Fv2%2Fservice%2Fimpl%2FPersistentClientOperationServiceImpl.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/4321e777a433ff323dc53e7359d682fcc62a2dee/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2Fv2%2Fservice%2Fimpl%2FPersistentClientOperationServiceImpl.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2Fv2%2Fservice%2Fimpl%2FPersistentClientOperationServiceImpl.java?ref=4321e777a433ff323dc53e7359d682fcc62a2dee",
      "patch": "@@ -118,7 +118,7 @@ public void registerInstance(Service service, Instance instance, String clientId\n         \n         try {\n             protocol.write(writeRequest);\n-            Loggers.RAFT.info(\"Client registered. service={}, clientId={}, instance={}\", service, instance, clientId);\n+            Loggers.RAFT.info(\"Client registered. service={}, clientId={}, instance={}\", service, clientId, instance);\n         } catch (Exception e) {\n             throw new NacosRuntimeException(NacosException.SERVER_ERROR, e);\n         }\n@@ -165,7 +165,7 @@ public void deregisterInstance(Service service, Instance instance, String client\n         \n         try {\n             protocol.write(writeRequest);\n-            Loggers.RAFT.info(\"Client unregistered. service={}, clientId={}, instance={}\", service, instance, clientId);\n+            Loggers.RAFT.info(\"Client unregistered. service={}, clientId={}, instance={}\", service, clientId, instance);\n         } catch (Exception e) {\n             throw new NacosRuntimeException(NacosException.SERVER_ERROR, e);\n         }",
      "parent_sha": "25ef67db9a09f2ec5767d5c56a25d60443462e87"
    }
  },
  {
    "oid": "36b99c74ac215b10712c6cfc347bfc49b99a1cf7",
    "message": "test: fix BeatReactorTest",
    "date": "2020-03-27T05:15:31Z",
    "url": "https://github.com/alibaba/nacos/commit/36b99c74ac215b10712c6cfc347bfc49b99a1cf7",
    "details": {
      "sha": "ebc414aa5ec446c29b0115264aabd407ae6ba3b5",
      "filename": "client/src/test/java/com/alibaba/nacos/client/BeatReactorTest.java",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/alibaba/nacos/blob/36b99c74ac215b10712c6cfc347bfc49b99a1cf7/client%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2FBeatReactorTest.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/36b99c74ac215b10712c6cfc347bfc49b99a1cf7/client%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2FBeatReactorTest.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/client%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2FBeatReactorTest.java?ref=36b99c74ac215b10712c6cfc347bfc49b99a1cf7",
      "patch": "@@ -1,7 +1,10 @@\n package com.alibaba.nacos.client;\n \n import com.alibaba.fastjson.JSONObject;\n+import com.alibaba.nacos.api.common.ResponseCode;\n import com.alibaba.nacos.api.exception.NacosException;\n+import com.alibaba.nacos.api.naming.CommonParams;\n+import com.alibaba.nacos.api.naming.NamingResponseCode;\n import com.alibaba.nacos.client.naming.beat.BeatInfo;\n import com.alibaba.nacos.client.naming.beat.BeatReactor;\n import com.alibaba.nacos.client.naming.net.NamingProxy;\n@@ -39,7 +42,11 @@ public void test() throws NoSuchFieldException, IllegalAccessException, Interrup\n         beatInfo.setScheduled(false);\n         beatInfo.setPeriod(1000L);\n \n-        Mockito.doReturn(new JSONObject()).when(namingProxy).sendBeat(beatInfo, true);\n+        JSONObject result = new JSONObject();\n+        result.put(CommonParams.LIGHT_BEAT_ENABLED, true);\n+        result.put(CommonParams.CODE, ResponseCode.OK);\n+\n+        Mockito.doReturn(result).when(namingProxy).sendBeat(beatInfo, true);\n         beatReactor.addBeatInfo(\"testService\", beatInfo);\n \n         Assert.assertEquals(1, getActiveThread(beatReactor));",
      "parent_sha": "418f88d4c68f2c345f4151a2276cc20878a9af21"
    }
  },
  {
    "oid": "e5491ec0de735a361716028f567b3baa37e64a71",
    "message": "[#2738]fix another BeatReactorTest unit test failure.",
    "date": "2020-05-11T08:03:48Z",
    "url": "https://github.com/alibaba/nacos/commit/e5491ec0de735a361716028f567b3baa37e64a71",
    "details": {
      "sha": "cb8adcd53fe46b0bc71e81042da7c119bdb3e88f",
      "filename": "client/src/test/java/com/alibaba/nacos/client/BeatReactorTest.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/alibaba/nacos/blob/e5491ec0de735a361716028f567b3baa37e64a71/client%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2FBeatReactorTest.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/e5491ec0de735a361716028f567b3baa37e64a71/client%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2FBeatReactorTest.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/client%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2FBeatReactorTest.java?ref=e5491ec0de735a361716028f567b3baa37e64a71",
      "patch": "@@ -1,5 +1,6 @@\n package com.alibaba.nacos.client;\n \n+import com.alibaba.fastjson.JSONObject;\n import com.alibaba.nacos.api.exception.NacosException;\n import com.alibaba.nacos.client.naming.beat.BeatInfo;\n import com.alibaba.nacos.client.naming.beat.BeatReactor;\n@@ -38,7 +39,7 @@ public void test() throws NoSuchFieldException, IllegalAccessException, Interrup\n         beatInfo.setScheduled(false);\n         beatInfo.setPeriod(1000L);\n \n-        Mockito.doReturn(0L).when(namingProxy).sendBeat(beatInfo, true);\n+        Mockito.doReturn(new JSONObject()).when(namingProxy).sendBeat(beatInfo, true);\n         beatReactor.addBeatInfo(\"testService\", beatInfo);\n \n         Assert.assertEquals(1, getActiveThread(beatReactor));",
      "parent_sha": "1bb7613ff2a66da71d62f868e5d8e75e2eae2b4d"
    }
  },
  {
    "oid": "fd01d3614d2020d26443ab090fdc0f940a78271a",
    "message": "Update TraceLogUtilTest.java",
    "date": "2021-12-23T02:54:06Z",
    "url": "https://github.com/alibaba/nacos/commit/fd01d3614d2020d26443ab090fdc0f940a78271a",
    "details": {
      "sha": "9444554c02063d25659bdf29ae87bebb1e5fa80d",
      "filename": "config/src/test/java/com/alibaba/nacos/config/server/utils/TraceLogUtilTest.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/alibaba/nacos/blob/fd01d3614d2020d26443ab090fdc0f940a78271a/config%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Futils%2FTraceLogUtilTest.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/fd01d3614d2020d26443ab090fdc0f940a78271a/config%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Futils%2FTraceLogUtilTest.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/config%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Futils%2FTraceLogUtilTest.java?ref=fd01d3614d2020d26443ab090fdc0f940a78271a",
      "patch": "@@ -23,12 +23,12 @@\n public class TraceLogUtilTest {\n \n     @Test\n-    public void requestLogTest() {\n+    public void testRequestLog() {\n \n         Logger requestLog = TraceLogUtil.requestLog;\n         Assert.assertTrue(requestLog instanceof Logger);\n \n         Logger pollingLog = TraceLogUtil.pollingLog;\n         Assert.assertTrue(pollingLog instanceof Logger);\n     }\n-}\n\\ No newline at end of file\n+}",
      "parent_sha": "3975975c21248170a91e76b388eccd3948b2bd86"
    }
  },
  {
    "oid": "a9af1bfe387d3ac90ab3a55a68a4f3832eaaa23b",
    "message": "Fix spelling mistakes. (#9097)\n\n* Fix spelling mistakes.\r\n\r\n* Fix spelling mistakes.",
    "date": "2022-09-07T08:46:16Z",
    "url": "https://github.com/alibaba/nacos/commit/a9af1bfe387d3ac90ab3a55a68a4f3832eaaa23b",
    "details": {
      "sha": "85fa444b85a0786c3049fb72edb99d353d2a8a39",
      "filename": "config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/alibaba/nacos/blob/a9af1bfe387d3ac90ab3a55a68a4f3832eaaa23b/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fcontroller%2FConfigController.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/a9af1bfe387d3ac90ab3a55a68a4f3832eaaa23b/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fcontroller%2FConfigController.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fcontroller%2FConfigController.java?ref=a9af1bfe387d3ac90ab3a55a68a4f3832eaaa23b",
      "patch": "@@ -473,10 +473,10 @@ public RestResult<ConfigInfo4Beta> queryBeta(@RequestParam(value = \"dataId\") Str\n                 Pair<String, String> pair = EncryptionHandler.decryptHandler(dataId, encryptedDataKey, ci.getContent());\n                 ci.setContent(pair.getSecond());\n             }\n-            return RestResultUtils.success(\"stop beta ok\", ci);\n+            return RestResultUtils.success(\"query beta ok\", ci);\n         } catch (Throwable e) {\n-            LOGGER.error(\"remove beta data error\", e);\n-            return RestResultUtils.failed(\"remove beta data error\");\n+            LOGGER.error(\"query beta data error\", e);\n+            return RestResultUtils.failed(\"query beta data error\");\n         }\n     }\n     ",
      "parent_sha": "6d484593c40101bc3af610da9f62c776071a801c"
    }
  },
  {
    "oid": "ffa921b217b8affba1d9c277a18a7f18e707bf07",
    "message": "Fix pmd error",
    "date": "2018-08-05T00:34:25Z",
    "url": "https://github.com/alibaba/nacos/commit/ffa921b217b8affba1d9c277a18a7f18e707bf07",
    "details": {
      "sha": "50ba918d8477be4b0d50c15e677fe2f87c1c7011",
      "filename": "client/src/main/java/com/alibaba/nacos/client/naming/beat/BeatReactor.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/alibaba/nacos/blob/ffa921b217b8affba1d9c277a18a7f18e707bf07/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fbeat%2FBeatReactor.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/ffa921b217b8affba1d9c277a18a7f18e707bf07/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fbeat%2FBeatReactor.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fbeat%2FBeatReactor.java?ref=ffa921b217b8affba1d9c277a18a7f18e707bf07",
      "patch": "@@ -24,21 +24,22 @@\n import java.util.HashMap;\n import java.util.Map;\n import java.util.concurrent.ConcurrentHashMap;\n-import java.util.concurrent.Executors;\n import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.ScheduledThreadPoolExecutor;\n import java.util.concurrent.TimeUnit;\n \n /**\n  * @author harold\n  */\n public class BeatReactor {\n \n-    private ScheduledExecutorService executorService = Executors.newSingleThreadScheduledExecutor(r -> {\n+    private ScheduledExecutorService executorService = new ScheduledThreadPoolExecutor(1, r -> {\n         Thread thread = new Thread(r);\n         thread.setDaemon(true);\n         thread.setName(\"com.alibaba.nacos.naming.beat.sender\");\n         return thread;\n     });\n+    ;\n \n     private long clientBeatInterval = 10 * 1000;\n ",
      "parent_sha": "a8ead77f6fb6603f4aa6c734c0751c0138697e60"
    }
  },
  {
    "oid": "815197cdf19875c50d418d4b0d494fe3b083c124",
    "message": "[ISSUE #9930] fix word spelling error in com.alibaba.nacos.common.http.AbstractHttpClientFactory#ASYNC_IO_REACTOR_NAME (#9931)\n\n* code optimization for `ConfigChangeHandler`\r\n\r\n* [ISSUE #9930] fix word spelling error in com.alibaba.nacos.common.http.AbstractHttpClientFactory#ASYNC_IO_REACTOR_NAME",
    "date": "2023-02-13T01:45:59Z",
    "url": "https://github.com/alibaba/nacos/commit/815197cdf19875c50d418d4b0d494fe3b083c124",
    "details": {
      "sha": "5cb5551e1765f0f07e78937f0f848d5ae64ca460",
      "filename": "common/src/main/java/com/alibaba/nacos/common/http/AbstractHttpClientFactory.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/alibaba/nacos/blob/815197cdf19875c50d418d4b0d494fe3b083c124/common%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Fhttp%2FAbstractHttpClientFactory.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/815197cdf19875c50d418d4b0d494fe3b083c124/common%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Fhttp%2FAbstractHttpClientFactory.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/common%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Fhttp%2FAbstractHttpClientFactory.java?ref=815197cdf19875c50d418d4b0d494fe3b083c124",
      "patch": "@@ -63,7 +63,7 @@ public abstract class AbstractHttpClientFactory implements HttpClientFactory {\n     \n     private static final String ASYNC_THREAD_NAME = \"nacos-http-async-client\";\n     \n-    private static final String AYNC_IO_REACTOR_NAME = ASYNC_THREAD_NAME + \"#I/O Reactor\";\n+    private static final String ASYNC_IO_REACTOR_NAME = ASYNC_THREAD_NAME + \"#I/O Reactor\";\n     \n     @Override\n     public NacosRestTemplate createNacosRestTemplate() {\n@@ -82,7 +82,7 @@ public NacosRestTemplate createNacosRestTemplate() {\n     @Override\n     public NacosAsyncRestTemplate createNacosAsyncRestTemplate() {\n         final HttpClientConfig originalRequestConfig = buildHttpClientConfig();\n-        final DefaultConnectingIOReactor ioreactor = getIoReactor(AYNC_IO_REACTOR_NAME);\n+        final DefaultConnectingIOReactor ioreactor = getIoReactor(ASYNC_IO_REACTOR_NAME);\n         final RequestConfig defaultConfig = getRequestConfig();\n         final NHttpClientConnectionManager connectionManager = getConnectionManager(originalRequestConfig, ioreactor);\n         monitorAndExtension(connectionManager);",
      "parent_sha": "5a8c56763302647cc4a7f59d801c20d6c46e7ab9"
    }
  },
  {
    "oid": "9c970b60ba99f27c1520d64e623e1c60b120df5e",
    "message": "refactor: fix code stype",
    "date": "2020-04-23T11:43:42Z",
    "url": "https://github.com/alibaba/nacos/commit/9c970b60ba99f27c1520d64e623e1c60b120df5e",
    "details": {
      "sha": "779abb79c7c148473dba6df71cdf3874bc4f7948",
      "filename": "core/src/main/java/com/alibaba/nacos/core/cluster/Member.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/alibaba/nacos/blob/9c970b60ba99f27c1520d64e623e1c60b120df5e/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fcluster%2FMember.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/9c970b60ba99f27c1520d64e623e1c60b120df5e/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fcluster%2FMember.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fcluster%2FMember.java?ref=9c970b60ba99f27c1520d64e623e1c60b120df5e",
      "patch": "@@ -42,13 +42,13 @@ public class Member {\n \tprivate transient int failAccessCnt = 0;\n \n \tpublic Member() {\n-        String PREFIX = \"nacos.core.member.meta.\";\n+        String prefix = \"nacos.core.member.meta.\";\n         extendInfo.put(MemberMetaDataConstants.SITE_KEY, ApplicationUtils\n-\t\t\t\t.getProperty(PREFIX + MemberMetaDataConstants.SITE_KEY, \"unknow\"));\n+\t\t\t\t.getProperty(prefix + MemberMetaDataConstants.SITE_KEY, \"unknow\"));\n \t\textendInfo.put(MemberMetaDataConstants.AD_WEIGHT, ApplicationUtils\n-\t\t\t\t.getProperty(PREFIX + MemberMetaDataConstants.AD_WEIGHT, \"0\"));\n+\t\t\t\t.getProperty(prefix + MemberMetaDataConstants.AD_WEIGHT, \"0\"));\n \t\textendInfo.put(MemberMetaDataConstants.WEIGHT, ApplicationUtils\n-\t\t\t\t.getProperty(PREFIX + MemberMetaDataConstants.WEIGHT, \"1\"));\n+\t\t\t\t.getProperty(prefix + MemberMetaDataConstants.WEIGHT, \"1\"));\n \t}\n \n \tpublic static MemberBuilder builder() {",
      "parent_sha": "e4c475295cba3da3732d1be208f5737a945808c3"
    }
  },
  {
    "oid": "667a34d7aa343829efb5f7c1bc30faa4b260ad89",
    "message": "Remove repeated conditional test (#8732)",
    "date": "2022-07-14T01:28:26Z",
    "url": "https://github.com/alibaba/nacos/commit/667a34d7aa343829efb5f7c1bc30faa4b260ad89",
    "details": {
      "sha": "3418b625658ab8e160f233c6a2f44455eb887cf9",
      "filename": "common/src/main/java/com/alibaba/nacos/common/utils/StringUtils.java",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/alibaba/nacos/blob/667a34d7aa343829efb5f7c1bc30faa4b260ad89/common%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Futils%2FStringUtils.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/667a34d7aa343829efb5f7c1bc30faa4b260ad89/common%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Futils%2FStringUtils.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/common%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Futils%2FStringUtils.java?ref=667a34d7aa343829efb5f7c1bc30faa4b260ad89",
      "patch": "@@ -192,9 +192,7 @@ public static String join(Collection collection, String separator) {\n             if (objects[i] != null) {\n                 stringBuilder.append(objects[i]);\n                 if (i != collection.size() - 1 && separator != null) {\n-                    if (separator != null) {\n-                        stringBuilder.append(separator);\n-                    }\n+                    stringBuilder.append(separator);\n                 }\n             }\n         }",
      "parent_sha": "704210e0c41a4cba2b849ced0b12192969fefffa"
    }
  },
  {
    "oid": "aea7dd69ed30cd221281cd2864949c601d4dfc33",
    "message": "[ISSUE #2810] don't send beat when standalone model (#3047)\n\n* don't send beat when standalone model\r\n\r\n* format the code.",
    "date": "2020-06-17T03:33:34Z",
    "url": "https://github.com/alibaba/nacos/commit/aea7dd69ed30cd221281cd2864949c601d4dfc33",
    "details": {
      "sha": "f8e052565662e01c29defcdb01f226a257cbc4f6",
      "filename": "naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftCore.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/alibaba/nacos/blob/aea7dd69ed30cd221281cd2864949c601d4dfc33/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fconsistency%2Fpersistent%2Fraft%2FRaftCore.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/aea7dd69ed30cd221281cd2864949c601d4dfc33/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fconsistency%2Fpersistent%2Fraft%2FRaftCore.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fconsistency%2Fpersistent%2Fraft%2FRaftCore.java?ref=aea7dd69ed30cd221281cd2864949c601d4dfc33",
      "patch": "@@ -484,10 +484,9 @@ public void run() {\n \n         public void sendBeat() throws IOException, InterruptedException {\n             RaftPeer local = peers.local();\n-            if (local.state != RaftPeer.State.LEADER && !ApplicationUtils.getStandaloneMode()) {\n+            if (ApplicationUtils.getStandaloneMode() || local.state != RaftPeer.State.LEADER) {\n                 return;\n             }\n-\n             if (Loggers.RAFT.isDebugEnabled()) {\n                 Loggers.RAFT.debug(\"[RAFT] send beat with {} keys.\", datums.size());\n             }\n@@ -683,7 +682,8 @@ public Integer onCompleted(Response response) throws Exception {\n                                 return 1;\n                             }\n \n-                            List<JsonNode> datumList = JacksonUtils.toObj(response.getResponseBody(), new TypeReference<List<JsonNode>>() {});\n+                            List<JsonNode> datumList = JacksonUtils.toObj(response.getResponseBody(), new TypeReference<List<JsonNode>>() {\n+                            });\n \n                             for (JsonNode datumJson : datumList) {\n                                 OPERATE_LOCK.lock();",
      "parent_sha": "7c4cca4360284344d9194c0d0f76edca02a5ba9c"
    }
  },
  {
    "oid": "aef7565403129778fbb5881fe6933aaa8a5cb46a",
    "message": "#1105 Access control finish 82%",
    "date": "2019-12-19T07:33:20Z",
    "url": "https://github.com/alibaba/nacos/commit/aef7565403129778fbb5881fe6933aaa8a5cb46a",
    "details": {
      "sha": "c52709ff50d74daea26d9c804e61b2f9281bd8a6",
      "filename": "naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftCore.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/alibaba/nacos/blob/aef7565403129778fbb5881fe6933aaa8a5cb46a/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fconsistency%2Fpersistent%2Fraft%2FRaftCore.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/aef7565403129778fbb5881fe6933aaa8a5cb46a/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fconsistency%2Fpersistent%2Fraft%2FRaftCore.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fconsistency%2Fpersistent%2Fraft%2FRaftCore.java?ref=aef7565403129778fbb5881fe6933aaa8a5cb46a",
      "patch": "@@ -293,7 +293,7 @@ public void onPublish(Datum datum, RaftPeer source) throws Exception {\n \n         local.resetLeaderDue();\n \n-        // if data should be persistent, usually this is always true:\n+        // if data should be persisted, usually this is true:\n         if (KeyBuilder.matchPersistentKey(datum.key)) {\n             raftStore.write(datum);\n         }",
      "parent_sha": "080ca1e73dc507806ad455097f80b8b5830e5c46"
    }
  },
  {
    "oid": "dad2b1d3705093c8803df4b56ccbbe27fccde3a0",
    "message": "fix verison fetch",
    "date": "2018-10-08T02:59:32Z",
    "url": "https://github.com/alibaba/nacos/commit/dad2b1d3705093c8803df4b56ccbbe27fccde3a0",
    "details": {
      "sha": "ab8a866252f41b45de20b185ed1a1a71c4f7f0ed",
      "filename": "naming/src/main/java/com/alibaba/nacos/naming/web/ApiCommands.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/alibaba/nacos/blob/dad2b1d3705093c8803df4b56ccbbe27fccde3a0/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fweb%2FApiCommands.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/dad2b1d3705093c8803df4b56ccbbe27fccde3a0/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fweb%2FApiCommands.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fweb%2FApiCommands.java?ref=dad2b1d3705093c8803df4b56ccbbe27fccde3a0",
      "patch": "@@ -1067,7 +1067,7 @@ public JSONObject srvIPXT(HttpServletRequest request) throws Exception {\n \n         String dom = BaseServlet.required(request, \"dom\");\n         VirtualClusterDomain domObj = (VirtualClusterDomain) domainsManager.getDomain(dom);\n-        String agent = BaseServlet.optional(request, \"header:Client-Version\", StringUtils.EMPTY);\n+        String agent = request.getHeader(\"Client-Version\");\n         String clusters = BaseServlet.optional(request, \"clusters\", StringUtils.EMPTY);\n         String clientIP = BaseServlet.optional(request, \"clientIP\", StringUtils.EMPTY);\n         Integer udpPort = Integer.parseInt(BaseServlet.optional(request, \"udpPort\", \"0\"));",
      "parent_sha": "5f95bf3c513f52267a03b2c7cc8d1f524d1c9f07"
    }
  },
  {
    "oid": "acbdaf012ec415c679017a3495a10c235203480b",
    "message": "Solve conflict",
    "date": "2021-03-18T05:41:13Z",
    "url": "https://github.com/alibaba/nacos/commit/acbdaf012ec415c679017a3495a10c235203480b",
    "details": {
      "sha": "547f9871b13e58b914a6a32b372294e8cbdd6ff1",
      "filename": "core/src/main/java/com/alibaba/nacos/core/auth/AuthFilter.java",
      "status": "modified",
      "additions": 19,
      "deletions": 4,
      "changes": 23,
      "blob_url": "https://github.com/alibaba/nacos/blob/acbdaf012ec415c679017a3495a10c235203480b/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fauth%2FAuthFilter.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/acbdaf012ec415c679017a3495a10c235203480b/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fauth%2FAuthFilter.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fauth%2FAuthFilter.java?ref=acbdaf012ec415c679017a3495a10c235203480b",
      "patch": "@@ -73,10 +73,25 @@ public void doFilter(ServletRequest request, ServletResponse response, FilterCha\n         HttpServletRequest req = (HttpServletRequest) request;\n         HttpServletResponse resp = (HttpServletResponse) response;\n         \n-        String userAgent = WebUtils.getUserAgent(req);\n-        \n-        if (StringUtils.startsWith(userAgent, Constants.NACOS_SERVER_HEADER)) {\n-            chain.doFilter(request, response);\n+        if (authConfigs.isEnableUserAgentAuthWhite()) {\n+            String userAgent = WebUtils.getUserAgent(req);\n+            if (StringUtils.startsWith(userAgent, Constants.NACOS_SERVER_HEADER)) {\n+                chain.doFilter(request, response);\n+                return;\n+            }\n+        } else if (StringUtils.isNotBlank(authConfigs.getServerIdentityKey()) && StringUtils\n+                .isNotBlank(authConfigs.getServerIdentityValue())) {\n+            String serverIdentity = req.getHeader(authConfigs.getServerIdentityKey());\n+            if (authConfigs.getServerIdentityValue().equals(serverIdentity)) {\n+                chain.doFilter(request, response);\n+                return;\n+            }\n+            Loggers.AUTH.warn(\"Invalid server identity value for {} from {}\", authConfigs.getServerIdentityKey(),\n+                    req.getRemoteHost());\n+        } else {\n+            resp.sendError(HttpServletResponse.SC_FORBIDDEN,\n+                    \"Invalid server identity key or value, Please make sure set `nacos.core.auth.server.identity.key`\"\n+                            + \" and `nacos.core.auth.server.identity.value`, or open `nacos.core.auth.enable.userAgentAuthWhite`\");\n             return;\n         }\n         ",
      "parent_sha": "bd4b63d8344f209b31ec0d0cffde542f86c5cbeb"
    }
  },
  {
    "oid": "4da60533fa9b9dc098f31df3c3e6486d978b678a",
    "message": "add service null check",
    "date": "2022-04-21T02:02:20Z",
    "url": "https://github.com/alibaba/nacos/commit/4da60533fa9b9dc098f31df3c3e6486d978b678a",
    "details": {
      "sha": "e0b3af2db195da062752ba221ae64b00ea3387de",
      "filename": "naming/src/main/java/com/alibaba/nacos/naming/core/Service.java",
      "status": "modified",
      "additions": 16,
      "deletions": 12,
      "changes": 28,
      "blob_url": "https://github.com/alibaba/nacos/blob/4da60533fa9b9dc098f31df3c3e6486d978b678a/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2FService.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/4da60533fa9b9dc098f31df3c3e6486d978b678a/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2FService.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2FService.java?ref=4da60533fa9b9dc098f31df3c3e6486d978b678a",
      "patch": "@@ -47,6 +47,7 @@\n import java.util.LinkedList;\n import java.util.List;\n import java.util.Map;\n+import java.util.Objects;\n \n /**\n  * Service of Nacos server side\n@@ -251,9 +252,9 @@ public void updateIPs(Collection<Instance> instances, boolean ephemeral) {\n                 }\n                 \n                 if (!clusterMap.containsKey(instance.getClusterName())) {\n-                    Loggers.SRV_LOG\n-                            .warn(\"cluster: {} not found, ip: {}, will create new cluster with default configuration.\",\n-                                    instance.getClusterName(), instance.toJson());\n+                    Loggers.SRV_LOG.warn(\n+                            \"cluster: {} not found, ip: {}, will create new cluster with default configuration.\",\n+                            instance.getClusterName(), instance.toJson());\n                     Cluster cluster = new Cluster(instance.getClusterName(), this);\n                     cluster.init();\n                     getClusterMap().put(instance.getClusterName(), cluster);\n@@ -498,9 +499,8 @@ public void update(Service vDom) {\n         }\n         \n         if (getProtectThreshold() != vDom.getProtectThreshold()) {\n-            Loggers.SRV_LOG\n-                    .info(\"[SERVICE-UPDATE] service: {}, protectThreshold: {} -> {}\", getName(), getProtectThreshold(),\n-                            vDom.getProtectThreshold());\n+            Loggers.SRV_LOG.info(\"[SERVICE-UPDATE] service: {}, protectThreshold: {} -> {}\", getName(),\n+                    getProtectThreshold(), vDom.getProtectThreshold());\n             setProtectThreshold(vDom.getProtectThreshold());\n         }\n         \n@@ -511,8 +511,8 @@ public void update(Service vDom) {\n         }\n         \n         if (enabled != vDom.getEnabled().booleanValue()) {\n-            Loggers.SRV_LOG\n-                    .info(\"[SERVICE-UPDATE] service: {}, enabled: {} -> {}\", getName(), enabled, vDom.getEnabled());\n+            Loggers.SRV_LOG.info(\"[SERVICE-UPDATE] service: {}, enabled: {} -> {}\", getName(), enabled,\n+                    vDom.getEnabled());\n             enabled = vDom.getEnabled();\n         }\n         \n@@ -558,8 +558,8 @@ public synchronized void recalculateChecksum() {\n         }\n         \n         for (Instance ip : ips) {\n-            String string = ip.getIp() + \":\" + ip.getPort() + \"_\" + ip.getWeight() + \"_\" + ip.isHealthy() + \"_\" + ip\n-                    .getClusterName();\n+            String string = ip.getIp() + \":\" + ip.getPort() + \"_\" + ip.getWeight() + \"_\" + ip.isHealthy() + \"_\"\n+                    + ip.getClusterName();\n             ipsString.append(string);\n             ipsString.append(',');\n         }\n@@ -610,9 +610,13 @@ public void addCluster(Cluster cluster) {\n      * @throws IllegalArgumentException if service is not validate\n      */\n     public void validate() {\n-        if (!getName().matches(SERVICE_NAME_SYNTAX)) {\n+        String serviceName = getName();\n+        if (Objects.isNull(serviceName)) {\n+            throw new IllegalArgumentException(\"service name can not be null!\");\n+        }\n+        if (!serviceName.matches(SERVICE_NAME_SYNTAX)) {\n             throw new IllegalArgumentException(\n-                    \"dom name can only have these characters: 0-9a-zA-Z-._:, current: \" + getName());\n+                    \"dom name can only have these characters: 0-9a-zA-Z-._:, current: \" + serviceName);\n         }\n         for (Cluster cluster : clusterMap.values()) {\n             cluster.validate();",
      "parent_sha": "a9e2cbd4d8362d1fe04d1b37252d817ebb9e4037"
    }
  },
  {
    "oid": "8fa3deed92b85dd332d5f07e588c6f936d9d157c",
    "message": "Use ContextRefreshedEvent replace PostConstruct to make sure get obje\u2026 (#8490)\n\n* use ContextRefreshedEvent replace PostConstruct to make sure get object from spring not throw null pointer exception.\r\n\r\n* reformat code style\r\n\r\n* reformat code style",
    "date": "2022-06-06T03:23:39Z",
    "url": "https://github.com/alibaba/nacos/commit/8fa3deed92b85dd332d5f07e588c6f936d9d157c",
    "details": {
      "sha": "b7b7222b73de8f13ddc50f10676b068bf5b7af2a",
      "filename": "istio/src/main/java/com/alibaba/nacos/istio/common/EventProcessor.java",
      "status": "modified",
      "additions": 11,
      "deletions": 7,
      "changes": 18,
      "blob_url": "https://github.com/alibaba/nacos/blob/8fa3deed92b85dd332d5f07e588c6f936d9d157c/istio%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fistio%2Fcommon%2FEventProcessor.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/8fa3deed92b85dd332d5f07e588c6f936d9d157c/istio%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fistio%2Fcommon%2FEventProcessor.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/istio%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fistio%2Fcommon%2FEventProcessor.java?ref=8fa3deed92b85dd332d5f07e588c6f936d9d157c",
      "patch": "@@ -21,9 +21,10 @@\n import com.alibaba.nacos.istio.util.IstioExecutor;\n import com.alibaba.nacos.istio.xds.NacosXdsService;\n import com.alibaba.nacos.sys.utils.ApplicationUtils;\n+import org.springframework.context.ApplicationListener;\n+import org.springframework.context.event.ContextRefreshedEvent;\n import org.springframework.stereotype.Component;\n \n-import javax.annotation.PostConstruct;\n import java.util.Objects;\n import java.util.concurrent.ArrayBlockingQueue;\n import java.util.concurrent.BlockingQueue;\n@@ -37,7 +38,7 @@\n  * @author special.fy\n  */\n @Component\n-public class EventProcessor {\n+public class EventProcessor implements ApplicationListener<ContextRefreshedEvent> {\n \n     private static final int MAX_WAIT_EVENT_TIME = 100;\n \n@@ -68,11 +69,18 @@ public void notify(Event event) {\n         }\n     }\n \n-    @PostConstruct\n     public void handleEvents() {\n         new Consumer(\"handle events\").start();\n     }\n \n+    @Override\n+    public void onApplicationEvent(ContextRefreshedEvent contextRefreshedEvent) {\n+        if (contextRefreshedEvent.getApplicationContext().getParent() == null) {\n+            checkDependenceReady();\n+            handleEvents();\n+        }\n+    }\n+\n     private class Consumer extends Thread {\n \n         Consumer(String name) {\n@@ -87,10 +95,6 @@ public void run() {\n             Event lastEvent = null;\n             while (true) {\n                 try {\n-                    if (!checkDependenceReady()) {\n-                        // Make sure dependency service has ready before consumer service event.\n-                        TimeUnit.SECONDS.sleep(1);\n-                    }\n                     // Today we only care about service event,\n                     // so we simply ignore event until the last task has been completed.\n                     Event event = events.poll(MAX_WAIT_EVENT_TIME, TimeUnit.MILLISECONDS);",
      "parent_sha": "ce41075de6f304af9a02e4a27bf5964053276564"
    }
  },
  {
    "oid": "7b839d0f8344f39fc4c4cbd00e5ac82217aaeeaa",
    "message": "fix bug",
    "date": "2019-06-19T11:46:40Z",
    "url": "https://github.com/alibaba/nacos/commit/7b839d0f8344f39fc4c4cbd00e5ac82217aaeeaa",
    "details": {
      "sha": "c2dc813747d1863a2c343e0c4470a3266a1b7843",
      "filename": "client/src/main/java/com/alibaba/nacos/client/naming/beat/BeatReactor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/alibaba/nacos/blob/7b839d0f8344f39fc4c4cbd00e5ac82217aaeeaa/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fbeat%2FBeatReactor.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/7b839d0f8344f39fc4c4cbd00e5ac82217aaeeaa/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fbeat%2FBeatReactor.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fbeat%2FBeatReactor.java?ref=7b839d0f8344f39fc4c4cbd00e5ac82217aaeeaa",
      "patch": "@@ -89,7 +89,7 @@ public void run() {\n             if (beatInfo.isStop()) {\n                 return;\n             }\n-            long nextTime = result > 0 ? System.currentTimeMillis() + result : System.currentTimeMillis() + beatInfo.getPeriod();\n+            long nextTime = result > 0 ? result : beatInfo.getPeriod();\n             executorService.schedule(new BeatTask(beatInfo), nextTime, TimeUnit.MILLISECONDS);\n         }\n     }",
      "parent_sha": "16f8a16cb37bcf37c4d1dfc12f50dd07d56f9350"
    }
  },
  {
    "oid": "5ac48059cbf3fb8323ac48d3788473f3e07c7987",
    "message": "fix: fixed future.join blocking thread",
    "date": "2020-05-18T07:45:20Z",
    "url": "https://github.com/alibaba/nacos/commit/5ac48059cbf3fb8323ac48d3788473f3e07c7987",
    "details": {
      "sha": "c5b835ea8d8766c3d38ac44f7bda048f1597c542",
      "filename": "core/src/main/java/com/alibaba/nacos/core/distributed/raft/JRaftProtocol.java",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/alibaba/nacos/blob/5ac48059cbf3fb8323ac48d3788473f3e07c7987/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fdistributed%2Fraft%2FJRaftProtocol.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/5ac48059cbf3fb8323ac48d3788473f3e07c7987/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fdistributed%2Fraft%2FJRaftProtocol.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fdistributed%2Fraft%2FJRaftProtocol.java?ref=5ac48059cbf3fb8323ac48d3788473f3e07c7987",
      "patch": "@@ -47,15 +47,14 @@\n import java.util.Objects;\n import java.util.Set;\n import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.TimeUnit;\n import java.util.concurrent.atomic.AtomicBoolean;\n-import java.util.function.BiConsumer;\n \n /**\n  * A concrete implementation of CP protocol: JRaft\n  *\n  * <pre>\n  *                                           \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n- *                                           \u2502                      \u2502\n  *            \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510       \u2502                      \u25bc\n  *            \u2502   ProtocolManager    \u2502       \u2502        \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n  *            \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518       \u2502        \u2502for p in [LogProcessor4CP] \u2502\n@@ -88,7 +87,6 @@\n  *             \u2502JRaftServer.start() \u2502        \u2502\n  *             \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518        \u2502\n  *                        \u2502                  \u2502\n- *                        \u2502                  \u2502\n  *                        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n  * </pre>\n  *\n@@ -177,7 +175,8 @@ public Response getData(GetRequest request) throws Exception {\n \t@Override\n \tpublic Response submit(Log data) throws Exception {\n \t\tCompletableFuture<Response> future = submitAsync(data);\n-\t\treturn future.get();\n+\t\t// Here you wait for 10 seconds, as long as possible, for the request to complete\n+\t\treturn future.get(10_000L, TimeUnit.MILLISECONDS);\n \t}\n \n \t@Override",
      "parent_sha": "5f39cc8d75e30332845563cee99766b942c26e26"
    }
  },
  {
    "oid": "2972d4f22f92bb125e5583370f3aaf211a7849a9",
    "message": "fix `UpdateTask` some logic errors (#5041)",
    "date": "2021-03-08T02:03:26Z",
    "url": "https://github.com/alibaba/nacos/commit/2972d4f22f92bb125e5583370f3aaf211a7849a9",
    "details": {
      "sha": "23f7862af3e265d9e5e7046d9963d0f3f847ad3c",
      "filename": "client/src/main/java/com/alibaba/nacos/client/naming/core/ServiceInfoUpdateService.java",
      "status": "modified",
      "additions": 3,
      "deletions": 6,
      "changes": 9,
      "blob_url": "https://github.com/alibaba/nacos/blob/2972d4f22f92bb125e5583370f3aaf211a7849a9/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fcore%2FServiceInfoUpdateService.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/2972d4f22f92bb125e5583370f3aaf211a7849a9/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fcore%2FServiceInfoUpdateService.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fcore%2FServiceInfoUpdateService.java?ref=2972d4f22f92bb125e5583370f3aaf211a7849a9",
      "patch": "@@ -161,7 +161,7 @@ public UpdateTask(String serviceName, String groupName, String clusters) {\n         \n         @Override\n         public void run() {\n-            long delayTime = -1;\n+            long delayTime = DEFAULT_DELAY;\n             \n             try {\n                 if (!changeNotifier.isSubscribed(groupName, serviceName, clusters) && !futureMap.containsKey(serviceKey)) {\n@@ -174,7 +174,6 @@ public void run() {\n                 if (serviceObj == null) {\n                     serviceObj = namingClientProxy.queryInstancesOfService(serviceName, groupName, clusters, 0, false);\n                     serviceInfoHolder.processServiceInfo(serviceObj);\n-                    delayTime = DEFAULT_DELAY;\n                     lastRefTime = serviceObj.getLastRefTime();\n                     return;\n                 }\n@@ -192,12 +191,10 @@ public void run() {\n                 delayTime = serviceObj.getCacheMillis() * DEFAULT_UPDATE_CACHE_TIME_MULTIPLE;\n                 resetFailCount();\n             } catch (Throwable e) {\n+                incFailCount();\n                 NAMING_LOGGER.warn(\"[NA] failed to update serviceName: \" + groupedServiceName, e);\n             } finally {\n-                incFailCount();\n-                if (delayTime > 0) {\n-                    executor.schedule(this, Math.min(delayTime << failCount, DEFAULT_DELAY * 60), TimeUnit.MILLISECONDS);\n-                }\n+                executor.schedule(this, Math.min(delayTime << failCount, DEFAULT_DELAY * 60), TimeUnit.MILLISECONDS);\n             }\n         }\n     ",
      "parent_sha": "eb36581c2c4b0a9bfc0a7837452285d0afcf530d"
    }
  },
  {
    "oid": "8855bc5bdab45e1f42828907aa04f8078f95359d",
    "message": "auth the apis",
    "date": "2018-12-26T01:38:22Z",
    "url": "https://github.com/alibaba/nacos/commit/8855bc5bdab45e1f42828907aa04f8078f95359d",
    "details": {
      "sha": "a18fc179fb620d5ddda521636b381ba0628ee593",
      "filename": "console/src/main/java/com/alibaba/nacos/console/security/CustomUserDetailsService.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/alibaba/nacos/blob/8855bc5bdab45e1f42828907aa04f8078f95359d/console%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconsole%2Fsecurity%2FCustomUserDetailsService.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/8855bc5bdab45e1f42828907aa04f8078f95359d/console%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconsole%2Fsecurity%2FCustomUserDetailsService.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/console%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconsole%2Fsecurity%2FCustomUserDetailsService.java?ref=8855bc5bdab45e1f42828907aa04f8078f95359d",
      "patch": "@@ -16,7 +16,7 @@ public UserDetails loadUserByUsername(String s) throws UsernameNotFoundException\n \n         // TODO: get user from database\n         User user = new User();\n-        user.setPassword(\"123456\");\n+        user.setPassword(\"$2a$04$l55XHWJ80UfbNXHIhFiunuqG07N2fOSmxqQEgNqijTY9tI/P0rnM6\");\n         user.setUsername(\"nacos\");\n         return new CustomUserDetails(user);\n     }",
      "parent_sha": "09d1edf3eb1b99f23b2c171862f3ab2c67f3668a"
    }
  },
  {
    "oid": "9c771cf2c3eeea0a45bbdc2d6b69640f02975124",
    "message": "[ISSUE #9277] publisherIndexes clean the service key when no instances anymore. (#9278)",
    "date": "2022-10-10T01:51:15Z",
    "url": "https://github.com/alibaba/nacos/commit/9c771cf2c3eeea0a45bbdc2d6b69640f02975124",
    "details": {
      "sha": "e0305900154106ec5d876f054431ef3ef14becb0",
      "filename": "naming/src/main/java/com/alibaba/nacos/naming/core/v2/index/ClientServiceIndexesManager.java",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/alibaba/nacos/blob/9c771cf2c3eeea0a45bbdc2d6b69640f02975124/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2Fv2%2Findex%2FClientServiceIndexesManager.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/9c771cf2c3eeea0a45bbdc2d6b69640f02975124/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2Fv2%2Findex%2FClientServiceIndexesManager.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2Fv2%2Findex%2FClientServiceIndexesManager.java?ref=9c771cf2c3eeea0a45bbdc2d6b69640f02975124",
      "patch": "@@ -135,11 +135,11 @@ private void addPublisherIndexes(Service service, String clientId) {\n     }\n     \n     private void removePublisherIndexes(Service service, String clientId) {\n-        if (!publisherIndexes.containsKey(service)) {\n-            return;\n-        }\n-        publisherIndexes.get(service).remove(clientId);\n-        NotifyCenter.publishEvent(new ServiceEvent.ServiceChangedEvent(service, true));\n+        publisherIndexes.computeIfPresent(service, (s, ids) -> {\n+            ids.remove(clientId);\n+            NotifyCenter.publishEvent(new ServiceEvent.ServiceChangedEvent(service, true));\n+            return ids.isEmpty() ? null : ids;\n+        });\n     }\n     \n     private void addSubscriberIndexes(Service service, String clientId) {",
      "parent_sha": "4c8130ce4eec88f069e23992fcb4ecc82ed10162"
    }
  },
  {
    "oid": "f15b41be2d902f723fb3712b6995e153b762137c",
    "message": "fix naming example running NPE. (#9131)",
    "date": "2022-09-15T02:41:33Z",
    "url": "https://github.com/alibaba/nacos/commit/f15b41be2d902f723fb3712b6995e153b762137c",
    "details": {
      "sha": "c195c1c06329dba0492b9528c04b3c5b5acd35d4",
      "filename": "example/src/main/java/com/alibaba/nacos/example/NamingExample.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/alibaba/nacos/blob/f15b41be2d902f723fb3712b6995e153b762137c/example%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fexample%2FNamingExample.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/f15b41be2d902f723fb3712b6995e153b762137c/example%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fexample%2FNamingExample.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/example%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fexample%2FNamingExample.java?ref=f15b41be2d902f723fb3712b6995e153b762137c",
      "patch": "@@ -41,8 +41,8 @@ public class NamingExample {\n     public static void main(String[] args) throws NacosException, InterruptedException {\n         \n         Properties properties = new Properties();\n-        properties.setProperty(\"serverAddr\", System.getProperty(\"serverAddr\"));\n-        properties.setProperty(\"namespace\", System.getProperty(\"namespace\"));\n+        properties.setProperty(\"serverAddr\", System.getProperty(\"serverAddr\", \"localhost\"));\n+        properties.setProperty(\"namespace\", System.getProperty(\"namespace\", \"public\"));\n         \n         NamingService naming = NamingFactory.createNamingService(properties);\n         ",
      "parent_sha": "a89a46e2ad9d485c495f1fb9d0a7a65e72ef3f27"
    }
  },
  {
    "oid": "ed0edaa023a89b93a1faebe50e12ff18957acc67",
    "message": "listen config auth bugfix (#4882)",
    "date": "2021-02-05T02:44:16Z",
    "url": "https://github.com/alibaba/nacos/commit/ed0edaa023a89b93a1faebe50e12ff18957acc67",
    "details": {
      "sha": "5c4f69a1ba8c591ef73c67d2f4b0bceb6a5f1650",
      "filename": "config/src/main/java/com/alibaba/nacos/config/server/auth/ConfigResourceParser.java",
      "status": "modified",
      "additions": 13,
      "deletions": 2,
      "changes": 15,
      "blob_url": "https://github.com/alibaba/nacos/blob/ed0edaa023a89b93a1faebe50e12ff18957acc67/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fauth%2FConfigResourceParser.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/ed0edaa023a89b93a1faebe50e12ff18957acc67/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fauth%2FConfigResourceParser.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fauth%2FConfigResourceParser.java?ref=ed0edaa023a89b93a1faebe50e12ff18957acc67",
      "patch": "@@ -16,6 +16,7 @@\n \n package com.alibaba.nacos.config.server.auth;\n \n+import com.alibaba.nacos.api.config.remote.request.ConfigBatchListenRequest;\n import com.alibaba.nacos.api.remote.request.Request;\n import com.alibaba.nacos.auth.model.Resource;\n import com.alibaba.nacos.auth.parser.ResourceParser;\n@@ -24,6 +25,7 @@\n import org.apache.commons.lang3.StringUtils;\n \n import javax.servlet.http.HttpServletRequest;\n+import java.util.List;\n \n /**\n  * Config resource parser.\n@@ -37,7 +39,7 @@ public class ConfigResourceParser implements ResourceParser {\n     \n     @Override\n     public String parseName(Object requestObj) {\n-    \n+        \n         String namespaceId = null;\n         String groupName = null;\n         String dataId = null;\n@@ -48,7 +50,16 @@ public String parseName(Object requestObj) {\n             dataId = req.getParameter(\"dataId\");\n         } else if (requestObj instanceof Request) {\n             Request request = (Request) requestObj;\n-            namespaceId = (String) ReflectUtils.getFieldValue(request, \"tenant\", \"\");\n+            if (request instanceof ConfigBatchListenRequest) {\n+                List<ConfigBatchListenRequest.ConfigListenContext> configListenContexts = ((ConfigBatchListenRequest) request)\n+                        .getConfigListenContexts();\n+                if (!configListenContexts.isEmpty()) {\n+                    namespaceId = ((ConfigBatchListenRequest) request).getConfigListenContexts().get(0).getTenant();\n+                }\n+            } else {\n+                namespaceId = (String) ReflectUtils.getFieldValue(request, \"tenant\", \"\");\n+                \n+            }\n             groupName = (String) ReflectUtils.getFieldValue(request, \"group\", \"\");\n             dataId = (String) ReflectUtils.getFieldValue(request, \"dataId\", \"\");\n         }",
      "parent_sha": "3a82d5d987a314195f644c6566e961ae0e0a11d6"
    }
  },
  {
    "oid": "3bf884499225bca5cf97c793ff5783c5e53df27e",
    "message": "[ISSUE #4311] Fix Derby data source related SQL LIMIT exception (#4313)\n\n* for #4311\uff0cFixed Derby data source related SQL LIMIT exception.\r\n\r\n* fix code style.\r\n\r\n* code format.",
    "date": "2020-11-24T05:21:15Z",
    "url": "https://github.com/alibaba/nacos/commit/3bf884499225bca5cf97c793ff5783c5e53df27e",
    "details": {
      "sha": "294fc589b2333eff817457a0aeade7970cf5a996",
      "filename": "config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedStoragePersistServiceImpl.java",
      "status": "modified",
      "additions": 14,
      "deletions": 4,
      "changes": 18,
      "blob_url": "https://github.com/alibaba/nacos/blob/3bf884499225bca5cf97c793ff5783c5e53df27e/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fservice%2Frepository%2Fembedded%2FEmbeddedStoragePersistServiceImpl.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/3bf884499225bca5cf97c793ff5783c5e53df27e/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fservice%2Frepository%2Fembedded%2FEmbeddedStoragePersistServiceImpl.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fservice%2Frepository%2Fembedded%2FEmbeddedStoragePersistServiceImpl.java?ref=3bf884499225bca5cf97c793ff5783c5e53df27e",
      "patch": "@@ -1116,16 +1116,26 @@ public int configInfoTagCount() {\n     \n     @Override\n     public List<String> getTenantIdList(int page, int pageSize) {\n-        String sql = \"SELECT tenant_id FROM config_info WHERE tenant_id != '' GROUP BY tenant_id LIMIT ?, ?\";\n+        PaginationHelper<String> helper = createPaginationHelper();\n+        \n+        String sql = \"SELECT tenant_id FROM config_info WHERE tenant_id != '' GROUP BY tenant_id LIMIT ?,?\";\n         int from = (page - 1) * pageSize;\n-        return databaseOperate.queryMany(sql, new Object[] {from, pageSize}, String.class);\n+        \n+        Page<String> pageList = helper.fetchPageLimit(sql, new Object[] {from, pageSize}, page, pageSize,\n+                (resultSet, i) -> resultSet.getString(\"tenant_id\"));\n+        return pageList.getPageItems();\n     }\n     \n     @Override\n     public List<String> getGroupIdList(int page, int pageSize) {\n-        String sql = \"SELECT group_id FROM config_info WHERE tenant_id ='' GROUP BY group_id LIMIT ?, ?\";\n+        PaginationHelper<String> helper = createPaginationHelper();\n+        \n+        String sql = \"SELECT group_id FROM config_info WHERE tenant_id ='' GROUP BY group_id LIMIT ?,?\";\n         int from = (page - 1) * pageSize;\n-        return databaseOperate.queryMany(sql, new Object[] {from, pageSize}, String.class);\n+        \n+        Page<String> pageList = helper.fetchPageLimit(sql, new Object[] {from, pageSize}, page, pageSize,\n+                (resultSet, i) -> resultSet.getString(\"group_id\"));\n+        return pageList.getPageItems();\n     }\n     \n     @Override",
      "parent_sha": "7f2a3307d64e4a789a5d091cded9bb64fbfa0535"
    }
  },
  {
    "oid": "5be638556368c39d896a75ba89cb5a6bb3216043",
    "message": "polish: reduce magic value of 'NACOS_SERVER_HEADER' (#9663)",
    "date": "2022-12-06T08:16:21Z",
    "url": "https://github.com/alibaba/nacos/commit/5be638556368c39d896a75ba89cb5a6bb3216043",
    "details": {
      "sha": "0f9a3bb3d798b8f5e185ed7da2a9389e17d02c79",
      "filename": "naming/src/main/java/com/alibaba/nacos/naming/misc/UtilsAndCommons.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/alibaba/nacos/blob/5be638556368c39d896a75ba89cb5a6bb3216043/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fmisc%2FUtilsAndCommons.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/5be638556368c39d896a75ba89cb5a6bb3216043/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fmisc%2FUtilsAndCommons.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fmisc%2FUtilsAndCommons.java?ref=5be638556368c39d896a75ba89cb5a6bb3216043",
      "patch": "@@ -25,6 +25,7 @@\n import com.alibaba.nacos.common.utils.VersionUtils;\n import com.alibaba.nacos.naming.selector.LabelSelector;\n import com.alibaba.nacos.naming.selector.NoneSelector;\n+import com.alibaba.nacos.sys.env.Constants;\n import com.alibaba.nacos.sys.env.EnvUtil;\n import com.fasterxml.jackson.core.type.TypeReference;\n import org.springframework.http.HttpStatus;\n@@ -72,7 +73,7 @@ public class UtilsAndCommons {\n     \n     // ********************** Nacos HTTP Context ************************ //\n     \n-    public static final String NACOS_SERVER_HEADER = \"Nacos-Server\";\n+    public static final String NACOS_SERVER_HEADER = Constants.NACOS_SERVER_HEADER;\n     \n     public static final String NACOS_VERSION = VersionUtils.version;\n     ",
      "parent_sha": "acc8ab46cf87b7ac4e170e53c3e1f70df496a82d"
    }
  },
  {
    "oid": "3ae5e20898b3072f23b179434dabd571ef336565",
    "message": "#387 refactor service operate url",
    "date": "2018-12-05T04:07:29Z",
    "url": "https://github.com/alibaba/nacos/commit/3ae5e20898b3072f23b179434dabd571ef336565",
    "details": {
      "sha": "e26280682835a50119a5686c3945a9c0c674c3fa",
      "filename": "naming/src/main/java/com/alibaba/nacos/naming/controllers/ServiceController.java",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/alibaba/nacos/blob/3ae5e20898b3072f23b179434dabd571ef336565/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcontrollers%2FServiceController.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/3ae5e20898b3072f23b179434dabd571ef336565/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcontrollers%2FServiceController.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcontrollers%2FServiceController.java?ref=3ae5e20898b3072f23b179434dabd571ef336565",
      "patch": "@@ -45,7 +45,7 @@ public class ServiceController {\n     @Autowired\n     protected DomainsManager domainsManager;\n \n-    @RequestMapping(value = \"/create\", method = RequestMethod.PUT)\n+    @RequestMapping(value = \"\", method = RequestMethod.PUT)\n     public String create(HttpServletRequest request) throws Exception {\n         String serviceName = WebUtils.required(request, \"serviceName\");\n \n@@ -79,7 +79,7 @@ public String create(HttpServletRequest request) throws Exception {\n         return \"ok\";\n     }\n \n-    @RequestMapping(value = \"/remove\", method = RequestMethod.DELETE)\n+    @RequestMapping(value = \"\", method = RequestMethod.DELETE)\n     public String remove(HttpServletRequest request) throws Exception {\n \n         String serviceName = WebUtils.required(request, \"serviceName\");\n@@ -98,7 +98,7 @@ public String remove(HttpServletRequest request) throws Exception {\n         return \"ok\";\n     }\n \n-    @RequestMapping(value = \"/detail\")\n+    @RequestMapping(value = \"\", method = RequestMethod.GET)\n     public Service detail(HttpServletRequest request) throws Exception {\n \n         String serviceName = WebUtils.required(request, \"serviceName\");\n@@ -150,8 +150,7 @@ public JSONObject list(HttpServletRequest request) throws Exception {\n \n     }\n \n-\n-    @RequestMapping(value = \"/update\", method = RequestMethod.POST)\n+    @RequestMapping(value = \"\", method = RequestMethod.POST)\n     public String update(HttpServletRequest request) throws Exception {\n \n         String serviceName = WebUtils.required(request, \"serviceName\");",
      "parent_sha": "78523976ba6ad3738dd7a5e25e4f9df2e5ce8f71"
    }
  },
  {
    "oid": "d9dff86f7a428b126ec659e648dc21ec15332221",
    "message": "fix subscriber app unknown (#5324)",
    "date": "2021-04-12T02:01:19Z",
    "url": "https://github.com/alibaba/nacos/commit/d9dff86f7a428b126ec659e648dc21ec15332221",
    "details": {
      "sha": "36baba5b906f215105d124045cccebdb91be7dc2",
      "filename": "naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/SubscribeServiceRequestHandler.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/alibaba/nacos/blob/d9dff86f7a428b126ec659e648dc21ec15332221/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fremote%2Frpc%2Fhandler%2FSubscribeServiceRequestHandler.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/d9dff86f7a428b126ec659e648dc21ec15332221/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fremote%2Frpc%2Fhandler%2FSubscribeServiceRequestHandler.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fremote%2Frpc%2Fhandler%2FSubscribeServiceRequestHandler.java?ref=d9dff86f7a428b126ec659e648dc21ec15332221",
      "patch": "@@ -66,9 +66,10 @@ public SubscribeServiceResponse handle(SubscribeServiceRequest request, RequestM\n         String namespaceId = request.getNamespace();\n         String serviceName = request.getServiceName();\n         String groupName = request.getGroupName();\n+        String app = request.getHeader(\"app\", \"unknown\");\n         String groupedServiceName = NamingUtils.getGroupedName(serviceName, groupName);\n         Service service = Service.newService(namespaceId, groupName, serviceName, true);\n-        Subscriber subscriber = new Subscriber(meta.getClientIp(), meta.getClientVersion(), \"unknown\",\n+        Subscriber subscriber = new Subscriber(meta.getClientIp(), meta.getClientVersion(), app,\n                 meta.getClientIp(), namespaceId, groupedServiceName, 0, request.getClusters());\n         ServiceInfo serviceInfo = handleClusterData(serviceStorage.getData(service),\n                 metadataManager.getServiceMetadata(service).orElse(null),",
      "parent_sha": "a50d9678ae8f81ff66b727ec69b97fc6eebba26c"
    }
  },
  {
    "oid": "6ae100e3903ae9ec8f9f23f74a38776113511c70",
    "message": "Fix http client error",
    "date": "2019-03-08T02:43:26Z",
    "url": "https://github.com/alibaba/nacos/commit/6ae100e3903ae9ec8f9f23f74a38776113511c70",
    "details": {
      "sha": "d05bd236d955f28c37039acc01060485a9ef4730",
      "filename": "client/src/main/java/com/alibaba/nacos/client/naming/net/HttpClient.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/alibaba/nacos/blob/6ae100e3903ae9ec8f9f23f74a38776113511c70/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fnet%2FHttpClient.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/6ae100e3903ae9ec8f9f23f74a38776113511c70/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fnet%2FHttpClient.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fnaming%2Fnet%2FHttpClient.java?ref=6ae100e3903ae9ec8f9f23f74a38776113511c70",
      "patch": "@@ -69,7 +69,7 @@ public static HttpResult request(String url, List<String> headers, Map<String, S\n         HttpURLConnection conn = null;\n         try {\n             String encodedContent = encodingParams(paramValues, encoding);\n-            url += (null == encodedContent) ? \"\" : (\"?\" + encodedContent);\n+            url += (StringUtils.isEmpty(encodedContent)) ? \"\" : (\"?\" + encodedContent);\n \n             conn = (HttpURLConnection) new URL(url).openConnection();\n \n@@ -174,7 +174,7 @@ private static void setHeaders(HttpURLConnection conn, List<String> headers, Str\n     private static String encodingParams(Map<String, String> params, String encoding)\n         throws UnsupportedEncodingException {\n         if (null == params || params.isEmpty()) {\n-            return null;\n+            return \"\";\n         }\n \n         params.put(\"encoding\", encoding);",
      "parent_sha": "fb8cf7d3b6af31a98d3a660d13b94af7a2b78a17"
    }
  },
  {
    "oid": "feb4c098af22dbaf22e7d8d4d6689687169c6623",
    "message": "fix labels from env  (#12604)\n\n* \u4fee\u590d\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e\u6807\u7b7e\u5931\u6548bug\r\n\r\n* pmd\r\n fix",
    "date": "2024-09-05T05:58:48Z",
    "url": "https://github.com/alibaba/nacos/commit/feb4c098af22dbaf22e7d8d4d6689687169c6623",
    "details": {
      "sha": "af2a57d38c904f41c788d0ad30b437d1ca874c06",
      "filename": "common/src/main/java/com/alibaba/nacos/common/labels/impl/DefaultLabelsCollector.java",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/alibaba/nacos/blob/feb4c098af22dbaf22e7d8d4d6689687169c6623/common%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Flabels%2Fimpl%2FDefaultLabelsCollector.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/feb4c098af22dbaf22e7d8d4d6689687169c6623/common%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Flabels%2Fimpl%2FDefaultLabelsCollector.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/common%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Flabels%2Fimpl%2FDefaultLabelsCollector.java?ref=feb4c098af22dbaf22e7d8d4d6689687169c6623",
      "patch": "@@ -44,6 +44,8 @@ public class DefaultLabelsCollector implements LabelsCollector {\n     \n     private static final String UNDERSCORE = \"_\";\n     \n+    private static final String ESCAPE = \"\\\\\";\n+    \n     /**\n      * init labels.\n      *\n@@ -79,12 +81,12 @@ public Map<String, String> collectLabels(Properties properties) {\n         \n         //env\n         LOGGER.info(\"default nacos collect env raw labels: {}\",\n-                System.getenv(Constants.APP_CONN_LABELS_KEY.replaceAll(DOT, UNDERSCORE)));\n+                System.getenv(Constants.APP_CONN_LABELS_KEY.replaceAll(ESCAPE + DOT, UNDERSCORE)));\n         Map<String, String> envLabels = ConnLabelsUtils.parseRawLabels(\n-                System.getenv(Constants.APP_CONN_LABELS_KEY.replaceAll(DOT, UNDERSCORE)));\n-        if (System.getenv(Constants.CONFIG_GRAY_LABEL.replaceAll(DOT, UNDERSCORE)) != null) {\n+                System.getenv(Constants.APP_CONN_LABELS_KEY.replaceAll(ESCAPE + DOT, UNDERSCORE)));\n+        if (System.getenv(Constants.CONFIG_GRAY_LABEL.replaceAll(ESCAPE + DOT, UNDERSCORE)) != null) {\n             envLabels.put(Constants.CONFIG_GRAY_LABEL,\n-                    System.getenv(Constants.CONFIG_GRAY_LABEL.replaceAll(DOT, UNDERSCORE)));\n+                    System.getenv(Constants.CONFIG_GRAY_LABEL.replaceAll(ESCAPE + DOT, UNDERSCORE)));\n         }\n         LOGGER.info(\"default nacos collect env labels: {}\", envLabels);\n         ",
      "parent_sha": "38a204c8a6f2d8c51665520856d2903c03b87a52"
    }
  },
  {
    "oid": "4fa126f7fc33246e14c101be70c68bf13ac580da",
    "message": "Modify the return value comment of the isBasicInfoChanged method (#9849)",
    "date": "2023-01-16T06:02:50Z",
    "url": "https://github.com/alibaba/nacos/commit/4fa126f7fc33246e14c101be70c68bf13ac580da",
    "details": {
      "sha": "9d66525431b9467f945dd5ab440bfd6fb4ed7271",
      "filename": "core/src/main/java/com/alibaba/nacos/core/cluster/MemberUtil.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/alibaba/nacos/blob/4fa126f7fc33246e14c101be70c68bf13ac580da/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fcluster%2FMemberUtil.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/4fa126f7fc33246e14c101be70c68bf13ac580da/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fcluster%2FMemberUtil.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fcluster%2FMemberUtil.java?ref=4fa126f7fc33246e14c101be70c68bf13ac580da",
      "patch": "@@ -257,7 +257,7 @@ public static List<String> simpleMembers(Collection<Member> members) {\n      *\n      * @param actual   actual member\n      * @param expected expected member\n-     * @return true if all content is same, otherwise false\n+     * @return true if one content is different, otherwise false\n      */\n     public static boolean isBasicInfoChanged(Member actual, Member expected) {\n         if (null == expected) {",
      "parent_sha": "c8b04b03fac99c794500bb0bb195bb268079e462"
    }
  },
  {
    "oid": "4e1f587665ca64450f0bfab2a372f353887ee7e3",
    "message": "modify testcases",
    "date": "2019-01-09T08:04:28Z",
    "url": "https://github.com/alibaba/nacos/commit/4e1f587665ca64450f0bfab2a372f353887ee7e3",
    "details": {
      "sha": "41d654ef164dd2278f16e14ac05cdcaf0fffd7e7",
      "filename": "test/src/test/java/com/alibaba/nacos/test/naming/MultipleTenant_ITCase.java",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/alibaba/nacos/blob/4e1f587665ca64450f0bfab2a372f353887ee7e3/test%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Ftest%2Fnaming%2FMultipleTenant_ITCase.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/4e1f587665ca64450f0bfab2a372f353887ee7e3/test%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Ftest%2Fnaming%2FMultipleTenant_ITCase.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/test%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Ftest%2Fnaming%2FMultipleTenant_ITCase.java?ref=4e1f587665ca64450f0bfab2a372f353887ee7e3",
      "patch": "@@ -278,7 +278,7 @@ public void multipleTenant_deregisterInstance() throws Exception {\n     }\n \n     /**\n-     * @TCDescription : \u591a\u79df\u6237\u5220\u9664\u5b9e\u4f8b\n+     * @TCDescription : \u591a\u79df\u6237\u4e0b\uff0c\u9009\u62e9\u4e00\u4e2a\u5065\u5eb7\u7684\u5b9e\u4f8b\n      * @TestStep :\n      * @ExpectResult :\n      */\n@@ -300,6 +300,11 @@ public void multipleTenant_selectOneHealthyInstance() throws Exception {\n         Assert.assertEquals(\"11.11.11.11\", instances.get(0).getIp());\n         instance = naming2.selectOneHealthyInstance(serviceName, Arrays.asList(\"c1\"));\n         Assert.assertNull(instance);\n+\n+        naming1.deregisterInstance(serviceName, \"11.11.11.11\", TEST_PORT);\n+        TimeUnit.SECONDS.sleep(2);\n+        instance = naming1.selectOneHealthyInstance(serviceName);\n+        Assert.assertEquals(\"22.22.22.22\", instances.get(0).getIp());\n     }\n \n     private void verifyInstanceListForNaming(NamingService naming, int size, String serviceName) throws Exception {",
      "parent_sha": "48e2dcc0410a531b51eadaed5b0511116af5b79b"
    }
  },
  {
    "oid": "5aec982e58701b842fe50a17538acb0a1a77608c",
    "message": "String.getBytes()\u7684\u8c03\u7528\u4e2d\u6307\u5b9a\u7f16\u7801",
    "date": "2019-05-15T01:13:50Z",
    "url": "https://github.com/alibaba/nacos/commit/5aec982e58701b842fe50a17538acb0a1a77608c",
    "details": {
      "sha": "17e54f968127061234c06a3342ad25597984e210",
      "filename": "config/src/main/java/com/alibaba/nacos/config/server/utils/ZipUtils.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/alibaba/nacos/blob/5aec982e58701b842fe50a17538acb0a1a77608c/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Futils%2FZipUtils.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/5aec982e58701b842fe50a17538acb0a1a77608c/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Futils%2FZipUtils.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Futils%2FZipUtils.java?ref=5aec982e58701b842fe50a17538acb0a1a77608c",
      "patch": "@@ -1,5 +1,7 @@\n package com.alibaba.nacos.config.server.utils;\n \n+import com.alibaba.nacos.config.server.constant.Constants;\n+\n import java.io.ByteArrayInputStream;\n import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n@@ -29,7 +31,7 @@ public static byte[] gzipString(String source){\n         GZIPOutputStream gzip = null;\n         try {\n             gzip = new GZIPOutputStream(out);\n-            gzip.write(source.getBytes());\n+            gzip.write(source.getBytes(Constants.ENCODE));\n         } catch (IOException e) {\n             e.printStackTrace();\n         } finally {",
      "parent_sha": "c34216d52a4937a709f2dcb699c99ada49c57773"
    }
  },
  {
    "oid": "8d2711ae608031e77e54a09d40ded52f1fc5a3ef",
    "message": "revert error code",
    "date": "2019-08-01T12:26:23Z",
    "url": "https://github.com/alibaba/nacos/commit/8d2711ae608031e77e54a09d40ded52f1fc5a3ef",
    "details": {
      "sha": "62dc25e570c38cae09a44a804c3468389dd7e41c",
      "filename": "naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java",
      "status": "modified",
      "additions": 2,
      "deletions": 9,
      "changes": 11,
      "blob_url": "https://github.com/alibaba/nacos/blob/8d2711ae608031e77e54a09d40ded52f1fc5a3ef/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2FServiceManager.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/8d2711ae608031e77e54a09d40ded52f1fc5a3ef/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2FServiceManager.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2FServiceManager.java?ref=8d2711ae608031e77e54a09d40ded52f1fc5a3ef",
      "patch": "@@ -641,19 +641,12 @@ private void putServiceAndInit(Service service) throws NacosException {\n \n \n     public List<Service> searchServices(String namespaceId, String regex) {\n-        return searchServices(namespaceId, regex, null);\n-    }\n-\n-    public List<Service> searchServices(String namespaceId, String regex, String groupName) {\n         List<Service> result = new ArrayList<>();\n         for (Map.Entry<String, Service> entry : chooseServiceMap(namespaceId).entrySet()) {\n             Service service = entry.getValue();\n-            if(StringUtils.isNotEmpty(groupName)&&!groupName.equals(service.getGroupName())){\n-                continue;\n-            }\n             String key = service.getName() + \":\" + ArrayUtils.toString(service.getOwners());\n-            if(StringUtils.isNotEmpty(regex)&&!key.matches(regex)){\n-                continue;\n+            if (key.matches(regex)) {\n+                result.add(service);\n             }\n             result.add(service);\n         }",
      "parent_sha": "87850d46b8774e17b0d3146556133c0d32ca1a99"
    }
  },
  {
    "oid": "f1fd3bbb6484ebe17c0631d17d87f11214a801b8",
    "message": "Update DumpService.java\n\nproperty with prefix nacos.config",
    "date": "2019-05-10T09:31:55Z",
    "url": "https://github.com/alibaba/nacos/commit/f1fd3bbb6484ebe17c0631d17d87f11214a801b8",
    "details": {
      "sha": "296bc2abec6477038fc5537c568b95d840adc1f4",
      "filename": "config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpService.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/alibaba/nacos/blob/f1fd3bbb6484ebe17c0631d17d87f11214a801b8/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fservice%2Fdump%2FDumpService.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/f1fd3bbb6484ebe17c0631d17d87f11214a801b8/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fservice%2Fdump%2FDumpService.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fservice%2Fdump%2FDumpService.java?ref=f1fd3bbb6484ebe17c0631d17d87f11214a801b8",
      "patch": "@@ -279,7 +279,7 @@ private Boolean isQuickStart() {\n     }\n \n     private int getRetentionDays() {\n-        String val = env.getProperty(\"retention.days\");\n+        String val = env.getProperty(\"nacos.config.retention.days\");\n         if (null == val) {\n             return retentionDays;\n         }\n@@ -291,7 +291,7 @@ private int getRetentionDays() {\n                 retentionDays = tmp;\n             }\n         } catch (NumberFormatException nfe) {\n-            fatalLog.error(\"read retention.days wrong\", nfe);\n+            fatalLog.error(\"read nacos.config.retention.days wrong\", nfe);\n         }\n \n         return retentionDays;",
      "parent_sha": "71d9cb3e04c385ddd3bb5d0e3bffd8826aaf8a13"
    }
  },
  {
    "oid": "b26acdc726d5d6c79ceec2898f2021e8cdd62399",
    "message": "Fix NPE when client factory init (#4923)",
    "date": "2021-02-22T06:47:45Z",
    "url": "https://github.com/alibaba/nacos/commit/b26acdc726d5d6c79ceec2898f2021e8cdd62399",
    "details": {
      "sha": "6298ec5fa843e4153e2755b04a6ba3bb64955595",
      "filename": "naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/factory/ClientFactoryHolder.java",
      "status": "modified",
      "additions": 7,
      "deletions": 6,
      "changes": 13,
      "blob_url": "https://github.com/alibaba/nacos/blob/b26acdc726d5d6c79ceec2898f2021e8cdd62399/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2Fv2%2Fclient%2Ffactory%2FClientFactoryHolder.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/b26acdc726d5d6c79ceec2898f2021e8cdd62399/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2Fv2%2Fclient%2Ffactory%2FClientFactoryHolder.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2Fv2%2Fclient%2Ffactory%2FClientFactoryHolder.java?ref=b26acdc726d5d6c79ceec2898f2021e8cdd62399",
      "patch": "@@ -32,15 +32,16 @@ public class ClientFactoryHolder {\n     \n     private static final ClientFactoryHolder INSTANCE = new ClientFactoryHolder();\n     \n-    private static final HashMap<String, ClientFactory> CLIENT_FACTORIES = new HashMap<>(4);\n+    private final HashMap<String, ClientFactory> clientFactories;\n     \n     private ClientFactoryHolder() {\n+        clientFactories = new HashMap<>(4);\n         Collection<ClientFactory> clientFactories = NacosServiceLoader.load(ClientFactory.class);\n         for (ClientFactory each : clientFactories) {\n-            if (CLIENT_FACTORIES.containsKey(each.getType())) {\n+            if (this.clientFactories.containsKey(each.getType())) {\n                 Loggers.SRV_LOG.warn(\"Client type {} found multiple factory, use {} default\", each.getType(), each.getClass().getCanonicalName());\n             }\n-            CLIENT_FACTORIES.put(each.getType(), each);\n+            this.clientFactories.put(each.getType(), each);\n         }\n     }\n     \n@@ -55,9 +56,9 @@ public static ClientFactoryHolder getInstance() {\n      * @return target type {@link ClientFactory}, if not fount, return 'default' client factory.\n      */\n     public ClientFactory findClientFactory(String type) {\n-        if (!CLIENT_FACTORIES.containsKey(type)) {\n-            return CLIENT_FACTORIES.get(ClientConstants.DEFAULT_FACTORY);\n+        if (!clientFactories.containsKey(type)) {\n+            return clientFactories.get(ClientConstants.DEFAULT_FACTORY);\n         }\n-        return CLIENT_FACTORIES.get(type);\n+        return clientFactories.get(type);\n     }\n }",
      "parent_sha": "2b4142d428a964851d8c8636dc14a21bdb304c46"
    }
  },
  {
    "oid": "2584e59edf52a23ca4019d63152938cfdbab3cfa",
    "message": "Fixes #868",
    "date": "2019-03-07T06:46:34Z",
    "url": "https://github.com/alibaba/nacos/commit/2584e59edf52a23ca4019d63152938cfdbab3cfa",
    "details": {
      "sha": "c901d07f3fadaaec7d06fd71da96746fa83ee678",
      "filename": "client/src/main/java/com/alibaba/nacos/client/logging/log4j2/Log4J2NacosLogging.java",
      "status": "modified",
      "additions": 32,
      "deletions": 7,
      "changes": 39,
      "blob_url": "https://github.com/alibaba/nacos/blob/2584e59edf52a23ca4019d63152938cfdbab3cfa/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Flogging%2Flog4j2%2FLog4J2NacosLogging.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/2584e59edf52a23ca4019d63152938cfdbab3cfa/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Flogging%2Flog4j2%2FLog4J2NacosLogging.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Flogging%2Flog4j2%2FLog4J2NacosLogging.java?ref=2584e59edf52a23ca4019d63152938cfdbab3cfa",
      "patch": "@@ -26,16 +26,22 @@\n import org.apache.logging.log4j.core.config.ConfigurationFactory;\n import org.apache.logging.log4j.core.config.ConfigurationSource;\n import org.apache.logging.log4j.core.config.composite.CompositeConfiguration;\n+import org.apache.logging.log4j.core.lookup.Interpolator;\n+import org.apache.logging.log4j.core.lookup.StrSubstitutor;\n+import org.apache.logging.log4j.util.PropertiesUtil;\n \n import java.io.IOException;\n import java.io.InputStream;\n import java.net.URL;\n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.Collections;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n \n+import static org.apache.logging.log4j.core.config.ConfigurationFactory.CONFIGURATION_FILE_PROPERTY;\n+\n /**\n  * Support for Log4j version 2.7 or higher\n  *\n@@ -52,6 +58,8 @@ public class Log4J2NacosLogging extends AbstractNacosLogging {\n \n     private static final String JSON_PARSER_CLASS_NAME = \"com.fasterxml.jackson.databind.ObjectMapper\";\n \n+    private final StrSubstitutor strSubstitutor = new StrSubstitutor(new Interpolator());\n+\n     private Set<String> locationList = new HashSet<String>();\n \n     public Log4J2NacosLogging() {\n@@ -63,9 +71,13 @@ public Log4J2NacosLogging() {\n \n     @Override\n     public void loadConfiguration() {\n-        String config = findConfig(getCurrentlySupportedConfigLocations());\n-        if (config != null) {\n-            locationList.add(config);\n+        if (locationList.isEmpty()) {\n+            return;\n+        }\n+\n+        List<String> configList = findConfig(getCurrentlySupportedConfigLocations());\n+        if (configList != null) {\n+            locationList.addAll(configList);\n         }\n \n         final List<AbstractConfiguration> configurations = new ArrayList<AbstractConfiguration>();\n@@ -112,22 +124,35 @@ private String[] getCurrentlySupportedConfigLocations() {\n         List<String> supportedConfigLocations = new ArrayList<String>();\n \n         if (ClassUtils.isPresent(YAML_PARSER_CLASS_NAME)) {\n-            Collections.addAll(supportedConfigLocations, \"log4j2.yaml\", \"log4j2.yml\");\n+            Collections.addAll(supportedConfigLocations, \"log4j2.yaml\", \"log4j2.yml\", \"log4j2-test.yaml\",\n+                \"log4j2-test.yml\");\n         }\n \n         if (ClassUtils.isPresent(JSON_PARSER_CLASS_NAME)) {\n-            Collections.addAll(supportedConfigLocations, \"log4j2.json\", \"log4j2.jsn\");\n+            Collections.addAll(supportedConfigLocations, \"log4j2.json\", \"log4j2.jsn\", \"log4j2-test.json\",\n+                \"log4j2-test.jsn\");\n         }\n+\n         supportedConfigLocations.add(\"log4j2.xml\");\n+        supportedConfigLocations.add(\"log4j2-test.xml\");\n \n         return supportedConfigLocations.toArray(new String[supportedConfigLocations.size()]);\n     }\n \n-    private String findConfig(String[] locations) {\n+    private List<String> findConfig(String[] locations) {\n+        final String configLocationStr = this.strSubstitutor.replace(PropertiesUtil.getProperties()\n+            .getStringProperty(CONFIGURATION_FILE_PROPERTY));\n+\n+        if (configLocationStr != null) {\n+            return Arrays.asList(configLocationStr.split(\",\"));\n+        }\n+\n         for (String location : locations) {\n             ClassLoader defaultClassLoader = ClassUtils.getDefaultClassLoader();\n             if (defaultClassLoader != null && defaultClassLoader.getResource(location) != null) {\n-                return \"classpath:\" + location;\n+                List<String> list = new ArrayList<String>();\n+                list.add(\"classpath:\" + location);\n+                return list;\n             }\n         }\n         return null;",
      "parent_sha": "3ded5e3e8bb4d0f04a3a426ac778945304d7bab0"
    }
  },
  {
    "oid": "1a41ab6cfb3451324bb228b56f9703c03d8ba31f",
    "message": "fix-1036 :\u83b7\u53d6\u771f\u6b63\u7684GroupName,\u5e76\u8bbe\u7f6e.\u66ff\u4ee3\u9ed8\u8ba4\u503c",
    "date": "2019-04-15T10:17:41Z",
    "url": "https://github.com/alibaba/nacos/commit/1a41ab6cfb3451324bb228b56f9703c03d8ba31f",
    "details": {
      "sha": "24d78be957972a275a1cb0ca5a6269cb397f4333",
      "filename": "naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/alibaba/nacos/blob/1a41ab6cfb3451324bb228b56f9703c03d8ba31f/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2FServiceManager.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/1a41ab6cfb3451324bb228b56f9703c03d8ba31f/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2FServiceManager.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2FServiceManager.java?ref=1a41ab6cfb3451324bb228b56f9703c03d8ba31f",
      "patch": "@@ -20,6 +20,7 @@\n import com.alibaba.fastjson.JSONObject;\n import com.alibaba.nacos.api.common.Constants;\n import com.alibaba.nacos.api.exception.NacosException;\n+import com.alibaba.nacos.api.naming.utils.NamingUtils;\n import com.alibaba.nacos.naming.cluster.ServerListManager;\n import com.alibaba.nacos.naming.cluster.servers.Server;\n import com.alibaba.nacos.naming.consistency.ConsistencyService;\n@@ -357,7 +358,7 @@ public void createEmptyService(String namespaceId, String serviceName, boolean l\n             service = new Service();\n             service.setName(serviceName);\n             service.setNamespaceId(namespaceId);\n-            service.setGroupName(Constants.DEFAULT_GROUP);\n+            service.setGroupName(NamingUtils.getGroupName(serviceName));\n             // now validate the service. if failed, exception will be thrown\n             service.setLastModifiedMillis(System.currentTimeMillis());\n             service.recalculateChecksum();",
      "parent_sha": "f7142c1151726ea91a83c259b30829525d640c4e"
    }
  },
  {
    "oid": "48ff738511cdb20b92c4cbc5fc60daabea4c3510",
    "message": "Use dynamic server version",
    "date": "2019-08-08T03:44:03Z",
    "url": "https://github.com/alibaba/nacos/commit/48ff738511cdb20b92c4cbc5fc60daabea4c3510",
    "details": {
      "sha": "9d0ed3b5e197de053e7980e9de00ec8c5918457e",
      "filename": "naming/src/main/java/com/alibaba/nacos/naming/misc/UtilsAndCommons.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/alibaba/nacos/blob/48ff738511cdb20b92c4cbc5fc60daabea4c3510/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fmisc%2FUtilsAndCommons.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/48ff738511cdb20b92c4cbc5fc60daabea4c3510/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fmisc%2FUtilsAndCommons.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fmisc%2FUtilsAndCommons.java?ref=48ff738511cdb20b92c4cbc5fc60daabea4c3510",
      "patch": "@@ -21,6 +21,7 @@\n import com.alibaba.fastjson.serializer.SerializeConfig;\n import com.alibaba.fastjson.serializer.SerializerFeature;\n import com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker;\n+import com.alibaba.nacos.common.util.VersionUtils;\n import com.alibaba.nacos.naming.exception.NacosException;\n import com.alibaba.nacos.naming.healthcheck.JsonAdapter;\n import com.alibaba.nacos.naming.selector.Selector;\n@@ -70,7 +71,7 @@ public class UtilsAndCommons {\n \n     public static final String NACOS_SERVER_HEADER = \"Nacos-Server\";\n \n-    public static final String NACOS_VERSION = \"1.0.1\";\n+    public static final String NACOS_VERSION = VersionUtils.VERSION;\n \n     public static final String SUPER_TOKEN = \"xy\";\n ",
      "parent_sha": "6ca2ee0cf871a88fe0211d320bac6242f9412b9d"
    }
  },
  {
    "oid": "f15d818e74cfc41d701fce49ee824659f20833d1",
    "message": "Fix test case error",
    "date": "2018-11-15T12:16:36Z",
    "url": "https://github.com/alibaba/nacos/commit/f15d818e74cfc41d701fce49ee824659f20833d1",
    "details": {
      "sha": "448f812d5e5fc9e8bcfa23c34f493d94546250d0",
      "filename": "test/src/test/java/com/alibaba/nacos/test/naming/DeregisterInstance_ITCase.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/alibaba/nacos/blob/f15d818e74cfc41d701fce49ee824659f20833d1/test%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Ftest%2Fnaming%2FDeregisterInstance_ITCase.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/f15d818e74cfc41d701fce49ee824659f20833d1/test%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Ftest%2Fnaming%2FDeregisterInstance_ITCase.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/test%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Ftest%2Fnaming%2FDeregisterInstance_ITCase.java?ref=f15d818e74cfc41d701fce49ee824659f20833d1",
      "patch": "@@ -105,6 +105,8 @@ public void dregDomClusterTest() throws Exception {\n \n         String serviceName = randomDomainName();\n \n+        System.out.println(serviceName);\n+\n         naming.registerInstance(serviceName, \"127.0.0.1\", TEST_PORT, \"c1\");\n         naming.registerInstance(serviceName, \"127.0.0.2\", TEST_PORT, \"c2\");\n \n@@ -117,7 +119,7 @@ public void dregDomClusterTest() throws Exception {\n \n         naming.deregisterInstance(serviceName, \"127.0.0.1\", TEST_PORT, \"c1\");\n \n-        TimeUnit.SECONDS.sleep(2);\n+        TimeUnit.SECONDS.sleep(5);\n \n         instances = naming.getAllInstances(serviceName);\n ",
      "parent_sha": "eba3ca9c74d895d4442b3c245f58046fa165ca6c"
    }
  },
  {
    "oid": "9585d55adccffde50385ed9af89d385ebfcd53c6",
    "message": "improvement: merge upstream/develop",
    "date": "2020-06-17T07:20:06Z",
    "url": "https://github.com/alibaba/nacos/commit/9585d55adccffde50385ed9af89d385ebfcd53c6",
    "details": {
      "sha": "3b026a6c582feb6c80c2314fd0fe73c4637d82f8",
      "filename": "core/src/main/java/com/alibaba/nacos/core/file/WatchFileCenter.java",
      "status": "modified",
      "additions": 202,
      "deletions": 225,
      "changes": 427,
      "blob_url": "https://github.com/alibaba/nacos/blob/9585d55adccffde50385ed9af89d385ebfcd53c6/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Ffile%2FWatchFileCenter.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/9585d55adccffde50385ed9af89d385ebfcd53c6/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Ffile%2FWatchFileCenter.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Ffile%2FWatchFileCenter.java?ref=9585d55adccffde50385ed9af89d385ebfcd53c6",
      "patch": "@@ -25,241 +25,218 @@\n import org.slf4j.LoggerFactory;\n \n import java.io.File;\n-import java.nio.file.FileSystem;\n-import java.nio.file.FileSystems;\n-import java.nio.file.Path;\n-import java.nio.file.Paths;\n-import java.nio.file.StandardWatchEventKinds;\n-import java.nio.file.WatchEvent;\n-import java.nio.file.WatchKey;\n-import java.nio.file.WatchService;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Objects;\n-import java.util.Set;\n+import java.nio.file.*;\n+import java.util.*;\n import java.util.concurrent.Executor;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.atomic.AtomicBoolean;\n \n /**\n- * Unified file change monitoring management center, which uses {@link WatchService} internally.\n- * One file directory corresponds to one {@link WatchService}. It can only monitor up to 32 file\n- * directories. When a file change occurs, a {@link FileChangeEvent} will be issued\n+ * Unified file change monitoring management center, which uses {@link WatchService} internally. One file directory\n+ * corresponds to one {@link WatchService}. It can only monitor up to 32 file directories. When a file change occurs, a\n+ * {@link FileChangeEvent} will be issued\n  *\n  * @author <a href=\"mailto:liaochuntao@live.com\">liaochuntao</a>\n  */\n public class WatchFileCenter {\n-\n-\tprivate static final Logger LOGGER = LoggerFactory.getLogger(WatchFileCenter.class);\n-\n-\t/**\n-\t * Maximum number of monitored file directories\n-\t */\n-\tprivate static final int MAX_WATCH_FILE_JOB = Integer\n-\t\t\t.getInteger(\"nacos.watch-file.max-dirs\", 16);\n-\n-\tprivate static final Map<String, WatchDirJob> MANAGER = new HashMap<String, WatchDirJob>(\n-\t\t\tMAX_WATCH_FILE_JOB);\n-\n-\tprivate static final FileSystem FILE_SYSTEM = FileSystems.getDefault();\n-\n-\tprivate static final AtomicBoolean CLOSED = new AtomicBoolean(false);\n-\n-\tstatic {\n+    \n+    private static final Logger LOGGER = LoggerFactory.getLogger(WatchFileCenter.class);\n+    \n+    /**\n+     * Maximum number of monitored file directories\n+     */\n+    private static final int MAX_WATCH_FILE_JOB = Integer.getInteger(\"nacos.watch-file.max-dirs\", 16);\n+    \n+    private static final Map<String, WatchDirJob> MANAGER = new HashMap<String, WatchDirJob>(MAX_WATCH_FILE_JOB);\n+    \n+    private static final FileSystem FILE_SYSTEM = FileSystems.getDefault();\n+    \n+    private static final AtomicBoolean CLOSED = new AtomicBoolean(false);\n+    \n+    static {\n         ThreadUtils.addShutdownHook(new Runnable() {\n-\t\t\t@Override\n-\t\t\tpublic void run() {\n-\t\t\t\tshutdown();\n-\t\t\t}\n-\t\t});\n-\t}\n-\n-\t/**\n-\t * The number of directories that are currently monitored\n-\t */\n-\tprivate static int NOW_WATCH_JOB_CNT = 0;\n-\n-\tpublic synchronized static boolean registerWatcher(final String paths,\n-\t\t\tFileWatcher watcher) throws NacosException {\n-\t\tcheckState();\n-\t\tNOW_WATCH_JOB_CNT++;\n-\t\tif (NOW_WATCH_JOB_CNT > MAX_WATCH_FILE_JOB) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tWatchDirJob job = MANAGER.get(paths);\n-\t\tif (job == null) {\n-\t\t\tjob = new WatchDirJob(paths);\n-\t\t\tjob.start();\n-\t\t\tMANAGER.put(paths, job);\n-\t\t}\n-\t\tjob.addSubscribe(watcher);\n-\t\treturn true;\n-\t}\n-\n-\tpublic synchronized static boolean deregisterAllWatcher(final String path) {\n-\t\tWatchDirJob job = MANAGER.get(path);\n-\t\tif (job != null) {\n-\t\t\tjob.shutdown();\n-\t\t\tMANAGER.remove(path);\n-\t\t\treturn true;\n-\t\t}\n-\t\treturn false;\n-\t}\n-\n-\tpublic static void shutdown() {\n-\t\tif (!CLOSED.compareAndSet(false, true)) {\n-\t\t\treturn;\n-\t\t}\n-\t\tLOGGER.warn(\"[WatchFileCenter] start close\");\n-\t\tfor (Map.Entry<String, WatchDirJob> entry : MANAGER.entrySet()) {\n-\t\t\tLOGGER.warn(\"[WatchFileCenter] start to shutdown this watcher which is watch : \" + entry.getKey());\n-\t\t\ttry {\n-\t\t\t\tentry.getValue().shutdown();\n-\t\t\t} catch (Throwable e) {\n-\t\t\t\tLOGGER.error(\"[WatchFileCenter] shutdown has error : {}\", e);\n-\t\t\t}\n-\t\t}\n-\t\tMANAGER.clear();\n-\t\tLOGGER.warn(\"[WatchFileCenter] already closed\");\n-\t}\n-\n-\tpublic synchronized static boolean deregisterWatcher(final String path, final FileWatcher watcher) {\n-\t\tWatchDirJob job = MANAGER.get(path);\n-\t\tif (job != null) {\n-\t\t\tjob.watchers.remove(watcher);\n-\t\t\treturn true;\n-\t\t}\n-\t\treturn false;\n-\t}\n-\n-\tprivate static class WatchDirJob extends Thread {\n-\n-\t\tprivate ExecutorService callBackExecutor;\n-\n-\t\tprivate final String paths;\n-\n-\t\tprivate WatchService watchService;\n-\n-\t\tprivate volatile boolean watch = true;\n-\n-\t\tprivate Set<FileWatcher> watchers = new ConcurrentHashSet<>();\n-\n-\t\tpublic WatchDirJob(String paths) throws NacosException {\n-\t\t\tsetName(paths);\n-\t\t\tthis.paths = paths;\n-\t\t\tfinal Path p = Paths.get(paths);\n-\t\t\tif (!p.toFile().isDirectory()) {\n-\t\t\t\tthrow new IllegalArgumentException(\"Must be a file directory : \" + paths);\n-\t\t\t}\n-\n-\t\t\tthis.callBackExecutor = ExecutorFactory\n-\t\t\t\t\t.newFixExecutorService(WatchFileCenter.class.getCanonicalName(),\n-\t\t\t\t\t\t\t1,\n-\t\t\t\t\t\t\tnew NameThreadFactory(\"com.alibaba.nacos.file.watch-\" + paths));\n-\n-\t\t\ttry {\n-\t\t\t\tWatchService service = FILE_SYSTEM.newWatchService();\n-\t\t\t\tp.register(service, StandardWatchEventKinds.OVERFLOW,\n-\t\t\t\t\t\tStandardWatchEventKinds.ENTRY_MODIFY,\n-\t\t\t\t\t\tStandardWatchEventKinds.ENTRY_CREATE,\n-\t\t\t\t\t\tStandardWatchEventKinds.ENTRY_DELETE);\n-\t\t\t\tthis.watchService = service;\n-\t\t\t}\n-\t\t\tcatch (Throwable ex) {\n-\t\t\t\tthrow new NacosException(NacosException.SERVER_ERROR, ex);\n-\t\t\t}\n-\t\t}\n-\n-\t\tvoid addSubscribe(final FileWatcher watcher) {\n-\t\t\twatchers.add(watcher);\n-\t\t}\n-\n-\t\tvoid shutdown() {\n-\t\t\twatch = false;\n-\t\t}\n-\n-\t\t@Override\n-\t\tpublic void run() {\n-\t\t\twhile (watch) {\n-\t\t\t\ttry {\n-\t\t\t\t\tfinal WatchKey watchKey = watchService.take();\n-\t\t\t\t\tfinal List<WatchEvent<?>> events = watchKey.pollEvents();\n-\t\t\t\t\twatchKey.reset();\n-\t\t\t\t\tif (callBackExecutor.isShutdown()) {\n-\t\t\t\t\t\treturn;\n-\t\t\t\t\t}\n-                    if(events.isEmpty()) {\n+            @Override\n+            public void run() {\n+                shutdown();\n+            }\n+        });\n+    }\n+    \n+    /**\n+     * The number of directories that are currently monitored\n+     */\n+    private static int NOW_WATCH_JOB_CNT = 0;\n+    \n+    public synchronized static boolean registerWatcher(final String paths, FileWatcher watcher) throws NacosException {\n+        checkState();\n+        NOW_WATCH_JOB_CNT++;\n+        if (NOW_WATCH_JOB_CNT > MAX_WATCH_FILE_JOB) {\n+            return false;\n+        }\n+        WatchDirJob job = MANAGER.get(paths);\n+        if (job == null) {\n+            job = new WatchDirJob(paths);\n+            job.start();\n+            MANAGER.put(paths, job);\n+        }\n+        job.addSubscribe(watcher);\n+        return true;\n+    }\n+    \n+    public synchronized static boolean deregisterAllWatcher(final String path) {\n+        WatchDirJob job = MANAGER.get(path);\n+        if (job != null) {\n+            job.shutdown();\n+            MANAGER.remove(path);\n+            return true;\n+        }\n+        return false;\n+    }\n+    \n+    public static void shutdown() {\n+        if (!CLOSED.compareAndSet(false, true)) {\n+            return;\n+        }\n+        LOGGER.warn(\"[WatchFileCenter] start close\");\n+        for (Map.Entry<String, WatchDirJob> entry : MANAGER.entrySet()) {\n+            LOGGER.warn(\"[WatchFileCenter] start to shutdown this watcher which is watch : \" + entry.getKey());\n+            try {\n+                entry.getValue().shutdown();\n+            } catch (Throwable e) {\n+                LOGGER.error(\"[WatchFileCenter] shutdown has error : {}\", e);\n+            }\n+        }\n+        MANAGER.clear();\n+        LOGGER.warn(\"[WatchFileCenter] already closed\");\n+    }\n+    \n+    public synchronized static boolean deregisterWatcher(final String path, final FileWatcher watcher) {\n+        WatchDirJob job = MANAGER.get(path);\n+        if (job != null) {\n+            job.watchers.remove(watcher);\n+            return true;\n+        }\n+        return false;\n+    }\n+    \n+    private static class WatchDirJob extends Thread {\n+        \n+        private ExecutorService callBackExecutor;\n+        \n+        private final String paths;\n+        \n+        private WatchService watchService;\n+        \n+        private volatile boolean watch = true;\n+        \n+        private Set<FileWatcher> watchers = new ConcurrentHashSet<>();\n+        \n+        public WatchDirJob(String paths) throws NacosException {\n+            setName(paths);\n+            this.paths = paths;\n+            final Path p = Paths.get(paths);\n+            if (!p.toFile().isDirectory()) {\n+                throw new IllegalArgumentException(\"Must be a file directory : \" + paths);\n+            }\n+            \n+            this.callBackExecutor = ExecutorFactory.newFixExecutorService(WatchFileCenter.class.getCanonicalName(), 1,\n+                    new NameThreadFactory(\"com.alibaba.nacos.file.watch-\" + paths));\n+            \n+            try {\n+                WatchService service = FILE_SYSTEM.newWatchService();\n+                p.register(service, StandardWatchEventKinds.OVERFLOW, StandardWatchEventKinds.ENTRY_MODIFY,\n+                        StandardWatchEventKinds.ENTRY_CREATE, StandardWatchEventKinds.ENTRY_DELETE);\n+                this.watchService = service;\n+            } catch (Throwable ex) {\n+                throw new NacosException(NacosException.SERVER_ERROR, ex);\n+            }\n+        }\n+        \n+        void addSubscribe(final FileWatcher watcher) {\n+            watchers.add(watcher);\n+        }\n+        \n+        void shutdown() {\n+            watch = false;\n+        }\n+        \n+        @Override\n+        public void run() {\n+            while (watch) {\n+                try {\n+                    final WatchKey watchKey = watchService.take();\n+                    final List<WatchEvent<?>> events = watchKey.pollEvents();\n+                    watchKey.reset();\n+                    if (callBackExecutor.isShutdown()) {\n+                        return;\n+                    }\n+                    if (events.isEmpty()) {\n                         continue;\n                     }\n-\t\t\t\t\tcallBackExecutor.execute(new Runnable() {\n-\t\t\t\t\t\t@Override\n-\t\t\t\t\t\tpublic void run() {\n-\t\t\t\t\t\t\tfor (WatchEvent<?> event : events) {\n-\t\t\t\t\t\t\t\tWatchEvent.Kind<?> kind = event.kind();\n-\n-\t\t\t\t\t\t\t\t// Since the OS's event cache may be overflow, a backstop is needed\n-\t\t\t\t\t\t\t\tif (StandardWatchEventKinds.OVERFLOW.equals(kind)) {\n-\t\t\t\t\t\t\t\t\teventOverflow();\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\telse {\n-\t\t\t\t\t\t\t\t\teventProcess(event.context());\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t});\n-\t\t\t\t}\n-\t\t\t\tcatch (InterruptedException ignore) {\n-\t\t\t\t\tThread.interrupted();\n-\t\t\t\t} catch (Throwable ex) {\n-\t\t\t\t\tLOGGER.error(\"An exception occurred during file listening : {}\", ex);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\n-\t\tprivate void eventProcess(Object context) {\n-\t\t\tfinal FileChangeEvent fileChangeEvent = FileChangeEvent.builder().paths(paths)\n-\t\t\t\t\t.context(context).build();\n-\t\t\tfinal String str = String.valueOf(context);\n-\t\t\tfor (final FileWatcher watcher : watchers) {\n-\t\t\t\tif (watcher.interest(str)) {\n-\t\t\t\t\tRunnable job = new Runnable() {\n-\t\t\t\t\t\t@Override\n-\t\t\t\t\t\tpublic void run() {\n-\t\t\t\t\t\t\twatcher.onChange(fileChangeEvent);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t};\n-\t\t\t\t\tExecutor executor = watcher.executor();\n-\t\t\t\t\tif (executor == null) {\n-\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\tjob.run();\n-\t\t\t\t\t\t} catch (Throwable ex) {\n-\t\t\t\t\t\t\tLOGGER.error(\"File change event callback error : {}\", ex);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t\telse {\n-\t\t\t\t\t\texecutor.execute(job);\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\n-\t\tprivate void eventOverflow() {\n-\t\t\tFile dir = Paths.get(paths).toFile();\n-\t\t\tfor (File file : Objects.requireNonNull(dir.listFiles())) {\n-\t\t\t\t// Subdirectories do not participate in listening\n-\t\t\t\tif (file.isDirectory()) {\n-\t\t\t\t\tcontinue;\n-\t\t\t\t}\n-\t\t\t\teventProcess(file.getName());\n-\t\t\t}\n-\t\t}\n-\n-\t}\n-\n-\tprivate static void checkState() {\n-\t\tif (CLOSED.get()) {\n-\t\t\tthrow new IllegalStateException(\"WatchFileCenter already shutdown\");\n-\t\t}\n-\t}\n+                    callBackExecutor.execute(new Runnable() {\n+                        @Override\n+                        public void run() {\n+                            for (WatchEvent<?> event : events) {\n+                                WatchEvent.Kind<?> kind = event.kind();\n+                                \n+                                // Since the OS's event cache may be overflow, a backstop is needed\n+                                if (StandardWatchEventKinds.OVERFLOW.equals(kind)) {\n+                                    eventOverflow();\n+                                } else {\n+                                    eventProcess(event.context());\n+                                }\n+                            }\n+                        }\n+                    });\n+                } catch (InterruptedException ignore) {\n+                    Thread.interrupted();\n+                } catch (Throwable ex) {\n+                    LOGGER.error(\"An exception occurred during file listening : {}\", ex);\n+                }\n+            }\n+        }\n+        \n+        private void eventProcess(Object context) {\n+            final FileChangeEvent fileChangeEvent = FileChangeEvent.builder().paths(paths).context(context).build();\n+            final String str = String.valueOf(context);\n+            for (final FileWatcher watcher : watchers) {\n+                if (watcher.interest(str)) {\n+                    Runnable job = new Runnable() {\n+                        @Override\n+                        public void run() {\n+                            watcher.onChange(fileChangeEvent);\n+                        }\n+                    };\n+                    Executor executor = watcher.executor();\n+                    if (executor == null) {\n+                        try {\n+                            job.run();\n+                        } catch (Throwable ex) {\n+                            LOGGER.error(\"File change event callback error : {}\", ex);\n+                        }\n+                    } else {\n+                        executor.execute(job);\n+                    }\n+                }\n+            }\n+        }\n+        \n+        private void eventOverflow() {\n+            File dir = Paths.get(paths).toFile();\n+            for (File file : Objects.requireNonNull(dir.listFiles())) {\n+                // Subdirectories do not participate in listening\n+                if (file.isDirectory()) {\n+                    continue;\n+                }\n+                eventProcess(file.getName());\n+            }\n+        }\n+        \n+    }\n+    \n+    private static void checkState() {\n+        if (CLOSED.get()) {\n+            throw new IllegalStateException(\"WatchFileCenter already shutdown\");\n+        }\n+    }\n }",
      "parent_sha": "3f401c94d6bf52a6089f25506959a82852511e81"
    }
  },
  {
    "oid": "356d994e3905dd6b3287aacf99167ac4334e478b",
    "message": "Fixed PMD issue",
    "date": "2018-10-03T13:58:09Z",
    "url": "https://github.com/alibaba/nacos/commit/356d994e3905dd6b3287aacf99167ac4334e478b",
    "details": {
      "sha": "eaf7594b2ec6326c35e6dc11f57b41143617d74e",
      "filename": "core/src/main/java/com/alibaba/nacos/core/env/NacosDefaultPropertySourceEnvironmentPostProcessor.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/alibaba/nacos/blob/356d994e3905dd6b3287aacf99167ac4334e478b/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fenv%2FNacosDefaultPropertySourceEnvironmentPostProcessor.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/356d994e3905dd6b3287aacf99167ac4334e478b/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fenv%2FNacosDefaultPropertySourceEnvironmentPostProcessor.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/core%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcore%2Fenv%2FNacosDefaultPropertySourceEnvironmentPostProcessor.java?ref=356d994e3905dd6b3287aacf99167ac4334e478b",
      "patch": "@@ -97,7 +97,8 @@ private void appendPropertySource(CompositePropertySource propertySource, Resour\n         ResourcePatternResolver resourcePatternResolver = new PathMatchingResourcePatternResolver(resourceLoader);\n         Resource[] resources = resourcePatternResolver.getResources(RESOURCE_LOCATION_PATTERN);\n         for (Resource resource : resources) {\n-            if (resource.exists()) { // Add if exists\n+            // Add if exists\n+            if (resource.exists()) {\n                 String internalName = String.valueOf(resource.getURL());\n                 propertySource.addPropertySource(new ResourcePropertySource(internalName,\n                         new EncodedResource(resource, FILE_ENCODING)));",
      "parent_sha": "91e8795486ae8e835e3cb6135c1113f2123d748a"
    }
  },
  {
    "oid": "164ad3a8b946265d153d8754ae8b22c06f803de5",
    "message": "Revert \"for #3621 (#3668)\" (#3999)\n\nThis reverts commit 29ba11eb to fix #3992",
    "date": "2020-10-16T03:19:52Z",
    "url": "https://github.com/alibaba/nacos/commit/164ad3a8b946265d153d8754ae8b22c06f803de5",
    "details": {
      "sha": "8bdf2a987030ca030e399f2a47285fdbdb4e49ea",
      "filename": "client/src/main/java/com/alibaba/nacos/client/security/SecurityProxy.java",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/alibaba/nacos/blob/164ad3a8b946265d153d8754ae8b22c06f803de5/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fsecurity%2FSecurityProxy.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/164ad3a8b946265d153d8754ae8b22c06f803de5/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fsecurity%2FSecurityProxy.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fsecurity%2FSecurityProxy.java?ref=164ad3a8b946265d153d8754ae8b22c06f803de5",
      "patch": "@@ -28,8 +28,6 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import java.io.UnsupportedEncodingException;\n-import java.net.URLEncoder;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n@@ -127,13 +125,13 @@ public boolean login(List<String> servers) {\n      * @param server server address\n      * @return true if login successfully\n      */\n-    public boolean login(String server) throws UnsupportedEncodingException {\n+    public boolean login(String server) {\n         \n         if (StringUtils.isNotBlank(username)) {\n             Map<String, String> params = new HashMap<String, String>(2);\n             Map<String, String> bodyMap = new HashMap<String, String>(2);\n             params.put(\"username\", username);\n-            bodyMap.put(\"password\", URLEncoder.encode(password, \"utf-8\"));\n+            bodyMap.put(\"password\", password);\n             String url = \"http://\" + server + contextPath + LOGIN_URL;\n             \n             if (server.contains(Constants.HTTP_PREFIX)) {",
      "parent_sha": "7527d76743d57744a855e304dfe81bebfc810874"
    }
  },
  {
    "oid": "21b624e30274d53bd8ea8c08c869c997344c885f",
    "message": "[ISSUE #8931] Fix bug :BatchInstanceData cannot Serializable question (#8940)\n\n* [fix] fix BatchInstanceData cannot Serializable question\r\n\r\n* fix update serialVersionUID auto generate",
    "date": "2022-08-12T08:44:15Z",
    "url": "https://github.com/alibaba/nacos/commit/21b624e30274d53bd8ea8c08c869c997344c885f",
    "details": {
      "sha": "d959641a708fc8eac206b745aa44f9c7402350cf",
      "filename": "naming/src/main/java/com/alibaba/nacos/naming/core/v2/pojo/BatchInstanceData.java",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/alibaba/nacos/blob/21b624e30274d53bd8ea8c08c869c997344c885f/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2Fv2%2Fpojo%2FBatchInstanceData.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/21b624e30274d53bd8ea8c08c869c997344c885f/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2Fv2%2Fpojo%2FBatchInstanceData.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2Fv2%2Fpojo%2FBatchInstanceData.java?ref=21b624e30274d53bd8ea8c08c869c997344c885f",
      "patch": "@@ -16,6 +16,7 @@\n \n package com.alibaba.nacos.naming.core.v2.pojo;\n \n+import java.io.Serializable;\n import java.util.List;\n \n /**\n@@ -24,7 +25,9 @@\n  * @author : ChenHao26\n  * @Date: 2022/6/24 16:25\n  */\n-public class BatchInstanceData {\n+public class BatchInstanceData implements Serializable {\n+\n+    private static final long serialVersionUID = 7845847904043098494L;\n     \n     private List<String> namespaces;\n     ",
      "parent_sha": "474b25dff575f6f2a1bc79986819ac9c5348da32"
    }
  },
  {
    "oid": "7c30c4ea96733dc00c86ba90c7d2a938a223d436",
    "message": "fix always load property when the contextPath is '/'",
    "date": "2020-11-19T04:27:59Z",
    "url": "https://github.com/alibaba/nacos/commit/7c30c4ea96733dc00c86ba90c7d2a938a223d436",
    "details": {
      "sha": "92e1cbdd734ef92cfc2378f9199b536a3db995e7",
      "filename": "sys/src/main/java/com/alibaba/nacos/sys/env/EnvUtil.java",
      "status": "modified",
      "additions": 3,
      "deletions": 5,
      "changes": 8,
      "blob_url": "https://github.com/alibaba/nacos/blob/7c30c4ea96733dc00c86ba90c7d2a938a223d436/sys%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fsys%2Fenv%2FEnvUtil.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/7c30c4ea96733dc00c86ba90c7d2a938a223d436/sys%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fsys%2Fenv%2FEnvUtil.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/sys%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fsys%2Fenv%2FEnvUtil.java?ref=7c30c4ea96733dc00c86ba90c7d2a938a223d436",
      "patch": "@@ -70,7 +70,7 @@ public class EnvUtil {\n     \n     private static String functionModeType = null;\n     \n-    private static String contextPath = \"\";\n+    private static String contextPath = null;\n     \n     @JustForTest\n     private static String confPath = \"\";\n@@ -161,10 +161,8 @@ public static void setPort(int port) {\n     }\n     \n     public static String getContextPath() {\n-        if (StringUtils.isBlank(contextPath)) {\n-            if (StringUtils.isBlank(contextPath)) {\n-                contextPath = getProperty(Constants.WEB_CONTEXT_PATH, \"/nacos\");\n-            }\n+        if (Objects.isNull(contextPath)) {\n+            contextPath = getProperty(Constants.WEB_CONTEXT_PATH, \"/nacos\");\n             if (Constants.ROOT_WEB_CONTEXT_PATH.equals(contextPath)) {\n                 return StringUtils.EMPTY;\n             } else {",
      "parent_sha": "501b1e73e4fc94ed574c56b9a6394a095f8e934a"
    }
  },
  {
    "oid": "c52589fd033591ead940b1c7c47e178ed40a6a40",
    "message": "[Reduce dependence]>[Iterators] Replace \"google.common.collect.*\" API with jdk API (#6447)",
    "date": "2021-07-26T01:29:43Z",
    "url": "https://github.com/alibaba/nacos/commit/c52589fd033591ead940b1c7c47e178ed40a6a40",
    "details": {
      "sha": "bc1e94df0a4e7f1223ed1e92c796a5992de11ed5",
      "filename": "common/src/test/java/com/alibaba/nacos/common/utils/CollectionUtilsTest.java",
      "status": "modified",
      "additions": 23,
      "deletions": 7,
      "changes": 30,
      "blob_url": "https://github.com/alibaba/nacos/blob/c52589fd033591ead940b1c7c47e178ed40a6a40/common%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Futils%2FCollectionUtilsTest.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/c52589fd033591ead940b1c7c47e178ed40a6a40/common%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Futils%2FCollectionUtilsTest.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/common%2Fsrc%2Ftest%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fcommon%2Futils%2FCollectionUtilsTest.java?ref=c52589fd033591ead940b1c7c47e178ed40a6a40",
      "patch": "@@ -17,14 +17,15 @@\n package com.alibaba.nacos.common.utils;\n \n import com.google.common.collect.ImmutableMap;\n-import com.google.common.collect.Iterators;\n import com.google.common.collect.Maps;\n import org.junit.Assert;\n import org.junit.Test;\n import org.mockito.internal.util.collections.Sets;\n \n import java.util.Arrays;\n import java.util.Collections;\n+import java.util.Enumeration;\n+import java.util.Iterator;\n import java.util.Vector;\n import java.util.stream.Collectors;\n import java.util.stream.IntStream;\n@@ -136,12 +137,12 @@ public void testGetCollection3() {\n     \n     @Test(expected = IndexOutOfBoundsException.class)\n     public void testGetEnumeration1() {\n-        CollectionUtils.get(Iterators.asEnumeration(Collections.emptyIterator()), 0);\n+        CollectionUtils.get(asEnumeration(Collections.emptyIterator()), 0);\n     }\n     \n     @Test(expected = IndexOutOfBoundsException.class)\n     public void testGetEnumeration2() {\n-        CollectionUtils.get(Iterators.asEnumeration(Collections.emptyIterator()), -1);\n+        CollectionUtils.get(asEnumeration(Collections.emptyIterator()), -1);\n     }\n     \n     @Test\n@@ -194,8 +195,8 @@ public void testSize() {\n         Assert.assertEquals(2, CollectionUtils.size(Arrays.asList(\"1\", \"2\").iterator()));\n         \n         // enumeration\n-        Assert.assertEquals(0, CollectionUtils.size(Iterators.asEnumeration(Collections.emptyIterator())));\n-        Assert.assertEquals(1, CollectionUtils.size(Iterators.asEnumeration(Collections.singleton(\"\").iterator())));\n+        Assert.assertEquals(0, CollectionUtils.size(asEnumeration(Collections.emptyIterator())));\n+        Assert.assertEquals(1, CollectionUtils.size(asEnumeration(Collections.singleton(\"\").iterator())));\n     }\n     \n     @Test(expected = IllegalArgumentException.class)\n@@ -231,8 +232,8 @@ public void testSizeIsEmpty() {\n         Assert.assertFalse(CollectionUtils.sizeIsEmpty(Arrays.asList(\"1\", \"2\").iterator()));\n         \n         // enumeration\n-        Assert.assertTrue(CollectionUtils.sizeIsEmpty(Iterators.asEnumeration(Collections.emptyIterator())));\n-        Assert.assertFalse(CollectionUtils.sizeIsEmpty(Iterators.asEnumeration(Collections.singleton(\"\").iterator())));\n+        Assert.assertTrue(CollectionUtils.sizeIsEmpty(asEnumeration(Collections.emptyIterator())));\n+        Assert.assertFalse(CollectionUtils.sizeIsEmpty(asEnumeration(Collections.singleton(\"\").iterator())));\n     }\n     \n     @Test(expected = IllegalArgumentException.class)\n@@ -271,4 +272,19 @@ public void testGetOrDefault() {\n         Assert.assertEquals(\"element\",\n                 CollectionUtils.getOrDefault(Collections.singletonList(\"element\"), 0, \"default\"));\n     }\n+    \n+    private <T> Enumeration<T> asEnumeration(final Iterator<T> iterator) {\n+        if (iterator == null) {\n+            throw new IllegalArgumentException(\"iterator cannot be null \");\n+        }\n+        return new Enumeration<T>() {\n+            public boolean hasMoreElements() {\n+                return iterator.hasNext();\n+            }\n+        \n+            public T nextElement() {\n+                return iterator.next();\n+            }\n+        };\n+    }\n }",
      "parent_sha": "54408d49b372d2ded83f48e4d78413ea24db6c33"
    }
  },
  {
    "oid": "9d579761678c51f7539a3187b7ac42bd085e0315",
    "message": "change the comment from Chinese to English",
    "date": "2019-06-04T08:21:21Z",
    "url": "https://github.com/alibaba/nacos/commit/9d579761678c51f7539a3187b7ac42bd085e0315",
    "details": {
      "sha": "a8ef929b0ad5689452ae7f99d1ffcc84ed0e61e6",
      "filename": "client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/alibaba/nacos/blob/9d579761678c51f7539a3187b7ac42bd085e0315/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fconfig%2Fimpl%2FServerListManager.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/9d579761678c51f7539a3187b7ac42bd085e0315/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fconfig%2Fimpl%2FServerListManager.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Fconfig%2Fimpl%2FServerListManager.java?ref=9d579761678c51f7539a3187b7ac42bd085e0315",
      "patch": "@@ -182,7 +182,7 @@ public String call() {\n \n         String endpointTmp = properties.getProperty(PropertyKeyConst.ENDPOINT);\n \n-        // \u662f\u5426\u5f00\u542f\u57df\u540d\u89e3\u6790\u89c4\u5219\n+        // Whether to enable domain name resolution rules\n         String isUseEndpointRuleParsing =\n             properties.getProperty(PropertyKeyConst.IS_USE_ENDPOINT_PARSING_RULE,\n                 System.getProperty(SystemPropertyKeyConst.IS_USE_ENDPOINT_PARSING_RULE,\n@@ -359,7 +359,7 @@ public String getTenant() {\n     }\n \n     /**\n-     * \u4e0d\u540c\u73af\u5883\u7684\u540d\u79f0\n+     * The name of the different environment\n      */\n     private String name;\n     private String namespace = \"\";\n@@ -369,7 +369,7 @@ public String getTenant() {\n     static public final String FIXED_NAME = \"fixed\";\n     private int initServerlistRetryTimes = 5;\n     /**\n-     * \u548c\u5176\u4ed6server\u7684\u8fde\u63a5\u8d85\u65f6\u548csocket\u8d85\u65f6\n+     * Connection timeout and socket timeout with other servers\n      */\n     static final int TIMEOUT = 5000;\n \n@@ -391,7 +391,7 @@ public String getTenant() {\n }\n \n /**\n- * \u5bf9\u5730\u5740\u5217\u8868\u6392\u5e8f\uff0c\u540c\u673a\u623f\u4f18\u5148\u3002\n+ * Sort the address list, with the same room priority.\n  */\n class ServerAddressIterator implements Iterator<String> {\n ",
      "parent_sha": "302ae79b3fc3030dfe2fb3a13131f2db7183c1f9"
    }
  },
  {
    "oid": "ade162c4be36cb10cd7901f757c8fe4ccf6c3f08",
    "message": "[ISSUE #7593] judge whether file exists in disk (#7677)",
    "date": "2022-02-21T10:33:16Z",
    "url": "https://github.com/alibaba/nacos/commit/ade162c4be36cb10cd7901f757c8fe4ccf6c3f08",
    "details": {
      "sha": "7e3e96256ebf0edcb3f06a04ae124496d48fee9a",
      "filename": "config/src/main/java/com/alibaba/nacos/config/server/service/ConfigCacheService.java",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/alibaba/nacos/blob/ade162c4be36cb10cd7901f757c8fe4ccf6c3f08/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fservice%2FConfigCacheService.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/ade162c4be36cb10cd7901f757c8fe4ccf6c3f08/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fservice%2FConfigCacheService.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/config%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fconfig%2Fserver%2Fservice%2FConfigCacheService.java?ref=ade162c4be36cb10cd7901f757c8fe4ccf6c3f08",
      "patch": "@@ -106,7 +106,7 @@ public static boolean dump(String dataId, String group, String tenant, String co\n         try {\n             final String md5 = MD5Utils.md5Hex(content, Constants.ENCODE);\n             \n-            if (md5.equals(ConfigCacheService.getContentMd5(groupKey))) {\n+            if (md5.equals(ConfigCacheService.getContentMd5(groupKey)) && DiskUtil.targetFile(dataId, group, tenant).exists()) {\n                 DUMP_LOG.warn(\"[dump-ignore] ignore to save cache file. groupKey={}, md5={}, lastModifiedOld={}, \"\n                                 + \"lastModifiedNew={}\", groupKey, md5, ConfigCacheService.getLastModifiedTs(groupKey),\n                         lastModifiedTs);\n@@ -158,7 +158,7 @@ public static boolean dumpBeta(String dataId, String group, String tenant, Strin\n         \n         try {\n             final String md5 = MD5Utils.md5Hex(content, Constants.ENCODE);\n-            if (md5.equals(ConfigCacheService.getContentBetaMd5(groupKey))) {\n+            if (md5.equals(ConfigCacheService.getContentBetaMd5(groupKey)) && DiskUtil.targetBetaFile(dataId, group, tenant).exists()) {\n                 DUMP_LOG.warn(\"[dump-beta-ignore] ignore to save cache file. groupKey={}, md5={}, lastModifiedOld={}, \"\n                                 + \"lastModifiedNew={}\", groupKey, md5, ConfigCacheService.getLastModifiedTs(groupKey),\n                         lastModifiedTs);\n@@ -203,7 +203,7 @@ public static boolean dumpTag(String dataId, String group, String tenant, String\n         \n         try {\n             final String md5 = MD5Utils.md5Hex(content, Constants.ENCODE);\n-            if (md5.equals(ConfigCacheService.getContentTagMd5(groupKey, tag))) {\n+            if (md5.equals(ConfigCacheService.getContentTagMd5(groupKey, tag)) && DiskUtil.targetTagFile(dataId, group, tenant, tag).exists()) {\n                 DUMP_LOG.warn(\"[dump-tag-ignore] ignore to save cache file. groupKey={}, md5={}, lastModifiedOld={}, \"\n                                 + \"lastModifiedNew={}\", groupKey, md5, ConfigCacheService.getLastModifiedTs(groupKey),\n                         lastModifiedTs);\n@@ -341,8 +341,8 @@ public static List<String> checkMd5() {\n             String group = dg[1];\n             String tenant = dg[2];\n             try {\n-                String loacalMd5 = DiskUtil.getLocalConfigMd5(dataId, group, tenant);\n-                if (!entry.getValue().md5.equals(loacalMd5)) {\n+                String localMd5 = DiskUtil.getLocalConfigMd5(dataId, group, tenant);\n+                if (!entry.getValue().md5.equals(localMd5)) {\n                     DEFAULT_LOG.warn(\"[md5-different] dataId:{},group:{}\", dataId, group);\n                     diffList.add(groupKey);\n                 }",
      "parent_sha": "e24a80d61c84010b607b72de86eac734a94690c7"
    }
  },
  {
    "oid": "6bb0e4b6e0a8784d27855b7b398e4b15bb881ce4",
    "message": "add client context path config",
    "date": "2019-11-25T08:52:50Z",
    "url": "https://github.com/alibaba/nacos/commit/6bb0e4b6e0a8784d27855b7b398e4b15bb881ce4",
    "details": {
      "sha": "7f8f6004c59184f14efe67be943ba6dd4284d4f0",
      "filename": "client/src/main/java/com/alibaba/nacos/client/utils/ParamUtil.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/alibaba/nacos/blob/6bb0e4b6e0a8784d27855b7b398e4b15bb881ce4/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Futils%2FParamUtil.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/6bb0e4b6e0a8784d27855b7b398e4b15bb881ce4/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Futils%2FParamUtil.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Futils%2FParamUtil.java?ref=6bb0e4b6e0a8784d27855b7b398e4b15bb881ce4",
      "patch": "@@ -36,7 +36,7 @@ public class ParamUtil {\n     public final static boolean USE_ENDPOINT_PARSING_RULE_DEFAULT_VALUE = true;\n \n     private static final Pattern PATTERN = Pattern.compile(\"\\\\$\\\\{[^}]+\\\\}\");\n-    private static String defaultContextPath = \"nacos\";\n+    private static String defaultContextPath;\n     private static String defaultNodesPath = \"serverlist\";\n     private static String appKey;\n     private static String appName;\n@@ -49,6 +49,8 @@ public class ParamUtil {\n         // \u5ba2\u6237\u7aef\u8eab\u4efd\u4fe1\u606f\n         appKey = System.getProperty(\"nacos.client.appKey\", \"\");\n \n+        defaultContextPath = System.getProperty(\"nacos.client.contextPath\", \"nacos\");\n+\n         appName = AppNameUtils.getAppName();\n \n         String defaultServerPortTmp = \"8848\";",
      "parent_sha": "3b19a30a32437de3a5f002e8ed881563b1cc572a"
    }
  },
  {
    "oid": "6785491f15fe55518b173a4503587a9f5a81e780",
    "message": "replace deprecated methods in ParamUtil",
    "date": "2020-03-11T10:16:14Z",
    "url": "https://github.com/alibaba/nacos/commit/6785491f15fe55518b173a4503587a9f5a81e780",
    "details": {
      "sha": "e040880d8798a429fed7d0f8e40082a773c954ba",
      "filename": "client/src/main/java/com/alibaba/nacos/client/utils/ParamUtil.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/alibaba/nacos/blob/6785491f15fe55518b173a4503587a9f5a81e780/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Futils%2FParamUtil.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/6785491f15fe55518b173a4503587a9f5a81e780/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Futils%2FParamUtil.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/client%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fclient%2Futils%2FParamUtil.java?ref=6785491f15fe55518b173a4503587a9f5a81e780",
      "patch": "@@ -20,6 +20,7 @@\n import com.alibaba.nacos.api.common.Constants;\n import com.alibaba.nacos.client.config.impl.HttpSimpleClient;\n import org.slf4j.Logger;\n+import org.apache.commons.lang3.StringUtils;\n \n import java.io.InputStream;\n import java.util.Properties;\n@@ -174,12 +175,12 @@ public String call() {\n                 @Override\n                 public String call() {\n                     String namespace = System.getenv(PropertyKeyConst.SystemEnv.ALIBABA_ALIWARE_NAMESPACE);\n-                    return org.apache.commons.lang3.StringUtils.isNotBlank(namespace) ? namespace : StringUtils.EMPTY;\n+                    return StringUtils.isNotBlank(namespace) ? namespace : StringUtils.EMPTY;\n                 }\n             });\n         }\n \n-        if (org.apache.commons.lang3.StringUtils.isBlank(namespaceTmp)) {\n+        if (StringUtils.isBlank(namespaceTmp)) {\n             namespaceTmp = properties.getProperty(PropertyKeyConst.NAMESPACE);\n         }\n         return StringUtils.isNotBlank(namespaceTmp) ? namespaceTmp.trim() : StringUtils.EMPTY;",
      "parent_sha": "a19c4b18b434017ee1433305ebece5b0c0daa69e"
    }
  },
  {
    "oid": "dc61375c299092212460ef432c814febb9d251de",
    "message": "common params to constant",
    "date": "2019-06-05T13:48:25Z",
    "url": "https://github.com/alibaba/nacos/commit/dc61375c299092212460ef432c814febb9d251de",
    "details": {
      "sha": "c19af6436bc0cd3f6870f62801d7beaa1f6f580a",
      "filename": "naming/src/main/java/com/alibaba/nacos/naming/core/SubscribeManager.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/alibaba/nacos/blob/dc61375c299092212460ef432c814febb9d251de/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2FSubscribeManager.java",
      "raw_url": "https://github.com/alibaba/nacos/raw/dc61375c299092212460ef432c814febb9d251de/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2FSubscribeManager.java",
      "contents_url": "https://api.github.com/repos/alibaba/nacos/contents/naming%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Fnacos%2Fnaming%2Fcore%2FSubscribeManager.java?ref=dc61375c299092212460ef432c814febb9d251de",
      "patch": "@@ -16,6 +16,7 @@\n package com.alibaba.nacos.naming.core;\n \n import com.alibaba.fastjson.JSONObject;\n+import com.alibaba.nacos.api.naming.CommonParams;\n import com.alibaba.nacos.naming.boot.RunningConfig;\n import com.alibaba.nacos.naming.cluster.ServerListManager;\n import com.alibaba.nacos.naming.cluster.servers.Server;\n@@ -76,8 +77,8 @@ public List<Subscriber> getSubscribers(String serviceName, String namespaceId, b\n             for (Server server : serverListManager.getHealthyServers()) {\n \n                 Map<String, String> paramValues = new HashMap<>(128);\n-                paramValues.put(\"serviceName\",serviceName);\n-                paramValues.put(\"namespaceId\",namespaceId);\n+                paramValues.put(CommonParams.SERVICE_NAME,serviceName);\n+                paramValues.put(CommonParams.NAMESPACE_ID,namespaceId);\n                 paramValues.put(\"aggregation\",String.valueOf(Boolean.FALSE));\n                 if (NetUtils.localServer().equals(server.getKey())) {\n                     subscriberList.addAll(getSubscribers(serviceName,namespaceId));",
      "parent_sha": "bbb2108fd2720d53f980bc252f3ac385656299bb"
    }
  }
]