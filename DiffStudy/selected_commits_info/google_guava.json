[
  {
    "oid": "196e0bbc645609dd542749262832c251da18eba0",
    "message": "Cleaning up JavaDoc copy-and-paste errors\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25192783",
    "date": "2011-11-07T16:18:31Z",
    "url": "https://github.com/google/guava/commit/196e0bbc645609dd542749262832c251da18eba0",
    "details": {
      "sha": "e60d22fcb5a16874c8f227d9cdcc340529abf4a6",
      "filename": "guava/src/com/google/common/io/LittleEndianDataInputStream.java",
      "status": "modified",
      "additions": 15,
      "deletions": 15,
      "changes": 30,
      "blob_url": "https://github.com/google/guava/blob/196e0bbc645609dd542749262832c251da18eba0/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fio%2FLittleEndianDataInputStream.java",
      "raw_url": "https://github.com/google/guava/raw/196e0bbc645609dd542749262832c251da18eba0/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fio%2FLittleEndianDataInputStream.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fio%2FLittleEndianDataInputStream.java?ref=196e0bbc645609dd542749262832c251da18eba0",
      "patch": "@@ -54,7 +54,7 @@ public LittleEndianDataInputStream(InputStream in) {\n   }\n \n   /**\n-   * This method will throw a {@link UnsupportedOperationException}.\n+   * This method will throw an {@link UnsupportedOperationException}.\n    */\n   @Override\n   public String readLine() {\n@@ -91,8 +91,8 @@ public int readUnsignedByte() throws IOException {\n    * {@link DataInputStream#readUnsignedShort()}, except using little-endian\n    * byte order.\n    *\n-   * @return the next two bytes of the input stream, interpreted as an {@code\n-   *         int} in little-endian byte order\n+   * @return the next two bytes of the input stream, interpreted as an \n+   *         unsigned 16-bit integer in little-endian byte order\n    * @throws IOException if an I/O error occurs\n    */\n   @Override\n@@ -107,8 +107,8 @@ public int readUnsignedShort() throws IOException {\n    * Reads an integer as specified by {@link DataInputStream#readInt()}, except\n    * using little-endian byte order.\n    *\n-   * @return the next four bytes of the input stream, interpreted as an {@code\n-   *         int} in little-endian byte order\n+   * @return the next four bytes of the input stream, interpreted as an \n+   *         {@code int} in little-endian byte order\n    * @throws IOException if an I/O error occurs\n    */\n   @Override\n@@ -125,8 +125,8 @@ public int readInt() throws IOException {\n    * Reads a {@code long} as specified by {@link DataInputStream#readLong()},\n    * except using little-endian byte order.\n    *\n-   * @return the next eight bytes of the input stream, interpreted as a {@code\n-   *         long} in little-endian byte order\n+   * @return the next eight bytes of the input stream, interpreted as a \n+   *         {@code long} in little-endian byte order\n    * @throws IOException if an I/O error occurs\n    */\n   @Override\n@@ -147,8 +147,8 @@ public long readLong() throws IOException {\n    * Reads a {@code float} as specified by {@link DataInputStream#readFloat()},\n    * except using little-endian byte order.\n    *\n-   * @return the next four bytes of the input stream, interpreted as an {@code\n-   *         float} in little-endian byte order\n+   * @return the next four bytes of the input stream, interpreted as a\n+   *         {@code float} in little-endian byte order\n    * @throws IOException if an I/O error occurs\n    */\n   @Override\n@@ -161,8 +161,8 @@ public float readFloat() throws IOException {\n    * {@link DataInputStream#readDouble()}, except using little-endian byte\n    * order.\n    *\n-   * @return the next eight bytes of the input stream, interpreted as an {@code\n-   *         int} in little-endian byte order\n+   * @return the next eight bytes of the input stream, interpreted as a\n+   *         {@code double} in little-endian byte order\n    * @throws IOException if an I/O error occurs\n    */\n   @Override\n@@ -179,8 +179,8 @@ public String readUTF() throws IOException {\n    * Reads a {@code short} as specified by {@link DataInputStream#readShort()},\n    * except using little-endian byte order.\n    *\n-   * @return the next two bytes of the input stream, interpreted as an {@code\n-   *         short} in little-endian byte order.\n+   * @return the next two bytes of the input stream, interpreted as a\n+   *         {@code short} in little-endian byte order.\n    * @throws IOException if an I/O error occurs.\n    */\n   @Override\n@@ -192,8 +192,8 @@ public short readShort() throws IOException {\n    * Reads a char as specified by {@link DataInputStream#readChar()}, except\n    * using little-endian byte order.\n    *\n-   * @return the next two bytes of the input stream, interpreted as an {@code\n-   *         char} in little-endian byte order\n+   * @return the next two bytes of the input stream, interpreted as a \n+   *         {@code char} in little-endian byte order\n    * @throws IOException if an I/O error occurs\n    */\n   @Override",
      "parent_sha": "211d803baeeecf9f5b121cb57e3d62172935aa4e"
    }
  },
  {
    "oid": "15c2b776614a2be35668eba77af1bfe5a7cec2fd",
    "message": "Rename Multiset collector parameter names to be consistent with other collector factories.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=148116285",
    "date": "2017-02-21T19:10:49Z",
    "url": "https://github.com/google/guava/commit/15c2b776614a2be35668eba77af1bfe5a7cec2fd",
    "details": {
      "sha": "fcd806a0c0c09bf704cc12486148c8b9e7d7eb56",
      "filename": "guava/src/com/google/common/collect/Multisets.java",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/google/guava/blob/15c2b776614a2be35668eba77af1bfe5a7cec2fd/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FMultisets.java",
      "raw_url": "https://github.com/google/guava/raw/15c2b776614a2be35668eba77af1bfe5a7cec2fd/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FMultisets.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FMultisets.java?ref=15c2b776614a2be35668eba77af1bfe5a7cec2fd",
      "patch": "@@ -73,15 +73,15 @@ private Multisets() {}\n    * @since 22.0\n    */\n   public static <T, E, M extends Multiset<E>> Collector<T, ?, M> toMultiset(\n-      java.util.function.Function<T, E> elemFunction,\n+      java.util.function.Function<T, E> elementFunction,\n       java.util.function.ToIntFunction<T> countFunction,\n-      java.util.function.Supplier<M> implSupplier) {\n-    checkNotNull(elemFunction);\n+      java.util.function.Supplier<M> multisetSupplier) {\n+    checkNotNull(elementFunction);\n     checkNotNull(countFunction);\n-    checkNotNull(implSupplier);\n+    checkNotNull(multisetSupplier);\n     return Collector.of(\n-        implSupplier,\n-        (ms, t) -> ms.add(elemFunction.apply(t), countFunction.applyAsInt(t)),\n+        multisetSupplier,\n+        (ms, t) -> ms.add(elementFunction.apply(t), countFunction.applyAsInt(t)),\n         (ms1, ms2) -> {\n           ms1.addAll(ms2);\n           return ms1;",
      "parent_sha": "7cb2291988f653a27237cfaf8e98e2a27bea2690"
    }
  },
  {
    "oid": "a54bc6e1fea45a672837f334362910dbf1e6da5e",
    "message": "Automated g4 rollback of changelist 116449500.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116468022",
    "date": "2016-03-07T14:27:16Z",
    "url": "https://github.com/google/guava/commit/a54bc6e1fea45a672837f334362910dbf1e6da5e",
    "details": {
      "sha": "a871955088e7af3de1a1824cf742f7b748fab127",
      "filename": "guava/src/com/google/common/base/CharMatcher.java",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/google/guava/blob/a54bc6e1fea45a672837f334362910dbf1e6da5e/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FCharMatcher.java",
      "raw_url": "https://github.com/google/guava/raw/a54bc6e1fea45a672837f334362910dbf1e6da5e/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FCharMatcher.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FCharMatcher.java?ref=a54bc6e1fea45a672837f334362910dbf1e6da5e",
      "patch": "@@ -247,9 +247,9 @@ public static CharMatcher singleWidth() {\n   public static final CharMatcher DIGIT = digit();\n \n   /**\n-   * Determines whether a character is a digit according to\n-   * {@linkplain Character#isDigit(char) Java's definition}. If you only care to match\n-   * ASCII digits, you can use {@code inRange('0', '9')}.\n+   * Determines whether a character is a digit according to {@linkplain Character#isDigit(char)\n+   * Java's definition}. If you only care to match ASCII digits, you can use {@code\n+   * inRange('0', '9')}.\n    */\n   public static final CharMatcher JAVA_DIGIT = javaDigit();\n \n@@ -292,12 +292,12 @@ public static CharMatcher singleWidth() {\n   public static final CharMatcher INVISIBLE = invisible();\n \n   /**\n-   * Determines whether a character is single-width (not double-width). When in doubt,\n-   * this matcher errs on the side of returning {@code false} (that is, it tends to\n-   * assume a character is double-width).\n+   * Determines whether a character is single-width (not double-width). When in doubt, this matcher\n+   * errs on the side of returning {@code false} (that is, it tends to assume a character is\n+   * double-width).\n    *\n-   * <p><b>Note:</b> as the reference file evolves, we will modify this constant to\n-   * keep it up to date.\n+   * <p><b>Note:</b> as the reference file evolves, we will modify this constant to keep it up to\n+   * date.\n    */\n   public static final CharMatcher SINGLE_WIDTH = singleWidth();\n ",
      "parent_sha": "dffed2f7420dff52045949bc3925ebf3491d1575"
    }
  },
  {
    "oid": "d210c7af763d7045fa35034cab3b4151ae93686e",
    "message": "Add a warning about deadlocks.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=95636626",
    "date": "2015-06-11T16:03:04Z",
    "url": "https://github.com/google/guava/commit/d210c7af763d7045fa35034cab3b4151ae93686e",
    "details": {
      "sha": "9f839a1a0d28efae0ef5dbfea1e6e47816a63064",
      "filename": "guava/src/com/google/common/util/concurrent/ListenableFuture.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/google/guava/blob/d210c7af763d7045fa35034cab3b4151ae93686e/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FListenableFuture.java",
      "raw_url": "https://github.com/google/guava/raw/d210c7af763d7045fa35034cab3b4151ae93686e/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FListenableFuture.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FListenableFuture.java?ref=d210c7af763d7045fa35034cab3b4151ae93686e",
      "patch": "@@ -117,7 +117,7 @@ public interface ListenableFuture<V> extends Future<V> {\n    * <li>The listener may be executed by the thread that completes this {@code\n    * Future}. That thread may be an internal system thread such as an RPC\n    * network thread. Blocking that thread may stall progress of the whole\n-   * system.\n+   * system. It may even cause a deadlock.\n    * <li>The listener may delay other listeners, even listeners that are not\n    * themselves {@code directExecutor} listeners.\n    * </ul>",
      "parent_sha": "e1ec3b363fb27208053fd9b6a8c079631e9af19c"
    }
  },
  {
    "oid": "d660cc4a89e987d3377a2e1aa81bee2953fda987",
    "message": "Multimap method javadocs: a few improvements. This doesn't by any means complete the job of perfecting all the docs in this interface.\n\nI've removed @param and @return clauses that add no value (which was all of them in the former case).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57822103",
    "date": "2013-12-08T15:55:24Z",
    "url": "https://github.com/google/guava/commit/d660cc4a89e987d3377a2e1aa81bee2953fda987",
    "details": {
      "sha": "0d725de3e396fb563122f0ed29a41fa194c9472c",
      "filename": "guava/src/com/google/common/collect/Multimap.java",
      "status": "modified",
      "additions": 70,
      "deletions": 79,
      "changes": 149,
      "blob_url": "https://github.com/google/guava/blob/d660cc4a89e987d3377a2e1aa81bee2953fda987/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FMultimap.java",
      "raw_url": "https://github.com/google/guava/raw/d660cc4a89e987d3377a2e1aa81bee2953fda987/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FMultimap.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FMultimap.java?ref=d660cc4a89e987d3377a2e1aa81bee2953fda987",
      "patch": "@@ -163,88 +163,87 @@\n public interface Multimap<K, V> {\n   // Query Operations\n \n-  /** Returns the number of key-value pairs in the multimap. */\n+  /**\n+   * Returns the number of key-value pairs in this multimap.\n+   *\n+   * <p><b>Note:</b> this method does not return the number of <i>distinct\n+   * keys</i> in the multimap, which is given by {@code keySet().size()} or\n+   * {@code asMap().size()}. See the opening section of the {@link Multimap}\n+   * class documentation for clarification.\n+   */\n   int size();\n \n-  /** Returns {@code true} if the multimap contains no key-value pairs. */\n+  /**\n+   * Returns {@code true} if this multimap contains no key-value pairs.\n+   * Equivalent to {@code size() == 0}, but can in some cases be more efficient.\n+   */\n   boolean isEmpty();\n \n   /**\n-   * Returns {@code true} if the multimap contains any values for the specified\n-   * key.\n-   *\n-   * @param key key to search for in multimap\n+   * Returns {@code true} if this multimap contains at least one key-value pair\n+   * with the key {@code key}.\n    */\n   boolean containsKey(@Nullable Object key);\n \n   /**\n-   * Returns {@code true} if the multimap contains the specified value for any\n-   * key.\n-   *\n-   * @param value value to search for in multimap\n+   * Returns {@code true} if this multimap contains at least one key-value pair\n+   * with the value {@code value}.\n    */\n   boolean containsValue(@Nullable Object value);\n \n   /**\n-   * Returns {@code true} if the multimap contains the specified key-value pair.\n-   *\n-   * @param key key to search for in multimap\n-   * @param value value to search for in multimap\n+   * Returns {@code true} if this multimap contains at least one key-value pair\n+   * with the key {@code key} and the value {@code value}.\n    */\n   boolean containsEntry(@Nullable Object key, @Nullable Object value);\n \n   // Modification Operations\n \n   /**\n-   * Stores a key-value pair in the multimap.\n+   * Stores a key-value pair in this multimap.\n    *\n    * <p>Some multimap implementations allow duplicate key-value pairs, in which\n    * case {@code put} always adds a new key-value pair and increases the\n    * multimap size by 1. Other implementations prohibit duplicates, and storing\n    * a key-value pair that's already in the multimap has no effect.\n    *\n-   * @param key key to store in the multimap\n-   * @param value value to store in the multimap\n    * @return {@code true} if the method increased the size of the multimap, or\n    *     {@code false} if the multimap already contained the key-value pair and\n    *     doesn't allow duplicates\n    */\n   boolean put(@Nullable K key, @Nullable V value);\n \n   /**\n-   * Removes a single key-value pair from the multimap.\n+   * Removes a single key-value pair with the key {@code key} and the value\n+   * {@code value} from this multimap, if such exists. If multiple key-value\n+   * pairs in the multimap fit this description, which one is removed is\n+   * unspecified.\n    *\n-   * @param key key of entry to remove from the multimap\n-   * @param value value of entry to remove the multimap\n    * @return {@code true} if the multimap changed\n    */\n   boolean remove(@Nullable Object key, @Nullable Object value);\n \n   // Bulk Operations\n \n   /**\n-   * Stores key-value pairs in this multimap with one key and multiple values.\n-   * \n-   * <p>This is equivalent to <pre>   {@code\n+   * Stores a key-value pair in this multimap for each of {@code values}, all\n+   * using the same key, {@code key}. Equivalent to (but expected to be more\n+   * efficient than): <pre>   {@code\n    * \n    *   for (V value : values) {\n    *     put(key, value);\n-   *   } }</pre>\n+   *   }}</pre>\n    * \n    * <p>In particular, this is a no-op if {@code values} is empty.\n    *\n-   * @param key key to store in the multimap\n-   * @param values values to store in the multimap\n    * @return {@code true} if the multimap changed\n    */\n   boolean putAll(@Nullable K key, Iterable<? extends V> values);\n \n   /**\n-   * Copies all of another multimap's key-value pairs into this multimap. The\n-   * order in which the mappings are added is determined by\n-   * {@code multimap.entries()}.\n+   * Stores all key-value pairs of {@code multimap} in this multimap, in the\n+   * order returned by {@code multimap.entries()}.\n    *\n-   * @param multimap mappings to store in this multimap\n    * @return {@code true} if the multimap changed\n    */\n   boolean putAll(Multimap<? extends K, ? extends V> multimap);\n@@ -256,8 +255,6 @@ public interface Multimap<K, V> {\n    * <p>If {@code values} is empty, this is equivalent to \n    * {@link #removeAll(Object) removeAll(key)}.\n    *\n-   * @param key key to store in the multimap\n-   * @param values values to store in the multimap\n    * @return the collection of replaced values, or an empty collection if no\n    *     values were previously associated with the key. The collection\n    *     <i>may</i> be modifiable, but updating it will have no effect on the\n@@ -266,96 +263,90 @@ public interface Multimap<K, V> {\n   Collection<V> replaceValues(@Nullable K key, Iterable<? extends V> values);\n \n   /**\n-   * Removes all values associated with a given key.\n+   * Removes all values associated with the key {@code key}.\n    * \n    * <p>Once this method returns, {@code key} will not be mapped to any values,\n    * so it will not appear in {@link #keySet()}, {@link #asMap()}, or any other\n    * views. \n    *\n-   * @param key key of entries to remove from the multimap\n-   * @return the collection of removed values, or an empty collection if no\n-   *     values were associated with the provided key. The collection\n-   *     <i>may</i> be modifiable, but updating it will have no effect on the\n-   *     multimap.\n+   * @return the values that were removed (possibly empty). The returned\n+   *     collection <i>may</i> be modifiable, but updating it will have no\n+   *     effect on the multimap.\n    */\n   Collection<V> removeAll(@Nullable Object key);\n \n   /**\n-   * Removes all key-value pairs from the multimap.\n+   * Removes all key-value pairs from the multimap, leaving it {@linkplain\n+   * #isEmpty empty}.\n    */\n   void clear();\n \n   // Views\n \n   /**\n-   * Returns a collection view containing the values associated with {@code key}\n-   * in this multimap, if any. Note that even when ({@code containsKey(key)} is\n-   * false, {@code get(key)} still returns an empty collection, not {@code\n-   * null}.\n+   * Returns a view collection of the values associated with {@code key} in this\n+   * multimap, if any. Note that when {@code containsKey(key)} is false, this \n+   * returns an empty collection, not {@code null}.\n    *\n    * <p>Changes to the returned collection will update the underlying multimap,\n    * and vice versa.\n-   *\n-   * @param key key to search for in multimap\n-   * @return a view collection containing the zero or more values that the key\n-   *     maps to\n    */\n   Collection<V> get(@Nullable K key);\n \n   /**\n-   * Returns the set of all keys, each appearing once in the returned set.\n-   * Changes to the returned set will update the underlying multimap, and vice\n-   * versa.\n-   * \n-   * <p>Note that the key set contains a key if and only if this multimap maps\n-   * that key to at least one value.\n+   * Returns a view collection of all <i>distinct</i> keys contained in this\n+   * multimap. Note that the key set contains a key if and only if this multimap\n+   * maps that key to at least one value.\n    *\n-   * @return the collection of distinct keys\n+   * <p>Changes to the returned set will update the underlying multimap, and\n+   * vice versa. However, <i>adding</i> to the returned set is not possible.\n    */\n   Set<K> keySet();\n \n   /**\n-   * Returns a collection, which may contain duplicates, of all keys. The number\n-   * of times of key appears in the returned multiset equals the number of\n-   * mappings the key has in the multimap. Changes to the returned multiset will\n-   * update the underlying multimap, and vice versa.\n+   * Returns a view collection containing the key from each key-value pair in\n+   * this multimap, <i>without</i> collapsing duplicates. This collection has\n+   * the same size as this multimap, and {@code keys().count(k) ==\n+   * get(k).size()} for all {@code k}.\n    *\n-   * @return a multiset with keys corresponding to the distinct keys of the\n-   *     multimap and frequencies corresponding to the number of values that\n-   *     each key maps to\n+   * <p>Changes to the returned multiset will update the underlying multimap,\n+   * and vice versa. However, <i>adding</i> to the returned collection is not\n+   * possible.\n    */\n   Multiset<K> keys();\n \n   /**\n-   * Returns a collection of all values in the multimap. Changes to the returned\n-   * collection will update the underlying multimap, and vice versa.\n+   * Returns a view collection containing the <i>value</i> from each key-value\n+   * pair contained in this multimap, without collapsing duplicates (so {@code\n+   * values().size() == size()}).\n    *\n-   * @return collection of values, which may include the same value multiple\n-   *     times if it occurs in multiple mappings\n+   * <p>Changes to the returned collection will update the underlying multimap,\n+   * and vice versa. However, <i>adding</i> to the returned collection is not\n+   * possible.\n    */\n   Collection<V> values();\n \n   /**\n-   * Returns a collection of all key-value pairs. Changes to the returned\n-   * collection will update the underlying multimap, and vice versa. The entries\n-   * collection does not support the {@code add} or {@code addAll} operations.\n+   * Returns a view collection of all key-value pairs contained in this\n+   * multimap, as {@link Map.Entry} instances.\n    *\n-   * @return collection of map entries consisting of key-value pairs\n+   * <p>Changes to the returned collection or the entries it contains will\n+   * update the underlying multimap, and vice versa. However, <i>adding</i> to\n+   * the returned collection is not possible.\n    */\n   Collection<Map.Entry<K, V>> entries();\n \n   /**\n-   * Returns a map view that associates each key with the corresponding values\n-   * in the multimap. Changes to the returned map, such as element removal, will\n-   * update the underlying multimap. The map does not support {@code setValue()}\n-   * on its entries, {@code put}, or {@code putAll}.\n-   *\n-   * <p>When passed a key that is present in the map, {@code\n-   * asMap().get(Object)} has the same behavior as {@link #get}, returning a\n-   * live collection. When passed a key that is not present, however, {@code\n-   * asMap().get(Object)} returns {@code null} instead of an empty collection.\n+   * Returns a view of this multimap as a {@code Map} from each distinct key\n+   * to the nonempty collection of that key's associated values. Note that\n+   * {@code this.asMap().get(k)} is equivalent to {@code this.get(k)} only when\n+   * {@code k} is a key contained in the multimap; otherwise it returns {@code\n+   * null} as opposed to an empty collection.\n    *\n-   * @return a map view from a key to its collection of values\n+   * <p>Changes to the returned map or the collections that serve as its values\n+   * will update the underlying multimap, and vice versa. The map does not\n+   * support {@code put} or {@code putAll}, nor do its entries support {@link\n+   * Map.Entry#setValue setValue}.\n    */\n   Map<K, Collection<V>> asMap();\n ",
      "parent_sha": "80280954a43bfb813f8a019774e06c2a88842ede"
    }
  },
  {
    "oid": "ea262b98b9913b16364a25e4f5b9a9d074693f08",
    "message": "setFuture documentation tweaks:\n- Describe cancellation propagation.\n- Stop referring to setFuture as though it *always* \"sets asynchronously.\"\n- Small tweak that I'm not sure actually helps: change \"previously been set or cancelled\" to \"already been set or cancelled.\" Somehow I feel like this is marginally clearer that it refers to \"done at the time of the setFuture call\" rather than \"done at the time the supplied Future completes.\" Am I crazy? Maybe I should just say \"done at the time the supplied Future completes?\"\n- Maybe other stuff I've forgotten.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=83537510",
    "date": "2015-01-14T18:33:22Z",
    "url": "https://github.com/google/guava/commit/ea262b98b9913b16364a25e4f5b9a9d074693f08",
    "details": {
      "sha": "4cdc92c1efe2d19f2300a728475bb9a44b99330b",
      "filename": "guava/src/com/google/common/util/concurrent/AbstractFuture.java",
      "status": "modified",
      "additions": 20,
      "deletions": 17,
      "changes": 37,
      "blob_url": "https://github.com/google/guava/blob/ea262b98b9913b16364a25e4f5b9a9d074693f08/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FAbstractFuture.java",
      "raw_url": "https://github.com/google/guava/raw/ea262b98b9913b16364a25e4f5b9a9d074693f08/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FAbstractFuture.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FAbstractFuture.java?ref=ea262b98b9913b16364a25e4f5b9a9d074693f08",
      "patch": "@@ -496,7 +496,7 @@ public boolean isCancelled() {\n    * {@inheritDoc}\n    *\n    * <p>If a cancellation attempt succeeds on a {@code Future} that had previously been {@linkplain\n-   * #setFuture asynchronously set}, then the cancellation will also be propagated to the delegate\n+   * #setFuture set asynchronously}, then the cancellation will also be propagated to the delegate\n    * {@code Future} that was supplied in the {@code setFuture} call.\n    */\n   @Override\n@@ -582,12 +582,12 @@ public void addListener(Runnable listener, Executor executor) {\n   }\n \n   /**\n-   * Sets the result of this {@code Future} unless this {@code Future} has previously been cancelled\n-   * or set (including {@linkplain #setFuture set asynchronously}). When a call to this method\n-   * returns, the {@code Future} is guaranteed to be {@linkplain #isDone done} <b>only if</b> the\n-   * call was accepted (in which case it returns {@code true}). If it returns {@code false}, the\n-   * {@code Future} may have previously been set asynchronously, in which case its result may not be\n-   * known yet. That result, though not yet known, cannot by overridden by a call to a {@code set*}\n+   * Sets the result of this {@code Future} unless this {@code Future} has already been cancelled or\n+   * set (including {@linkplain #setFuture set asynchronously}). When a call to this method returns,\n+   * the {@code Future} is guaranteed to be {@linkplain #isDone done} <b>only if</b> the call was\n+   * accepted (in which case it returns {@code true}). If it returns {@code false}, the {@code\n+   * Future} may have previously been set asynchronously, in which case its result may not be known\n+   * yet. That result, though not yet known, cannot by overridden by a call to a {@code set*}\n    * method, only by a call to {@link #cancel}.\n    *\n    * @param value the value to be used as the result\n@@ -603,7 +603,7 @@ protected boolean set(@Nullable V value) {\n   }\n \n   /**\n-   * Sets the failed result of this {@code Future} unless this {@code Future} has previously been\n+   * Sets the failed result of this {@code Future} unless this {@code Future} has already been\n    * cancelled or set (including {@linkplain #setFuture set asynchronously}). When a call to this\n    * method returns, the {@code Future} is guaranteed to be {@linkplain #isDone done} <b>only if</b>\n    * the call was accepted (in which case it returns {@code true}). If it returns {@code false}, the\n@@ -624,17 +624,20 @@ protected boolean setException(Throwable throwable) {\n   }\n \n   /**\n-   * Asynchronously sets the result of this {@code Future} unless this {@code Future} has previously\n-   * been cancelled or set (including {@linkplain #setFuture set asynchronously}). If a call to this\n-   * method is accepted, this {@code Future} will complete when the supplied {@code Future}\n-   * completes or when this {@code Future} is cancelled (at which point cancellation will also be\n-   * propagated to the supplied {@code Future}).\n+   * Sets the result of this {@code Future} to match the supplied input {@code Future} once the\n+   * supplied {@code Future} is done, unless this {@code Future} has already been cancelled or set\n+   * (including \"set asynchronously,\" defined below).\n    *\n    * <p>If the supplied future is {@linkplain #isDone done} when this method is called and the call\n-   * is accepted, then this future is guaranteed to have been completed with the supplied future.\n-   * If the supplied future is not done and the call is accepted, then the future will be set\n-   * asynchronously. Note that such a result, though not yet known, cannot by overridden by a call\n-   * to a {@code set*} method, only by a call to {@link #cancel}.\n+   * is accepted, then this future is guaranteed to have been completed with the supplied future by\n+   * the time this method returns. If the supplied future is not done and the call is accepted, then\n+   * the future will be <i>set asynchronously</i>. Note that such a result, though not yet known,\n+   * cannot by overridden by a call to a {@code set*} method, only by a call to {@link #cancel}.\n+   *\n+   * <p>If the call {@code setFuture(delegate)} is accepted and this {@code Future} is later\n+   * cancelled, cancellation will be propagated to {@code delegate}. Additionally, any call to\n+   * {@code setFuture} after any cancellation will propagate cancellation to the supplied {@code\n+   * Future}.\n    *\n    * @param future the future to delegate to\n    * @return true if the attempt was accepted, indicating that the {@code Future} was not previously",
      "parent_sha": "85e89f39452fbd2c3c5b5ecfc2c0a97fc50af9cb"
    }
  },
  {
    "oid": "93a4d360168b51e1e32c0f31632bfde787e115e2",
    "message": "Give a readable name to the thread used by a delayed shutdown\nhook.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31171327",
    "date": "2012-06-19T16:34:21Z",
    "url": "https://github.com/google/guava/commit/93a4d360168b51e1e32c0f31632bfde787e115e2",
    "details": {
      "sha": "8699b5aabf3e76c3f25beb67bed23a5652393585",
      "filename": "guava/src/com/google/common/util/concurrent/MoreExecutors.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/google/guava/blob/93a4d360168b51e1e32c0f31632bfde787e115e2/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FMoreExecutors.java",
      "raw_url": "https://github.com/google/guava/raw/93a4d360168b51e1e32c0f31632bfde787e115e2/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FMoreExecutors.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FMoreExecutors.java?ref=93a4d360168b51e1e32c0f31632bfde787e115e2",
      "patch": "@@ -151,7 +151,7 @@ public void run() {\n           // We're shutting down anyway, so just ignore.\n         }\n       }\n-    }));\n+    }, \"DelayedShutdownHook-for-\" + service));\n   }\n \n   /**",
      "parent_sha": "18fb2a20cfc43d5e17b93fd2e683aeda468abf84"
    }
  },
  {
    "oid": "d810fc4b42d80b64fd118c2cf1483fb7682d34a9",
    "message": "This change replaces usages of static final fields on CharMatcher, e.g. CharMatcher.WHITESPACE, with the equivalent static factory method, e.g. CharMatcher.whitespace().\n\nThe change is being made so that we can remove the static final fields, primarily because they must be eagerly initialized, causing many implementation classes (which may be unnecessary) to be loaded. This is a significant performance problem on Android. Using methods allows implementation classes to only be loaded when actually needed, as well as matching our long-standing preference for factory methods over public fields.\n\nSee [] for more information.\n\nTested:\n    TAP train for global presubmit queue\n    []    Some tests failed; test failures are believed to be unrelated to this CL\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116565003",
    "date": "2016-03-07T19:16:47Z",
    "url": "https://github.com/google/guava/commit/d810fc4b42d80b64fd118c2cf1483fb7682d34a9",
    "details": {
      "sha": "e0560a648e9660d1a710de66e8ab8a44faa87a36",
      "filename": "guava/src/com/google/common/base/Ascii.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/google/guava/blob/d810fc4b42d80b64fd118c2cf1483fb7682d34a9/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FAscii.java",
      "raw_url": "https://github.com/google/guava/raw/d810fc4b42d80b64fd118c2cf1483fb7682d34a9/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FAscii.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FAscii.java?ref=d810fc4b42d80b64fd118c2cf1483fb7682d34a9",
      "patch": "@@ -28,7 +28,7 @@\n  * <ul>\n  * <!-- TODO(kevinb): how can we make this not produce a warning when building gwt javadoc? -->\n  * <li>{@link Charsets#US_ASCII} specifies the {@code Charset} of ASCII characters.\n- * <li>{@link CharMatcher#ASCII} matches ASCII characters and provides text processing methods which\n+ * <li>{@link CharMatcher#ascii} matches ASCII characters and provides text processing methods which\n  * operate only on the ASCII characters of a string.\n  * </ul>\n  *",
      "parent_sha": "a54bc6e1fea45a672837f334362910dbf1e6da5e"
    }
  },
  {
    "oid": "58d63de6e4a839ca87177d0d77d6f7216523b31b",
    "message": "Improve failure message from testUrls to help us figure out why it's failing on Travis, e.g.,\nhttps://travis-ci.org/google/guava/jobs/53222839\n\"testUrls(com.google.common.reflect.ClassPathTest): expected:<3> but was:<1>\"\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=87967592",
    "date": "2015-03-06T20:30:12Z",
    "url": "https://github.com/google/guava/commit/58d63de6e4a839ca87177d0d77d6f7216523b31b",
    "details": {
      "sha": "c7461afd4013ec0e074f447df0d449ea539f94ca",
      "filename": "guava-tests/test/com/google/common/reflect/ClassPathTest.java",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/google/guava/blob/58d63de6e4a839ca87177d0d77d6f7216523b31b/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Freflect%2FClassPathTest.java",
      "raw_url": "https://github.com/google/guava/raw/58d63de6e4a839ca87177d0d77d6f7216523b31b/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Freflect%2FClassPathTest.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Freflect%2FClassPathTest.java?ref=58d63de6e4a839ca87177d0d77d6f7216523b31b",
      "patch": "@@ -321,7 +321,12 @@ public void testUrls() throws IOException {\n           contentEquals(resource.url(), loader.getResource(resourceName)));\n       List<URL> urlsFromLoader = list(loader.getResources(resourceName));\n       List<URL> urlsFromClassPath = resource.urls();\n-      assertEquals(urlsFromLoader.size(), urlsFromClassPath.size());\n+      if (urlsFromLoader.size() != urlsFromClassPath.size()) {\n+        fail(String.format(\n+            \"Number of URLs from system classloader (%s) and number of URLs from ClassPath (%s) \"\n+                + \"do not match\",\n+            urlsFromLoader.size(), urlsFromClassPath.size()));\n+      }\n       for (int i = 0; i < urlsFromClassPath.size(); i++) {\n         assertTrue(\n             resourceName + \" #\" + i + \"has different content when loaded by resource.url()\",",
      "parent_sha": "69a86a80e79bed7bbc8afeea431eb2c60e7f913f"
    }
  },
  {
    "oid": "3b37d547713fd86f261b9374c0fae0c5b61ab5d1",
    "message": "Shuffling from internal change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=87059596",
    "date": "2015-02-26T21:16:30Z",
    "url": "https://github.com/google/guava/commit/3b37d547713fd86f261b9374c0fae0c5b61ab5d1",
    "details": {
      "sha": "fbc7a17f29d7e6180bd33941b365b941c6aa8e93",
      "filename": "guava/src/com/google/common/util/concurrent/ServiceManager.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/google/guava/blob/3b37d547713fd86f261b9374c0fae0c5b61ab5d1/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FServiceManager.java",
      "raw_url": "https://github.com/google/guava/raw/3b37d547713fd86f261b9374c0fae0c5b61ab5d1/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FServiceManager.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FServiceManager.java?ref=3b37d547713fd86f261b9374c0fae0c5b61ab5d1",
      "patch": "@@ -763,7 +763,7 @@ private static final class ServiceListener extends Service.Listener {\n       if (state != null) {\n         // Log before the transition, so that if the process exits in response to server failure,\n         // there is a higher likelihood that the cause will be in the logs.\n-        if (!(service instanceof NoOpService)) {\n+        if (!(service instanceof NoOpService) ) {\n           logger.log(Level.SEVERE, \"Service \" + service + \" has failed in the \" + from + \" state.\",\n               failure);\n         }",
      "parent_sha": "3f7cbe89e3062cf4efab473e4b876fb50a1c2501"
    }
  },
  {
    "oid": "6f63c9bbc3602f6db1db721d7a793da65e98b5e0",
    "message": "\nLeave makeListenable public for Guava.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1111\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@286 8138a162-5c33-11de-8abc-d1c337b90d21",
    "date": "2011-03-29T22:59:20Z",
    "url": "https://github.com/google/guava/commit/6f63c9bbc3602f6db1db721d7a793da65e98b5e0",
    "details": {
      "sha": "77a6d9ca4b8674e7376df1c733f19e640a05d8dc",
      "filename": "src/com/google/common/util/concurrent/Futures.java",
      "status": "modified",
      "additions": 2,
      "deletions": 7,
      "changes": 9,
      "blob_url": "https://github.com/google/guava/blob/6f63c9bbc3602f6db1db721d7a793da65e98b5e0/src%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FFutures.java",
      "raw_url": "https://github.com/google/guava/raw/6f63c9bbc3602f6db1db721d7a793da65e98b5e0/src%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FFutures.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/src%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FFutures.java?ref=6f63c9bbc3602f6db1db721d7a793da65e98b5e0",
      "patch": "@@ -119,12 +119,6 @@ public V get() throws ExecutionException {\n   }\n \n   /**\n-   * <b>No longer accessible outside the package.</b> New and existing utilities\n-   * (e.g., {@link SettableFuture}, {@link\n-   * MoreExecutors#listeningDecorator(java.util.concurrent.ExecutorService)})\n-   * have enabled us to replace all existing callers of this method with less\n-   * expensive {@code ListenableFuture} implementations. Chris Povirk is happy\n-   * to assist with any fallout from this change.\n    *\n    * <p>Creates a {@link ListenableFuture} out of a normal {@link Future}. The\n    * returned future will create a thread to wait for the source future to\n@@ -141,7 +135,8 @@ public V get() throws ExecutionException {\n    * {@link ListenableFutureTask}, which adds the {@link ListenableFuture}\n    * functionality to the standard {@code FutureTask} implementation.\n    */\n-  static <V> ListenableFuture<V> makeListenable(Future<V> future) {\n+  public static <V> ListenableFuture<V> makeListenable(\n+      Future<V> future) {\n     if (future instanceof ListenableFuture<?>) {\n       return (ListenableFuture<V>) future;\n     }",
      "parent_sha": "4d5835c40b1a56b4a2679d5e91d447ef992ef0c6"
    }
  },
  {
    "oid": "644e9182d9929ade7252719fb6b685efbbe84acb",
    "message": "Remove @WeakOuter from ImmutableMultiset.ElementSet. @WeakOuter is useful for inner classes but not for static nested classes.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=202500806",
    "date": "2018-07-10T19:39:13Z",
    "url": "https://github.com/google/guava/commit/644e9182d9929ade7252719fb6b685efbbe84acb",
    "details": {
      "sha": "f1f46fcfb894db84f550e6a994eb155b7e77930a",
      "filename": "guava/src/com/google/common/collect/ImmutableMultiset.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/google/guava/blob/644e9182d9929ade7252719fb6b685efbbe84acb/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FImmutableMultiset.java",
      "raw_url": "https://github.com/google/guava/raw/644e9182d9929ade7252719fb6b685efbbe84acb/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FImmutableMultiset.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FImmutableMultiset.java?ref=644e9182d9929ade7252719fb6b685efbbe84acb",
      "patch": "@@ -584,9 +584,9 @@ ImmutableMultiset<E> buildJdkBacked() {\n     }\n   }\n \n-  @WeakOuter\n   static final class ElementSet<E> extends ImmutableSet.Indexed<E> {\n     private final List<Entry<E>> entries;\n+    // TODO(cpovirk): @Weak?\n     private final Multiset<E> delegate;\n \n     ElementSet(List<Entry<E>> entries, Multiset<E> delegate) {",
      "parent_sha": "fa63efcc6d36955f1385acfa26f35c4914d7b9ac"
    }
  },
  {
    "oid": "8a0ac6c8f7b95effe92e598db769839833463fd0",
    "message": "Update documentation for Interners.\nSince Java 7, the String.intern() does not allocate the strings in permgen, but instead on the heap (in a table whose bucket size is configurable using XX:StringTableSize).\n\nSee http://bugs.java.com/view_bug.do?bug_id=6962930\nand http://java-performance.info/string-intern-in-java-6-7-8/\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=120287206",
    "date": "2016-04-20T14:18:02Z",
    "url": "https://github.com/google/guava/commit/8a0ac6c8f7b95effe92e598db769839833463fd0",
    "details": {
      "sha": "3fbba550c1087877a1c27915cb2a16aa70087062",
      "filename": "guava/src/com/google/common/collect/Interners.java",
      "status": "modified",
      "additions": 2,
      "deletions": 5,
      "changes": 7,
      "blob_url": "https://github.com/google/guava/blob/8a0ac6c8f7b95effe92e598db769839833463fd0/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FInterners.java",
      "raw_url": "https://github.com/google/guava/raw/8a0ac6c8f7b95effe92e598db769839833463fd0/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FInterners.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FInterners.java?ref=8a0ac6c8f7b95effe92e598db769839833463fd0",
      "patch": "@@ -38,9 +38,7 @@ private Interners() {}\n   /**\n    * Returns a new thread-safe interner which retains a strong reference to each instance it has\n    * interned, thus preventing these instances from being garbage-collected. If this retention is\n-   * acceptable, this implementation may perform better than {@link #newWeakInterner}. Note that\n-   * unlike {@link String#intern}, using this interner does not consume memory in the permanent\n-   * generation.\n+   * acceptable, this implementation may perform better than {@link #newWeakInterner}.\n    */\n   public static <E> Interner<E> newStrongInterner() {\n     final ConcurrentMap<E, E> map = new MapMaker().makeMap();\n@@ -57,8 +55,7 @@ public E intern(E sample) {\n    * Returns a new thread-safe interner which retains a weak reference to each instance it has\n    * interned, and so does not prevent these instances from being garbage-collected. This most\n    * likely does not perform as well as {@link #newStrongInterner}, but is the best alternative\n-   * when the memory usage of that implementation is unacceptable. Note that unlike {@link\n-   * String#intern}, using this interner does not consume memory in the permanent generation.\n+   * when the memory usage of that implementation is unacceptable.\n    */\n   @GwtIncompatible(\"java.lang.ref.WeakReference\")\n   public static <E> Interner<E> newWeakInterner() {",
      "parent_sha": "dd6b0e8b0f143d357784ddb4c16223a3ac125113"
    }
  },
  {
    "oid": "163ac499a9a7dc973e1b8293080fdf794bd07a78",
    "message": "Restore LocalCache.LocalManualCache.{apply,get,getUnchecked} to fix Guava compilation.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26079466",
    "date": "2011-12-09T16:27:09Z",
    "url": "https://github.com/google/guava/commit/163ac499a9a7dc973e1b8293080fdf794bd07a78",
    "details": {
      "sha": "eabfcdd9248f99815423891397527aee89826e83",
      "filename": "guava/src/com/google/common/cache/LocalCache.java",
      "status": "modified",
      "additions": 21,
      "deletions": 19,
      "changes": 40,
      "blob_url": "https://github.com/google/guava/blob/163ac499a9a7dc973e1b8293080fdf794bd07a78/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcache%2FLocalCache.java",
      "raw_url": "https://github.com/google/guava/raw/163ac499a9a7dc973e1b8293080fdf794bd07a78/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcache%2FLocalCache.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcache%2FLocalCache.java?ref=163ac499a9a7dc973e1b8293080fdf794bd07a78",
      "patch": "@@ -4822,6 +4822,27 @@ public void cleanUp() {\n       localCache.cleanUp();\n     }\n \n+    /*\n+     * These methods have been moved to LoadingCache, but they temporarily\n+     * remain in Cache in Guava.\n+     */\n+\n+    public V get(K key) throws ExecutionException {\n+      return localCache.getOrLoad(key);\n+    }\n+\n+    public V getUnchecked(K key) {\n+      try {\n+        return get(key);\n+      } catch (ExecutionException e) {\n+        throw new UncheckedExecutionException(e.getCause());\n+      }\n+    }\n+\n+    public final V apply(K key) {\n+      return getUnchecked(key);\n+    }\n+\n     // Serialization Support\n \n     private static final long serialVersionUID = 1;\n@@ -4841,20 +4862,6 @@ static class LocalLoadingCache<K, V>\n \n     // Cache methods\n \n-    @Override\n-    public V get(K key) throws ExecutionException {\n-      return localCache.getOrLoad(key);\n-    }\n-\n-    @Override\n-    public V getUnchecked(K key) {\n-      try {\n-        return get(key);\n-      } catch (ExecutionException e) {\n-        throw new UncheckedExecutionException(e.getCause());\n-      }\n-    }\n-\n     @Override\n     public ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException {\n       return localCache.getAll(keys);\n@@ -4865,11 +4872,6 @@ public void refresh(K key) {\n       localCache.refresh(key);\n     }\n \n-    @Override\n-    public final V apply(K key) {\n-      return getUnchecked(key);\n-    }\n-\n     // Serialization Support\n \n     private static final long serialVersionUID = 1;",
      "parent_sha": "068891544566246bd5caea917ae3cb78f1a21747"
    }
  },
  {
    "oid": "ef63e4f4692eb168aa1a859e822cdb7b161f84b7",
    "message": "Mentioning the number of hash bits to algorithms where it is not quite clear from their name.\n(I also add them for sha-256 and sha-512, though these are more obvious)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26389968",
    "date": "2011-12-21T20:18:00Z",
    "url": "https://github.com/google/guava/commit/ef63e4f4692eb168aa1a859e822cdb7b161f84b7",
    "details": {
      "sha": "95658082e46e5eb3ae4535afcbeb51132f30e808",
      "filename": "guava/src/com/google/common/hash/Hashing.java",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/google/guava/blob/ef63e4f4692eb168aa1a859e822cdb7b161f84b7/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fhash%2FHashing.java",
      "raw_url": "https://github.com/google/guava/raw/ef63e4f4692eb168aa1a859e822cdb7b161f84b7/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fhash%2FHashing.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fhash%2FHashing.java?ref=ef63e4f4692eb168aa1a859e822cdb7b161f84b7",
      "patch": "@@ -107,8 +107,8 @@ public static HashFunction murmur3_128() {\n   private static final Murmur3_128HashFunction MURMUR3_128 = new Murmur3_128HashFunction(0);\n \n   /**\n-   * Returns a hash function implementing the MD5 hash algorithm by delegating to the MD5\n-   * {@link MessageDigest}.\n+   * Returns a hash function implementing the MD5 hash algorithm (128 hash bits) by delegating to\n+   * the MD5 {@link MessageDigest}.\n    */\n   public static HashFunction md5() {\n     return MD5;\n@@ -117,8 +117,8 @@ public static HashFunction md5() {\n   private static final HashFunction MD5 = new MessageDigestHashFunction(\"MD5\");\n \n   /**\n-   * Returns a hash function implementing the SHA-1 algorithm by delegating to the SHA-1\n-   * {@link MessageDigest}.\n+   * Returns a hash function implementing the SHA-1 algorithm (160 hash bits) by delegating to the\n+   * SHA-1 {@link MessageDigest}.\n    */\n   public static HashFunction sha1() {\n     return SHA_1;\n@@ -127,8 +127,8 @@ public static HashFunction sha1() {\n   private static final HashFunction SHA_1 = new MessageDigestHashFunction(\"SHA-1\");\n \n   /**\n-   * Returns a hash function implementing the SHA-256 algorithm by delegating to the SHA-256\n-   * {@link MessageDigest}.\n+   * Returns a hash function implementing the SHA-256 algorithm (256 hash bits) by delegating to\n+   * the SHA-256 {@link MessageDigest}.\n    */\n   public static HashFunction sha256() {\n     return SHA_256;\n@@ -137,8 +137,8 @@ public static HashFunction sha256() {\n   private static final HashFunction SHA_256 = new MessageDigestHashFunction(\"SHA-256\");\n \n   /**\n-   * Returns a hash function implementing the SHA-512 algorithm by delegating to the SHA-512\n-   * {@link MessageDigest}.\n+   * Returns a hash function implementing the SHA-512 algorithm (512 hash bits) by delegating to the\n+   * SHA-512 {@link MessageDigest}.\n    */\n   public static HashFunction sha512() {\n     return SHA_512;",
      "parent_sha": "abb836693293727f91f1249f43ac421825fcd744"
    }
  },
  {
    "oid": "66560f1d37c9de06a8963e7051fdc539f2f2f3c9",
    "message": "Fix typo in Javadoc: ImmutableList is a \"list\", not a \"set\".\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=118817173",
    "date": "2016-04-04T17:36:39Z",
    "url": "https://github.com/google/guava/commit/66560f1d37c9de06a8963e7051fdc539f2f2f3c9",
    "details": {
      "sha": "cf1ee69ddf10454bc423600327be595ed056716a",
      "filename": "guava/src/com/google/common/collect/ImmutableList.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/google/guava/blob/66560f1d37c9de06a8963e7051fdc539f2f2f3c9/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FImmutableList.java",
      "raw_url": "https://github.com/google/guava/raw/66560f1d37c9de06a8963e7051fdc539f2f2f3c9/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FImmutableList.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FImmutableList.java?ref=66560f1d37c9de06a8963e7051fdc539f2f2f3c9",
      "patch": "@@ -55,7 +55,7 @@\n public abstract class ImmutableList<E> extends ImmutableCollection<E>\n     implements List<E>, RandomAccess {\n   /**\n-   * Returns the empty immutable list. This set behaves and performs comparably\n+   * Returns the empty immutable list. This list behaves and performs comparably\n    * to {@link Collections#emptyList}, and is preferable mainly for consistency\n    * and maintainability of your code.\n    */",
      "parent_sha": "c995616f2409e2b20e890e415d6dd3d38d5bc1fe"
    }
  },
  {
    "oid": "c7344737d6311d81c213aaef58e5536ecc57c252",
    "message": "Don't build a full Multiset in the Java 7 branch of Collections2.isPermutation, just using the underlying hash table structure.\n\nEffects on Collections2ProGuard:\n108614 bytes => 92924 bytes\n54 classes => 41 classes\n350 methods => 221 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=156230331",
    "date": "2017-05-16T22:01:27Z",
    "url": "https://github.com/google/guava/commit/c7344737d6311d81c213aaef58e5536ecc57c252",
    "details": {
      "sha": "98210382cc86e854aea519e2f36c8305ae4b4283",
      "filename": "android/guava/src/com/google/common/collect/Collections2.java",
      "status": "modified",
      "additions": 9,
      "deletions": 5,
      "changes": 14,
      "blob_url": "https://github.com/google/guava/blob/c7344737d6311d81c213aaef58e5536ecc57c252/android%2Fguava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FCollections2.java",
      "raw_url": "https://github.com/google/guava/raw/c7344737d6311d81c213aaef58e5536ecc57c252/android%2Fguava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FCollections2.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/android%2Fguava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FCollections2.java?ref=c7344737d6311d81c213aaef58e5536ecc57c252",
      "patch": "@@ -38,6 +38,7 @@\n import java.util.Comparator;\n import java.util.Iterator;\n import java.util.List;\n+import java.util.Set;\n import javax.annotation.Nullable;\n \n /**\n@@ -671,12 +672,15 @@ void switchDirection() {\n    * Returns {@code true} if the second list is a permutation of the first.\n    */\n   private static boolean isPermutation(List<?> first, List<?> second) {\n-    if (first.size() != second.size()) {\n-      return false;\n+    return first.size() == second.size() && counts(first).equals(counts(second));\n+  }\n+  \n+  private static <E> Set<Multiset.Entry<E>> counts(Collection<E> collection) {\n+    AbstractObjectCountMap<E> map = new ObjectCountHashMap<>();\n+    for (E e : collection) {\n+      map.put(e, map.get(e) + 1);\n     }\n-    Multiset<?> firstMultiset = HashMultiset.create(first);\n-    Multiset<?> secondMultiset = HashMultiset.create(second);\n-    return firstMultiset.equals(secondMultiset);\n+    return map.entrySet();\n   }\n \n   private static boolean isPositiveInt(long n) {",
      "parent_sha": "19c39725be34efafa59edf6238713e97f6565eb1"
    }
  },
  {
    "oid": "a6c0a1babcde36af1010ef36a3aa9fa2bfc9e3c4",
    "message": "the the -> the\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57915223",
    "date": "2013-12-12T18:15:44Z",
    "url": "https://github.com/google/guava/commit/a6c0a1babcde36af1010ef36a3aa9fa2bfc9e3c4",
    "details": {
      "sha": "a929b8a795eb989a722efd5ae1a3030545e65ebf",
      "filename": "guava/src/com/google/common/util/concurrent/RateLimiter.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/google/guava/blob/a6c0a1babcde36af1010ef36a3aa9fa2bfc9e3c4/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FRateLimiter.java",
      "raw_url": "https://github.com/google/guava/raw/a6c0a1babcde36af1010ef36a3aa9fa2bfc9e3c4/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FRateLimiter.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FRateLimiter.java?ref=a6c0a1babcde36af1010ef36a3aa9fa2bfc9e3c4",
      "patch": "@@ -98,7 +98,7 @@ public abstract class RateLimiter {\n    * The simplest way to maintain a rate of QPS is to keep the timestamp of the last\n    * granted request, and ensure that (1/QPS) seconds have elapsed since then. For example,\n    * for a rate of QPS=5 (5 tokens per second), if we ensure that a request isn't granted\n-   * earlier than 200ms after the the last one, then we achieve the intended rate.\n+   * earlier than 200ms after the last one, then we achieve the intended rate.\n    * If a request comes and the last request was granted only 100ms ago, then we wait for\n    * another 100ms. At this rate, serving 15 fresh permits (i.e. for an acquire(15) request)\n    * naturally takes 3 seconds.",
      "parent_sha": "5097fbaf1ae749d60864855982bff6b244acbe37"
    }
  },
  {
    "oid": "0c769144624136bddc00c9f1c1f4bfdbd3f4ce31",
    "message": "Warn about overriding Converter.reverse().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138458677",
    "date": "2016-11-08T15:21:17Z",
    "url": "https://github.com/google/guava/commit/0c769144624136bddc00c9f1c1f4bfdbd3f4ce31",
    "details": {
      "sha": "5236bc9c6eed372baf4046875b2903192158c964",
      "filename": "guava/src/com/google/common/base/Converter.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/google/guava/blob/0c769144624136bddc00c9f1c1f4bfdbd3f4ce31/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FConverter.java",
      "raw_url": "https://github.com/google/guava/raw/0c769144624136bddc00c9f1c1f4bfdbd3f4ce31/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FConverter.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FConverter.java?ref=0c769144624136bddc00c9f1c1f4bfdbd3f4ce31",
      "patch": "@@ -229,8 +229,9 @@ public void remove() {\n    * value roughly equivalent to {@code a}.\n    *\n    * <p>The returned converter is serializable if {@code this} converter is.\n+   *\n+   * <p><b>Note:</b> you should not override this method. It is non-final for legacy reasons.\n    */\n-  // TODO(kak): Make this method final\n   @CanIgnoreReturnValue\n   public Converter<B, A> reverse() {\n     Converter<B, A> result = reverse;",
      "parent_sha": "a707ddc0e363aad68824b79e288f6b863a1579fd"
    }
  },
  {
    "oid": "46a324c292a8c2927bc452956d75134b2f084396",
    "message": "Avoid mentioning ImmutableSortedMap in the ImmutableMap implementation.\n\nI'm not sure why ProGuard couldn't strip this out already, but ImmutableSortedMap and several of *its* dependencies were getting retained when ProGuard stripped ImmutableMap, and this fixes it.\n\nEffects on ImmutableMapProGuard: ([]87770 bytes => 59284 bytes\n93 classes => 64 classes\n601 methods => 363 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=146505055",
    "date": "2017-02-03T22:14:07Z",
    "url": "https://github.com/google/guava/commit/46a324c292a8c2927bc452956d75134b2f084396",
    "details": {
      "sha": "853e584a96df9a3a4762fca519cfb2f49fa7a62e",
      "filename": "guava/src/com/google/common/collect/ImmutableMap.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/google/guava/blob/46a324c292a8c2927bc452956d75134b2f084396/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FImmutableMap.java",
      "raw_url": "https://github.com/google/guava/raw/46a324c292a8c2927bc452956d75134b2f084396/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FImmutableMap.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FImmutableMap.java?ref=46a324c292a8c2927bc452956d75134b2f084396",
      "patch": "@@ -34,6 +34,7 @@\n import java.util.Iterator;\n import java.util.LinkedHashMap;\n import java.util.Map;\n+import java.util.SortedMap;\n import java.util.Spliterator;\n import java.util.Spliterators;\n import java.util.function.BiFunction;\n@@ -374,7 +375,7 @@ public ImmutableMap<K, V> build() {\n    * @throws NullPointerException if any key or value in {@code map} is null\n    */\n   public static <K, V> ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map) {\n-    if ((map instanceof ImmutableMap) && !(map instanceof ImmutableSortedMap)) {\n+    if ((map instanceof ImmutableMap) && !(map instanceof SortedMap)) {\n       // TODO(lowasser): Make ImmutableMap.copyOf(immutableBiMap) call copyOf()\n       // on the ImmutableMap delegate(), rather than the bimap itself\n ",
      "parent_sha": "612ea8749817abc6137755ca8e8af0b5a1411026"
    }
  },
  {
    "oid": "2f3fc9c4c2952acad8ba0159cbf426528de5631c",
    "message": "Add tests for common aliases of SHA1.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=45427688",
    "date": "2013-04-22T15:27:52Z",
    "url": "https://github.com/google/guava/commit/2f3fc9c4c2952acad8ba0159cbf426528de5631c",
    "details": {
      "sha": "85c240efbece7a3d63bd32a28de0cf564ae8ff00",
      "filename": "guava-tests/test/com/google/common/hash/MessageDigestHashFunctionTest.java",
      "status": "modified",
      "additions": 19,
      "deletions": 4,
      "changes": 23,
      "blob_url": "https://github.com/google/guava/blob/2f3fc9c4c2952acad8ba0159cbf426528de5631c/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fhash%2FMessageDigestHashFunctionTest.java",
      "raw_url": "https://github.com/google/guava/raw/2f3fc9c4c2952acad8ba0159cbf426528de5631c/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fhash%2FMessageDigestHashFunctionTest.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fhash%2FMessageDigestHashFunctionTest.java?ref=2f3fc9c4c2952acad8ba0159cbf426528de5631c",
      "patch": "@@ -16,6 +16,7 @@\n \n package com.google.common.hash;\n \n+import com.google.common.collect.ImmutableMap;\n import com.google.common.collect.ImmutableSet;\n \n import junit.framework.TestCase;\n@@ -31,12 +32,26 @@\n  */\n public class MessageDigestHashFunctionTest extends TestCase {\n   private static final ImmutableSet<String> INPUTS = ImmutableSet.of(\"\", \"Z\", \"foobar\");\n-  private static final ImmutableSet<String> ALGORITHMS = ImmutableSet.of(\n-        \"MD5\", \"SHA1\", \"SHA-1\", \"SHA-256\", \"SHA-512\");\n+\n+  // From \"How Provider Implementations Are Requested and Supplied\" from\n+  // http://docs.oracle.com/javase/6/docs/technotes/guides/security/crypto/CryptoSpec.html\n+  //  - Some providers may choose to also include alias names.\n+  //  - For example, the \"SHA-1\" algorithm might be referred to as \"SHA1\".\n+  //  - The algorithm name is not case-sensitive.\n+  private static final ImmutableMap<String, HashFunction> ALGORITHMS =\n+      new ImmutableMap.Builder<String, HashFunction>()\n+          .put(\"MD5\", Hashing.md5())\n+          .put(\"SHA\", Hashing.sha1()) // Not the official name, but still works\n+          .put(\"SHA1\", Hashing.sha1()) // Not the official name, but still works\n+          .put(\"sHa-1\", Hashing.sha1()) // Not the official name, but still works\n+          .put(\"SHA-1\", Hashing.sha1())\n+          .put(\"SHA-256\", Hashing.sha256())\n+          .put(\"SHA-512\", Hashing.sha512())\n+          .build();\n \n   public void testHashing() {\n     for (String stringToTest : INPUTS) {\n-      for (String algorithmToTest : ALGORITHMS) {\n+      for (String algorithmToTest : ALGORITHMS.keySet()) {\n         assertMessageDigestHashing(HashTestUtils.ascii(stringToTest), algorithmToTest);\n       }\n     }\n@@ -54,7 +69,7 @@ private static void assertMessageDigestHashing(byte[] input, String algorithmNam\n       MessageDigest digest = MessageDigest.getInstance(algorithmName);\n       assertEquals(\n           HashCodes.fromBytes(digest.digest(input)),\n-          new MessageDigestHashFunction(algorithmName, algorithmName).hashBytes(input));\n+          ALGORITHMS.get(algorithmName).hashBytes(input));\n       for (int bytes = 4; bytes <= digest.getDigestLength(); bytes++) {\n         assertEquals(\n             HashCodes.fromBytes(Arrays.copyOf(digest.digest(input), bytes)),",
      "parent_sha": "18cb0eeb06aadd86101b6fe20be7f7d896231bd7"
    }
  },
  {
    "oid": "aa42c2b167a0643a48f61aa9b919887ade288bb2",
    "message": "Remove workaround that was required by the <T extends Object & Iterable<?> & Iterator<?>> method.\nThat method was removed.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64996669",
    "date": "2014-04-16T22:47:39Z",
    "url": "https://github.com/google/guava/commit/aa42c2b167a0643a48f61aa9b919887ade288bb2",
    "details": {
      "sha": "32f22e264a83356278aa4c589b42ebb8328cbea0",
      "filename": "guava-tests/test/com/google/common/base/JoinerTest.java",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/google/guava/blob/aa42c2b167a0643a48f61aa9b919887ade288bb2/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FJoinerTest.java",
      "raw_url": "https://github.com/google/guava/raw/aa42c2b167a0643a48f61aa9b919887ade288bb2/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FJoinerTest.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FJoinerTest.java?ref=aa42c2b167a0643a48f61aa9b919887ade288bb2",
      "patch": "@@ -356,10 +356,7 @@ public void testDontConvertCharSequenceToString() {\n \n   @GwtIncompatible(\"NullPointerTester\")\n   public void testNullPointers() {\n-    NullPointerTester tester = new NullPointerTester()\n-        // This is necessary because of the generics hackery we have to temporarily support\n-        // parameters which implement both Iterator and Iterable.;\n-        .setDefault(Object.class, ImmutableSet.of().iterator());\n+    NullPointerTester tester = new NullPointerTester();\n     tester.testAllPublicStaticMethods(Joiner.class);\n     tester.testInstanceMethods(Joiner.on(\",\"), NullPointerTester.Visibility.PACKAGE);\n     tester.testInstanceMethods(Joiner.on(\",\").skipNulls(), NullPointerTester.Visibility.PACKAGE);",
      "parent_sha": "bc9c0fb23c88fb4a2ec626929887baa001c9bcf7"
    }
  },
  {
    "oid": "66a4a82d359ee8ec552e0af29290081c09ad9d48",
    "message": "Remove c.g.common.escape usages in c.g.common.net.MediaType.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27815215",
    "date": "2012-02-24T16:56:22Z",
    "url": "https://github.com/google/guava/commit/66a4a82d359ee8ec552e0af29290081c09ad9d48",
    "details": {
      "sha": "e8559d409c3a96e89ed1c5bbc42aceebc0547948",
      "filename": "guava/src/com/google/common/net/MediaType.java",
      "status": "modified",
      "additions": 13,
      "deletions": 10,
      "changes": 23,
      "blob_url": "https://github.com/google/guava/blob/66a4a82d359ee8ec552e0af29290081c09ad9d48/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fnet%2FMediaType.java",
      "raw_url": "https://github.com/google/guava/raw/66a4a82d359ee8ec552e0af29290081c09ad9d48/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fnet%2FMediaType.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fnet%2FMediaType.java?ref=66a4a82d359ee8ec552e0af29290081c09ad9d48",
      "patch": "@@ -40,8 +40,6 @@\n import com.google.common.collect.Maps;\n import com.google.common.collect.Multimap;\n import com.google.common.collect.Multimaps;\n-import com.google.common.escape.CharEscaper;\n-import com.google.common.escape.CharEscaperBuilder;\n \n import java.nio.charset.Charset;\n import java.nio.charset.IllegalCharsetNameException;\n@@ -555,11 +553,6 @@ boolean hasMore() {\n   }\n \n   private static final MapJoiner PARAMETER_JOINER = Joiner.on(\"; \").withKeyValueSeparator(\"=\");\n-  private static final CharEscaper VALUE_ESCAPER = new CharEscaperBuilder()\n-      .addEscape('\"', \"\\\\\\\"\")\n-      .addEscape('\\r', \"\\\\\\r\")\n-      .addEscape('\\\\', \"\\\\\\\\\")\n-      .toEscaper();\n \n   /**\n    * Returns the string representation of this media type in the format described in <a\n@@ -572,13 +565,23 @@ boolean hasMore() {\n       Multimap<String, String> quotedParameters = Multimaps.transformValues(parameters,\n           new Function<String, String>() {\n             @Override public String apply(String value) {\n-              return TOKEN_MATCHER.matchesAllOf(value) ? value\n-                  : new StringBuilder().append('\"').append(VALUE_ESCAPER.escape(value)).append('\"')\n-                      .toString();\n+              return TOKEN_MATCHER.matchesAllOf(value) ? value : escapeAndQuote(value);\n             }\n           });\n       PARAMETER_JOINER.appendTo(builder, quotedParameters.entries());\n     }\n     return builder.toString();\n   }\n+\n+  private static String escapeAndQuote(String value) {\n+    StringBuilder escaped = new StringBuilder(value.length() + 16).append('\"');\n+    for (char ch : value.toCharArray()) {\n+      if (ch == '\\r' || ch == '\\\\' || ch == '\"') {\n+        escaped.append('\\\\');\n+      }\n+      escaped.append(ch);\n+    }\n+    return escaped.append('\"').toString();\n+  }\n+\n }",
      "parent_sha": "f8144b4df7eec5f1c9e6942d8d5ef734a8767fd9"
    }
  },
  {
    "oid": "60a4fc580248199add9059979578f757f32d0b88",
    "message": "Add an InternetDomainName test that confirms proper behavior when \"under\" TLD patterns overlap.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36371550",
    "date": "2012-10-25T19:03:20Z",
    "url": "https://github.com/google/guava/commit/60a4fc580248199add9059979578f757f32d0b88",
    "details": {
      "sha": "7291286c0ea096eaf8fd9e089d50a55d5f57eda4",
      "filename": "guava-tests/test/com/google/common/net/InternetDomainNameTest.java",
      "status": "modified",
      "additions": 10,
      "deletions": 1,
      "changes": 11,
      "blob_url": "https://github.com/google/guava/blob/60a4fc580248199add9059979578f757f32d0b88/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fnet%2FInternetDomainNameTest.java",
      "raw_url": "https://github.com/google/guava/raw/60a4fc580248199add9059979578f757f32d0b88/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fnet%2FInternetDomainNameTest.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fnet%2FInternetDomainNameTest.java?ref=60a4fc580248199add9059979578f757f32d0b88",
      "patch": "@@ -378,6 +378,16 @@ public void testExclusion() {\n     assertFalse(domain.publicSuffix().isPublicSuffix());\n   }\n \n+  public void testMultipleUnders() {\n+    // PSL has both *.uk and *.police.uk; the latter should win.\n+    // See http://code.google.com/p/guava-libraries/issues/detail?id=1176\n+\n+    InternetDomainName domain = InternetDomainName.from(\"www.essex.police.uk\");\n+    assertTrue(domain.hasPublicSuffix());\n+    assertEquals(\"essex.police.uk\", domain.publicSuffix().name());\n+    assertEquals(\"www.essex.police.uk\", domain.topPrivateDomain().name());\n+  }\n+\n   public void testEquality() {\n     new EqualsTester()\n         .addEqualityGroup(\n@@ -399,5 +409,4 @@ public void testNulls() {\n     tester.testAllPublicStaticMethods(InternetDomainName.class);\n     tester.testAllPublicInstanceMethods(InternetDomainName.from(\"google.com\"));\n   }\n-\n }",
      "parent_sha": "5d1830f735d38e545fdc495886e66e903f5ad53e"
    }
  },
  {
    "oid": "2d33ed7fd15022675c91e9be6a68ca1011f83d60",
    "message": "add warning to Ticker\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28316339",
    "date": "2012-03-13T20:44:35Z",
    "url": "https://github.com/google/guava/commit/2d33ed7fd15022675c91e9be6a68ca1011f83d60",
    "details": {
      "sha": "6c34aefd3e931e79786aab6f930a6ef1507f7803",
      "filename": "guava/src/com/google/common/base/Ticker.java",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/google/guava/blob/2d33ed7fd15022675c91e9be6a68ca1011f83d60/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FTicker.java",
      "raw_url": "https://github.com/google/guava/raw/2d33ed7fd15022675c91e9be6a68ca1011f83d60/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FTicker.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FTicker.java?ref=2d33ed7fd15022675c91e9be6a68ca1011f83d60",
      "patch": "@@ -20,8 +20,11 @@\n import com.google.common.annotations.GwtCompatible;\n \n /**\n- * A time source; returns a time value representing the number of nanoseconds\n- * elapsed since some fixed but arbitrary point in time.\n+ * A time source; returns a time value representing the number of nanoseconds elapsed since some\n+ * fixed but arbitrary point in time. Note that most users should use {@link Stopwatch} instead of\n+ * interacting with this class directly.\n+ *\n+ * <p><b>Warning:</b> this interface can only be used to measure elapsed time, not wall time.\n  *\n  * @author Kevin Bourrillion\n  * @since 10.0",
      "parent_sha": "ec452d24ada3b476ede4bbd9c68e71d4211c0afe"
    }
  },
  {
    "oid": "21f726080b3d6d5ce8662271364b0971b2dc6734",
    "message": "Reshuffling from internal-only changes.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46885542",
    "date": "2013-05-21T14:40:35Z",
    "url": "https://github.com/google/guava/commit/21f726080b3d6d5ce8662271364b0971b2dc6734",
    "details": {
      "sha": "f3d8884601c7a7273cfc49cb305c22943578f97e",
      "filename": "guava-gwt/src-super/com/google/common/primitives/super/com/google/common/primitives/UnsignedInteger.java",
      "status": "modified",
      "additions": 15,
      "deletions": 16,
      "changes": 31,
      "blob_url": "https://github.com/google/guava/blob/21f726080b3d6d5ce8662271364b0971b2dc6734/guava-gwt%2Fsrc-super%2Fcom%2Fgoogle%2Fcommon%2Fprimitives%2Fsuper%2Fcom%2Fgoogle%2Fcommon%2Fprimitives%2FUnsignedInteger.java",
      "raw_url": "https://github.com/google/guava/raw/21f726080b3d6d5ce8662271364b0971b2dc6734/guava-gwt%2Fsrc-super%2Fcom%2Fgoogle%2Fcommon%2Fprimitives%2Fsuper%2Fcom%2Fgoogle%2Fcommon%2Fprimitives%2FUnsignedInteger.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava-gwt%2Fsrc-super%2Fcom%2Fgoogle%2Fcommon%2Fprimitives%2Fsuper%2Fcom%2Fgoogle%2Fcommon%2Fprimitives%2FUnsignedInteger.java?ref=21f726080b3d6d5ce8662271364b0971b2dc6734",
      "patch": "@@ -1,11 +1,11 @@\n /*\n  * Copyright (C) 2011 The Guava Authors\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n  * in compliance with the License. You may obtain a copy of the License at\n- * \n+ *\n  * http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software distributed under the\n  * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n  * express or implied. See the License for the specific language governing permissions and\n@@ -29,14 +29,14 @@\n \n /**\n  * A wrapper class for unsigned {@code int} values, supporting arithmetic operations.\n- * \n+ *\n  * <p>In some cases, when speed is more important than code readability, it may be faster simply to\n  * treat primitive {@code int} values as unsigned, using the methods from {@link UnsignedInts}.\n- * \n+ *\n  * <p>See the Guava User Guide article on <a href=\n  * \"http://code.google.com/p/guava-libraries/wiki/PrimitivesExplained#Unsigned_support\">\n  * unsigned primitive utilities</a>.\n- * \n+ *\n  * @author Louis Wasserman\n  * @since 11.0\n  */\n@@ -62,7 +62,7 @@ private UnsignedInteger(int value) {\n    * otherwise, the result will be equal to {@code 2^32 + bits}.\n    *\n    * <p>To represent unsigned decimal constants, consider {@link #valueOf(long)} instead.\n-   * \n+   *\n    * @since 14.0\n    */\n   public static UnsignedInteger fromIntBits(int bits) {\n@@ -82,7 +82,7 @@ public static UnsignedInteger valueOf(long value) {\n   /**\n    * Returns a {@code UnsignedInteger} representing the same value as the specified\n    * {@link BigInteger}. This is the inverse operation of {@link #bigIntegerValue()}.\n-   * \n+   *\n    * @throws IllegalArgumentException if {@code value} is negative or {@code value >= 2^32}\n    */\n   public static UnsignedInteger valueOf(BigInteger value) {\n@@ -95,7 +95,7 @@ public static UnsignedInteger valueOf(BigInteger value) {\n   /**\n    * Returns an {@code UnsignedInteger} holding the value of the specified {@code String}, parsed\n    * as an unsigned {@code int} value.\n-   * \n+   *\n    * @throws NumberFormatException if the string does not contain a parsable unsigned {@code int}\n    *         value\n    */\n@@ -106,7 +106,7 @@ public static UnsignedInteger valueOf(String string) {\n   /**\n    * Returns an {@code UnsignedInteger} holding the value of the specified {@code String}, parsed\n    * as an unsigned {@code int} value in the specified radix.\n-   * \n+   *\n    * @throws NumberFormatException if the string does not contain a parsable unsigned {@code int}\n    *         value\n    */\n@@ -117,7 +117,7 @@ public static UnsignedInteger valueOf(String string, int radix) {\n   /**\n    * Returns the result of adding this and {@code val}. If the result would have more than 32 bits,\n    * returns the low 32 bits of the result.\n-   * \n+   *\n    * @since 14.0\n    */\n   @CheckReturnValue\n@@ -128,7 +128,7 @@ public UnsignedInteger plus(UnsignedInteger val) {\n   /**\n    * Returns the result of subtracting this and {@code val}. If the result would be negative,\n    * returns the low 32 bits of the result.\n-   * \n+   *\n    * @since 14.0\n    */\n   @CheckReturnValue\n@@ -138,7 +138,7 @@ public UnsignedInteger minus(UnsignedInteger val) {\n \n   /**\n    * Returns the result of dividing this by {@code val}.\n-   * \n+   *\n    * @throws ArithmeticException if {@code val} is zero\n    * @since 14.0\n    */\n@@ -149,7 +149,7 @@ public UnsignedInteger dividedBy(UnsignedInteger val) {\n \n   /**\n    * Returns this mod {@code val}.\n-   * \n+   *\n    * @throws ArithmeticException if {@code val} is zero\n    * @since 14.0\n    */\n@@ -161,7 +161,7 @@ public UnsignedInteger mod(UnsignedInteger val) {\n   /**\n    * Returns the value of this {@code UnsignedInteger} as an {@code int}. This is an inverse\n    * operation to {@link #fromIntBits}.\n-   * \n+   *\n    * <p>Note that if this {@code UnsignedInteger} holds a value {@code >= 2^31}, the returned value\n    * will be equal to {@code this - 2^32}.\n    */\n@@ -245,4 +245,3 @@ public String toString(int radix) {\n     return UnsignedInts.toString(value, radix);\n   }\n }\n-",
      "parent_sha": "4855582f6264aa7bae5b430d9ebf79f40235b35e"
    }
  },
  {
    "oid": "8f43bdaee14fe6d6f8b0d0b083e04016ea915986",
    "message": "Some small cleanup to Graphs.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114030721",
    "date": "2016-02-07T01:21:50Z",
    "url": "https://github.com/google/guava/commit/8f43bdaee14fe6d6f8b0d0b083e04016ea915986",
    "details": {
      "sha": "7b11928c765945885884653da8847f33dc7ae990",
      "filename": "guava/src/com/google/common/graph/Graphs.java",
      "status": "modified",
      "additions": 9,
      "deletions": 14,
      "changes": 23,
      "blob_url": "https://github.com/google/guava/blob/8f43bdaee14fe6d6f8b0d0b083e04016ea915986/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fgraph%2FGraphs.java",
      "raw_url": "https://github.com/google/guava/raw/8f43bdaee14fe6d6f8b0d0b083e04016ea915986/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fgraph%2FGraphs.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fgraph%2FGraphs.java?ref=8f43bdaee14fe6d6f8b0d0b083e04016ea915986",
      "patch": "@@ -52,7 +52,6 @@ private Graphs() {}\n    * @throws IllegalArgumentException if {@code edge} is not incident to {@code node}\n    * @throws UnsupportedOperationException if {@code graph} is a {@link Hypergraph}\n    */\n-  @SuppressWarnings(\"unchecked\")\n   public static <N> N oppositeNode(Graph<N, ?> graph, Object edge, Object node) {\n     checkNotNull(graph, \"graph\");\n     checkNotNull(edge, \"edge\");\n@@ -83,24 +82,20 @@ public static <N> N oppositeNode(Graph<N, ?> graph, Object edge, Object node) {\n   @CanIgnoreReturnValue\n   public static <N, E> boolean addEdge(Graph<N, E> graph, E edge, Iterable<N> nodes) {\n     checkNotNull(graph, \"graph\");\n-    checkNotNull(nodes, \"nodes\");\n     checkNotNull(edge, \"edge\");\n+    checkNotNull(nodes, \"nodes\");\n     if (graph instanceof Hypergraph) {\n       return ((Hypergraph<N, E>) graph).addEdge(edge, nodes);\n     }\n \n-    Iterator<N> it = nodes.iterator();\n-    checkArgument(\n-        it.hasNext(), \"'graph' is not a Hypergraph, and 'nodes' has < 1 elements: %s\", nodes);\n-    N n1 = it.next();\n-    if (it.hasNext()) {\n-      N n2 = it.next();\n-      checkArgument(\n-          !it.hasNext(), \"'graph' is not a Hypergraph, and 'nodes' has > 2 elements: %s\", nodes);\n-      return graph.addEdge(edge, n1, n2);\n-    } else {\n-      return graph.addEdge(edge, n1, n1);\n-    }\n+    Iterator<N> nodesIterator = nodes.iterator();\n+    checkArgument(nodesIterator.hasNext(),\n+        \"'graph' is not a Hypergraph, and 'nodes' has < 1 elements: %s\", nodes);\n+    N node1 = nodesIterator.next();\n+    N node2 = nodesIterator.hasNext() ? nodesIterator.next() : node1;\n+    checkArgument(!nodesIterator.hasNext(),\n+        \"'graph' is not a Hypergraph, and 'nodes' has > 2 elements: %s\", nodes);\n+    return graph.addEdge(edge, node1, node2);\n   }\n \n   /**",
      "parent_sha": "fb3b3245bb5f2393870438e8540d7d363f917b07"
    }
  },
  {
    "oid": "7396830c4c179496b2cc81d3c2fe86bd6bf675e3",
    "message": "replace UnsignedInteger.asUnsigned() with UnsignedInteger.fromIntBits()\n\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38638597",
    "date": "2012-11-15T20:02:56Z",
    "url": "https://github.com/google/guava/commit/7396830c4c179496b2cc81d3c2fe86bd6bf675e3",
    "details": {
      "sha": "cd97bdfdb2ba2c2b599d760d6580ef1fa107b346",
      "filename": "guava-testlib/src/com/google/common/testing/FreshValueGenerator.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/google/guava/blob/7396830c4c179496b2cc81d3c2fe86bd6bf675e3/guava-testlib%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Ftesting%2FFreshValueGenerator.java",
      "raw_url": "https://github.com/google/guava/raw/7396830c4c179496b2cc81d3c2fe86bd6bf675e3/guava-testlib%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Ftesting%2FFreshValueGenerator.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava-testlib%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Ftesting%2FFreshValueGenerator.java?ref=7396830c4c179496b2cc81d3c2fe86bd6bf675e3",
      "patch": "@@ -310,7 +310,7 @@ private static String paramString(Class<?> type, int i) {\n   }\n \n   @Generates private UnsignedInteger freshUnsignedInteger() {\n-    return UnsignedInteger.asUnsigned(freshInt());\n+    return UnsignedInteger.fromIntBits(freshInt());\n   }\n \n   @Generates private UnsignedLong freshUnsignedLong() {",
      "parent_sha": "0f3e338f705291b1f2fad2216fe6dd2bdd3d553a"
    }
  },
  {
    "oid": "7970182d52338b1b1517479ee2e007f1c318be23",
    "message": "Prepare for Public Suffic List update, which removes the '!' rule that this file was using.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=136359859",
    "date": "2016-10-17T16:57:55Z",
    "url": "https://github.com/google/guava/commit/7970182d52338b1b1517479ee2e007f1c318be23",
    "details": {
      "sha": "1223f200dfa07ae64af83953b78fceb6077764ed",
      "filename": "guava-tests/test/com/google/common/net/InternetDomainNameTest.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/google/guava/blob/7970182d52338b1b1517479ee2e007f1c318be23/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fnet%2FInternetDomainNameTest.java",
      "raw_url": "https://github.com/google/guava/raw/7970182d52338b1b1517479ee2e007f1c318be23/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fnet%2FInternetDomainNameTest.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fnet%2FInternetDomainNameTest.java?ref=7970182d52338b1b1517479ee2e007f1c318be23",
      "patch": "@@ -366,9 +366,9 @@ public void testToString() {\n   }\n \n   public void testExclusion() {\n-    InternetDomainName domain = InternetDomainName.from(\"foo.teledata.mz\");\n+    InternetDomainName domain = InternetDomainName.from(\"foo.city.yokohama.jp\");\n     assertTrue(domain.hasPublicSuffix());\n-    assertEquals(\"mz\", domain.publicSuffix().toString());\n+    assertEquals(\"yokohama.jp\", domain.publicSuffix().toString());\n \n     // Behold the weirdness!\n     assertFalse(domain.publicSuffix().isPublicSuffix());",
      "parent_sha": "ae80b8af934d280bd739f24959f7468a1ef5c077"
    }
  },
  {
    "oid": "206ae78f06324ff4a6257ed8ef6cd4d97746cce5",
    "message": "add new Cache/LoadingCache methods to RemovalCause javadocs\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26048028",
    "date": "2011-12-09T16:10:10Z",
    "url": "https://github.com/google/guava/commit/206ae78f06324ff4a6257ed8ef6cd4d97746cce5",
    "details": {
      "sha": "6574b0e69109244d5ce3edb121531ea75f1988e7",
      "filename": "guava/src/com/google/common/cache/RemovalCause.java",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/google/guava/blob/206ae78f06324ff4a6257ed8ef6cd4d97746cce5/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcache%2FRemovalCause.java",
      "raw_url": "https://github.com/google/guava/raw/206ae78f06324ff4a6257ed8ef6cd4d97746cce5/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcache%2FRemovalCause.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcache%2FRemovalCause.java?ref=206ae78f06324ff4a6257ed8ef6cd4d97746cce5",
      "patch": "@@ -31,9 +31,9 @@\n @Beta\n public enum RemovalCause {\n   /**\n-   * The entry was manually removed by the user. This can result from the user invoking {@link\n-   * Cache#invalidate}, {@link Map#remove}, {@link ConcurrentMap#remove}, or {@link\n-   * Iterator#remove}.\n+   * The entry was manually removed by the user. This can result from the user invoking\n+   * {@link Cache#invalidate}, {@link Cache#invalidateAll(Iterable)}, {@link Cache#invalidateAll()},\n+   * {@link Map#remove}, {@link ConcurrentMap#remove}, or {@link Iterator#remove}.\n    */\n   EXPLICIT {\n     @Override\n@@ -44,8 +44,8 @@ boolean wasEvicted() {\n \n   /**\n    * The entry itself was not actually removed, but its value was replaced by the user. This can\n-   * result from the user invoking {@link Map#put}, {@link Map#putAll},\n-   * {@link ConcurrentMap#replace(Object, Object)}, or\n+   * result from the user invoking {@link Cache#put}, {@link LoadingCache#refresh}, {@link Map#put},\n+   * {@link Map#putAll}, {@link ConcurrentMap#replace(Object, Object)}, or\n    * {@link ConcurrentMap#replace(Object, Object, Object)}.\n    */\n   REPLACED {\n@@ -68,8 +68,8 @@ boolean wasEvicted() {\n   },\n \n   /**\n-   * The entry's expiration timestamp has passed. This can occur when using {@link\n-   * CacheBuilder#expireAfterWrite} or {@link CacheBuilder#expireAfterAccess}.\n+   * The entry's expiration timestamp has passed. This can occur when using\n+   * {@link CacheBuilder#expireAfterWrite} or {@link CacheBuilder#expireAfterAccess}.\n    */\n   EXPIRED {\n     @Override\n@@ -79,8 +79,8 @@ boolean wasEvicted() {\n   },\n \n   /**\n-   * The entry was evicted due to size constraints. This can occur when using {@link\n-   * CacheBuilder#maximumSize} or {@link CacheBuilder#maximumWeight}.\n+   * The entry was evicted due to size constraints. This can occur when using\n+   * {@link CacheBuilder#maximumSize} or {@link CacheBuilder#maximumWeight}.\n    */\n   SIZE {\n     @Override",
      "parent_sha": "097aa881a449c790285c1790af90382eca69c645"
    }
  },
  {
    "oid": "1a4d70b4ae4d3dc01670ce825d1666dc8a66cabf",
    "message": "Fix typo.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=126665968",
    "date": "2016-07-06T11:07:04Z",
    "url": "https://github.com/google/guava/commit/1a4d70b4ae4d3dc01670ce825d1666dc8a66cabf",
    "details": {
      "sha": "529b32b0c523d1b80d18de18bb882d401903cadf",
      "filename": "guava/src/com/google/common/graph/Graph.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/google/guava/blob/1a4d70b4ae4d3dc01670ce825d1666dc8a66cabf/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fgraph%2FGraph.java",
      "raw_url": "https://github.com/google/guava/raw/1a4d70b4ae4d3dc01670ce825d1666dc8a66cabf/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fgraph%2FGraph.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fgraph%2FGraph.java?ref=1a4d70b4ae4d3dc01670ce825d1666dc8a66cabf",
      "patch": "@@ -62,7 +62,7 @@\n  *   <li>{@code nodeA} and {@code nodeB} are mutually predecessors and successors\n  *       in {@code graph}\n  *   <li>{@code nodeA} has an (implicit) edge in {@code graph} that is both outgoing to\n- *       to {@code nodeB} and incoming from {@code nodeB}, and vice versa.\n+ *       {@code nodeB} and incoming from {@code nodeB}, and vice versa.\n  *   </ul>\n  * <li>A self-loop is an edge that connects a node to itself.\n  * </ul>",
      "parent_sha": "a5b1ce806d6b6e9271debc430d335638bbb327e9"
    }
  },
  {
    "oid": "fa31c1eb06783cf3431d1712d181dc7800207713",
    "message": "Hardcode the expected value to work around Android UTF_16 bug:\nhttps://code.google.com/p/android/issues/detail?id=196848\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110028408",
    "date": "2015-12-14T15:50:21Z",
    "url": "https://github.com/google/guava/commit/fa31c1eb06783cf3431d1712d181dc7800207713",
    "details": {
      "sha": "762ad34655aeb093f91d4dc056c6861365b1979d",
      "filename": "guava-tests/test/com/google/common/io/ByteStreamsTest.java",
      "status": "modified",
      "additions": 12,
      "deletions": 2,
      "changes": 14,
      "blob_url": "https://github.com/google/guava/blob/fa31c1eb06783cf3431d1712d181dc7800207713/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fio%2FByteStreamsTest.java",
      "raw_url": "https://github.com/google/guava/raw/fa31c1eb06783cf3431d1712d181dc7800207713/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fio%2FByteStreamsTest.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fio%2FByteStreamsTest.java?ref=fa31c1eb06783cf3431d1712d181dc7800207713",
      "patch": "@@ -376,15 +376,25 @@ public void testNewDataOutput_writeChar() {\n     assertEquals(new byte[] {0, 97}, out.toByteArray());\n   }\n \n-  @AndroidIncompatible // TODO(cpovirk): Zero is found at beginning instead of end. Why?\n+  // Hardcoded because of Android problems. See testUtf16Expected.\n+  private static final byte[] utf16ExpectedWithBom =\n+      new byte[] {-2, -1, 0, 114, 0, -55, 0, 115, 0, 117, 0, 109, 0, -55};\n+\n   public void testNewDataOutput_writeChars() {\n     ByteArrayDataOutput out = ByteStreams.newDataOutput();\n     out.writeChars(\"r\\u00C9sum\\u00C9\");\n     // need to remove byte order mark before comparing\n-    byte[] expected = Arrays.copyOfRange(\"r\\u00C9sum\\u00C9\".getBytes(Charsets.UTF_16), 2, 14);\n+    byte[] expected = Arrays.copyOfRange(utf16ExpectedWithBom, 2, 14);\n     assertEquals(expected, out.toByteArray());\n   }\n \n+  @AndroidIncompatible // https://code.google.com/p/android/issues/detail?id=196848\n+  public void testUtf16Expected() {\n+    byte[] hardcodedExpected = utf16ExpectedWithBom;\n+    byte[] computedExpected = \"r\\u00C9sum\\u00C9\".getBytes(Charsets.UTF_16);\n+    assertEquals(hardcodedExpected, computedExpected);\n+  }\n+\n   public void testNewDataOutput_writeUTF() {\n     ByteArrayDataOutput out = ByteStreams.newDataOutput();\n     out.writeUTF(\"r\\u00C9sum\\u00C9\");",
      "parent_sha": "1b7e2844d82c1114c208bb98ee851f1aade328cc"
    }
  },
  {
    "oid": "12f610ed3f6e78289505fe102b27075954f941f4",
    "message": "Add explicit type parameters in FilteredMultimapValues to make JDK6 happy.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46951071",
    "date": "2013-05-21T22:50:54Z",
    "url": "https://github.com/google/guava/commit/12f610ed3f6e78289505fe102b27075954f941f4",
    "details": {
      "sha": "ae6f785ef305e36031735905533593cff7ddd057",
      "filename": "guava/src/com/google/common/collect/FilteredMultimapValues.java",
      "status": "modified",
      "additions": 7,
      "deletions": 4,
      "changes": 11,
      "blob_url": "https://github.com/google/guava/blob/12f610ed3f6e78289505fe102b27075954f941f4/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FFilteredMultimapValues.java",
      "raw_url": "https://github.com/google/guava/raw/12f610ed3f6e78289505fe102b27075954f941f4/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FFilteredMultimapValues.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FFilteredMultimapValues.java?ref=12f610ed3f6e78289505fe102b27075954f941f4",
      "patch": "@@ -25,6 +25,7 @@\n import java.util.Collection;\n import java.util.Iterator;\n import java.util.Map;\n+import java.util.Map.Entry;\n \n import javax.annotation.Nullable;\n \n@@ -58,8 +59,8 @@ public int size() {\n \n   @Override\n   public boolean remove(@Nullable Object o) {\n-    Predicate<? super Map.Entry<K, V>> entryPredicate = multimap.entryPredicate();\n-    for (Iterator<Map.Entry<K, V>> unfilteredItr = multimap.unfiltered().entries().iterator();\n+    Predicate<? super Entry<K, V>> entryPredicate = multimap.entryPredicate();\n+    for (Iterator<Entry<K, V>> unfilteredItr = multimap.unfiltered().entries().iterator();\n         unfilteredItr.hasNext();) {\n       Map.Entry<K, V> entry = unfilteredItr.next();\n       if (entryPredicate.apply(entry) && Objects.equal(entry.getValue(), o)) {\n@@ -73,14 +74,16 @@ public boolean remove(@Nullable Object o) {\n   @Override\n   public boolean removeAll(Collection<?> c) {\n     return Iterables.removeIf(multimap.unfiltered().entries(),\n-        Predicates.and(multimap.entryPredicate(),\n+        // explicit <Entry<K, V>> is required to build with JDK6\n+        Predicates.<Entry<K, V>>and(multimap.entryPredicate(),\n             Maps.<V>valuePredicateOnEntries(Predicates.in(c))));\n   }\n \n   @Override\n   public boolean retainAll(Collection<?> c) {\n     return Iterables.removeIf(multimap.unfiltered().entries(),\n-        Predicates.and(multimap.entryPredicate(),\n+        // explicit <Entry<K, V>> is required to build with JDK6\n+        Predicates.<Entry<K, V>>and(multimap.entryPredicate(),\n             Maps.<V>valuePredicateOnEntries(Predicates.not(Predicates.in(c)))));\n   }\n ",
      "parent_sha": "80f11e8ca15c1080d962c372f3a30457a8649671"
    }
  },
  {
    "oid": "7dace6d0ab8c850bca14c217dc4fc81592889bf2",
    "message": "Make CombinedFuture stop logging identical exceptions multiple times\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57675851",
    "date": "2013-12-08T15:40:09Z",
    "url": "https://github.com/google/guava/commit/7dace6d0ab8c850bca14c217dc4fc81592889bf2",
    "details": {
      "sha": "bc7b94194e9fba3432cd773b5e86e868e84e64c3",
      "filename": "guava/src/com/google/common/util/concurrent/Futures.java",
      "status": "modified",
      "additions": 19,
      "deletions": 5,
      "changes": 24,
      "blob_url": "https://github.com/google/guava/blob/7dace6d0ab8c850bca14c217dc4fc81592889bf2/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FFutures.java",
      "raw_url": "https://github.com/google/guava/raw/7dace6d0ab8c850bca14c217dc4fc81592889bf2/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FFutures.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FFutures.java?ref=7dace6d0ab8c850bca14c217dc4fc81592889bf2",
      "patch": "@@ -32,13 +32,15 @@\n import com.google.common.collect.ImmutableList;\n import com.google.common.collect.Lists;\n import com.google.common.collect.Ordering;\n+import com.google.common.collect.Sets;\n \n import java.lang.reflect.Constructor;\n import java.lang.reflect.InvocationTargetException;\n import java.lang.reflect.UndeclaredThrowableException;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n+import java.util.Set;\n import java.util.concurrent.CancellationException;\n import java.util.concurrent.CountDownLatch;\n import java.util.concurrent.ExecutionException;\n@@ -1474,6 +1476,8 @@ private static class CombinedFuture<V, C> extends AbstractFuture<C> {\n     final AtomicInteger remaining;\n     FutureCombiner<V, C> combiner;\n     List<Optional<V>> values;\n+    final Object seenExceptionsLock = new Object();\n+    Set<Throwable> seenExceptions;\n \n     CombinedFuture(\n         ImmutableCollection<? extends ListenableFuture<? extends V>> futures,\n@@ -1550,17 +1554,27 @@ public void run() {\n     /**\n      * Fails this future with the given Throwable if {@link #allMustSucceed} is\n      * true. Also, logs the throwable if it is an {@link Error} or if\n-     * {@link #allMustSucceed} is {@code true} and the throwable did not cause\n-     * this future to fail.\n+     * {@link #allMustSucceed} is {@code true}, the throwable did not cause\n+     * this future to fail, and it is the first time we've seen that particular Throwable.\n      */\n     private void setExceptionAndMaybeLog(Throwable throwable) {\n-      boolean result = false;\n+      boolean visibleFromOutputFuture = false;\n+      boolean firstTimeSeeingThisException = true;\n       if (allMustSucceed) {\n         // As soon as the first one fails, throw the exception up.\n         // The result of all other inputs is then ignored.\n-        result = super.setException(throwable);\n+        visibleFromOutputFuture = super.setException(throwable);\n+\n+        synchronized (seenExceptionsLock) {\n+          if (seenExceptions == null) {\n+            seenExceptions = Sets.newHashSet();\n+          }\n+          firstTimeSeeingThisException = seenExceptions.add(throwable);\n+        }\n       }\n-      if (throwable instanceof Error || (allMustSucceed && !result)) {\n+\n+      if (throwable instanceof Error\n+          || (allMustSucceed && !visibleFromOutputFuture && firstTimeSeeingThisException)) {\n         logger.log(Level.SEVERE, \"input future failed.\", throwable);\n       }\n     }",
      "parent_sha": "257148b2901c8b8ec1b06d9c10804300ac3d06d0"
    }
  },
  {
    "oid": "3e3da1d3dea1081b2134546a973e1e5e7ce90a01",
    "message": "Fix typo in ValueGraphBuilder.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=135057781",
    "date": "2016-10-04T13:12:26Z",
    "url": "https://github.com/google/guava/commit/3e3da1d3dea1081b2134546a973e1e5e7ce90a01",
    "details": {
      "sha": "03f9316ff6863143e926a2663aa22ccdf5ddb6b9",
      "filename": "guava/src/com/google/common/graph/ValueGraphBuilder.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/google/guava/blob/3e3da1d3dea1081b2134546a973e1e5e7ce90a01/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fgraph%2FValueGraphBuilder.java",
      "raw_url": "https://github.com/google/guava/raw/3e3da1d3dea1081b2134546a973e1e5e7ce90a01/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fgraph%2FValueGraphBuilder.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fgraph%2FValueGraphBuilder.java?ref=3e3da1d3dea1081b2134546a973e1e5e7ce90a01",
      "patch": "@@ -35,7 +35,8 @@\n  * <p>Example of use:\n  *\n  * <pre><code>\n- * MutableGraph<String, Double> graph = GraphBuilder.undirected().allowsSelfLoops(true).build();\n+ * MutableValueGraph<String, Double> graph =\n+ *     ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n  * graph.putEdgeValue(\"San Francisco\", \"San Francisco\", 0.0);\n  * graph.putEdgeValue(\"San Jose\", \"San Jose\", 0.0);\n  * graph.putEdgeValue(\"San Francisco\", \"San Jose\", 48.4);",
      "parent_sha": "5c3454a2d87ac27d381653747916b4a369dc6b52"
    }
  },
  {
    "oid": "477abc4b8e5f256592f79f00a67d7579cd7c0cbe",
    "message": "Extend mocking tests to cover EasyMock.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=66920336",
    "date": "2014-05-14T17:53:05Z",
    "url": "https://github.com/google/guava/commit/477abc4b8e5f256592f79f00a67d7579cd7c0cbe",
    "details": {
      "sha": "1f4a9419f985b8a76597c9ef97ea7035f48a808b",
      "filename": "guava-tests/test/com/google/common/util/concurrent/RateLimiterTest.java",
      "status": "modified",
      "additions": 8,
      "deletions": 3,
      "changes": 11,
      "blob_url": "https://github.com/google/guava/blob/477abc4b8e5f256592f79f00a67d7579cd7c0cbe/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FRateLimiterTest.java",
      "raw_url": "https://github.com/google/guava/raw/477abc4b8e5f256592f79f00a67d7579cd7c0cbe/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FRateLimiterTest.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FRateLimiterTest.java?ref=477abc4b8e5f256592f79f00a67d7579cd7c0cbe",
      "patch": "@@ -21,7 +21,6 @@\n import static java.util.concurrent.TimeUnit.MILLISECONDS;\n import static java.util.concurrent.TimeUnit.NANOSECONDS;\n import static java.util.concurrent.TimeUnit.SECONDS;\n-import static org.mockito.Mockito.mock;\n \n import com.google.common.collect.ImmutableClassToInstanceMap;\n import com.google.common.collect.ImmutableSet;\n@@ -32,6 +31,9 @@\n \n import junit.framework.TestCase;\n \n+import org.easymock.EasyMock;\n+import org.mockito.Mockito;\n+\n import java.lang.reflect.Method;\n import java.util.Arrays;\n import java.util.List;\n@@ -440,12 +442,15 @@ public String toString() {\n   }\n \n   public void testMocking() throws Exception {\n-    RateLimiter mock = mock(RateLimiter.class);\n+    RateLimiter mockito = Mockito.mock(RateLimiter.class);\n+    RateLimiter easyMock = EasyMock.createNiceMock(RateLimiter.class);\n+    EasyMock.replay(easyMock);\n     for (Method method : RateLimiter.class.getMethods()) {\n       if (!isStatic(method.getModifiers())\n           && !NOT_WORKING_ON_MOCKS.contains(method.getName())\n           && !method.getDeclaringClass().equals(Object.class)) {\n-        method.invoke(mock, arbitraryParameters(method));\n+        method.invoke(mockito, arbitraryParameters(method));\n+        method.invoke(easyMock, arbitraryParameters(method));\n       }\n     }\n   }",
      "parent_sha": "04846be2de2d3841f2ea4f756588af8b1470635f"
    }
  },
  {
    "oid": "1548d6345c99114613030ba50bf9ec774846555b",
    "message": "Fix remaining callers of NullOutputStream in c/g/common.\nMOE insert public for c.g.common.io.NullOutputStream.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32965282",
    "date": "2012-08-21T04:22:44Z",
    "url": "https://github.com/google/guava/commit/1548d6345c99114613030ba50bf9ec774846555b",
    "details": {
      "sha": "1f865d927103cf0e8579d0847acb0954869266c6",
      "filename": "guava/src/com/google/common/io/NullOutputStream.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/google/guava/blob/1548d6345c99114613030ba50bf9ec774846555b/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fio%2FNullOutputStream.java",
      "raw_url": "https://github.com/google/guava/raw/1548d6345c99114613030ba50bf9ec774846555b/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fio%2FNullOutputStream.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fio%2FNullOutputStream.java?ref=1548d6345c99114613030ba50bf9ec774846555b",
      "patch": "@@ -25,7 +25,8 @@\n  *\n  * @author Spencer Kimball\n  * @since 1.0\n- * @deprecated Use {@link ByteStreams#nullOutputStream} instead.\n+ * @deprecated Use {@link ByteStreams#nullOutputStream} instead. This class is\n+ *     scheduled to be removed in Guava release 15.0.\n  */\n @Beta\n @Deprecated",
      "parent_sha": "24e4d09cbd725d76734f10a449d3e2bc60ee62f8"
    }
  },
  {
    "oid": "80d067b049456d9c13951bd7726e69a65e635d65",
    "message": "Typos.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44212313",
    "date": "2013-03-20T20:22:19Z",
    "url": "https://github.com/google/guava/commit/80d067b049456d9c13951bd7726e69a65e635d65",
    "details": {
      "sha": "0d2c9c3cc0ee58d802c7f734f3d502286201c423",
      "filename": "guava/src/com/google/common/hash/BloomFilter.java",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/google/guava/blob/80d067b049456d9c13951bd7726e69a65e635d65/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fhash%2FBloomFilter.java",
      "raw_url": "https://github.com/google/guava/raw/80d067b049456d9c13951bd7726e69a65e635d65/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fhash%2FBloomFilter.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fhash%2FBloomFilter.java?ref=80d067b049456d9c13951bd7726e69a65e635d65",
      "patch": "@@ -281,7 +281,7 @@ public static <T> BloomFilter<T> create(\n      * TODO(user): Put a warning in the javadoc about tiny fpp values,\n      * since the resulting size is proportional to -log(p), but there is not\n      * much of a point after all, e.g. optimalM(1000, 0.0000000000000001) = 76680\n-     * which is less that 10kb. Who cares!\n+     * which is less than 10kb. Who cares!\n      */\n     long numBits = optimalNumOfBits(expectedInsertions, fpp);\n     int numHashFunctions = optimalNumOfHashFunctions(expectedInsertions, numBits);\n@@ -319,7 +319,6 @@ public static <T> BloomFilter<T> create(Funnel<T> funnel, int expectedInsertions\n    * m: total bits\n    * n: expected insertions\n    * b: m/n, bits per insertion\n-\n    * p: expected false positive probability\n    *\n    * 1) Optimal k = b * ln2",
      "parent_sha": "04314940cc5cf73c9aa638764edfd4261d2ebe17"
    }
  },
  {
    "oid": "00444687b364f0d7cb3d6111767169e5646d4462",
    "message": "De-betaify lots of methods in Futures.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39869967",
    "date": "2012-12-10T21:41:58Z",
    "url": "https://github.com/google/guava/commit/00444687b364f0d7cb3d6111767169e5646d4462",
    "details": {
      "sha": "3bda589de710de33e3d9c4b012d8cb295e27710f",
      "filename": "guava/src/com/google/common/util/concurrent/Futures.java",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/google/guava/blob/00444687b364f0d7cb3d6111767169e5646d4462/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FFutures.java",
      "raw_url": "https://github.com/google/guava/raw/00444687b364f0d7cb3d6111767169e5646d4462/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FFutures.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FFutures.java?ref=00444687b364f0d7cb3d6111767169e5646d4462",
      "patch": "@@ -64,7 +64,6 @@\n  * @author Sven Mawson\n  * @since 1.0\n  */\n-@Beta\n public final class Futures {\n   private Futures() {}\n \n@@ -80,6 +79,7 @@ private Futures() {}\n    *\n    * @since 9.0 (source-compatible since 1.0)\n    */\n+  @Beta\n   public static <V, X extends Exception> CheckedFuture<V, X> makeChecked(\n       ListenableFuture<V> future, Function<Exception, X> mapper) {\n     return new MappingCheckedFuture<V, X>(checkNotNull(future), mapper);\n@@ -248,6 +248,7 @@ public static <V> ListenableFuture<V> immediateFuture(@Nullable V value) {\n    * method always returns {@code true}. Calling {@code get()} or {@code\n    * checkedGet()} will immediately return the provided value.\n    */\n+  @Beta\n   public static <V, X extends Exception> CheckedFuture<V, X>\n       immediateCheckedFuture(@Nullable V value) {\n     return new ImmediateSuccessfulCheckedFuture<V, X>(value);\n@@ -274,6 +275,7 @@ public static <V> ListenableFuture<V> immediateFailedFuture(\n    *\n    * @since 14.0\n    */\n+  @Beta\n   public static <V> ListenableFuture<V> immediateCancelledFuture() {\n     return new ImmediateCancelledFuture<V>();\n   }\n@@ -288,6 +290,7 @@ public static <V> ListenableFuture<V> immediateCancelledFuture() {\n    * ExecutionException}, and calling {@code checkedGet()} will throw the\n    * provided exception itself.\n    */\n+  @Beta\n   public static <V, X extends Exception> CheckedFuture<V, X>\n       immediateFailedCheckedFuture(X exception) {\n     checkNotNull(exception);\n@@ -368,6 +371,7 @@ public static <V> ListenableFuture<V> immediateCancelledFuture() {\n    *     {@code input} fails\n    * @since 14.0\n    */\n+  @Beta\n   public static <V> ListenableFuture<V> withFallback(\n       ListenableFuture<? extends V> input,\n       FutureFallback<? extends V> fallback) {\n@@ -434,6 +438,7 @@ public static <V> ListenableFuture<V> withFallback(\n    *     fails\n    * @since 14.0\n    */\n+  @Beta\n   public static <V> ListenableFuture<V> withFallback(\n       ListenableFuture<? extends V> input,\n       FutureFallback<? extends V> fallback, Executor executor) {",
      "parent_sha": "fe6043a4eb4f665b235c0faca9710dbee4ab3bd8"
    }
  },
  {
    "oid": "babcf3128ca0f1609beb9c7caeff3fc1cfb1be1e",
    "message": "\nFix Eclipse-compiler build breakage caused by raw-types cleanup\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=687\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@232 8138a162-5c33-11de-8abc-d1c337b90d21",
    "date": "2011-02-28T20:20:40Z",
    "url": "https://github.com/google/guava/commit/babcf3128ca0f1609beb9c7caeff3fc1cfb1be1e",
    "details": {
      "sha": "f4cd15c3fc1adf61cbc46df4ea212eea46ef3258",
      "filename": "src/com/google/common/collect/ImmutableClassToInstanceMap.java",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/google/guava/blob/babcf3128ca0f1609beb9c7caeff3fc1cfb1be1e/src%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FImmutableClassToInstanceMap.java",
      "raw_url": "https://github.com/google/guava/raw/babcf3128ca0f1609beb9c7caeff3fc1cfb1be1e/src%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FImmutableClassToInstanceMap.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/src%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FImmutableClassToInstanceMap.java?ref=babcf3128ca0f1609beb9c7caeff3fc1cfb1be1e",
      "patch": "@@ -114,11 +114,13 @@ public ImmutableClassToInstanceMap<B> build() {\n    * @throws ClassCastException if any value is not an instance of the type\n    *     specified by its key\n    */\n-  @SuppressWarnings(\"unchecked\") // covariant casts safe (unmodifiable)\n   public static <B, S extends B> ImmutableClassToInstanceMap<B> copyOf(\n       Map<? extends Class<? extends S>, ? extends S> map) {\n     if (map instanceof ImmutableClassToInstanceMap) {\n-      return (ImmutableClassToInstanceMap<B>) map;\n+      @SuppressWarnings(\"unchecked\") // covariant casts safe (unmodifiable)\n+      // Eclipse won't compile if we cast to the parameterized type.\n+      ImmutableClassToInstanceMap<B> cast = (ImmutableClassToInstanceMap) map;\n+      return cast;\n     }\n     return new Builder<B>().putAll(map).build();\n   }",
      "parent_sha": "48ec1301ce521f4b653a7267e3eb36818a180eab"
    }
  },
  {
    "oid": "65b963bd5333df6ea04884d62afc548364223c13",
    "message": "Fix presidential history, a.k.a. - the Multimap javadoc.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43563199",
    "date": "2013-03-08T21:32:04Z",
    "url": "https://github.com/google/guava/commit/65b963bd5333df6ea04884d62afc548364223c13",
    "details": {
      "sha": "5435e8455ec5f9cea5534657241aa03a961e8b14",
      "filename": "guava/src/com/google/common/collect/Multimap.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/google/guava/blob/65b963bd5333df6ea04884d62afc548364223c13/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FMultimap.java",
      "raw_url": "https://github.com/google/guava/raw/65b963bd5333df6ea04884d62afc548364223c13/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FMultimap.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FMultimap.java?ref=65b963bd5333df6ea04884d62afc548364223c13",
      "patch": "@@ -68,9 +68,9 @@\n  * ... produces output such as: <pre>   {@code\n  *\n  *   Zachary: [Taylor]\n- *   John: [Adams, Adams, Tyler, Kennedy]\n+ *   John: [Adams, Adams, Tyler, Kennedy]  // Remember, Quincy!\n  *   George: [Washington, Bush, Bush]\n- *   Grover: [Cleveland]\n+ *   Grover: [Cleveland, Cleveland]        // Two, non-consecutive terms, rep'ing NJ!\n  *   ...}</pre>\n  *\n  * <h3>Views</h3>",
      "parent_sha": "d6b1760bff541fb6935748ffcdb10c00ead2b4b0"
    }
  },
  {
    "oid": "b55bf940bd46534b441d5729d6fdd732c8cdfbc2",
    "message": "clarify verbage regarding the cleanup of entries with reclaimed keys/values (Issue 841)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26627817",
    "date": "2012-01-06T14:11:07Z",
    "url": "https://github.com/google/guava/commit/b55bf940bd46534b441d5729d6fdd732c8cdfbc2",
    "details": {
      "sha": "8eef200a38e3646438d4e6ac647ee60016216198",
      "filename": "guava/src/com/google/common/cache/CacheBuilder.java",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/google/guava/blob/b55bf940bd46534b441d5729d6fdd732c8cdfbc2/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcache%2FCacheBuilder.java",
      "raw_url": "https://github.com/google/guava/raw/b55bf940bd46534b441d5729d6fdd732c8cdfbc2/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcache%2FCacheBuilder.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcache%2FCacheBuilder.java?ref=b55bf940bd46534b441d5729d6fdd732c8cdfbc2",
      "patch": "@@ -107,9 +107,9 @@\n  *\n  * <p>If {@linkplain #weakKeys weakKeys}, {@linkplain #weakValues weakValues}, or\n  * {@linkplain #softValues softValues} are requested, it is possible for a key or value present in\n- * the cache to be reclaimed by the garbage collector. Reclaimed entries may be removed from the\n- * cache on each cache modification, on occasional cache accesses, or on calls to\n- * {@link Cache#cleanUp}. Reclaimed entries may be counted in {@link Cache#size}, but will never be\n+ * the cache to be reclaimed by the garbage collector. Entries with reclaimed keys or values may be\n+ * removed from the cache on each cache modification, on occasional cache accesses, or on calls to\n+ * {@link Cache#cleanUp}; such entries may be counted in {@link Cache#size}, but will never be\n  * visible to read or write operations.\n  *\n  * <p>Certain cache configurations will result in the accrual of periodic maintenance tasks which\n@@ -452,8 +452,8 @@ CacheBuilder<K, V> strongKeys() {\n    * comparison to determine equality of keys.\n    *\n    * <p>Entries with keys that have been garbage collected may be counted in {@link Cache#size},\n-   * but will never be visible to read or write operations. Entries with garbage collected keys are\n-   * cleaned up as part of the routine maintenance described in the class javadoc.\n+   * but will never be visible to read or write operations; such entries are cleaned up as part of\n+   * the routine maintenance described in the class javadoc.\n    *\n    * @throws IllegalStateException if the key strength was already set\n    */\n@@ -492,8 +492,8 @@ CacheBuilder<K, V> strongValues() {\n    * comparison to determine equality of values.\n    *\n    * <p>Entries with values that have been garbage collected may be counted in {@link Cache#size},\n-   * but will never be visible to read or write operations. Entries with garbage collected keys are\n-   * cleaned up as part of the routine maintenance described in the class javadoc.\n+   * but will never be visible to read or write operations; such entries are cleaned up as part of\n+   * the routine maintenance described in the class javadoc.\n    *\n    * @throws IllegalStateException if the value strength was already set\n    */\n@@ -516,8 +516,8 @@ public CacheBuilder<K, V> weakValues() {\n    * comparison to determine equality of values.\n    *\n    * <p>Entries with values that have been garbage collected may be counted in {@link Cache#size},\n-   * but will never be visible to read or write operations. Entries with garbage collected values\n-   * are cleaned up as part of the routine maintenance described in the class javadoc.\n+   * but will never be visible to read or write operations; such entries are cleaned up as part of\n+   * the routine maintenance described in the class javadoc.\n    *\n    * @throws IllegalStateException if the value strength was already set\n    */",
      "parent_sha": "23aa7906fea8756ffe401e1fac6c999cce16934d"
    }
  },
  {
    "oid": "2929b111d677c539cb03a4f22b95cbc8944ce3fa",
    "message": "Update the suffix patterns.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=70001122",
    "date": "2014-06-30T02:41:31Z",
    "url": "https://github.com/google/guava/commit/2929b111d677c539cb03a4f22b95cbc8944ce3fa",
    "details": {
      "sha": "58d99f4fbb499001fa5c7e76cd363faa65b0d1ad",
      "filename": "guava/src/com/google/thirdparty/publicsuffix/PublicSuffixPatterns.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/google/guava/blob/2929b111d677c539cb03a4f22b95cbc8944ce3fa/guava%2Fsrc%2Fcom%2Fgoogle%2Fthirdparty%2Fpublicsuffix%2FPublicSuffixPatterns.java",
      "raw_url": "https://github.com/google/guava/raw/2929b111d677c539cb03a4f22b95cbc8944ce3fa/guava%2Fsrc%2Fcom%2Fgoogle%2Fthirdparty%2Fpublicsuffix%2FPublicSuffixPatterns.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fthirdparty%2Fpublicsuffix%2FPublicSuffixPatterns.java?ref=2929b111d677c539cb03a4f22b95cbc8944ce3fa",
      "patch": "@@ -42,15 +42,15 @@ private PublicSuffixPatterns() {}\n \n   /** If a hostname is contained as a key in this map, it is a public suffix. */\n   public static final ImmutableMap<String, PublicSuffixType> EXACT =\n-      TrieParser.parseTrie(\"a&027qjf--nx?12oa08--nx?2eyh3la2ckx--nx?32wqq1--nx?6&1f4a3abgm--nx?lbgw--nx??883xnn--nx?b!.&asnu?gro?ibnu?lim?moc?oc?sr?ten?ude?vog??ihsot??c!.&b&a?m?n??c&b?g?q??ep?fn?k&s?y??ln?no?oc,sn?t&n?opsgolb,?un??irfa?s??d&neit?om?tl??g!oy??hskihs?i&dem?sa??jnin?k&dov?usto??l!.&c,gro?moc?ofni?rep?t&en?ni??ude?vog??lenisiuc??m!.&ca?gro?oc?sserp?ten?vog??ahokoy?e00sf7vqn--nx??n!.&ac?cc?eman?gro?ibom?loohcs?moc?ni?o&c?fni?rp??r&d?o??s&u?w??vt?xm???p!.&bog?ca?d&em?ls??g&ni?ro??mo&c?n??oba?ten?ude??g7hyabgm--nx?ra!.&461e?6pi?iru?nru?rdda-ni?siri????q!.&eman?gro?hcs?lim?moc?ten?ude?vog???r&emac?f4a3abgm--nx?n??s!.&bup?dem?gro?hcs?moc?ten?ude?vog??ac??u!.&a&cinniv?emirc?i&hzhziropaz?stynniv??s&edo?sedo??tlay?vatlop??bs?cinimod?d&argovorik?o!roghzu???e&hzhziropaz?nvir?t??fi?g&l?ro??hk?i&stvinrehc?ykstynlemhk??k&c?m?s&nagul?t&enod?ul??v&iknarf-onavi?orteporp&end?ind?????l&iponret?opotsa&bes?ves??p??m&k?oc?s?yrk??n&c?d?i?osrehk?v?ylov??o&c?nvor??p&d?p?z??r&c?imotihz?k?ymotyhz??sk?t&en?l?z??ude?v&c?e&alokin?ik??i&alokym?hinrehc?krahk?vl?yk??k?l?o&g!inrehc??krahk??r??y&ikstinlemhk?mus?s&akrehc?sakrehc?tvonrehc???zu???v?waniko?x&a?iacal??yogan??b&125qhx--nx?3jca1d--nx?4&6&1rfz--nx?qif--nx??96rzc--nx??a&0dc4xbgm--nx?c?her??b!.&erots?gro?moc?o&c?fni??ten?ude?v&og?t??zib???cs?dhesa08--nx?g?l!.&gro?moc?ten?ude?vog???s!.&gro?moc?ten?ude?vog???u&lc?p???c&1&1q54--nx?hbgw--nx??2e9c2czf--nx?4byj9q--nx?9jr&b&2h--nx?54--nx?9s--nx??ceg--nx??a!.&gro?lim?moc?ten?ude?vog??3a09--nx!.&ca1o--nx?gva1c--nx?h&ca1o--nx?za09--nx??ta1d--nx?ua08--nx????bf76a0c7ylqbgm--nx?c!.&gnipparcs,revres-emag,s&otohpym,seccaptf,??0atf7b45--nx?a1l--nx??e!.&21k?bog?dem?gro?lim?moc?nif?o&fni?rp??ten?ude?vog??beuq??i&n&agro?ilc??tic??l!.&gro?moc?oc?ten?ude?vog???m!.&mt?ossa???n!.ossa??s!.&gro?moc?ten?ude?vog???t!w??v!.&gro?lim?moc?ten?ude?vog???yn??d&2urzc--nx?3&1wrpk--nx?c9jrcpf--nx??5xq55--nx?75yrpk--nx?a!.mon?d??b2babgm--nx?c!.vog?g9a2g2b0ae0chclc--nx??e&r!k??sopxe?timil?w??g?i!.&ased?bew?ca?hcs?lim?o&c?g??ro?ten?ym?zib??b?rdam??liub?m?n&al!raas??ob?uf??orp?r&actiderc?k??s!.&dem?gro?moc?ofni?ten?ude?v&og?t????t!.topsgolb,?za5cbgn--nx??e&17a1hbbgm--nx?2a6a1b6b1i--nx?418txh--nx?707b0e3--nx?a!.&ca?gro?hcs?lim?oc?ten?vog???b!.&ca?topsgolb,?utuoy??c&a&lp?ps??na&d?nif??rofria??d!.&edaregtmueart,keegnietsi,moc,n&esgnutiel,iemtsi,?topsgolb,zten&mitbel,sadtretteuf,??art?iug?on--nx??e!.&bil?dem?eif?gro?irp?kiir?moc?pia?ude?vog??ffoc?gg?rged??fil?g!.&gro?lim?moc?t&en?vp??ude?vog??a&gtrom?yov??elloc?nahcxe??i!.&topsgolb,vog???j!.&gro?oc?ten???kib?l&a&dmrif?srof??uhcs??m!.&ca?gro?oc?sti?ten?ude?v&irp?og???an!.&reh.togrof,sih.togrof,??em?w??n!goloc?oz?ruoblem??om?p!.&bog?gro?lim?mo&c?n??ten?ude??irg??r!.&mo&c?n??ossa?topsgolb,?a&c?wtfos??eh?u&sni?tinruf???s!.&a?b!ibnal?rofmok??c!a??d!b?n&arb?ubroflanummok???e?f?g!ro??h!f??i!trap??k!shf??l?m!oc,t??n!mygskurbrutan??o?p!p??r?s!serp??t!opsgolb,?u?vhf?w?x!uvmok??y?z??ael?ier?roh?uoh??t&atse?isbew?ov?utitsni??u&lb?qituob??v!.&21e?b&ew?og??ce&r?t??erots?gro?lim?m&oc?rif??o&c?fni??stra?t&en?ni??ude?vog??itca??xul??f&7vqn--nx?a!.&gro?moc?ten?ude?vog???b!.vog?wa9bgm--nx??c!.topsgolb,a1p--nx??g?n!.&bew?cer?erots?m&oc?rif??ofni?re&hto?p??stra?ten???p!.&gro?moc?ude???t!w??w??g&2&4wq55--nx?8zrf6--nx??3&44sd3--nx?91w6j--nx??455ses--nx?69vqhr--nx?78a4d5a4prebgm--nx?a!.&gro?mo&c?n??oc?ten???b!.&0?1?2?3?4?5?6?7?8?9?a?b?c?d?e?f?g?h?i?j?k?l?m?n?o?p?q?r?s?t?u?v?w?x?y?z???c!za9a0cbgm--nx??e!.&eman?gro?ics?lim?moc?nue?ten?ude?vog???g!.&gro?oc?ten???k!.&gro?lim?moc?ten?ude?vog???m!.&drp?gro?lim?m&o&c?n??t??ude?vog???n!.&eman?gro?hcs?ibom?lim?moc?ten?ude?vog??aw?i!bmulp?ddew?h&sif?tolc??kooc?n&aelc?iart??re&enigne?tac??t&ad?ekram?hgil?lusnoc?ov?soh???o?u&rehcisrev?smas???r&o!.&az,d&ab-yrev-si,e&sufnocsim,vas-si,?nuof-si,oog-yrev-si,?e&a,cin-yrev-si,las-4-ffuts,m&-morf,agevres,ohruoyslles,?nozdop,rehwongniogyldlob,t&adidnac-a-si,is&-ybboh,golb,???fehc-a-si,golbymdaer,keeg-a&-si,si,?live-yrev-si,naf&s&citlec-a-si,niurb-a-si,tap-a-si,?xos-a-si,?ojodsnd,p&ifles,ohbew,tfe&moh,vres,??resu-xunil-a-si,s&aila&nyd,snd,?bbevres,nd&emoh,golb,mood,nyd:.&emoh,og,?,rvd,tog,?sa-skcik,u,?t&e&ews-yrev-si,nretni&ehtfodne,fodne,??hgink-a-si,s&ixetn&od,seod,?o&h-emag,l-si,???x&inuemoh,unilemoh,???ub&mah?oj???s!.&gro?moc?rep?t&en?opsgolb,?ude?vog???t?u!.&c&a?s??en?gro?moc?o&c?g??ro???v!a1c--nx??wsa08--nx??h&0ee5a3ld2ckx--nx?4wc3o--nx?8a7maabgm--nx?b!.&gro?moc?ten?ude?vog???c!.topsgolb,ir?r&aeserrecnac?uhc??taw??d0sbgp--nx?g!.&gro?lim?moc?ude?vog???m!a1j--nx??p!.&gro?i?lim?moc?ogn?ten?ude?vog???s!.&gro?lim?moc?ten?vog??a&c?nom??if??t!.&ca?im?ni?o&c?g??ro?ten???vo?zb??i&3tupk--nx?7a0oi--nx?a!.&ffo?gro?moc?ten??1p--nx??b!.&gro?moc?oc?ro?ude??om??c!.&ayb-tropora--nx?ca?d&e?m??esserp?gro?moc?o&c?g?ssa??ro?t&en?ni?ropor\u00e9a??ude?vuog???f!.&dnala?iki,topsgolb,??g!.&d&om?tl??gro?moc?ude?vog???hcra?k!.&gro?moc?ofni?ten?ude?vog?zib??b4gc--nx?iw?uzus??l?maim?n&im?re??s!ed??tinifni?v!.&21k?gro?moc?oc?ten???wik?xarp??j&8da1tabbgl--nx?b!.&ossa?topsgolb,uaerrab?vuog???d?s?t!.&bew?c&a?in??eman?gro?lim?moc?o&c?g??t&en?ni?set??ude?vog?zib????k&c&a&bdeef?lb??ilc?reme??d!.topsgolb,?h!.&a&4ya0cu--nx?5wqmg--nx??b3qa0do--nx?d&2&2svcw--nx?3rvcl--nx??5xq55--nx??g&a0nt--nx?la0do--nx?ro??i&050qmg--nx?7a0oi--nx?xa0km--nx??m&1qtxm--nx?oc??npqic--nx?t&en?opsgolb,?ude?v&di?og?ta0cu--nx??xva0fz--nx?\u4eba&\u4e2a?\u500b?\u7b87??\u53f8\u516c?\u5e9c\u653f?\u7d61&\u7db2?\u7f51??\u7e54&\u7d44?\u7ec4??\u7ec7&\u7d44?\u7ec4??\u7edc&\u7db2?\u7f51??\u80b2&\u654e?\u6559???n??l!.&bew?cos?dtl?gro?hcs?letoh?moc?nssa?ogn?prg?t&en?ni??ude?vog???m!.&eman?fni?gro?moc?ten?ude?vog???n&abreve?i!l?p???p!.&b&ew?og??gro?kog?m&af?oc??nog?ofni?pog?sog?ten?ude?vog?zib???row!ten??s!.topsgolb,?t?u!.&c&a?lp??dtl?e&cilop?m??gro?oc!.topsgolb,?shn?ten?vog????l&a!.&gro?lim?moc?ten?ude?vog??bolg?g?ic&nanif?os??noitanretni?t&i&gid?pac??ned???c!.&bog?lim?oc?vog???e&geips?nnahc?t?vart??f8f&pbgo--nx?tbgm--nx??g?i&.oc.topsgolb,a&f?m&e?g???m??lihmailliw?m!.&esserp?gro?moc?ten?ude?v&og?uog????n!.&oc,topsgolb,vb??o??o&btuf?oc?rit?u??p!.&a&cin&diws?gel??d&g?ortso?urawon??i&dem?mraw?nydg??k&elo&guld?rtso??slopolam?tsu?ytsyrut??l&ip?o&kzs?w&-awolats?oksnok????nimg?rog&-ai&bab?nelej??j?z??syn?tsaim?w&a&l&eib?i?o??zsraw??onamil??z&eiwolaib?mol???c&e&iw&alselob?o&nsos?rtso???le&im?zrogz???orw?p?ri??d&em?ia?ragrats??e&c&i&lrog?w&ilg?o&hc&arats?orp??klop?tak????ldeis?yzreibok??i&csjuoniws?ksromop?saldop??l&ahdop?opo??n&apokaz?ob&6?m???tatselaer?z&romop?swozam???g&alble?ezrbo&lok?nrat??ro??hcyzrblaw?i&csomohcurein?grat?klawus??k&e&rut?walcolw??inbyr?le?o&nas?tsylaib??rob&el?lam??s&als?jazel?nadg?puls?rowezrp???l&colw?e&r?vart??i&am?m???m&o&c?dar?n?tyb??s&g?iruot??t!a???n&a&gaz?nzop??i&bul?cezczs?molow?nok?zd&eb?obeiws???uleiw?y&tzslo?z&rtek?seic????o&c,fni?gn?k&celo?zdolk??lkan?n&leim?pek?t&uk?yzczs??z&copo?eing?rowaj???rga?tua?w&ejarg?ogarm???p&elks?klwwortso?ohs??romophcaz?sos?t&aiwop?en!esu??opos?ra?sezc??ude?v&irp?og!.&ap?gu?mu?o&p?s?wtsorats??rs?w&opu?u?????w&a&l&corw?sizdow??w??o&golg?k&ark?ul?zsurp??r&az?gew??tsugua?z&coks?sezr????xes?y&buzsak?d&azczseib?ikseb??hcyt?n&jes?lod-zreimizak??pal?r&ogt?uzam??walup?zutrak??z&am-awar?c&aprak?iwol?zsogdyb??dalezc?ib?s&i&lak?p??uklo?????rf?s!.&gro?moc?ten?ude?vog???t!.vog??x3b689qq6--nx??m&00tsb3--nx?1qtxm--nx?a!cbew?rirhs??b!.&gro?moc?ten?ude?vog???c!.&moc?oc?ten?vog???d!.&gro?moc?ten?ude?vog???f!i??g?h?i!.&ca?gro?moc?oc!.&clp?dtl???t&en?t??vt??k?rbg4--nx??k!.&drp?e&rianiretev?sserp??gro?lim?m&o&c?n??t??nicedem?ossa?pooc?s&eriaton?neicamrahp?sa??ude?v&og?uog????o!.&dem?gro?m&oc?uesum??o&c?rp??ten?ude?vog??c!.&a&c&-morf,irfa,?g&-morf,oy-sehcaet,?i-morf,m&-morf,all&-a-si,amai,??p&-morf,c-a-si,?s,v-morf,w-morf,z,?b&ew-sndnyd,g,?c&d-morf,n-morf,q,s-morf,?d&e&ifitrec-&si,ton-si,?llortnocduolc,?i-morf,m-morf,n&-morf,abeht-htiw-si,?s-morf,uolc&hr,smetsystuo,??e&ciffo-sndnyd,d:-morf,ocelgoog,,erf-sndnyd,i&hcet-a-si,p-sekil,?lgooghtiw,m&ina-otni-si,oh-&sndnyd,ta-sndnyd,??n&-morf,og-si,?rihcec,s:run-a-si,,t&i&nuarepo,s-ybboh,?omer-sndnyd,?v&als-elcibuc-a-si,itavresnoc-a-si,??fehc-a-si,golb&-sndnyd,sihtsetirw,?h&n-morf,o-morf,?i&h-morf,kiw-sndnyd,m-morf,r-morf,w-morf,?jn-morf,k&a-morf,cils-si,eeg-a&-si,si,?latsnaebcitsale,o-morf,row-&sndnyd,ta-sndnyd,?u,?l&a&-morf,rebil-a-si,?f-morf,i&-morf,am-sndnyd,?ru-&elpmis,taen,?ssukoreh,?mn-morf,n&a&cilbuper-a-si,f&-sllub-a-si,racsan-a-si,?i&cisum-a-si,ratrebil-a-si,??c,eerg-a-si,i-morf,m-morf,o&isam-al-a-tse,rtap-el-tse,siam-al-a-tse,?pj,t-morf,?o&c,jodsnd,m-morf,n,r,?p&i&-sndnyd,fles,ymteg,?pa&esaberif,lortnocduolc,ukoreh,??r&a:-morf,tskcor-a-si,,b,e&enigne-na-si,ggolb-a-si,h&caet-a-si,pargotohp-a-si,?krow-drah-a-si,n&gised-a-si,ia&rtlanosrep-a-si,tretne-na-si,??p&acsdnal-a-si,eekkoob-a-si,?retac-a-si,tn&iap-a-si,uh-a-si,?vres-sndnyd,y&alp-a-si,wal-a-si,??g,k,o&-morf,sivdalaicnanif-a-si,tc&a-na-si,od-a-si,??p-morf,u&as-o-nyd,eugolb-nom-tse,??s&aila&nyd,snd,?bbevres,cip-sndnyd,e&lahw-eht-sevas,mag-otni-si,?ipaelgoog,k-morf,m-morf,n&d&golb,mood,tog,?ootrac-otni-si,?r&ac-otni-si,etsohmaerd,?se&l-rof-slles,rtca-na-si,?u,wanozama.&1-&etupmoc:.&1-z,2-z,?,ts&ae&-&as-&3s,etisbew-3s,?su:-etisbew-3s,,?ht&ron-pa-&3s,etisbew-3s,?uos-pa-&3s,etisbew-3s,???ew-&su-&3s,etisbew-3s,?ue-&3s,etisbew-3s,?vog-su-&3s,etisbew-3s,spif-3s,????2-ts&aehtuos-pa-&3s,etisbew-3s,?ew-su-&3s,etisbew-3s,??3s,ble,etupmoc:.&1-ts&ae&-as,ht&ron-pa,uos-pa,??ew-&su,ue,vog-su,??2-ts&aehtuos-pa,ew-su,??,??t&arcomed-a-si,c-morf,eel&-si,rebu-si,?m-morf,n&atnuocca-na-si,e&duts-a-si,r-ot-ecaps,tnocresubuhtig,??ops&edoc,golb,ppa,?s&i&hcrana-&a-si,na-si,?laicos-a-si,pareht-a-si,tra-na-si,xetn&od,seod,??ohsfn,?u&-morf,nyekcoh-asi,?v-morf,?u&-rof-slles,e,h,oynahtretramssi,r:ug-a-si,,?v&n-morf,w-morf,?x&em,inuemoh,obaniateb,t-morf,unilemoh,?y&dnacsekil,k-morf,u,w-morf,????p?raf?s?t!.&gro?lim?mo&c?n??oc?ten?ude?vog???uesum!.&a&92chg-seacinumocelet-e-soierroc--nx?atnav?c&i&aduj?rfatsae??rollam??d&anac?enomaledasac?irolf??e&raaihpledalihp?srednu??g&hannavas?oonattahc??hamo?i&auhsu?bmuloc!hsitirb??dem?groeg?hpledalihp?l&artsua?etalif??n&igriv?rofilac??ssur?tsonod??ksa&la?rben??l&lojal?q-snl--nx?uossim!trof???m&a&bala?nap??enic?o&m?r???n&a&cirema?idni??edasap?ilorachtuos?olecrab??r&abrabatnas?ezzivs??su?t&nalta?osennim??zalp??c&dnotgnihsaw?ebeuq?i&depolcycne?ficap?hpargonaeco?lbup?sum?t&carporihc?lec?naltadim??vu??yn??d&a&dhgab?etsmraf?m?orliar??i&rdam?ulegnedleeb??leif?n&a!l&gne?nif?ragyduj?t&ocs?rop??yram???u&brofsdgybmeh?osdnaegami???r&augria?ofxo???e&c&a&l&ap?phtrib??ps??n&a&lubma?tsiser??e&fedlatsaoc?gilletni?ics!foyrotsih????pein?rof??d&nukneklov?revasem??e&rt?tsurt??f&atnas?ildliw??g&a&lliv?tireh!lanoitan???dirbmac?rog??i&cnum?nollaw??koorbrehs?l&ab?bib?cycrotom?i&ssim?txet??oks?tsac??m&affollah?it!iram??utsoc??n&golos?ilno?recul??r&a&uqs?waled!foetats???i&hs&acnal?kroy?pmahwen??otsih??omitlab?ut&an?cetihcra?inruf?luc!irga?su???vuol??s&abatad?iacnarf?sius?uoh!lum???t&a&locohc?rak?ts!e!yrtnuoc!su?????imesoy?tevroc??u&qihpargonaeco?velleb??vit&caretni?omotua???f&iuj?ohgrub??g&n&i&dliub?ginerevmuesum?kiv?lahw?nim?peekemit?vil??ulmmastsnuk??orf?r&eb&merun?nr&ats?eun???u&b&ierf?le?m&ah?uan??ram?s&mailliw!lainoloc??naitsirhc?retepts??zlas??ob&irf?mexul?????h&atu?c&raeser?sirotsih?uot??g&ea1h--nx?rubsttip??si&tirb?wej??t&laeh?ro&n?wtrof??uo&mnom?y????i&d6glbhbd9--nx?iawah?k&nisleh?s??lad!rodavlas??sissa?tannicnic??k&c&nivleeg?olc!-dna-hctaw?dnahctaw???fj?inebis?l&is?ofron??na&rfenna?t??oorbnarc?r&am&ned?reiets??oy!wen????l&a&ci&dem?golo&eahcra?meg?oz??natob?rotsih??ertnom?iromem?noita&cude?n??oc?rutluc?trop?utriv?van??e&nurb?s&ab?surb??utriv??i&artnogero?sarb??l&a&besab?hsnoegrus??e&hs?rdnevle??i&b?m!dniw????o&bup?ohcs?tsirb???m&a&dretsma?ets?h&netlehc?rud???ct?elas!urej??l&if?ohkcots?u??raf?silanruoj?u&esumyrotsihlarutan?ira&tenalp?uqa??terobra???n&a&c!irema!evitan???gihcim?i&dni?tpyge??mfoelsi?wehctaksas??e&d&alokohcs?ews?rag!cinatob?lacinatob?s&nerdlihc?u????gahnepoc?hcneum?laftsew?ppahcsnetewruutan?r&dlihc?ednaalv?hu!dnutamieh???sseig??gised!dn&atra?utsnuk???h&ab!nesie??ojts??i&lreb?tsua??l&eok?ocnil??n&ob?urbneohcs??o&dnol?gero?i&s&iv&dnadnuos?elet??nam??t&a&c&inummoc?ude!tra???dnuof?erc?i&cossa?va??kinummokelet?nissassa?r&belectsevrah?oproc?tsulli??silivic?t&nalp?s??vres&erp?noclatnemnorivne??zilivic??c&elloc?if-ecneics??ibihxe???ri?s&dnah?imaj?reffej?sral??t&erbepac?nilc?sob???r&e&b?dom?tsew?uab?zul??obredap??vahnebeok?wot??o&2a6v-seacinumoc--nx?ablib?c&edtra?ixemwen?sicnarfnas??elap?g&a&cihc?to??eidnas??i&cadnuf?diserp?ratno??llecitnom?mitiram?nirot?r&htna?ienajedoir???pohskrow?qari?r&aw!dloc?livic??dd?e&b&ma?yc??irrac?llimsiwel?naksiznarf?papswen?t&aeht?exe?nec!ecneics?larutluc?muesum?tra??s&ehc&nam?or??neum??upmoc???ia!nepo??obal?u&asonid?obal?takirak???s&a&l&g?l&ad?eh???xet??di&k?pardnarg??e&cneics!larutan??dnal?hcsi&deuj?rotsih!nizidem?rutan??selhcs??itinamuh?l&aw?egnasol?l&e&rutansecneics?xurb??iasrev???r&e&em?ugif??tsac??suohcirotsih?u&en?q&adac?itna!nacirema?su????\u00f5\u00e7acinumoc!elet-e-soierroc???gnirpsmlap?htab?i&lopanaidni?rap?uoltnias?xa??l&essurb?lod??mraeriflanoitan?n&a&blats?l??erdlihc?oi&snam?tacinummoc!elet-dna-stsop???\u00e4l??re&dnalf?lttes?mraf?nim?tnececneics??s&alg?erp??t&farc!dnastra??nalp?olip?ra!e&nif?vitaroced!su???su?xuaeb???u&b!muloc??cric???t&agilltrop?cejorp?dats?e&esum?kramnaidni??iorted?ne&m&elttes?norivne?piuqemraf??vnoc??oped?r&a!drib?enif?gttuts?hsiwej?kcor?n&acirema?ootrac??tamsa?yraropmetnoc??op&aes?snart?wen??ufknarf??s&a&cdaorb?octsae??ewhtuos?ilayol?nuk?r&ohnemled?uhlyram??urt???u&a&bgreb?etalpodaroloc??rmyc??w&ocsom?rn??x&esse?ineohp?nam?tas??y&a&bekaepasehc?w&etag?liar???camrahp?doc?e&hsub?l&ekreb?l&av!eniwydnarb??ort???n&dys?om??rrus?s&nreug?rejwen???golo&e&ahcra?g??motne?nh&cet?te??oz?po&rhtna?t??roh??hpargotohp?l&etalihp?imaf??m&edaca?onortsa??n&atob?yn??ps?r&a&ropmetnoc?tilim??e&diorbme?llag!tra??vocsid??lewej?nosameerf?otsih!dnaecneics?ecneics?gnivil!su??la&col?rutan??retupmoc?su??tsudnidnaecneics??spelipe?t&eicos!lacirotsih??i&nummoc?srevinu??nuoc???z&arg?iewhcs?nil?ojadab?urcatnas??\u043c\u043e\u043a\u0438?\u05dd\u05d9\u05dc\u05e9\u05d5\u05e8\u05d9????n&a!.&gro?moc?ten?ude??brud?cilbuper?f?s&ood?sin??varac??c!.&ah?bh?c&a?s??d&5xq55--nx?g?s??eh?g&la0do--nx?ro??h&a?q?s??i&7a0oi--nx?h??j&b?f?t?x?z??kh?l&h?im?j??m&n?oc??n&h?l?s?y??om?qc?s&g?j?wanozama.etupmoc:.1-htron-nc,,?ten?ude?vog?wt?x&g?j?n?s??z&g?x??\u53f8\u516c?\u7d61\u7db2?\u7edc\u7f51???e&erg?fuak?hctik?i&libommi?w??r!ednaalv??sier??g!.&ca?gro?moc?ten?ude?vog???h!.&bog?gro?lim?moc?ten?ude???i!.&c&a?in??dni?gro?lim?mrif?neg?oc?ser?t&en?opsgolb,?ude?vog??lreb??k!.&gro?ten?ude?vog???leok?m!.&cyn,gro?ude?vog???o&dnol?i&siv!orue??t&a&cude?dnuof??cu&a?rtsnoc????mrom?pq?siam??p!.&gro?oc?ten?ude?vog???re&c?yab??s!.&gro?moc?osrep?tra?ude?v&inu?uog????t!.&dni?esnefed?gro?ltni?m&oc!nim??siruot??n&erut?if??o&fni?srep??sn&e?r??t&an?en!irga?ude??rnr??unr?vog???ustad?v!.&ca?eman?gro?htlaeh?moc?o&fni?rp??t&en?ni??ude?vog?zib???wot!epac???o&76i4orfy--nx?a!.&bp?de?go?oc?ti?vg???b!.&bog?gro?lim?moc?t&en?ni??ude?v&og?t???olg??c!.&bew?cer?gro?lim?m&o&c?n??rif??ofni?stra?t&en?ni??ude?vog???d!.&b&ew?og??dls?gro?lim?moc?t&en?ra??ude?vog??agoba??e&c?dor??f!ni!.&e&gdelwonk-fo-l&errab,lerrab,?ht-skorg,rom-rof-ereh,?llatiswonk,p&ifles,ohbew,?ruo-rof,s&iht-skorg,ndnyd,????gn!am??hwsohw?i!.&buhtig,din,moc??b?dua?r?syhp??j!.&eman?gro?hcs?lim?moc?ten?ude?vog???m!.&gro?moc?ten?ude?vog??g?il??n!.&a&0&b-ekhgnark--nx?c-iehsrgev--nx?g-lksedlig--nx?k-negnanvk--nx??1&p-nedragy--nx?q-&asierrs--nx?grebsnt--nx?lado-rs--nx?n&egnidl--nx?orf-rs--nx??regnayh--nx?ssofenh--nx??r-datsgrt--nx?s-ladrjts--nx?v-y&senner--nx?vrejks--nx???3g-datsobegh--nx?4&5-&dnaleprj--nx?goksnerl--nx?tednalyh--nx??6-neladnjm--nx?s-&antouvachb--nx?impouvtalm--nx??y-&agrjnevvad--nx?ikhvlaraeb--nx???7k-antouvacchb--nx?8&k-rekie-erv--nx?l-ladrua-rs--nx?m-darehsdrk--nx??a!.sg??bct-eimeuvejsemn--nx?d&do?iisevvad?lov?narts?uas??f&1-&l--nx?s--nx??2-h--nx??g&10aq0-ineve--nx?av?ev?lot?r&ajn&evvad?u??\u00e1jn&evvad?u????h?iz-lf--nx?j&ddadab?sel??k&el?hoj&sarak?\u0161\u00e1r\u00e1k??iiv&ag&na&el?g??\u014b&ael?\u00e1g???ran???l&f?lahrevo?o&ms?s??sennev?t-&ilm--nx?tom--nx??u&-edr--nx?s??\u00f8ms??muar?n&0-tsr--nx?2-dob--nx?5-&asir--nx?tals--nx??a&r!-i-om?f?t??t??douvsatvid?kiv?m&os?\u00f8s??n&od?\u00f8d??ra?sen?t&aouvatheig?ouv&a&c&ch&ab?\u00e1b??h&ab?\u00e1b???n??i&ag?\u00e1g??sa&mo?ttvid??\u00e1n???z-rey--nx?\u00e6r&f?t???o&p-&ladr--nx?sens--nx??q-nagv--nx?r-asns--nx?s-kjks--nx?v-murb--nx?w-&anr&f--nx?t--nx??ublk--nx???ppol?q&0-t&baol--nx?soum--nx?veib--nx??x-&ipphl--nx?r&embh--nx?imph--nx???y-tinks--nx??r&f-atsr--nx?g-&an&ms--nx?nd--nx??e&drf--nx?ngs--nx??murs--nx?netl--nx?olmb--nx?sorr--nx??h-&a&lms--nx?yrf--nx??emjt--nx??i&-&lboh--nx?rsir--nx?y&d&ar--nx?na--nx??ksa--nx?lem--nx?r&ul--nx?yd--nx????stu??j-&drav--nx?rolf--nx?sdav--nx??kua?l-&drojf--nx?lares--nx??m-tlohr--nx?n-esans--nx?olf?p-sdnil--nx?s-ladrl--nx?tih?v-rvsyt--nx??s&a&ns?ons??i&ar?er&dron?r&os?\u00f8s???\u00e1r??la&g?h??mor!t??sir?uf?\u00e5ns??t&koulo&nka?\u014bk\u00e1??la?p-raddjb--nx?r-agrjnu--nx?s&aefr&ammah?\u00e1mm\u00e1h??orf?r&o?\u00f8???u-vreiks--nx??u&h-dnusel--nx?i-&drojfk--nx?vleslm--nx??j-ekerom--nx?k-rekrem--nx?u-&dnalr--nx?goksr--nx?sensk--nx??v-nekyr--nx?w-&k&abrd--nx?ivjg--nx??oryso--nx??y-y&dnas--nx?mrak--nx?n&art--nx?nif--nx??reva--nx??z-smort--nx??v!.sg?ledatskork?reiks??wh-antouvn--nx?x&9-dlofts--nx.aoq-relv--nx?d-nmaherk--nx?f-dnalnks--nx?h-neltloh--nx?i-drgeppo--nx?j-gve&gnal--nx?lreb--nx??m-negnilr--nx?n-drojfvk--nx??y&7-ujdaehal--nx?8-antouvig--nx?b-&dlofrs--nx?goksmr--nx?kivryr--nx?retslj--nx??e-nejsom--nx?f-y&krajb--nx?re&dni--nx?tso--nx??stivk--nx??g-regark--nx?orf?\u00f8rf??z9-drojfstb--nx??b&25-akiivagael--nx?53ay7-olousech--nx?a&iy-gv--nx?le-tl&b--nx?s--nx??n0-ydr--nx??c&0-dnal-erdns--nx?z-netot-erts--nx??g&g-regnarav-rs--nx?o-nejssendnas--nx??ju-erdils-ertsy--nx?nj-dnalh-goksrua--nx?q&q-ladsmor-go-erm--nx.&ari-yreh--nx?ednas??s-neslahsladrjts--nx???ca&4s-atsaefrmmh--nx?8m-dnusynnrb--nx?il-tl--nx?le-slg--nx?n5-rdib--nx?op-drgl--nx?uw-ynnrb--nx??d&a&qx-tggrv--nx?reh!nnivk?sd&ork?\u00f8rk??uas??ts&e&bi?kkar?llyh?nnan??g&ort?\u00f8rt??k&alf?irderf??levev?mirg?obeg&ah?\u00e6h??r&ah?ejg????barm-jdddb--nx?ie!rah?s&etivk?ladman???lof&r&os?\u00f8s??ts&ev.ednas?o.relav?\u00f8.rel\u00e5v???n&a&l&-erd&n&os?\u00f8s??ron??adroh.so?dron.&a&g5-b--nx?ri-yreh--nx??ob?y&oreh?\u00f8reh??\u00f8b??e&m!lejh??pr&oj?\u00f8j??vi??gyb?n&aks?\u00e5ks??o&h-goksrua?rf??r&o?ua?\u00f8??tros?\u00f8h-goksrua??rts!e&devt?lab?mloh???s&ellil?naitsirk?rof???u&l!os??s!d&im?lejt??e&guah?l&a?\u00e5???kkoh?lavk?naitsirk?r&af?eg&e?ie???tef?y&onnorb?\u00f8nn\u00f8rb?????r&a&blavs!.sg??g&eppo?la???o&j&f&a!dniv?k?vk??die?e&dnas?kkelf??llins?r&iel?ots??s&lab?t&ab?\u00e5b??yt??\u00e5!k??\u00e6vk??les??ts??\u00e5g&eppo?l\u00e5???ureksub.sen??e&ayb-yrettn--nx?d&ar?lom?r&of?\u00f8f??\u00e5r??g&gyr?nats??i&meuv&ejsem&aan?\u00e5\u00e5n??sekaal??rjea??j&d&ef?oks??les??k&er&aom?\u00e5om??hgna&ark?\u00e5rk??iregnir?kot!s??s&ig?uaf???l&bmab?kyb?l&av?ehtats??oh??m&it?ojt?\u00f8jt??n&arg?g&os?\u00f8s??meh?reil?te?ummok?yrb??r&dils-erts&ev?y&o?\u00f8???ua?vod??sa&ans?\u00e5ns??t&robraa?spaav??urg??f&62ats-ugsrop--nx?a&10-ujvrekkhr--nx?7k-tajjrv-attm--nx??o!.sg?h??s!.sg??v!.sg???g&5aly-yr&n--nx?v--nx??a&llor?ve&gnal?lreb???n&av!snellu??org??oks&die?m&or?\u00f8r??ner&ol?\u00f8l??r&o?\u00f8???r&eb!adnar?edyps?s&die?elf?gnok?n&ot?\u00f8t????obspras??uahatsla?\u00e5ve&gnal?lreb???h&0alu-ysm--nx?7&4ay8-akiivagg--nx?5ay7-atkoulok--nx??a!.sg???i&e&hsr&agev?\u00e5gev??rf??k&h&avlaraeb?\u00e1vlaraeb??s??lm&a?\u00e5??mpouvtal&am?\u00e1m??pph&al?\u00e1l??rrounaddleid?ssaneve?\u0161\u0161\u00e1neve??j&0aoq-ysgv--nx?94bawh-akhojrk--nx??k&a&b&ord?\u00f8rd??jks?lleis??iv!aklejps?l&am?evs?u??mag?nel?ojg?r&a&l?n??epok?iel?y&or?\u00f8r???s&ah?kel?om??\u00f8jg??kabene?ojsarak?ram&deh.&aoq-relv--nx?rel&av?\u00e5v??so??e&let.&ag5-b--nx?ob?\u00f8b??ra???\u00e5jks??l&a!d&anrus?d&numurb?ron??e&gnard?nte?s&meh?sin??ttin??g&is?nyl??kro?l&em?l&ejfttah?of??u&ag-ertdim?s???n&am?era?gos?i&b?nroh?r??kos?nus?oj??o-&dron?r&os?\u00f8s???ppo?r&a!l?nram??e&gne?l?v??is?o&jts?ts??u&a-&dron?r&os?\u00f8s???h??\u00e5?\u00e6l?\u00f8jts??s&e&jg?nivk?ryf??kav?mor-go-er&om.&ednas?yoreh??\u00f8m.&ednas?y\u00f8reh???uag??t&las?rajh?suan??v&l&a?e-rots??u-go-eron??yt??ksedlig?res&a?\u00e5???bib&eklof?seklyf??es!dah??h!.sg??i&m?syrt??l&ejf?ov&etsua?gnit?ksa?sdie???n!.sg??o!.sg?boh?g?h??r!.sg??\u00e5!ksedlig??\u00f8boh??m&a&rah?vk??f!.sg??h!.sg??i&e&h&dnort?rtsua?ssej??rkrejb??ksa??ol?t!.sg??u&dom?esum?r&ab?drejg?evle?os?uh?\u00e6b?\u00f8s??ttals???n&a&g&av?okssman?\u00e5v??jlis?or?r&g?rev???e&d&do&sen?ton??lah?r&agy&o?\u00f8??ojfsam???g&iets?n&a&l&as?lab??n&avk?\u00e6vk??t&arg?ddosen??v&al?essov???i&d&ol?\u00f8l??l&ar?\u00e6r???yl??reb??iks?k&srot?y&or?\u00f8r???l&a&d&gnos?n&er?ojm?\u00f8jm??om??tloh??ug?\u00e5tloh??mmard?ojs&om?sendnas??ppolg?s&lahsladr&ojts?\u00f8jts??o??t&o&l?t-erts&ev?o?\u00f8???roh?\u00f8l??vly&kkys?nav??yam-naj!.sg??\u00f8js&om?sendnas???g&orf?ujb??i&dnaort?vnarg??kob?ladendua?maherk&a?\u00e5??n&it?urgsrop??orf-&dron?r&os?\u00f8s???r&aieb?evats??sfev?uaks?yrts??o&6axi-ygvtsev--nx?c,d&ob?rav??ievs?kssouf?l&m&ob?\u00f8b??ous&adna?ech&ac?\u00e1\u010d???so!.sg???msdeks?niekotuak?r&egark?olf?y&oso?\u00f8so???s&dav?mort???p&ed?p&akdron?elk???r&a&d&dj&ab?\u00e1b??iab??jtif?luag?mah?vsyt??e&gn&a&k&iel?ro??merb?n&at?mas??rav-r&os?\u00f8s??srop?talf?v&ats?el??y&oh?\u00f8h???ivsgnok??il?jkniets?k&a&nvej?rem?s&gnir?nellu???ie-er&den?v&o?\u00f8???ram?sa?\u00e5rem??la&jf?vh??m&b&ah?\u00e1h??mahellil??nnul?ts&l&oj?\u00f8j??ul??y&o?\u00f8???imp&ah?\u00e1h??m!.sg??osir?t!.sg??\u00e1di\u00e1b?\u00e6vsyt?\u00f8sir??s&adnil?en&dnas?e&dga?k&ri&b?k??som??ve??me&h?jg??nroh-go-ejve?s&a?ednil?k&o?\u00f8??of?yt?\u00e5??tsev??gv?hf?igaval?o&r&or?\u00f8r??sman??so&fen&oh?\u00f8h??m?v??uh&lem?sreka.sen??\u00e5!dnil???t&a&baol?g&aov?grav??jjr&av-attam?\u00e1v-att\u00e1m??l&a&b?s??\u00e1s??soum?ts?v&eib?our???e&dnaly&oh?\u00f8h??f?s&nyt?rokomsdeks?sen??vtpiks??in&aks?\u00e1ks??loh&ar?\u00e5r??n!.sg??o&m&a?\u00e5??psgolb,?s!.sg?efremmah?or?\u00f8r??terdi?\u00e1&baol?ggr\u00e1v?l\u00e1&b?s??soum?veib???u&b!.sg?alk?e&dna?gnir?nner??les?\u00e6lk??dra&b?eb??g&nasrop?vi?\u014b\u00e1srop??j&daehal&a?\u00e1??jedub?v&arekkhar?\u00e1rekkh\u00e1r???ksiouf?n&diaegadvoug?taed???v&irp?lesl&am?\u00e5m???y&b&essen?nart?sebel?tsev??o&d&ar?na!s??or??gavtsev?k&rajb?sa??lem?mrak?n&art?n&if?orb???r&a&mah?n?v??e&dni?t&so?ton??va??ul?yd??s&am?enner?gav?lrak?tivk??vrejks??\u00f8&d&ar?na!s??\u00f8r??g\u00e5vtsev?k&rajb?sa??lem?mrak?n&art?n&if?\u00f8rb???r&e&dni?t&so?t\u00f8n??va??ul?yd?\u00e6&n?v???s&enner?g\u00e5v?tivk?\u00e5m??vrejks???\u00e1&sl\u00e1g?tl\u00e1?vreiks??\u00e5&g\u00e5v?h?jdd\u00e5d\u00e5b?lf??\u00f8&d&ob?rav??r&egark?olf??s&dav?mort????u??o&b?f?ttat??r!.&cer?erots?gro?m&o&c?n??rif?t??ofni?stra?t&n?opsgolb,?www??ea!.&a&ac?cgd?idem??bulc!orea??ci&ffartria?taborea??e&c&alptekram?n&a&l&lievrus-ria?ubma??netniam?rusni??erefnoc???gnahcxe?mordorea?ni&gne?lria?zagam??rawtfos??gni&d&art?ilg!arap?gnah???l&dnahdnuorg?ledom??noollab?retac?sael?t&lusnoc?uhcarap??vidyks??hcraeser?ixat?l&anruoj?euf?icnuoc?ortnoc!-ciffart-ria???n&gised?oi&nu?t&a&cifitrec?ercer?gi&tsevni-tnedicca?van??i&cossa!-regnessap??valivic??redef??cudorp?neverp-tnedicca????ograc?p&ihsnoipmahc?uorg!gnikrow???r&e&dart?enigne?korb?niart?trahc??o&htua?tacude???s&citsigol?e&civres?r??krow?serp!xe??tnega??t&farcr&ia?otor??hgi&erf?l&f?orcim???liubemoh?n&atlusnoc?e&duts?m&esuma?n&iatretne?revog??piuqe????olip?ropria?si&lanruoj?tneics???w&erc?ohs??y&cnegreme?dobper?tefas????p!.&a&ca?pc??dem?gne?r&ab?uj??wal????s!.&gro?moc?ten???t!.&gro?lim?moc?ten?ude?vog??o&hp?v??tol??ykot??p&a&ehc?s??g!.&gro?ibom?moc?ossa?ten?ude???iz?j!.&a&bihc!.&a&bihciakoy?don?ma&him?ye&ragan?tat???r&a&bom?gan?hihci??u&agedos?kas?ustak???s&os?ufomihs??t&amihcay?iran??w&a&g&im&anah?o??omak??kihci?zustum??ihsak??y&agamak?imonihci???e&akas?nagot??i&azni?esohc?h&asa?s&abanuf?ohc???ka&to?zok??musi?orihs?r&akihabihsokoy?o&dim?tak??ukujuk??usihs??nano&hc?yk??o&d&iakustoy?ustam??hsonhot?k&a&rihs?t??iba??nihsaran?sobimanim?tas&arihsimao?imot??uhc?yihcay??u&kujno?s&ayaru?t&imik?tuf???zarasik????g&as!.&a&gas?m&a&tamah?yik??ihsak??rat?t&a&gatik?hatik??ira!ihsin????e&kaira?nimimak??i&akneg?g&aruyk?o??h&c&amo?uo??siorihs??kaznak?modukuf?ra&gonihsoy?mi???nezih?u&k&at?ohuok??s&ot?tarak?????ihs!.&a&kok?m&a&hagan?yirom??ihsakat??rabiam?wagoton??e&miharot?nokih??houyr?i&azaihsin?esok?kustakat?moihsagih??na&mihcahimo?nok??o&hsia?mag?t&asoyot?ok?tir???us&ay?t&asuk?o??????k&aso!.&a&d&awihsik?eki??k&a&noyot?s&akaayahihc?oihsagih???oadat?uziak??m&ayas!akaso??odak??r&a&bustam?wihsak??ediijuf??t&akarih?i&k?us???wag&ayen?odoyihsagih???e&son?tawanojihs??honim?i&akas?h&cugirom?s&ayabadnot?i&a&kat?t??n??oyimusihsagih???k&a&rabi?sim??ustakat??muzi?r&ijat?otamuk???nan&ak?n&ah?es???o&ay?n&a&ganihcawak?simuzi?tak??eba?ikibah?oyot??t&anim?iad?omamihs??uhc??ust&oimuzi?tes????ou&kuf!.&a&d&amay?eos??g&no?ok?usak??hiku?k&awayim?uzii??ma&kan?y&asih?im???rawak?t&a&gon?ka&h?num?t???umo??wa&g&a&kan?nay?t??ias??ko!rih???y&ihsa?usak???e&m&ay?uruk??taruk?us??i&a&nohs?raihcat??goruk?h&cukuf?s&a&gih?hukuy??in???k&a&gako?muzim??iust?o?ustani??m&anim?otihsoynihs?u??r&ogo?ugasas??usu??ne&siek?zu&b?kihc???o&gukihc?h&ak?ot?ukihc??j&ono?ukihc??kayim?nihsukihc?to?uhc??u&fiazad?gnihs?stoyot????zihs!.&a&bmetog?d&amihs?eijuf?ihsoy?omihs??kouzihs?mihsim?ra&biah?honikam??tawi?wa&g&ekak?ukik??kijuf??yimonijuf??i&a&ra?sok??hcamirom?juf?kaz&eamo?ustam??ma&nnak?ta??nukonuzi?orukuf??nohenawak?o&nosus?ti??u&stamamah?z&a&mun?wak??i!ay?i&hs&agih?in??manim??mihs????????m&a&tias!.&a&d&ihsoy?ot?usah??k&a&dih?sa??o&arihs?s???m&a&tias?y&as?o&rom?tah??ustamihsagih???i&hsagurust?jawak??uri??ni?wa&g&e&ko?man??ikot?o??k&ara?i&hsoy?mak???ru?zorokot??y&a&g&amuk?ihsok?otah??kuf??imo??ziin??e&bakusak?ogawak?sogo?ttas?zokoy??i&baraw?h&cugawak?s&oyim?ubustam???iroy?k&ato?ihs?u&k?stawi???m&akoyr?i&hsoy?juf??uziimak???naznar?o&dakas?ihsay?jnoh?n&a&go?nim??imijuf?nah?oy??r&ihsayim?otagan??t&asim!ak??igus?omatik??zak??u&bihcihc!ihsagih??sonuok?ynah????y&ak&aw!.&a&d&ira?notimak??kadih?ma&h&arihs?im??y&a&kaw?tik??oduk???ru&ustakihcan?y??sauy?wa&g&a&dira?zok??orih??konik??yok?zok??e&banat?dawi??i&garustak?jiat?mani??naniak?o&bog?nimik?t&asim?omihs&ah?uk????ugnihs???o!.&a&jos?koasak?m&ay&ako?ust??ihsayah??r&abi?ukawaihsin??wi&aka?nam???e&gakay?kaw??i&gan?h&cu&kasa?otes??sahakat??k&asim?ihsaruk??miin??n&anemuk?ezib??o&hsotas?jnihs?n&amat?imagak??ohs?uhcibik?????ot!.&a&damay?got?koakat?may&etat?ot??nahoj?riat?waki&inakan?reman???eb&ayo?oruk??i&h&asa?ciimak?sahanuf??kuzanu?m&an&i?ot??ih???nezuyn?otnan?u&hcuf?stimukuf?z&imi?ou???????ihs&o&gak!.&a&m&ayuok?ihsogak??si?yonak??e&banawak?n&at&akan?imanim??uka??tomoonihsin??i&adnesamustas?k&azarukam?oih??m&ama?uzi??usuy??nesi?o&knik?os?tomustam??uzimurat???rih!.&a&ka&n?s??m&ayukuf?i&hsorihihsagih?j&ate?imakikaso????r&a&bohs?h&ekat?im???es??tiak?wiad??e&kato?ruk??i&h&ci&akustah?mono?nihs??s&inares?oyim???manimasa?uk??negokikesnij?o&gnoh?namuk??uhcuf????uk&ot!.&a&bihci?mi&hsu&kot?stamok??m??wagakan??egihsustam?i&gum?h&coganas?soyim??kijaw?m&anim?uzia??ukihsihs??nan&a?iak??o&nati?turan????uf!.&a&batuf?m&a&to?y&enak?irok???ihs&im?ukuf??os?uko??r&aboihsatik?uganat??ta&katik?mawak?rih??w&a&g&akus?emas?uy??k&a&mat?rihs?sa??ihsi??nah??ohs???e&gnabuzia?iman?ta&d?tii???i&adnab?enet?hs&agih?iimagak??k&a&wi?zimuzi??ubay??minuk?r&ook?ustamay???nihsiat?o&g&etomo?ihsin?nan?omihs??no!duruf?rih??rihsawani?ta&may?simuzia???u&rahim?stamakawuzia?zia&ihsin?nay???????nug!.&a&bawak?doyihc?k&anna?oi&hsoy?juf?mot???m&ayakat?ustagaihsagih??n&ihsatak?nak??r&ahonagan?nak?o?u&kati?mamat???t&amun?inomihs?o??w&akubihs?iem?ohs???i&hsa&beam?yabetat??kas&akat?esi??m&akanim?uzio??ogamust?rodim??o&jonakan?n&eu?oyikust??tnihs??u&komnan?stasuk?yrik?????ran!.&a&bihsak?d&akatotamay?u!o???guraki?m&ay&atik&imak?omihs??irokotamay??oki??ra&hihsak?n??wa&geson?knet???e&kayim?ozamay?sog?ustim??i&a&rukas?wak??garustak?h&ciomihs?sinawak??jo?ka&mnak?toruk??makawak?nos?r&net?otakat?ugeh???o&d&na?oyo??gnas?jnihs?nihsoy!ihsagih??tomarawat?yrok????t&ag&amay!.&a&dihsio?k&atarihs?ourust??may&a&kan?rum??enak?onimak??rukho?ta&ga&may?nuf??hakat?kas??wa&g&ekas?orumam??ki&hsin?m??z&anabo?enoy?ot???zuy??e&agas?bonamay?dii?nihsagih?o??i&a&gan?nohs??h&asa?sinawak??nugo??o&dnet?jnihs?ynan??ukohak???iin!.&a&ga?k&ium?oagan??munou!imanim??t&a&bihs?giin??ioy??w&a&gioti?kikes?zuy??irak??yijo??e&kustim?mabust??i&aniat?hcamakot?kaz&awihsak?omuzi??m&a&gat?karum??o???n&anust?esog??o&das?ihcot?jnas?k&ihay?oym??mak?naga?ries??u&ories?steoj?????i&ka!.&a&go?k&asok?oimak??t&ago!rihcah??ika!atik???w&aki?oyk???e&mojog?natim?suranihsagih?t&ado?okoy???i&hsoyirom?magatak?naokimak??nesiad?o&hakin?jnoh!iruy??nuzak?rihson?tasi&juf?m??yjnoh??u&kobmes?oppah????o!.&a&dakatognub?m&asah?ihsemih??su?t&ekat?i&h?o????e&onokok?ustimak??i&jih?k&asinuk?ias?usu??mukust??onoognub?u&fuy?juk?ppeb?suk??????wa&ga&k!.&a&mihsoan?rihotok?waga&kihsagih?ya???emaguram?i&j&nonak?ustnez??kunas?monihcu??o&hsonot?nnam?yotim??u&st&amakat?odat??zatu????nak!.&a&dustam?kus&okoy?tarih??maz?nibe?r&a&gihsaimanim?h&esi?imagas??wa&do?guy???u&im?kamak???tikamay?wa&k&ia?oyik?umas??sijuf??yimonin??e&nokah?saya??i&akan?esiak?gusta?hsuz?kasagihc?o?ukust??o&nadah?sio?tamay?????kihsi!.&a&danihcu?gak?kihs?mijaw?t&abust?ikawak??wazanak??i&gurust?hcionon?mon?ukah??nasukah?o&anan?ton!akan???u&kohak?stamok?z&imana?us?????niko!.&a&han?m&arat?ijemuk?uru??n&e&dak?zi??no??ra&hihsin?rih??wa&kihsi?niko??yehi?zonig??e&osaru?seay??i&hsagih?jomihs?k&a&gihsi?not??ihsakot??m&a&ginuk?kihsug?maz??igo?otekat??nuga!noy???n&a&moti?timoy?wonig??i&jikan?k???o&gan?jnan?tiad&atik?imanim???u&botom?kusug&akan!atik??imot??rab&anoy?eah???????ca?d&a?e??e&im!.&a&bot?k&asustam?uzus??m&a&him?y&emak?im???ihs??nawuk?wi&em?k???e&bani?ogawak?si!imanim???i&arataw?gusim?h&asa?ciakkoy??k&a&mat?sosik?t??iat??raban??o&dat?hik?n&amuk?ihseru?o&du?mok????ust???mihe!.&a&m&a&h&ataway?iin??yustam??ij&awu?imak???taki!man???ebot?i&anoh?kasam?rabami??n&ania?egokamuk?oot??o&jias?kihcu?nustam?uhcukokihs?yi!es???u&kohik?zo????n!amihs!.&a&d&amah?ho?usam??kustay?m&a?ihsoni&hsin?ko???wakih??e&namihs?ustam??i&g&aka?usay??konikak?mikih??nannu?o&mu&kay?zi!ihsagih?uko???nawust?tasim??u&stog?yamat?????tawi!.&a&bahay?d&amay?on??koirom?t&a&honat?katnezukir??imus??w&as&ijuf?uzim??ihs???e&hon&i&hci?n??uk??tawi??i&a&duf?murak?wak??h&custo?si&amak?ukuzihs???j&oboj?uk??k&a&m&anah?uzuk??sagenak??esonihci??m&akatik?uzia&rih?wi????o&kayim?no&rih?t??tanufo??uhso????gl?i&g&ayim!.&a&dukak?m&a&goihs?kihs??ihsustam!ihsagih??un&awi?nesek???r&awago?iho??ta&bihs?rum??w&a&gano?kuruf??iat??y&imot?ukaw???e&mot?nimes??i&hsiorihs?ka&monihsi?s&awak?o???mak?r&ataw?o&muram?tan????o&az?jagat?t&asim?omamay???u&fir?k&irnasimanim?uhsakihcihs?????ihcot!.&a&g&a&h?kihsa??ust??kom?m&ay&o?usarak??unak??r&a&boihsusan?watho??iho?ukas??t&akihsin?iay??wa&konimak?zenakat??y&imonustu?oihs???e&iiju?kustomihs?nufawi??i&akihci?g&etom?ihcot?on???o&k&ihsam?kin??nas?sioruk?tab??u&bim?san?????h&c&ia!.&a&dnah?m&a!h&akat?im??yuni??ihs&ibot?ust???r&a&hat?tihs??ik?u&ihsagih?kawi???t&ihc?o&k?yot???wa&koyot?zani??yi&monihci?rak???e&inak?k&aoyot?usa??manokot?noyot??i&a&gusak?kot?sia??eot?h&asairawo?cugo?s&ahoyot?oyim???k&a&mok?zako??ihssi??motay?rogamag??n&an&ikeh?ok??ihssin??o&got?ihsin?jna?rihsnihs?suf?tes??u&bo?raho?s&oyik?takihs??yrihc?zah????ok!.&a&dusay?kadih?mayotom?r&ah&im?usuy??umakan??sot!ihsin??wa&g&atik?odoyin??k&as?o????i&esieg?hco!k??jamu?k&a!sus??usto??ma&gak?k??rahan??o&mukus?n&i?ust!ihsagih???torum?yot!o???u&koknan?zimihsasot????ugamay!.&a&m&ayukot?ihso??toyot??e&bu?subat??i&gah?kesonomihs?nukawi?rakih??nanuhs?otagan?u&ba?foh?otim?stamaduk?uy?????sanamay!.&a&dihsoyijuf?mayabat?r&ahoneu?ustakihsin??w&a&k&ayah?ijuf??suran??ohs???egusok?i&ak?h&cimakan?s&anamay?od???k&asarin?u&feuf?sto????o&k&akanamay?ihcugawakijuf??nihso?t&asimawakihci?ukoh??uhc??spla-imanim?u&b&nan?onim??fok?hsok?rust?????ka&rabi!.&a&bukust?gok?kan!ihcatih??m&a&sak?timo?wi??ihsak?ustomihs??ni?r&a&hihcu?way??u&agimusak?ihcust???t&ag&amay?eman??oihcatih??w&ag&arukas?o??os??yi&moihcatih?rom???e&bomot?dirot?not?tadomihs??i&a&k&as?ot??rao??esukihc?gahakat?h&asa?catih??k&a&rabi?saguyr??ihsani?uy??ma?rukustamat??o&dnab?giad?him?kati?rihsijuf?soj?t&asorihs?im??yihcay??u&fius?kihsu?simak????sagan!.&a&m&abo?ihsust??natawak?r&abamihs?u&mo?ustam???wijihc?yahasi??i&akias?hies?k&asagan?i??masah??neznu?o&besas?darih?t&eso?og!imaknihs????ust&igot?onihcuk?uf????zayim!.&a&biihs?guyh?k&oebon?ustorom??mihsuk?r&emihsin?uatik??ta&katik?mim??wag&atik?odak??ya??e&banakat?sakog??i&hsayabok?kaza&kat?yim??m&animawak?ot&inuk?nihs????nanihcin?o&j&ik?onokayim??n&ibe?ust??tias??urahakat????ro&moa!.&a&dawot?turust?wasim??e&hon&ihc&ah?ihs??nas?og?ukor??sario??i&anarih?ganayati?hsioruk?jehon?kasorih?makihsah?nawo?r&amodakan?omoa???o&gnihs?kkat??u&ragust?stum????ttot!.&a&r&ahawak?uotok??sa&kaw?sim???egok?irottot?nanihcin?o&ganoy?nih?tanimiakas??u&bnan?z&ay?ihc??????ukuf!.&a&deki?gurust?ma&bo?h&akat?im??yustak??sakaw??eabas?i&akas?ho?jiehie?ukuf??nezihce!imanim??ono????o&c?diakkoh!.&a&deki?gakihset?hcebihs?k&adih?u&fib?narihs???m&ayiruk?hot?ihs&orihatik?ukuf??oras?usta??r&ib&a!ka??o?uruf??ozo?u&gakihsagih?oyot???sakim?ta&gikust?mun??w&a&ga&k&an?uf??nus!imak???k&aru?i&h&asa?sagih??kat?mak??omihs?um??zimawi??ine?oyk??yot??e&a&mustam?nan??b&a&kihs?yak??o&noroh?to???ian?k&ihsam?ufoto??nakami?ppoko!ihsin??sotihc?tad!okah??uonikat??i&a&bib?mokamot?n&a&k&kaw?oroh??wi??eomak?ihsatu?okik?usta&moruk?sakan????eib?h&c&ioy?u&bmek?irihs???s&ase?ekka?oknar?uesom???jufirihsir?k&amamihs?i&at?n???m&atik?otoyot??oa&kihs?rihs??r&a&hs?kihsi?mot??ihs&aba?ir??otarib???n&a&hctuk?rorum?se?tokahs??uber??o&kayot?m&ire?ukay??naruf!ima&k?nim???orih?r&ih&ibo?suk??o&bah?h&i&b?hsimak??sa??pnan?yan??umen??t&asoyik?eko?ukoh???u&bassa?kotnihs?m&assaw?uo??pp&akiin?en&ioto?nuk??ip??rato?s&akat?t&eb&e?i&a?hs!a??robon??m&e?o&m?takan???no&h?tamah??o&mik?s?t??u&kir?ppihc?st???onihsnihs?ufuras??uaru??yru!koh??zimihs!ok?????g!oyh!.&a&bmat?dnas?gusak?k&at?o&oyot?y??uzarakat??m&ayasas?irah??wa&g&ani?okak??k&i&hci?mak??oy???yi&hsa?monihsin???i&asak?hs&aka?i&at?nawak???j&awa!imanim??emih??k&a&goa?s&agama?ukuf??wihsin??i&hsog?m???mati?oia?rogimak??n&annas?esnonihs??o&gasa!kat??ka?n&ikat?o?ustat??rihsay?sihs?tomus?yas??u&bay?gnihs?????nagan!.&a&bukah?d&a&w?yim??e&ki?u??ii??k&a&s&ay?uki??zus??ihsoo?ousay??m&ay&akat?ii??i&hsukufosik?jii??ukihc??n&i!hsetat??uzii??r&ah?ugot??saim?t&agamay?oyim??w&a&g&a&kan?n??o??kustam?ziurak??onim!imanim??u&koo?s!omihs????ya&ko?rih???e&akas?nagamok?subo??i&gakat?h&asa?c&a!mo!nanihs???uonamay??sukagot??k&a&kas?mimanim?to??ia&atik?imanim??oa?uzihcom??m&akawak?ijuf?o!t???r&ato?ijoihs?omakat???n&ana?esnoawazon??o&hukas?n&a&gan?kan??i&hc?muza??ustat??romok?si&gan?k??tomustam??u&k&as?ohukihc??stamega????to&mamuk!.&a&gamay?mihsak?rahihsin?s&ok?ukama!imak???tamanim??enufim?i&h&cukik?soyotih??k&ihsam?u??nugo!imanim??romakat??o&ara?rihsustay?sa?t&amay?om&amuk?us??u!koyg???yohc??u&sagan?zo????yk!.&a&bmatoyk?k&ies?oemak?uzaw??mayi&h&cukuf?sagih??muk??nihsamay?rawatiju?t&away?ik???e&ba&nat!oyk??ya??di?ni??i&ju?kazamayo?manim??natnan?o&gnatoyk?kum?mak?rihsamayimanim?y&gakan?ka&koagan?s??oj???u&ruziam?z&ayim?ik??????ykot!.&a&d&i&hcam?mus??oyihc??k&atim?ihsustak??m&a&t!uko??yarumihsa&gih?sum???i&hs&agoa?ika?o!t??uzuok??ren???r&a&honih?wasago??iadok?umah??ssuf?t&ik?o??wa&g&anihs?ode??k&ara?ihcat???y&agates?ubihs???e&amok?donih?m&o?urukihsagih??soyik??i&enagok?gani?h&ca&da?tinuk??sabati??j&nubukok?oihcah??manigus??o&huzim?jihcah?n&akan?ih!sasum??urika??rugem?t&a&mayihsagih?nim??iat?ok??uhc?yknub??u&fohc?hcuf?kujnihs?????r&g?o??topsgolb,ufig!.&a&d&eki?ih??kimot?m&ayakat?ihsah??ne?raha&gi&kes?makak??sak??taga&may?tik??wa&g&ibi?ustakan??karihs!ihsagih????e&katim?uawak??i&gohakas?hc&apna?uonaw??k&ago?es?ot??m&anuzim?ijat??nak?urat??nanig?o&dog?jug?makonim?nim?roy?sihcih??u&fig?s&otom?t&amasak?oay????????k!.&art?gro?moc?per?ude?vog???m!ac??nd?o&g?hpih?oc?t??rahs?t?vsr??q&a?g?i!.&gro?lim?moc?ten?ude?vog???m?se??r&a!.&bog?gro?lim?moc!.topsgolb,?rut?t&en?ni??ude?vog??4d5a4prebgm--nx?b?los?t&at?suen???b!.&21g?b!mi??c&er?sp?te??d&em?mb?n&f?i??rt??f&gg?ni??g&el?l&s?z??n&c?e??ol&b?f?v??pp?ro??i&kiw?sp?te?xat??l&el?im?sq??m&a?da?f?ic?o&c!.topsgolb,?n???nce?o&ce?do?et?i&b?dar??rp?ta??p&m!e?t??ooc?se??qra?r&af?ga?oj?tn?ut??su&j?m??t&am?e&n?v??nc?o&f?n??ra?sf??ude?v&da?og?rs?t????c!.&as?ca?de?if?o&c?g??ro???e&e&b?nigne?rac??t&nec?upmoc??ywal??f!.&aterg?cidessa?drp?e&citsuj-reissiuh?rianiretev?sserp??i&cc?rgabmahc??m&o&c?n??t??n&eicamrahp?icedem??ossa?se&lbatpmoc-strepxe?riaton?tsitned-sneigrurihc?uova??t&acova?opsgolb,r&epxe-ertemoeg?op!orea????vuog??avc7ylqbgm--nx??g!.&gro?moc?t&en?opsgolb,?ude?vog???h!.&eman?mo&c?rf??zi??ur??i!.&a&61f4a3abgm--nx?rf4a3abgm--nx??ca?di?gro?hcs?oc?ten?vog?\u0646\u0627\u0631&\u064a\u0627?\u06cc\u0627???aper??k!.&c&a?s??e&n?p?r??gk?iggnoeyg?kub&gn&oeyg?uhc??noej??l&im?uoes??man&gn&oeyg?uhc??noej??n&as&lu?ub??o&e&hcni?jead??wgnag???o&c?g??ro?s&e?h?m??topsgolb,u&gead?j&ej?gnawg?????l!.&gro?moc?ten?ude?vog???m!.&topsgolb,vog???n!.&gro?moc?ofni?ten?ude?vog?zib???ot&ca?laer??p!.&alsi?ca?eman?forp?gro?moc?o&fni?rp??t&en?se??ude?vog?zib???s?t.cn.vog?ubad??s&8sqif--nx?9zqif--nx?a!.vog?birappnb?gev?lliv?mtsirhc??b!.&gro?moc?ten?ude?vog??oj??ci&hparg?p??d&l?nomaid?rac??e!.&bog?gro?mo&c!.topsgolb,?n??ude??civres?d&d2bgm--nx?oc??i&lppus?rtsudni?treporp??jaiv?l&aw?cycrotom?gnis??moh?ohs?picer?rut&cip?nev??si&rpretne?urc??taicossa?vig??g!nidloh??h5c822qif--nx?i!.&ekacpuc,gro?moc?t&en?ni??ude?vog??rap?targ??k&cor?hxda08--nx?row??l!.&gro?oc??a&ed?tner??essurb?oot??m!.&gro?moc?ten?ude?vog??etsys?ialc??n&a&gorf?ol??ia&grab?mod??oit&acav?cudorp?ulos???o&dnoc?geuj?t&ohp?ua???p!.&ces?gro?moc?olp?ten?ude?vog??i&hsralohcs?t???r!.&ca?gro?ni?oc?ude?vog??atiug?c?e&dliub?erac?ntrap??otcartnoc??s&alg?e&n&isub?tif??rp???t&h&cay?gilf??n&atnuocca?e&mtsevni?ve???rap??u!.&a&c!.&21k?bil?cc???g!.&21k?bil?cc???i!.&21k?bil?cc???l!.&21k?bil?cc???m!.&21k!.&hcorap?rthc?tvp???bil?cc???p!.&21k?bil?cc???si?v!.&21k?bil?cc???w!.&21k?bil?cc????c&d!.&21k?bil?cc???n!.&21k?bil?cc???s!.&21k?bil?cc????d&ef?i!.&21k?bil?cc???m!.&21k?bil?cc???n!.&21k?bil?cc???s!.&bil?cc????e&d!.&21k?bil?cc???las-4-&dnal,ffuts,?m!.&21k?bil?cc???n!.&21k?bil?cc????h&n!.&21k?bil?cc???o!.&21k?bil?cc????i&h!.&bil?cc???m!.&21k?bil?cc???nd?r!.&21k?bil?cc???v!.&21k?bil?cc???w!.&21k?bil?cc????jn!.&21k?bil?cc???k&a!.&21k?bil?cc???o!.&21k?bil?cc????l&a!.&21k?bil?cc???f!.&21k?bil?cc???i!.&21k?bil?cc????mn!.&21k?bil?cc???n&i!.&21k?bil?cc???m!.&21k?bil?cc???sn?t!.&21k?bil?cc????o&c!.&21k?bil?cc???m!.&21k?bil?cc????r&a!.&21k?bil?cc???o!.&21k?bil?cc???p!.&21k?bil?cc????s&a!.&21k?bil?cc???dik?k!.&21k?bil?cc???m!.&21k?bil?cc????t&c!.&21k?bil?cc???m!.&21k?bil?cc???u!.&21k?bil?cc???v!.&21k?bil?cc????ug!.&21k?bil?cc???v&n!.&21k?bil?cc???w!.cc???xt!.&21k?bil?cc???y&b-si,k!.&21k?bil?cc???n!.&21k?bil?cc???w!.&21k?bil?cc????za!.&21k?bil?cc????ah!uab??e??w!.&gro?moc?s&ndnyd,tepym,?ten?ude?vog??eiver??yot??t&0srzc--nx?a!.&ca?o&c!.topsgolb,?fni,?ro?v&g?irp,?zib,?c?e!s??rcomed??b!.&gro?moc?ten?ude?vog??gl??cerid?dimhcs?e!em?kram?n!.&a&l-morf,z,?bg,dnab-eht-ni,e&ht-no-eciffo,libom-eruza,mohtanyd,nozdop,rehurht,s,tis-repparcs,?fehc-a-si,k&eeg-a&-si,si,?u,?ni,o&c-morf,jodsnd,?p&i&emoh,fles,?j,mac-dnab-ta,o&-oidar-mah,hbew,?paduolc,tfe&moh,vres,??s&aila&nyd,snd,?bbevres,e&suohsyub,tisbeweruza,?ndgolb,sa-skcik,?t&enretnifodne,i-&ekorb,s&eod,lles,teg,??norfduolc,sixetnod,?uh,x&inuemoh,unilemoh,?y&ltsaf.&dorp.&a,labolg,?lss.&a,b,labolg,??n-morf,?za-morf,??v??fig?g!.&bog?dni?gro?lim?moc?ten?ude???h!.&dem?gro?l&er?op??m&oc?rif??o&fni?rp?s&rep?sa???po&hs?oc??t&en?luda?ra??ude?vuog???i!.&a&at?b?c!cul??dv?i&blo&-oipmet?oipmet??cserb?drabmol?g&gof?urep??l&gup?i&cis?me&-oigger?oigger???uig&-&aizenev&-iluirf?iluirf??ev&-iluirf?iluirf??v&-iluirf?iluirf???aizenev&-iluirf?iluirf??ev&-iluirf?iluirf??v&-iluirf?iluirf????n&a&brev?cul?pmac?tac??idras?obrac&-saiselgi?saiselgi??resi??otsip?r&b&alac!-oigger?oigger??mu??dna&-&attelrab-inart?inart-attelrab??attelrabinart?inartattelrab?ssela??epmi?ugil??tnelav&-obiv?obiv??vap?z&e&nev?ps&-al?al???irog???l&iuqa!l??leib??m&or?rap??n!acsot?e&dom?is?sec&-ilrof?ilrof???g&amor&-ailime?ailime??edras?olob??i&ssem?tal??ne!var??o&cna?merc?rev?vas???oneg?p?r!a&csep?rr&ac&-assam?assam??ef??von??etam?tsailgo!-lled?lled???s!ip?sam&-ararrac?ararrac??u&caris?gar???t!a&cilisab?recam??resac?soa!-&d&-&ellav?lav??ellav?lav??ellav??d&-&ellav?lav??ellav?lav??ellav??te&lrab&-&airdna-inart?inart-airdna??airdnainart?inartairdna??ssinatlac???udap?v!o&dap?neg?tnam???zn&airb&-a&lled-e-aznom?znom??a&lledeaznom?znom??eaznom??e&c&aip?iv??soc?top??om???b&c?m!u??v??c&f?is?l?m?p?r?v??d&p?u??e&c!cel?inev?nerolf??f?g!ida&-&a&-onitnert?onitnert??otla!-onitnert?onitnert???a&-onitnert?onitnert??otla!-onitnert?onitnert????hcram?l?m!or??n&idu?o&n&edrop?isorf??torc???p?r?s&erav?ilom??t!nomeip?s&eirt?oa!-eellav?eellav????v?znerif??g&a?b?f?il?o?p?r?up?vf??hc?i&b?c?dol?f?l!lecrev?opan?rof&-anesec?anesec???m?n&a&part?rt&-attelrab-airdna?attelrabairdna???imir?ret??p?r!a&b?ilgac?ssas???s!idnirb??t&ei&hc?r??sa??v??l&a!c??b?c?o&m?rit&-&d&eus&-onitnert?onitnert??us&-onitnert?onitnert???s&-onitnert?onitnert???d&eus!-onitnert?onitnert??us&-onitnert?onitnert???s&-onitnert?onitnert?????m&ac?f?i?ol?r??n&a!lim?slab??b?c?e!v?zob??irut?m!p??p?r?t??o&a!v??b!retiv??c!cel??enuc?g!ivor??i&dem&-onadipmac?onadipmac??pmet&-aiblo?aiblo??rdnos?zal??l?m!a&greb?ret??oc?re&f?lap???n!a&dipmac&-oidem?oidem??lim?tsiro?zlob??ecip&-ilocsa?ilocsa??i&bru&-orasep?orasep??lleva?rot?tnert??r&elas?ovil??ulleb??p?r!a&sep&-onibru?onibru??znatac??oun??s!ivert?sabopmac??t!arp?e&nev?ssorg??n&arat?e&girga?rt?veneb????zz&era?urba???p&a?s?t??qa?r&a!m?s??b!a??c?f?g?k?me?o?p?s?t?v??s&a&b?iselgi&-ainobrac?ainobrac???b?c?elpan?i?m?ot?s?t?v??t&a?b?c?l?m?nomdeip?o!psgolb,?p?v??u&de?l?n?p??v&a?og?p?s?t?v??y&drabmol?ellav&-atsoa?atsoa??licis?nacsut??z&al?b?c?p???derc??l!.vog??m!.&gro?moc?ten?ude???n&e&g?m&eganam?piuqe???i!.ue??uocsid??ocs?p!.&emon?gro?lbup?moc?t&en?ni?opsgolb,?ude?vog???r&epxe?op&er?pus???s!.&adaxiabme?e&motoas?picnirp?rots??gro?lim?moc?o&c?dalusnoc??ten?ude?vog??e&b?padub?r??i&rolf?tned??o&h?p???t!.&eman?gro?ibom?levart?m&oc?uesum??o&c?fni?r&ea?p???pooc?sboj?t&en?ni??ude?vog?zib???y?ztej??u&a!.&a&s?w??civ?d&i?lq??fnoc?gro?moc!.topsgolb,?nsa?ofni?sat?t&ca?en?n??ude!.&a&s?w??civ?dlq?sat?t&ca?n??wsn???vog!.&a&s?w??civ?dlq?sat???wsn?zo???c!.&fni?gro?moc?ten?ude?vog???de?e?h!.&0002?a&citore?idem?kitore??edszot?gro?ilus?letoh?m&alker?lif?t?urof??naltagni?o&c?ediv?fni?levynok?nisac??pohs?rarga?s&a&kal?zatu??emag?wen??t&lob?opsgolb,rops??virp?xe&s?zs??ytic?zsagoj??os??l?m!.&ca?gro?moc?oc?ro?ten?vog???n!.&eni&esrem,m,?tenkcahs,?em??r!.&a&dgolov?gulak?i&hsavuhc?kymlak?lerak?rikhsab?ssakahk?t&ayrub?rumdu?ukay??vodrom??k&dohkan?nidud?t&a&hcmak?yv??ingam?okuhc???l&o-rakhsoj?ut??mortsok?nalap?ramas?tihc?vut?yegyda?znep??bps?ca?d&arg&oglov?z??nr?orogleb??e&du-nalu?niram??g&bc?ersom?ineok?r&o?ub&-e?n&ero?iretakey?????hzenorov?i&a&natsuk?tla??mok?ram??k&ihclan?otsovidalv?s&l&aru-k?egnahkra?iron??m!o!t???n!a&mrum?yrb??eloms?i&baylehc?lahkas-onhzuy??odv??r&ayonsark?ib&isovon?mis??ogitayp?u&k?ma???t!epil?ukri??v&ehzi?o&rabahk?stbur?????l&a&kiab?ma&j?y???e&-iram?hc??im?o&kso?porvats?yro??valsoray??m&du?o&c?t??rep??n&a&buk?dagam?gruk?hkartsa?rzys?ts&egad?ratat??za&k?yr???emuyt?ilahkas?rv?ystirast??ovo&navi?remek??pp?r&aj?evt?hck?i&b?midalv??uma??s&itym?mk?sabzuk??t&en?ni?s&aeraf?et??ugrus??ude?v&hk?o&bmat?g?n!n??rik?taras??ts??wmc?ynzorg?z&akvakidalv?kn?ns?tp???myc?ug??s?v!.&gro?moc?ten?ude???ykuyr??v&b?c!.topsgolb,?ih?l!.&di?fnoc?gro?lim?moc?nsa?ten?ude?vog???m!.&eman?gro?lim?m&oc?uesum??o&fni?r&ea?p???pooc?t&en?ni??ude?vog?zib???o&g?m??s!.&bog?der?gro?moc?ude???t!.&bew-eht-no,naht-&esrow,retteb,?sndnyd,??uqhv--nx??w&a!.moc??b!.&gro?oc???c!.&gro?moc?ten?ude???en?g?m!.&ca?gro?m&oc?uesum??oc?pooc?t&en?ni??ude?vog?zib???o&csom?h??p!.&de?en?o&c?g??ro?ualeb???r!.&ca?lim?moc?oc?t&en?ni??ude?v&og?uog???n??t!.&a46oa0fz--nx?b&82wrzc--nx?ulc??emag?gro?lim?moc?t&en?opsgolb,?ude?v&di?og?ta0cu--nx??zibe?\u696d\u5546?\u7e54\u7d44?\u8def\u7db2????x&a!t??c!.&hta,vog???ednay?m!.&bog?gro?moc?t&en?opsgolb,?ude??g?ma2ibgy--nx??s!.vog??xx??y&4punu--nx?ad!i&loh?rfkcalb??ot??b!.&fo?lim?moc?vog???cnega?enrotta?g!.&moc?oc?ten??olonhcet??hpargotohp?k!.&gro?moc?ten?ude?vog???l!.&clp?d&em?i??gro?hcs?moc?ten?ude?vog??f?ppus??m!.&eman?gro?lim?moc?ten?ude?vog??edaca?ra??napmoc?os?p!.&gro?lim?moc?pooc?ten?ude?vog???r&e&grus?llag??otcerid?tnuoc?uxul??s!.&gro?lim?moc?ten?ude?vog???t&i&c?nummoc?srevinu??reporp??u!.&bug?gro?lim?moc?ten?ude???van?xes??z&a!.&eman?gro?lim?moc?o&fni?rp??pp?t&en?ni??ude?vog?zib???b!.&az,gro?moc?ten?ude?vog???c!.topsgolb,?d!.&gro?lop?moc?ossa?t&en?ra??ude?vog???ib!.&e&ht-rof,mos-rof,rom-rof,?p&ifles,ohbew,?retteb-rof,sndnyd,??k!.&gro?lim?moc?ten?ude?vog???n!.&asq-irom--nx?ca?gro?htlaeh?i&r&c?o&am?\u0101m???wi!k???keeg?l&im?oohcs??neg?oc!.topsgolb,?t&en?nemailrap?vog????s!.&ca?gro?oc???t!.&c&a?s??e&m?n??ibom?l&etoh?im??o&c?fni?g??ro?vt???u!.&gro?moc?oc?ten???yx?zub??\u0430\u0432\u043a\u0441\u043e\u043c?\u0431\u0440\u0441!.&\u0433\u0440\u043e?\u0434\u043e?\u043a\u0430?\u0440&\u0431\u043e?\u043f!\u0443?????\u0433\u0440\u043e?\u0437\u0430\u049b?\u0438\u0442\u0435\u0434?\u043d&\u0439\u0430\u043b\u043d\u043e?\u043e\u043c??\u0440\u043a\u0443?\u0441\u0443\u0440?\u0442\u0439\u0430\u0441?\u0444\u0440?\u0627\u064a&\u0631\u0648\u0633?\u0633\u064a\u0644\u0645??\u0628\u0631\u063a\u0645\u0644\u0627?\u0629&\u0643\u0628\u0634?\u064a&\u062f\u0648\u0639\u0633\u0644\u0627?\u0631\u0648\u0633??\u06cc\u062f\u0648\u0639\u0633\u0644\u0627??\u062a&\u0627\u0631\u0627\u0645\u0627?\u0631\u0627\u06be\u0628??\u0631&\u0626\u0627\u0632\u062c\u0644\u0627?\u0627\u0632\u0627\u0628?\u0635\u0645?\u0637\u0642??\u0633\u0646\u0648\u062a?\u0639\u0642\u0648\u0645?\u0646&\u0627&\u0631&\u064a\u0627?\u06cc\u0627??\u0645\u0639??\u062f\u0631\u0627\u0644\u0627?\u0645\u064a\u0644\u0627?\u064a\u0637\u0633\u0644\u0641??\u0647\u064a\u062f\u0648\u0639\u0633\u0644\u0627?\u06c3\u06cc\u062f\u0648\u0639\u0633\u0644\u0627?\u0924\u0930\u093e\u092d?\u0928\u0920\u0917\u0902\u0938?\u09a4\u09b0\u09be\u09ad?\u09be\u09b2\u0982\u09be\u09ac?\u0a24\u0a30\u0a3e\u0a2d?\u0aa4\u0ab0\u0abe\u0aad?\u0bbe\u0baf\u0bbf\u0ba4\u0bcd\u0ba8\u0b87?\u0bc8\u0b95\u0bcd\u0b99\u0bb2\u0b87?\u0bcd\u0bb0\u0bc2\u0baa\u0bcd\u0baa\u0b95\u0bcd\u0b99\u0bbf\u0b9a?\u0c4d\u0c24\u0c30\u0c3e\u0c2d?\u0dcf\u0d9a\u0d82\u0dbd?\u0e22\u0e17\u0e44?\u10d4\u10d2?\u306a\u3093\u307f?\u4e1a\u4f01?\u4e1c\u5e7f?\u4e50\u5a31?\u4f60\u7231\u6211?\u4fe1\u4e2d?\u52a1\u653f?\u52a8\u79fb?\u5366\u516b?\u53f8\u516c?\u56e2\u96c6?\u56fd\u4e2d?\u570b\u4e2d?\u5740\u7f51?\u5761\u52a0\u65b0?\u57ce\u5546?\u5c71\u4f5b?\u5e97&\u5546?\u7f51??\u5e9c\u653f?\u620f\u6e38?\u673a\u624b?\u6784\u673a!\u7ec7\u7ec4??\u6807\u5546?\u6e2f\u9999?\u6e7e\u53f0?\u7063&\u53f0?\u81fa??\u754c\u4e16?\u76ca\u516c?\u7ebf\u5728?\u7edc\u7f51?\u7f51\u6587\u4e2d?\uad6d\ud55c?\uc131\uc0bc??\");\n+      TrieParser.parseTrie(\"a&027qjf--nx?12oa08--nx?2eyh3la2ckx--nx?32wqq1--nx?6&1f4a3abgm--nx?lbgw--nx??883xnn--nx?b!.&asnu?gro?ibnu?lim?moc?oc?sr?ten?ude?vog??ihsot??c!.&b&a?m?n??c&b?g?q??ep?fn?k&s?y??ln?no?oc,sn?t&n?opsgolb,?un??irfa?s??d&neit?om?tl??g!oy??hskihs?i&dem?sa??jnin?k&dov?usto??l!.&c,gro?moc?ofni?rep?t&en?ni??ude?vog??lenisiuc??m!.&ca?gro?oc?sserp?ten?vog??ahokoy?e00sf7vqn--nx??n!.&ac?cc?eman?gro?ibom?loohcs?moc?ni?o&c?fni?rp??r&d?o??s&u?w??vt?xm???p!.&bog?ca?d&em?ls??g&ni?ro??mo&c?n??oba?ten?ude??g7hyabgm--nx?ra!.&461e?6pi?iru?nru?rdda-ni?siri????q!.&eman?gro?hcs?lim?moc?ten?ude?vog???r&emac?f4a3abgm--nx?n??s!.&bup?dem?gro?hcs?moc?ten?ude?vog??ac??u!.&a&cinniv?emirc?i&hzhziropaz?stynniv??s&edo?sedo??tlay?vatlop??bs?cinimod?d&argovorik?o!roghzu???e&hzhziropaz?nvir?t??fi?g&l?ro??hk?i&stvinrehc?ykstynlemhk??k&c?m?s&nagul?t&enod?ul??v&iknarf-onavi?orteporp&end?ind?????l&iponret?opotsa&bes?ves??p??m&k?oc?s?yrk??n&c?d?i?osrehk?v?ylov??o&c?nvor??p&d?p?z??r&c?imotihz?k?ymotyhz??sk?t&en?l?z??ude?v&c?e&alokin?ik??i&alokym?hinrehc?krahk?vl?yk??k?l?o&g!inrehc??krahk??r??y&ikstinlemhk?mus?s&akrehc?sakrehc?tvonrehc???zu???v?waniko?x&a?iacal??yogan??b&125qhx--nx?3jca1d--nx?4&6&1rfz--nx?qif--nx??96rzc--nx??a&0dc4xbgm--nx?c?her??b!.&erots?gro?moc?o&c?fni??ten?ude?v&og?t??zib???cs?dhesa08--nx?g?l!.&gro?moc?ten?ude?vog???s!.&gro?moc?ten?ude?vog???u&lc?p???c&1&1q54--nx?hbgw--nx??2e9c2czf--nx?4byj9q--nx?9jr&b&2h--nx?54--nx?9s--nx??ceg--nx??a!.&gro?lim?moc?ten?ude?vog??3a09--nx!.&ca1o--nx?gva1c--nx?h&ca1o--nx?za09--nx??ta1d--nx?ua08--nx????bf76a0c7ylqbgm--nx?c!.&gnipparcs,revres-emag,s&otohpym,seccaptf,??0atf7b45--nx?a1l--nx??e!.&21k?bog?dem?gro?lim?moc?nif?o&fni?rp??ten?ude?vog??beuq??i&n&agro?ilc??tic??l!.&gro?moc?oc?ten?ude?vog???m!.&mt?ossa???n!.ossa??s!.&gro?moc?ten?ude?vog???t!w??v!.&gro?lim?moc?ten?ude?vog???yn??d&2urzc--nx?3&1wrpk--nx?c9jrcpf--nx??5xq55--nx?75yrpk--nx?a!.mon?d??b2babgm--nx?c!.vog?g9a2g2b0ae0chclc--nx??e&r!k??sopxe?timil?w??g?i!.&ased?bew?ca?hcs?lim?o&c?g??ro?ten?ym?zib??b?rdam??liub?m?n&al!raas??ob?uf??orp?r&actiderc?k??s!.&dem?gro?moc?ofni?ten?ude?v&og?t????t!.topsgolb,?za5cbgn--nx??e&17a1hbbgm--nx?2a6a1b6b1i--nx?418txh--nx?707b0e3--nx?a!.&ca?gro?hcs?lim?oc?ten?vog???b!.&ca?topsgolb,?utuoy??c&a&lp?ps??na&d?nif??rofria??d!.&edaregtmueart,keegnietsi,moc,n&esgnutiel,iemtsi,?topsgolb,zten&mitbel,sadtretteuf,??art?iug?on--nx??e!.&bil?dem?eif?gro?irp?kiir?moc?pia?ude?vog??ffoc?gg?rged??fil?g!.&gro?lim?moc?t&en?vp??ude?vog??a&gtrom?yov??elloc?nahcxe??i!.&topsgolb,vog???j!.&gro?oc?ten???kib?l&a&dmrif?srof??uhcs??m!.&ca?gro?oc?sti?ten?ude?v&irp?og???an!.&reh.togrof,sih.togrof,??em?w??n!goloc?oz?ruoblem??om?p!.&bog?gro?lim?mo&c?n??ten?ude??irg??r!.&mo&c?n??ossa?topsgolb,?a&c?wtfos??eh?u&sni?tinruf???s!.&a?b!ibnal?rofmok??c!a??d!b?n&arb?ubroflanummok???e?f?g!ro??h!f??i!trap??k!shf??l?m!oc,t??n!mygskurbrutan??o?p!p??r?s!serp??t!opsgolb,?u?vhf?w?x!uvmok??y?z??ael?ier?roh?uoh??t&atse?isbew?ov?utitsni??u&lb?qituob??v!.&21e?b&ew?og??ce&r?t??erots?gro?lim?m&oc?rif??o&c?fni??stra?t&en?ni??ude?vog??itca??xul??f&7vqn--nx?a!.&gro?moc?ten?ude?vog???b!.vog?wa9bgm--nx??c!.topsgolb,a1p--nx??g?n!.&bew?cer?erots?m&oc?rif??ofni?re&hto?p??stra?ten???p!.&gro?moc?ude???t!w??w??g&2&4wq55--nx?8zrf6--nx??3&44sd3--nx?91w6j--nx??455ses--nx?69vqhr--nx?78a4d5a4prebgm--nx?a!.&gro?mo&c?n??oc?ten???b!.&0?1?2?3?4?5?6?7?8?9?a?b?c?d?e?f?g?h?i?j?k?l?m?n?o?p?q?r?s?t?u?v?w?x?y?z???c!za9a0cbgm--nx??e!.&eman?gro?ics?lim?moc?nue?ten?ude?vog???g!.&gro?oc?ten???k!.&gro?lim?moc?ten?ude?vog???m!.&drp?gro?lim?m&o&c?n??t??ude?vog???n!.&eman?gro?hcs?ibom?lim?moc?ten?ude?vog??aw?i!bmulp?ddew?h&sif?tolc??kooc?n&aelc?iart??re&enigne?tac??t&ad?ekram?hgil?lusnoc?ov?soh???o?u&rehcisrev?smas???r&o!.&az,d&ab-yrev-si,e&sufnocsim,vas-si,?nuof-si,oog-yrev-si,?e&a,cin-yrev-si,las-4-ffuts,m&-morf,agevres,ohruoyslles,?nozdop,rehwongniogyldlob,t&adidnac-a-si,is&-ybboh,golb,???fehc-a-si,golbymdaer,keeg-a&-si,si,?live-yrev-si,naf&s&citlec-a-si,niurb-a-si,tap-a-si,?xos-a-si,?ojodsnd,p&ifles,ohbew,tfe&moh,vres,??resu-xunil-a-si,s&aila&nyd,snd,?bbevres,nd&emoh,golb,mood,nyd:.&emoh,og,?,rvd,tog,?sa-skcik,u,?t&e&ews-yrev-si,nretni&ehtfodne,fodne,??hgink-a-si,s&ixetn&od,seod,?o&h-emag,l-si,???x&inuemoh,unilemoh,???ub&mah?oj???s!.&gro?moc?rep?t&en?opsgolb,?ude?vog???t?u!.&c&a?s??en?gro?moc?o&c?g??ro???v!a1c--nx??wsa08--nx??h&0ee5a3ld2ckx--nx?4wc3o--nx?8a7maabgm--nx?b!.&gro?moc?ten?ude?vog???c!.topsgolb,ir?r&aeserrecnac?uhc??taw??d0sbgp--nx?g!.&gro?lim?moc?ude?vog???m!a1j--nx??p!.&gro?i?lim?moc?ogn?ten?ude?vog???s!.&gro?lim?moc?ten?vog??a&c?nom??if??t!.&ca?im?ni?o&c?g??ro?ten???vo?zb??i&3tupk--nx?7a0oi--nx?a!.&ffo?gro?moc?ten??1p--nx??b!.&gro?moc?oc?ro?ude??om??c!.&ayb-tropora--nx?ca?d&e?m??esserp?gro?moc?o&c?g?ssa??ro?t&en?ni?ropor\u00e9a??ude?vuog???f!.&dnala?iki,topsgolb,??g!.&d&om?tl??gro?moc?ude?vog???hcra?k!.&gro?moc?ofni?ten?ude?vog?zib??b4gc--nx?iw?uzus??l?maim?n&im?re??s!ed??tinifni?v!.&21k?gro?moc?oc?ten???wik?xarp??j&8da1tabbgl--nx?b!.&ossa?topsgolb,uaerrab?vuog???d?s?t!.&bew?c&a?in??eman?gro?lim?moc?o&c?g??t&en?ni?set??ude?vog?zib????k&c&a&bdeef?lb??ilc?reme??d!.topsgolb,?h!.&a&4ya0cu--nx?5wqmg--nx??b3qa0do--nx?d&2&2svcw--nx?3rvcl--nx??5xq55--nx??g&a0nt--nx?la0do--nx?ro??i&050qmg--nx?7a0oi--nx?xa0km--nx??m&1qtxm--nx?oc??npqic--nx?t&en?opsgolb,?ude?v&di?og?ta0cu--nx??xva0fz--nx?\u4eba&\u4e2a?\u500b?\u7b87??\u53f8\u516c?\u5e9c\u653f?\u7d61&\u7db2?\u7f51??\u7e54&\u7d44?\u7ec4??\u7ec7&\u7d44?\u7ec4??\u7edc&\u7db2?\u7f51??\u80b2&\u654e?\u6559???n??l!.&bew?cos?dtl?gro?hcs?letoh?moc?nssa?ogn?prg?t&en?ni??ude?vog???m!.&eman?fni?gro?moc?ten?ude?vog???n&abreve?i!l?p???p!.&b&ew?og??gro?kog?m&af?oc??nog?ofni?pog?sog?ten?ude?vog?zib???row!ten??s!.topsgolb,?t?u!.&c&a?lp??dtl?e&cilop?m??gro?oc!.topsgolb,?shn?ten?vog????l&a!.&gro?lim?moc?ten?ude?vog??bolg?g?ic&nanif?os??noitanretni?t&i&gid?pac??ned???c!.&bog?lim?oc?vog???e&geips?nnahc?t?vart??f8f&pbgo--nx?tbgm--nx??g?i&.oc.topsgolb,a&f?m&e?g???m??lihmailliw?m!.&esserp?gro?moc?ten?ude?v&og?uog????n!.&oc,topsgolb,vb??o??o&btuf?oc?rit?u??p!.&a&cin&diws?gel??d&g?ortso?urawon??i&dem?mraw?nydg??k&elo&guld?rtso??slopolam?tsu?ytsyrut??l&ip?o&kzs?w&-awolats?oksnok????nimg?rog&-ai&bab?nelej??j?z??syn?tsaim?w&a&l&eib?i?o??zsraw??onamil??z&eiwolaib?mol???c&e&iw&alselob?o&nsos?rtso???le&im?zrogz???orw?p?ri??d&em?ia?ragrats??e&c&i&lrog?w&ilg?o&hc&arats?orp??klop?tak????ldeis?yzreibok??i&csjuoniws?ksromop?saldop??l&ahdop?opo??n&apokaz?ob&6?m???tatselaer?z&romop?swozam???g&alble?ezrbo&lok?nrat??ro??hcyzrblaw?i&csomohcurein?grat?klawus??k&e&rut?walcolw??inbyr?le?o&nas?tsylaib??rob&el?lam??s&als?jazel?nadg?puls?rowezrp???l&colw?e&r?vart??i&am?m???m&o&c?dar?n?tyb??s&g?iruot??t!a???n&a&gaz?nzop??i&bul?cezczs?molow?nok?zd&eb?obeiws???uleiw?y&tzslo?z&rtek?seic????o&c,fni?gn?k&celo?zdolk??lkan?n&leim?pek?t&uk?yzczs??z&copo?eing?rowaj???rga?tua?w&ejarg?ogarm???p&elks?klwwortso?ohs??romophcaz?sos?t&aiwop?en!esu??opos?ra?sezc??ude?v&irp?og!.&ap?gu?mu?o&p?s?wtsorats??rs?w&opu?u?????w&a&l&corw?sizdow??w??o&golg?k&ark?ul?zsurp??r&az?gew??tsugua?z&coks?sezr????xes?y&buzsak?d&azczseib?ikseb??hcyt?n&jes?lod-zreimizak??pal?r&ogt?uzam??walup?zutrak??z&am-awar?c&aprak?iwol?zsogdyb??dalezc?ib?s&i&lak?p??uklo?????rf?s!.&gro?moc?ten?ude?vog???t!.vog??x3b689qq6--nx??m&00tsb3--nx?1qtxm--nx?a!cbew?rirhs??b!.&gro?moc?ten?ude?vog???c!.&moc?oc?ten?vog???d!.&gro?moc?ten?ude?vog???f!i??g?h?i!.&ca?gro?moc?oc!.&clp?dtl???t&en?t??vt??k?rbg4--nx??k!.&drp?e&rianiretev?sserp??gro?lim?m&o&c?n??t??nicedem?ossa?pooc?s&eriaton?neicamrahp?sa??ude?v&og?uog????o!.&dem?gro?m&oc?uesum??o&c?rp??ten?ude?vog??c!.&a&c&-morf,irfa,?g&-morf,oy-sehcaet,?i-morf,m&-morf,all&-a-si,amai,??p&-morf,c-a-si,?s,v-morf,w-morf,z,?b&ew-sndnyd,g,?c&d-morf,n-morf,q,s-morf,?d&e&ifitrec-&si,ton-si,?llortnocduolc,?i-morf,m-morf,n&-morf,abeht-htiw-si,?s-morf,uolc&hr,smetsystuo,??e&ciffo-sndnyd,d:-morf,ocelgoog,,erf-sndnyd,i&hcet-a-si,p-sekil,?lgooghtiw,m&ina-otni-si,oh-&sndnyd,ta-sndnyd,??n&-morf,og-si,?rihcec,s:run-a-si,,t&i&nuarepo,s-ybboh,?omer-sndnyd,?v&als-elcibuc-a-si,itavresnoc-a-si,??fehc-a-si,golb&-sndnyd,sihtsetirw,?h&n-morf,o-morf,?i&h-morf,kiw-sndnyd,m-morf,r-morf,w-morf,?jn-morf,k&a-morf,cils-si,eeg-a&-si,si,?latsnaebcitsale,o-morf,row-&sndnyd,ta-sndnyd,?u,?l&a&-morf,rebil-a-si,?f-morf,i&-morf,am-sndnyd,?ru-&elpmis,taen,?ssukoreh,?mn-morf,n&a&cilbuper-a-si,f&-sllub-a-si,racsan-a-si,?i&cisum-a-si,ratrebil-a-si,??c,eerg-a-si,i-morf,m-morf,o&isam-al-a-tse,rtap-el-tse,siam-al-a-tse,?pj,t-morf,?o&c,jodsnd,m-morf,n,r,?p&i&-sndnyd,fles,ymteg,?pa&esaberif,lortnocduolc,ukoreh,??r&a:-morf,tskcor-a-si,,b,e&enigne-na-si,ggolb-a-si,h&caet-a-si,pargotohp-a-si,?krow-drah-a-si,n&gised-a-si,ia&rtlanosrep-a-si,tretne-na-si,??p&acsdnal-a-si,eekkoob-a-si,?retac-a-si,tn&iap-a-si,uh-a-si,?vres-sndnyd,y&alp-a-si,wal-a-si,??g,k,o&-morf,sivdalaicnanif-a-si,tc&a-na-si,od-a-si,??p-morf,u&as-o-nyd,eugolb-nom-tse,??s&aila&nyd,snd,?bbevres,cip-sndnyd,e&lahw-eht-sevas,mag-otni-si,?ipaelgoog,k-morf,m-morf,n&d&golb,mood,tog,?ootrac-otni-si,?r&ac-otni-si,etsohmaerd,?se&l-rof-slles,rtca-na-si,?u,wanozama.&1-&etupmoc:.&1-z,2-z,?,ts&ae&-&as-&3s,etisbew-3s,?su:-etisbew-3s,,?ht&ron-pa-&3s,etisbew-3s,?uos-pa-&3s,etisbew-3s,???ew-&su-&3s,etisbew-3s,?ue-&3s,etisbew-3s,?vog-su-&3s,etisbew-3s,spif-3s,????2-ts&aehtuos-pa-&3s,etisbew-3s,?ew-su-&3s,etisbew-3s,??3s,ble,etupmoc:.&1-ts&ae&-as,ht&ron-pa,uos-pa,??ew-&su,ue,vog-su,??2-ts&aehtuos-pa,ew-su,??,??t&arcomed-a-si,c-morf,eel&-si,rebu-si,?m-morf,n&atnuocca-na-si,e&duts-a-si,r-ot-ecaps,tnocresubuhtig,??ops&edoc,golb,ppa,?s&i&hcrana-&a-si,na-si,?laicos-a-si,pareht-a-si,tra-na-si,xetn&od,seod,??ohsfn,?u&-morf,nyekcoh-asi,?v-morf,?u&-rof-slles,e,h,oynahtretramssi,r:ug-a-si,,?v&n-morf,w-morf,?x&em,inuemoh,obaniateb,t-morf,unilemoh,?y&dnacsekil,k-morf,u,w-morf,????p?raf?s?t!.&gro?lim?mo&c?n??oc?ten?ude?vog???uesum!.&a&92chg-seacinumocelet-e-soierroc--nx?atnav?c&i&aduj?rfatsae??rollam??d&anac?enomaledasac?irolf??e&raaihpledalihp?srednu??g&hannavas?oonattahc??hamo?i&auhsu?bmuloc!hsitirb??dem?groeg?hpledalihp?l&artsua?etalif??n&igriv?rofilac??ssur?tsonod??ksa&la?rben??l&lojal?q-snl--nx?uossim!trof???m&a&bala?nap??enic?o&m?r???n&a&cirema?idni??edasap?ilorachtuos?olecrab??r&abrabatnas?ezzivs??su?t&nalta?osennim??zalp??c&dnotgnihsaw?ebeuq?i&depolcycne?ficap?hpargonaeco?lbup?sum?t&carporihc?lec?naltadim??vu??yn??d&a&dhgab?etsmraf?m?orliar??i&rdam?ulegnedleeb??leif?n&a!l&gne?nif?ragyduj?t&ocs?rop??yram???u&brofsdgybmeh?osdnaegami???r&augria?ofxo???e&c&a&l&ap?phtrib??ps??n&a&lubma?tsiser??e&fedlatsaoc?gilletni?ics!foyrotsih????pein?rof??d&nukneklov?revasem??e&rt?tsurt??f&atnas?ildliw??g&a&lliv?tireh!lanoitan???dirbmac?rog??i&cnum?nollaw??koorbrehs?l&ab?bib?cycrotom?i&ssim?txet??oks?tsac??m&affollah?it!iram??utsoc??n&golos?ilno?recul??r&a&uqs?waled!foetats???i&hs&acnal?kroy?pmahwen??otsih??omitlab?ut&an?cetihcra?inruf?luc!irga?su???vuol??s&abatad?iacnarf?sius?uoh!lum???t&a&locohc?rak?ts!e!yrtnuoc!su?????imesoy?tevroc??u&qihpargonaeco?velleb??vit&caretni?omotua???f&iuj?ohgrub??g&n&i&dliub?ginerevmuesum?kiv?lahw?nim?peekemit?vil??ulmmastsnuk??orf?r&eb&merun?nr&ats?eun???u&b&ierf?le?m&ah?uan??ram?s&mailliw!lainoloc??naitsirhc?retepts??zlas??ob&irf?mexul?????h&atu?c&raeser?sirotsih?uot??g&ea1h--nx?rubsttip??si&tirb?wej??t&laeh?ro&n?wtrof??uo&mnom?y????i&d6glbhbd9--nx?iawah?k&nisleh?s??lad!rodavlas??sissa?tannicnic??k&c&nivleeg?olc!-dna-hctaw?dnahctaw???fj?inebis?l&is?ofron??na&rfenna?t??oorbnarc?r&am&ned?reiets??oy!wen????l&a&ci&dem?golo&eahcra?meg?oz??natob?rotsih??ertnom?iromem?noita&cude?n??oc?rutluc?trop?utriv?van??e&nurb?s&ab?surb??utriv??i&artnogero?sarb??l&a&besab?hsnoegrus??e&hs?rdnevle??i&b?m!dniw????o&bup?ohcs?tsirb???m&a&dretsma?ets?h&netlehc?rud???ct?elas!urej??l&if?ohkcots?u??raf?silanruoj?u&esumyrotsihlarutan?ira&tenalp?uqa??terobra???n&a&c!irema!evitan???gihcim?i&dni?tpyge??mfoelsi?wehctaksas??e&d&alokohcs?ews?rag!cinatob?lacinatob?s&nerdlihc?u????gahnepoc?hcneum?laftsew?ppahcsnetewruutan?r&dlihc?ednaalv?hu!dnutamieh???sseig??gised!dn&atra?utsnuk???h&ab!nesie??ojts??i&lreb?tsua??l&eok?ocnil??n&ob?urbneohcs??o&dnol?gero?i&s&iv&dnadnuos?elet??nam??t&a&c&inummoc?ude!tra???dnuof?erc?i&cossa?va??kinummokelet?nissassa?r&belectsevrah?oproc?tsulli??silivic?t&nalp?s??vres&erp?noclatnemnorivne??zilivic??c&elloc?if-ecneics??ibihxe???ri?s&dnah?imaj?reffej?sral??t&erbepac?nilc?sob???r&e&b?dom?tsew?uab?zul??obredap??vahnebeok?wot??o&2a6v-seacinumoc--nx?ablib?c&edtra?ixemwen?sicnarfnas??elap?g&a&cihc?to??eidnas??i&cadnuf?diserp?ratno??llecitnom?mitiram?nirot?r&htna?ienajedoir???pohskrow?qari?r&aw!dloc?livic??dd?e&b&ma?yc??irrac?llimsiwel?naksiznarf?papswen?t&aeht?exe?nec!ecneics?larutluc?muesum?tra??s&ehc&nam?or??neum??upmoc???ia!nepo??obal?u&asonid?obal?takirak???s&a&l&g?l&ad?eh???xet??di&k?pardnarg??e&cneics!larutan??dnal?hcsi&deuj?rotsih!nizidem?rutan??selhcs??itinamuh?l&aw?egnasol?l&e&rutansecneics?xurb??iasrev???r&e&em?ugif??tsac??suohcirotsih?u&en?q&adac?itna!nacirema?su????\u00f5\u00e7acinumoc!elet-e-soierroc???gnirpsmlap?htab?i&lopanaidni?rap?uoltnias?xa??l&essurb?lod??mraeriflanoitan?n&a&blats?l??erdlihc?oi&snam?tacinummoc!elet-dna-stsop???\u00e4l??re&dnalf?lttes?mraf?nim?tnececneics??s&alg?erp??t&farc!dnastra??nalp?olip?ra!e&nif?vitaroced!su???su?xuaeb???u&b!muloc??cric???t&agilltrop?cejorp?dats?e&esum?kramnaidni??iorted?ne&m&elttes?norivne?piuqemraf??vnoc??oped?r&a!drib?enif?gttuts?hsiwej?kcor?n&acirema?ootrac??tamsa?yraropmetnoc??op&aes?snart?wen??ufknarf??s&a&cdaorb?octsae??ewhtuos?ilayol?nuk?r&ohnemled?uhlyram??urt???u&a&bgreb?etalpodaroloc??rmyc??w&ocsom?rn??x&esse?ineohp?nam?tas??y&a&bekaepasehc?w&etag?liar???camrahp?doc?e&hsub?l&ekreb?l&av!eniwydnarb??ort???n&dys?om??rrus?s&nreug?rejwen???golo&e&ahcra?g??motne?nh&cet?te??oz?po&rhtna?t??roh??hpargotohp?l&etalihp?imaf??m&edaca?onortsa??n&atob?yn??ps?r&a&ropmetnoc?tilim??e&diorbme?llag!tra??vocsid??lewej?nosameerf?otsih!dnaecneics?ecneics?gnivil!su??la&col?rutan??retupmoc?su??tsudnidnaecneics??spelipe?t&eicos!lacirotsih??i&nummoc?srevinu??nuoc???z&arg?iewhcs?nil?ojadab?urcatnas??\u043c\u043e\u043a\u0438?\u05dd\u05d9\u05dc\u05e9\u05d5\u05e8\u05d9????n&a!.&gro?moc?ten?ude??brud?cilbuper?f?s&ood?sin??varac??c!.&ah?bh?c&a?s??d&5xq55--nx?g?s??eh?g&la0do--nx?ro??h&a?q?s??i&7a0oi--nx?h??j&b?f?t?x?z??kh?l&h?im?j??m&n?oc??n&h?l?s?y??om?qc?s&g?j?wanozama.etupmoc:.1-htron-nc,,?ten?ude?vog?wt?x&g?j?n?s??z&g?x??\u53f8\u516c?\u7d61\u7db2?\u7edc\u7f51???e&erg?fuak?hctik?i&libommi?w??r!ednaalv??sier??g!.&ca?gro?moc?ten?ude?vog???h!.&bog?gro?lim?moc?ten?ude???i!.&c&a?in??dni?gro?lim?mrif?neg?oc?ser?t&en?opsgolb,?ude?vog??lreb??k!.&gro?ten?ude?vog???leok?m!.&cyn,gro?ude?vog???o&dnol?i&siv!orue??t&a&cude?dnuof??cu&a?rtsnoc????mrom?pq?siam??p!.&gro?oc?ten?ude?vog???re&c?yab??s!.&gro?moc?osrep?tra?ude?v&inu?uog????t!.&dni?esnefed?gro?ltni?m&oc!nim??siruot??n&erut?if??o&fni?srep??sn&e?r??t&an?en!irga?ude??rnr??unr?vog???ustad?v!.&ca?eman?gro?htlaeh?moc?o&fni?rp??t&en?ni??ude?vog?zib???wot!epac???o&76i4orfy--nx?a!.&bp?de?go?oc?ti?vg???b!.&bog?gro?lim?moc?t&en?ni??ude?v&og?t???olg??c!.&bew?cer?gro?lim?m&o&c?n??rif??ofni?stra?t&en?ni??ude?vog???d!.&b&ew?og??dls?gro?lim?moc?t&en?ra??ude?vog??agoba??e&c?dor??f!ni!.&e&gdelwonk-fo-l&errab,lerrab,?ht-skorg,rom-rof-ereh,?llatiswonk,p&ifles,ohbew,?ruo-rof,s&iht-skorg,ndnyd,????gn!am??hwsohw?i!.&buhtig,din,moc??b?dua?r?syhp??j!.&eman?gro?hcs?lim?moc?ten?ude?vog???m!.&gro?moc?ten?ude?vog??g?il??n!.&a&0&b-ekhgnark--nx?c-iehsrgev--nx?g-lksedlig--nx?k-negnanvk--nx??1&p-nedragy--nx?q-&asierrs--nx?grebsnt--nx?lado-rs--nx?n&egnidl--nx?orf-rs--nx??regnayh--nx?ssofenh--nx??r-datsgrt--nx?s-ladrjts--nx?v-y&senner--nx?vrejks--nx???3g-datsobegh--nx?4&5-&dnaleprj--nx?goksnerl--nx?tednalyh--nx??6-neladnjm--nx?s-&antouvachb--nx?impouvtalm--nx??y-&agrjnevvad--nx?ikhvlaraeb--nx???7k-antouvacchb--nx?8&k-rekie-erv--nx?l-ladrua-rs--nx?m-darehsdrk--nx??a!.sg??bct-eimeuvejsemn--nx?d&do?iisevvad?lov?narts?uas??f&1-&l--nx?s--nx??2-h--nx??g&10aq0-ineve--nx?av?ev?lot?r&ajn&evvad?u??\u00e1jn&evvad?u????h?iz-lf--nx?j&ddadab?sel??k&el?hoj&sarak?\u0161\u00e1r\u00e1k??iiv&ag&na&el?g??\u014b&ael?\u00e1g???ran???l&f?lahrevo?o&ms?s??sennev?t-&ilm--nx?tom--nx??u&-edr--nx?s??\u00f8ms??muar?n&0-tsr--nx?2-dob--nx?5-&asir--nx?tals--nx??a&r!-i-om?f?t??t??douvsatvid?kiv?m&os?\u00f8s??n&od?\u00f8d??ra?sen?t&aouvatheig?ouv&a&c&ch&ab?\u00e1b??h&ab?\u00e1b???n??i&ag?\u00e1g??sa&mo?ttvid??\u00e1n???z-rey--nx?\u00e6r&f?t???o&p-&ladr--nx?sens--nx??q-nagv--nx?r-asns--nx?s-kjks--nx?v-murb--nx?w-&anr&f--nx?t--nx??ublk--nx???ppol?q&0-t&baol--nx?soum--nx?veib--nx??x-&ipphl--nx?r&embh--nx?imph--nx???y-tinks--nx??r&f-atsr--nx?g-&an&ms--nx?nd--nx??e&drf--nx?ngs--nx??murs--nx?netl--nx?olmb--nx?sorr--nx??h-&a&lms--nx?yrf--nx??emjt--nx??i&-&lboh--nx?rsir--nx?y&d&ar--nx?na--nx??ksa--nx?lem--nx?r&ul--nx?yd--nx????stu??j-&drav--nx?rolf--nx?sdav--nx??kua?l-&drojf--nx?lares--nx??m-tlohr--nx?n-esans--nx?olf?p-sdnil--nx?s-ladrl--nx?tih?v-rvsyt--nx??s&a&ns?ons??i&ar?er&dron?r&os?\u00f8s???\u00e1r??la&g?h??mor!t??sir?uf?\u00e5ns??t&koulo&nka?\u014bk\u00e1??la?p-raddjb--nx?r-agrjnu--nx?s&aefr&ammah?\u00e1mm\u00e1h??orf?r&o?\u00f8???u-vreiks--nx??u&h-dnusel--nx?i-&drojfk--nx?vleslm--nx??j-ekerom--nx?k-rekrem--nx?u-&dnalr--nx?goksr--nx?sensk--nx??v-nekyr--nx?w-&k&abrd--nx?ivjg--nx??oryso--nx??y-y&dnas--nx?mrak--nx?n&art--nx?nif--nx??reva--nx??z-smort--nx??v!.sg?ledatskork?reiks??wh-antouvn--nx?x&9-dlofts--nx.aoq-relv--nx?d-nmaherk--nx?f-dnalnks--nx?h-neltloh--nx?i-drgeppo--nx?j-gve&gnal--nx?lreb--nx??m-negnilr--nx?n-drojfvk--nx??y&7-ujdaehal--nx?8-antouvig--nx?b-&dlofrs--nx?goksmr--nx?kivryr--nx?retslj--nx??e-nejsom--nx?f-y&krajb--nx?re&dni--nx?tso--nx??stivk--nx??g-regark--nx?orf?\u00f8rf??z9-drojfstb--nx??b&25-akiivagael--nx?53ay7-olousech--nx?a&iy-gv--nx?le-tl&b--nx?s--nx??n0-ydr--nx??c&0-dnal-erdns--nx?z-netot-erts--nx??g&g-regnarav-rs--nx?o-nejssendnas--nx??ju-erdils-ertsy--nx?nj-dnalh-goksrua--nx?q&q-ladsmor-go-erm--nx.&ari-yreh--nx?ednas??s-neslahsladrjts--nx???ca&4s-atsaefrmmh--nx?8m-dnusynnrb--nx?il-tl--nx?le-slg--nx?n5-rdib--nx?op-drgl--nx?uw-ynnrb--nx??d&a&qx-tggrv--nx?reh!nnivk?sd&ork?\u00f8rk??uas??ts&e&bi?kkar?llyh?nnan??g&ort?\u00f8rt??k&alf?irderf??levev?mirg?obeg&ah?\u00e6h??r&ah?ejg????barm-jdddb--nx?ie!rah?s&etivk?ladman???lof&r&os?\u00f8s??ts&ev.ednas?o.relav?\u00f8.rel\u00e5v???n&a&l&-erd&n&os?\u00f8s??ron??adroh.so?dron.&a&g5-b--nx?ri-yreh--nx??ob?y&oreh?\u00f8reh??\u00f8b??e&m!lejh??pr&oj?\u00f8j??vi??gyb?n&aks?\u00e5ks??o&h-goksrua?rf??r&o?ua?\u00f8??tros?\u00f8h-goksrua??rts!e&devt?lab?mloh???s&ellil?naitsirk?rof???u&l!os??s!d&im?lejt??e&guah?l&a?\u00e5???kkoh?lavk?naitsirk?r&af?eg&e?ie???tef?y&onnorb?\u00f8nn\u00f8rb?????r&a&blavs!.sg??g&eppo?la???o&j&f&a!dniv?k?vk??die?e&dnas?kkelf??llins?r&iel?ots??s&lab?t&ab?\u00e5b??yt??\u00e5!k??\u00e6vk??les??ts??\u00e5g&eppo?l\u00e5???ureksub.sen??e&ayb-yrettn--nx?d&ar?lom?r&of?\u00f8f??\u00e5r??g&gyr?nats??i&meuv&ejsem&aan?\u00e5\u00e5n??sekaal??rjea??j&d&ef?oks??les??k&er&aom?\u00e5om??hgna&ark?\u00e5rk??iregnir?kot!s??s&ig?uaf???l&bmab?kyb?l&av?ehtats??oh??m&it?ojt?\u00f8jt??n&arg?g&os?\u00f8s??meh?reil?te?ummok?yrb??r&dils-erts&ev?y&o?\u00f8???ua?vod??sa&ans?\u00e5ns??t&robraa?spaav??urg??f&62ats-ugsrop--nx?a&10-ujvrekkhr--nx?7k-tajjrv-attm--nx??o!.sg?h??s!.sg??v!.sg???g&5aly-yr&n--nx?v--nx??a&llor?ve&gnal?lreb???n&av!snellu??org??oks&die?m&or?\u00f8r??ner&ol?\u00f8l??r&o?\u00f8???r&eb!adnar?edyps?s&die?elf?gnok?n&ot?\u00f8t????obspras??uahatsla?\u00e5ve&gnal?lreb???h&0alu-ysm--nx?7&4ay8-akiivagg--nx?5ay7-atkoulok--nx??a!.sg???i&e&hsr&agev?\u00e5gev??rf??k&h&avlaraeb?\u00e1vlaraeb??s??lm&a?\u00e5??mpouvtal&am?\u00e1m??pph&al?\u00e1l??rrounaddleid?ssaneve?\u0161\u0161\u00e1neve??j&0aoq-ysgv--nx?94bawh-akhojrk--nx??k&a&b&ord?\u00f8rd??jks?lleis??iv!aklejps?l&am?evs?u??mag?nel?ojg?r&a&l?n??epok?iel?y&or?\u00f8r???s&ah?kel?om??\u00f8jg??kabene?ojsarak?ram&deh.&aoq-relv--nx?rel&av?\u00e5v??so??e&let.&ag5-b--nx?ob?\u00f8b??ra???\u00e5jks??l&a!d&anrus?d&numurb?ron??e&gnard?nte?s&meh?sin??ttin??g&is?nyl??kro?l&em?l&ejfttah?of??u&ag-ertdim?s???n&am?era?gos?i&b?nroh?r??kos?nus?oj??o-&dron?r&os?\u00f8s???ppo?r&a!l?nram??e&gne?l?v??is?o&jts?ts??u&a-&dron?r&os?\u00f8s???h??\u00e5?\u00e6l?\u00f8jts??s&e&jg?nivk?ryf??kav?mor-go-er&om.&ednas?yoreh??\u00f8m.&ednas?y\u00f8reh???uag??t&las?rajh?suan??v&l&a?e-rots??u-go-eron??yt??ksedlig?res&a?\u00e5???bib&eklof?seklyf??es!dah??h!.sg??i&m?syrt??l&ejf?ov&etsua?gnit?ksa?sdie???n!.sg??o!.sg?boh?g?h??r!.sg??\u00e5!ksedlig??\u00f8boh??m&a&rah?vk??f!.sg??h!.sg??i&e&h&dnort?rtsua?ssej??rkrejb??ksa??ol?t!.sg??u&dom?esum?r&ab?drejg?evle?os?uh?\u00e6b?\u00f8s??ttals???n&a&g&av?okssman?\u00e5v??jlis?or?r&g?rev???e&d&do&sen?ton??lah?r&agy&o?\u00f8??ojfsam???g&iets?n&a&l&as?lab??n&avk?\u00e6vk??t&arg?ddosen??v&al?essov???i&d&ol?\u00f8l??l&ar?\u00e6r???yl??reb??iks?k&srot?y&or?\u00f8r???l&a&d&gnos?n&er?ojm?\u00f8jm??om??tloh??ug?\u00e5tloh??mmard?ojs&om?sendnas??ppolg?s&lahsladr&ojts?\u00f8jts??o??t&o&l?t-erts&ev?o?\u00f8???roh?\u00f8l??vly&kkys?nav??yam-naj!.sg??\u00f8js&om?sendnas???g&orf?ujb??i&dnaort?vnarg??kob?ladendua?maherk&a?\u00e5??n&it?urgsrop??orf-&dron?r&os?\u00f8s???r&aieb?evats??sfev?uaks?yrts??o&6axi-ygvtsev--nx?c,d&ob?rav??ievs?kssouf?l&m&ob?\u00f8b??ous&adna?ech&ac?\u00e1\u010d???so!.sg???msdeks?niekotuak?r&egark?olf?y&oso?\u00f8so???s&dav?mort???p&ed?p&akdron?elk???r&a&d&dj&ab?\u00e1b??iab??jtif?luag?mah?vsyt??e&gn&a&k&iel?ro??merb?n&at?mas??rav-r&os?\u00f8s??srop?talf?v&ats?el??y&oh?\u00f8h???ivsgnok??il?jkniets?k&a&nvej?rem?s&gnir?nellu???ie-er&den?v&o?\u00f8???ram?sa?\u00e5rem??la&jf?vh??m&b&ah?\u00e1h??mahellil??nnul?ts&l&oj?\u00f8j??ul??y&o?\u00f8???imp&ah?\u00e1h??m!.sg??osir?t!.sg??\u00e1di\u00e1b?\u00e6vsyt?\u00f8sir??s&adnil?en&dnas?e&dga?k&ri&b?k??som??ve??me&h?jg??nroh-go-ejve?s&a?ednil?k&o?\u00f8??of?yt?\u00e5??tsev??gv?hf?igaval?o&r&or?\u00f8r??sman??so&fen&oh?\u00f8h??m?v??uh&lem?sreka.sen??\u00e5!dnil???t&a&baol?g&aov?grav??jjr&av-attam?\u00e1v-att\u00e1m??l&a&b?s??\u00e1s??soum?ts?v&eib?our???e&dnaly&oh?\u00f8h??f?s&nyt?rokomsdeks?sen??vtpiks??in&aks?\u00e1ks??loh&ar?\u00e5r??n!.sg??o&m&a?\u00e5??psgolb,?s!.sg?efremmah?or?\u00f8r??terdi?\u00e1&baol?ggr\u00e1v?l\u00e1&b?s??soum?veib???u&b!.sg?alk?e&dna?gnir?nner??les?\u00e6lk??dra&b?eb??g&nasrop?vi?\u014b\u00e1srop??j&daehal&a?\u00e1??jedub?v&arekkhar?\u00e1rekkh\u00e1r???ksiouf?n&diaegadvoug?taed???v&irp?lesl&am?\u00e5m???y&b&essen?nart?sebel?tsev??o&d&ar?na!s??or??gavtsev?k&rajb?sa??lem?mrak?n&art?n&if?orb???r&a&mah?n?v??e&dni?t&so?ton??va??ul?yd??s&am?enner?gav?lrak?tivk??vrejks??\u00f8&d&ar?na!s??\u00f8r??g\u00e5vtsev?k&rajb?sa??lem?mrak?n&art?n&if?\u00f8rb???r&e&dni?t&so?t\u00f8n??va??ul?yd?\u00e6&n?v???s&enner?g\u00e5v?tivk?\u00e5m??vrejks???\u00e1&sl\u00e1g?tl\u00e1?vreiks??\u00e5&g\u00e5v?h?jdd\u00e5d\u00e5b?lf??\u00f8&d&ob?rav??r&egark?olf??s&dav?mort????u??o&b?f?ttat??r!.&cer?erots?gro?m&o&c?n??rif?t??ofni?stra?t&n?opsgolb,?www??ea!.&a&ac?cgd?idem??bulc!orea??ci&ffartria?taborea??e&c&alptekram?n&a&l&lievrus-ria?ubma??netniam?rusni??erefnoc???gnahcxe?mordorea?ni&gne?lria?zagam??rawtfos??gni&d&art?ilg!arap?gnah???l&dnahdnuorg?ledom??noollab?retac?sael?t&lusnoc?uhcarap??vidyks??hcraeser?ixat?l&anruoj?euf?icnuoc?ortnoc!-ciffart-ria???n&gised?oi&nu?t&a&cifitrec?ercer?gi&tsevni-tnedicca?van??i&cossa!-regnessap??valivic??redef??cudorp?neverp-tnedicca????ograc?p&ihsnoipmahc?uorg!gnikrow???r&e&dart?enigne?korb?niart?trahc??o&htua?tacude???s&citsigol?e&civres?r??krow?serp!xe??tnega??t&farcr&ia?otor??hgi&erf?l&f?orcim???liubemoh?n&atlusnoc?e&duts?m&esuma?n&iatretne?revog??piuqe????olip?ropria?si&lanruoj?tneics???w&erc?ohs??y&cnegreme?dobper?tefas????p!.&a&ca?pc??dem?gne?r&ab?uj??wal????s!.&gro?moc?ten???t!.&gro?lim?moc?ten?ude?vog??o&hp?v??tol??ykot??p&a&ehc?s??g!.&gro?ibom?moc?ossa?ten?ude???iz?j!.&a&bihc!.&a&bihciakoy?don?ma&him?ye&ragan?tat???r&a&bom?gan?hihci??u&agedos?kas?ustak???s&os?ufomihs??t&amihcay?iran??w&a&g&im&anah?o??omak??kihci?zustum??ihsak??y&agamak?imonihci???e&akas?nagot??i&azni?esohc?h&asa?s&abanuf?ohc???ka&to?zok??musi?orihs?r&akihabihsokoy?o&dim?tak??ukujuk??usihs??nano&hc?yk??o&d&iakustoy?ustam??hsonhot?k&a&rihs?t??iba??nihsaran?sobimanim?tas&arihsimao?imot??uhc?yihcay??u&kujno?s&ayaru?t&imik?tuf???zarasik????g&as!.&a&gas?m&a&tamah?yik??ihsak??rat?t&a&gatik?hatik??ira!ihsin????e&kaira?nimimak??i&akneg?g&aruyk?o??h&c&amo?uo??siorihs??kaznak?modukuf?ra&gonihsoy?mi???nezih?u&k&at?ohuok??s&ot?tarak?????ihs!.&a&kok?m&a&hagan?yirom??ihsakat??rabiam?wagoton??e&miharot?nokih??houyr?i&azaihsin?esok?kustakat?moihsagih??na&mihcahimo?nok??o&hsia?mag?t&asoyot?ok?tir???us&ay?t&asuk?o??????k&aso!.&a&d&awihsik?eki??k&a&noyot?s&akaayahihc?oihsagih???oadat?uziak??m&ayas!akaso??odak??r&a&bustam?wihsak??ediijuf??t&akarih?i&k?us???wag&ayen?odoyihsagih???e&son?tawanojihs??honim?i&akas?h&cugirom?s&ayabadnot?i&a&kat?t??n??oyimusihsagih???k&a&rabi?sim??ustakat??muzi?r&ijat?otamuk???nan&ak?n&ah?es???o&ay?n&a&ganihcawak?simuzi?tak??eba?ikibah?oyot??t&anim?iad?omamihs??uhc??ust&oimuzi?tes????ou&kuf!.&a&d&amay?eos??g&no?ok?usak??hiku?k&awayim?uzii??ma&kan?y&asih?im???rawak?t&a&gon?ka&h?num?t???umo??wa&g&a&kan?nay?t??ias??ko!rih???y&ihsa?usak???e&m&ay?uruk??taruk?us??i&a&nohs?raihcat??goruk?h&cukuf?s&a&gih?hukuy??in???k&a&gako?muzim??iust?o?ustani??m&anim?otihsoynihs?u??r&ogo?ugasas??usu??ne&siek?zu&b?kihc???o&gukihc?h&ak?ot?ukihc??j&ono?ukihc??kayim?nihsukihc?to?uhc??u&fiazad?gnihs?stoyot????zihs!.&a&bmetog?d&amihs?eijuf?ihsoy?omihs??kouzihs?mihsim?ra&biah?honikam??tawi?wa&g&ekak?ukik??kijuf??yimonijuf??i&a&ra?sok??hcamirom?juf?kaz&eamo?ustam??ma&nnak?ta??nukonuzi?orukuf??nohenawak?o&nosus?ti??u&stamamah?z&a&mun?wak??i!ay?i&hs&agih?in??manim??mihs????????m&a&tias!.&a&d&ihsoy?ot?usah??k&a&dih?sa??o&arihs?s???m&a&tias?y&as?o&rom?tah??ustamihsagih???i&hsagurust?jawak??uri??ni?wa&g&e&ko?man??ikot?o??k&ara?i&hsoy?mak???ru?zorokot??y&a&g&amuk?ihsok?otah??kuf??imo??ziin??e&bakusak?ogawak?sogo?ttas?zokoy??i&baraw?h&cugawak?s&oyim?ubustam???iroy?k&ato?ihs?u&k?stawi???m&akoyr?i&hsoy?juf??uziimak???naznar?o&dakas?ihsay?jnoh?n&a&go?nim??imijuf?nah?oy??r&ihsayim?otagan??t&asim!ak??igus?omatik??zak??u&bihcihc!ihsagih??sonuok?ynah????y&ak&aw!.&a&d&ira?notimak??kadih?ma&h&arihs?im??y&a&kaw?tik??oduk???ru&ustakihcan?y??sauy?wa&g&a&dira?zok??orih??konik??yok?zok??e&banat?dawi??i&garustak?jiat?mani??naniak?o&bog?nimik?t&asim?omihs&ah?uk????ugnihs???o!.&a&jos?koasak?m&ay&ako?ust??ihsayah??r&abi?ukawaihsin??wi&aka?nam???e&gakay?kaw??i&gan?h&cu&kasa?otes??sahakat??k&asim?ihsaruk??miin??n&anemuk?ezib??o&hsotas?jnihs?n&amat?imagak??ohs?uhcibik?????ot!.&a&damay?got?koakat?may&etat?ot??nahoj?riat?waki&inakan?reman???eb&ayo?oruk??i&h&asa?ciimak?sahanuf??kuzanu?m&an&i?ot??ih???nezuyn?otnan?u&hcuf?stimukuf?z&imi?ou???????ihs&o&gak!.&a&m&ayuok?ihsogak??si?yonak??e&banawak?n&at&akan?imanim??uka??tomoonihsin??i&adnesamustas?k&azarukam?oih??m&ama?uzi??usuy??nesi?o&knik?os?tomustam??uzimurat???rih!.&a&ka&n?s??m&ayukuf?i&hsorihihsagih?j&ate?imakikaso????r&a&bohs?h&ekat?im???es??tiak?wiad??e&kato?ruk??i&h&ci&akustah?mono?nihs??s&inares?oyim???manimasa?uk??negokikesnij?o&gnoh?namuk??uhcuf????uk&ot!.&a&bihci?mi&hsu&kot?stamok??m??wagakan??egihsustam?i&gum?h&coganas?soyim??kijaw?m&anim?uzia??ukihsihs??nan&a?iak??o&nati?turan????uf!.&a&batuf?m&a&to?y&enak?irok???ihs&im?ukuf??os?uko??r&aboihsatik?uganat??ta&katik?mawak?rih??w&a&g&akus?emas?uy??k&a&mat?rihs?sa??ihsi??nah??ohs???e&gnabuzia?iman?ta&d?tii???i&adnab?enet?hs&agih?iimagak??k&a&wi?zimuzi??ubay??minuk?r&ook?ustamay???nihsiat?o&g&etomo?ihsin?nan?omihs??no!duruf?rih??rihsawani?ta&may?simuzia???u&rahim?stamakawuzia?zia&ihsin?nay???????nug!.&a&bawak?doyihc?k&anna?oi&hsoy?juf?mot???m&ayakat?ustagaihsagih??n&ihsatak?nak??r&ahonagan?nak?o?u&kati?mamat???t&amun?inomihs?o??w&akubihs?iem?ohs???i&hsa&beam?yabetat??kas&akat?esi??m&akanim?uzio??ogamust?rodim??o&jonakan?n&eu?oyikust??tnihs??u&komnan?stasuk?yrik?????ran!.&a&bihsak?d&akatotamay?u!o???guraki?m&ay&atik&imak?omihs??irokotamay??oki??ra&hihsak?n??wa&geson?knet???e&kayim?ozamay?sog?ustim??i&a&rukas?wak??garustak?h&ciomihs?sinawak??jo?ka&mnak?toruk??makawak?nos?r&net?otakat?ugeh???o&d&na?oyo??gnas?jnihs?nihsoy!ihsagih??tomarawat?yrok????t&ag&amay!.&a&dihsio?k&atarihs?ourust??may&a&kan?rum??enak?onimak??rukho?ta&ga&may?nuf??hakat?kas??wa&g&ekas?orumam??ki&hsin?m??z&anabo?enoy?ot???zuy??e&agas?bonamay?dii?nihsagih?o??i&a&gan?nohs??h&asa?sinawak??nugo??o&dnet?jnihs?ynan??ukohak???iin!.&a&ga?k&ium?oagan??munou!imanim??t&a&bihs?giin??ioy??w&a&gioti?kikes?zuy??irak??yijo??e&kustim?mabust??i&aniat?hcamakot?kaz&awihsak?omuzi??m&a&gat?karum??o???n&anust?esog??o&das?ihcot?jnas?k&ihay?oym??mak?naga?ries??u&ories?steoj?????i&ka!.&a&go?k&asok?oimak??t&ago!rihcah??ika!atik???w&aki?oyk???e&mojog?natim?suranihsagih?t&ado?okoy???i&hsoyirom?magatak?naokimak??nesiad?o&hakin?jnoh!iruy??nuzak?rihson?tasi&juf?m??yjnoh??u&kobmes?oppah????o!.&a&dakatognub?m&asah?ihsemih??su?t&ekat?i&h?o????e&onokok?ustimak??i&jih?k&asinuk?ias?usu??mukust??onoognub?u&fuy?juk?ppeb?suk??????wa&ga&k!.&a&mihsoan?rihotok?waga&kihsagih?ya???emaguram?i&j&nonak?ustnez??kunas?monihcu??o&hsonot?nnam?yotim??u&st&amakat?odat??zatu????nak!.&a&dustam?kus&okoy?tarih??maz?nibe?r&a&gihsaimanim?h&esi?imagas??wa&do?guy???u&im?kamak???tikamay?wa&k&ia?oyik?umas??sijuf??yimonin??e&nokah?saya??i&akan?esiak?gusta?hsuz?kasagihc?o?ukust??o&nadah?sio?tamay?????kihsi!.&a&danihcu?gak?kihs?mijaw?t&abust?ikawak??wazanak??i&gurust?hcionon?mon?ukah??nasukah?o&anan?ton!akan???u&kohak?stamok?z&imana?us?????niko!.&a&han?m&arat?ijemuk?uru??n&e&dak?zi??no??ra&hihsin?rih??wa&kihsi?niko??yehi?zonig??e&osaru?seay??i&hsagih?jomihs?k&a&gihsi?not??ihsakot??m&a&ginuk?kihsug?maz??igo?otekat??nuga!noy???n&a&moti?timoy?wonig??i&jikan?k???o&gan?jnan?tiad&atik?imanim???u&botom?kusug&akan!atik??imot??rab&anoy?eah???????ca?d&a?e??e&im!.&a&bot?k&asustam?uzus??m&a&him?y&emak?im???ihs??nawuk?wi&em?k???e&bani?ogawak?si!imanim???i&arataw?gusim?h&asa?ciakkoy??k&a&mat?sosik?t??iat??raban??o&dat?hik?n&amuk?ihseru?o&du?mok????ust???mihe!.&a&m&a&h&ataway?iin??yustam??ij&awu?imak???taki!man???ebot?i&anoh?kasam?rabami??n&ania?egokamuk?oot??o&jias?kihcu?nustam?uhcukokihs?yi!es???u&kohik?zo????n!amihs!.&a&d&amah?ho?usam??kustay?m&a?ihsoni&hsin?ko???wakih??e&namihs?ustam??i&g&aka?usay??konikak?mikih??nannu?o&mu&kay?zi!ihsagih?uko???nawust?tasim??u&stog?yamat?????tawi!.&a&bahay?d&amay?on??koirom?t&a&honat?katnezukir??imus??w&as&ijuf?uzim??ihs???e&hon&i&hci?n??uk??tawi??i&a&duf?murak?wak??h&custo?si&amak?ukuzihs???j&oboj?uk??k&a&m&anah?uzuk??sagenak??esonihci??m&akatik?uzia&rih?wi????o&kayim?no&rih?t??tanufo??uhso????gl?i&g&ayim!.&a&dukak?m&a&goihs?kihs??ihsustam!ihsagih??un&awi?nesek???r&awago?iho??ta&bihs?rum??w&a&gano?kuruf??iat??y&imot?ukaw???e&mot?nimes??i&hsiorihs?ka&monihsi?s&awak?o???mak?r&ataw?o&muram?tan????o&az?jagat?t&asim?omamay???u&fir?k&irnasimanim?uhsakihcihs?????ihcot!.&a&g&a&h?kihsa??ust??kom?m&ay&o?usarak??unak??r&a&boihsusan?watho??iho?ukas??t&akihsin?iay??wa&konimak?zenakat??y&imonustu?oihs???e&iiju?kustomihs?nufawi??i&akihci?g&etom?ihcot?on???o&k&ihsam?kin??nas?sioruk?tab??u&bim?san?????h&c&ia!.&a&dnah?m&a!h&akat?im??yuni??ihs&ibot?ust???r&a&hat?tihs??ik?u&ihsagih?kawi???t&ihc?o&k?yot???wa&koyot?zani??yi&monihci?rak???e&inak?k&aoyot?usa??manokot?noyot??i&a&gusak?kot?sia??eot?h&asairawo?cugo?s&ahoyot?oyim???k&a&mok?zako??ihssi??motay?rogamag??n&an&ikeh?ok??ihssin??o&got?ihsin?jna?rihsnihs?suf?tes??u&bo?raho?s&oyik?takihs??yrihc?zah????ok!.&a&dusay?kadih?mayotom?r&ah&im?usuy??umakan??sot!ihsin??wa&g&atik?odoyin??k&as?o????i&esieg?hco!k??jamu?k&a!sus??usto??ma&gak?k??rahan??o&mukus?n&i?ust!ihsagih???torum?yot!o???u&koknan?zimihsasot????ugamay!.&a&m&ayukot?ihso??toyot??e&bu?subat??i&gah?kesonomihs?nukawi?rakih??nanuhs?otagan?u&ba?foh?otim?stamaduk?uy?????sanamay!.&a&dihsoyijuf?mayabat?r&ahoneu?ustakihsin??w&a&k&ayah?ijuf??suran??ohs???egusok?i&ak?h&cimakan?s&anamay?od???k&asarin?u&feuf?sto????o&k&akanamay?ihcugawakijuf??nihso?t&asimawakihci?ukoh??uhc??spla-imanim?u&b&nan?onim??fok?hsok?rust?????ka&rabi!.&a&bukust?gok?kan!ihcatih??m&a&sak?timo?wi??ihsak?ustomihs??ni?r&a&hihcu?way??u&agimusak?ihcust???t&ag&amay?eman??oihcatih??w&ag&arukas?o??os??yi&moihcatih?rom???e&bomot?dirot?not?tadomihs??i&a&k&as?ot??rao??esukihc?gahakat?h&asa?catih??k&a&rabi?saguyr??ihsani?uy??ma?rukustamat??o&dnab?giad?him?kati?rihsijuf?soj?t&asorihs?im??yihcay??u&fius?kihsu?simak????sagan!.&a&m&abo?ihsust??natawak?r&abamihs?u&mo?ustam???wijihc?yahasi??i&akias?hies?k&asagan?i??masah??neznu?o&besas?darih?t&eso?og!imaknihs????ust&igot?onihcuk?uf????zayim!.&a&biihs?guyh?k&oebon?ustorom??mihsuk?r&emihsin?uatik??ta&katik?mim??wag&atik?odak??ya??e&banakat?sakog??i&hsayabok?kaza&kat?yim??m&animawak?ot&inuk?nihs????nanihcin?o&j&ik?onokayim??n&ibe?ust??tias??urahakat????ro&moa!.&a&dawot?turust?wasim??e&hon&ihc&ah?ihs??nas?og?ukor??sario??i&anarih?ganayati?hsioruk?jehon?kasorih?makihsah?nawo?r&amodakan?omoa???o&gnihs?kkat??u&ragust?stum????ttot!.&a&r&ahawak?uotok??sa&kaw?sim???egok?irottot?nanihcin?o&ganoy?nih?tanimiakas??u&bnan?z&ay?ihc??????ukuf!.&a&deki?gurust?ma&bo?h&akat?im??yustak??sakaw??eabas?i&akas?ho?jiehie?ukuf??nezihce!imanim??ono????o&c?diakkoh!.&a&deki?gakihset?hcebihs?k&adih?u&fib?narihs???m&ayiruk?hot?ihs&orihatik?ukuf??oras?usta??r&ib&a!ka??o?uruf??ozo?u&gakihsagih?oyot???sakim?ta&gikust?mun??w&a&ga&k&an?uf??nus!imak???k&aru?i&h&asa?sagih??kat?mak??omihs?um??zimawi??ine?oyk??yot??e&a&mustam?nan??b&a&kihs?yak??o&noroh?to???ian?k&ihsam?ufoto??nakami?ppoko!ihsin??sotihc?tad!okah??uonikat??i&a&bib?mokamot?n&a&k&kaw?oroh??wi??eomak?ihsatu?okik?usta&moruk?sakan????eib?h&c&ioy?u&bmek?irihs???s&ase?ekka?oknar?uesom???jufirihsir?k&amamihs?i&at?n???m&atik?otoyot??oa&kihs?rihs??r&a&hs?kihsi?mot??ihs&aba?ir??otarib???n&a&hctuk?rorum?se?tokahs??uber??o&kayot?m&ire?ukay??naruf!ima&k?nim???orih?r&ih&ibo?suk??o&bah?h&i&b?hsimak??sa??pnan?yan??umen??t&asoyik?eko?ukoh???u&bassa?kotnihs?m&assaw?uo??pp&akiin?en&ioto?nuk??ip??rato?s&akat?t&eb&e?i&a?hs!a??robon??m&e?o&m?takan???no&h?tamah??o&mik?s?t??u&kir?ppihc?st???onihsnihs?ufuras??uaru??yru!koh??zimihs!ok?????g!oyh!.&a&bmat?dnas?gusak?k&at?o&oyot?y??uzarakat??m&ayasas?irah??wa&g&ani?okak??k&i&hci?mak??oy???yi&hsa?monihsin???i&asak?hs&aka?i&at?nawak???j&awa!imanim??emih??k&a&goa?s&agama?ukuf??wihsin??i&hsog?m???mati?oia?rogimak??n&annas?esnonihs??o&gasa!kat??ka?n&ikat?o?ustat??rihsay?sihs?tomus?yas??u&bay?gnihs?????nagan!.&a&bukah?d&a&w?yim??e&ki?u??ii??k&a&s&ay?uki??zus??ihsoo?ousay??m&ay&akat?ii??i&hsukufosik?jii??ukihc??n&i!hsetat??uzii??r&ah?ugot??saim?t&agamay?oyim??w&a&g&a&kan?n??o??kustam?ziurak??onim!imanim??u&koo?s!omihs????ya&ko?rih???e&akas?nagamok?subo??i&gakat?h&asa?c&a!mo!nanihs???uonamay??sukagot??k&a&kas?mimanim?to??ia&atik?imanim??oa?uzihcom??m&akawak?ijuf?o!t???r&ato?ijoihs?omakat???n&ana?esnoawazon??o&hukas?n&a&gan?kan??i&hc?muza??ustat??romok?si&gan?k??tomustam??u&k&as?ohukihc??stamega????to&mamuk!.&a&gamay?mihsak?rahihsin?s&ok?ukama!imak???tamanim??enufim?i&h&cukik?soyotih??k&ihsam?u??nugo!imanim??romakat??o&ara?rihsustay?sa?t&amay?om&amuk?us??u!koyg???yohc??u&sagan?zo????yk!.&a&bmatoyk?k&ies?oemak?uzaw??mayi&h&cukuf?sagih??muk??nihsamay?rawatiju?t&away?ik???e&ba&nat!oyk??ya??di?ni??i&ju?kazamayo?manim??natnan?o&gnatoyk?kum?mak?rihsamayimanim?y&gakan?ka&koagan?s??oj???u&ruziam?z&ayim?ik??????ykot!.&a&d&i&hcam?mus??oyihc??k&atim?ihsustak??m&a&t!uko??yarumihsa&gih?sum???i&hs&agoa?ika?o!t??uzuok??ren???r&a&honih?wasago??iadok?umah??ssuf?t&ik?o??wa&g&anihs?ode??k&ara?ihcat???y&agates?ubihs???e&amok?donih?m&o?urukihsagih??soyik??i&enagok?gani?h&ca&da?tinuk??sabati??j&nubukok?oihcah??manigus??o&huzim?jihcah?n&akan?ih!sasum??urika??rugem?t&a&mayihsagih?nim??iat?ok??uhc?yknub??u&fohc?hcuf?kujnihs?????r&g?o??topsgolb,ufig!.&a&d&eki?ih??kimot?m&ayakat?ihsah??ne?raha&gi&kes?makak??sak??taga&may?tik??wa&g&ibi?ustakan??karihs!ihsagih????e&katim?uawak??i&gohakas?hc&apna?uonaw??k&ago?es?ot??m&anuzim?ijat??nak?urat??nanig?o&dog?jug?makonim?nim?roy?sihcih??u&fig?s&otom?t&amasak?oay????????k!.&art?gro?moc?per?ude?vog???m!ac??nd?o&g?hpih?oc?t??rahs?t?vsr??q&a?g?i!.&gro?lim?moc?ten?ude?vog???m?se??r&a!.&bog?gro?lim?moc!.topsgolb,?rut?t&en?ni??ude?vog??4d5a4prebgm--nx?b?los?t&at?suen???b!.&21g?b!mi??c&er?sp?te??d&em?mb?n&f?i??rt??f&gg?ni??g&el?l&s?z??n&c?e??ol&b?f?v??pp?ro??i&kiw?sp?te?xat??l&el?im?sq??m&a?da?f?ic?o&c!.topsgolb,?n???nce?o&ce?do?et?i&b?dar??rp?ta??p&m!e?t??ooc?se??qra?r&af?ga?oj?tn?ut??su&j?m??t&am?e&n?v??nc?o&f?n??ra?sf??ude?v&da?og?rs?t????c!.&as?ca?de?if?o&c?g??ro???e&e&b?nigne?rac??t&nec?upmoc??ywal??f!.&aterg?cidessa?drp?e&citsuj-reissiuh?rianiretev?sserp??i&cc?rgabmahc??m&o&c?n??t??n&eicamrahp?icedem??ossa?se&lbatpmoc-strepxe?riaton?tsitned-sneigrurihc?uova??t&acova?opsgolb,r&epxe-ertemoeg?op!orea????vuog??avc7ylqbgm--nx??g!.&gro?moc?t&en?opsgolb,?ude?vog???h!.&eman?mo&c?rf??zi??ur??i!.&a&61f4a3abgm--nx?rf4a3abgm--nx??ca?di?gro?hcs?oc?ten?vog?\u0646\u0627\u0631&\u064a\u0627?\u06cc\u0627???aper??k!.&c&a?s??e&n?p?r??gk?iggnoeyg?kub&gn&oeyg?uhc??noej??l&im?uoes??man&gn&oeyg?uhc??noej??n&as&lu?ub??o&e&hcni?jead??wgnag???o&c?g??ro?s&e?h?m??topsgolb,u&gead?j&ej?gnawg?????l!.&gro?moc?ten?ude?vog???m!.&topsgolb,vog???n!.&gro?moc?ofni?ten?ude?vog?zib???ot&ca?laer??p!.&alsi?ca?eman?forp?gro?moc?o&fni?rp??t&en?se??ude?vog?zib???s?t.cn.vog?ubad??s&8sqif--nx?9zqif--nx?a!.vog?birappnb?gev?lliv?mtsirhc??b!.&gro?moc?ten?ude?vog??oj??ci&hparg?p??d&l?nomaid?rac??e!.&bog?gro?mo&c!.topsgolb,?n??ude??civres?d&d2bgm--nx?oc??i&lppus?rtsudni?treporp??jaiv?l&aw?cycrotom?gnis??moh?ohs?picer?rut&cip?nev??si&rpretne?urc??taicossa?vig??g!nidloh??h5c822qif--nx?i!.&ekacpuc,gro?moc?t&en?ni??ude?vog??rap?targ??k&cor?hxda08--nx?row??l!.&gro?oc??a&ed?tner??essurb?oot??m!.&gro?moc?ten?ude?vog??etsys?ialc??n&a&gorf?ol??ia&grab?mod??oit&acav?cudorp?ulos???o&dnoc?geuj?t&ohp?ua???p!.&ces?gro?moc?olp?ten?ude?vog??i&hsralohcs?t???r!.&ca?gro?ni?oc?ude?vog??atiug?c?e&dliub?erac?ntrap??otcartnoc??s&alg?e&n&isub?tif??rp???t&h&cay?gilf??n&atnuocca?e&mtsevni?ve???rap??u!.&a&c!.&21k?bil?cc???g!.&21k?bil?cc???i!.&21k?bil?cc???l!.&21k?bil?cc???m!.&21k!.&hcorap?rthc?tvp???bil?cc???p!.&21k?bil?cc???si?v!.&21k?bil?cc???w!.&21k?bil?cc????c&d!.&21k?bil?cc???n!.&21k?bil?cc???s!.&21k?bil?cc????d&ef?i!.&21k?bil?cc???m!.&21k?bil?cc???n!.&21k?bil?cc???s!.&bil?cc????e&d!.&21k?bil?cc???las-4-&dnal,ffuts,?m!.&21k?bil?cc???n!.&21k?bil?cc????h&n!.&21k?bil?cc???o!.&21k?bil?cc????i&h!.&bil?cc???m!.&21k?bil?cc???nd?r!.&21k?bil?cc???v!.&21k?bil?cc???w!.&21k?bil?cc????jn!.&21k?bil?cc???k&a!.&21k?bil?cc???o!.&21k?bil?cc????l&a!.&21k?bil?cc???f!.&21k?bil?cc???i!.&21k?bil?cc????mn!.&21k?bil?cc???n&i!.&21k?bil?cc???m!.&21k?bil?cc???sn?t!.&21k?bil?cc????o&c!.&21k?bil?cc???m!.&21k?bil?cc????r&a!.&21k?bil?cc???o!.&21k?bil?cc???p!.&21k?bil?cc????s&a!.&21k?bil?cc???dik?k!.&21k?bil?cc???m!.&21k?bil?cc????t&c!.&21k?bil?cc???m!.&21k?bil?cc???u!.&21k?bil?cc???v!.&21k?bil?cc????ug!.&21k?bil?cc???v&n!.&21k?bil?cc???w!.cc???xt!.&21k?bil?cc???y&b-si,k!.&21k?bil?cc???n!.&21k?bil?cc???w!.&21k?bil?cc????za!.&21k?bil?cc????ah!uab??e??w!.&gro?moc?s&ndnyd,tepym,?ten?ude?vog??eiver??yot??t&0srzc--nx?a!.&ca?o&c!.topsgolb,?fni,?ro?v&g?irp,?zib,?c?e!s??rcomed??b!.&gro?moc?ten?ude?vog??gl??cerid?dimhcs?e!.&eman?gro?moc?ofni?ten?ude?vog?zib??em?kram?n!.&a&l-morf,z,?bg,dnab-eht-ni,e&ht-no-eciffo,libom-eruza,mohtanyd,nozdop,rehurht,s,tis-repparcs,?fehc-a-si,k&eeg-a&-si,si,?u,?ni,o&c-morf,jodsnd,?p&i&emoh,fles,?j,mac-dnab-ta,o&-oidar-mah,hbew,?paduolc,tfe&moh,vres,??s&aila&nyd,snd,?bbevres,e&suohsyub,tisbeweruza,?ndgolb,sa-skcik,?t&enretnifodne,i-&ekorb,s&eod,lles,teg,??norfduolc,sixetnod,?uh,x&inuemoh,unilemoh,?y&ltsaf.&dorp.&a,labolg,?lss.&a,b,labolg,??n-morf,?za-morf,??v??fig?g!.&bog?dni?gro?lim?moc?ten?ude???h!.&dem?gro?l&er?op??m&oc?rif??o&fni?rp?s&rep?sa???po&hs?oc??t&en?luda?ra??ude?vuog???i!.&a&at?b?c!cul??dv?i&blo&-oipmet?oipmet??cserb?drabmol?g&gof?urep??l&gup?i&cis?me&-oigger?oigger???uig&-&aizenev&-iluirf?iluirf??ev&-iluirf?iluirf??v&-iluirf?iluirf???aizenev&-iluirf?iluirf??ev&-iluirf?iluirf??v&-iluirf?iluirf????n&a&brev?cul?pmac?tac??idras?obrac&-saiselgi?saiselgi??resi??otsip?r&b&alac!-oigger?oigger??mu??dna&-&attelrab-inart?inart-attelrab??attelrabinart?inartattelrab?ssela??epmi?ugil??tnelav&-obiv?obiv??vap?z&e&nev?ps&-al?al???irog???l&iuqa!l??leib??m&or?rap??n!acsot?e&dom?is?sec&-ilrof?ilrof???g&amor&-ailime?ailime??edras?olob??i&ssem?tal??ne!var??o&cna?merc?rev?vas???oneg?p?r!a&csep?rr&ac&-assam?assam??ef??von??etam?tsailgo!-lled?lled???s!ip?sam&-ararrac?ararrac??u&caris?gar???t!a&cilisab?recam??resac?soa!-&d&-&ellav?lav??ellav?lav??ellav??d&-&ellav?lav??ellav?lav??ellav??te&lrab&-&airdna-inart?inart-airdna??airdnainart?inartairdna??ssinatlac???udap?v!o&dap?neg?tnam???zn&airb&-a&lled-e-aznom?znom??a&lledeaznom?znom??eaznom??e&c&aip?iv??soc?top??om???b&c?m!u??v??c&f?is?l?m?p?r?v??d&p?u??e&c!cel?inev?nerolf??f?g!ida&-&a&-onitnert?onitnert??otla!-onitnert?onitnert???a&-onitnert?onitnert??otla!-onitnert?onitnert????hcram?l?m!or??n&idu?o&n&edrop?isorf??torc???p?r?s&erav?ilom??t!nomeip?s&eirt?oa!-eellav?eellav????v?znerif??g&a?b?f?il?o?p?r?up?vf??hc?i&b?c?dol?f?l!lecrev?opan?rof&-anesec?anesec???m?n&a&part?rt&-attelrab-airdna?attelrabairdna???imir?ret??p?r!a&b?ilgac?ssas???s!idnirb??t&ei&hc?r??sa??v??l&a!c??b?c?o&m?rit&-&d&eus&-onitnert?onitnert??us&-onitnert?onitnert???s&-onitnert?onitnert???d&eus!-onitnert?onitnert??us&-onitnert?onitnert???s&-onitnert?onitnert?????m&ac?f?i?ol?r??n&a!lim?slab??b?c?e!v?zob??irut?m!p??p?r?t??o&a!v??b!retiv??c!cel??enuc?g!ivor??i&dem&-onadipmac?onadipmac??pmet&-aiblo?aiblo??rdnos?zal??l?m!a&greb?ret??oc?re&f?lap???n!a&dipmac&-oidem?oidem??lim?tsiro?zlob??ecip&-ilocsa?ilocsa??i&bru&-orasep?orasep??lleva?rot?tnert??r&elas?ovil??ulleb??p?r!a&sep&-onibru?onibru??znatac??oun??s!ivert?sabopmac??t!arp?e&nev?ssorg??n&arat?e&girga?rt?veneb????zz&era?urba???p&a?s?t??qa?r&a!m?s??b!a??c?f?g?k?me?o?p?s?t?v??s&a&b?iselgi&-ainobrac?ainobrac???b?c?elpan?i?m?ot?s?t?v??t&a?b?c?l?m?nomdeip?o!psgolb,?p?v??u&de?l?n?p??v&a?og?p?s?t?v??y&drabmol?ellav&-atsoa?atsoa??licis?nacsut??z&al?b?c?p???derc??l!.vog??m!.&gro?moc?ten?ude???n&e&g?m&eganam?piuqe???i!.ue??uocsid??ocs?p!.&emon?gro?lbup?moc?t&en?ni?opsgolb,?ude?vog???r&epxe?op&er?pus???s!.&adaxiabme?e&motoas?picnirp?rots??gro?lim?moc?o&c?dalusnoc??ten?ude?vog??e&b?padub?r??i&rolf?tned??o&h?p???t!.&eman?gro?ibom?levart?m&oc?uesum??o&c?fni?r&ea?p???pooc?sboj?t&en?ni??ude?vog?zib???y?ztej??u&a!.&a&s?w??civ?d&i?lq??fnoc?gro?moc!.topsgolb,?nsa?ofni?sat?t&ca?en?n??ude!.&a&s?w??civ?dlq?sat?t&ca?n??wsn???vog!.&a&s?w??civ?dlq?sat???wsn?zo???c!.&fni?gro?moc?ten?ude?vog???de?e?h!.&0002?a&citore?idem?kitore??edszot?gro?ilus?letoh?m&alker?lif?t?urof??naltagni?o&c?ediv?fni?levynok?nisac??pohs?rarga?s&a&kal?zatu??emag?wen??t&lob?opsgolb,rops??virp?xe&s?zs??ytic?zsagoj??os??l?m!.&ca?gro?moc?oc?ro?ten?vog???n!.&eni&esrem,m,?tenkcahs,?em??r!.&a&dgolov?gulak?i&hsavuhc?kymlak?lerak?rikhsab?ssakahk?t&ayrub?rumdu?ukay??vodrom??k&dohkan?nidud?t&a&hcmak?yv??ingam?okuhc???l&o-rakhsoj?ut??mortsok?nalap?ramas?tihc?vut?yegyda?znep??bps?ca?d&arg&oglov?z??nr?orogleb??e&du-nalu?niram??g&bc?ersom?ineok?r&o?ub&-e?n&ero?iretakey?????hzenorov?i&a&natsuk?tla??mok?ram??k&ihclan?otsovidalv?s&l&aru-k?egnahkra?iron??m!o!t???n!a&mrum?yrb??eloms?i&baylehc?lahkas-onhzuy??odv??r&ayonsark?ib&isovon?mis??ogitayp?u&k?ma???t!epil?ukri??v&ehzi?o&rabahk?stbur?????l&a&kiab?ma&j?y???e&-iram?hc??im?o&kso?porvats?yro??valsoray??m&du?o&c?t??rep??n&a&buk?dagam?gruk?hkartsa?rzys?ts&egad?ratat??za&k?yr???emuyt?ilahkas?rv?ystirast??ovo&navi?remek??pp?r&aj?evt?hck?i&b?midalv??uma??s&itym?mk?sabzuk??t&en?ni?s&aeraf?et??ugrus??ude?v&hk?o&bmat?g?n!n??rik?taras??ts??wmc?ynzorg?z&akvakidalv?kn?ns?tp???myc?ug??s?v!.&gro?moc?ten?ude???ykuyr??v&b?c!.topsgolb,?ih?l!.&di?fnoc?gro?lim?moc?nsa?ten?ude?vog???m!.&eman?gro?lim?m&oc?uesum??o&fni?r&ea?p???pooc?t&en?ni??ude?vog?zib???o&g?m??s!.&bog?der?gro?moc?ude???t!.&bew-eht-no,naht-&esrow,retteb,?sndnyd,??uqhv--nx??w&a!.moc??b!.&gro?oc???c!.&gro?moc?ten?ude???en?g?m!.&ca?gro?m&oc?uesum??oc?pooc?t&en?ni??ude?vog?zib???o&csom?h??p!.&de?en?o&c?g??ro?ualeb???r!.&ca?lim?moc?oc?t&en?ni??ude?v&og?uog???n??t!.&a46oa0fz--nx?b&82wrzc--nx?ulc??emag?gro?lim?moc?t&en?opsgolb,?ude?v&di?og?ta0cu--nx??zibe?\u696d\u5546?\u7e54\u7d44?\u8def\u7db2????x&a!t??c!.&hta,vog???ednay?m!.&bog?gro?moc?t&en?opsgolb,?ude??g?ma2ibgy--nx??s!.vog??xx??y&4punu--nx?ad!i&loh?rfkcalb??ot??b!.&fo?lim?moc?vog???cnega?enrotta?g!.&moc?oc?ten??olonhcet??hpargotohp?k!.&gro?moc?ten?ude?vog???l!.&clp?d&em?i??gro?hcs?moc?ten?ude?vog??f?ppus??m!.&eman?gro?lim?moc?ten?ude?vog??edaca?ra??napmoc?os?p!.&gro?lim?moc?pooc?ten?ude?vog???r&e&grus?llag??otcerid?tnuoc?uxul??s!.&gro?lim?moc?ten?ude?vog???t&i&c?nummoc?srevinu??reporp??u!.&bug?gro?lim?moc?ten?ude???van?xes??z&a!.&eman?gro?lim?moc?o&fni?rp??pp?t&en?ni??ude?vog?zib???b!.&az,gro?moc?ten?ude?vog???c!.topsgolb,?d!.&gro?lop?moc?ossa?t&en?ra??ude?vog???ib!.&e&ht-rof,mos-rof,rom-rof,?p&ifles,ohbew,?retteb-rof,sndnyd,??k!.&gro?lim?moc?ten?ude?vog???n!.&asq-irom--nx?ca?gro?htlaeh?i&r&c?o&am?\u0101m???wi!k???keeg?l&im?oohcs??neg?oc!.topsgolb,?t&en?nemailrap?vog????s!.&ca?gro?oc???t!.&c&a?s??e&m?n??ibom?l&etoh?im??o&c?fni?g??ro?vt???u!.&gro?moc?oc?ten???yx?zub??\u0430\u0432\u043a\u0441\u043e\u043c?\u0431\u0440\u0441!.&\u0433\u0440\u043e?\u0434\u043e?\u043a\u0430?\u0440&\u0431\u043e?\u043f!\u0443?????\u0433\u0440\u043e?\u0437\u0430\u049b?\u0438\u0442\u0435\u0434?\u043d&\u0439\u0430\u043b\u043d\u043e?\u043e\u043c??\u0440\u043a\u0443?\u0441\u0443\u0440?\u0442\u0439\u0430\u0441?\u0444\u0440?\u0627\u064a&\u0631\u0648\u0633?\u0633\u064a\u0644\u0645??\u0628\u0631\u063a\u0645\u0644\u0627?\u0629&\u0643\u0628\u0634?\u064a&\u062f\u0648\u0639\u0633\u0644\u0627?\u0631\u0648\u0633??\u06cc\u062f\u0648\u0639\u0633\u0644\u0627??\u062a&\u0627\u0631\u0627\u0645\u0627?\u0631\u0627\u06be\u0628??\u0631&\u0626\u0627\u0632\u062c\u0644\u0627?\u0627\u0632\u0627\u0628?\u0635\u0645?\u0637\u0642??\u0633\u0646\u0648\u062a?\u0639\u0642\u0648\u0645?\u0646&\u0627&\u0631&\u064a\u0627?\u06cc\u0627??\u0645\u0639??\u062f\u0631\u0627\u0644\u0627?\u0645\u064a\u0644\u0627?\u064a\u0637\u0633\u0644\u0641??\u0647\u064a\u062f\u0648\u0639\u0633\u0644\u0627?\u06c3\u06cc\u062f\u0648\u0639\u0633\u0644\u0627?\u0924\u0930\u093e\u092d?\u0928\u0920\u0917\u0902\u0938?\u09a4\u09b0\u09be\u09ad?\u09be\u09b2\u0982\u09be\u09ac?\u0a24\u0a30\u0a3e\u0a2d?\u0aa4\u0ab0\u0abe\u0aad?\u0bbe\u0baf\u0bbf\u0ba4\u0bcd\u0ba8\u0b87?\u0bc8\u0b95\u0bcd\u0b99\u0bb2\u0b87?\u0bcd\u0bb0\u0bc2\u0baa\u0bcd\u0baa\u0b95\u0bcd\u0b99\u0bbf\u0b9a?\u0c4d\u0c24\u0c30\u0c3e\u0c2d?\u0dcf\u0d9a\u0d82\u0dbd?\u0e22\u0e17\u0e44?\u10d4\u10d2?\u306a\u3093\u307f?\u4e1a\u4f01?\u4e1c\u5e7f?\u4e50\u5a31?\u4f60\u7231\u6211?\u4fe1\u4e2d?\u52a1\u653f?\u52a8\u79fb?\u5366\u516b?\u53f8\u516c?\u56e2\u96c6?\u56fd\u4e2d?\u570b\u4e2d?\u5740\u7f51?\u5761\u52a0\u65b0?\u57ce\u5546?\u5c71\u4f5b?\u5e97&\u5546?\u7f51??\u5e9c\u653f?\u620f\u6e38?\u673a\u624b?\u6784\u673a!\u7ec7\u7ec4??\u6807\u5546?\u6e2f\u9999?\u6e7e\u53f0?\u7063&\u53f0?\u81fa??\u754c\u4e16?\u76ca\u516c?\u7ebf\u5728?\u7edc\u7f51?\u7f51\u6587\u4e2d?\uad6d\ud55c?\uc131\uc0bc??\");\n \n   /**\n    * If a hostname is not a key in the EXCLUDE map, and if removing its\n    * leftmost component results in a name which is a key in this map, it is a\n    * public suffix.\n    */\n   public static final ImmutableMap<String, PublicSuffixType> UNDER =\n-      TrieParser.parseTrie(\"az?db?e&k?y??gp?hk?in?jf?k&c?f?u.hcs??li?m&j?m?z??nb?p&j.&a&mahokoy?yogan??ebok?i&adnes?kasawak??oroppas?uhsuykatik??n??r&e?t??te?ug?w&k?z??yc?zm??\");\n+      TrieParser.parseTrie(\"az?db?e&k?y??gp?hk?in?jf?k&c?f?u.hcs??li?m&j?m?z??nb?p&j.&a&mahokoy?yogan??ebok?i&adnes?kasawak??oroppas?uhsuykatik??n??r&e?t??ug?w&k?z??yc?zm??\");\n \n   /**\n    * The elements in this map would pass the UNDER test, but are known not to",
      "parent_sha": "5680a472a27a1974f90cd20024879539b52ae300"
    }
  },
  {
    "oid": "6c86373a9f7407af9a8a921435ee2e0e1ade922f",
    "message": "Fix a minor oversight in using a constant in LongMath for its intended purpose.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=121145870",
    "date": "2016-05-02T14:07:04Z",
    "url": "https://github.com/google/guava/commit/6c86373a9f7407af9a8a921435ee2e0e1ade922f",
    "details": {
      "sha": "0305411dbd0ee3a921b725c9a2374352b5a522a1",
      "filename": "guava/src/com/google/common/math/LongMath.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/google/guava/blob/6c86373a9f7407af9a8a921435ee2e0e1ade922f/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fmath%2FLongMath.java",
      "raw_url": "https://github.com/google/guava/raw/6c86373a9f7407af9a8a921435ee2e0e1ade922f/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fmath%2FLongMath.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fmath%2FLongMath.java?ref=6c86373a9f7407af9a8a921435ee2e0e1ade922f",
      "patch": "@@ -66,7 +66,7 @@ public final class LongMath {\n   @Beta\n   public static long ceilingPowerOfTwo(long x) {\n     checkPositive(\"x\", x);\n-    if (x > (1L << (Long.SIZE - 2))) {\n+    if (x > MAX_SIGNED_POWER_OF_TWO) {\n       throw new ArithmeticException(\"ceilingPowerOfTwo(\" + x + \") is not representable as a long\");\n     }\n     return 1L << -Long.numberOfLeadingZeros(x - 1);",
      "parent_sha": "1de67afcb295c771fb00a98281c6becf74926e76"
    }
  },
  {
    "oid": "9d265ad9f7814355df061a4a897c95c4544d611d",
    "message": "Fix typo in code sample for ForwardingWrapperTester.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34069677",
    "date": "2012-09-20T18:22:59Z",
    "url": "https://github.com/google/guava/commit/9d265ad9f7814355df061a4a897c95c4544d611d",
    "details": {
      "sha": "71d2b1adb76242189943ff1be6503a7050ba7348",
      "filename": "guava-testlib/src/com/google/common/testing/ForwardingWrapperTester.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/google/guava/blob/9d265ad9f7814355df061a4a897c95c4544d611d/guava-testlib%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Ftesting%2FForwardingWrapperTester.java",
      "raw_url": "https://github.com/google/guava/raw/9d265ad9f7814355df061a4a897c95c4544d611d/guava-testlib%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Ftesting%2FForwardingWrapperTester.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava-testlib%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Ftesting%2FForwardingWrapperTester.java?ref=9d265ad9f7814355df061a4a897c95c4544d611d",
      "patch": "@@ -41,7 +41,7 @@\n  * <p>For example: <pre>   {@code\n  *   new ForwardingWrapperTester().testForwarding(Foo.class, new Function<Foo, Foo>() {\n  *     public Foo apply(Foo foo) {\n- *       return ForwardingFoo(foo);\n+ *       return new ForwardingFoo(foo);\n  *     }\n  *   });}</pre>\n  *",
      "parent_sha": "4ab9205558043640770fa5888c56ff3e639903df"
    }
  },
  {
    "oid": "b3cb0e6ae8c8525323014263a0561d33958efc16",
    "message": "Add {Byte,Char}{Source,Sink} streaming APIs to BaseEncoding.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40155178",
    "date": "2012-12-18T20:59:41Z",
    "url": "https://github.com/google/guava/commit/b3cb0e6ae8c8525323014263a0561d33958efc16",
    "details": {
      "sha": "653fdc0e63eec84712a4054f793779feccd263d0",
      "filename": "guava/src/com/google/common/io/BaseEncoding.java",
      "status": "modified",
      "additions": 31,
      "deletions": 1,
      "changes": 32,
      "blob_url": "https://github.com/google/guava/blob/b3cb0e6ae8c8525323014263a0561d33958efc16/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fio%2FBaseEncoding.java",
      "raw_url": "https://github.com/google/guava/raw/b3cb0e6ae8c8525323014263a0561d33958efc16/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fio%2FBaseEncoding.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fio%2FBaseEncoding.java?ref=b3cb0e6ae8c8525323014263a0561d33958efc16",
      "patch": "@@ -191,6 +191,20 @@ public OutputStream getOutput() throws IOException {\n     };\n   }\n \n+  /**\n+   * Returns a {@code ByteSink} that writes base-encoded bytes to the specified {@code CharSink}.\n+   */\n+  @GwtIncompatible(\"ByteSink,CharSink\")\n+  public final ByteSink encodingSink(final CharSink encodedSink) {\n+    checkNotNull(encodedSink);\n+    return new ByteSink() {\n+      @Override\n+      public OutputStream openStream() throws IOException {\n+        return encodingStream(encodedSink.openStream());\n+      }\n+    };\n+  }\n+\n   // TODO(user): document the extent of leniency, probably after adding ignore(CharMatcher)\n \n   private static byte[] extract(byte[] result, int length) {\n@@ -239,7 +253,8 @@ public final InputStream decodingStream(Reader reader) {\n    * from readers from the specified supplier.\n    */\n   @GwtIncompatible(\"Reader,InputStream\")\n-  public InputSupplier<InputStream> decodingStream(final InputSupplier<Reader> readerSupplier) {\n+  public final InputSupplier<InputStream> decodingStream(\n+      final InputSupplier<Reader> readerSupplier) {\n     checkNotNull(readerSupplier);\n     return new InputSupplier<InputStream>() {\n       @Override\n@@ -249,6 +264,21 @@ public InputStream getInput() throws IOException {\n     };\n   }\n \n+  /**\n+   * Returns a {@code ByteSource} that reads base-encoded bytes from the specified\n+   * {@code CharSource}.\n+   */\n+  @GwtIncompatible(\"ByteSource,CharSource\")\n+  public final ByteSource decodingSource(final CharSource encodedSource) {\n+    checkNotNull(encodedSource);\n+    return new ByteSource() {\n+      @Override\n+      public InputStream openStream() throws IOException {\n+        return decodingStream(encodedSource.openStream());\n+      }\n+    };\n+  }\n+\n   // Implementations for encoding/decoding\n \n   abstract int maxEncodedSize(int bytes);",
      "parent_sha": "ca5d718d02f2dfc04bb09937f12a58267f4781cb"
    }
  },
  {
    "oid": "f995641f6ef5f09c5484f5ce5bd2a805608491f9",
    "message": "Make it obvious that RateLimiter can handle < 1 qps.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=51961102",
    "date": "2013-09-06T21:21:10Z",
    "url": "https://github.com/google/guava/commit/f995641f6ef5f09c5484f5ce5bd2a805608491f9",
    "details": {
      "sha": "e6538f939167e5ed608573af235ae400fbf85eaf",
      "filename": "guava/src/com/google/common/util/concurrent/RateLimiter.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/google/guava/blob/f995641f6ef5f09c5484f5ce5bd2a805608491f9/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FRateLimiter.java",
      "raw_url": "https://github.com/google/guava/raw/f995641f6ef5f09c5484f5ce5bd2a805608491f9/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FRateLimiter.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FRateLimiter.java?ref=f995641f6ef5f09c5484f5ce5bd2a805608491f9",
      "patch": "@@ -221,7 +221,7 @@ public abstract class RateLimiter {\n    * requests being smoothly limited at the stable rate of {@code permitsPerSecond}.\n    *\n    * @param permitsPerSecond the rate of the returned {@code RateLimiter}, measured in\n-   *        how many permits become available per second.\n+   *        how many permits become available per second. Must be positive\n    */\n   // TODO(user): \"This is equivalent to\n   //                 {@code createWithCapacity(permitsPerSecond, 1, TimeUnit.SECONDS)}\".\n@@ -266,7 +266,7 @@ static RateLimiter create(SleepingTicker ticker, double permitsPerSecond) {\n    * will follow), and if it is left unused for long enough, it will return to that state.\n    *\n    * @param permitsPerSecond the rate of the returned {@code RateLimiter}, measured in\n-   *        how many permits become available per second\n+   *        how many permits become available per second. Must be positive\n    * @param warmupPeriod the duration of the period where the {@code RateLimiter} ramps up its\n    *        rate, before reaching its stable (maximum) rate\n    * @param unit the time unit of the warmupPeriod argument\n@@ -349,7 +349,7 @@ private RateLimiter(SleepingTicker ticker) {\n    * e.g. if the {@code RateLimiter} was configured with a warmup period of 20 seconds,\n    * it still has a warmup period of 20 seconds after this method invocation.\n    *\n-   * @param permitsPerSecond the new stable rate of this {@code RateLimiter}.\n+   * @param permitsPerSecond the new stable rate of this {@code RateLimiter}. Must be positive\n    */\n   public final void setRate(double permitsPerSecond) {\n     Preconditions.checkArgument(permitsPerSecond > 0.0",
      "parent_sha": "ef35fa6ce1d48e12c3e98fa8587758209cf6509c"
    }
  },
  {
    "oid": "1404ead2c8e86628e4a4f3cea9441d80d220bb96",
    "message": "Further LongMath.sqrt optimizations, to show that a simple truncation is in fact sufficient.  (This actually simplifies the proof.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39276105",
    "date": "2012-11-26T17:06:55Z",
    "url": "https://github.com/google/guava/commit/1404ead2c8e86628e4a4f3cea9441d80d220bb96",
    "details": {
      "sha": "e27db5856dd093a7373183d3545160f1e9fed1e6",
      "filename": "guava/src/com/google/common/math/LongMath.java",
      "status": "modified",
      "additions": 33,
      "deletions": 37,
      "changes": 70,
      "blob_url": "https://github.com/google/guava/blob/1404ead2c8e86628e4a4f3cea9441d80d220bb96/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fmath%2FLongMath.java",
      "raw_url": "https://github.com/google/guava/raw/1404ead2c8e86628e4a4f3cea9441d80d220bb96/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fmath%2FLongMath.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fmath%2FLongMath.java?ref=1404ead2c8e86628e4a4f3cea9441d80d220bb96",
      "patch": "@@ -31,7 +31,6 @@\n import com.google.common.annotations.GwtCompatible;\n import com.google.common.annotations.GwtIncompatible;\n import com.google.common.annotations.VisibleForTesting;\n-import com.google.common.primitives.UnsignedLongs;\n \n import java.math.BigInteger;\n import java.math.RoundingMode;\n@@ -298,58 +297,55 @@ public static long sqrt(long x, RoundingMode mode) {\n \n   @GwtIncompatible(\"TODO\")\n   private static long sqrtFloor(long x) {\n-    long guess = (long) (Math.sqrt(x) + 0.5);\n+    long guess = (long) Math.sqrt(x);\n     /*\n-     * Theorem: |sqrt(x) - guess| <= 1.\n+     * Lemma: For all a, b, if |a - b| <= 1, then |floor(a) - floor(b)| <= 1.\n      *\n      * Proof:\n-     * Recall that the maximum error introduced by rounding a real number between\n-     * 0 and 2^32 to a double is 2^32 * 2^-52 = 2^-20.  Therefore the maximum error introduced by\n-     * rounding a real number between 0 and 2^32 to a double, adding 0.5, and truncating is\n-     * 0.5 + 2^-20 < 0.6.\n+     *           -1 <=        a - b        <= 1\n+     *        b - 1 <=          a          <= b + 1\n+     * floor(b - 1) <=       floor(a)      <= floor(b + 1)\n+     * floor(b) - 1 <=       floor(a)      <= floor(b) + 1\n+     *           -1 <= floor(a) - floor(b) <= 1\n      *\n+     * Theorem: |floor(sqrt(x)) - guess| <= 1.\n+     *\n+     * Proof:  By the lemma, it suffices to show that |sqrt(x) - Math.sqrt(x)| <= 1.\n      * We consider two cases: x <= 2^53 and x > 2^53.\n      *\n-     * If x <= 2^53, then x is exactly representable as a double, and Math.sqrt(x) is the exact\n-     * sqrt(x) rounded to a double. Therefore, the maximum error of (long) (Math.sqrt(x) + 0.5) is\n-     * 0.6 < 1.\n+     * If x <= 2^53, then x is exactly representable as a double, so the only error is in rounding\n+     * sqrt(x) to a double, which introduces at most 2^-52 relative error.  Since sqrt(x) < 2^27,\n+     * the absolute error is at most 2^(27-52) = 2^-25 < 1.\n      *\n-     * Otherwise, x > 2^53.  Note that |(double) x - x| <= 2^63/2^52 = 2^11, and\n-     * guess >= sqrt(2^53) > 2^26.\n-     * Since guess is obtained by rounding sqrt((double) x) to a double, adding 0.5, and\n-     * truncating,\n+     * Otherwise, x > 2^53.  The rounding error introduced by casting x to a double is at most\n+     * 2^63 * 2^-52 = 2^11.  Noting that sqrt(x) > 2^26,\n      *\n-     *         sqrt((double) x) - 0.6 <=  guess  <= sqrt((double) x) + 0.6\n-     *           sqrt(x - 2^11) - 0.6 <=  guess  <= sqrt(x + 2^11) + 0.6\n-     * (x - 2^11) - 1.2sqrt(x - 2^11) <= guess^2 <= (x + 2^11) + 1.2sqrt(x + 2^11) + 0.36\n-     * Recalling that for nonnegative a, b, sqrt(a + b) <= sqrt(a) + sqrt(b),\n-     *          x - 2^11 - 1.2sqrt(x) <= guess^2 <= x + 2^11 + 1.2sqrt(x) + 1.2sqrt(2^11) + 0.36\n-     *                                           <= x + 2^12 + 1.2sqrt(x)\n+     * sqrt(x) - 0.5 =  sqrt((sqrt(x) - 0.5)^2)\n+     *               =  sqrt(x - sqrt(x) + 0.25)\n+     *               <  sqrt(x - 2^26 + 0.25)\n+     *               <  sqrt(x - 2^11)\n+     *               <= sqrt((double) x)\n+     * sqrt(x) + 0.5 =  sqrt((sqrt(x) + 0.5)^2)\n+     *               =  sqrt(x + sqrt(x) + 0.25)\n+     *               >  sqrt(x + 2^26 + 0.25)\n+     *               >  sqrt(x + 2^11)\n+     *               >= sqrt((double) x)\n+     * sqrt(x) - 0.5 < sqrt((double) x) < sqrt(x) + 0.5\n      *\n-     * With these inequalities, we can show that\n+     * Math.sqrt((double) x) is obtained by rounding sqrt((double) x) to a double, increasing the\n+     * error by at most 2^-52 * sqrt(x) <= 2^(32 - 52) <= 2^-20, so clearly\n      *\n-     * (guess + 1)^2  = guess^2 + 2guess + 1\n-     *               >= x - 2^11 - 1.2sqrt(x) + 2sqrt(x - 2^11) - 0.2\n-     *               >= x - 2^11 - 1.2sqrt(x) + 2sqrt(x) - 2^7\n-     *               >= x - 2^12 + 0.8sqrt(x)\n-     *               >= x - 2^12 + 0.8 * 2^26\n-     *               >= x\n+     * sqrt(x) - 0.5 - 2^-20 <= Math.sqrt((double) x) <= sqrt(x) + 0.5 + 2^-20\n      *\n-     * (guess - 1)^2  = guess^2 - 2guess + 1\n-     *               <= x + 2^12 + 1.2sqrt(x) - 2sqrt(x - 2^11) + 2.2\n-     *               <= x + 2^12 + 1.2sqrt(x) - 2sqrt(x) + 2^7\n-     *               <= x + 2^13 - 0.8sqrt(x)\n-     *               <= x + 2^13 - 0.8 * 2^26\n-     *               <= x\n-     * so (guess - 1)^2 <=     x   <= (guess + 1)^2\n-     *        guess - 1 <= sqrt(x) <= guess + 1 as desired.\n+     * Therefore, |sqrt(x) - Math.sqrt((double) x)| <= 1, so\n+     *            |floor(sqrt(x)) - (long) Math.sqrt((double) x)| <= 1\n+     *            as desired.\n      */\n     long guessSquared = guess * guess;\n-    // guessSquared may overflow a signed long, but may safely be treated as unsigned.\n     if (x - guessSquared >= guess + guess + 1) {\n       // The condition is equivalent to x >= (guess + 1) * (guess + 1), but doesn't overflow.\n       guess++;\n-    } else if (UnsignedLongs.compare(x, guessSquared) < 0) {\n+    } else if (x < guessSquared) {\n       guess--;\n     }\n     return guess;",
      "parent_sha": "e69bcbf33dcbf5680d232c8f2193a9eb671ffc74"
    }
  },
  {
    "oid": "829613401de295d6c6be65ff08d67d02cbbdf5ab",
    "message": "Link to https://github.com/google/guava/wiki/Why-we-deprecated-Throwables.propagate\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=145114919",
    "date": "2017-01-20T20:52:11Z",
    "url": "https://github.com/google/guava/commit/829613401de295d6c6be65ff08d67d02cbbdf5ab",
    "details": {
      "sha": "ab140a1f90e4cc07f8cb2f7d2d62af0ee6ec682c",
      "filename": "guava/src/com/google/common/base/Throwables.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/google/guava/blob/829613401de295d6c6be65ff08d67d02cbbdf5ab/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FThrowables.java",
      "raw_url": "https://github.com/google/guava/raw/829613401de295d6c6be65ff08d67d02cbbdf5ab/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FThrowables.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FThrowables.java?ref=829613401de295d6c6be65ff08d67d02cbbdf5ab",
      "patch": "@@ -228,8 +228,9 @@ public static <X1 extends Throwable, X2 extends Throwable> void propagateIfPossi\n    * @return nothing will ever be returned; this return type is only for your convenience, as\n    *     illustrated in the example above\n    * @deprecated Use {@code throw e} or {@code throw new RuntimeException(e)} directly, or use a\n-   *     combination of {@link #throwIfUnchecked} and {@code throw new RuntimeException(e)}. This\n-   *     method is scheduled to be removed in July 2018.\n+   *     combination of {@link #throwIfUnchecked} and {@code throw new RuntimeException(e)}. For\n+   *     background on the deprecation, read <a href=\"https://goo.gl/Ivn2kc\">Why we deprecated\n+   *     {@code Throwables.propagate}</a>. This method is scheduled to be removed in July 2018.\n    */\n   @CanIgnoreReturnValue\n   @GwtIncompatible",
      "parent_sha": "c41557c3563e4b20c0b16680c304f26887b14283"
    }
  },
  {
    "oid": "ffa4945ff3e117385a5433c3353403d7c473c484",
    "message": "add pm\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26523300",
    "date": "2012-01-03T19:39:05Z",
    "url": "https://github.com/google/guava/commit/ffa4945ff3e117385a5433c3353403d7c473c484",
    "details": {
      "sha": "7a8686b2af30b4c979d037b55b6b1d2a076af6fc",
      "filename": "guava/src/com/google/common/net/TldPatterns.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/google/guava/blob/ffa4945ff3e117385a5433c3353403d7c473c484/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fnet%2FTldPatterns.java",
      "raw_url": "https://github.com/google/guava/raw/ffa4945ff3e117385a5433c3353403d7c473c484/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fnet%2FTldPatterns.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fnet%2FTldPatterns.java?ref=ffa4945ff3e117385a5433c3353403d7c473c484",
      "patch": "@@ -4087,7 +4087,8 @@ private TldPatterns() {\n       \"xxx\",\n       \"tp\",\n       \"yt\",\n-      \"ng\"\n+      \"ng\",\n+      \"pm\"\n   );\n \n   /**",
      "parent_sha": "471ed9841fe95cfa9cab826649dcb14772dceaae"
    }
  },
  {
    "oid": "221de73a17f4c5f2b913c5b0c640d54aa1000f94",
    "message": "Change on 2010/06/17 by cpovirk\n\n\tRename toStringBuilder() parameter from \"object\" to \"self\" in an attempt to discourage people from passing a String, Class literal, etc., e.g.,\n\tAdd a @param tag for it.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=29017\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@50 8138a162-5c33-11de-8abc-d1c337b90d21",
    "date": "2010-06-17T23:22:47Z",
    "url": "https://github.com/google/guava/commit/221de73a17f4c5f2b913c5b0c640d54aa1000f94",
    "details": {
      "sha": "55b480cc86cbb27887a7b51e48e8aed754829af2",
      "filename": "src/com/google/common/base/Objects.java",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/google/guava/blob/221de73a17f4c5f2b913c5b0c640d54aa1000f94/src%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FObjects.java",
      "raw_url": "https://github.com/google/guava/raw/221de73a17f4c5f2b913c5b0c640d54aa1000f94/src%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FObjects.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/src%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FObjects.java?ref=221de73a17f4c5f2b913c5b0c640d54aa1000f94",
      "patch": "@@ -90,10 +90,12 @@ public static int hashCode(Object... objects) {\n    * Assuming the values of {@code x} and {@code y} are 1 and 2,\n    * this code snippet returns the string <tt>\"ClassName{x=1, y=2}\"</tt>.\n    *\n+   * @param self the object to generate the string for (typically {@code this}),\n+   *        used only for its class name\n    * @since 2\n    */\n-  public static ToStringHelper toStringHelper(Object object) {\n-    return new ToStringHelper(object);\n+  public static ToStringHelper toStringHelper(Object self) {\n+    return new ToStringHelper(self);\n   }\n \n   /**",
      "parent_sha": "52aabe5b3834a5ec6ab4785a041c3162e127c8e4"
    }
  },
  {
    "oid": "7de3cbca3854ae0d9e9f7973a8f3cfe855a2407a",
    "message": "Javac 8 clean-up.\n\nJavac 8 places additional restrictions on generic type inference, and will\noccasionally report an inference error in situations where javac 7 would have\nbeen more permissive. This change allows compilation with javac 8 to succeed.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57309921",
    "date": "2013-11-26T21:34:02Z",
    "url": "https://github.com/google/guava/commit/7de3cbca3854ae0d9e9f7973a8f3cfe855a2407a",
    "details": {
      "sha": "5c7dd7bf735abf6ee15b6a1666dc8b94b196e645",
      "filename": "guava/src/com/google/common/collect/ImmutableSet.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/google/guava/blob/7de3cbca3854ae0d9e9f7973a8f3cfe855a2407a/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FImmutableSet.java",
      "raw_url": "https://github.com/google/guava/raw/7de3cbca3854ae0d9e9f7973a8f3cfe855a2407a/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FImmutableSet.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FImmutableSet.java?ref=7de3cbca3854ae0d9e9f7973a8f3cfe855a2407a",
      "patch": "@@ -369,7 +369,7 @@ public static <E> ImmutableSet<E> copyOf(Collection<? extends E> elements) {\n         return set;\n       }\n     } else if (elements instanceof EnumSet) {\n-      EnumSet<?> enumSet = EnumSet.copyOf((EnumSet<?>) elements);\n+      EnumSet<? extends Enum<?>> enumSet = EnumSet.copyOf((EnumSet<? extends Enum<?>>) elements);\n       @SuppressWarnings(\"unchecked\")\n       // immutable collections are safe for covariant casts\n       ImmutableSet<E> result = (ImmutableSet<E>) ImmutableEnumSet.asImmutable(enumSet);",
      "parent_sha": "76288a4e5b510494d0991b43fb697bf24dd5f66e"
    }
  },
  {
    "oid": "83e45164044f16362e0d6921b6254f3c85ff3fd5",
    "message": "Add some URI resolution tests to the simplifyPath tests.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24166215",
    "date": "2011-09-23T17:00:59Z",
    "url": "https://github.com/google/guava/commit/83e45164044f16362e0d6921b6254f3c85ff3fd5",
    "details": {
      "sha": "6816b867fd5a7ad36073ac41996dfa7b7e643978",
      "filename": "guava-tests/test/com/google/common/io/CleanPathTest.java",
      "status": "modified",
      "additions": 124,
      "deletions": 42,
      "changes": 166,
      "blob_url": "https://github.com/google/guava/blob/83e45164044f16362e0d6921b6254f3c85ff3fd5/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fio%2FCleanPathTest.java",
      "raw_url": "https://github.com/google/guava/raw/83e45164044f16362e0d6921b6254f3c85ff3fd5/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fio%2FCleanPathTest.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fio%2FCleanPathTest.java?ref=83e45164044f16362e0d6921b6254f3c85ff3fd5",
      "patch": "@@ -16,6 +16,8 @@\n \n package com.google.common.io;\n \n+import static com.google.common.io.Files.simplifyPath;\n+\n import junit.framework.TestCase;\n \n /**\n@@ -26,118 +28,198 @@\n public class CleanPathTest extends TestCase {\n \n   public void testSimplify() {\n-    assertEquals(\"\", Files.simplifyPath(\".\"));\n+    assertEquals(\"\", simplifyPath(\".\"));\n   }\n \n   public void testSimplify1() {\n-    assertEquals(\".\", Files.simplifyPath(\"\"));\n-    assertEquals(\" \", Files.simplifyPath(\" \"));\n+    assertEquals(\".\", simplifyPath(\"\"));\n+    assertEquals(\" \", simplifyPath(\" \"));\n   }\n \n   public void testSimplify2() {\n-    assertEquals(\"x\", Files.simplifyPath(\"x\"));\n+    assertEquals(\"x\", simplifyPath(\"x\"));\n   }\n \n   public void testSimplify3() {\n-    assertEquals(\"/a/b/c/d\", Files.simplifyPath(\"/a/b/c/d\"));\n+    assertEquals(\"/a/b/c/d\", simplifyPath(\"/a/b/c/d\"));\n   }\n \n   public void testSimplify4() {\n-    assertEquals(\"/a/b/c/d\", Files.simplifyPath(\"/a/b/c/d/\"));\n+    assertEquals(\"/a/b/c/d\", simplifyPath(\"/a/b/c/d/\"));\n   }\n \n   public void testSimplify5() {\n-    assertEquals(\"/a/b\", Files.simplifyPath(\"/a//b\"));\n+    assertEquals(\"/a/b\", simplifyPath(\"/a//b\"));\n   }\n \n   public void testSimplify6() {\n-    assertEquals(\"/a/b\", Files.simplifyPath(\"//a//b/\"));\n+    assertEquals(\"/a/b\", simplifyPath(\"//a//b/\"));\n   }\n \n   public void testSimplify7() {\n-    assertEquals(\"/\", Files.simplifyPath(\"/..\"));\n+    assertEquals(\"/\", simplifyPath(\"/..\"));\n   }\n \n   public void testSimplify8() {\n-    assertEquals(\"/\", Files.simplifyPath(\"/././././\"));\n+    assertEquals(\"/\", simplifyPath(\"/././././\"));\n   }\n \n   public void testSimplify9() {\n-    assertEquals(\"/a\", Files.simplifyPath(\"/a/b/..\"));\n+    assertEquals(\"/a\", simplifyPath(\"/a/b/..\"));\n   }\n \n   public void testSimplify10() {\n-    assertEquals(\"/\", Files.simplifyPath(\"/a/b/../../..\"));\n+    assertEquals(\"/\", simplifyPath(\"/a/b/../../..\"));\n   }\n \n   public void testSimplify11() {\n-    assertEquals(\"/\", Files.simplifyPath(\"//a//b/..////../..//\"));\n+    assertEquals(\"/\", simplifyPath(\"//a//b/..////../..//\"));\n   }\n \n   public void testSimplify12() {\n-    assertEquals(\"/x\", Files.simplifyPath(\"//a//../x//\"));\n+    assertEquals(\"/x\", simplifyPath(\"//a//../x//\"));\n   }\n   \n   public void testSimplify13() {\n-    assertEquals(\"../c\", Files.simplifyPath(\"a/b/../../../c\"));\n+    assertEquals(\"../c\", simplifyPath(\"a/b/../../../c\"));\n   }\n   \n   public void testSimplifyDotDot() {\n-    assertEquals(\"..\", Files.simplifyPath(\"..\"));\n+    assertEquals(\"..\", simplifyPath(\"..\"));\n   }\n \n   public void testSimplifyDotDotSlash() {\n-    assertEquals(\"..\", Files.simplifyPath(\"../\"));\n-    assertEquals(\"..\", Files.simplifyPath(\"a/../..\"));\n-    assertEquals(\"..\", Files.simplifyPath(\"a/../../\"));\n+    assertEquals(\"..\", simplifyPath(\"../\"));\n+    assertEquals(\"..\", simplifyPath(\"a/../..\"));\n+    assertEquals(\"..\", simplifyPath(\"a/../../\"));\n   }\n   \n   public void testSimplifyDotDots() {\n-    assertEquals(\"../..\", Files.simplifyPath(\"a/../../..\"));\n-    assertEquals(\"../../..\", Files.simplifyPath(\"a/../../../..\"));\n+    assertEquals(\"../..\", simplifyPath(\"a/../../..\"));\n+    assertEquals(\"../../..\", simplifyPath(\"a/../../../..\"));\n   }\n   \n   // b/4558855\n   public void testMadbotsBug() {\n-    assertEquals(\"../this\", Files.simplifyPath(\"../this\"));\n-    assertEquals(\"../this/is/ok\", Files.simplifyPath(\"../this/is/ok\"));\n-    assertEquals(\"../ok\", Files.simplifyPath(\"../this/../ok\"));\n+    assertEquals(\"../this\", simplifyPath(\"../this\"));\n+    assertEquals(\"../this/is/ok\", simplifyPath(\"../this/is/ok\"));\n+    assertEquals(\"../ok\", simplifyPath(\"../this/../ok\"));\n   }\n   \n   // https://code.google.com/p/guava-libraries/issues/detail?id=705\n   public void test705() {\n-    assertEquals(\"../b\", Files.simplifyPath(\"x/../../b\"));\n-    assertEquals(\"b\", Files.simplifyPath(\"x/../b\"));\n+    assertEquals(\"../b\", simplifyPath(\"x/../../b\"));\n+    assertEquals(\"b\", simplifyPath(\"x/../b\"));\n   }\n   \n   // https://code.google.com/p/guava-libraries/issues/detail?id=716\n   public void test716() {\n-    assertEquals(\"b\", Files.simplifyPath(\"./b\"));\n-    assertEquals(\"b\", Files.simplifyPath(\"./b/.\"));\n-    assertEquals(\"b\", Files.simplifyPath(\"././b/./.\"));\n-    assertEquals(\"b\", Files.simplifyPath(\"././b\"));\n-    assertEquals(\"a/b\", Files.simplifyPath(\"./a/b\"));\n+    assertEquals(\"b\", simplifyPath(\"./b\"));\n+    assertEquals(\"b\", simplifyPath(\"./b/.\"));\n+    assertEquals(\"b\", simplifyPath(\"././b/./.\"));\n+    assertEquals(\"b\", simplifyPath(\"././b\"));\n+    assertEquals(\"a/b\", simplifyPath(\"./a/b\"));\n   }\n   \n   public void testHiddenFiles() {\n-    assertEquals(\".b\", Files.simplifyPath(\".b\"));\n-    assertEquals(\".b\", Files.simplifyPath(\"./.b\"));\n-    assertEquals(\".metadata/b\", Files.simplifyPath(\".metadata/b\"));\n-    assertEquals(\".metadata/b\", Files.simplifyPath(\"./.metadata/b\"));\n+    assertEquals(\".b\", simplifyPath(\".b\"));\n+    assertEquals(\".b\", simplifyPath(\"./.b\"));\n+    assertEquals(\".metadata/b\", simplifyPath(\".metadata/b\"));\n+    assertEquals(\".metadata/b\", simplifyPath(\"./.metadata/b\"));\n   }\n   \n   // https://code.google.com/p/guava-libraries/issues/detail?id=716\n   public void testMultipleDotFilenames() {\n-    assertEquals(\"..a\", Files.simplifyPath(\"..a\"));\n-    assertEquals(\"/..a\", Files.simplifyPath(\"/..a\"));\n-    assertEquals(\"/..a/..b\", Files.simplifyPath(\"/..a/..b\"));\n-    assertEquals(\"/.....a/..b\", Files.simplifyPath(\"/.....a/..b\"));\n-    assertEquals(\"..../....\", Files.simplifyPath(\"..../....\"));\n-    assertEquals(\"..a../..b..\", Files.simplifyPath(\"..a../..b..\"));\n+    assertEquals(\"..a\", simplifyPath(\"..a\"));\n+    assertEquals(\"/..a\", simplifyPath(\"/..a\"));\n+    assertEquals(\"/..a/..b\", simplifyPath(\"/..a/..b\"));\n+    assertEquals(\"/.....a/..b\", simplifyPath(\"/.....a/..b\"));\n+    assertEquals(\"..../....\", simplifyPath(\"..../....\"));\n+    assertEquals(\"..a../..b..\", simplifyPath(\"..a../..b..\"));\n   }\n \n   public void testSlashDot() {\n-    assertEquals(\"/\", Files.simplifyPath(\"/.\"));    \n+    assertEquals(\"/\", simplifyPath(\"/.\"));    \n   }\n+\n+  /*\n+   * We co-opt some URI resolution tests for our purposes.\n+   * Some of the tests have queries and anchors that are a little silly here.\n+   */\n   \n+  /** http://gbiv.com/protocols/uri/rfc/rfc2396.html#rfc.section.C.1 */\n+  public void testRfc2396Normal() {\n+    assertEquals(\"/a/b/c/g\", simplifyPath(\"/a/b/c/g\"));\n+    assertEquals(\"/a/b/c/g\", simplifyPath(\"/a/b/c/./g\"));\n+    assertEquals(\"/a/b/c/g\", simplifyPath(\"/a/b/c/g/\"));\n+\n+    assertEquals(\"/a/b/c/g?y\", simplifyPath(\"/a/b/c/g?y\"));\n+    assertEquals(\"/a/b/c/g#s\", simplifyPath(\"/a/b/c/g#s\"));\n+    assertEquals(\"/a/b/c/g?y#s\", simplifyPath(\"/a/b/c/g?y#s\"));\n+    assertEquals(\"/a/b/c/;x\", simplifyPath(\"/a/b/c/;x\"));\n+    assertEquals(\"/a/b/c/g;x\", simplifyPath(\"/a/b/c/g;x\"));\n+    assertEquals(\"/a/b/c/g;x?y#s\", simplifyPath(\"/a/b/c/g;x?y#s\"));\n+    assertEquals(\"/a/b/c\", simplifyPath(\"/a/b/c/.\"));\n+    assertEquals(\"/a/b/c\", simplifyPath(\"/a/b/c/./\"));\n+    assertEquals(\"/a/b\", simplifyPath(\"/a/b/c/..\"));\n+    assertEquals(\"/a/b\", simplifyPath(\"/a/b/c/../\"));\n+    assertEquals(\"/a/b/g\", simplifyPath(\"/a/b/c/../g\"));\n+    assertEquals(\"/a\", simplifyPath(\"/a/b/c/../..\"));\n+    assertEquals(\"/a\", simplifyPath(\"/a/b/c/../../\"));\n+    assertEquals(\"/a/g\", simplifyPath(\"/a/b/c/../../g\"));\n+  }\n+\n+  /** http://gbiv.com/protocols/uri/rfc/rfc2396.html#rfc.section.C.2 */\n+  public void testRfc2396Abnormal() {\n+    assertEquals(\"/a/b/c/g.\", simplifyPath(\"/a/b/c/g.\"));\n+    assertEquals(\"/a/b/c/.g\", simplifyPath(\"/a/b/c/.g\"));\n+    assertEquals(\"/a/b/c/g..\", simplifyPath(\"/a/b/c/g..\"));\n+    assertEquals(\"/a/b/c/..g\", simplifyPath(\"/a/b/c/..g\"));\n+    assertEquals(\"/a/b/g\", simplifyPath(\"/a/b/c/./../g\"));\n+    assertEquals(\"/a/b/c/g\", simplifyPath(\"/a/b/c/./g/.\"));\n+    assertEquals(\"/a/b/c/g/h\", simplifyPath(\"/a/b/c/g/./h\"));\n+    assertEquals(\"/a/b/c/h\", simplifyPath(\"/a/b/c/g/../h\"));\n+    assertEquals(\"/a/b/c/g;x=1/y\", simplifyPath(\"/a/b/c/g;x=1/./y\"));\n+    assertEquals(\"/a/b/c/y\", simplifyPath(\"/a/b/c/g;x=1/../y\"));\n+  }\n+\n+  /** http://gbiv.com/protocols/uri/rfc/rfc3986.html#relative-normal */\n+  public void testRfc3986Normal() {\n+    assertEquals(\"/a/b/c/g\", simplifyPath(\"/a/b/c/g\"));\n+    assertEquals(\"/a/b/c/g\", simplifyPath(\"/a/b/c/./g\"));\n+    assertEquals(\"/a/b/c/g\", simplifyPath(\"/a/b/c/g/\"));\n+\n+    assertEquals(\"/a/b/c/g?y\", simplifyPath(\"/a/b/c/g?y\"));\n+    assertEquals(\"/a/b/c/g#s\", simplifyPath(\"/a/b/c/g#s\"));\n+    assertEquals(\"/a/b/c/g?y#s\", simplifyPath(\"/a/b/c/g?y#s\"));\n+    assertEquals(\"/a/b/c/;x\", simplifyPath(\"/a/b/c/;x\"));\n+    assertEquals(\"/a/b/c/g;x\", simplifyPath(\"/a/b/c/g;x\"));\n+    assertEquals(\"/a/b/c/g;x?y#s\", simplifyPath(\"/a/b/c/g;x?y#s\"));\n+\n+    assertEquals(\"/a/b/c\", simplifyPath(\"/a/b/c/.\"));\n+    assertEquals(\"/a/b/c\", simplifyPath(\"/a/b/c/./\"));\n+    assertEquals(\"/a/b\", simplifyPath(\"/a/b/c/..\"));\n+    assertEquals(\"/a/b\", simplifyPath(\"/a/b/c/../\"));\n+    assertEquals(\"/a/b/g\", simplifyPath(\"/a/b/c/../g\"));\n+    assertEquals(\"/a\", simplifyPath(\"/a/b/c/../..\"));\n+    assertEquals(\"/a\", simplifyPath(\"/a/b/c/../../\"));\n+    assertEquals(\"/a/g\", simplifyPath(\"/a/b/c/../../g\"));\n+  }\n+\n+  /** http://gbiv.com/protocols/uri/rfc/rfc3986.html#relative-abnormal */\n+  public void testRfc3986Abnormal() {\n+    assertEquals(\"/g\", simplifyPath(\"/a/b/c/../../../g\"));\n+    assertEquals(\"/g\", simplifyPath(\"/a/b/c/../../../../g\"));\n+\n+    assertEquals(\"/a/b/c/g.\", simplifyPath(\"/a/b/c/g.\"));\n+    assertEquals(\"/a/b/c/.g\", simplifyPath(\"/a/b/c/.g\"));\n+    assertEquals(\"/a/b/c/g..\", simplifyPath(\"/a/b/c/g..\"));\n+    assertEquals(\"/a/b/c/..g\", simplifyPath(\"/a/b/c/..g\"));\n+    assertEquals(\"/a/b/g\", simplifyPath(\"/a/b/c/./../g\"));\n+    assertEquals(\"/a/b/c/g\", simplifyPath(\"/a/b/c/./g/.\"));\n+    assertEquals(\"/a/b/c/g/h\", simplifyPath(\"/a/b/c/g/./h\"));\n+    assertEquals(\"/a/b/c/h\", simplifyPath(\"/a/b/c/g/../h\"));\n+    assertEquals(\"/a/b/c/g;x=1/y\", simplifyPath(\"/a/b/c/g;x=1/./y\"));\n+    assertEquals(\"/a/b/c/y\", simplifyPath(\"/a/b/c/g;x=1/../y\"));\n+  }\n }",
      "parent_sha": "3b89bebb16858aa352b4018c54af3c2aba8902db"
    }
  },
  {
    "oid": "7086f2ee96caee74013128bfa80b9fcb21b6a01a",
    "message": "Make iterating through predecessors() and successors() more efficient on directed graphs. Avoids doing a hash lookup for every element in the table. A rough benchmark shows that iteration takes slightly less than half the previous time.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=122853102",
    "date": "2016-05-23T13:58:14Z",
    "url": "https://github.com/google/guava/commit/7086f2ee96caee74013128bfa80b9fcb21b6a01a",
    "details": {
      "sha": "994cbe6e99e0d6ff58c8d881949e4085c59efb5e",
      "filename": "guava/src/com/google/common/graph/DirectedNodeAdjacencies.java",
      "status": "modified",
      "additions": 32,
      "deletions": 20,
      "changes": 52,
      "blob_url": "https://github.com/google/guava/blob/7086f2ee96caee74013128bfa80b9fcb21b6a01a/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fgraph%2FDirectedNodeAdjacencies.java",
      "raw_url": "https://github.com/google/guava/raw/7086f2ee96caee74013128bfa80b9fcb21b6a01a/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fgraph%2FDirectedNodeAdjacencies.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fgraph%2FDirectedNodeAdjacencies.java?ref=7086f2ee96caee74013128bfa80b9fcb21b6a01a",
      "patch": "@@ -20,17 +20,19 @@\n import static com.google.common.base.Preconditions.checkState;\n import static com.google.common.graph.GraphConstants.EXPECTED_DEGREE;\n \n-import com.google.common.base.Predicate;\n+import com.google.common.collect.AbstractIterator;\n import com.google.common.collect.ImmutableMap;\n-import com.google.common.collect.Iterators;\n import com.google.common.collect.Maps;\n \n import java.util.AbstractSet;\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.Map;\n+import java.util.Map.Entry;\n import java.util.Set;\n \n+import javax.annotation.Nullable;\n+\n /**\n  * A class representing an origin node's adjacent nodes in a directed graph.\n  *\n@@ -74,16 +76,22 @@ public Set<N> adjacentNodes() {\n \n   @Override\n   public Set<N> predecessors() {\n-    // Don't simply use Sets.filter() or we'll end up with O(N) instead of O(1) size().\n     return new AbstractSet<N>() {\n       @Override\n       public Iterator<N> iterator() {\n-        return Iterators.filter(adjacentNodes().iterator(), new Predicate<N>() {\n+        final Iterator<Entry<N, Adjacency>> entries = adjacentNodes.entrySet().iterator();\n+        return new AbstractIterator<N>() {\n           @Override\n-          public boolean apply(N node) {\n-            return isPredecessor(node);\n+          protected N computeNext() {\n+            while (entries.hasNext()) {\n+              Entry<N, Adjacency> entry = entries.next();\n+              if (isPredecessor(entry.getValue())) {\n+                return entry.getKey();\n+              }\n+            }\n+            return endOfData();\n           }\n-        });\n+        };\n       }\n \n       @Override\n@@ -92,24 +100,30 @@ public int size() {\n       }\n \n       @Override\n-      public boolean contains(Object o) {\n-        return isPredecessor(o);\n+      public boolean contains(Object obj) {\n+        return isPredecessor(adjacentNodes.get(obj));\n       }\n     };\n   }\n \n   @Override\n   public Set<N> successors() {\n-    // Don't simply use Sets.filter() or we'll end up with O(N) instead of O(1) size().\n     return new AbstractSet<N>() {\n       @Override\n       public Iterator<N> iterator() {\n-        return Iterators.filter(adjacentNodes().iterator(), new Predicate<N>() {\n+        final Iterator<Entry<N, Adjacency>> entries = adjacentNodes.entrySet().iterator();\n+        return new AbstractIterator<N>() {\n           @Override\n-          public boolean apply(N node) {\n-            return isSuccessor(node);\n+          protected N computeNext() {\n+            while (entries.hasNext()) {\n+              Entry<N, Adjacency> entry = entries.next();\n+              if (isSuccessor(entry.getValue())) {\n+                return entry.getKey();\n+              }\n+            }\n+            return endOfData();\n           }\n-        });\n+        };\n       }\n \n       @Override\n@@ -118,8 +132,8 @@ public int size() {\n       }\n \n       @Override\n-      public boolean contains(Object o) {\n-        return isSuccessor(o);\n+      public boolean contains(Object obj) {\n+        return isSuccessor(adjacentNodes.get(obj));\n       }\n     };\n   }\n@@ -182,13 +196,11 @@ public void addSuccessor(N node) {\n     checkState(successorCount >= 1);\n   }\n \n-  private boolean isPredecessor(Object node) {\n-    Adjacency adjacency = adjacentNodes.get(node);\n+  private static boolean isPredecessor(@Nullable Adjacency adjacency) {\n     return (adjacency == Adjacency.PRED || adjacency == Adjacency.BOTH);\n   }\n \n-  private boolean isSuccessor(Object node) {\n-    Adjacency adjacency = adjacentNodes.get(node);\n+  private static boolean isSuccessor(@Nullable Adjacency adjacency) {\n     return (adjacency == Adjacency.SUCC || adjacency == Adjacency.BOTH);\n   }\n }",
      "parent_sha": "b09e955cf24482736cd6559786cfc10120ab867c"
    }
  },
  {
    "oid": "7e9e59b1074eb585bc39fc1c4341c090f69f3ebc",
    "message": "Some javadoc tweaking to NullPointerTester. Please comment away, I have absolutely no confidence in my wordsmithing\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29029545",
    "date": "2012-04-06T15:45:46Z",
    "url": "https://github.com/google/guava/commit/7e9e59b1074eb585bc39fc1c4341c090f69f3ebc",
    "details": {
      "sha": "eabf8ecc62ec66c833e72860eb4668889ce3f7b3",
      "filename": "guava-testlib/src/com/google/common/testing/NullPointerTester.java",
      "status": "modified",
      "additions": 12,
      "deletions": 4,
      "changes": 16,
      "blob_url": "https://github.com/google/guava/blob/7e9e59b1074eb585bc39fc1c4341c090f69f3ebc/guava-testlib%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Ftesting%2FNullPointerTester.java",
      "raw_url": "https://github.com/google/guava/raw/7e9e59b1074eb585bc39fc1c4341c090f69f3ebc/guava-testlib%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Ftesting%2FNullPointerTester.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava-testlib%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Ftesting%2FNullPointerTester.java?ref=7e9e59b1074eb585bc39fc1c4341c090f69f3ebc",
      "patch": "@@ -47,10 +47,18 @@\n import javax.annotation.Nullable;\n \n /**\n- * A test utility that verifies that your methods throw {@link\n- * NullPointerException} or {@link UnsupportedOperationException} whenever any\n- * of their parameters are null. To use it, you must first provide valid default\n- * values for the parameter types used by the class.\n+ * A test utility that verifies that your methods and constructors throw {@link\n+ * NullPointerException} or {@link UnsupportedOperationException} whenever null\n+ * is passed to a parameter that isn't annotated with {@link Nullable}.\n+ *\n+ * <p>The tested methods and constructors are invoked -- each time with one\n+ * parameter being null and the rest not null -- and the test fails if no\n+ * expected exception is thrown. {@code NullPointerTester} uses best effort to\n+ * pick non-null default values for many common JDK and Guava types, and also\n+ * for interfaces and public classes that have public parameter-less\n+ * constructors. When the non-null default value for a particular parameter type\n+ * cannot be provided by {@code NullPointerTester}, the caller can provide a\n+ * custom non-null default value for the parameter type via {@link #setDefault}.\n  *\n  * @author Kevin Bourrillion\n  * @since 10.0",
      "parent_sha": "3cf8d5fab0278aa203c31908e2c6fc5eefea145c"
    }
  },
  {
    "oid": "6b57b0fac9f798a0f8a6d48f1c53f04db47112b1",
    "message": "\nAllow using @GwtIncompatible on constructors.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1554\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@353 8138a162-5c33-11de-8abc-d1c337b90d21",
    "date": "2011-04-26T14:52:01Z",
    "url": "https://github.com/google/guava/commit/6b57b0fac9f798a0f8a6d48f1c53f04db47112b1",
    "details": {
      "sha": "5b59566a957171e0579ad19a61e854b43af97c08",
      "filename": "guava/src/com/google/common/annotations/GwtIncompatible.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/google/guava/blob/6b57b0fac9f798a0f8a6d48f1c53f04db47112b1/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fannotations%2FGwtIncompatible.java",
      "raw_url": "https://github.com/google/guava/raw/6b57b0fac9f798a0f8a6d48f1c53f04db47112b1/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fannotations%2FGwtIncompatible.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fannotations%2FGwtIncompatible.java?ref=6b57b0fac9f798a0f8a6d48f1c53f04db47112b1",
      "patch": "@@ -36,7 +36,7 @@\n  * @author Charles Fry\n  */\n @Retention(RetentionPolicy.CLASS)\n-@Target({ ElementType.TYPE, ElementType.METHOD, ElementType.FIELD })\n+@Target({ ElementType.TYPE, ElementType.METHOD, ElementType.CONSTRUCTOR, ElementType.FIELD })\n @Documented\n @GwtCompatible\n public @interface GwtIncompatible {",
      "parent_sha": "ef2231dbccbafe2b1ed1b49c2a190b550b09e7df"
    }
  },
  {
    "oid": "548f8698683cb282d8a8d5f5a140af63562cc740",
    "message": "Minor simplifications to the ArrayTable implementation.\nFrom Louis: http://codereview.appspot.com/6057048/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29492178",
    "date": "2012-04-23T20:33:46Z",
    "url": "https://github.com/google/guava/commit/548f8698683cb282d8a8d5f5a140af63562cc740",
    "details": {
      "sha": "6cf4a5fb1dc6de836b4518c4c86868c9fe6f2ae3",
      "filename": "guava/src/com/google/common/collect/ArrayTable.java",
      "status": "modified",
      "additions": 169,
      "deletions": 190,
      "changes": 359,
      "blob_url": "https://github.com/google/guava/blob/548f8698683cb282d8a8d5f5a140af63562cc740/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FArrayTable.java",
      "raw_url": "https://github.com/google/guava/raw/548f8698683cb282d8a8d5f5a140af63562cc740/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FArrayTable.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FArrayTable.java?ref=548f8698683cb282d8a8d5f5a140af63562cc740",
      "patch": "@@ -25,13 +25,12 @@\n import java.io.Serializable;\n import java.lang.reflect.Array;\n import java.util.AbstractCollection;\n-import java.util.AbstractMap;\n import java.util.AbstractSet;\n import java.util.Arrays;\n import java.util.Collection;\n import java.util.Iterator;\n+import java.util.List;\n import java.util.Map;\n-import java.util.Map.Entry;\n import java.util.Set;\n \n import javax.annotation.Nullable;\n@@ -73,7 +72,7 @@\n  * visible, synchronize access to the table. Unlike other {@code Table}\n  * implementations, synchronization is unnecessary between a thread that writes\n  * to one cell and a thread that reads from another.\n- * \n+ *\n  * <p>See the Guava User Guide article on <a href=\n  * \"http://code.google.com/p/guava-libraries/wiki/NewCollectionTypesExplained#Table\">\n  * {@code Table}</a>.\n@@ -159,24 +158,23 @@ private ArrayTable(Iterable<? extends R> rowKeys,\n      * columnKeys is empty but rowKeys isn't, the table is empty but\n      * containsRow() can return true and rowKeySet() isn't empty.\n      */\n-    ImmutableMap.Builder<R, Integer> rowBuilder = ImmutableMap.builder();\n-    for (int i = 0; i < rowList.size(); i++) {\n-      rowBuilder.put(rowList.get(i), i);\n-    }\n-    rowKeyToIndex = rowBuilder.build();\n-\n-    ImmutableMap.Builder<C, Integer> columnBuilder = ImmutableMap.builder();\n-    for (int i = 0; i < columnList.size(); i++) {\n-      columnBuilder.put(columnList.get(i), i);\n-    }\n-    columnKeyToIndex = columnBuilder.build();\n+    rowKeyToIndex = index(rowList);\n+    columnKeyToIndex = index(columnList);\n \n     @SuppressWarnings(\"unchecked\")\n     V[][] tmpArray\n         = (V[][]) new Object[rowList.size()][columnList.size()];\n     array = tmpArray;\n   }\n \n+  private static <E> ImmutableMap<E, Integer> index(List<E> list) {\n+    ImmutableMap.Builder<E, Integer> columnBuilder = ImmutableMap.builder();\n+    for (int i = 0; i < list.size(); i++) {\n+      columnBuilder.put(list.get(i), i);\n+    }\n+    return columnBuilder.build();\n+  }\n+\n   private ArrayTable(Table<R, C, V> table) {\n     this(table.rowKeySet(), table.columnKeySet());\n     putAll(table);\n@@ -195,6 +193,109 @@ private ArrayTable(ArrayTable<R, C, V> table) {\n     }\n   }\n \n+  private abstract static class ArrayMap<K, V> extends Maps.ImprovedAbstractMap<K, V> {\n+    private final ImmutableMap<K, Integer> keyIndex;\n+\n+    private ArrayMap(ImmutableMap<K, Integer> keyIndex) {\n+      this.keyIndex = keyIndex;\n+    }\n+\n+    @Override\n+    public Set<K> keySet() {\n+      return keyIndex.keySet();\n+    }\n+\n+    K getKey(int index) {\n+      return keyIndex.keySet().asList().get(index);\n+    }\n+\n+    abstract String getKeyRole();\n+\n+    @Nullable abstract V getValue(int index);\n+\n+    @Nullable abstract V setValue(int index, V newValue);\n+\n+    @Override\n+    public int size() {\n+      return keyIndex.size();\n+    }\n+\n+    @Override\n+    public boolean isEmpty() {\n+      return keyIndex.isEmpty();\n+    }\n+\n+    @Override\n+    protected Set<Entry<K, V>> createEntrySet() {\n+      return new Maps.EntrySet<K, V>() {\n+        @Override\n+        Map<K, V> map() {\n+          return ArrayMap.this;\n+        }\n+\n+        @Override\n+        public Iterator<Entry<K, V>> iterator() {\n+          return new AbstractIndexedListIterator<Entry<K, V>>(size()) {\n+            @Override\n+            protected Entry<K, V> get(final int index) {\n+              return new AbstractMapEntry<K, V>(){\n+                @Override\n+                public K getKey() {\n+                  return ArrayMap.this.getKey(index);\n+                }\n+\n+                @Override\n+                public V getValue() {\n+                  return ArrayMap.this.getValue(index);\n+                }\n+\n+                @Override\n+                public V setValue(V value) {\n+                  return ArrayMap.this.setValue(index, value);\n+                }\n+              };\n+            }\n+          };\n+        }\n+      };\n+    }\n+\n+    @Override\n+    public boolean containsKey(@Nullable Object key) {\n+      return keyIndex.containsKey(key);\n+    }\n+\n+    @Override\n+    public V get(@Nullable Object key) {\n+      Integer index = keyIndex.get(key);\n+      if (index == null) {\n+        return null;\n+      } else {\n+        return getValue(index);\n+      }\n+    }\n+\n+    @Override\n+    public V put(K key, V value) {\n+      Integer index = keyIndex.get(key);\n+      if (index == null) {\n+        throw new IllegalArgumentException(\n+            getKeyRole() + \" \" + key + \" not in \" + keyIndex.keySet());\n+      }\n+      return setValue(index, value);\n+    }\n+\n+    @Override\n+    public V remove(Object key) {\n+      throw new UnsupportedOperationException();\n+    }\n+\n+    @Override\n+    public void clear() {\n+      throw new UnsupportedOperationException();\n+    }\n+  }\n+\n   /**\n    * Returns, as an immutable list, the row keys provided when the table was\n    * constructed, including those that are mapped to null values only.\n@@ -335,10 +436,6 @@ public boolean containsValue(@Nullable Object value) {\n   public V get(@Nullable Object rowKey, @Nullable Object columnKey) {\n     Integer rowIndex = rowKeyToIndex.get(rowKey);\n     Integer columnIndex = columnKeyToIndex.get(columnKey);\n-    return getIndexed(rowIndex, columnIndex);\n-  }\n-\n-  private V getIndexed(Integer rowIndex, Integer columnIndex) {\n     return (rowIndex == null || columnIndex == null)\n         ? null : array[rowIndex][columnIndex];\n   }\n@@ -534,68 +631,27 @@ public Map<R, V> column(C columnKey) {\n         ? ImmutableMap.<R, V>of() : new Column(columnIndex);\n   }\n \n-  private class Column extends AbstractMap<R, V> {\n+  private class Column extends ArrayMap<R, V> {\n     final int columnIndex;\n \n     Column(int columnIndex) {\n+      super(rowKeyToIndex);\n       this.columnIndex = columnIndex;\n     }\n \n-    ColumnEntrySet entrySet;\n-\n-    @Override public Set<Entry<R, V>> entrySet() {\n-      ColumnEntrySet set = entrySet;\n-      return (set == null) ? entrySet = new ColumnEntrySet(columnIndex) : set;\n-    }\n-\n-    @Override public V get(Object rowKey) {\n-      Integer rowIndex = rowKeyToIndex.get(rowKey);\n-      return getIndexed(rowIndex, columnIndex);\n-    }\n-\n-    @Override public boolean containsKey(Object rowKey) {\n-      return rowKeyToIndex.containsKey(rowKey);\n-    }\n-\n-    @Override public V put(R rowKey, V value) {\n-      checkNotNull(rowKey);\n-      Integer rowIndex = rowKeyToIndex.get(rowKey);\n-      checkArgument(rowIndex != null, \"Row %s not in %s\", rowKey, rowList);\n-      return set(rowIndex, columnIndex, value);\n-    }\n-\n-    @Override public Set<R> keySet() {\n-      return rowKeySet();\n-    }\n-  }\n-\n-  private class ColumnEntrySet extends AbstractSet<Entry<R, V>> {\n-    final int columnIndex;\n-\n-    ColumnEntrySet(int columnIndex) {\n-      this.columnIndex = columnIndex;\n+    @Override\n+    String getKeyRole() {\n+      return \"Row\";\n     }\n \n-    @Override public Iterator<Entry<R, V>> iterator() {\n-      return new AbstractIndexedListIterator<Entry<R, V>>(size()) {\n-        @Override protected Entry<R, V> get(final int rowIndex) {\n-          return new AbstractMapEntry<R, V>() {\n-            @Override public R getKey() {\n-              return rowList.get(rowIndex);\n-            }\n-            @Override public V getValue() {\n-              return array[rowIndex][columnIndex];\n-            }\n-            @Override public V setValue(V value) {\n-              return ArrayTable.this.set(rowIndex, columnIndex, value);\n-            }\n-          };\n-        }\n-      };\n+    @Override\n+    V getValue(int index) {\n+      return at(index, columnIndex);\n     }\n \n-    @Override public int size() {\n-      return rowList.size();\n+    @Override\n+    V setValue(int index, V newValue) {\n+      return set(index, columnIndex, newValue);\n     }\n   }\n \n@@ -618,44 +674,29 @@ public Map<C, Map<R, V>> columnMap() {\n     return (map == null) ? columnMap = new ColumnMap() : map;\n   }\n \n-  private class ColumnMap extends AbstractMap<C, Map<R, V>> {\n-    transient ColumnMapEntrySet entrySet;\n-\n-    @Override public Set<Entry<C, Map<R, V>>> entrySet() {\n-      ColumnMapEntrySet set = entrySet;\n-      return (set == null) ? entrySet = new ColumnMapEntrySet() : set;\n-    }\n-\n-    @Override public Map<R, V> get(Object columnKey) {\n-      Integer columnIndex = columnKeyToIndex.get(columnKey);\n-      return (columnIndex == null) ? null : new Column(columnIndex);\n+  private class ColumnMap extends ArrayMap<C, Map<R, V>> {\n+    private ColumnMap() {\n+      super(columnKeyToIndex);\n     }\n \n-    @Override public boolean containsKey(Object columnKey) {\n-      return containsColumn(columnKey);\n+    @Override\n+    String getKeyRole() {\n+      return \"Column\";\n     }\n \n-    @Override public Set<C> keySet() {\n-      return columnKeySet();\n+    @Override\n+    Map<R, V> getValue(int index) {\n+      return new Column(index);\n     }\n \n-    @Override public Map<R, V> remove(Object columnKey) {\n+    @Override\n+    Map<R, V> setValue(int index, Map<R, V> newValue) {\n       throw new UnsupportedOperationException();\n     }\n-  }\n-\n-  private class ColumnMapEntrySet extends AbstractSet<Entry<C, Map<R, V>>> {\n-    @Override public Iterator<Entry<C, Map<R, V>>> iterator() {\n-      return new AbstractIndexedListIterator<Entry<C, Map<R, V>>>(size()) {\n-        @Override protected Entry<C, Map<R, V>> get(int index) {\n-          return Maps.<C, Map<R, V>>immutableEntry(columnList.get(index),\n-              new Column(index));\n-        }\n-      };\n-    }\n \n-    @Override public int size() {\n-      return columnList.size();\n+    @Override\n+    public Map<R, V> put(C key, Map<R, V> value) {\n+      throw new UnsupportedOperationException();\n     }\n   }\n \n@@ -679,69 +720,27 @@ public Map<C, V> row(R rowKey) {\n     return (rowIndex == null) ? ImmutableMap.<C, V>of() : new Row(rowIndex);\n   }\n \n-  private class Row extends AbstractMap<C, V> {\n+  private class Row extends ArrayMap<C, V> {\n     final int rowIndex;\n \n     Row(int rowIndex) {\n+      super(columnKeyToIndex);\n       this.rowIndex = rowIndex;\n     }\n \n-    RowEntrySet entrySet;\n-\n-    @Override public Set<Entry<C, V>> entrySet() {\n-      RowEntrySet set = entrySet;\n-      return (set == null) ? entrySet = new RowEntrySet(rowIndex) : set;\n-    }\n-\n-    @Override public V get(Object columnKey) {\n-      Integer columnIndex = columnKeyToIndex.get(columnKey);\n-      return getIndexed(rowIndex, columnIndex);\n+    @Override\n+    String getKeyRole() {\n+      return \"Column\";\n     }\n \n-    @Override public boolean containsKey(Object columnKey) {\n-      return containsColumn(columnKey);\n+    @Override\n+    V getValue(int index) {\n+      return at(rowIndex, index);\n     }\n \n-    @Override public V put(C columnKey, V value) {\n-      checkNotNull(columnKey);\n-      Integer columnIndex = columnKeyToIndex.get(columnKey);\n-      checkArgument(columnIndex != null,\n-          \"Column %s not in %s\", columnKey, columnList);\n-      return set(rowIndex, columnIndex, value);\n-    }\n-\n-    @Override public Set<C> keySet() {\n-      return columnKeySet();\n-    }\n-  }\n-\n-  private class RowEntrySet extends AbstractSet<Entry<C, V>> {\n-    final int rowIndex;\n-\n-    RowEntrySet(int rowIndex) {\n-      this.rowIndex = rowIndex;\n-    }\n-\n-    @Override public Iterator<Entry<C, V>> iterator() {\n-      return new AbstractIndexedListIterator<Entry<C, V>>(size()) {\n-        @Override protected Entry<C, V> get(final int columnIndex) {\n-          return new AbstractMapEntry<C, V>() {\n-            @Override public C getKey() {\n-              return columnList.get(columnIndex);\n-            }\n-            @Override public V getValue() {\n-              return array[rowIndex][columnIndex];\n-            }\n-            @Override public V setValue(V value) {\n-              return ArrayTable.this.set(rowIndex, columnIndex, value);\n-            }\n-          };\n-        }\n-      };\n-    }\n-\n-    @Override public int size() {\n-      return columnList.size();\n+    @Override\n+    V setValue(int index, V newValue) {\n+      return set(rowIndex, index, newValue);\n     }\n   }\n \n@@ -764,44 +763,29 @@ public Map<R, Map<C, V>> rowMap() {\n     return (map == null) ? rowMap = new RowMap() : map;\n   }\n \n-  private class RowMap extends AbstractMap<R, Map<C, V>> {\n-    transient RowMapEntrySet entrySet;\n-\n-    @Override public Set<Entry<R, Map<C, V>>> entrySet() {\n-      RowMapEntrySet set = entrySet;\n-      return (set == null) ? entrySet = new RowMapEntrySet() : set;\n+  private class RowMap extends ArrayMap<R, Map<C, V>> {\n+    private RowMap() {\n+      super(rowKeyToIndex);\n     }\n \n-    @Override public Map<C, V> get(Object rowKey) {\n-      Integer rowIndex = rowKeyToIndex.get(rowKey);\n-      return (rowIndex == null) ? null : new Row(rowIndex);\n+    @Override\n+    String getKeyRole() {\n+      return \"Row\";\n     }\n \n-    @Override public boolean containsKey(Object rowKey) {\n-      return containsRow(rowKey);\n+    @Override\n+    Map<C, V> getValue(int index) {\n+      return new Row(index);\n     }\n \n-    @Override public Set<R> keySet() {\n-      return rowKeySet();\n-    }\n-\n-    @Override public Map<C, V> remove(Object rowKey) {\n+    @Override\n+    Map<C, V> setValue(int index, Map<C, V> newValue) {\n       throw new UnsupportedOperationException();\n     }\n-  }\n-\n-  private class RowMapEntrySet extends AbstractSet<Entry<R, Map<C, V>>> {\n-    @Override public Iterator<Entry<R, Map<C, V>>> iterator() {\n-      return new AbstractIndexedListIterator<Entry<R, Map<C, V>>>(size()) {\n-        @Override protected Entry<R, Map<C, V>> get(int index) {\n-          return Maps.<R, Map<C, V>>immutableEntry(rowList.get(index),\n-              new Row(index));\n-        }\n-      };\n-    }\n \n-    @Override public int size() {\n-      return rowList.size();\n+    @Override\n+    public Map<C, V> put(R key, Map<C, V> value) {\n+      throw new UnsupportedOperationException();\n     }\n   }\n \n@@ -824,22 +808,17 @@ public Collection<V> values() {\n \n   private class Values extends AbstractCollection<V> {\n     @Override public Iterator<V> iterator() {\n-      return new AbstractIndexedListIterator<V>(size()) {\n-        @Override protected V get(int index) {\n-          int rowIndex = index / columnList.size();\n-          int columnIndex = index % columnList.size();\n-          return array[rowIndex][columnIndex];\n+      return new TransformedIterator<Cell<R, C, V>, V>(cellSet().iterator()) {\n+        @Override\n+        V transform(Cell<R, C, V> cell) {\n+          return cell.getValue();\n         }\n       };\n     }\n \n     @Override public int size() {\n       return ArrayTable.this.size();\n     }\n-\n-    @Override public boolean contains(Object value) {\n-      return containsValue(value);\n-    }\n   }\n \n   private static final long serialVersionUID = 0;",
      "parent_sha": "ca91565c0f3692f8efabec10dd1febf5cf4fc97d"
    }
  },
  {
    "oid": "bdd5652fd300a866ca74c48b9cc36f22b2bd85f5",
    "message": "Stabilize the UncaughtExceptionHandlers against exceptions thrown in\nlogging. Quoting from the Java manual: \"Any exception thrown by this\nmethod [uncaughtException] will be ignored by the Java Virtual Machine.\"\nThis seems slightly paranoid, but doesn't cost us much and avoids stupid\nnon-terminations in OOM situations or other logging failures.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58086612",
    "date": "2013-12-12T18:16:06Z",
    "url": "https://github.com/google/guava/commit/bdd5652fd300a866ca74c48b9cc36f22b2bd85f5",
    "details": {
      "sha": "19b91f2971789712ec848ce83e5515794209b5d5",
      "filename": "guava/src/com/google/common/util/concurrent/UncaughtExceptionHandlers.java",
      "status": "modified",
      "additions": 11,
      "deletions": 3,
      "changes": 14,
      "blob_url": "https://github.com/google/guava/blob/bdd5652fd300a866ca74c48b9cc36f22b2bd85f5/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FUncaughtExceptionHandlers.java",
      "raw_url": "https://github.com/google/guava/raw/bdd5652fd300a866ca74c48b9cc36f22b2bd85f5/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FUncaughtExceptionHandlers.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FUncaughtExceptionHandlers.java?ref=bdd5652fd300a866ca74c48b9cc36f22b2bd85f5",
      "patch": "@@ -60,9 +60,17 @@ public static UncaughtExceptionHandler systemExit() {\n     }\n \n     @Override public void uncaughtException(Thread t, Throwable e) {\n-      // cannot use FormattingLogger due to a dependency loop\n-      logger.log(SEVERE, String.format(\"Caught an exception in %s.  Shutting down.\", t), e);\n-      runtime.exit(1);\n+      try {\n+        // cannot use FormattingLogger due to a dependency loop\n+        logger.log(SEVERE, String.format(\"Caught an exception in %s.  Shutting down.\", t), e);\n+      } catch (Throwable errorInLogging) {\n+        // If logging fails, e.g. due to missing memory, at least try to log the\n+        // message and the cause for the failed logging.\n+        System.err.println(e.getMessage());\n+        System.err.println(errorInLogging.getMessage());\n+      } finally {\n+        runtime.exit(1);\n+      }\n     }\n   }\n }",
      "parent_sha": "569c6ea5cf53fe20b669d34efe980920aa8a2482"
    }
  },
  {
    "oid": "80b8cc52b2102da2feda215bfd859c0ada4c2ea4",
    "message": "\nMake ListenableFutureTask |final|.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2328\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@474 8138a162-5c33-11de-8abc-d1c337b90d21",
    "date": "2011-06-20T18:15:10Z",
    "url": "https://github.com/google/guava/commit/80b8cc52b2102da2feda215bfd859c0ada4c2ea4",
    "details": {
      "sha": "6db4e106010724f4560fb085d82465618ebc8b52",
      "filename": "guava/src/com/google/common/util/concurrent/ListenableFutureTask.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/google/guava/blob/80b8cc52b2102da2feda215bfd859c0ada4c2ea4/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FListenableFutureTask.java",
      "raw_url": "https://github.com/google/guava/raw/80b8cc52b2102da2feda215bfd859c0ada4c2ea4/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FListenableFutureTask.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FListenableFutureTask.java?ref=80b8cc52b2102da2feda215bfd859c0ada4c2ea4",
      "patch": "@@ -27,17 +27,17 @@\n  * interface.  Subclasses must make sure to call {@code super.done()} if they\n  * also override the {@link #done()} method, otherwise the listeners will not\n  * be called.\n- * \n+ *\n  * @author Sven Mawson\n  * @since Guava release 01\n  */\n @Beta\n-public class ListenableFutureTask<V> extends FutureTask<V>\n+public final class ListenableFutureTask<V> extends FutureTask<V>\n     implements ListenableFuture<V> {\n \n   // The execution list to hold our listeners.\n   private final ExecutionList executionList = new ExecutionList();\n-  \n+\n   /**\n    * Creates a {@code ListenableFutureTask} that will upon running, execute the\n    * given {@code Callable}.\n@@ -104,7 +104,7 @@ public ListenableFutureTask(Runnable runnable, V result) {\n   public void addListener(Runnable listener, Executor exec) {\n     executionList.add(listener, exec);\n   }\n-  \n+\n   @Override\n   protected void done() {\n     executionList.run();",
      "parent_sha": "1e8985b92efa2d82f2d750d0fe13395b67a9c9f6"
    }
  },
  {
    "oid": "40c67d60770905d5dbb3a4966f492b95e9052886",
    "message": "Update the Public Suffix List.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=104153251",
    "date": "2015-09-29T14:57:13Z",
    "url": "https://github.com/google/guava/commit/40c67d60770905d5dbb3a4966f492b95e9052886",
    "details": {
      "sha": "a5fe33196f8a2727510a248ef4ff62888e3d1fef",
      "filename": "guava/src/com/google/thirdparty/publicsuffix/PublicSuffixPatterns.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/google/guava/blob/40c67d60770905d5dbb3a4966f492b95e9052886/guava%2Fsrc%2Fcom%2Fgoogle%2Fthirdparty%2Fpublicsuffix%2FPublicSuffixPatterns.java",
      "raw_url": "https://github.com/google/guava/raw/40c67d60770905d5dbb3a4966f492b95e9052886/guava%2Fsrc%2Fcom%2Fgoogle%2Fthirdparty%2Fpublicsuffix%2FPublicSuffixPatterns.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fthirdparty%2Fpublicsuffix%2FPublicSuffixPatterns.java?ref=40c67d60770905d5dbb3a4966f492b95e9052886",
      "parent_sha": "1667927759ca66835d3154c99d25fa4799e507d6"
    }
  },
  {
    "oid": "dc5f806882f1447f2ce5d024817d0bdfe66bf09d",
    "message": "\nCommented out assert\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1747\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@384 8138a162-5c33-11de-8abc-d1c337b90d21",
    "date": "2011-05-05T11:38:29Z",
    "url": "https://github.com/google/guava/commit/dc5f806882f1447f2ce5d024817d0bdfe66bf09d",
    "details": {
      "sha": "1141022ffb4825eaeb465d7fbfbbc4eec1481bfb",
      "filename": "guava/src/com/google/common/util/concurrent/AbstractListeningExecutorService.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/google/guava/blob/dc5f806882f1447f2ce5d024817d0bdfe66bf09d/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FAbstractListeningExecutorService.java",
      "raw_url": "https://github.com/google/guava/raw/dc5f806882f1447f2ce5d024817d0bdfe66bf09d/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FAbstractListeningExecutorService.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FAbstractListeningExecutorService.java?ref=dc5f806882f1447f2ce5d024817d0bdfe66bf09d",
      "patch": "@@ -183,7 +183,7 @@ private <T> T doInvokeAny(Collection<? extends Callable<T>> tasks, boolean timed\n     try {\n       return doInvokeAny(tasks, false, 0);\n     } catch (TimeoutException cannotHappen) {\n-      assert false;\n+      // assert false;\n       return null;\n     }\n   }",
      "parent_sha": "3ab5ad4f16dad46dde4e2f4c32cad19141f0fd14"
    }
  },
  {
    "oid": "04ed59121f88861eb24d59de0a0c66aa5400c748",
    "message": "Restore import for java.util.Formatter.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=108345794",
    "date": "2015-11-20T17:32:41Z",
    "url": "https://github.com/google/guava/commit/04ed59121f88861eb24d59de0a0c66aa5400c748",
    "details": {
      "sha": "4e4c2f6ac215adcbf7fd726693c90a19ee1d3025",
      "filename": "guava/src/com/google/common/base/Strings.java",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/google/guava/blob/04ed59121f88861eb24d59de0a0c66aa5400c748/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FStrings.java",
      "raw_url": "https://github.com/google/guava/raw/04ed59121f88861eb24d59de0a0c66aa5400c748/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FStrings.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FStrings.java?ref=04ed59121f88861eb24d59de0a0c66aa5400c748",
      "patch": "@@ -22,6 +22,8 @@\n import com.google.common.annotations.GwtCompatible;\n import com.google.common.annotations.VisibleForTesting;\n \n+import java.util.Formatter;\n+\n import javax.annotation.CheckReturnValue;\n import javax.annotation.Nullable;\n \n@@ -86,7 +88,7 @@ public static boolean isNullOrEmpty(@Nullable String string) {\n    * <li>{@code padStart(\"2010\", 3, '0')} returns {@code \"2010\"}\n    * </ul>\n    *\n-   * <p>See {@link java.util.Formatter} for a richer set of formatting capabilities.\n+   * <p>See {@link Formatter} for a richer set of formatting capabilities.\n    *\n    * @param string the string which should appear at the end of the result\n    * @param minLength the minimum length the resulting string must have. Can be\n@@ -118,7 +120,7 @@ public static String padStart(String string, int minLength, char padChar) {\n    * <li>{@code padEnd(\"2010\", 3, '!')} returns {@code \"2010\"}\n    * </ul>\n    *\n-   * <p>See {@link java.util.Formatter} for a richer set of formatting capabilities.\n+   * <p>See {@link Formatter} for a richer set of formatting capabilities.\n    *\n    * @param string the string which should appear at the beginning of the result\n    * @param minLength the minimum length the resulting string must have. Can be",
      "parent_sha": "daf4349567d344e72fce935aacbb68857327e3ca"
    }
  },
  {
    "oid": "ee75797a03415a1f42c0237fd140691ce9249deb",
    "message": "Fixed a race deadlock bug in AbstractServiceTest: when notifyStopped() is called after getStateHistory(), the latter takes the synchronization lock and also waiting on the latch; the former cannot count down the latch because it can't grab the synchronization lock. Also added missing tests for throwing exception from doStart(), doStop().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32768098",
    "date": "2012-08-13T20:34:43Z",
    "url": "https://github.com/google/guava/commit/ee75797a03415a1f42c0237fd140691ce9249deb",
    "details": {
      "sha": "d9473624696cb19110c9111cc8db90baeba60004",
      "filename": "guava-tests/test/com/google/common/util/concurrent/AbstractServiceTest.java",
      "status": "modified",
      "additions": 164,
      "deletions": 25,
      "changes": 189,
      "blob_url": "https://github.com/google/guava/blob/ee75797a03415a1f42c0237fd140691ce9249deb/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FAbstractServiceTest.java",
      "raw_url": "https://github.com/google/guava/raw/ee75797a03415a1f42c0237fd140691ce9249deb/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FAbstractServiceTest.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FAbstractServiceTest.java?ref=ee75797a03415a1f42c0237fd140691ce9249deb",
      "patch": "@@ -28,7 +28,6 @@\n import junit.framework.TestCase;\n \n import java.lang.Thread.UncaughtExceptionHandler;\n-import java.util.Arrays;\n import java.util.List;\n import java.util.concurrent.CountDownLatch;\n import java.util.concurrent.Future;\n@@ -64,7 +63,7 @@ public void testNoOpServiceStartStop() throws Exception {\n     assertFalse(service.isRunning());\n     assertFalse(service.running);\n     assertEquals(\n-        Arrays.asList(\n+        ImmutableList.of(\n             State.STARTING,\n             State.RUNNING,\n             State.STOPPING,\n@@ -93,7 +92,7 @@ public void testNoOpServiceStartStopIdempotence() throws Exception {\n     service.stop();\n     assertEquals(State.TERMINATED, service.state());\n     assertEquals(\n-        Arrays.asList(\n+        ImmutableList.of(\n             State.STARTING,\n             State.RUNNING,\n             State.STOPPING,\n@@ -181,7 +180,7 @@ public void testManualServiceStartStop() throws Exception {\n     assertEquals(State.TERMINATED, service.state());\n     assertFalse(service.isRunning());\n     assertEquals(\n-        Arrays.asList(\n+        ImmutableList.of(\n             State.STARTING,\n             State.RUNNING,\n             State.STOPPING,\n@@ -202,7 +201,7 @@ public void testManualServiceNotifyStoppedWhileRunning() throws Exception {\n     assertFalse(service.doStopCalled);\n \n     assertEquals(\n-        Arrays.asList(\n+        ImmutableList.of(\n             State.STARTING,\n             State.RUNNING,\n             State.TERMINATED),\n@@ -232,7 +231,7 @@ public void testManualServiceStopWhileStarting() throws Exception {\n     assertEquals(State.TERMINATED, service.state());\n     assertFalse(service.isRunning());\n     assertEquals(\n-        Arrays.asList(\n+        ImmutableList.of(\n             State.STARTING,\n             State.STOPPING,\n             State.TERMINATED),\n@@ -248,15 +247,15 @@ public void testManualServiceStopWhileNew() throws Exception {\n     assertFalse(service.isRunning());\n     assertFalse(service.doStartCalled);\n     assertFalse(service.doStopCalled);\n-    assertEquals(Arrays.asList(State.TERMINATED), listener.getStateHistory());\n+    assertEquals(ImmutableList.of(State.TERMINATED), listener.getStateHistory());\n   }\n \n   public void testManualServiceFailWhileStarting() throws Exception {\n     ManualSwitchedService service = new ManualSwitchedService();\n     RecordingListener listener = RecordingListener.record(service);\n     service.start();\n     service.notifyFailed(EXCEPTION);\n-    assertEquals(Arrays.asList(State.STARTING, State.FAILED), listener.getStateHistory());\n+    assertEquals(ImmutableList.of(State.STARTING, State.FAILED), listener.getStateHistory());\n   }\n \n   public void testManualServiceFailWhileRunning() throws Exception {\n@@ -265,7 +264,7 @@ public void testManualServiceFailWhileRunning() throws Exception {\n     service.start();\n     service.notifyStarted();\n     service.notifyFailed(EXCEPTION);\n-    assertEquals(Arrays.asList(State.STARTING, State.RUNNING, State.FAILED),\n+    assertEquals(ImmutableList.of(State.STARTING, State.RUNNING, State.FAILED),\n         listener.getStateHistory());\n   }\n \n@@ -276,7 +275,7 @@ public void testManualServiceFailWhileStopping() throws Exception {\n     service.notifyStarted();\n     service.stop();\n     service.notifyFailed(EXCEPTION);\n-    assertEquals(Arrays.asList(State.STARTING, State.RUNNING, State.STOPPING, State.FAILED),\n+    assertEquals(ImmutableList.of(State.STARTING, State.RUNNING, State.STOPPING, State.FAILED),\n         listener.getStateHistory());\n   }\n \n@@ -323,12 +322,12 @@ public void testThreadedServiceStartAndWaitStopAndWait() throws Throwable {\n \n     service.awaitRunChecks();\n \n-    service.stop().get();\n+    service.stopAndWait();\n     assertEquals(State.TERMINATED, service.state());\n \n     throwIfSet(thrownByExecutionThread);\n     assertEquals(\n-        Arrays.asList(\n+        ImmutableList.of(\n             State.STARTING,\n             State.RUNNING,\n             State.STOPPING,\n@@ -390,12 +389,13 @@ public void testThreadedServiceStartStopIdempotenceDoubleWait()\n \n   public void testManualServiceFailureIdempotence() {\n     ManualSwitchedService service = new ManualSwitchedService();\n-    RecordingListener listener = RecordingListener.record(service);\n+    RecordingListener.record(service);\n     service.start();\n     service.notifyFailed(new Exception(\"1\"));\n     service.notifyFailed(new Exception(\"2\"));\n     try {\n       service.startAndWait();\n+      fail();\n     } catch (UncheckedExecutionException e) {\n       assertEquals(\"1\", e.getCause().getMessage());\n     }\n@@ -473,6 +473,62 @@ public void testStopUnstartedService() throws Exception {\n     assertEquals(State.TERMINATED, Iterables.getOnlyElement(listener.getStateHistory()));\n   }\n \n+  public void testFailingServiceStartAndWait() throws Exception {\n+    StartFailingService service = new StartFailingService();\n+    RecordingListener listener = RecordingListener.record(service);\n+\n+    try {\n+      service.startAndWait();\n+      fail();\n+    } catch (UncheckedExecutionException e) {\n+      assertEquals(EXCEPTION, e.getCause());\n+    }\n+    assertEquals(\n+        ImmutableList.of(\n+            State.STARTING,\n+            State.FAILED),\n+        listener.getStateHistory());\n+  }\n+\n+  public void testFailingServiceStopAndWait_stopFailing() throws Exception {\n+    StopFailingService service = new StopFailingService();\n+    RecordingListener listener = RecordingListener.record(service);\n+\n+    service.startAndWait();\n+    try {\n+      service.stopAndWait();\n+      fail();\n+    } catch (UncheckedExecutionException e) {\n+      assertEquals(EXCEPTION, e.getCause());\n+    }\n+    assertEquals(\n+        ImmutableList.of(\n+            State.STARTING,\n+            State.RUNNING,\n+            State.STOPPING,\n+            State.FAILED),\n+        listener.getStateHistory());\n+  }\n+\n+  public void testFailingServiceStopAndWait_runFailinging() throws Exception {\n+    RunFailingService service = new RunFailingService();\n+    RecordingListener listener = RecordingListener.record(service);\n+\n+    service.startAndWait();\n+    try {\n+      service.stopAndWait();\n+      fail();\n+    } catch (UncheckedExecutionException e) {\n+      assertEquals(EXCEPTION, e.getCause().getCause());\n+    }\n+    assertEquals(\n+        ImmutableList.of(\n+            State.STARTING,\n+            State.RUNNING,\n+            State.FAILED),\n+        listener.getStateHistory());\n+  }\n+\n   public void testThrowingServiceStartAndWait() throws Exception {\n     StartThrowingService service = new StartThrowingService();\n     RecordingListener listener = RecordingListener.record(service);\n@@ -481,10 +537,10 @@ public void testThrowingServiceStartAndWait() throws Exception {\n       service.startAndWait();\n       fail();\n     } catch (UncheckedExecutionException e) {\n-      assertEquals(EXCEPTION, e.getCause());\n+      assertEquals(service.exception, e.getCause());\n     }\n     assertEquals(\n-        Arrays.asList(\n+        ImmutableList.of(\n             State.STARTING,\n             State.FAILED),\n         listener.getStateHistory());\n@@ -499,10 +555,10 @@ public void testThrowingServiceStopAndWait_stopThrowing() throws Exception {\n       service.stopAndWait();\n       fail();\n     } catch (UncheckedExecutionException e) {\n-      assertEquals(EXCEPTION, e.getCause());\n+      assertEquals(service.exception, e.getCause());\n     }\n     assertEquals(\n-        Arrays.asList(\n+        ImmutableList.of(\n             State.STARTING,\n             State.RUNNING,\n             State.STOPPING,\n@@ -519,18 +575,18 @@ public void testThrowingServiceStopAndWait_runThrowing() throws Exception {\n       service.stopAndWait();\n       fail();\n     } catch (UncheckedExecutionException e) {\n-      assertEquals(EXCEPTION, e.getCause().getCause());\n+      assertEquals(service.exception, e.getCause().getCause());\n     }\n     assertEquals(\n-        Arrays.asList(\n+        ImmutableList.of(\n             State.STARTING,\n             State.RUNNING,\n             State.FAILED),\n         listener.getStateHistory());\n   }\n \n   public void testAddListenerAfterFailureDoesntCauseDeadlock() throws InterruptedException {\n-    final StartThrowingService service = new StartThrowingService();\n+    final StartFailingService service = new StartFailingService();\n     service.start();\n     assertEquals(State.FAILED, service.state());\n     service.addListener(new RecordingListener(service), MoreExecutors.sameThreadExecutor());\n@@ -587,7 +643,7 @@ private static class NoOpThreadedService extends AbstractExecutionThreadService\n     @Override protected void run() throws Exception {}\n   }\n \n-  private static class StartThrowingService extends AbstractService {\n+  private static class StartFailingService extends AbstractService {\n     @Override protected void doStart() {\n       notifyFailed(EXCEPTION);\n     }\n@@ -597,7 +653,7 @@ private static class StartThrowingService extends AbstractService {\n     }\n   }\n \n-  private static class RunThrowingService extends AbstractService {\n+  private static class RunFailingService extends AbstractService {\n     @Override protected void doStart() {\n       notifyStarted();\n       notifyFailed(EXCEPTION);\n@@ -608,7 +664,7 @@ private static class RunThrowingService extends AbstractService {\n     }\n   }\n \n-  private static class StopThrowingService extends AbstractService {\n+  private static class StopFailingService extends AbstractService {\n     @Override protected void doStart() {\n       notifyStarted();\n     }\n@@ -618,6 +674,46 @@ private static class StopThrowingService extends AbstractService {\n     }\n   }\n \n+  private static class StartThrowingService extends AbstractService {\n+\n+    final RuntimeException exception = new RuntimeException(\"deliberate\");\n+\n+    @Override protected void doStart() {\n+      throw exception;\n+    }\n+\n+    @Override protected void doStop() {\n+      fail();\n+    }\n+  }\n+\n+  private static class RunThrowingService extends AbstractService {\n+\n+    final RuntimeException exception = new RuntimeException(\"deliberate\");\n+\n+    @Override protected void doStart() {\n+      notifyStarted();\n+      throw exception;\n+    }\n+\n+    @Override protected void doStop() {\n+      fail();\n+    }\n+  }\n+\n+  private static class StopThrowingService extends AbstractService {\n+\n+    final RuntimeException exception = new RuntimeException(\"deliberate\");\n+\n+    @Override protected void doStart() {\n+      notifyStarted();\n+    }\n+\n+    @Override protected void doStop() {\n+      throw exception;\n+    }\n+  }\n+\n   private static class RecordingListener implements Listener {\n     static RecordingListener record(Service service) {\n       RecordingListener listener = new RecordingListener(service);\n@@ -635,9 +731,11 @@ static RecordingListener record(Service service) {\n     final List<State> stateHistory = Lists.newArrayList();\n     final CountDownLatch completionLatch = new CountDownLatch(1);\n \n-    synchronized ImmutableList<State> getStateHistory() throws Exception {\n+    ImmutableList<State> getStateHistory() throws Exception {\n       completionLatch.await();\n-      return ImmutableList.copyOf(stateHistory);\n+      synchronized (this) {\n+        return ImmutableList.copyOf(stateHistory);\n+      }\n     }\n \n     @Override public synchronized void starting() {\n@@ -684,12 +782,14 @@ synchronized ImmutableList<State> getStateHistory() throws Exception {\n       if (from == State.STARTING) {\n         try {\n           service.startAndWait();\n+          fail();\n         } catch (UncheckedExecutionException e) {\n           assertEquals(failure, e.getCause());\n         }\n       }\n       try {\n         service.stopAndWait();\n+        fail();\n       } catch (UncheckedExecutionException e) {\n         if (from == State.STOPPING) {\n           assertEquals(failure, e.getCause());\n@@ -701,5 +801,44 @@ synchronized ImmutableList<State> getStateHistory() throws Exception {\n     }\n   }\n \n+  public void testNotifyStartedWhenNotStarting() {\n+    AbstractService service = new DefaultService();\n+    try {\n+      service.notifyStarted();\n+      fail();\n+    } catch (IllegalStateException expected) {}\n+  }\n+\n+  public void testNotifyStoppedWhenNotRunning() {\n+    AbstractService service = new DefaultService();\n+    try {\n+      service.notifyStopped();\n+      fail();\n+    } catch (IllegalStateException expected) {}\n+  }\n+\n+  public void testNotifyFailedWhenNotStarted() {\n+    AbstractService service = new DefaultService();\n+    try {\n+      service.notifyFailed(new Exception());\n+      fail();\n+    } catch (IllegalStateException expected) {}\n+  }\n+\n+  public void testNotifyFailedWhenTerminated() {\n+    NoOpService service = new NoOpService();\n+    service.startAndWait();\n+    service.stopAndWait();\n+    try {\n+      service.notifyFailed(new Exception());\n+      fail();\n+    } catch (IllegalStateException expected) {}\n+  }\n+\n+  private static class DefaultService extends AbstractService {\n+    @Override protected void doStart() {}\n+    @Override protected void doStop() {}\n+  }\n+\n   private static final Exception EXCEPTION = new Exception();\n }",
      "parent_sha": "4135d369da714b34a293f52bbe81ca28eaab3423"
    }
  },
  {
    "oid": "7c3778f085554d9df44182b4b0cb25078d00ed85",
    "message": "add new patterns\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26562202",
    "date": "2012-01-04T15:52:39Z",
    "url": "https://github.com/google/guava/commit/7c3778f085554d9df44182b4b0cb25078d00ed85",
    "details": {
      "sha": "a5141edefd9083eb658737c60d2ef1a84cffff90",
      "filename": "guava/src/com/google/common/net/TldPatterns.java",
      "status": "modified",
      "additions": 286,
      "deletions": 1,
      "changes": 287,
      "blob_url": "https://github.com/google/guava/blob/7c3778f085554d9df44182b4b0cb25078d00ed85/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fnet%2FTldPatterns.java",
      "raw_url": "https://github.com/google/guava/raw/7c3778f085554d9df44182b4b0cb25078d00ed85/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fnet%2FTldPatterns.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fnet%2FTldPatterns.java?ref=7c3778f085554d9df44182b4b0cb25078d00ed85",
      "patch": "@@ -526,6 +526,7 @@ private TldPatterns() {\n       \"de.com\",\n       \"eu.com\",\n       \"gb.com\",\n+      \"gr.com\",\n       \"hu.com\",\n       \"jpn.com\",\n       \"kr.com\",\n@@ -561,6 +562,7 @@ private TldPatterns() {\n       \"gov.cx\",\n       \"cz\",\n       \"de\",\n+      \"com.de\",\n       \"dj\",\n       \"dk\",\n       \"dm\",\n@@ -2056,6 +2058,7 @@ private TldPatterns() {\n       \"org.ng\",\n       \"nl\",\n       \"bv.nl\",\n+      \"co.nl\",\n       \"no\",\n       \"fhs.no\",\n       \"vgs.no\",\n@@ -2983,6 +2986,7 @@ private TldPatterns() {\n       \"valer.hedmark.no\",\n       \"v\\u00e5ler.hedmark.no\",\n       \"xn--vler-qoa.hedmark.no\",\n+      \"co.no\",\n       \"nr\",\n       \"biz.nr\",\n       \"info.nr\",\n@@ -2994,6 +2998,7 @@ private TldPatterns() {\n       \"nu\",\n       \"org\",\n       \"ae.org\",\n+      \"us.org\",\n       \"za.org\",\n       \"pa\",\n       \"ac.pa\",\n@@ -4085,6 +4090,285 @@ private TldPatterns() {\n       \"\\u0627\\u0644\\u064a\\u0645\\u0646\",\n       \"xn--mgb2ddes\",\n       \"xxx\",\n+      \"dyndns-at-home.com\",\n+      \"dyndns-at-work.com\",\n+      \"dyndns-blog.com\",\n+      \"dyndns-free.com\",\n+      \"dyndns-home.com\",\n+      \"dyndns-ip.com\",\n+      \"dyndns-mail.com\",\n+      \"dyndns-office.com\",\n+      \"dyndns-pics.com\",\n+      \"dyndns-remote.com\",\n+      \"dyndns-server.com\",\n+      \"dyndns-web.com\",\n+      \"dyndns-wiki.com\",\n+      \"dyndns-work.com\",\n+      \"dyndns.biz\",\n+      \"dyndns.info\",\n+      \"dyndns.org\",\n+      \"dyndns.tv\",\n+      \"at-band-camp.net\",\n+      \"ath.cx\",\n+      \"barrel-of-knowledge.info\",\n+      \"barrell-of-knowledge.info\",\n+      \"better-than.tv\",\n+      \"blogdns.com\",\n+      \"blogdns.net\",\n+      \"blogdns.org\",\n+      \"blogsite.org\",\n+      \"boldlygoingnowhere.org\",\n+      \"broke-it.net\",\n+      \"buyshouses.net\",\n+      \"cechire.com\",\n+      \"dnsalias.com\",\n+      \"dnsalias.net\",\n+      \"dnsalias.org\",\n+      \"dnsdojo.com\",\n+      \"dnsdojo.net\",\n+      \"dnsdojo.org\",\n+      \"does-it.net\",\n+      \"doesntexist.com\",\n+      \"doesntexist.org\",\n+      \"dontexist.com\",\n+      \"dontexist.net\",\n+      \"dontexist.org\",\n+      \"doomdns.com\",\n+      \"doomdns.org\",\n+      \"dvrdns.org\",\n+      \"dyn-o-saur.com\",\n+      \"dynalias.com\",\n+      \"dynalias.net\",\n+      \"dynalias.org\",\n+      \"dynathome.net\",\n+      \"dyndns.ws\",\n+      \"endofinternet.net\",\n+      \"endofinternet.org\",\n+      \"endoftheinternet.org\",\n+      \"est-a-la-maison.com\",\n+      \"est-a-la-masion.com\",\n+      \"est-le-patron.com\",\n+      \"est-mon-blogueur.com\",\n+      \"for-better.biz\",\n+      \"for-more.biz\",\n+      \"for-our.info\",\n+      \"for-some.biz\",\n+      \"for-the.biz\",\n+      \"forgot.her.name\",\n+      \"forgot.his.name\",\n+      \"from-ak.com\",\n+      \"from-al.com\",\n+      \"from-ar.com\",\n+      \"from-az.net\",\n+      \"from-ca.com\",\n+      \"from-co.net\",\n+      \"from-ct.com\",\n+      \"from-dc.com\",\n+      \"from-de.com\",\n+      \"from-fl.com\",\n+      \"from-ga.com\",\n+      \"from-hi.com\",\n+      \"from-ia.com\",\n+      \"from-id.com\",\n+      \"from-il.com\",\n+      \"from-in.com\",\n+      \"from-ks.com\",\n+      \"from-ky.com\",\n+      \"from-la.net\",\n+      \"from-ma.com\",\n+      \"from-md.com\",\n+      \"from-me.org\",\n+      \"from-mi.com\",\n+      \"from-mn.com\",\n+      \"from-mo.com\",\n+      \"from-ms.com\",\n+      \"from-mt.com\",\n+      \"from-nc.com\",\n+      \"from-nd.com\",\n+      \"from-ne.com\",\n+      \"from-nh.com\",\n+      \"from-nj.com\",\n+      \"from-nm.com\",\n+      \"from-nv.com\",\n+      \"from-ny.net\",\n+      \"from-oh.com\",\n+      \"from-ok.com\",\n+      \"from-or.com\",\n+      \"from-pa.com\",\n+      \"from-pr.com\",\n+      \"from-ri.com\",\n+      \"from-sc.com\",\n+      \"from-sd.com\",\n+      \"from-tn.com\",\n+      \"from-tx.com\",\n+      \"from-ut.com\",\n+      \"from-va.com\",\n+      \"from-vt.com\",\n+      \"from-wa.com\",\n+      \"from-wi.com\",\n+      \"from-wv.com\",\n+      \"from-wy.com\",\n+      \"ftpaccess.cc\",\n+      \"fuettertdasnetz.de\",\n+      \"game-host.org\",\n+      \"game-server.cc\",\n+      \"getmyip.com\",\n+      \"gets-it.net\",\n+      \"go.dyndns.org\",\n+      \"gotdns.com\",\n+      \"gotdns.org\",\n+      \"groks-the.info\",\n+      \"groks-this.info\",\n+      \"ham-radio-op.net\",\n+      \"here-for-more.info\",\n+      \"hobby-site.com\",\n+      \"hobby-site.org\",\n+      \"home.dyndns.org\",\n+      \"homedns.org\",\n+      \"homeftp.net\",\n+      \"homeftp.org\",\n+      \"homeip.net\",\n+      \"homelinux.com\",\n+      \"homelinux.net\",\n+      \"homelinux.org\",\n+      \"homeunix.com\",\n+      \"homeunix.net\",\n+      \"homeunix.org\",\n+      \"iamallama.com\",\n+      \"in-the-band.net\",\n+      \"is-a-anarchist.com\",\n+      \"is-a-blogger.com\",\n+      \"is-a-bookkeeper.com\",\n+      \"is-a-bruinsfan.org\",\n+      \"is-a-bulls-fan.com\",\n+      \"is-a-candidate.org\",\n+      \"is-a-caterer.com\",\n+      \"is-a-celticsfan.org\",\n+      \"is-a-chef.com\",\n+      \"is-a-chef.net\",\n+      \"is-a-chef.org\",\n+      \"is-a-conservative.com\",\n+      \"is-a-cpa.com\",\n+      \"is-a-cubicle-slave.com\",\n+      \"is-a-democrat.com\",\n+      \"is-a-designer.com\",\n+      \"is-a-doctor.com\",\n+      \"is-a-financialadvisor.com\",\n+      \"is-a-geek.com\",\n+      \"is-a-geek.net\",\n+      \"is-a-geek.org\",\n+      \"is-a-green.com\",\n+      \"is-a-guru.com\",\n+      \"is-a-hard-worker.com\",\n+      \"is-a-hunter.com\",\n+      \"is-a-knight.org\",\n+      \"is-a-landscaper.com\",\n+      \"is-a-lawyer.com\",\n+      \"is-a-liberal.com\",\n+      \"is-a-libertarian.com\",\n+      \"is-a-linux-user.org\",\n+      \"is-a-llama.com\",\n+      \"is-a-musician.com\",\n+      \"is-a-nascarfan.com\",\n+      \"is-a-nurse.com\",\n+      \"is-a-painter.com\",\n+      \"is-a-patsfan.org\",\n+      \"is-a-personaltrainer.com\",\n+      \"is-a-photographer.com\",\n+      \"is-a-player.com\",\n+      \"is-a-republican.com\",\n+      \"is-a-rockstar.com\",\n+      \"is-a-socialist.com\",\n+      \"is-a-soxfan.org\",\n+      \"is-a-student.com\",\n+      \"is-a-teacher.com\",\n+      \"is-a-techie.com\",\n+      \"is-a-therapist.com\",\n+      \"is-an-accountant.com\",\n+      \"is-an-actor.com\",\n+      \"is-an-actress.com\",\n+      \"is-an-anarchist.com\",\n+      \"is-an-artist.com\",\n+      \"is-an-engineer.com\",\n+      \"is-an-entertainer.com\",\n+      \"is-by.us\",\n+      \"is-certified.com\",\n+      \"is-found.org\",\n+      \"is-gone.com\",\n+      \"is-into-anime.com\",\n+      \"is-into-cars.com\",\n+      \"is-into-cartoons.com\",\n+      \"is-into-games.com\",\n+      \"is-leet.com\",\n+      \"is-lost.org\",\n+      \"is-not-certified.com\",\n+      \"is-saved.org\",\n+      \"is-slick.com\",\n+      \"is-uberleet.com\",\n+      \"is-very-bad.org\",\n+      \"is-very-evil.org\",\n+      \"is-very-good.org\",\n+      \"is-very-nice.org\",\n+      \"is-very-sweet.org\",\n+      \"is-with-theband.com\",\n+      \"isa-geek.com\",\n+      \"isa-geek.net\",\n+      \"isa-geek.org\",\n+      \"isa-hockeynut.com\",\n+      \"issmarterthanyou.com\",\n+      \"isteingeek.de\",\n+      \"istmein.de\",\n+      \"kicks-ass.net\",\n+      \"kicks-ass.org\",\n+      \"knowsitall.info\",\n+      \"land-4-sale.us\",\n+      \"lebtimnetz.de\",\n+      \"leitungsen.de\",\n+      \"likes-pie.com\",\n+      \"likescandy.com\",\n+      \"merseine.nu\",\n+      \"mine.nu\",\n+      \"misconfused.org\",\n+      \"mypets.ws\",\n+      \"myphotos.cc\",\n+      \"neat-url.com\",\n+      \"office-on-the.net\",\n+      \"on-the-web.tv\",\n+      \"podzone.net\",\n+      \"podzone.org\",\n+      \"readmyblog.org\",\n+      \"saves-the-whales.com\",\n+      \"scrapper-site.net\",\n+      \"scrapping.cc\",\n+      \"selfip.biz\",\n+      \"selfip.com\",\n+      \"selfip.info\",\n+      \"selfip.net\",\n+      \"selfip.org\",\n+      \"sells-for-less.com\",\n+      \"sells-for-u.com\",\n+      \"sells-it.net\",\n+      \"sellsyourhome.org\",\n+      \"servebbs.com\",\n+      \"servebbs.net\",\n+      \"servebbs.org\",\n+      \"serveftp.net\",\n+      \"serveftp.org\",\n+      \"servegame.org\",\n+      \"shacknet.nu\",\n+      \"simple-url.com\",\n+      \"space-to-rent.com\",\n+      \"stuff-4-sale.org\",\n+      \"stuff-4-sale.us\",\n+      \"teaches-yoga.com\",\n+      \"thruhere.net\",\n+      \"traeumtgerade.de\",\n+      \"webhop.biz\",\n+      \"webhop.info\",\n+      \"webhop.net\",\n+      \"webhop.org\",\n+      \"worse-than.tv\",\n+      \"writesthisblog.com\",\n       \"tp\",\n       \"yt\",\n       \"ng\",\n@@ -4279,13 +4563,14 @@ private TldPatterns() {\n       \"songfest.om\",\n       \"statecouncil.om\",\n       \"nic.tr\",\n-      \"tsk.tr\",\n       \"bl.uk\",\n       \"british-library.uk\",\n       \"icnet.uk\",\n       \"jet.uk\",\n+      \"mod.uk\",\n       \"nel.uk\",\n       \"nhs.uk\",\n+      \"nic.uk\",\n       \"nls.uk\",\n       \"national-library-scotland.uk\",\n       \"parliament.uk\",",
      "parent_sha": "056b64495f4a7bb64d83fbf858f742b9d0406e0f"
    }
  },
  {
    "oid": "c5231cfd14de78cd50099e095798fba6726cbe9e",
    "message": "fixes serialization errors when serializing a\nRegularImmutableAsList\n\nthe issue occur when ImmutableList is included in gwt's serialization\npolicy and ImmutableSet not and a list created by ImmutableSet.asList\nneeds to be serialized\n\nFixes #2614\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137724815",
    "date": "2016-10-31T18:40:31Z",
    "url": "https://github.com/google/guava/commit/c5231cfd14de78cd50099e095798fba6726cbe9e",
    "details": {
      "sha": "a89c31a251f0d01f9046695a629ebad6b588666f",
      "filename": "guava-gwt/src/com/google/common/collect/RegularImmutableAsList_CustomFieldSerializer.java",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/google/guava/blob/c5231cfd14de78cd50099e095798fba6726cbe9e/guava-gwt%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FRegularImmutableAsList_CustomFieldSerializer.java",
      "raw_url": "https://github.com/google/guava/raw/c5231cfd14de78cd50099e095798fba6726cbe9e/guava-gwt%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FRegularImmutableAsList_CustomFieldSerializer.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava-gwt%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FRegularImmutableAsList_CustomFieldSerializer.java?ref=c5231cfd14de78cd50099e095798fba6726cbe9e",
      "patch": "@@ -20,10 +20,11 @@\n import com.google.gwt.user.client.rpc.SerializationException;\n import com.google.gwt.user.client.rpc.SerializationStreamReader;\n import com.google.gwt.user.client.rpc.SerializationStreamWriter;\n+import com.google.gwt.user.client.rpc.core.java.util.Collection_CustomFieldSerializerBase;\n+import java.util.ArrayList;\n \n /**\n- * This class implements the server-side GWT serialization of\n- * {@link RegularImmutableAsList}.\n+ * This class implements the GWT serialization of {@link RegularImmutableAsList}.\n  *\n  * @author Hayward Chan\n  */\n@@ -35,15 +36,14 @@ public static void deserialize(\n \n   public static RegularImmutableAsList<Object> instantiate(SerializationStreamReader reader)\n       throws SerializationException {\n-    @SuppressWarnings(\"unchecked\") // serialization is necessarily type unsafe\n-    ImmutableCollection<Object> delegateCollection = (ImmutableCollection) reader.readObject();\n-    ImmutableList<?> delegateList = (ImmutableList<?>) reader.readObject();\n-    return new RegularImmutableAsList<Object>(delegateCollection, delegateList);\n+    ArrayList<Object> elements = new ArrayList<Object>();\n+    Collection_CustomFieldSerializerBase.deserialize(reader, elements);\n+    ImmutableList<Object> delegate = ImmutableList.copyOf(elements);\n+    return new RegularImmutableAsList<Object>(delegate, delegate);\n   }\n \n   public static void serialize(SerializationStreamWriter writer, RegularImmutableAsList<?> instance)\n       throws SerializationException {\n-    writer.writeObject(instance.delegateCollection());\n-    writer.writeObject(instance.delegateList());\n+    Collection_CustomFieldSerializerBase.serialize(writer, instance);\n   }\n }",
      "parent_sha": "55524c66de8db4c2e44727b69421c7d0e4f30be0"
    }
  },
  {
    "oid": "f5195606e82244b2d5c581aa3b160b798821826a",
    "message": "Work around javac bug.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125169771",
    "date": "2016-06-17T16:19:29Z",
    "url": "https://github.com/google/guava/commit/f5195606e82244b2d5c581aa3b160b798821826a",
    "details": {
      "sha": "b0dc8bf5041da92b684fb6fcf02fb149a662e84b",
      "filename": "guava-tests/test/com/google/common/reflect/ImmutableTypeToInstanceMapTest.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/google/guava/blob/f5195606e82244b2d5c581aa3b160b798821826a/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Freflect%2FImmutableTypeToInstanceMapTest.java",
      "raw_url": "https://github.com/google/guava/raw/f5195606e82244b2d5c581aa3b160b798821826a/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Freflect%2FImmutableTypeToInstanceMapTest.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Freflect%2FImmutableTypeToInstanceMapTest.java?ref=f5195606e82244b2d5c581aa3b160b798821826a",
      "patch": "@@ -101,7 +101,7 @@ public void testParameterizedType() {\n     assertEquals(ImmutableList.of(1), map.getInstance(type));\n   }\n \n-  public void testGeneriArrayType() {\n+  public void testGenericArrayType() {\n     @SuppressWarnings(\"unchecked\") // Trying to test generic array\n     ImmutableList<Integer>[] array = new ImmutableList[] {ImmutableList.of(1)};\n     TypeToken<ImmutableList<Integer>[]> type = new TypeToken<ImmutableList<Integer>[]>() {};\n@@ -110,7 +110,8 @@ public void testGeneriArrayType() {\n             .put(type, array)\n             .build();\n     assertEquals(1, map.size());\n-    assertThat(map.getInstance(type)).asList().containsExactly(array[0]);\n+    // Redundant cast works around a javac bug.\n+    assertThat((Iterable<?>[]) map.getInstance(type)).asList().containsExactly(array[0]);\n   }\n \n   public void testWildcardType() {",
      "parent_sha": "f159e3fc4d9dec1beea0cc39cd887250e6ea36b5"
    }
  },
  {
    "oid": "51b5094d7f71f97e868a01d94f2647efe2d7307a",
    "message": "Call out MinMaxPriorityQueue failure mode.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=97167980",
    "date": "2015-07-06T15:15:47Z",
    "url": "https://github.com/google/guava/commit/51b5094d7f71f97e868a01d94f2647efe2d7307a",
    "details": {
      "sha": "d51d5b038413b68dce290393f214f7c772a73d10",
      "filename": "guava/src/com/google/common/collect/MinMaxPriorityQueue.java",
      "status": "modified",
      "additions": 8,
      "deletions": 3,
      "changes": 11,
      "blob_url": "https://github.com/google/guava/blob/51b5094d7f71f97e868a01d94f2647efe2d7307a/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FMinMaxPriorityQueue.java",
      "raw_url": "https://github.com/google/guava/raw/51b5094d7f71f97e868a01d94f2647efe2d7307a/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FMinMaxPriorityQueue.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FMinMaxPriorityQueue.java?ref=51b5094d7f71f97e868a01d94f2647efe2d7307a",
      "patch": "@@ -79,13 +79,18 @@\n  * <p><i>Performance notes:</i>\n  *\n  * <ul>\n+ * <li>If you only access one end of the queue, and do use a maximum size,\n+ *     this class will perform significantly worse than a {@code PriorityQueue}\n+ *     with manual eviction above the maximum size.  In many cases\n+ *     {@link Ordering#leastOf} may work for your use case with significantly\n+ *     improved (and asymptotically superior) performance.\n  * <li>The retrieval operations {@link #peek}, {@link #peekFirst}, {@link\n- *     #peekLast}, {@link #element}, and {@link #size} are constant-time\n+ *     #peekLast}, {@link #element}, and {@link #size} are constant-time.\n  * <li>The enqueing and dequeing operations ({@link #offer}, {@link #add}, and\n  *     all the forms of {@link #poll} and {@link #remove()}) run in {@code\n- *     O(log n) time}\n+ *     O(log n) time}.\n  * <li>The {@link #remove(Object)} and {@link #contains} operations require\n- *     linear ({@code O(n)}) time\n+ *     linear ({@code O(n)}) time.\n  * <li>If you only access one end of the queue, and don't use a maximum size,\n  *     this class is functionally equivalent to {@link PriorityQueue}, but\n  *     significantly slower.",
      "parent_sha": "cb0cf6a40e815e662fb63438dbbfebaf6d9dcb80"
    }
  },
  {
    "oid": "0f9774d76fa6b0d7353b24e0550af519e936da07",
    "message": "Fix shutdown issue in AbstractScheduledService.\n\nThe issue is that if stopAsync() was called after an interation had been\nexecuted (but before it had actually run) then we would fail to unlock\nour lock and then shutdown would hang forever.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=80236732",
    "date": "2014-11-19T16:19:13Z",
    "url": "https://github.com/google/guava/commit/0f9774d76fa6b0d7353b24e0550af519e936da07",
    "details": {
      "sha": "0e99de77936a42100331fc6a3764a40c6c2241a3",
      "filename": "guava/src/com/google/common/util/concurrent/AbstractScheduledService.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/google/guava/blob/0f9774d76fa6b0d7353b24e0550af519e936da07/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FAbstractScheduledService.java",
      "raw_url": "https://github.com/google/guava/raw/0f9774d76fa6b0d7353b24e0550af519e936da07/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FAbstractScheduledService.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FAbstractScheduledService.java?ref=0f9774d76fa6b0d7353b24e0550af519e936da07",
      "patch": "@@ -171,11 +171,11 @@ private Scheduler() {}\n     private final Runnable task = new Runnable() {\n       @Override public void run() {\n         lock.lock();\n-        if (runningTask.isCancelled()) {\n-          // task may have been cancelled while blocked on the lock.\n-          return;\n-        }\n         try {\n+          if (runningTask.isCancelled()) {\n+            // task may have been cancelled while blocked on the lock.\n+            return;\n+          }\n           AbstractScheduledService.this.runOneIteration();\n         } catch (Throwable t) {\n           try {",
      "parent_sha": "1a7ecdee7b51e7b77a2518320525faf92fbf9c49"
    }
  },
  {
    "oid": "31985701e877434941c97891ba732478f0e97258",
    "message": "Make MediaType.charset() a little cheaper.\n\nSince we only care if there are zero or 1 elements we don't need to construct an ImmutableSet at all and so can avoid copying the list.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=149602676",
    "date": "2017-03-09T15:33:30Z",
    "url": "https://github.com/google/guava/commit/31985701e877434941c97891ba732478f0e97258",
    "details": {
      "sha": "ab000de234da707d5ea11725a6d88a15f73b4020",
      "filename": "guava/src/com/google/common/net/MediaType.java",
      "status": "modified",
      "additions": 36,
      "deletions": 14,
      "changes": 50,
      "blob_url": "https://github.com/google/guava/blob/31985701e877434941c97891ba732478f0e97258/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fnet%2FMediaType.java",
      "raw_url": "https://github.com/google/guava/raw/31985701e877434941c97891ba732478f0e97258/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fnet%2FMediaType.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fnet%2FMediaType.java?ref=31985701e877434941c97891ba732478f0e97258",
      "patch": "@@ -33,8 +33,6 @@\n import com.google.common.base.Optional;\n import com.google.common.collect.ImmutableListMultimap;\n import com.google.common.collect.ImmutableMultiset;\n-import com.google.common.collect.ImmutableSet;\n-import com.google.common.collect.Iterables;\n import com.google.common.collect.Maps;\n import com.google.common.collect.Multimap;\n import com.google.common.collect.Multimaps;\n@@ -107,11 +105,16 @@ public final class MediaType {\n   private static final Map<MediaType, MediaType> KNOWN_TYPES = Maps.newHashMap();\n \n   private static MediaType createConstant(String type, String subtype) {\n-    return addKnownType(new MediaType(type, subtype, ImmutableListMultimap.<String, String>of()));\n+    MediaType mediaType =\n+        addKnownType(new MediaType(type, subtype, ImmutableListMultimap.<String, String>of()));\n+    mediaType.parsedCharset = Optional.absent();\n+    return mediaType;\n   }\n \n   private static MediaType createConstantUtf8(String type, String subtype) {\n-    return addKnownType(new MediaType(type, subtype, UTF_8_CONSTANT_PARAMETERS));\n+    MediaType mediaType = addKnownType(new MediaType(type, subtype, UTF_8_CONSTANT_PARAMETERS));\n+    mediaType.parsedCharset = Optional.of(UTF_8);\n+    return mediaType;\n   }\n \n   private static MediaType addKnownType(MediaType mediaType) {\n@@ -529,6 +532,8 @@ private static MediaType addKnownType(MediaType mediaType) {\n   @LazyInit\n   private int hashCode;\n \n+  @LazyInit private Optional<Charset> parsedCharset;\n+\n   private MediaType(String type, String subtype, ImmutableListMultimap<String, String> parameters) {\n     this.type = type;\n     this.subtype = subtype;\n@@ -570,15 +575,23 @@ public ImmutableMultiset<String> apply(Collection<String> input) {\n    *     in this instance of the Java virtual machine\n    */\n   public Optional<Charset> charset() {\n-    ImmutableSet<String> charsetValues = ImmutableSet.copyOf(parameters.get(CHARSET_ATTRIBUTE));\n-    switch (charsetValues.size()) {\n-      case 0:\n-        return Optional.absent();\n-      case 1:\n-        return Optional.of(Charset.forName(Iterables.getOnlyElement(charsetValues)));\n-      default:\n-        throw new IllegalStateException(\"Multiple charset values defined: \" + charsetValues);\n+    // racy single-check idiom, this is safe because Optional is immutable.\n+    Optional<Charset> local = parsedCharset;\n+    if (local == null) {\n+      String value = null;\n+      local = Optional.absent();\n+      for (String currentValue : parameters.get(CHARSET_ATTRIBUTE)) {\n+        if (value == null) {\n+          value = currentValue;\n+          local = Optional.of(Charset.forName(value));\n+        } else if (!value.equals(currentValue)) {\n+          throw new IllegalStateException(\n+              \"Multiple charset values defined: \" + value + \", \" + currentValue);\n+        }\n+      }\n+      parsedCharset = local;\n     }\n+    return local;\n   }\n \n   /**\n@@ -619,6 +632,10 @@ public MediaType withParameter(String attribute, String value) {\n     }\n     builder.put(normalizedAttribute, normalizeParameterValue(normalizedAttribute, value));\n     MediaType mediaType = new MediaType(type, subtype, builder.build());\n+    // if the attribute isn't charset, we can just inherit the current parsedCharset\n+    if (!normalizedAttribute.equals(CHARSET_ATTRIBUTE)) {\n+      mediaType.parsedCharset = this.parsedCharset;\n+    }\n     // Return one of the constants if the media type is a known type.\n     return MoreObjects.firstNonNull(KNOWN_TYPES.get(mediaType), mediaType);\n   }\n@@ -634,7 +651,10 @@ public MediaType withParameter(String attribute, String value) {\n    */\n   public MediaType withCharset(Charset charset) {\n     checkNotNull(charset);\n-    return withParameter(CHARSET_ATTRIBUTE, charset.name());\n+    MediaType withCharset = withParameter(CHARSET_ATTRIBUTE, charset.name());\n+    // precache the charset so we don't need to parse it\n+    withCharset.parsedCharset = Optional.of(charset);\n+    return withCharset;\n   }\n \n   /** Returns true if either the type or subtype is the wildcard. */\n@@ -681,7 +701,9 @@ public boolean is(MediaType mediaTypeRange) {\n    *     type, but not the subtype.\n    */\n   public static MediaType create(String type, String subtype) {\n-    return create(type, subtype, ImmutableListMultimap.<String, String>of());\n+    MediaType mediaType = create(type, subtype, ImmutableListMultimap.<String, String>of());\n+    mediaType.parsedCharset = Optional.absent();\n+    return mediaType;\n   }\n \n   /**",
      "parent_sha": "1445486132811e9ce175ce463356c659d8e6339d"
    }
  },
  {
    "oid": "1554ca732769fc93a4a198eb5764c2e7bcea3f17",
    "message": "Better phrasing of Throwables.getCauseAs() documentation.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=143599868",
    "date": "2017-01-05T01:25:20Z",
    "url": "https://github.com/google/guava/commit/1554ca732769fc93a4a198eb5764c2e7bcea3f17",
    "details": {
      "sha": "d7df1f7dcd7295c86edaf34cbdd0be9423fd6eea",
      "filename": "guava/src/com/google/common/base/Throwables.java",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/google/guava/blob/1554ca732769fc93a4a198eb5764c2e7bcea3f17/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FThrowables.java",
      "raw_url": "https://github.com/google/guava/raw/1554ca732769fc93a4a198eb5764c2e7bcea3f17/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FThrowables.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FThrowables.java?ref=1554ca732769fc93a4a198eb5764c2e7bcea3f17",
      "patch": "@@ -284,9 +284,11 @@ public static List<Throwable> getCausalChain(Throwable throwable) {\n   /**\n    * Returns {@code throwable}'s cause, cast to {@code expectedCauseType}.\n    *\n-   * <p>Prefer this method instead of manually casting an exception's cause, for example This is\n-   * preferable to manually casting (e.g. {@code (IOException) e.getCause()}) because if a {@link\n-   * ClassCastException} results {@code throwable} will be preserved as that exception's cause.\n+   * <p>Prefer this method instead of manually casting an exception's cause. For example, {@code\n+   * (IOException) e.getCause()} throws a {@link ClassCastException} that discards the original\n+   * exception {@code e} if the cause is not an {@link IOException}, but {@code\n+   * Throwables.getCauseAs(e, IOException.class)} keeps {@code e} as the {@link\n+   * ClassCastException}'s cause.\n    *\n    * @throws ClassCastException if the cause cannot be cast to the expected type. The {@code\n    *     ClassCastException}'s cause is {@code throwable}.",
      "parent_sha": "1767cde568042d6cba069cdf13cc0e9ec4fb7ba8"
    }
  },
  {
    "oid": "c06d0ad496c0563030950a49122aba46a95faaf5",
    "message": "Update class docs of HostAndPort regarding immutability.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24957966",
    "date": "2011-10-27T14:15:38Z",
    "url": "https://github.com/google/guava/commit/c06d0ad496c0563030950a49122aba46a95faaf5",
    "details": {
      "sha": "eacc858aa491c67f73618ee6aaeefe1a1373d8ef",
      "filename": "guava/src/com/google/common/net/HostAndPort.java",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/google/guava/blob/c06d0ad496c0563030950a49122aba46a95faaf5/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fnet%2FHostAndPort.java",
      "raw_url": "https://github.com/google/guava/raw/c06d0ad496c0563030950a49122aba46a95faaf5/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fnet%2FHostAndPort.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fnet%2FHostAndPort.java?ref=c06d0ad496c0563030950a49122aba46a95faaf5",
      "patch": "@@ -26,8 +26,10 @@\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n+import javax.annotation.concurrent.Immutable;\n+\n /**\n- * HostAndPort performs high-level segmenting of host:port strings.\n+ * An immutable representation of a host and port.\n  *\n  * <p>Example usage:\n  * <pre>\n@@ -57,7 +59,7 @@\n  * @author Paul Marks\n  * @since 10.0\n  */\n-@Beta\n+@Beta @Immutable\n public final class HostAndPort {\n   /** Magic value indicating the absence of a port number. */\n   private static final int NO_PORT = -1;",
      "parent_sha": "aac333b616c49840a060f600fed3a8db49251167"
    }
  },
  {
    "oid": "1d16deaafeeac53b84f3b63bb75b5cb202f4d547",
    "message": "Loosen the tests around the regex: It's OK for the regex to match something that turns out to be invalid.\nThis makes the test pass on Android.\n\nAlso, add debugging output for when the test does fail.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99605586",
    "date": "2015-08-03T22:34:19Z",
    "url": "https://github.com/google/guava/commit/1d16deaafeeac53b84f3b63bb75b5cb202f4d547",
    "details": {
      "sha": "990ecf210ca291dd8a285a23bf2598f2ffe6b963",
      "filename": "guava-tests/test/com/google/common/primitives/DoublesTest.java",
      "status": "modified",
      "additions": 12,
      "deletions": 2,
      "changes": 14,
      "blob_url": "https://github.com/google/guava/blob/1d16deaafeeac53b84f3b63bb75b5cb202f4d547/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fprimitives%2FDoublesTest.java",
      "raw_url": "https://github.com/google/guava/raw/1d16deaafeeac53b84f3b63bb75b5cb202f4d547/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fprimitives%2FDoublesTest.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fprimitives%2FDoublesTest.java?ref=1d16deaafeeac53b84f3b63bb75b5cb202f4d547",
      "patch": "@@ -422,8 +422,18 @@ private static Double referenceTryParse(String input) {\n   private static void checkTryParse(String input) {\n     Double expected = referenceTryParse(input);\n     assertEquals(expected, Doubles.tryParse(input));\n-    assertEquals(expected != null,\n-        Doubles.FLOATING_POINT_PATTERN.matcher(input).matches());\n+    if (expected != null && !Doubles.FLOATING_POINT_PATTERN.matcher(input).matches()) {\n+      // TODO(cpovirk): Use SourceCodeEscapers if it is added to Guava.\n+      StringBuilder escapedInput = new StringBuilder();\n+      for (char c : input.toCharArray()) {\n+        if (c >= 0x20 && c <= 0x7E) {\n+          escapedInput.append(c);\n+        } else {\n+          escapedInput.append(String.format(\"\\\\u%04x\", (int) c));\n+        }\n+      }\n+      fail(\"FLOATING_POINT_PATTERN should have matched valid input <\" + escapedInput + \">\");\n+    }\n   }\n \n   @GwtIncompatible(\"Doubles.tryParse\")",
      "parent_sha": "c92fd867770ed68e59a79a9f73ccd991e032301b"
    }
  },
  {
    "oid": "a736c9c9888c00f388e371b33266e587769f631f",
    "message": "Shuffling from internal-only change.\nTo be used for a temporary migration aid only!\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64716281",
    "date": "2014-04-11T14:16:30Z",
    "url": "https://github.com/google/guava/commit/a736c9c9888c00f388e371b33266e587769f631f",
    "details": {
      "sha": "bb81d7e38226afa422cfd2e7620d8c18fc2ae706",
      "filename": "guava/src/com/google/common/collect/Range.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/google/guava/blob/a736c9c9888c00f388e371b33266e587769f631f/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FRange.java",
      "raw_url": "https://github.com/google/guava/raw/a736c9c9888c00f388e371b33266e587769f631f/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FRange.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FRange.java?ref=a736c9c9888c00f388e371b33266e587769f631f",
      "patch": "@@ -428,7 +428,7 @@ public BoundType upperBoundType() {\n    * can't be constructed at all.)\n    *\n    * <p>Note that certain discrete ranges such as the integer range {@code (3..4)} are <b>not</b>\n-   * considered empty, even though they contain no actual values.  In these cases, it may be \n+   * considered empty, even though they contain no actual values.  In these cases, it may be\n    * helpful to preprocess ranges with {@link #canonical(DiscreteDomain)}.\n    */\n   public boolean isEmpty() {\n@@ -529,9 +529,9 @@ public boolean encloses(Range<C> other) {\n    *\n    * <p>The connectedness relation is both reflexive and symmetric, but does not form an {@linkplain\n    * Equivalence equivalence relation} as it is not transitive.\n-   * \n+   *\n    * <p>Note that certain discrete ranges are not considered connected, even though there are no\n-   * elements \"between them.\"  For example, {@code [3, 5]} is not considered connected to {@code \n+   * elements \"between them.\"  For example, {@code [3, 5]} is not considered connected to {@code\n    * [6, 10]}.  In these cases, it may be desirable for both input ranges to be preprocessed with\n    * {@link #canonical(DiscreteDomain)} before testing for connectedness.\n    */",
      "parent_sha": "0dc1684fd14dcda25be4dc5ee9fcc1a680c3fb22"
    }
  },
  {
    "oid": "3d52e50b4e93523669d0a436dada37b9ab8fbd08",
    "message": "Improve @throws InterruptedException documentation for get().",
    "date": "2011-09-12T18:26:35Z",
    "url": "https://github.com/google/guava/commit/3d52e50b4e93523669d0a436dada37b9ab8fbd08",
    "details": {
      "sha": "425f3db59898bc5159e1891e128e8e2f2e422c82",
      "filename": "guava/src/com/google/common/util/concurrent/AbstractFuture.java",
      "status": "modified",
      "additions": 26,
      "deletions": 10,
      "changes": 36,
      "blob_url": "https://github.com/google/guava/blob/3d52e50b4e93523669d0a436dada37b9ab8fbd08/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FAbstractFuture.java",
      "raw_url": "https://github.com/google/guava/raw/3d52e50b4e93523669d0a436dada37b9ab8fbd08/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FAbstractFuture.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FAbstractFuture.java?ref=3d52e50b4e93523669d0a436dada37b9ab8fbd08",
      "patch": "@@ -73,8 +73,19 @@ public abstract class AbstractFuture<V> implements ListenableFuture<V> {\n   private final ExecutionList executionList = new ExecutionList();\n \n   /*\n-   * Blocks until either the task completes or the timeout expires.  Uses the\n-   * sync blocking-with-timeout support provided by AQS.\n+   * Improve the documentation of when InterruptedException is thrown. Our\n+   * behavior matches the JDK's, but the JDK's documentation is misleading.\n+   */\n+  /**\n+   * {@inheritDoc}\n+   *\n+   * <p>The default {@link AbstractFuture} implementation throws {@code\n+   * InterruptedException} if the current thread is interrupted before or during\n+   * the call, even if the value is already available.\n+   *\n+   * @throws InterruptedException if the current thread was interrupted before\n+   *     or during the call (optional but recommended).\n+   * @throws CancellationException {@inheritDoc}\n    */\n   @Override\n   public V get(long timeout, TimeUnit unit) throws InterruptedException,\n@@ -83,25 +94,30 @@ public V get(long timeout, TimeUnit unit) throws InterruptedException,\n   }\n \n   /*\n-   * Blocks until the task completes or we get interrupted. Uses the\n-   * interruptible blocking support provided by AQS.\n+   * Improve the documentation of when InterruptedException is thrown. Our\n+   * behavior matches the JDK's, but the JDK's documentation is misleading.\n+   */\n+  /**\n+   * {@inheritDoc}\n+   *\n+   * <p>The default {@link AbstractFuture} implementation throws {@code\n+   * InterruptedException} if the current thread is interrupted before or during\n+   * the call, even if the value is already available.\n+   *\n+   * @throws InterruptedException if the current thread was interrupted before\n+   *     or during the call (optional but recommended).\n+   * @throws CancellationException {@inheritDoc}\n    */\n   @Override\n   public V get() throws InterruptedException, ExecutionException {\n     return sync.get();\n   }\n \n-  /*\n-   * Checks if the sync is not in the running state.\n-   */\n   @Override\n   public boolean isDone() {\n     return sync.isDone();\n   }\n \n-  /*\n-   * Checks if the sync is in the cancelled state.\n-   */\n   @Override\n   public boolean isCancelled() {\n     return sync.isCancelled();",
      "parent_sha": "29d80d96ffbf32318de15706751386d963892cab"
    }
  },
  {
    "oid": "945a200eabe24528307f08a51689f54c12a25053",
    "message": "Improve error message.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78174362",
    "date": "2014-10-29T17:56:22Z",
    "url": "https://github.com/google/guava/commit/945a200eabe24528307f08a51689f54c12a25053",
    "details": {
      "sha": "75f1e20f9110bc91582ba8befc2270e69dfea1d9",
      "filename": "guava-tests/test/com/google/common/collect/FauxveridesTest.java",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/google/guava/blob/945a200eabe24528307f08a51689f54c12a25053/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FFauxveridesTest.java",
      "raw_url": "https://github.com/google/guava/raw/945a200eabe24528307f08a51689f54c12a25053/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FFauxveridesTest.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FFauxveridesTest.java?ref=945a200eabe24528307f08a51689f54c12a25053",
      "patch": "@@ -17,8 +17,8 @@\n package com.google.common.collect;\n \n import static com.google.common.collect.Lists.transform;\n+import static com.google.common.collect.Sets.difference;\n import static com.google.common.collect.Sets.newHashSet;\n-import static com.google.common.collect.Sets.newTreeSet;\n import static java.lang.reflect.Modifier.isPublic;\n import static java.lang.reflect.Modifier.isStatic;\n \n@@ -32,7 +32,6 @@\n import java.lang.reflect.Type;\n import java.lang.reflect.TypeVariable;\n import java.util.Arrays;\n-import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n@@ -112,10 +111,11 @@ public void testImmutableSortedSetCopyOfIterator() {\n   private void doHasAllFauxveridesTest(Class<?> descendant, Class<?> ancestor) {\n     Set<MethodSignature> required = getAllRequiredToFauxveride(ancestor);\n     Set<MethodSignature> found = getAllFauxveridden(descendant, ancestor);\n-    required.removeAll(found);\n-\n-    assertEquals(\"Must hide public static methods from ancestor classes\",\n-        Collections.emptySet(), newTreeSet(required));\n+    Set<MethodSignature> missing = ImmutableSortedSet.copyOf(difference(required, found));\n+    if (!missing.isEmpty()) {\n+      fail(String.format(\"%s should hide the public static methods declared in %s: %s\",\n+          descendant.getSimpleName(), ancestor.getSimpleName(), missing));\n+    }\n   }\n \n   private static Set<MethodSignature> getAllRequiredToFauxveride(Class<?> ancestor) {",
      "parent_sha": "cef87687204b7cf2a6dfb49f5fcdad7e613281a8"
    }
  },
  {
    "oid": "aa1f8216acb9d4e8f3ea40ab5254ed841163f346",
    "message": "Use Uninterruptibles.awaitUninterruptibly() instead of a hand-rolled version or an abort-on-interrupt version.\nReuse DelayingIdentityLoader instead of reimplementing.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25523974",
    "date": "2011-11-17T22:13:03Z",
    "url": "https://github.com/google/guava/commit/aa1f8216acb9d4e8f3ea40ab5254ed841163f346",
    "details": {
      "sha": "f3d977a3876b64a22ea50bd42bca499b84d5a640",
      "filename": "guava-tests/test/com/google/common/collect/MapMakerTest.java",
      "status": "modified",
      "additions": 4,
      "deletions": 22,
      "changes": 26,
      "blob_url": "https://github.com/google/guava/blob/aa1f8216acb9d4e8f3ea40ab5254ed841163f346/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FMapMakerTest.java",
      "raw_url": "https://github.com/google/guava/raw/aa1f8216acb9d4e8f3ea40ab5254ed841163f346/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FMapMakerTest.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FMapMakerTest.java?ref=aa1f8216acb9d4e8f3ea40ab5254ed841163f346",
      "patch": "@@ -16,6 +16,8 @@\n \n package com.google.common.collect;\n \n+import static com.google.common.util.concurrent.Uninterruptibles.awaitUninterruptibly;\n+\n import com.google.common.base.Function;\n import com.google.common.collect.MapMaker.RemovalNotification;\n import com.google.common.collect.MapMakerInternalMapTest.QueuingRemovalListener;\n@@ -46,16 +48,7 @@ public void testRemovalNotification_clear() throws InterruptedException {\n     // notification.\n \n     final CountDownLatch computingLatch = new CountDownLatch(1);\n-    Function<String, String> computingFunction = new Function<String, String>() {\n-      @Override public String apply(String key) {\n-        try {\n-          computingLatch.await();\n-        } catch (InterruptedException e) {\n-          Thread.currentThread().interrupt();\n-        }\n-        return key;\n-      }\n-    };\n+    Function<String, String> computingFunction = new DelayingIdentityLoader(computingLatch);\n     QueuingRemovalListener<String, String> listener = new QueuingRemovalListener<String, String>();\n \n     @SuppressWarnings(\"deprecation\") // test of deprecated code\n@@ -185,18 +178,7 @@ static final class DelayingIdentityLoader<T> implements Function<T, T> {\n     }\n \n     @Override public T apply(T key) {\n-      boolean interrupted = false;\n-      while (true) {\n-        try {\n-          delayLatch.await();\n-          break;\n-        } catch (InterruptedException e) {\n-          interrupted = true;\n-        }\n-      }\n-      if (interrupted) {\n-        Thread.currentThread().interrupt();\n-      }\n+      awaitUninterruptibly(delayLatch);\n       return key;\n     }\n   }",
      "parent_sha": "c6de7a5f6d4f990ce38abffe1c67d413bcaef8b8"
    }
  },
  {
    "oid": "f52ed9ee8e39c679e07ee118dfb7f7dfc3179659",
    "message": "\nFix issue 572 and issue 614\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1776\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@388 8138a162-5c33-11de-8abc-d1c337b90d21",
    "date": "2011-05-06T11:07:26Z",
    "url": "https://github.com/google/guava/commit/f52ed9ee8e39c679e07ee118dfb7f7dfc3179659",
    "details": {
      "sha": "ec85b99e976fe212602372140738d0237737e3c4",
      "filename": "guava/src/com/google/common/net/InetAddresses.java",
      "status": "modified",
      "additions": 25,
      "deletions": 26,
      "changes": 51,
      "blob_url": "https://github.com/google/guava/blob/f52ed9ee8e39c679e07ee118dfb7f7dfc3179659/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fnet%2FInetAddresses.java",
      "raw_url": "https://github.com/google/guava/raw/f52ed9ee8e39c679e07ee118dfb7f7dfc3179659/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fnet%2FInetAddresses.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fnet%2FInetAddresses.java?ref=f52ed9ee8e39c679e07ee118dfb7f7dfc3179659",
      "patch": "@@ -240,27 +240,15 @@ private static byte[] textToNumericFormatV4(String ipString) {\n       return null;\n     }\n \n-    String[] address = ipString.split(\"\\\\.\");\n+    String[] address = ipString.split(\"\\\\.\", IPV4_PART_COUNT + 1);\n     if (address.length != IPV4_PART_COUNT) {\n       return null;\n     }\n \n     byte[] bytes = new byte[IPV4_PART_COUNT];\n     try {\n       for (int i = 0; i < bytes.length; i++) {\n-        int piece = Integer.parseInt(address[i]);\n-        if (piece < 0 || piece > 255) {\n-          return null;\n-        }\n-\n-        // No leading zeroes are allowed.  See\n-        // http://tools.ietf.org/html/draft-main-ipaddr-text-rep-00\n-        // section 2.1 for discussion.\n-\n-        if (address[i].startsWith(\"0\") && address[i].length() != 1) {\n-          return null;\n-        }\n-        bytes[i] = (byte) piece;\n+        bytes[i] = parseOctet(address[i]);\n       }\n     } catch (NumberFormatException ex) {\n       return null;\n@@ -296,12 +284,7 @@ private static byte[] textToNumericFormatV6(String ipString) {\n       String[] parts = addressHalves[0].split(\":\", IPV6_PART_COUNT);\n       try {\n         for (int i = 0; i < parts.length; i++) {\n-          if (parts[i].equals(\"\")) {\n-            // No empty segments permitted.\n-            return null;\n-          }\n-          int piece = Integer.parseInt(parts[i], 16);\n-          rawBytes.putShort(2 * i, (short) piece);\n+          rawBytes.putShort(2 * i, parseHextet(parts[i]));\n         }\n         partsHi = parts.length;\n       } catch (NumberFormatException ex) {\n@@ -320,13 +303,8 @@ private static byte[] textToNumericFormatV6(String ipString) {\n         try {\n           for (int i = 0; i < parts.length; i++) {\n             int partsIndex = parts.length - i - 1;\n-            if (parts[partsIndex].equals(\"\")) {\n-              // No empty segments permitted.\n-              return null;\n-            }\n-            int piece = Integer.parseInt(parts[partsIndex], 16);\n             int bytesIndex = 2 * (IPV6_PART_COUNT - i - 1);\n-            rawBytes.putShort(bytesIndex, (short) piece);\n+            rawBytes.putShort(bytesIndex, parseHextet(parts[partsIndex]));\n           }\n           partsLo = parts.length;\n         } catch (NumberFormatException ex) {\n@@ -364,6 +342,27 @@ private static String convertDottedQuadToHex(String ipString) {\n     return initialPart + penultimate + \":\" + ultimate;\n   }\n \n+  private static byte parseOctet(String ipPart) {\n+    int octet = Integer.parseInt(ipPart);\n+    // Disallow negatives (including -0), and values that don't fit in 8 bits.\n+    // Also disallow leading zeroes, because no clear standard exists on\n+    // whether these should be interpreted as decimal or octal.\n+    if (ipPart.startsWith(\"-\") || octet > 255 ||\n+        (ipPart.startsWith(\"0\") && ipPart.length() > 1)) {\n+      throw new NumberFormatException();\n+    }\n+    return (byte) octet;\n+  }\n+\n+  private static short parseHextet(String ipPart) {\n+    int hextet = Integer.parseInt(ipPart, 16);\n+    // Disallow negatives (including -0), and values that don't fit in 16 bits.\n+    if (ipPart.startsWith(\"-\") || hextet > 0xffff) {\n+      throw new NumberFormatException();\n+    }\n+    return (short) hextet;\n+  }\n+\n   /**\n    * Returns the string representation of an {@link InetAddress} suitable\n    * for inclusion in a URI.",
      "parent_sha": "e3b22f92567bc66425772f5deb2e1f9d2d7b13d8"
    }
  },
  {
    "oid": "c9914b84572ad3fdc572a016a0be4caaf785a00f",
    "message": "Return the underlying graph/network for multiple calls to Graphs.transpose()\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130954918",
    "date": "2016-08-22T20:23:12Z",
    "url": "https://github.com/google/guava/commit/c9914b84572ad3fdc572a016a0be4caaf785a00f",
    "details": {
      "sha": "aea3acb9311a3124ac70d9e3c04e394762a45974",
      "filename": "guava/src/com/google/common/graph/Graphs.java",
      "status": "modified",
      "additions": 136,
      "deletions": 112,
      "changes": 248,
      "blob_url": "https://github.com/google/guava/blob/c9914b84572ad3fdc572a016a0be4caaf785a00f/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fgraph%2FGraphs.java",
      "raw_url": "https://github.com/google/guava/raw/c9914b84572ad3fdc572a016a0be4caaf785a00f/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fgraph%2FGraphs.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fgraph%2FGraphs.java?ref=c9914b84572ad3fdc572a016a0be4caaf785a00f",
      "patch": "@@ -304,157 +304,181 @@ public static <N> BasicGraph<N> transpose(BasicGraph<N> graph) {\n    * Returns a view of {@code graph} with the direction (if any) of every edge reversed. All other\n    * properties remain intact, and further updates to {@code graph} will be reflected in the view.\n    */\n-  public static <N, V> Graph<N, V> transpose(final Graph<N, V> graph) {\n+  public static <N, V> Graph<N, V> transpose(Graph<N, V> graph) {\n     if (!graph.isDirected()) {\n       return graph; // the transpose of an undirected graph is an identical graph\n     }\n \n-    return new AbstractGraph<N, V>() {\n-      @Override\n-      public Set<N> nodes() {\n-        return graph.nodes();\n-      }\n+    if (graph instanceof TransposedGraph) {\n+      return ((TransposedGraph<N, V>) graph).graph;\n+    }\n \n-      // Defer to AbstractGraph's implementation of edges(), which is based of successors().\n+    return new TransposedGraph<N, V>(graph);\n+  }\n \n-      @Override\n-      public boolean isDirected() {\n-        return graph.isDirected();\n-      }\n+  private static class TransposedGraph<N, V> extends AbstractGraph<N, V> {\n+    private final Graph<N, V> graph;\n \n-      @Override\n-      public boolean allowsSelfLoops() {\n-        return graph.allowsSelfLoops();\n-      }\n+    TransposedGraph(Graph<N, V> graph) {\n+      this.graph = graph;\n+    }\n \n-      @Override\n-      public ElementOrder<N> nodeOrder() {\n-        return graph.nodeOrder();\n-      }\n+    @Override\n+    public Set<N> nodes() {\n+      return graph.nodes();\n+    }\n \n-      @Override\n-      public Set<N> adjacentNodes(Object node) {\n-        return graph.adjacentNodes(node);\n-      }\n+    // Defer to AbstractGraph's implementation of edges(), which is based of successors().\n \n-      @Override\n-      public Set<N> predecessors(Object node) {\n-        return graph.successors(node); // transpose\n-      }\n+    @Override\n+    public boolean isDirected() {\n+      return graph.isDirected();\n+    }\n \n-      @Override\n-      public Set<N> successors(Object node) {\n-        return graph.predecessors(node); // transpose\n-      }\n+    @Override\n+    public boolean allowsSelfLoops() {\n+      return graph.allowsSelfLoops();\n+    }\n \n-      @Override\n-      public V edgeValue(Object nodeA, Object nodeB) {\n-        return graph.edgeValue(nodeB, nodeA); // transpose\n-      }\n+    @Override\n+    public ElementOrder<N> nodeOrder() {\n+      return graph.nodeOrder();\n+    }\n \n-      @Override\n-      public V edgeValueOrDefault(Object nodeA, Object nodeB, V defaultValue) {\n-        return graph.edgeValueOrDefault(nodeB, nodeA, defaultValue); // transpose\n-      }\n+    @Override\n+    public Set<N> adjacentNodes(Object node) {\n+      return graph.adjacentNodes(node);\n+    }\n \n-      @Override\n-      protected long edgeCount() {\n-        return graph.edges().size();\n-      }\n-    };\n+    @Override\n+    public Set<N> predecessors(Object node) {\n+      return graph.successors(node); // transpose\n+    }\n+\n+    @Override\n+    public Set<N> successors(Object node) {\n+      return graph.predecessors(node); // transpose\n+    }\n+\n+    @Override\n+    public V edgeValue(Object nodeA, Object nodeB) {\n+      return graph.edgeValue(nodeB, nodeA); // transpose\n+    }\n+\n+    @Override\n+    public V edgeValueOrDefault(Object nodeA, Object nodeB, V defaultValue) {\n+      return graph.edgeValueOrDefault(nodeB, nodeA, defaultValue); // transpose\n+    }\n+\n+    @Override\n+    protected long edgeCount() {\n+      return graph.edges().size();\n+    }\n   }\n \n   /**\n    * Returns a view of {@code network} with the direction (if any) of every edge reversed. All other\n    * properties remain intact, and further updates to {@code network} will be reflected in the view.\n    */\n-  public static <N, E> Network<N, E> transpose(final Network<N, E> network) {\n+  public static <N, E> Network<N, E> transpose(Network<N, E> network) {\n     if (!network.isDirected()) {\n       return network; // the transpose of an undirected network is an identical network\n     }\n \n-    return new AbstractNetwork<N, E>() {\n-      @Override\n-      public Set<N> nodes() {\n-        return network.nodes();\n-      }\n+    if (network instanceof TransposedNetwork) {\n+      return ((TransposedNetwork<N, E>) network).network;\n+    }\n \n-      @Override\n-      public Set<E> edges() {\n-        return network.edges();\n-      }\n+    return new TransposedNetwork<N, E>(network);\n+  }\n \n-      @Override\n-      public boolean isDirected() {\n-        return network.isDirected();\n-      }\n+  private static class TransposedNetwork<N, E> extends AbstractNetwork<N, E> {\n+    private final Network<N, E> network;\n \n-      @Override\n-      public boolean allowsParallelEdges() {\n-        return network.allowsParallelEdges();\n-      }\n+    TransposedNetwork(Network<N, E> network) {\n+      this.network = network;\n+    }\n \n-      @Override\n-      public boolean allowsSelfLoops() {\n-        return network.allowsSelfLoops();\n-      }\n+    @Override\n+    public Set<N> nodes() {\n+      return network.nodes();\n+    }\n \n-      @Override\n-      public ElementOrder<N> nodeOrder() {\n-        return network.nodeOrder();\n-      }\n+    @Override\n+    public Set<E> edges() {\n+      return network.edges();\n+    }\n \n-      @Override\n-      public ElementOrder<E> edgeOrder() {\n-        return network.edgeOrder();\n-      }\n+    @Override\n+    public boolean isDirected() {\n+      return network.isDirected();\n+    }\n \n-      @Override\n-      public Set<N> adjacentNodes(Object node) {\n-        return network.adjacentNodes(node);\n-      }\n+    @Override\n+    public boolean allowsParallelEdges() {\n+      return network.allowsParallelEdges();\n+    }\n \n-      @Override\n-      public Set<N> predecessors(Object node) {\n-        return network.successors(node); // transpose\n-      }\n+    @Override\n+    public boolean allowsSelfLoops() {\n+      return network.allowsSelfLoops();\n+    }\n \n-      @Override\n-      public Set<N> successors(Object node) {\n-        return network.predecessors(node); // transpose\n-      }\n+    @Override\n+    public ElementOrder<N> nodeOrder() {\n+      return network.nodeOrder();\n+    }\n \n-      @Override\n-      public Set<E> incidentEdges(Object node) {\n-        return network.incidentEdges(node);\n-      }\n+    @Override\n+    public ElementOrder<E> edgeOrder() {\n+      return network.edgeOrder();\n+    }\n \n-      @Override\n-      public Set<E> inEdges(Object node) {\n-        return network.outEdges(node); // transpose\n-      }\n+    @Override\n+    public Set<N> adjacentNodes(Object node) {\n+      return network.adjacentNodes(node);\n+    }\n \n-      @Override\n-      public Set<E> outEdges(Object node) {\n-        return network.inEdges(node); // transpose\n-      }\n+    @Override\n+    public Set<N> predecessors(Object node) {\n+      return network.successors(node); // transpose\n+    }\n \n-      @Override\n-      public Endpoints<N> incidentNodes(Object edge) {\n-        Endpoints<N> endpoints = network.incidentNodes(edge);\n-        return Endpoints.of(network, endpoints.nodeB(), endpoints.nodeA()); // transpose\n-      }\n+    @Override\n+    public Set<N> successors(Object node) {\n+      return network.predecessors(node); // transpose\n+    }\n \n-      @Override\n-      public Set<E> adjacentEdges(Object edge) {\n-        return network.adjacentEdges(edge);\n-      }\n+    @Override\n+    public Set<E> incidentEdges(Object node) {\n+      return network.incidentEdges(node);\n+    }\n \n-      @Override\n-      public Set<E> edgesConnecting(Object nodeA, Object nodeB) {\n-        return network.edgesConnecting(nodeB, nodeA); // transpose\n-      }\n-    };\n+    @Override\n+    public Set<E> inEdges(Object node) {\n+      return network.outEdges(node); // transpose\n+    }\n+\n+    @Override\n+    public Set<E> outEdges(Object node) {\n+      return network.inEdges(node); // transpose\n+    }\n+\n+    @Override\n+    public Endpoints<N> incidentNodes(Object edge) {\n+      Endpoints<N> endpoints = network.incidentNodes(edge);\n+      return Endpoints.of(network, endpoints.nodeB(), endpoints.nodeA()); // transpose\n+    }\n+\n+    @Override\n+    public Set<E> adjacentEdges(Object edge) {\n+      return network.adjacentEdges(edge);\n+    }\n+\n+    @Override\n+    public Set<E> edgesConnecting(Object nodeA, Object nodeB) {\n+      return network.edgesConnecting(nodeB, nodeA); // transpose\n+    }\n   }\n \n   // Graph copy methods",
      "parent_sha": "ccccbf25427fbc2141ff9b502c6cbe467ac2a967"
    }
  },
  {
    "oid": "a090e4a156923e48ea5ecd1520cce1b380d59dc8",
    "message": "\ndon't return null value from computation; fixes race condition where value was garbage-collected between null check and return\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=514\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@207 8138a162-5c33-11de-8abc-d1c337b90d21",
    "date": "2011-02-15T21:14:13Z",
    "url": "https://github.com/google/guava/commit/a090e4a156923e48ea5ecd1520cce1b380d59dc8",
    "details": {
      "sha": "7b269385ced47ce97c5bbbc63770b7ad093f26d1",
      "filename": "src/com/google/common/collect/ComputingConcurrentHashMap.java",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/google/guava/blob/a090e4a156923e48ea5ecd1520cce1b380d59dc8/src%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FComputingConcurrentHashMap.java",
      "raw_url": "https://github.com/google/guava/raw/a090e4a156923e48ea5ecd1520cce1b380d59dc8/src%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FComputingConcurrentHashMap.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/src%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FComputingConcurrentHashMap.java?ref=a090e4a156923e48ea5ecd1520cce1b380d59dc8",
      "patch": "@@ -77,10 +77,14 @@ class ComputingSegment extends Segment {\n \n     V compute(K key, int hash) {\n       outer: while (true) {\n+        // TODO(user): refactor getLiveEntry into getLiveValue\n         ReferenceEntry<K, V> entry = getLiveEntry(key, hash);\n         if (entry != null) {\n           // current entry is live, and read was already recorded\n-          return entry.getValueReference().get();\n+          V value = entry.getValueReference().get();\n+          if (value != null) {\n+            return value;\n+          }\n         }\n \n         // entry is absent, invalid, or computing\n@@ -149,8 +153,7 @@ V compute(K key, int hash) {\n           while (true) {\n             try {\n               checkState(!Thread.holdsLock(entry), \"Recursive computation\");\n-              ValueReference<K, V> valueReference = entry.getValueReference();\n-              V value = valueReference.waitForValue();\n+              V value = entry.getValueReference().waitForValue();\n               if (value == null) {\n                 // this entry could be partially-collected, don't clearValue\n                 continue outer;",
      "parent_sha": "95616b5ec55ec6bb09d3090774ff572a4296678a"
    }
  },
  {
    "oid": "bf1931b9d9a68e3ef7c3c1ba1c5377aaac06bb9d",
    "message": "Stop using `forward.new InverseEntrySet()` because javac9 generates Objects.requireNonNull() calls for it.\n\nThat method isn't available under old versions of Android.\nThankfully, the calls are caught by Animal Sniffer.\nInternally, [] eliminates these when targeting Java 6 (b/32446315). Another reason to build with Bazel someday?\n\nNo effect on Proguard numbers.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=183091037",
    "date": "2018-01-24T18:13:07Z",
    "url": "https://github.com/google/guava/commit/bf1931b9d9a68e3ef7c3c1ba1c5377aaac06bb9d",
    "details": {
      "sha": "423fa8180426104589a03ca18065220047eb6da2",
      "filename": "android/guava/src/com/google/common/collect/HashBiMap.java",
      "status": "modified",
      "additions": 55,
      "deletions": 31,
      "changes": 86,
      "blob_url": "https://github.com/google/guava/blob/bf1931b9d9a68e3ef7c3c1ba1c5377aaac06bb9d/android%2Fguava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FHashBiMap.java",
      "raw_url": "https://github.com/google/guava/raw/bf1931b9d9a68e3ef7c3c1ba1c5377aaac06bb9d/android%2Fguava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FHashBiMap.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/android%2Fguava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FHashBiMap.java?ref=bf1931b9d9a68e3ef7c3c1ba1c5377aaac06bb9d",
      "patch": "@@ -653,22 +653,28 @@ public void clear() {\n   }\n \n   /** Shared supertype of keySet, values, entrySet, and inverse.entrySet. */\n-  abstract class View<T> extends AbstractSet<T> {\n+  abstract static class View<K, V, T> extends AbstractSet<T> {\n+    final HashBiMap<K, V> biMap;\n+\n+    View(HashBiMap<K, V> biMap) {\n+      this.biMap = biMap;\n+    }\n+\n     abstract T forEntry(int entry);\n \n     @Override\n     public Iterator<T> iterator() {\n       return new Iterator<T>() {\n-        private int index = firstInInsertionOrder;\n+        private int index = biMap.firstInInsertionOrder;\n         private int indexToRemove = ABSENT;\n-        private int expectedModCount = modCount;\n+        private int expectedModCount = biMap.modCount;\n \n         // Calls to setValue on inverse entries can move already-visited entries to the end.\n         // Make sure we don't visit those.\n-        private int remaining = size;\n+        private int remaining = biMap.size;\n \n         private void checkForComodification() {\n-          if (modCount != expectedModCount) {\n+          if (biMap.modCount != expectedModCount) {\n             throw new ConcurrentModificationException();\n           }\n         }\n@@ -686,7 +692,7 @@ public T next() {\n           }\n           T result = forEntry(index);\n           indexToRemove = index;\n-          index = nextInInsertionOrder[index];\n+          index = biMap.nextInInsertionOrder[index];\n           remaining--;\n           return result;\n         }\n@@ -695,24 +701,24 @@ public T next() {\n         public void remove() {\n           checkForComodification();\n           CollectPreconditions.checkRemove(indexToRemove != ABSENT);\n-          removeEntry(indexToRemove);\n-          if (index == size) {\n+          biMap.removeEntry(indexToRemove);\n+          if (index == biMap.size) {\n             index = indexToRemove;\n           }\n           indexToRemove = ABSENT;\n-          expectedModCount = modCount;\n+          expectedModCount = biMap.modCount;\n         }\n       };\n     }\n \n     @Override\n     public int size() {\n-      return size;\n+      return biMap.size;\n     }\n \n     @Override\n     public void clear() {\n-      HashBiMap.this.clear();\n+      biMap.clear();\n     }\n   }\n \n@@ -724,7 +730,11 @@ public Set<K> keySet() {\n     return (result == null) ? keySet = new KeySet() : result;\n   }\n \n-  final class KeySet extends View<K> {\n+  final class KeySet extends View<K, V, K> {\n+    KeySet() {\n+      super(HashBiMap.this);\n+    }\n+\n     @Override\n     K forEntry(int entry) {\n       return keys[entry];\n@@ -756,7 +766,11 @@ public Set<V> values() {\n     return (result == null) ? valueSet = new ValueSet() : result;\n   }\n \n-  final class ValueSet extends View<V> {\n+  final class ValueSet extends View<K, V, V> {\n+    ValueSet() {\n+      super(HashBiMap.this);\n+    }\n+\n     @Override\n     V forEntry(int entry) {\n       return values[entry];\n@@ -788,7 +802,11 @@ public Set<Entry<K, V>> entrySet() {\n     return (result == null) ? entrySet = new EntrySet() : result;\n   }\n \n-  final class EntrySet extends View<Entry<K, V>> {\n+  final class EntrySet extends View<K, V, Entry<K, V>> {\n+    EntrySet() {\n+      super(HashBiMap.this);\n+    }\n+\n     @Override\n     public boolean contains(@NullableDecl Object o) {\n       if (o instanceof Entry) {\n@@ -953,7 +971,7 @@ public Set<K> values() {\n     @Override\n     public Set<Entry<V, K>> entrySet() {\n       Set<Entry<V, K>> result = inverseEntrySet;\n-      return (result == null) ? inverseEntrySet = forward.new InverseEntrySet() : result;\n+      return (result == null) ? inverseEntrySet = new InverseEntrySet<K, V>(forward) : result;\n     }\n \n     @GwtIncompatible(\"serialization\")\n@@ -963,15 +981,19 @@ private void readObject(ObjectInputStream in) throws ClassNotFoundException, IOE\n     }\n   }\n \n-  class InverseEntrySet extends View<Entry<V, K>> {\n+  static class InverseEntrySet<K, V> extends View<K, V, Entry<V, K>> {\n+    InverseEntrySet(HashBiMap<K, V> biMap) {\n+      super(biMap);\n+    }\n+\n     @Override\n     public boolean contains(@NullableDecl Object o) {\n       if (o instanceof Entry) {\n         Entry<?, ?> e = (Entry<?, ?>) o;\n         Object v = e.getKey();\n         Object k = e.getValue();\n-        int eIndex = findEntryByValue(v);\n-        return eIndex != ABSENT && Objects.equal(keys[eIndex], k);\n+        int eIndex = biMap.findEntryByValue(v);\n+        return eIndex != ABSENT && Objects.equal(biMap.keys[eIndex], k);\n       }\n       return false;\n     }\n@@ -983,9 +1005,9 @@ public boolean remove(Object o) {\n         Object v = e.getKey();\n         Object k = e.getValue();\n         int vHash = Hashing.smearedHash(v);\n-        int eIndex = findEntryByValue(v, vHash);\n-        if (eIndex != ABSENT && Objects.equal(keys[eIndex], k)) {\n-          removeEntryValueHashKnown(eIndex, vHash);\n+        int eIndex = biMap.findEntryByValue(v, vHash);\n+        if (eIndex != ABSENT && Objects.equal(biMap.keys[eIndex], k)) {\n+          biMap.removeEntryValueHashKnown(eIndex, vHash);\n           return true;\n         }\n       }\n@@ -994,7 +1016,7 @@ public boolean remove(Object o) {\n \n     @Override\n     Entry<V, K> forEntry(int entry) {\n-      return new EntryForValue(entry);\n+      return new EntryForValue<K, V>(biMap, entry);\n     }\n   }\n \n@@ -1003,18 +1025,20 @@ Entry<V, K> forEntry(int entry) {\n    * the value is moved, deleted, or reinserted, it will account for that -- while not doing any\n    * extra work if the value has not moved.\n    */\n-  final class EntryForValue extends AbstractMapEntry<V, K> {\n+  static final class EntryForValue<K, V> extends AbstractMapEntry<V, K> {\n+    final HashBiMap<K, V> biMap;\n     final V value;\n     int index;\n \n-    EntryForValue(int index) {\n-      this.value = values[index];\n+    EntryForValue(HashBiMap<K, V> biMap, int index) {\n+      this.biMap = biMap;\n+      this.value = biMap.values[index];\n       this.index = index;\n     }\n \n     private void updateIndex() {\n-      if (index == ABSENT || index > size || !Objects.equal(value, values[index])) {\n-        index = findEntryByValue(value);\n+      if (index == ABSENT || index > biMap.size || !Objects.equal(value, biMap.values[index])) {\n+        index = biMap.findEntryByValue(value);\n       }\n     }\n \n@@ -1026,20 +1050,20 @@ public V getKey() {\n     @Override\n     public K getValue() {\n       updateIndex();\n-      return (index == ABSENT) ? null : keys[index];\n+      return (index == ABSENT) ? null : biMap.keys[index];\n     }\n \n     @Override\n     public K setValue(K key) {\n       updateIndex();\n       if (index == ABSENT) {\n-        return HashBiMap.this.putInverse(value, key, false);\n+        return biMap.putInverse(value, key, false);\n       }\n-      K oldKey = keys[index];\n+      K oldKey = biMap.keys[index];\n       if (Objects.equal(oldKey, key)) {\n         return key;\n       }\n-      replaceKeyInEntry(index, key, false);\n+      biMap.replaceKeyInEntry(index, key, false);\n       return oldKey;\n     }\n   }",
      "parent_sha": "d57a40e546cfe6daa8cdfe3fb9c5c8dafb446227"
    }
  },
  {
    "oid": "1f5af9bda144a0a4344ef954ab55a1b507035e28",
    "message": "Fix javadoc typo: wrapTask\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=74092956",
    "date": "2014-09-02T14:05:28Z",
    "url": "https://github.com/google/guava/commit/1f5af9bda144a0a4344ef954ab55a1b507035e28",
    "details": {
      "sha": "e6a324b911bbce766b13e05e4b99f9e0d4b32be8",
      "filename": "guava/src/com/google/common/util/concurrent/WrappingExecutorService.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/google/guava/blob/1f5af9bda144a0a4344ef954ab55a1b507035e28/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FWrappingExecutorService.java",
      "raw_url": "https://github.com/google/guava/raw/1f5af9bda144a0a4344ef954ab55a1b507035e28/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FWrappingExecutorService.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FWrappingExecutorService.java?ref=1f5af9bda144a0a4344ef954ab55a1b507035e28",
      "patch": "@@ -53,7 +53,7 @@ protected WrappingExecutorService(ExecutorService delegate) {\n   /**\n    * Wraps a {@code Callable} for submission to the underlying executor. This\n    * method is also applied to any {@code Runnable} passed to the default\n-   * implementation of {@link #wrapTest(Runnable)}.\n+   * implementation of {@link #wrapTask(Runnable)}.\n    */\n   protected abstract <T> Callable<T> wrapTask(Callable<T> callable);\n ",
      "parent_sha": "f5d24b9c0bc6a5f6b203e52626a44d40c7fa04d5"
    }
  },
  {
    "oid": "4b9da9148906ad483af308daf48d597046d306dd",
    "message": "Fixed a tiny Javadoc typo. You might be asking yourself: why is he\nwasting his time with this? I... don't know.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25918269",
    "date": "2011-12-05T20:46:31Z",
    "url": "https://github.com/google/guava/commit/4b9da9148906ad483af308daf48d597046d306dd",
    "details": {
      "sha": "39a6693825038e52518bc94d0f608e98959f1915",
      "filename": "guava-testlib/src/com/google/common/testing/ClusterException.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/google/guava/blob/4b9da9148906ad483af308daf48d597046d306dd/guava-testlib%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Ftesting%2FClusterException.java",
      "raw_url": "https://github.com/google/guava/raw/4b9da9148906ad483af308daf48d597046d306dd/guava-testlib%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Ftesting%2FClusterException.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava-testlib%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Ftesting%2FClusterException.java?ref=4b9da9148906ad483af308daf48d597046d306dd",
      "patch": "@@ -49,7 +49,7 @@\n  *     }\n  *   }\n  *   if (exceptions.size() > 0) {\n- *     throw ExceptionCluster.create(exceptions);\n+ *     throw ClusterException.create(exceptions);\n  *   }\n  * }\n  * </pre>",
      "parent_sha": "909420f21d93ca1e9866baa6a10c88fb3cc295db"
    }
  },
  {
    "oid": "58fc10825fd1add23d5631aa1d587de942363507",
    "message": "Change Futures.allAsList and .successfulAsList to return an unmodifiable list.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44306369",
    "date": "2013-03-22T14:47:24Z",
    "url": "https://github.com/google/guava/commit/58fc10825fd1add23d5631aa1d587de942363507",
    "details": {
      "sha": "d23ca1925849421b63a12431b26b2e92574fb4fe",
      "filename": "guava/src/com/google/common/util/concurrent/Futures.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/google/guava/blob/58fc10825fd1add23d5631aa1d587de942363507/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FFutures.java",
      "raw_url": "https://github.com/google/guava/raw/58fc10825fd1add23d5631aa1d587de942363507/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FFutures.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FFutures.java?ref=58fc10825fd1add23d5631aa1d587de942363507",
      "patch": "@@ -37,6 +37,7 @@\n import java.lang.reflect.InvocationTargetException;\n import java.lang.reflect.UndeclaredThrowableException;\n import java.util.Arrays;\n+import java.util.Collections;\n import java.util.List;\n import java.util.concurrent.CancellationException;\n import java.util.concurrent.CountDownLatch;\n@@ -1610,8 +1611,7 @@ public List<V> combine(List<Optional<V>> values) {\n             for (Optional<V> element : values) {\n               result.add(element != null ? element.orNull() : null);\n             }\n-            // TODO(user): This should ultimately return an unmodifiableList\n-            return result;\n+            return Collections.unmodifiableList(result);\n           }\n         });\n   }",
      "parent_sha": "7bcb8e4836be241f88b4467a39cf8a0a686afdf2"
    }
  },
  {
    "oid": "3d8c430e2c047aa400512e4eaee8d3dd25a0ad09",
    "message": "Rollback of changelist 65383672, which broke a test that mocks RateLimiter.\n\n*** Original change description ***\n\nReimplement legacy RateLimiter as a passthrough to its reimplementation under the new RateLimiter API.\nI've mostly attempted to leave the behavior untouched, but there are a few changes:\n- Fixed a bug that would arise with a negative nanoTime() (probably unlikely, but it could happen).\n- Removed logging.\n- Stop swallowing interrupts.\n\n***\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=65402625",
    "date": "2014-04-25T16:24:48Z",
    "url": "https://github.com/google/guava/commit/3d8c430e2c047aa400512e4eaee8d3dd25a0ad09",
    "details": {
      "sha": "33e269b2d4871132c2045acadf554bb9d3d31737",
      "filename": "guava/src/com/google/common/util/concurrent/RateLimiter.java",
      "status": "modified",
      "additions": 8,
      "deletions": 18,
      "changes": 26,
      "blob_url": "https://github.com/google/guava/blob/3d8c430e2c047aa400512e4eaee8d3dd25a0ad09/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FRateLimiter.java",
      "raw_url": "https://github.com/google/guava/raw/3d8c430e2c047aa400512e4eaee8d3dd25a0ad09/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FRateLimiter.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FRateLimiter.java?ref=3d8c430e2c047aa400512e4eaee8d3dd25a0ad09",
      "patch": "@@ -345,13 +345,7 @@ public final void setRate(double permitsPerSecond) {\n    * this {@code RateLimiter}, and it is only updated after invocations\n    * to {@linkplain #setRate}.\n    */\n-  public final double getRate() {\n-    synchronized (mutex) {\n-      return doGetRate();\n-    }\n-  }\n-\n-  abstract double doGetRate();\n+  public abstract double getRate();\n \n   /**\n    * Acquires a single permit from this {@code RateLimiter}, blocking until the\n@@ -466,7 +460,7 @@ public boolean tryAcquire(int permits, long timeout, TimeUnit unit) {\n     long microsToWait;\n     synchronized (mutex) {\n       long nowMicros = stopwatch.readMicros();\n-      if (!canAcquire(nowMicros, timeoutMicros)) {\n+      if (!canAcquire(nowMicros, nowMicros + timeoutMicros)) {\n         return false;\n       } else {\n         microsToWait = reserveNextTicket(permits, nowMicros);\n@@ -476,11 +470,7 @@ public boolean tryAcquire(int permits, long timeout, TimeUnit unit) {\n     return true;\n   }\n \n-  private final boolean canAcquire(long nowMicros, long timeoutMicros) {\n-    return earliestAvailable(nowMicros) <= nowMicros + timeoutMicros;\n-  }\n-\n-  abstract long earliestAvailable(long nowMicros);\n+  abstract boolean canAcquire(long nowMicros, long deadlineMicros);\n \n   abstract long reserveNextTicket(int requiredPermits, long nowMicros);\n \n@@ -504,7 +494,7 @@ private abstract static class SmoothRateLimiter extends RateLimiter {\n      * The interval between two unit requests, at our stable rate. E.g., a stable rate of 5 permits\n      * per second has a stable interval of 200ms.\n      */\n-    double stableIntervalMicros;\n+    volatile double stableIntervalMicros;\n \n     /**\n      * The time when the next request (no matter its size) will be granted. After granting a\n@@ -528,13 +518,13 @@ final void doSetRate(double permitsPerSecond, long nowMicros) {\n     abstract void doSetRate(double permitsPerSecond, double stableIntervalMicros);\n \n     @Override\n-    final double doGetRate() {\n+    public final double getRate() {\n       return SECONDS.toMicros(1L) / stableIntervalMicros;\n     }\n \n     @Override\n-    final long earliestAvailable(long nowMicros) {\n-      return nextFreeTicketMicros;\n+    final boolean canAcquire(long nowMicros, long deadlineMicros) {\n+      return nextFreeTicketMicros <= deadlineMicros;\n     }\n \n     /**\n@@ -757,7 +747,7 @@ long readMicros() {\n         }\n \n         @Override\n-        void sleepMicrosUninterruptibly(long micros) {\n+        public void sleepMicrosUninterruptibly(long micros) {\n           if (micros > 0) {\n             Uninterruptibles.sleepUninterruptibly(micros, MICROSECONDS);\n           }",
      "parent_sha": "4e0e95864d462825eef27a864c8db181b0430276"
    }
  },
  {
    "oid": "9db1ad6ef2aac319e91db7e6b06a9a418a4eae21",
    "message": "Convert more users from to-be-deprecated Futures.chain to new AsyncFunction-based Future.transform.\nDeprecate Futures.chain.\n\n- xargs perlsed 'Function<(\\s*)(.*),(\\s+)ListenableFuture<(\\s*)([^?].*)>>(\\s+)(.*)(\\s+)=(\\s+)new(\\s+)Function<(\\s*)(.*),(\\s+)ListenableFuture<([^?].*)>>' 'AsyncFunction<$1$2,$3$4$5>$6$7$8=$9new$10AsyncFunction<$11$12,$13$14>' < files\n- xargs perlsed 'Function<(\\s*)(.*),(\\s+)ListenableFuture<(\\s*)([^?].*)>>' 'AsyncFunction<$1$2,$3$4$5>' < files\n- xargs perlsed '\\bFutures.chain' Futures.transform < files\n- importtool --add=com.google.common.util.concurrent.AsyncFunction $(g4 whatsout -c 26028933 ....java)\n- many manual fixes\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26043722",
    "date": "2011-12-09T16:06:08Z",
    "url": "https://github.com/google/guava/commit/9db1ad6ef2aac319e91db7e6b06a9a418a4eae21",
    "details": {
      "sha": "4c0c56053a26e51c042e9678b9e1adc9fe15e9de",
      "filename": "guava/src/com/google/common/util/concurrent/Futures.java",
      "status": "modified",
      "additions": 6,
      "deletions": 10,
      "changes": 16,
      "blob_url": "https://github.com/google/guava/blob/9db1ad6ef2aac319e91db7e6b06a9a418a4eae21/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FFutures.java",
      "raw_url": "https://github.com/google/guava/raw/9db1ad6ef2aac319e91db7e6b06a9a418a4eae21/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FFutures.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FFutures.java?ref=9db1ad6ef2aac319e91db7e6b06a9a418a4eae21",
      "patch": "@@ -157,11 +157,6 @@ public X apply(Exception e) {\n   }\n \n   /**\n-   * <b>Deprecated.</b> Convert your {@code Function} to a {@code\n-   * AsyncFunction}, and use {@link #transform(ListenableFuture,\n-   * AsyncFunction)}. This method is scheduled to be removed from Guava in Guava\n-   * release 12.0.\n-   *\n    * <p>Returns a new {@code ListenableFuture} whose result is asynchronously\n    * derived from the result of the given {@code Future}. More precisely, the\n    * returned {@code Future} takes its result from a {@code Future} produced by\n@@ -206,6 +201,9 @@ public X apply(Exception e) {\n    *     to the results of the returned future.  This will be run in the thread\n    *     that notifies input it is complete.\n    * @return A future that holds result of the chain.\n+   * @deprecated Convert your {@code Function} to a {@code AsyncFunction}, and\n+   *     use {@link #transform(ListenableFuture, AsyncFunction)}. This method is\n+   *     scheduled to be removed from Guava in Guava release 12.0.\n    */\n   @Deprecated\n   public static <I, O> ListenableFuture<O> chain(ListenableFuture<I> input,\n@@ -214,11 +212,6 @@ public static <I, O> ListenableFuture<O> chain(ListenableFuture<I> input,\n   }\n \n   /**\n-   * <b>Deprecated.</b> Convert your {@code Function} to a {@code\n-   * AsyncFunction}, and use {@link #transform(ListenableFuture, AsyncFunction,\n-   * Executor)}. This method is scheduled to be removed from Guava in Guava\n-   * release 12.0.\n-   *\n    * <p>Returns a new {@code ListenableFuture} whose result is asynchronously\n    * derived from the result of the given {@code Future}. More precisely, the\n    * returned {@code Future} takes its result from a {@code Future} produced by\n@@ -263,6 +256,9 @@ public static <I, O> ListenableFuture<O> chain(ListenableFuture<I> input,\n    *     to the results of the returned future.\n    * @param executor Executor to run the function in.\n    * @return A future that holds result of the chain.\n+   * @deprecated Convert your {@code Function} to a {@code AsyncFunction}, and\n+   *     use {@link #transform(ListenableFuture, AsyncFunction, Executor)}. This\n+   *     method is scheduled to be removed from Guava in Guava release 12.0.\n    */\n   @Deprecated\n   public static <I, O> ListenableFuture<O> chain(ListenableFuture<I> input,",
      "parent_sha": "b041be5124ef01b392e21a3ff0bc3d93f552156d"
    }
  },
  {
    "oid": "72da1ce15303d395d4e6f659e4ceef41c3dcf935",
    "message": "Deprecate Executor-less Futures methods upon incoming migration completion to the ones with a MoreExecutors.directExecutor(), discouraging internal use, while keeping the open-source version in Guava intact. They and scheduled to be deleted in April 2018.\n\nFor more information, see []\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151237280",
    "date": "2017-03-27T13:47:36Z",
    "url": "https://github.com/google/guava/commit/72da1ce15303d395d4e6f659e4ceef41c3dcf935",
    "details": {
      "sha": "ab46d2700c11fa0d71ebe481a152e342659d4589",
      "filename": "guava/src/com/google/common/util/concurrent/Futures.java",
      "status": "modified",
      "additions": 113,
      "deletions": 61,
      "changes": 174,
      "blob_url": "https://github.com/google/guava/blob/72da1ce15303d395d4e6f659e4ceef41c3dcf935/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FFutures.java",
      "raw_url": "https://github.com/google/guava/raw/72da1ce15303d395d4e6f659e4ceef41c3dcf935/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FFutures.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FFutures.java?ref=72da1ce15303d395d4e6f659e4ceef41c3dcf935",
      "patch": "@@ -237,18 +237,19 @@ public static <V, X extends Exception> CheckedFuture<V, X> immediateFailedChecke\n    *\n    * <p>Usage example:\n    *\n-   * <pre>   {@code\n-   *   ListenableFuture<Integer> fetchCounterFuture = ...;\n-   *\n-   *   // Falling back to a zero counter in case an exception happens when\n-   *   // processing the RPC to fetch counters.\n-   *   ListenableFuture<Integer> faultTolerantFuture = Futures.catching(\n-   *       fetchCounterFuture, FetchException.class,\n-   *       new Function<FetchException, Integer>() {\n-   *         public Integer apply(FetchException e) {\n-   *           return 0;\n-   *         }\n-   *       });}</pre>\n+   * <pre>{@code\n+   * ListenableFuture<Integer> fetchCounterFuture = ...;\n+   *\n+   * // Falling back to a zero counter in case an exception happens when\n+   * // processing the RPC to fetch counters.\n+   * ListenableFuture<Integer> faultTolerantFuture = Futures.catching(\n+   *     fetchCounterFuture, FetchException.class,\n+   *     new Function<FetchException, Integer>() {\n+   *       public Integer apply(FetchException e) {\n+   *         return 0;\n+   *       }\n+   *     });\n+   * }</pre>\n    *\n    * <p>This overload, which does not accept an executor, uses {@code directExecutor}, a dangerous\n    * choice in some cases. See the discussion in the {@link ListenableFuture#addListener\n@@ -267,7 +268,13 @@ public static <V, X extends Exception> CheckedFuture<V, X> immediateFailedChecke\n    *     means the cause of the {@link ExecutionException} thrown by {@code input.get()} or, if\n    *     {@code get()} throws a different kind of exception, that exception itself.\n    * @since 19.0\n+   * @deprecated Use {@linkplain #catching(ListenableFuture, Class, Function, Executor) the overload\n+   *     that requires an executor}. For identical behavior, pass {@link\n+   *     MoreExecutors#directExecutor}, but consider whether another executor would be safer, as\n+   *     discussed in the {@link ListenableFuture#addListener ListenableFuture.addListener}\n+   *     documentation. This method is scheduled to be removed in April 2018.\n    */\n+  @Deprecated\n   @Partially.GwtIncompatible(\"AVAILABLE but requires exceptionType to be Throwable.class\")\n   public static <V, X extends Throwable> ListenableFuture<V> catching(\n       ListenableFuture<? extends V> input,\n@@ -337,37 +344,39 @@ public static <V, X extends Throwable> ListenableFuture<V> catching(\n    *\n    * <p>Usage examples:\n    *\n-   * <pre>   {@code\n-   *   ListenableFuture<Integer> fetchCounterFuture = ...;\n+   * <pre>{@code\n+   * ListenableFuture<Integer> fetchCounterFuture = ...;\n    *\n-   *   // Falling back to a zero counter in case an exception happens when\n-   *   // processing the RPC to fetch counters.\n-   *   ListenableFuture<Integer> faultTolerantFuture = Futures.catchingAsync(\n-   *       fetchCounterFuture, FetchException.class,\n-   *       new AsyncFunction<FetchException, Integer>() {\n-   *         public ListenableFuture<Integer> apply(FetchException e) {\n-   *           return immediateFuture(0);\n-   *         }\n-   *       });}</pre>\n+   * // Falling back to a zero counter in case an exception happens when\n+   * // processing the RPC to fetch counters.\n+   * ListenableFuture<Integer> faultTolerantFuture = Futures.catchingAsync(\n+   *     fetchCounterFuture, FetchException.class,\n+   *     new AsyncFunction<FetchException, Integer>() {\n+   *       public ListenableFuture<Integer> apply(FetchException e) {\n+   *         return immediateFuture(0);\n+   *       }\n+   *     });\n+   * }</pre>\n    *\n    * <p>The fallback can also choose to propagate the original exception when desired:\n    *\n-   * <pre>   {@code\n-   *   ListenableFuture<Integer> fetchCounterFuture = ...;\n-   *\n-   *   // Falling back to a zero counter only in case the exception was a\n-   *   // TimeoutException.\n-   *   ListenableFuture<Integer> faultTolerantFuture = Futures.catchingAsync(\n-   *       fetchCounterFuture, FetchException.class,\n-   *       new AsyncFunction<FetchException, Integer>() {\n-   *         public ListenableFuture<Integer> apply(FetchException e)\n-   *             throws FetchException {\n-   *           if (omitDataOnFetchFailure) {\n-   *             return immediateFuture(0);\n-   *           }\n-   *           throw e;\n+   * <pre>{@code\n+   * ListenableFuture<Integer> fetchCounterFuture = ...;\n+   *\n+   * // Falling back to a zero counter only in case the exception was a\n+   * // TimeoutException.\n+   * ListenableFuture<Integer> faultTolerantFuture = Futures.catchingAsync(\n+   *     fetchCounterFuture, FetchException.class,\n+   *     new AsyncFunction<FetchException, Integer>() {\n+   *       public ListenableFuture<Integer> apply(FetchException e)\n+   *           throws FetchException {\n+   *         if (omitDataOnFetchFailure) {\n+   *           return immediateFuture(0);\n    *         }\n-   *       });}</pre>\n+   *         throw e;\n+   *       }\n+   *     });\n+   * }</pre>\n    *\n    * <p>This overload, which does not accept an executor, uses {@code directExecutor}, a dangerous\n    * choice in some cases. See the discussion in the {@link ListenableFuture#addListener\n@@ -387,8 +396,14 @@ public static <V, X extends Throwable> ListenableFuture<V> catching(\n    *     means the cause of the {@link ExecutionException} thrown by {@code input.get()} or, if\n    *     {@code get()} throws a different kind of exception, that exception itself.\n    * @since 19.0 (similar functionality in 14.0 as {@code withFallback})\n+   * @deprecated Use {@linkplain #catchingAsync(ListenableFuture, Class, AsyncFunction, Executor)\n+   *     the overload that requires an executor}. For identical behavior, pass {@link\n+   *     MoreExecutors#directExecutor}, but consider whether another executor would be safer, as\n+   *     discussed in the {@link ListenableFuture#addListener ListenableFuture.addListener}\n+   *     documentation. This method is scheduled to be removed in April 2018.\n    */\n   @CanIgnoreReturnValue // TODO(kak): @CheckReturnValue\n+  @Deprecated\n   @Partially.GwtIncompatible(\"AVAILABLE but requires exceptionType to be Throwable.class\")\n   public static <V, X extends Throwable> ListenableFuture<V> catchingAsync(\n       ListenableFuture<? extends V> input,\n@@ -500,16 +515,17 @@ public static <V> ListenableFuture<V> withTimeout(\n    * by applying the given {@code AsyncFunction} to the result of the original {@code Future}.\n    * Example usage:\n    *\n-   * <pre>   {@code\n-   *   ListenableFuture<RowKey> rowKeyFuture = indexService.lookUp(query);\n-   *   AsyncFunction<RowKey, QueryResult> queryFunction =\n-   *       new AsyncFunction<RowKey, QueryResult>() {\n-   *         public ListenableFuture<QueryResult> apply(RowKey rowKey) {\n-   *           return dataService.read(rowKey);\n-   *         }\n-   *       };\n-   *   ListenableFuture<QueryResult> queryFuture =\n-   *       transformAsync(rowKeyFuture, queryFunction);}</pre>\n+   * <pre>{@code\n+   * ListenableFuture<RowKey> rowKeyFuture = indexService.lookUp(query);\n+   * AsyncFunction<RowKey, QueryResult> queryFunction =\n+   *     new AsyncFunction<RowKey, QueryResult>() {\n+   *       public ListenableFuture<QueryResult> apply(RowKey rowKey) {\n+   *         return dataService.read(rowKey);\n+   *       }\n+   *     };\n+   * ListenableFuture<QueryResult> queryFuture =\n+   *     transformAsync(rowKeyFuture, queryFunction);\n+   * }</pre>\n    *\n    * <p>This overload, which does not accept an executor, uses {@code directExecutor}, a dangerous\n    * choice in some cases. See the discussion in the {@link ListenableFuture#addListener\n@@ -529,7 +545,13 @@ public static <V> ListenableFuture<V> withTimeout(\n    * @return A future that holds result of the function (if the input succeeded) or the original\n    *     input's failure (if not)\n    * @since 19.0 (in 11.0 as {@code transform})\n+   * @deprecated Use {@linkplain #transformAsync(ListenableFuture, AsyncFunction, Executor) the\n+   *     overload that requires an executor}. For identical behavior, pass {@link\n+   *     MoreExecutors#directExecutor}, but consider whether another executor would be safer, as\n+   *     discussed in the {@link ListenableFuture#addListener ListenableFuture.addListener}\n+   *     documentation. This method is scheduled to be removed in April 2018.\n    */\n+  @Deprecated\n   public static <I, O> ListenableFuture<O> transformAsync(\n       ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function) {\n     return AbstractTransformFuture.create(input, function);\n@@ -587,16 +609,17 @@ public static <I, O> ListenableFuture<O> transformAsync(\n    * Future}. If {@code input} fails, the returned {@code Future} fails with the same exception (and\n    * the function is not invoked). Example usage:\n    *\n-   * <pre>   {@code\n-   *   ListenableFuture<QueryResult> queryFuture = ...;\n-   *   Function<QueryResult, List<Row>> rowsFunction =\n-   *       new Function<QueryResult, List<Row>>() {\n-   *         public List<Row> apply(QueryResult queryResult) {\n-   *           return queryResult.getRows();\n-   *         }\n-   *       };\n-   *   ListenableFuture<List<Row>> rowsFuture =\n-   *       transform(queryFuture, rowsFunction);}</pre>\n+   * <pre>{@code\n+   * ListenableFuture<QueryResult> queryFuture = ...;\n+   * Function<QueryResult, List<Row>> rowsFunction =\n+   *     new Function<QueryResult, List<Row>>() {\n+   *       public List<Row> apply(QueryResult queryResult) {\n+   *         return queryResult.getRows();\n+   *       }\n+   *     };\n+   * ListenableFuture<List<Row>> rowsFuture =\n+   *     transform(queryFuture, rowsFunction);\n+   * }</pre>\n    *\n    * <p>This overload, which does not accept an executor, uses {@code directExecutor}, a dangerous\n    * choice in some cases. See the discussion in the {@link ListenableFuture#addListener\n@@ -613,10 +636,16 @@ public static <I, O> ListenableFuture<O> transformAsync(\n    *\n    * @param input The future to transform\n    * @param function A Function to transform the results of the provided future to the results of\n-   *     the returned future.  This will be run in the thread that notifies input it is complete.\n+   *     the returned future. This will be run in the thread that notifies input it is complete.\n    * @return A future that holds result of the transformation.\n    * @since 9.0 (in 1.0 as {@code compose})\n+   * @deprecated Use {@linkplain #transform(ListenableFuture, Function, Executor) the overload that\n+   *     requires an executor}. For identical behavior, pass {@link MoreExecutors#directExecutor},\n+   *     but consider whether another executor would be safer, as discussed in the {@link\n+   *     ListenableFuture#addListener ListenableFuture.addListener} documentation. This method is\n+   *     scheduled to be removed in April 2018.\n    */\n+  @Deprecated\n   public static <I, O> ListenableFuture<O> transform(\n       ListenableFuture<I> input, Function<? super I, ? extends O> function) {\n     return AbstractTransformFuture.create(input, function);\n@@ -912,7 +941,14 @@ public <C> ListenableFuture<C> callAsync(AsyncCallable<C> combiner, Executor exe\n     /**\n      * Like {@link #callAsync(AsyncCallable, Executor)} but using {@linkplain\n      * MoreExecutors#directExecutor direct executor}.\n+     *\n+     * @deprecated Use {@linkplain #callAsync(AsyncCallable, Executor) the overload that requires an\n+     *     executor}. For identical behavior, pass {@link MoreExecutors#directExecutor}, but\n+     *     consider whether another executor would be safer, as discussed in the {@link\n+     *     ListenableFuture#addListener ListenableFuture.addListener} documentation. This method is\n+     *     scheduled to be removed in April 2018.\n      */\n+    @Deprecated\n     public <C> ListenableFuture<C> callAsync(AsyncCallable<C> combiner) {\n       return callAsync(combiner, directExecutor());\n     }\n@@ -939,8 +975,15 @@ public <C> ListenableFuture<C> call(Callable<C> combiner, Executor executor) {\n     /**\n      * Like {@link #call(Callable, Executor)} but using {@linkplain MoreExecutors#directExecutor\n      * direct executor}.\n+     *\n+     * @deprecated Use {@linkplain #call(Callable, Executor) the overload that requires an\n+     *     executor}. For identical behavior, pass {@link MoreExecutors#directExecutor}, but\n+     *     consider whether another executor would be safer, as discussed in the {@link\n+     *     ListenableFuture#addListener ListenableFuture.addListener} documentation. This method is\n+     *     scheduled to be removed in April 2018.\n      */\n     @CanIgnoreReturnValue\n+    @Deprecated\n     public <C> ListenableFuture<C> call(Callable<C> combiner) {\n       return call(combiner, directExecutor());\n     }\n@@ -1087,7 +1130,9 @@ public void run() {\n    * <p>There is no guaranteed ordering of execution of callbacks, but any callback added through\n    * this method is guaranteed to be called once the computation is complete.\n    *\n-   * Example: <pre> {@code\n+   * <p>Example:\n+   *\n+   * <pre>{@code\n    * ListenableFuture<QueryResult> future = ...;\n    * addCallback(future,\n    *     new FutureCallback<QueryResult>() {\n@@ -1097,7 +1142,8 @@ public void run() {\n    *       public void onFailure(Throwable t) {\n    *         reportError(t);\n    *       }\n-   *     });}</pre>\n+   *     });\n+   * }</pre>\n    *\n    * <p>This overload, which does not accept an executor, uses {@code directExecutor}, a dangerous\n    * choice in some cases. See the discussion in the {@link ListenableFuture#addListener\n@@ -1109,7 +1155,13 @@ public void run() {\n    * @param future The future attach the callback to.\n    * @param callback The callback to invoke when {@code future} is completed.\n    * @since 10.0\n+   * @deprecated Use {@linkplain #addCallback(ListenableFuture, FutureCallback, Executor) the\n+   *     overload that requires an executor}. For identical behavior, pass {@link\n+   *     MoreExecutors#directExecutor}, but consider whether another executor would be safer, as\n+   *     discussed in the {@link ListenableFuture#addListener ListenableFuture.addListener}\n+   *     documentation. This method is scheduled to be removed in April 2018.\n    */\n+  @Deprecated\n   public static <V> void addCallback(\n       ListenableFuture<V> future, FutureCallback<? super V> callback) {\n     addCallback(future, callback, directExecutor());",
      "parent_sha": "15ba0ea3f295a2fe322ceebaccba347ae0fe3f21"
    }
  },
  {
    "oid": "e231a8d44703c9e741a8ddd219929807341e6197",
    "message": "Document the current behavior of ImmutableRangeSet.Builder, even if we might change that behavior later.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38653539",
    "date": "2012-11-15T20:03:25Z",
    "url": "https://github.com/google/guava/commit/e231a8d44703c9e741a8ddd219929807341e6197",
    "details": {
      "sha": "db540e94c3e2632f7b8db932ba709f2dcaac458e",
      "filename": "guava/src/com/google/common/collect/ImmutableRangeSet.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/google/guava/blob/e231a8d44703c9e741a8ddd219929807341e6197/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FImmutableRangeSet.java",
      "raw_url": "https://github.com/google/guava/raw/e231a8d44703c9e741a8ddd219929807341e6197/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FImmutableRangeSet.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FImmutableRangeSet.java?ref=e231a8d44703c9e741a8ddd219929807341e6197",
      "patch": "@@ -554,11 +554,11 @@ public Builder() {\n     }\n \n     /**\n-     * Add the specified range to this builder.  {@linkplain Range#isConnected Connected} ranges\n-     * will be {@linkplain Range#span(Range) coalesced}.\n+     * Add the specified range to this builder.  Adjacent/abutting ranges are permitted, but\n+     * empty ranges, or ranges with nonempty overlap, are forbidden.\n      *\n-     * @throws IllegalArgumentException if {@code range} is empty or overlaps any ranges already\n-     *         added to the builder\n+     * @throws IllegalArgumentException if {@code range} is empty or has nonempty intersection with\n+     *         any ranges already added to the builder\n      */\n     public Builder<C> add(Range<C> range) {\n       if (range.isEmpty()) {",
      "parent_sha": "0330f712f56cc53633874e95bdc1203cf881eb85"
    }
  },
  {
    "oid": "9203df3996481fc701c47300eb35d2a9c57cdeae",
    "message": "Made the size of RegularImmutableMap more conservative.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29893278",
    "date": "2012-05-08T18:07:36Z",
    "url": "https://github.com/google/guava/commit/9203df3996481fc701c47300eb35d2a9c57cdeae",
    "details": {
      "sha": "7a2e8597cc6f600cd3ff6ed2f955bdf5e701aecb",
      "filename": "guava/src/com/google/common/collect/RegularImmutableMap.java",
      "status": "modified",
      "additions": 20,
      "deletions": 3,
      "changes": 23,
      "blob_url": "https://github.com/google/guava/blob/9203df3996481fc701c47300eb35d2a9c57cdeae/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FRegularImmutableMap.java",
      "raw_url": "https://github.com/google/guava/raw/9203df3996481fc701c47300eb35d2a9c57cdeae/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FRegularImmutableMap.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FRegularImmutableMap.java?ref=9203df3996481fc701c47300eb35d2a9c57cdeae",
      "patch": "@@ -74,10 +74,27 @@ final class RegularImmutableMap<K, V> extends ImmutableMap<K, V> {\n     keySetHashCode = keySetHashCodeMutable;\n   }\n \n+  /**\n+   * Closed addressing tends to perform well even with high load factors.\n+   * Being conservative here ensures that the table is still likely to be\n+   * relatively sparse (hence it misses fast) while saving space.\n+   */\n+  private static final double MAX_LOAD_FACTOR = 1.2;\n+\n+  /**\n+   * Give a good hash table size for the given number of keys.\n+   *\n+   * @param size The number of keys to be inserted. Must be greater than or equal to 2.\n+   */\n   private static int chooseTableSize(int size) {\n-    // least power of 2 greater than size\n-    int tableSize = Integer.highestOneBit(size) << 1;\n-    checkArgument(tableSize > 0, \"table too large: %s\", size);\n+    // Get the recommended table size.\n+    // Round down to the nearest power of 2.\n+    int tableSize = Integer.highestOneBit(size);\n+    // Check to make sure that we will not exceed the maximum load factor.\n+    if ((double) size / tableSize > MAX_LOAD_FACTOR) {\n+      tableSize <<= 1;\n+      checkArgument(tableSize > 0, \"table too large: %s\", size);\n+    }\n     return tableSize;\n   }\n ",
      "parent_sha": "3ec0620713e3d6b82397067d5b2b1e8e4e6ccb48"
    }
  },
  {
    "oid": "15ed775e5e27bf12b6ffe7cf49debd2029295672",
    "message": "Add reference to Funnels from Funnel javadocs.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46629147",
    "date": "2013-05-16T20:29:39Z",
    "url": "https://github.com/google/guava/commit/15ed775e5e27bf12b6ffe7cf49debd2029295672",
    "details": {
      "sha": "0afec805872f754dc22141641f81194f7dc8cee9",
      "filename": "guava/src/com/google/common/hash/Funnel.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/google/guava/blob/15ed775e5e27bf12b6ffe7cf49debd2029295672/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fhash%2FFunnel.java",
      "raw_url": "https://github.com/google/guava/raw/15ed775e5e27bf12b6ffe7cf49debd2029295672/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fhash%2FFunnel.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fhash%2FFunnel.java?ref=15ed775e5e27bf12b6ffe7cf49debd2029295672",
      "patch": "@@ -20,6 +20,7 @@\n \n /**\n  * An object which can send data from an object of type {@code T} into a {@code PrimitiveSink}.\n+ * Implementations for common types can be found in {@link Funnels}.\n  *\n  * <p>Note that serialization of {@linkplain BloomFilter bloom filters} requires the proper\n  * serialization of funnels. When possible, it is recommended that funnels be implemented as a\n@@ -34,7 +35,7 @@\n  *           .putInt(person.getAge());\n  *     }\n  *   }}</pre>\n- * \n+ *\n  * @author Dimitris Andreou\n  * @since 11.0\n  */",
      "parent_sha": "d5f00005a2215ecbee0f8e1efc5eb90417c7a604"
    }
  },
  {
    "oid": "c19946804421d2319eab08987f914dd6536c3beb",
    "message": "Document some possibly surprising semantics of Files.copy(File, File).\n\n(Guava issues 515 and 1063.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32279885",
    "date": "2012-07-26T19:48:50Z",
    "url": "https://github.com/google/guava/commit/c19946804421d2319eab08987f914dd6536c3beb",
    "details": {
      "sha": "f0752ad6472805751c9d25b41ee987ad7ea44ab9",
      "filename": "guava/src/com/google/common/io/Files.java",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/google/guava/blob/c19946804421d2319eab08987f914dd6536c3beb/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fio%2FFiles.java",
      "raw_url": "https://github.com/google/guava/raw/c19946804421d2319eab08987f914dd6536c3beb/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fio%2FFiles.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fio%2FFiles.java?ref=c19946804421d2319eab08987f914dd6536c3beb",
      "patch": "@@ -281,7 +281,12 @@ public static void copy(File from, OutputStream to) throws IOException {\n \n   /**\n    * Copies all the bytes from one file to another.\n-   *.\n+   *\n+   * <p><b>Warning:</b> If {@code to} represents an existing file, that file\n+   * will be overwritten with the contents of {@code from}. If {@code to} and\n+   * {@code from} refer to the <i>same</i> file, the contents of that file\n+   * will be deleted.\n+   *\n    * @param from the source file\n    * @param to the destination file\n    * @throws IOException if an I/O error occurs",
      "parent_sha": "525b9e540acdef1dbccc7f51aa16a6592e57d5e0"
    }
  },
  {
    "oid": "b26983651b4c13ae718e2eb22df13c4fde77cc4d",
    "message": "\nUse BstTesting.defaultNullPointerTester() in all tests\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2748\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@570 8138a162-5c33-11de-8abc-d1c337b90d21",
    "date": "2011-07-27T21:24:22Z",
    "url": "https://github.com/google/guava/commit/b26983651b4c13ae718e2eb22df13c4fde77cc4d",
    "details": {
      "sha": "985d9539bfeaa74f89c920453872fdedfc36d3a5",
      "filename": "guava/src/com/google/common/collect/BstOperations.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/google/guava/blob/b26983651b4c13ae718e2eb22df13c4fde77cc4d/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FBstOperations.java",
      "raw_url": "https://github.com/google/guava/raw/b26983651b4c13ae718e2eb22df13c4fde77cc4d/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FBstOperations.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FBstOperations.java?ref=b26983651b4c13ae718e2eb22df13c4fde77cc4d",
      "patch": "@@ -37,7 +37,7 @@ private BstOperations() {}\n    * Returns the node with key {@code key} in {@code tree}, if any.\n    */\n   @Nullable\n-  static <K, N extends BstNode<K, N>> N seek(\n+  public static <K, N extends BstNode<K, N>> N seek(\n       Comparator<? super K> comparator, @Nullable N tree, K key) {\n     checkNotNull(comparator);\n     if (tree == null) {\n@@ -56,7 +56,7 @@ static <K, N extends BstNode<K, N>> N seek(\n    * Returns the result of performing the mutation specified by {@code mutationRule} in {@code\n    * tree} at the location with key {@code key}.\n    */\n-  static <K, N extends BstNode<K, N>> BstMutationResult<K, N> mutate(\n+  public static <K, N extends BstNode<K, N>> BstMutationResult<K, N> mutate(\n       Comparator<? super K> comparator, BstMutationRule<K, N> mutationRule, @Nullable N tree,\n       K key) {\n     checkNotNull(comparator);",
      "parent_sha": "87fa2e243109d1f28c94ddb8392411115273d4f1"
    }
  },
  {
    "oid": "eb89cdb025ca9e5498e51f0aa1303f0dbfa09d5c",
    "message": "Stop using assertSeededHashFunctionEquals for goodFastHash.\nThe problem is that goodFastHash(n) is sometimes equal to goodFastHash(m) even when n and m are different.\nBasically, the value is rounded up to a multiple of 128.\n(It's a size, not a seed as it is for the other Hashing methods.)\n\nCurrently the test passes because of the specific values that the test Random generates.\nHowever, which specific numbers are used for goodFastHash is dependent on the order in which the Hashing methods are tested, which is dependent on the JVM.\nThe methods are reordered with the latest JDK7 build, breaking the test (at least in Guava, which has a slightly different set of methods than internally).\n\nWe could \"fix\" this by sorting the methods before testing them, but the fundamental problem is that assertSeededHashFunctionEquals makes sense for seeds but not sizes.\n(This basic fact is hinted at by a comment that already existed in the test.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=60202745",
    "date": "2014-01-25T00:51:42Z",
    "url": "https://github.com/google/guava/commit/eb89cdb025ca9e5498e51f0aa1303f0dbfa09d5c",
    "details": {
      "sha": "89a239755baf019e63aa269abe799c0abb936705",
      "filename": "guava-tests/test/com/google/common/hash/HashingTest.java",
      "status": "modified",
      "additions": 35,
      "deletions": 4,
      "changes": 39,
      "blob_url": "https://github.com/google/guava/blob/eb89cdb025ca9e5498e51f0aa1303f0dbfa09d5c/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fhash%2FHashingTest.java",
      "raw_url": "https://github.com/google/guava/raw/eb89cdb025ca9e5498e51f0aa1303f0dbfa09d5c/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fhash%2FHashingTest.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fhash%2FHashingTest.java?ref=eb89cdb025ca9e5498e51f0aa1303f0dbfa09d5c",
      "patch": "@@ -17,6 +17,7 @@\n package com.google.common.hash;\n \n import static com.google.common.hash.Hashing.ConcatenatedHashFunction;\n+import static com.google.common.hash.Hashing.goodFastHash;\n \n import com.google.common.base.Charsets;\n import com.google.common.collect.ImmutableList;\n@@ -453,6 +454,36 @@ public void testSeededHashFunctionEquals() throws Exception {\n     assertSeededHashFunctionEquals(Hashing.class);\n   }\n \n+  /**\n+   * Tests equality of {@link Hashing#goodFastHash} instances. This test must be separate from\n+   * {@link #testSeededHashFunctionEquals} because the parameter to {@code goodFastHash} is a size,\n+   * not a seed, and because that size is rounded up. Thus, {@code goodFastHash} instances with\n+   * different parameters can be equal. That fact is a problem for {@code\n+   * testSeededHashFunctionEquals}.\n+   */\n+  public void testGoodFastHashEquals() throws Exception {\n+    HashFunction hashFunction1a = goodFastHash(1);\n+    HashFunction hashFunction1b = goodFastHash(32);\n+    HashFunction hashFunction2a = goodFastHash(33);\n+    HashFunction hashFunction2b = goodFastHash(128);\n+    HashFunction hashFunction3a = goodFastHash(129);\n+    HashFunction hashFunction3b = goodFastHash(256);\n+    HashFunction hashFunction4a = goodFastHash(257);\n+    HashFunction hashFunction4b = goodFastHash(384);\n+\n+    new EqualsTester()\n+        .addEqualityGroup(hashFunction1a, hashFunction1b)\n+        .addEqualityGroup(hashFunction2a, hashFunction2b)\n+        .addEqualityGroup(hashFunction3a, hashFunction3b)\n+        .addEqualityGroup(hashFunction4a, hashFunction4b)\n+        .testEquals();\n+\n+    assertEquals(hashFunction1a.toString(), hashFunction1b.toString());\n+    assertEquals(hashFunction2a.toString(), hashFunction2b.toString());\n+    assertEquals(hashFunction3a.toString(), hashFunction3b.toString());\n+    assertEquals(hashFunction4a.toString(), hashFunction4b.toString());\n+  }\n+\n   static void assertSeedlessHashFunctionEquals(Class<?> clazz) throws Exception {\n     for (Method method : clazz.getDeclaredMethods()) {\n       if (method.getReturnType().equals(HashFunction.class) // must return HashFunction\n@@ -478,14 +509,14 @@ static void assertSeededHashFunctionEquals(Class<?> clazz) throws Exception {\n     for (Method method : clazz.getDeclaredMethods()) {\n       if (method.getReturnType().equals(HashFunction.class) // must return HashFunction\n           && Modifier.isPublic(method.getModifiers()) // only the public methods\n-          && method.getParameterTypes().length != 0) { // only the seeded hash functions\n+          && method.getParameterTypes().length != 0 // only the seeded hash functions\n+          && !method.getName().equals(\"goodFastHash\")) { // tested in testGoodFastHashEquals\n         Object[] params1 = new Object[method.getParameterTypes().length];\n         Object[] params2 = new Object[method.getParameterTypes().length];\n         for (int i = 0; i < params1.length; i++) {\n           if (method.getParameterTypes()[i] == int.class) {\n-            // These have to be positive because Hashing#goodFastHash needs a positive (bit) value\n-            params1[i] = random.nextInt(1000) + 1;\n-            params2[i] = random.nextInt(1000) + 1;\n+            params1[i] = random.nextInt();\n+            params2[i] = random.nextInt();\n           } else if (method.getParameterTypes()[i] == long.class) {\n             params1[i] = random.nextLong();\n             params2[i] = random.nextLong();",
      "parent_sha": "8aa3e7438d0d2e294976c8045c59259f4dae5c4b"
    }
  },
  {
    "oid": "911661a9519815e4a132acd8ce2bd8ce42bd18dd",
    "message": "Check `isEmpty()` instead of `size == 0`.\n\nThat way is simpler.\n\nIt's also somewhat better for users who pass a filtered collection, **but:**\n- We may undo this change in the future (as we are considering approaches that would actually use the result of `size` for more than an emptiness check).\n- A nonempty filtered collection will still apply the filter at least once during the `isEmpty` call, so that can still cause trouble if the filter has side effects or \"call the filter until it returns `true`\" is slow enough to matter.\n- Other methods in Guava likely still trigger similar behavior when given a filtered collection, as do methods outside of Guava.\n\nFixes https://github.com/google/guava/issues/7143 (for now)\n\nRELNOTES=n/a\nPiperOrigin-RevId: 623232817",
    "date": "2024-04-09T18:38:02Z",
    "url": "https://github.com/google/guava/commit/911661a9519815e4a132acd8ce2bd8ce42bd18dd",
    "details": {
      "sha": "0e50546ff21714b2aded16d3e1e920a753bd28fa",
      "filename": "guava/src/com/google/common/collect/ImmutableSet.java",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/google/guava/blob/911661a9519815e4a132acd8ce2bd8ce42bd18dd/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FImmutableSet.java",
      "raw_url": "https://github.com/google/guava/raw/911661a9519815e4a132acd8ce2bd8ce42bd18dd/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FImmutableSet.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcollect%2FImmutableSet.java?ref=911661a9519815e4a132acd8ce2bd8ce42bd18dd",
      "patch": "@@ -189,8 +189,7 @@ public static <E> ImmutableSet<E> copyOf(Collection<? extends E> elements) {\n       return copyOfEnumSet((EnumSet<?>) elements);\n     }\n \n-    int size = elements.size();\n-    if (size == 0) {\n+    if (elements.isEmpty()) {\n       // We avoid allocating anything.\n       return of();\n     }",
      "parent_sha": "48b664367aa552d49040fdd6cab5149b14bc4c93"
    }
  },
  {
    "oid": "c92fa930bd9ce9229a7dea3dea29472acb6b494c",
    "message": "\nRemove deprecated addNotEqualObject, replacing all newly introduced calls with one or more calls to addEqualityGroup.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2922\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@628 8138a162-5c33-11de-8abc-d1c337b90d21",
    "date": "2011-08-08T16:36:47Z",
    "url": "https://github.com/google/guava/commit/c92fa930bd9ce9229a7dea3dea29472acb6b494c",
    "details": {
      "sha": "8bf2e545cdecdc5d6a397a2649251e4563be5cef",
      "filename": "guava-testlib/src/com/google/common/testing/EqualsTester.java",
      "status": "modified",
      "additions": 1,
      "deletions": 41,
      "changes": 42,
      "blob_url": "https://github.com/google/guava/blob/c92fa930bd9ce9229a7dea3dea29472acb6b494c/guava-testlib%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Ftesting%2FEqualsTester.java",
      "raw_url": "https://github.com/google/guava/raw/c92fa930bd9ce9229a7dea3dea29472acb6b494c/guava-testlib%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Ftesting%2FEqualsTester.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava-testlib%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Ftesting%2FEqualsTester.java?ref=c92fa930bd9ce9229a7dea3dea29472acb6b494c",
      "patch": "@@ -63,20 +63,13 @@\n  * reference instance and pass to addEqualObject(). Multiple instances can be\n  * used to test subclasses.\n  *\n- * <li>Create one or more new instances that should not be equal to the\n- * reference instance and pass to addNotEqualObject. For complete testing,\n- * you should add one instance that varies in each aspect checked by equals().\n- *\n  * <li>Invoke {@link #testEquals} on the EqualsTester.\n  * </ol>\n  *\n  * <p>When a test fails, the error message labels the objects involved in\n  * the failed comparison as follows:\n  * <ul>\n- *       {@link #addEqualObject(Object...)}, numbered starting from 1.\n- *   <li>\"{@code [unequal object }<i>i</i>{@code ]}\" refers to the\n- *       <i>i</i><sup>th</sup> object passed to the method\n- *       {@link #addNotEqualObject(Object...)}, numbered starting from 1.\n+ *   <li>{@link #addEqualObject(Object...)}, numbered starting from 1.\n  *   <li>\"{@code [group }<i>i</i>{@code , item }<i>j</i>{@code ]}\" refers to the\n  *       <i>j</i><sup>th</sup> item in the <i>i</i><sup>th</sup> equality group,\n  *       where both equality groups and the items within equality groups are\n@@ -94,7 +87,6 @@ public final class EqualsTester {\n   private static final int REPETITIONS = 3;\n \n   private final List<Object> defaultEqualObjects = Lists.newArrayList();\n-  private final List<Object> defaultNotEqualObjects = Lists.newArrayList();\n   private final List<List<Object>> equalityGroups = Lists.newArrayList();\n \n   /**\n@@ -141,42 +133,10 @@ public EqualsTester testEquals() {\n     for (int run = 0; run < REPETITIONS; run++) {\n       testItems();\n       delegate.test();\n-      testLegacyDefaultNotEqualsObjects();\n     }\n     return this;\n   }\n \n-  /**\n-   * This method exists just to test the not equals objects with the inconsistent legacy behavior.\n-   * When {@link #addNotEqualObject(Object...)} is gone, this can go away too.\n-   */\n-  private void testLegacyDefaultNotEqualsObjects() {\n-    for (int i = 0; i < defaultEqualObjects.size(); i++) {\n-      Object reference = defaultEqualObjects.get(i);\n-      for (int notEqualsItemNumber = 0; notEqualsItemNumber < defaultNotEqualObjects.size();\n-          notEqualsItemNumber++) {\n-        Object notEqualObject = defaultNotEqualObjects.get(notEqualsItemNumber);\n-        String message = reference + \" [group 1, item \" + (i + 1) + \"] must be unequal to \"\n-            + notEqualObject + \" [unequal object \" + (notEqualsItemNumber + 1) + \"]\";\n-        assertTrue(message, !reference.equals(notEqualObject));\n-      }\n-    }\n-    for (int groupNumber = 0; groupNumber < equalityGroups.size(); groupNumber++) {\n-      List<Object> equalityGroup = equalityGroups.get(groupNumber);\n-      for (int itemNumber = 0; itemNumber < equalityGroup.size(); itemNumber++) {\n-        Object reference = equalityGroup.get(itemNumber);\n-        for (int notEqualsItemNumber = 0; notEqualsItemNumber < defaultNotEqualObjects.size();\n-            notEqualsItemNumber++) {\n-          Object notEqualObject = defaultNotEqualObjects.get(notEqualsItemNumber);\n-          String message = reference + \" [group \" + (groupNumber + 1) + \", item \" + (itemNumber + 1)\n-              + \"] must be unequal to \" + notEqualObject + \" [unequal object \"\n-              + (notEqualsItemNumber + 1) + \"]\";\n-          assertTrue(message, !reference.equals(notEqualObject));\n-        }\n-      }\n-    }\n-  }\n-\n   private void testItems() {\n     for (Object item : Iterables.concat(defaultEqualObjects, Iterables.concat(equalityGroups))) {\n       assertTrue(item + \" must be unequal to null\", !item.equals(null));",
      "parent_sha": "7a95b2151f935aa1b95875200e6a7f999c8eeb1f"
    }
  },
  {
    "oid": "c9c7b8d84251b04c7cc05fe74a32ce062a22fbff",
    "message": "Used TearDownStack instead of TearDownTestCase for AbstractExecutionThreadServiceTest\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32830069",
    "date": "2012-08-13T21:03:28Z",
    "url": "https://github.com/google/guava/commit/c9c7b8d84251b04c7cc05fe74a32ce062a22fbff",
    "details": {
      "sha": "9b14c7db6de322ed0f5dcf1f117a34ee93eb4e28",
      "filename": "guava-tests/test/com/google/common/util/concurrent/AbstractExecutionThreadServiceTest.java",
      "status": "modified",
      "additions": 10,
      "deletions": 3,
      "changes": 13,
      "blob_url": "https://github.com/google/guava/blob/c9c7b8d84251b04c7cc05fe74a32ce062a22fbff/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FAbstractExecutionThreadServiceTest.java",
      "raw_url": "https://github.com/google/guava/raw/c9c7b8d84251b04c7cc05fe74a32ce062a22fbff/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FAbstractExecutionThreadServiceTest.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Futil%2Fconcurrent%2FAbstractExecutionThreadServiceTest.java?ref=c9c7b8d84251b04c7cc05fe74a32ce062a22fbff",
      "patch": "@@ -18,7 +18,9 @@\n \n import com.google.common.base.Throwables;\n import com.google.common.testing.TearDown;\n-import com.google.common.testing.junit3.TearDownTestCase;\n+import com.google.common.testing.TearDownStack;\n+\n+import junit.framework.TestCase;\n \n import java.lang.Thread.UncaughtExceptionHandler;\n import java.util.concurrent.CountDownLatch;\n@@ -35,8 +37,9 @@\n  *\n  * @author Jesse Wilson\n  */\n-public class AbstractExecutionThreadServiceTest extends TearDownTestCase {\n+public class AbstractExecutionThreadServiceTest extends TestCase {\n \n+  private final TearDownStack tearDownStack = new TearDownStack(true);\n   private final CountDownLatch enterRun = new CountDownLatch(1);\n   private final CountDownLatch exitRun = new CountDownLatch(1);\n \n@@ -56,6 +59,10 @@ public void uncaughtException(Thread thread, Throwable e) {\n     }\n   };\n \n+  @Override protected final void tearDown() {\n+    tearDownStack.runTearDown();\n+  }\n+\n   public void testServiceStartStop() throws Exception {\n     WaitOnRunService service = new WaitOnRunService();\n     assertFalse(service.startUpCalled);\n@@ -341,7 +348,7 @@ private class FakeService extends AbstractExecutionThreadService implements Tear\n     private final ExecutorService executor = Executors.newSingleThreadExecutor();\n \n     FakeService() {\n-      addTearDown(this);\n+      tearDownStack.addTearDown(this);\n     }\n \n     volatile int startupCalled = 0;",
      "parent_sha": "963e8a39ace0e027d2544a5c19c8ca75ee3334c6"
    }
  },
  {
    "oid": "f8642513c8a4d011097b7158321312f055882225",
    "message": "Fixed a line-wrapping I missed.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=90934632",
    "date": "2015-04-14T20:30:12Z",
    "url": "https://github.com/google/guava/commit/f8642513c8a4d011097b7158321312f055882225",
    "details": {
      "sha": "3359dde8936c993090f4ed9ec9b7853909d5e592",
      "filename": "guava/src/com/google/common/reflect/ClassPath.java",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/google/guava/blob/f8642513c8a4d011097b7158321312f055882225/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Freflect%2FClassPath.java",
      "raw_url": "https://github.com/google/guava/raw/f8642513c8a4d011097b7158321312f055882225/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Freflect%2FClassPath.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Freflect%2FClassPath.java?ref=f8642513c8a4d011097b7158321312f055882225",
      "patch": "@@ -311,8 +311,7 @@ public final void scan(ClassLoader classloader) throws IOException {\n       }\n     }\n \n-    private void scanFrom(File file, ClassLoader classloader)\n-        throws IOException {\n+    private void scanFrom(File file, ClassLoader classloader) throws IOException {\n       if (!file.exists()) {\n         return;\n       }",
      "parent_sha": "a904e91af4eea83b91f7bf3acff90b14927eced7"
    }
  },
  {
    "oid": "845b0e8deee44d2da12e8aac00e7a95c4e88a9e9",
    "message": "Temporary fix to ClassSantityTester.\nWe cannot remove the fallback to Iterable.class generation yet, because doing that would break some teams' tests. They need to be fixed with extra setDistinctValues() before we remove the fallback.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64603381",
    "date": "2014-04-09T14:29:46Z",
    "url": "https://github.com/google/guava/commit/845b0e8deee44d2da12e8aac00e7a95c4e88a9e9",
    "details": {
      "sha": "b9d394dd81b59aaf8005827ba3c55bc01dd6333a",
      "filename": "guava-testlib/src/com/google/common/testing/ClassSanityTester.java",
      "status": "modified",
      "additions": 13,
      "deletions": 10,
      "changes": 23,
      "blob_url": "https://github.com/google/guava/blob/845b0e8deee44d2da12e8aac00e7a95c4e88a9e9/guava-testlib%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Ftesting%2FClassSanityTester.java",
      "raw_url": "https://github.com/google/guava/raw/845b0e8deee44d2da12e8aac00e7a95c4e88a9e9/guava-testlib%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Ftesting%2FClassSanityTester.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava-testlib%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Ftesting%2FClassSanityTester.java?ref=845b0e8deee44d2da12e8aac00e7a95c4e88a9e9",
      "patch": "@@ -120,7 +120,7 @@ public ClassSanityTester() {\n     setDefault(Class.class, Class.class);\n   }\n \n-  /** \n+  /**\n    * Sets the default value for {@code type}. The default value isn't used in testing {@link\n    * Object#equals} because more than one sample instances are needed for testing inequality.\n    * To set sample instances for equality testing, use {@link #setSampleInstances} instead.\n@@ -134,7 +134,7 @@ public <T> ClassSanityTester setDefault(Class<T> type, T value) {\n   /**\n    * Sets sample instances for {@code type} for purpose of {@code equals} testing, where different\n    * values are needed to test inequality.\n-   * \n+   *\n    * <p>Used for types that {@link ClassSanityTester} doesn't already know how to sample.\n    * It's usually necessary to add two unequal instances for each type, with the exception that if\n    * the sample instance is to be passed to a {@link Nullable} parameter,  one non-null sample is\n@@ -285,7 +285,7 @@ public void testEquals(Class<?> cls) {\n       throw Throwables.propagate(e);\n     }\n   }\n-  \n+ \n   void doTestEquals(Class<?> cls)\n       throws ParameterNotInstantiableException, IllegalAccessException,\n              InvocationTargetException, FactoryMethodReturnsNullException {\n@@ -412,7 +412,7 @@ public FactoryMethodReturnValueTester thatReturn(Class<?> returnType) {\n \n     /**\n      * Tests null checks against the instance methods of the return values, if any.\n-     * \n+     *\n      * <p>Test fails if default value cannot be determined for a constructor or factory method\n      * parameter, or if the constructor or factory method throws exception.\n      *\n@@ -440,7 +440,7 @@ public FactoryMethodReturnValueTester testNulls() throws Exception {\n      * Tests {@link Object#equals} and {@link Object#hashCode} against the return values of the\n      * static methods, by asserting that when equal parameters are passed to the same static method,\n      * the return value should also be equal; and vice versa.\n-     * \n+     *\n      * <p>Test fails if default value cannot be determined for a constructor or factory method\n      * parameter, or if the constructor or factory method throws exception.\n      *\n@@ -459,7 +459,7 @@ public FactoryMethodReturnValueTester testEquals() throws Exception {\n \n     /**\n      * Runs serialization test on the return values of the static methods.\n-     * \n+     *\n      * <p>Test fails if default value cannot be determined for a constructor or factory method\n      * parameter, or if the constructor or factory method throws exception.\n      *\n@@ -484,7 +484,7 @@ public FactoryMethodReturnValueTester testSerializable() throws Exception {\n \n     /**\n      * Runs equals and serialization test on the return values.\n-     * \n+     *\n      * <p>Test fails if default value cannot be determined for a constructor or factory method\n      * parameter, or if the constructor or factory method throws exception.\n      *\n@@ -536,7 +536,7 @@ public FactoryMethodReturnValueTester testEqualsAndSerializable() throws Excepti\n   /**\n    * Instantiates using {@code factory}. If {@code factory} is annotated with {@link Nullable} and\n    * returns null, null will be returned.\n-   * \n+   *\n    * @throws ParameterNotInstantiableException if the static methods cannot be invoked because\n    *         the default value of a parameter cannot be determined.\n    * @throws IllegalAccessException if the class isn't public or is nested inside a non-public\n@@ -549,7 +549,7 @@ public FactoryMethodReturnValueTester testEqualsAndSerializable() throws Excepti\n     return invoke(factory, getDummyArguments(factory));\n   }\n \n-  private void testEqualsUsing(final Invokable<?, ?> factory) \n+  private void testEqualsUsing(final Invokable<?, ?> factory)\n       throws ParameterNotInstantiableException, IllegalAccessException,\n       InvocationTargetException, FactoryMethodReturnsNullException {\n     List<Parameter> params = factory.getParameters();\n@@ -574,7 +574,10 @@ private void testEqualsUsing(final Invokable<?, ?> factory)\n     tester.addEqualityGroup(instance, createInstance(factory, equalArgs));\n     for (int i = 0; i < params.size(); i++) {\n       List<Object> newArgs = Lists.newArrayList(args);\n-      Object newArg = argGenerators.get(i).generate(params.get(i).getType().getRawType());\n+      Object newArg = argGenerators.get(i).generate(params.get(i).getType());\n+      if (newArg == null) {\n+        newArg = argGenerators.get(i).generate(params.get(i).getType().getRawType());\n+      }\n       if (Objects.equal(args.get(i), newArg)) {\n         // no value variance, no equality group\n         continue;",
      "parent_sha": "5d004b642817d40c6919291c20028827b4b46742"
    }
  },
  {
    "oid": "a72b6e39f3b9800591adcfaa8f6d3c03254f05f0",
    "message": "In EnumsTest, rewrite code that creates a second copy of TestEnum in a second ClassLoader, so that it doesn't try to add instances of the second TestEnum to a Set<TestEnum> (which is a Set of the original TestEnum). In Java 8, apparently this is a little bit less erased so it fails.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114474572",
    "date": "2016-02-11T23:00:47Z",
    "url": "https://github.com/google/guava/commit/a72b6e39f3b9800591adcfaa8f6d3c03254f05f0",
    "details": {
      "sha": "599b449ff082dcd908dfb375f775ecabeda61ead",
      "filename": "guava-tests/test/com/google/common/base/EnumsTest.java",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/google/guava/blob/a72b6e39f3b9800591adcfaa8f6d3c03254f05f0/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FEnumsTest.java",
      "raw_url": "https://github.com/google/guava/raw/a72b6e39f3b9800591adcfaa8f6d3c03254f05f0/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FEnumsTest.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava-tests%2Ftest%2Fcom%2Fgoogle%2Fcommon%2Fbase%2FEnumsTest.java?ref=a72b6e39f3b9800591adcfaa8f6d3c03254f05f0",
      "patch": "@@ -94,13 +94,15 @@ private WeakReference<?> doTestClassUnloading() throws Exception {\n     Class<TestEnum> shadowTestEnum =\n         (Class<TestEnum>) Class.forName(TestEnum.class.getName(), false, shadowLoader);\n     assertNotSame(shadowTestEnum, TestEnum.class);\n-    Set<TestEnum> shadowConstants = new HashSet<TestEnum>();\n+    // We can't write Set<TestEnum> because that is a Set of the TestEnum from the original\n+    // ClassLoader.\n+    Set<Object> shadowConstants = new HashSet<Object>();\n     for (TestEnum constant : TestEnum.values()) {\n       Optional<TestEnum> result = Enums.getIfPresent(shadowTestEnum, constant.name());\n       assertThat(result).isPresent();\n       shadowConstants.add(result.get());\n     }\n-    assertEquals(ImmutableSet.copyOf(shadowTestEnum.getEnumConstants()), shadowConstants);\n+    assertEquals(ImmutableSet.<Object>copyOf(shadowTestEnum.getEnumConstants()), shadowConstants);\n     Optional<TestEnum> result = Enums.getIfPresent(shadowTestEnum, \"blibby\");\n     assertThat(result).isAbsent();\n     return new WeakReference<ClassLoader>(shadowLoader);",
      "parent_sha": "7176c5a66db0ab298e3f77d55760b17b74933af6"
    }
  },
  {
    "oid": "765ec48ae280f38b1e7996445d9db9914dcdfb3c",
    "message": "Fix generics in Cache which are breaking the MOE build.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=37779427",
    "date": "2012-11-05T16:42:47Z",
    "url": "https://github.com/google/guava/commit/765ec48ae280f38b1e7996445d9db9914dcdfb3c",
    "details": {
      "sha": "b2aac546e8c2713a1e14f8bb22ea0980438155e0",
      "filename": "guava/src/com/google/common/cache/LocalCache.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/google/guava/blob/765ec48ae280f38b1e7996445d9db9914dcdfb3c/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcache%2FLocalCache.java",
      "raw_url": "https://github.com/google/guava/raw/765ec48ae280f38b1e7996445d9db9914dcdfb3c/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcache%2FLocalCache.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fcache%2FLocalCache.java?ref=765ec48ae280f38b1e7996445d9db9914dcdfb3c",
      "patch": "@@ -4658,8 +4658,8 @@ private ManualSerializationProxy(\n       this.loader = loader;\n     }\n \n-   CacheBuilder<Object, Object> recreateCacheBuilder() {\n-      CacheBuilder<Object, Object> builder = CacheBuilder.newBuilder()\n+   CacheBuilder<K, V> recreateCacheBuilder() {\n+      CacheBuilder<K, V> builder = CacheBuilder.newBuilder()\n           .setKeyStrength(keyStrength)\n           .setValueStrength(valueStrength)\n           .keyEquivalence(keyEquivalence)\n@@ -4691,7 +4691,7 @@ CacheBuilder<Object, Object> recreateCacheBuilder() {\n \n     private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {\n       in.defaultReadObject();\n-      CacheBuilder<Object, Object> builder = recreateCacheBuilder();\n+      CacheBuilder<K, V> builder = recreateCacheBuilder();\n       this.delegate = builder.build();\n     }\n \n@@ -4725,7 +4725,7 @@ static final class LoadingSerializationProxy<K, V>\n \n     private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {\n       in.defaultReadObject();\n-      CacheBuilder<Object, Object> builder = recreateCacheBuilder();\n+      CacheBuilder<K, V> builder = recreateCacheBuilder();\n       this.autoDelegate = builder.build(loader);\n     }\n ",
      "parent_sha": "2fceef62aa2a37e656e91993676738233fe0bfda"
    }
  },
  {
    "oid": "ea4d8f3a5756d920033728a4646fe80ac162119f",
    "message": "Add Apache header to BloomFilterStrategies\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28651552",
    "date": "2012-03-24T03:08:12Z",
    "url": "https://github.com/google/guava/commit/ea4d8f3a5756d920033728a4646fe80ac162119f",
    "details": {
      "sha": "52b1c59ac29707742f7cea2865eb98d051c5ddab",
      "filename": "guava/src/com/google/common/hash/BloomFilterStrategies.java",
      "status": "modified",
      "additions": 14,
      "deletions": 2,
      "changes": 16,
      "blob_url": "https://github.com/google/guava/blob/ea4d8f3a5756d920033728a4646fe80ac162119f/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fhash%2FBloomFilterStrategies.java",
      "raw_url": "https://github.com/google/guava/raw/ea4d8f3a5756d920033728a4646fe80ac162119f/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fhash%2FBloomFilterStrategies.java",
      "contents_url": "https://api.github.com/repos/google/guava/contents/guava%2Fsrc%2Fcom%2Fgoogle%2Fcommon%2Fhash%2FBloomFilterStrategies.java?ref=ea4d8f3a5756d920033728a4646fe80ac162119f",
      "patch": "@@ -1,4 +1,16 @@\n-// Copyright 2011 Google Inc. All Rights Reserved.\n+/*\n+ * Copyright (C) 2011 The Guava Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n \n package com.google.common.hash;\n \n@@ -18,7 +30,7 @@\n  * Important: the order of the constants cannot change, and they cannot be deleted - we depend\n  * on their ordinal for BloomFilter serialization.\n  *\n- * @author andreou@google.com (Dimitris Andreou)\n+ * @author Dimitris Andreou\n  */\n enum BloomFilterStrategies implements BloomFilter.Strategy {\n   /**",
      "parent_sha": "d26ce6c5c5d775422926ba6d54242a668fb19029"
    }
  }
]