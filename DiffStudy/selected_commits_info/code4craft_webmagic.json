[
  {
    "oid": "80424b0bd7242ae3f92055baabcedbf6e4a5913b",
    "message": "Replace List with Iterable, fixed #1099.",
    "date": "2022-12-05T15:26:01Z",
    "url": "https://github.com/code4craft/webmagic/commit/80424b0bd7242ae3f92055baabcedbf6e4a5913b",
    "details": {
      "sha": "6370171dfaadec0ca43ecd380de765202a173c86",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/Page.java",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/code4craft/webmagic/blob/80424b0bd7242ae3f92055baabcedbf6e4a5913b/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FPage.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/80424b0bd7242ae3f92055baabcedbf6e4a5913b/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FPage.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FPage.java?ref=80424b0bd7242ae3f92055baabcedbf6e4a5913b",
      "patch": "@@ -20,7 +20,7 @@\n  * {@link #getHtml()}  get content of current page                 <br>\n  * {@link #putField(String, Object)}  save extracted result            <br>\n  * {@link #getResultItems()} get extract results to be used in {@link us.codecraft.webmagic.pipeline.Pipeline}<br>\n- * {@link #addTargetRequests(java.util.List)} {@link #addTargetRequest(String)} add urls to fetch                 <br>\n+ * {@link #addTargetRequests(Iterable)} {@link #addTargetRequest(String)} add urls to fetch                 <br>\n  *\n  * @author code4crafter@gmail.com <br>\n  * @see us.codecraft.webmagic.downloader.Downloader\n@@ -52,7 +52,7 @@ public class Page {\n     private List<Request> targetRequests = new ArrayList<Request>();\n \n     private String charset;\n-    \n+\n     public Page() {\n     }\n \n@@ -108,7 +108,8 @@ public Json getJson() {\n      * @deprecated since 0.4.0\n      * The html is parse just when first time of calling {@link #getHtml()}, so use {@link #setRawText(String)} instead.\n      */\n-    public void setHtml(Html html) {\n+    @Deprecated\n+\tpublic void setHtml(Html html) {\n         this.html = html;\n     }\n \n@@ -121,7 +122,7 @@ public List<Request> getTargetRequests() {\n      *\n      * @param requests requests\n      */\n-    public void addTargetRequests(List<String> requests) {\n+    public void addTargetRequests(Iterable<String> requests) {\n         for (String s : requests) {\n             if (StringUtils.isBlank(s) || s.equals(\"#\") || s.startsWith(\"javascript:\")) {\n                 continue;\n@@ -137,7 +138,7 @@ public void addTargetRequests(List<String> requests) {\n      * @param requests requests\n      * @param priority priority\n      */\n-    public void addTargetRequests(List<String> requests, long priority) {\n+    public void addTargetRequests(Iterable<String> requests, long priority) {\n         for (String s : requests) {\n             if (StringUtils.isBlank(s) || s.equals(\"#\") || s.startsWith(\"javascript:\")) {\n                 continue;",
      "parent_sha": "ef616c999e18bb9a7a351049749b3796d3abb977"
    }
  },
  {
    "oid": "09ffd468c02840385cd60315a3a6595877576fe1",
    "message": "fix comments",
    "date": "2013-08-20T14:53:16Z",
    "url": "https://github.com/code4craft/webmagic/commit/09ffd468c02840385cd60315a3a6595877576fe1",
    "details": {
      "sha": "92c05c8d9b4d51180113dfb63c4ec95692c90471",
      "filename": "webmagic-extension/src/main/java/us/codecraft/webmagic/utils/DoubleKeyMap.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/code4craft/webmagic/blob/09ffd468c02840385cd60315a3a6595877576fe1/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Futils%2FDoubleKeyMap.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/09ffd468c02840385cd60315a3a6595877576fe1/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Futils%2FDoubleKeyMap.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Futils%2FDoubleKeyMap.java?ref=09ffd468c02840385cd60315a3a6595877576fe1",
      "patch": "@@ -63,7 +63,7 @@ public V get(K1 key1, K2 key2) {\n     /**\n      * @param key1\n      * @param submap\n-     * @return\n+     * @return value\n      */\n     public V put(K1 key1, Map<K2, V> submap) {\n         return put(key1, submap);\n@@ -73,7 +73,7 @@ public V put(K1 key1, Map<K2, V> submap) {\n      * @param key1\n      * @param key2\n      * @param value\n-     * @return\n+     * @return value\n      */\n     public V put(K1 key1, K2 key2, V value) {\n         if (map.get(key1) == null) {\n@@ -85,7 +85,7 @@ public V put(K1 key1, K2 key2, V value) {\n     /**\n      * @param key1\n      * @param key2\n-     * @return\n+     * @return value\n      */\n     public V remove(K1 key1, K2 key2) {\n         if (get(key1) == null) {",
      "parent_sha": "0f0f1a9bcd8c1652bf6eff193f370c5aa93cbc46"
    }
  },
  {
    "oid": "d0843bee0d1cce6a2e7f01f1182b493437f1a6fb",
    "message": "Revert \"\u7b80\u5316\u4ee3\u7801\"\n\nThis reverts commit 9cc5287743de9715ec3ac10a20636377be41d060.",
    "date": "2021-01-02T12:32:35Z",
    "url": "https://github.com/code4craft/webmagic/commit/d0843bee0d1cce6a2e7f01f1182b493437f1a6fb",
    "details": {
      "sha": "f204e3945db85175ea9b3c6c9f30c483c852c50a",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java",
      "status": "modified",
      "additions": 10,
      "deletions": 7,
      "changes": 17,
      "blob_url": "https://github.com/code4craft/webmagic/blob/d0843bee0d1cce6a2e7f01f1182b493437f1a6fb/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/d0843bee0d1cce6a2e7f01f1182b493437f1a6fb/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java?ref=d0843bee0d1cce6a2e7f01f1182b493437f1a6fb",
      "patch": "@@ -32,21 +32,24 @@\n  */\n public class HttpClientDownloader extends AbstractDownloader {\n \n+    private Logger logger = LoggerFactory.getLogger(getClass());\n+\n     private final Map<String, CloseableHttpClient> httpClients = new HashMap<String, CloseableHttpClient>();\n-    private final Logger logger = LoggerFactory.getLogger(getClass());\n-    private final HttpClientGenerator httpClientGenerator = new HttpClientGenerator();\n+\n+    private HttpClientGenerator httpClientGenerator = new HttpClientGenerator();\n \n     private HttpUriRequestConverter httpUriRequestConverter = new HttpUriRequestConverter();\n \n     private ProxyProvider proxyProvider;\n \n-    private final boolean responseHeader = true;\n+    private boolean responseHeader = true;\n \n+    private volatile boolean refreshProxyOnError = false;\n \n-    private Predicate<Throwable> refreshProxyOnError = t -> false;\n+    private Predicate<Throwable> throwablePredicate = t->false;\n \n-    public void setRefreshProxyOnError(Predicate<Throwable> proxyOnError) {\n-        this.refreshProxyOnError = refreshProxyOnError;\n+    public void setThrowablePredicate(Predicate<Throwable> predicate){\n+        this.throwablePredicate = predicate;\n     }\n \n     public void setHttpUriRequestConverter(HttpUriRequestConverter httpUriRequestConverter) {\n@@ -116,7 +119,7 @@ protected Page handleResponse(Request request, String charset, HttpResponse http\n         String contentType = httpResponse.getEntity().getContentType() == null ? \"\" : httpResponse.getEntity().getContentType().getValue();\n         Page page = new Page();\n         page.setBytes(bytes);\n-        if (!request.isBinaryContent()) {\n+        if (!request.isBinaryContent()){\n             if (charset == null) {\n                 charset = getHtmlCharset(contentType, bytes);\n             }",
      "parent_sha": "5ceccc62e076d54e46efb25bd3ddbd1357d278ba"
    }
  },
  {
    "oid": "b5413368de4ef00bc652b27f0630f23fae96225d",
    "message": "update ut",
    "date": "2016-05-08T08:23:41Z",
    "url": "https://github.com/code4craft/webmagic/commit/b5413368de4ef00bc652b27f0630f23fae96225d",
    "details": {
      "sha": "906620969d9bc9e0b486f707d86187a8379c462c",
      "filename": "webmagic-core/src/test/java/us/codecraft/webmagic/selector/JsonPathSelectorTest.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/code4craft/webmagic/blob/b5413368de4ef00bc652b27f0630f23fae96225d/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FJsonPathSelectorTest.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/b5413368de4ef00bc652b27f0630f23fae96225d/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FJsonPathSelectorTest.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FJsonPathSelectorTest.java?ref=b5413368de4ef00bc652b27f0630f23fae96225d",
      "patch": "@@ -39,10 +39,10 @@ public void testJsonPath() {\n         List<String> list = jsonPathSelector.selectList(text);\n         assertThat(select).isEqualTo(\"Nigel Rees\");\n         assertThat(list).contains(\"Nigel Rees\",\"Evelyn Waugh\");\n-        jsonPathSelector = new JsonPathSelector(\"$.store.book[?(@.category == 'reference')]\");\n+        jsonPathSelector = new JsonPathSelector(\"$.store.book[?(@.category == 'reference')].title\");\n         list = jsonPathSelector.selectList(text);\n         select = jsonPathSelector.select(text);\n-        assertThat(select).isEqualTo(\"{\\\"author\\\":\\\"Nigel Rees\\\",\\\"title\\\":\\\"Sayings of the Century\\\",\\\"category\\\":\\\"reference\\\",\\\"price\\\":8.95}\");\n-        assertThat(list).contains(\"{\\\"author\\\":\\\"Nigel Rees\\\",\\\"title\\\":\\\"Sayings of the Century\\\",\\\"category\\\":\\\"reference\\\",\\\"price\\\":8.95}\");\n+        assertThat(select).isEqualTo(\"Sayings of the Century\");\n+        assertThat(list).contains(\"Sayings of the Century\");\n     }\n }",
      "parent_sha": "a8c90053812635878949c2d18c913daab75497f9"
    }
  },
  {
    "oid": "ac912e8f1fade5be3b0d8df521819f4b01ec6fba",
    "message": "Revise QueueScheduler to support capacity-restricted.",
    "date": "2022-11-12T02:17:36Z",
    "url": "https://github.com/code4craft/webmagic/commit/ac912e8f1fade5be3b0d8df521819f4b01ec6fba",
    "details": {
      "sha": "8ea3ab1955f17ad351d32929ab631cf62d69e159",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/scheduler/QueueScheduler.java",
      "status": "modified",
      "additions": 21,
      "deletions": 2,
      "changes": 23,
      "blob_url": "https://github.com/code4craft/webmagic/blob/ac912e8f1fade5be3b0d8df521819f4b01ec6fba/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FQueueScheduler.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/ac912e8f1fade5be3b0d8df521819f4b01ec6fba/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FQueueScheduler.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FQueueScheduler.java?ref=ac912e8f1fade5be3b0d8df521819f4b01ec6fba",
      "patch": "@@ -16,11 +16,30 @@\n  */\n public class QueueScheduler extends DuplicateRemovedScheduler implements MonitorableScheduler {\n \n-    private BlockingQueue<Request> queue = new LinkedBlockingQueue<Request>();\n+    private final BlockingQueue<Request> queue;\n+\n+    public QueueScheduler() {\n+        this.queue = new LinkedBlockingQueue<>();\n+    }\n+\n+    /**\n+     * Creates a {@code QueueScheduler} with the given (fixed) capacity.\n+     *\n+     * @param capacity the capacity of this queue,\n+     * see {@link LinkedBlockingQueue#LinkedBlockingQueue(int)}\n+     * @since 0.8.0\n+     */\n+    public QueueScheduler(int capacity) {\n+        this.queue = new LinkedBlockingQueue<>(capacity);\n+    }\n \n     @Override\n     public void pushWhenNoDuplicate(Request request, Task task) {\n-        queue.add(request);\n+        try {\n+            queue.put(request);\n+        } catch (InterruptedException e) {\n+            Thread.currentThread().interrupt();\n+        }\n     }\n \n     @Override",
      "parent_sha": "5d5f3bf20e08e37b44b2807021b056cbc696a5f9"
    }
  },
  {
    "oid": "4d0cdb011fc42251c2476bb5f44379d588ae65f5",
    "message": "stopWhenComplete\uff0c\u589e\u52a0\u52a8\u6001\u4fee\u6539\u5b8c\u6210\u65f6\u505c\u6b62\u65b9\u6cd5\u3002 (#1169)\n\nCo-authored-by: niuxiaozu <niuxiaozu@yeah.net>",
    "date": "2024-06-17T09:27:28Z",
    "url": "https://github.com/code4craft/webmagic/commit/4d0cdb011fc42251c2476bb5f44379d588ae65f5",
    "details": {
      "sha": "a35af70af9a37f1e9b178eeb5de1e01bd2f1601d",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/Spider.java",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/code4craft/webmagic/blob/4d0cdb011fc42251c2476bb5f44379d588ae65f5/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/4d0cdb011fc42251c2476bb5f44379d588ae65f5/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java?ref=4d0cdb011fc42251c2476bb5f44379d588ae65f5",
      "patch": "@@ -85,7 +85,7 @@ public class Spider implements Runnable, Task {\n \n     protected AtomicInteger stat = new AtomicInteger(STAT_INIT);\n \n-    protected boolean exitWhenComplete = true;\n+    protected volatile boolean exitWhenComplete = true;\n \n     protected final static int STAT_INIT = 0;\n \n@@ -598,6 +598,13 @@ public void stop() {\n         }\n     }\n \n+    /**\n+     * Stop when all tasks in the queue are completed and all worker threads are also completed\n+     */\n+    public void stopWhenComplete(){\n+        this.exitWhenComplete = true;\n+    }\n+\n     /**\n      * start with more than one threads\n      *",
      "parent_sha": "49a5efff46ec604578d6cb98015a8700bdf1fa21"
    }
  },
  {
    "oid": "ca072c5575d7e6a4caa6324b128c20cf50efc364",
    "message": "fix URL regex in GithubRepoPageProcessor #305",
    "date": "2016-05-08T04:09:45Z",
    "url": "https://github.com/code4craft/webmagic/commit/ca072c5575d7e6a4caa6324b128c20cf50efc364",
    "details": {
      "sha": "e475148650900ff2b82f739e3053ef172a32ed46",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/processor/example/GithubRepoPageProcessor.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/code4craft/webmagic/blob/ca072c5575d7e6a4caa6324b128c20cf50efc364/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fprocessor%2Fexample%2FGithubRepoPageProcessor.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/ca072c5575d7e6a4caa6324b128c20cf50efc364/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fprocessor%2Fexample%2FGithubRepoPageProcessor.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fprocessor%2Fexample%2FGithubRepoPageProcessor.java?ref=ca072c5575d7e6a4caa6324b128c20cf50efc364",
      "patch": "@@ -15,8 +15,8 @@ public class GithubRepoPageProcessor implements PageProcessor {\n \n     @Override\n     public void process(Page page) {\n-        page.addTargetRequests(page.getHtml().links().regex(\"(https://github\\\\.com/\\\\w+/\\\\w+)\").all());\n-        page.addTargetRequests(page.getHtml().links().regex(\"(https://github\\\\.com/\\\\w+)\").all());\n+        page.addTargetRequests(page.getHtml().links().regex(\"(https://github\\\\.com/[\\\\w\\\\-]+/[\\\\w\\\\-])\").all());\n+        page.addTargetRequests(page.getHtml().links().regex(\"(https://github\\\\.com/[\\\\w\\\\-])\").all());\n         page.putField(\"author\", page.getUrl().regex(\"https://github\\\\.com/(\\\\w+)/.*\").toString());\n         page.putField(\"name\", page.getHtml().xpath(\"//h1[@class='entry-title public']/strong/a/text()\").toString());\n         if (page.getResultItems().get(\"name\")==null){",
      "parent_sha": "047cb8ff8f009b14ff9c7d36ab6dc04c39a472f2"
    }
  },
  {
    "oid": "c80f25edbd3a9c60ac07595847f3023cac5b868e",
    "message": "Update RegexSelectorTest.java\n\n\u7b80\u5355\u7684\u589e\u52a0\u4e86\u4e00\u70b9\u6d4b\u8bd5",
    "date": "2017-05-03T10:33:23Z",
    "url": "https://github.com/code4craft/webmagic/commit/c80f25edbd3a9c60ac07595847f3023cac5b868e",
    "details": {
      "sha": "871caa144c54a760daa4803fde19af57efc4c3df",
      "filename": "webmagic-core/src/test/java/us/codecraft/webmagic/selector/RegexSelectorTest.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/code4craft/webmagic/blob/c80f25edbd3a9c60ac07595847f3023cac5b868e/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FRegexSelectorTest.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/c80f25edbd3a9c60ac07595847f3023cac5b868e/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FRegexSelectorTest.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FRegexSelectorTest.java?ref=c80f25edbd3a9c60ac07595847f3023cac5b868e",
      "patch": "@@ -25,8 +25,8 @@ public void testRegexWithLeftBracketQuoted() {\n \n     @Test\n     public void testRegexWithZeroWidthAssertions() {\n-        String regex = \"^.*(?=\\\\?)\";\n-        String source = \"hello world?xxxx\";\n+        String regex = \"^.*(?=\\\\?)(?!\\\\?yy)\";\n+        String source = \"hello world?xx?yy\";\n         RegexSelector regexSelector = new RegexSelector(regex);\n         String select = regexSelector.select(source);\n         Assertions.assertThat(select).isEqualTo(\"hello world\");",
      "parent_sha": "39c3c2f90454664735c0751d84683bacbe97b937"
    }
  },
  {
    "oid": "d60615f50390d7fc51d50bf60214f79124965206",
    "message": "\u4fee\u590d\u4f7f\u7528startUrls\u6ca1\u6709\u8bbe\u7f6edomain\u5bfc\u81f4\u4f7f\u7528cookie\u7a7a\u6307\u9488\u7684\u95ee\u9898#438",
    "date": "2017-01-21T03:29:42Z",
    "url": "https://github.com/code4craft/webmagic/commit/d60615f50390d7fc51d50bf60214f79124965206",
    "details": {
      "sha": "b1afb66035c1eec4ebc25d24059949e37d599896",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/Spider.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/code4craft/webmagic/blob/d60615f50390d7fc51d50bf60214f79124965206/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/d60615f50390d7fc51d50bf60214f79124965206/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java?ref=d60615f50390d7fc51d50bf60214f79124965206",
      "patch": "@@ -292,7 +292,7 @@ protected void initComponent() {\n         }\n         if (startRequests != null) {\n             for (Request request : startRequests) {\n-                scheduler.push(request, this);\n+                addRequest(request);\n             }\n             startRequests.clear();\n         }",
      "parent_sha": "407fbb613080102e3658727955d8731e22de3722"
    }
  },
  {
    "oid": "4078766d0e0edd510ff5f7071772e9de96420ee3",
    "message": "Change log level of supportedProtocols.",
    "date": "2020-05-28T06:30:14Z",
    "url": "https://github.com/code4craft/webmagic/commit/4078766d0e0edd510ff5f7071772e9de96420ee3",
    "details": {
      "sha": "ee94581adaad25e575591b6d4d0627fa4bd146cb",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientGenerator.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/code4craft/webmagic/blob/4078766d0e0edd510ff5f7071772e9de96420ee3/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientGenerator.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/4078766d0e0edd510ff5f7071772e9de96420ee3/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientGenerator.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientGenerator.java?ref=4078766d0e0edd510ff5f7071772e9de96420ee3",
      "patch": "@@ -65,7 +65,7 @@ private SSLConnectionSocketFactory buildSSLConnectionSocketFactory() {\n             } else {\n                 supportedProtocols = new String[] { \"SSLv3\", \"TLSv1\", \"TLSv1.1\", \"TLSv1.2\" };\n             }\n-            logger.info(\"supportedProtocols: {}\", String.join(\", \", supportedProtocols));\n+            logger.debug(\"supportedProtocols: {}\", String.join(\", \", supportedProtocols));\n             return new SSLConnectionSocketFactory(sslContext, supportedProtocols,\n                     null,\n                     new DefaultHostnameVerifier()); // \u4f18\u5148\u7ed5\u8fc7\u5b89\u5168\u8bc1\u4e66",
      "parent_sha": "3510e74d3f024a30aaf7355be7eb3b035c53fc3e"
    }
  },
  {
    "oid": "8999ea9320db8ed240ffbba2fdecd783de6e649f",
    "message": "add public constructor for SimpleProxyProvider",
    "date": "2017-05-27T08:09:02Z",
    "url": "https://github.com/code4craft/webmagic/commit/8999ea9320db8ed240ffbba2fdecd783de6e649f",
    "details": {
      "sha": "d8f47fe44bd506c1482a18580fc64ed2051c212c",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/proxy/SimpleProxyProvider.java",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/code4craft/webmagic/blob/8999ea9320db8ed240ffbba2fdecd783de6e649f/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fproxy%2FSimpleProxyProvider.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/8999ea9320db8ed240ffbba2fdecd783de6e649f/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fproxy%2FSimpleProxyProvider.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fproxy%2FSimpleProxyProvider.java?ref=8999ea9320db8ed240ffbba2fdecd783de6e649f",
      "patch": "@@ -21,6 +21,10 @@ public class SimpleProxyProvider implements ProxyProvider {\n \n     private final AtomicInteger pointer;\n \n+    public SimpleProxyProvider(List<Proxy> proxies) {\n+        this(proxies, new AtomicInteger(-1));\n+    }\n+\n     private SimpleProxyProvider(List<Proxy> proxies, AtomicInteger pointer) {\n         this.proxies = proxies;\n         this.pointer = pointer;\n@@ -31,7 +35,7 @@ public static SimpleProxyProvider from(Proxy... proxies) {\n         for (Proxy proxy : proxies) {\n             proxiesTemp.add(proxy);\n         }\n-        return new SimpleProxyProvider(Collections.unmodifiableList(proxiesTemp), new AtomicInteger(-1));\n+        return new SimpleProxyProvider(Collections.unmodifiableList(proxiesTemp));\n     }\n \n     @Override",
      "parent_sha": "a8c2e6c7296d5228297b8a92b6bf13158910f518"
    }
  },
  {
    "oid": "fe3d52e2a439d76025c26d258bd7f74472947548",
    "message": "Add TLSv1.3 support.",
    "date": "2020-04-11T10:00:04Z",
    "url": "https://github.com/code4craft/webmagic/commit/fe3d52e2a439d76025c26d258bd7f74472947548",
    "details": {
      "sha": "6409f568e4ae2190707cc843c1b1b0b532837cb0",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientGenerator.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/code4craft/webmagic/blob/fe3d52e2a439d76025c26d258bd7f74472947548/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientGenerator.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/fe3d52e2a439d76025c26d258bd7f74472947548/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientGenerator.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientGenerator.java?ref=fe3d52e2a439d76025c26d258bd7f74472947548",
      "patch": "@@ -50,7 +50,7 @@ public HttpClientGenerator() {\n \n \tprivate SSLConnectionSocketFactory buildSSLConnectionSocketFactory() {\n \t\ttry {\n-            return new SSLConnectionSocketFactory(createIgnoreVerifySSL(), new String[]{\"SSLv3\", \"TLSv1\", \"TLSv1.1\", \"TLSv1.2\"},\n+            return new SSLConnectionSocketFactory(createIgnoreVerifySSL(), new String[]{\"SSLv3\", \"TLSv1\", \"TLSv1.1\", \"TLSv1.2\", \"TLSv1.3\"},\n                     null,\n                     new DefaultHostnameVerifier()); // \u4f18\u5148\u7ed5\u8fc7\u5b89\u5168\u8bc1\u4e66\n \t\t} catch (KeyManagementException e) {",
      "parent_sha": "d78a94f7f71024761b21f5e0bc85467fe8a6ebcb"
    }
  },
  {
    "oid": "56e0cd513a48b05e2c472988047ced82dfe1c3e3",
    "message": "compile error fix",
    "date": "2015-04-15T15:21:06Z",
    "url": "https://github.com/code4craft/webmagic/commit/56e0cd513a48b05e2c472988047ced82dfe1c3e3",
    "details": {
      "sha": "6c4602fe1bf2a2e6730760bdcd6b52c03135d4d9",
      "filename": "webmagic-core/src/test/java/us/codecraft/webmagic/HtmlTest.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/code4craft/webmagic/blob/56e0cd513a48b05e2c472988047ced82dfe1c3e3/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FHtmlTest.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/56e0cd513a48b05e2c472988047ced82dfe1c3e3/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FHtmlTest.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FHtmlTest.java?ref=56e0cd513a48b05e2c472988047ced82dfe1c3e3",
      "patch": "@@ -39,7 +39,7 @@ public void testAHrefExtract(){\n \t\tassertThat(html.links().all()).contains(\"/xx/xx\");\n \t}\n \n-\t@Test(expected = NullPointerException)\n+\t@Test(expected = NullPointerException.class)\n \tpublic void testNthNodesGet(){\n \t\tHtml html = new Html(\"<a data-tip=\\\"p$t$xxx\\\" href=\\\"/xx/xx\\\">xx</a>\");\n \t\tassertThat(html.xpath(\"//a[1]/@href\").get()).isEqualTo(\"/xx/xx\");",
      "parent_sha": "c5740b184031502a24fa7598d146e7e093c7c0d0"
    }
  },
  {
    "oid": "e4c53c4400b840b081bd2a3e3a67ffde9ad9b81b",
    "message": "fix compile error",
    "date": "2013-08-06T15:11:43Z",
    "url": "https://github.com/code4craft/webmagic/commit/e4c53c4400b840b081bd2a3e3a67ffde9ad9b81b",
    "details": {
      "sha": "44173fbc271b0b08aced0a4cb49ad74b4c936640",
      "filename": "webmagic-samples/src/main/java/us/codecraft/webmagic/samples/HuabanProcessor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/code4craft/webmagic/blob/e4c53c4400b840b081bd2a3e3a67ffde9ad9b81b/webmagic-samples%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fsamples%2FHuabanProcessor.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/e4c53c4400b840b081bd2a3e3a67ffde9ad9b81b/webmagic-samples%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fsamples%2FHuabanProcessor.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-samples%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fsamples%2FHuabanProcessor.java?ref=e4c53c4400b840b081bd2a3e3a67ffde9ad9b81b",
      "patch": "@@ -3,10 +3,10 @@\n import us.codecraft.webmagic.Page;\n import us.codecraft.webmagic.Site;\n import us.codecraft.webmagic.Spider;\n+import us.codecraft.webmagic.downloader.selenium.SeleniumDownloader;\n import us.codecraft.webmagic.pipeline.FilePipeline;\n import us.codecraft.webmagic.processor.PageProcessor;\n import us.codecraft.webmagic.scheduler.RedisScheduler;\n-import us.codecraft.webmagic.downloader.downloader.SeleniumDownloader;\n \n /**\n  * \u82b1\u74e3\u7f51\u62bd\u53d6\u5668\u3002<br>",
      "parent_sha": "8b7e6a350b79d8e5a9c5fc1962b83540f85833a1"
    }
  },
  {
    "oid": "0336f4cdb4c71ed81bce53d7fb413503cdb312d5",
    "message": "remove IllegalStateException when download error for less error log",
    "date": "2014-04-25T08:06:29Z",
    "url": "https://github.com/code4craft/webmagic/commit/0336f4cdb4c71ed81bce53d7fb413503cdb312d5",
    "details": {
      "sha": "7f075b1cc9dbe4a873edaa6cf23887047aa163c3",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/Spider.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/code4craft/webmagic/blob/0336f4cdb4c71ed81bce53d7fb413503cdb312d5/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/0336f4cdb4c71ed81bce53d7fb413503cdb312d5/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java?ref=0336f4cdb4c71ed81bce53d7fb413503cdb312d5",
      "patch": "@@ -401,7 +401,7 @@ protected void processRequest(Request request) {\n         Page page = downloader.download(request, this);\n         if (page == null) {\n             sleep(site.getSleepTime());\n-            throw new IllegalStateException(\"download error\");\n+            onError(request);\n         }\n         // for cycle retry\n         if (page.isNeedCycleRetry()) {",
      "parent_sha": "4738ae2d14a0d2419026cf5b2e9990cf3f3e06f1"
    }
  },
  {
    "oid": "86cfefb58ceb2781ae2d374886b4794f1b7ba2a1",
    "message": "update test",
    "date": "2013-11-03T23:19:32Z",
    "url": "https://github.com/code4craft/webmagic/commit/86cfefb58ceb2781ae2d374886b4794f1b7ba2a1",
    "details": {
      "sha": "472b47eed866931fc4d1a931598f3464d868a77f",
      "filename": "webmagic-samples/src/main/java/us/codecraft/webmagic/model/samples/Kr36NewsModel.java",
      "status": "modified",
      "additions": 9,
      "deletions": 3,
      "changes": 12,
      "blob_url": "https://github.com/code4craft/webmagic/blob/86cfefb58ceb2781ae2d374886b4794f1b7ba2a1/webmagic-samples%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fmodel%2Fsamples%2FKr36NewsModel.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/86cfefb58ceb2781ae2d374886b4794f1b7ba2a1/webmagic-samples%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fmodel%2Fsamples%2FKr36NewsModel.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-samples%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fmodel%2Fsamples%2FKr36NewsModel.java?ref=86cfefb58ceb2781ae2d374886b4794f1b7ba2a1",
      "patch": "@@ -1,12 +1,13 @@\n package us.codecraft.webmagic.model.samples;\n \n import us.codecraft.webmagic.Site;\n+import us.codecraft.webmagic.Task;\n import us.codecraft.webmagic.model.OOSpider;\n+import us.codecraft.webmagic.model.PageModelPipeline;\n import us.codecraft.webmagic.model.annotation.ExtractBy;\n import us.codecraft.webmagic.model.annotation.ExtractByUrl;\n import us.codecraft.webmagic.model.annotation.HelpUrl;\n import us.codecraft.webmagic.model.annotation.TargetUrl;\n-import us.codecraft.webmagic.pipeline.JsonFilePageModelPipeline;\n \n /**\n  * @author code4crafter@gmail.com <br>\n@@ -25,8 +26,13 @@ public class Kr36NewsModel {\n     private String url;\n \n     public static void main(String[] args) {\n-        OOSpider.create(Site.me().addStartUrl(\"http://www.36kr.com/\").setSleepTime(0),new JsonFilePageModelPipeline(),\n-                Kr36NewsModel.class).thread(20).run();\n+        //Just for benchmark\n+        OOSpider.create(Site.me().addStartUrl(\"http://www.36kr.com/\").setSleepTime(0), new PageModelPipeline() {\n+            @Override\n+            public void process(Object o, Task task) {\n+\n+            }\n+        },Kr36NewsModel.class).thread(20).run();\n     }\n \n     public String getTitle() {",
      "parent_sha": "c18b603399019b40e4120258149d74d46aa3a7dd"
    }
  },
  {
    "oid": "a7e309071156c99a17e0b681aa0141f8fc4ff88c",
    "message": "setBinaryContent, setCharset \u65b9\u6cd5\u8fd4\u56dethis, \u65b9\u4fbf\u94fe\u5f0f\u8c03\u7528",
    "date": "2017-07-29T11:07:40Z",
    "url": "https://github.com/code4craft/webmagic/commit/a7e309071156c99a17e0b681aa0141f8fc4ff88c",
    "details": {
      "sha": "eefd91bb521fb15507856132a6897554da0f302a",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/Request.java",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/code4craft/webmagic/blob/a7e309071156c99a17e0b681aa0141f8fc4ff88c/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FRequest.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/a7e309071156c99a17e0b681aa0141f8fc4ff88c/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FRequest.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FRequest.java?ref=a7e309071156c99a17e0b681aa0141f8fc4ff88c",
      "patch": "@@ -174,16 +174,18 @@ public boolean isBinaryContent() {\n         return binaryContent;\n     }\n \n-    public void setBinaryContent(boolean binaryContent) {\n+    public Request setBinaryContent(boolean binaryContent) {\n         this.binaryContent = binaryContent;\n+        return this;\n     }\n \n     public String getCharset() {\n         return charset;\n     }\n \n-    public void setCharset(String charset) {\n+    public Request setCharset(String charset) {\n         this.charset = charset;\n+        return this;\n     }\n \n     @Override",
      "parent_sha": "6f5b9e448e022ad4e72bc5a1e60a2bb71d422a37"
    }
  },
  {
    "oid": "583a0eba8c04d29ab30bac74138a586aa4edc475",
    "message": "#29 refactor some method name",
    "date": "2013-11-03T12:24:26Z",
    "url": "https://github.com/code4craft/webmagic/commit/583a0eba8c04d29ab30bac74138a586aa4edc475",
    "details": {
      "sha": "32bd3e1f35c3743136d3c4181318ed1f700d94ed",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/Spider.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/code4craft/webmagic/blob/583a0eba8c04d29ab30bac74138a586aa4edc475/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/583a0eba8c04d29ab30bac74138a586aa4edc475/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java?ref=583a0eba8c04d29ab30bac74138a586aa4edc475",
      "patch": "@@ -343,12 +343,12 @@ protected void processRequest(Request request) {\n         }\n         // for cycle retry\n         if (page.getHtml() == null) {\n-            addRequest(page);\n+            extractAndAddRequests(page);\n             sleep(site.getSleepTime());\n             return;\n         }\n         pageProcessor.process(page);\n-        addRequest(page);\n+        extractAndAddRequests(page);\n         if (!page.getResultItems().isSkip()) {\n             for (Pipeline pipeline : pipelines) {\n                 pipeline.process(page.getResultItems(), this);\n@@ -365,7 +365,7 @@ protected void sleep(int time) {\n         }\n     }\n \n-    protected void addRequest(Page page) {\n+    protected void extractAndAddRequests(Page page) {\n         if (CollectionUtils.isNotEmpty(page.getTargetRequests())) {\n             for (Request request : page.getTargetRequests()) {\n                 addRequest(request);",
      "parent_sha": "6fa82a418ba31109c3c032976a7ec16bef6bcdc1"
    }
  },
  {
    "oid": "0cc0ccee3578ed3ce9a3cd920912bc8b1338da87",
    "message": "add charset specific for easy call of HttpClientDownloader",
    "date": "2013-08-25T07:41:43Z",
    "url": "https://github.com/code4craft/webmagic/commit/0cc0ccee3578ed3ce9a3cd920912bc8b1338da87",
    "details": {
      "sha": "7a063298c8a2b88aaac4671584f19e831a7bc978",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java",
      "status": "modified",
      "additions": 12,
      "deletions": 2,
      "changes": 14,
      "blob_url": "https://github.com/code4craft/webmagic/blob/0cc0ccee3578ed3ce9a3cd920912bc8b1338da87/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/0cc0ccee3578ed3ce9a3cd920912bc8b1338da87/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java?ref=0cc0ccee3578ed3ce9a3cd920912bc8b1338da87",
      "patch": "@@ -46,6 +46,17 @@ public Html download(String url) {\n         return (Html) page.getHtml();\n     }\n \n+    /**\n+     * A simple method to download a url.\n+     *\n+     * @param url\n+     * @return html\n+     */\n+    public Html download(String url,String charset) {\n+        Page page = download(new Request(url), Site.me().setCharset(charset).toTask());\n+        return (Html) page.getHtml();\n+    }\n+\n     @Override\n     public Page download(Request request, Task task) {\n         Site site = null;\n@@ -87,13 +98,12 @@ public Page download(Request request, Task task) {\n             } while (retry);\n             int statusCode = httpResponse.getStatusLine().getStatusCode();\n             if (acceptStatCode.contains(statusCode)) {\n+                handleGzip(httpResponse);\n                 //charset\n                 if (charset == null) {\n                     String value = httpResponse.getEntity().getContentType().getValue();\n                     charset = UrlUtils.getCharset(value);\n                 }\n-                //\n-                handleGzip(httpResponse);\n                 return handleResponse(request, charset, httpResponse, task);\n             } else {\n                 logger.warn(\"code error \" + statusCode + \"\\t\" + request.getUrl());",
      "parent_sha": "478ace7e973d5ae924ed3345722cf4ef143c0df8"
    }
  },
  {
    "oid": "ab6ff7f80939d89d1c35070052bd9923cf61de32",
    "message": "Revert \"pageCount\u4fee\u6539\"\n\nThis reverts commit 9a71f0ac924615d21882e1faa4bbda0c2e5eb7d7.",
    "date": "2021-01-02T12:33:32Z",
    "url": "https://github.com/code4craft/webmagic/commit/ab6ff7f80939d89d1c35070052bd9923cf61de32",
    "details": {
      "sha": "886e74a92c8a81306224696ee4c7334a1817f03e",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/Spider.java",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/code4craft/webmagic/blob/ab6ff7f80939d89d1c35070052bd9923cf61de32/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/ab6ff7f80939d89d1c35070052bd9923cf61de32/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java?ref=ab6ff7f80939d89d1c35070052bd9923cf61de32",
      "patch": "@@ -24,7 +24,6 @@\n import java.util.concurrent.TimeUnit;\n import java.util.concurrent.atomic.AtomicInteger;\n import java.util.concurrent.atomic.AtomicLong;\n-import java.util.concurrent.atomic.LongAdder;\n import java.util.concurrent.locks.Condition;\n import java.util.concurrent.locks.ReentrantLock;\n \n@@ -103,7 +102,7 @@ public class Spider implements Runnable, Task {\n \n     private List<SpiderListener> spiderListeners;\n \n-    private final LongAdder pageCount = new LongAdder();\n+    private final AtomicLong pageCount = new AtomicLong(0);\n \n     private Date startTime;\n \n@@ -324,7 +323,7 @@ public void run() {\n                             onError(request);\n                             logger.error(\"process request \" + request + \" error\", e);\n                         } finally {\n-                            pageCount.increment();\n+                            pageCount.incrementAndGet();\n                             signalNewUrl();\n                         }\n                     }\n@@ -336,7 +335,7 @@ public void run() {\n         if (destroyWhenExit) {\n             close();\n         }\n-        logger.info(\"Spider {} closed! {} pages downloaded.\", getUUID(), pageCount.sumThenReset());\n+        logger.info(\"Spider {} closed! {} pages downloaded.\", getUUID(), pageCount.get());\n     }\n \n     protected void onError(Request request) {\n@@ -651,7 +650,7 @@ public boolean isSpawnUrl() {\n      * @since 0.4.1\n      */\n     public long getPageCount() {\n-        return pageCount.sum();\n+        return pageCount.get();\n     }\n \n     /**",
      "parent_sha": "30daec480348e3b679dca5f07c8147f540134876"
    }
  },
  {
    "oid": "c3183252ac1ba7072213bda2d3fd4311d5204c2b",
    "message": "Update RegexSelector.java",
    "date": "2017-05-03T10:24:19Z",
    "url": "https://github.com/code4craft/webmagic/commit/c3183252ac1ba7072213bda2d3fd4311d5204c2b",
    "details": {
      "sha": "bac8167fa3479b76784b2cf80d2273d25dc148e6",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/selector/RegexSelector.java",
      "status": "modified",
      "additions": 8,
      "deletions": 18,
      "changes": 26,
      "blob_url": "https://github.com/code4craft/webmagic/blob/c3183252ac1ba7072213bda2d3fd4311d5204c2b/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FRegexSelector.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/c3183252ac1ba7072213bda2d3fd4311d5204c2b/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FRegexSelector.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FRegexSelector.java?ref=c3183252ac1ba7072213bda2d3fd4311d5204c2b",
      "patch": "@@ -45,24 +45,14 @@ public RegexSelector(String regexStr) {\n     }\n \n     private boolean hasGroup(String regexStr) {\n-        if (StringUtils.countMatches(regexStr, \"(\") - StringUtils.countMatches(regexStr, \"\\\\(\") ==\n-                StringUtils.countMatches(regexStr, \"(?:\") - StringUtils.countMatches(regexStr, \"\\\\(?:\")){\n-            return false;\n-        }\n-        if (StringUtils.countMatches(regexStr, \"(\") - StringUtils.countMatches(regexStr, \"\\\\(\") ==\n-                StringUtils.countMatches(regexStr, \"(?=\") - StringUtils.countMatches(regexStr, \"\\\\(?=\") ) {\n-            return false;\n-        }\n-        if (StringUtils.countMatches(regexStr, \"(\") - StringUtils.countMatches(regexStr, \"\\\\(\") ==\n-                StringUtils.countMatches(regexStr, \"(?<\") - StringUtils.countMatches(regexStr, \"\\\\(?<\") ) {\n-            return false;\n-        }\n-        if (StringUtils.countMatches(regexStr, \"(\") - StringUtils.countMatches(regexStr, \"\\\\(\") ==\n-                StringUtils.countMatches(regexStr, \"(?!\") - StringUtils.countMatches(regexStr, \"\\\\(?!\") ) {\n-            return false;\n-        }\n-        if (StringUtils.countMatches(regexStr, \"(\") - StringUtils.countMatches(regexStr, \"\\\\(\") ==\n-                StringUtils.countMatches(regexStr, \"(?#\") - StringUtils.countMatches(regexStr, \"\\\\(?#\") ) {\n+        int x = StringUtils.countMatches(regexStr, \"(\") - StringUtils.countMatches(regexStr, \"\\\\(\");\n+        int a = StringUtils.countMatches(regexStr, \"(?:\") - StringUtils.countMatches(regexStr, \"\\\\(?:\");\n+        int b = StringUtils.countMatches(regexStr, \"(?=\") - StringUtils.countMatches(regexStr, \"\\\\(?=\");\n+        int c = StringUtils.countMatches(regexStr, \"(?<\") - StringUtils.countMatches(regexStr, \"\\\\(?<\");\n+        int d = StringUtils.countMatches(regexStr, \"(?!\") - StringUtils.countMatches(regexStr, \"\\\\(?!\");\n+        int e = StringUtils.countMatches(regexStr, \"(?#\") - StringUtils.countMatches(regexStr, \"\\\\(?#\");\n+        \n+        if (x == (a + b + c + d + e)) {\n             return false;\n         }\n         return true;",
      "parent_sha": "cbf80af5dd02abd46c966d2257bc954567ab27df"
    }
  },
  {
    "oid": "b043ac76d656467f342249f82a7a4c8f300030f6",
    "message": "change the formatter of log.\nTo use slf4j, we should insert {} into the formatter string.",
    "date": "2014-04-05T03:31:56Z",
    "url": "https://github.com/code4craft/webmagic/commit/b043ac76d656467f342249f82a7a4c8f300030f6",
    "details": {
      "sha": "397199cdc35622dea20a11adde91dce251a4937a",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/scheduler/LocalDuplicatedRemovedScheduler.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/code4craft/webmagic/blob/b043ac76d656467f342249f82a7a4c8f300030f6/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FLocalDuplicatedRemovedScheduler.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/b043ac76d656467f342249f82a7a4c8f300030f6/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FLocalDuplicatedRemovedScheduler.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FLocalDuplicatedRemovedScheduler.java?ref=b043ac76d656467f342249f82a7a4c8f300030f6",
      "patch": "@@ -23,9 +23,9 @@ public abstract class LocalDuplicatedRemovedScheduler implements Scheduler {\n \n     @Override\n     public void push(Request request, Task task) {\n-        logger.trace(\"get a candidate url \", request.getUrl());\n+        logger.trace(\"get a candidate url {}\", request.getUrl());\n         if (request.getExtra(Request.CYCLE_TRIED_TIMES) != null || urls.add(request.getUrl())) {\n-            logger.debug(\"push to queue \", request.getUrl());\n+            logger.debug(\"push to queue {}\", request.getUrl());\n             pushWhenNoDuplicate(request, task);\n         }\n     }",
      "parent_sha": "474f785dab083a147c2aa28407282f43d13e0887"
    }
  },
  {
    "oid": "4cd5b4f93ec61e2cebcb6e36746832566aad4615",
    "message": "test_issue409",
    "date": "2017-06-03T07:02:33Z",
    "url": "https://github.com/code4craft/webmagic/commit/4cd5b4f93ec61e2cebcb6e36746832566aad4615",
    "details": {
      "sha": "ae5519042f295c71e80b9a1a7fb0de88f5639f36",
      "filename": "webmagic-extension/src/test/java/us/codecraft/webmagic/SimpleHttpClientTest.java",
      "status": "modified",
      "additions": 8,
      "deletions": 7,
      "changes": 15,
      "blob_url": "https://github.com/code4craft/webmagic/blob/4cd5b4f93ec61e2cebcb6e36746832566aad4615/webmagic-extension%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSimpleHttpClientTest.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/4cd5b4f93ec61e2cebcb6e36746832566aad4615/webmagic-extension%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSimpleHttpClientTest.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-extension%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSimpleHttpClientTest.java?ref=4cd5b4f93ec61e2cebcb6e36746832566aad4615",
      "patch": "@@ -5,8 +5,6 @@\n import us.codecraft.webmagic.model.AfterExtractor;\n import us.codecraft.webmagic.model.annotation.ExtractBy;\n \n-import static org.assertj.core.api.Assertions.assertThat;\n-\n /**\n  * @author code4crafter@gmail.com\n  *         Date: 2017/6/3\n@@ -79,13 +77,16 @@ public String toString() {\n         }\n     }\n \n-    @Ignore\n     @Test\n     public void test() throws Exception {\n-        SimpleHttpClient simpleClient = new SimpleHttpClient(Site.me().setUserAgent(\n-                \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.115 Safari/537.36\"));\n-        Weather weather = simpleClient.get(\"http://www.weather.com.cn/weather/101020100.shtml\", Weather.class);\n-        assertThat(weather).isNotNull();\n+//        SimpleHttpClient simpleClient = ;\n+//        Weather weather = simpleClient.get(\"http://www.weather.com.cn/weather/101020100.shtml\", Weather.class);\n+//        assertThat(weather).isNotNull();\n+    }\n \n+    @Ignore\n+    @Test\n+    public void test_issue409() throws Exception {\n+        System.out.println(new SimpleHttpClient(Site.me()).get(\"https://www.beijing-hyundai.com.cn\").getHtml());\n     }\n }",
      "parent_sha": "fb0acd710cabb4e01a9a49c5038f62a0cfa61d03"
    }
  },
  {
    "oid": "c175ea88c0bcc2a35055f7d851fc98bbd37e4838",
    "message": "#more test #484",
    "date": "2017-03-11T03:43:18Z",
    "url": "https://github.com/code4craft/webmagic/commit/c175ea88c0bcc2a35055f7d851fc98bbd37e4838",
    "details": {
      "sha": "a0980494c016e489eb792227cb5cdde0c57c3bc5",
      "filename": "webmagic-core/src/test/java/us/codecraft/webmagic/scheduler/DuplicateRemovedSchedulerTest.java",
      "status": "modified",
      "additions": 17,
      "deletions": 6,
      "changes": 23,
      "blob_url": "https://github.com/code4craft/webmagic/blob/c175ea88c0bcc2a35055f7d851fc98bbd37e4838/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FDuplicateRemovedSchedulerTest.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/c175ea88c0bcc2a35055f7d851fc98bbd37e4838/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FDuplicateRemovedSchedulerTest.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FDuplicateRemovedSchedulerTest.java?ref=c175ea88c0bcc2a35055f7d851fc98bbd37e4838",
      "patch": "@@ -21,19 +21,30 @@\n @RunWith(MockitoJUnitRunner.class)\n public class DuplicateRemovedSchedulerTest {\n \n+    private DuplicateRemovedScheduler duplicateRemovedScheduler = new DuplicateRemovedScheduler() {\n+        @Override\n+        public Request poll(Task task) {\n+            return null;\n+        }\n+    };\n+\n     @Test\n     public void test_no_duplicate_removed_for_post_request() throws Exception {\n-        DuplicateRemovedScheduler duplicateRemovedScheduler = new DuplicateRemovedScheduler() {\n-            @Override\n-            public Request poll(Task task) {\n-                return null;\n-            }\n-        };\n         DuplicateRemover duplicateRemover = Mockito.mock(DuplicateRemover.class);\n         duplicateRemovedScheduler.setDuplicateRemover(duplicateRemover);\n         Request request = new Request(\"https://www.google.com/\");\n         request.setMethod(HttpConstant.Method.POST);\n         duplicateRemovedScheduler.push(request, null);\n         verify(duplicateRemover,times(0)).isDuplicate(any(Request.class),any(Task.class));\n     }\n+\n+    @Test\n+    public void test_duplicate_removed_for_get_request() throws Exception {\n+        DuplicateRemover duplicateRemover = Mockito.mock(DuplicateRemover.class);\n+        duplicateRemovedScheduler.setDuplicateRemover(duplicateRemover);\n+        Request request = new Request(\"https://www.google.com/\");\n+        request.setMethod(HttpConstant.Method.GET);\n+        duplicateRemovedScheduler.push(request, null);\n+        verify(duplicateRemover,times(1)).isDuplicate(any(Request.class),any(Task.class));\n+    }\n }",
      "parent_sha": "9b964c0a9968f3c4bb6837b5c584f45ed87851c2"
    }
  },
  {
    "oid": "fcdb9074d69543b81fd350075d182ce1eeaf26ac",
    "message": "\u683c\u5f0f\u5316 Spider.run \u4ee3\u7801",
    "date": "2021-08-04T10:23:04Z",
    "url": "https://github.com/code4craft/webmagic/commit/fcdb9074d69543b81fd350075d182ce1eeaf26ac",
    "details": {
      "sha": "bc8bb94c54cb4593dfcd2c80be38a8d278db1d25",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/Spider.java",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/code4craft/webmagic/blob/fcdb9074d69543b81fd350075d182ce1eeaf26ac/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/fcdb9074d69543b81fd350075d182ce1eeaf26ac/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java?ref=fcdb9074d69543b81fd350075d182ce1eeaf26ac",
      "patch": "@@ -313,10 +313,10 @@ public void run() {\n                 if (threadPool.getThreadAlive() == 0) {\n                     //no alive thread anymore , try again\n                     poll = scheduler.poll(this);\n-                    if(poll==null) {\n+                    if (poll == null) {\n                         if (exitWhenComplete) {\n                             break;\n-                        }else{\n+                        } else {\n                             // wait\n                             try {\n                                 Thread.sleep(emptySleepTime);\n@@ -326,9 +326,9 @@ public void run() {\n                             }\n                         }\n                     }\n-                }else {\n+                } else {\n                     // wait until new url added\uff0c\n-                    if(waitNewUrl())\n+                    if (waitNewUrl())\n                         //if interrupted\n                         break;\n                     continue;\n@@ -343,7 +343,7 @@ public void run() {\n                         processRequest(request);\n                         onSuccess(request);\n                     } catch (Exception e) {\n-                        onError(request,e);\n+                        onError(request, e);\n                         logger.error(\"process request \" + request + \" error\", e);\n                     } finally {\n                         pageCount.incrementAndGet();",
      "parent_sha": "ab5d81a6b6ab215e3450cb2fde94df12c5e49544"
    }
  },
  {
    "oid": "244ade7b4c88d21bd676a5ea128a8ac2a8f53456",
    "message": "feat:update host verify (#1112)",
    "date": "2023-03-22T14:25:51Z",
    "url": "https://github.com/code4craft/webmagic/commit/244ade7b4c88d21bd676a5ea128a8ac2a8f53456",
    "details": {
      "sha": "167a5e1c63d4d693848fa16ed9f28c4137d3f962",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientGenerator.java",
      "status": "modified",
      "additions": 20,
      "deletions": 28,
      "changes": 48,
      "blob_url": "https://github.com/code4craft/webmagic/blob/244ade7b4c88d21bd676a5ea128a8ac2a8f53456/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientGenerator.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/244ade7b4c88d21bd676a5ea128a8ac2a8f53456/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientGenerator.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientGenerator.java?ref=244ade7b4c88d21bd676a5ea128a8ac2a8f53456",
      "patch": "@@ -1,16 +1,5 @@\n package us.codecraft.webmagic.downloader;\n \n-import java.io.IOException;\n-import java.security.KeyManagementException;\n-import java.security.NoSuchAlgorithmException;\n-import java.security.cert.CertificateException;\n-import java.security.cert.X509Certificate;\n-import java.util.Map;\n-\n-import javax.net.ssl.SSLContext;\n-import javax.net.ssl.TrustManager;\n-import javax.net.ssl.X509TrustManager;\n-\n import org.apache.commons.lang3.JavaVersion;\n import org.apache.commons.lang3.SystemUtils;\n import org.apache.http.HttpException;\n@@ -22,28 +11,32 @@\n import org.apache.http.config.SocketConfig;\n import org.apache.http.conn.socket.ConnectionSocketFactory;\n import org.apache.http.conn.socket.PlainConnectionSocketFactory;\n-import org.apache.http.conn.ssl.DefaultHostnameVerifier;\n import org.apache.http.conn.ssl.SSLConnectionSocketFactory;\n-import org.apache.http.impl.client.BasicCookieStore;\n-import org.apache.http.impl.client.CloseableHttpClient;\n-import org.apache.http.impl.client.DefaultHttpRequestRetryHandler;\n-import org.apache.http.impl.client.HttpClientBuilder;\n-import org.apache.http.impl.client.HttpClients;\n+import org.apache.http.impl.client.*;\n import org.apache.http.impl.conn.PoolingHttpClientConnectionManager;\n import org.apache.http.impl.cookie.BasicClientCookie;\n import org.apache.http.protocol.HttpContext;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import us.codecraft.webmagic.Site;\n \n+import javax.net.ssl.SSLContext;\n+import javax.net.ssl.TrustManager;\n+import javax.net.ssl.X509TrustManager;\n+import java.io.IOException;\n+import java.security.KeyManagementException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.cert.CertificateException;\n+import java.security.cert.X509Certificate;\n+import java.util.Map;\n+\n /**\n  * @author code4crafter@gmail.com <br>\n  * @since 0.4.0\n  */\n public class HttpClientGenerator {\n \n-\tprivate transient Logger logger = LoggerFactory.getLogger(getClass());\n+    private transient Logger logger = LoggerFactory.getLogger(getClass());\n \n     private PoolingHttpClientConnectionManager connectionManager;\n \n@@ -61,21 +54,20 @@ private SSLConnectionSocketFactory buildSSLConnectionSocketFactory() {\n             SSLContext sslContext = createIgnoreVerifySSL();\n             String[] supportedProtocols;\n             if (SystemUtils.isJavaVersionAtLeast(JavaVersion.JAVA_11)) {\n-                supportedProtocols = new String[] { \"SSLv3\", \"TLSv1\", \"TLSv1.1\", \"TLSv1.2\", \"TLSv1.3\" };\n+                supportedProtocols = new String[]{\"SSLv3\", \"TLSv1\", \"TLSv1.1\", \"TLSv1.2\", \"TLSv1.3\"};\n             } else {\n-                supportedProtocols = new String[] { \"SSLv3\", \"TLSv1\", \"TLSv1.1\", \"TLSv1.2\" };\n+                supportedProtocols = new String[]{\"SSLv3\", \"TLSv1\", \"TLSv1.1\", \"TLSv1.2\"};\n             }\n             logger.debug(\"supportedProtocols: {}\", String.join(\", \", supportedProtocols));\n             return new SSLConnectionSocketFactory(sslContext, supportedProtocols,\n                     null,\n-                    new DefaultHostnameVerifier()); // \u4f18\u5148\u7ed5\u8fc7\u5b89\u5168\u8bc1\u4e66\n-        } catch (KeyManagementException e) {\n-            logger.error(\"ssl connection fail\", e);\n-        } catch (NoSuchAlgorithmException e) {\n+                    //\u4e0d\u8fdb\u884c\u4e3b\u673a\u6821\u9a8c\n+                    (host, sslSession) -> true); // \u4f18\u5148\u7ed5\u8fc7\u5b89\u5168\u8bc1\u4e66\n+        } catch (KeyManagementException | NoSuchAlgorithmException e) {\n             logger.error(\"ssl connection fail\", e);\n         }\n         return SSLConnectionSocketFactory.getSocketFactory();\n-\t}\n+    }\n \n     private SSLContext createIgnoreVerifySSL() throws NoSuchAlgorithmException, KeyManagementException {\n         // \u5b9e\u73b0\u4e00\u4e2aX509TrustManager\u63a5\u53e3\uff0c\u7528\u4e8e\u7ed5\u8fc7\u9a8c\u8bc1\uff0c\u4e0d\u7528\u4fee\u6539\u91cc\u9762\u7684\u65b9\u6cd5\n@@ -97,9 +89,9 @@ public X509Certificate[] getAcceptedIssuers() {\n         };\n \n         SSLContext sc = SSLContext.getInstance(\"TLS\");\n-        sc.init(null, new TrustManager[] { trustManager }, null);\n+        sc.init(null, new TrustManager[]{trustManager}, null);\n         return sc;\n-\t}\n+    }\n \n     public HttpClientGenerator setPoolSize(int poolSize) {\n         connectionManager.setMaxTotal(poolSize);",
      "parent_sha": "717931166a5ea6e0931f85cb3efc195982ca7b91"
    }
  },
  {
    "oid": "fb0acd710cabb4e01a9a49c5038f62a0cfa61d03",
    "message": "complete SimpleHttpClientTest",
    "date": "2017-06-03T06:59:08Z",
    "url": "https://github.com/code4craft/webmagic/commit/fb0acd710cabb4e01a9a49c5038f62a0cfa61d03",
    "details": {
      "sha": "0058d3056ffaab4b500072e34c0570da426ca93e",
      "filename": "webmagic-extension/src/test/java/us/codecraft/webmagic/SimpleHttpClientTest.java",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/code4craft/webmagic/blob/fb0acd710cabb4e01a9a49c5038f62a0cfa61d03/webmagic-extension%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSimpleHttpClientTest.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/fb0acd710cabb4e01a9a49c5038f62a0cfa61d03/webmagic-extension%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSimpleHttpClientTest.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-extension%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSimpleHttpClientTest.java?ref=fb0acd710cabb4e01a9a49c5038f62a0cfa61d03",
      "patch": "@@ -1,9 +1,12 @@\n package us.codecraft.webmagic;\n \n+import org.junit.Ignore;\n import org.junit.Test;\n import us.codecraft.webmagic.model.AfterExtractor;\n import us.codecraft.webmagic.model.annotation.ExtractBy;\n \n+import static org.assertj.core.api.Assertions.assertThat;\n+\n /**\n  * @author code4crafter@gmail.com\n  *         Date: 2017/6/3\n@@ -76,12 +79,13 @@ public String toString() {\n         }\n     }\n \n+    @Ignore\n     @Test\n     public void test() throws Exception {\n         SimpleHttpClient simpleClient = new SimpleHttpClient(Site.me().setUserAgent(\n                 \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.115 Safari/537.36\"));\n         Weather weather = simpleClient.get(\"http://www.weather.com.cn/weather/101020100.shtml\", Weather.class);\n-        System.out.println(weather);\n+        assertThat(weather).isNotNull();\n \n     }\n }",
      "parent_sha": "d07941d9003405089fc21ed4522b2f70c3a60aa2"
    }
  },
  {
    "oid": "54127318a4266fc53037e9f1b51a6eb3102e7aaf",
    "message": "SpiderStatus\u4e2dgetPagePerSecond()\u65b9\u6cd5\uff0c\u589e\u52a0\u9a8c\u8bc1\u903b\u8f91\uff0c\u907f\u514d\u7a7a\u6307\u9488\uff0c\u907f\u514d\u9664\u6570\u4e3a\u96f6\u3002",
    "date": "2021-02-02T13:43:53Z",
    "url": "https://github.com/code4craft/webmagic/commit/54127318a4266fc53037e9f1b51a6eb3102e7aaf",
    "details": {
      "sha": "69afe042a24ff073f6b8589f80aab79e51d20f32",
      "filename": "webmagic-extension/src/main/java/us/codecraft/webmagic/monitor/SpiderStatus.java",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/code4craft/webmagic/blob/54127318a4266fc53037e9f1b51a6eb3102e7aaf/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fmonitor%2FSpiderStatus.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/54127318a4266fc53037e9f1b51a6eb3102e7aaf/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fmonitor%2FSpiderStatus.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fmonitor%2FSpiderStatus.java?ref=54127318a4266fc53037e9f1b51a6eb3102e7aaf",
      "patch": "@@ -84,8 +84,13 @@ public Date getStartTime() {\n \n     @Override\n     public int getPagePerSecond() {\n-        int runSeconds = (int) (System.currentTimeMillis() - getStartTime().getTime()) / 1000;\n-        return getSuccessPageCount() / runSeconds;\n+        if (getStartTime() != null) {\n+            int runSeconds = (int) (System.currentTimeMillis() - getStartTime().getTime()) / 1000;\n+            if (runSeconds != 0) {\n+                return getSuccessPageCount() / runSeconds;\n+            }\n+        }\n+        return -1;\n     }\n \n }",
      "parent_sha": "ab6ff7f80939d89d1c35070052bd9923cf61de32"
    }
  },
  {
    "oid": "7476ceccee28827a1aab951e319e0ec915dbaaa3",
    "message": "more stable test",
    "date": "2016-12-18T00:15:26Z",
    "url": "https://github.com/code4craft/webmagic/commit/7476ceccee28827a1aab951e319e0ec915dbaaa3",
    "details": {
      "sha": "1735e00babbf4ee55c577d15cffb1a4c0524ebd1",
      "filename": "webmagic-core/src/test/java/us/codecraft/webmagic/downloader/HttpClientDownloaderTest.java",
      "status": "modified",
      "additions": 3,
      "deletions": 12,
      "changes": 15,
      "blob_url": "https://github.com/code4craft/webmagic/blob/7476ceccee28827a1aab951e319e0ec915dbaaa3/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloaderTest.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/7476ceccee28827a1aab951e319e0ec915dbaaa3/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloaderTest.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloaderTest.java?ref=7476ceccee28827a1aab951e319e0ec915dbaaa3",
      "patch": "@@ -1,11 +1,11 @@\n package us.codecraft.webmagic.downloader;\n \n-import com.github.dreamhead.moco.*;\n+import com.github.dreamhead.moco.HttpServer;\n import com.github.dreamhead.moco.Runnable;\n+import com.github.dreamhead.moco.Runner;\n import org.apache.commons.io.IOUtils;\n import org.apache.http.client.methods.CloseableHttpResponse;\n import org.apache.http.impl.client.CloseableHttpClient;\n-import org.junit.Ignore;\n import org.junit.Test;\n import us.codecraft.webmagic.Page;\n import us.codecraft.webmagic.Request;\n@@ -28,19 +28,10 @@ public class HttpClientDownloaderTest {\n \n     public static final String PAGE_ALWAYS_NOT_EXISTS = \"http://localhost:13421/404\";\n \n-    @Ignore\n-    @Test\n-    public void testCookie() {\n-        Site site = Site.me().setDomain(\"www.diandian.com\").addCookie(\"t\", \"43ztv9srfszl99yxv2aumx3zr7el7ybb\");\n-        HttpClientDownloader httpClientDownloader = new HttpClientDownloader();\n-        Page download = httpClientDownloader.download(new Request(\"http://www.diandian.com\"), site.toTask());\n-        assertTrue(download.getHtml().toString().contains(\"flashsword30\"));\n-    }\n-\n     @Test\n     public void testDownloader() {\n         HttpClientDownloader httpClientDownloader = new HttpClientDownloader();\n-        Html html = httpClientDownloader.download(\"https://github.com\");\n+        Html html = httpClientDownloader.download(\"https://www.baidu.com/\");\n         assertTrue(!html.getFirstSourceText().isEmpty());\n     }\n ",
      "parent_sha": "5ce3fdfe5ab7b370452584158db740fd62c7c6dc"
    }
  },
  {
    "oid": "81ce1ffc5f03fc1e6a2e9f8c6139bf796a538372",
    "message": "fix ignore",
    "date": "2016-01-21T04:36:49Z",
    "url": "https://github.com/code4craft/webmagic/commit/81ce1ffc5f03fc1e6a2e9f8c6139bf796a538372",
    "details": {
      "sha": "6cf5382080bce945786f63267032240b5e20829d",
      "filename": "webmagic-core/src/test/java/us/codecraft/webmagic/HtmlTest.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/code4craft/webmagic/blob/81ce1ffc5f03fc1e6a2e9f8c6139bf796a538372/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FHtmlTest.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/81ce1ffc5f03fc1e6a2e9f8c6139bf796a538372/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FHtmlTest.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FHtmlTest.java?ref=81ce1ffc5f03fc1e6a2e9f8c6139bf796a538372",
      "patch": "@@ -20,14 +20,14 @@ public void testRegexSelector() {\n \t\tassertThat(selectable.regex(\"(a+b)\").replace(\"aa(a)\", \"$1bb\").toString()).isEqualTo(\"abbabbab\");\n     }\n \n+\t@Ignore(\"not work in jsoup 1.8.x\")\n \t@Test\n \tpublic void testDisableJsoupHtmlEntityEscape() throws Exception {\n \t\tHtml.DISABLE_HTML_ENTITY_ESCAPE = true;\n \t\tHtml html = new Html(\"aaaaaaa&b\");\n \t\tassertThat(html.regex(\"(aaaaaaa&b)\").toString()).isEqualTo(\"aaaaaaa&b\");\n \t}\n \n-\t@Ignore(\"not work in jsoup 1.8.x\")\n \t@Test\n \tpublic void testEnableJsoupHtmlEntityEscape() throws Exception {\n \t\tHtml.DISABLE_HTML_ENTITY_ESCAPE = false;",
      "parent_sha": "93764fa2c9999a11fece0806f7bf4b3cdbe1cfce"
    }
  },
  {
    "oid": "dafd2b77ff53cafd6860919aa74afb7c9b296466",
    "message": "fix GithubRepoPageProcessor in example",
    "date": "2016-11-24T00:18:06Z",
    "url": "https://github.com/code4craft/webmagic/commit/dafd2b77ff53cafd6860919aa74afb7c9b296466",
    "details": {
      "sha": "0ca3b7f42ad1faa0248feb0083112130021ab3b9",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/processor/example/GithubRepoPageProcessor.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/code4craft/webmagic/blob/dafd2b77ff53cafd6860919aa74afb7c9b296466/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fprocessor%2Fexample%2FGithubRepoPageProcessor.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/dafd2b77ff53cafd6860919aa74afb7c9b296466/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fprocessor%2Fexample%2FGithubRepoPageProcessor.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fprocessor%2Fexample%2FGithubRepoPageProcessor.java?ref=dafd2b77ff53cafd6860919aa74afb7c9b296466",
      "patch": "@@ -11,11 +11,11 @@\n  */\n public class GithubRepoPageProcessor implements PageProcessor {\n \n-    private Site site = Site.me().setRetryTimes(3).setSleepTime(0);\n+    private Site site = Site.me().setRetryTimes(3).setSleepTime(1000);\n \n     @Override\n     public void process(Page page) {\n-        page.addTargetRequests(page.getHtml().links().regex(\"(https://github\\\\.com/[\\\\w\\\\-]+/[\\\\w\\\\-])\").all());\n+        page.addTargetRequests(page.getHtml().links().regex(\"(https://github\\\\.com/[\\\\w\\\\-]+/[\\\\w\\\\-]+)\").all());\n         page.addTargetRequests(page.getHtml().links().regex(\"(https://github\\\\.com/[\\\\w\\\\-])\").all());\n         page.putField(\"author\", page.getUrl().regex(\"https://github\\\\.com/(\\\\w+)/.*\").toString());\n         page.putField(\"name\", page.getHtml().xpath(\"//h1[@class='entry-title public']/strong/a/text()\").toString());",
      "parent_sha": "cfed860fb9d7519170d7166c81527d9625d758e8"
    }
  },
  {
    "oid": "27ce3fc17660dc5c2bf3f8c32cf6e4fc55525ab2",
    "message": "lazy init",
    "date": "2013-08-05T11:36:49Z",
    "url": "https://github.com/code4craft/webmagic/commit/27ce3fc17660dc5c2bf3f8c32cf6e4fc55525ab2",
    "details": {
      "sha": "77db2c1aee6f348f7978c16e55f874ab0c588636",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/Request.java",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/code4craft/webmagic/blob/27ce3fc17660dc5c2bf3f8c32cf6e4fc55525ab2/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FRequest.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/27ce3fc17660dc5c2bf3f8c32cf6e4fc55525ab2/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FRequest.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FRequest.java?ref=27ce3fc17660dc5c2bf3f8c32cf6e4fc55525ab2",
      "patch": "@@ -33,7 +33,7 @@ public class Request {\n     /**\n      * \u989d\u5916\u53c2\u6570\uff0c\u53ef\u4ee5\u4fdd\u5b58\u4e00\u4e9b\u9700\u8981\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\n      */\n-    private Map<String, Object> extras = new HashMap<String, Object>();\n+    private Map<String, Object> extras;\n \n     private double priority;\n \n@@ -56,10 +56,16 @@ public Request setPriority(double priority) {\n     }\n \n     public Object getExtra(String key) {\n+        if (extras==null){\n+            return null;\n+        }\n         return extras.get(key);\n     }\n \n     public Request putExtra(String key,Object value) {\n+        if (extras==null){\n+            extras = new HashMap<String, Object>();\n+        }\n         extras.put(key,value);\n         return this;\n     }",
      "parent_sha": "dc9f574e27b6cfb9c5cfa70809852b92579dab6d"
    }
  },
  {
    "oid": "a0ff4a2d2e3834e68ca399c0621b15bc798b4f83",
    "message": "Fix log message.",
    "date": "2024-04-23T12:09:15Z",
    "url": "https://github.com/code4craft/webmagic/commit/a0ff4a2d2e3834e68ca399c0621b15bc798b4f83",
    "details": {
      "sha": "05d6e1a2b9726c20a29d60e8076071073ca623af",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/code4craft/webmagic/blob/a0ff4a2d2e3834e68ca399c0621b15bc798b4f83/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/a0ff4a2d2e3834e68ca399c0621b15bc798b4f83/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java?ref=a0ff4a2d2e3834e68ca399c0621b15bc798b4f83",
      "patch": "@@ -85,13 +85,13 @@ public Page download(Request request, Task task) {\n             page = handleResponse(request, request.getCharset() != null ? request.getCharset() : task.getSite().getCharset(), httpResponse, task);\n \n             onSuccess(page, task);\n-            logger.info(\"downloading page success {}\", request.getUrl());\n+            logger.info(\"Download page success: {}\", request.getUrl());\n \n             return page;\n         } catch (IOException e) {\n \n             onError(page, task, e);\n-            logger.info(\"download page {} error\", request.getUrl(), e);\n+            logger.info(\"Download page error: {}\", request.getUrl(), e);\n \n             return page;\n         } finally {",
      "parent_sha": "76ef0332f1a29361e77458338e29db10506a48a7"
    }
  },
  {
    "oid": "448e528140851a246564140560e291be722f7809",
    "message": "update StringUtils to apache lang3 #314",
    "date": "2016-05-24T05:33:17Z",
    "url": "https://github.com/code4craft/webmagic/commit/448e528140851a246564140560e291be722f7809",
    "details": {
      "sha": "5a74527ea680130ec414d2b47f7cfb2ae93e835d",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/code4craft/webmagic/blob/448e528140851a246564140560e291be722f7809/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/448e528140851a246564140560e291be722f7809/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java?ref=448e528140851a246564140560e291be722f7809",
      "patch": "@@ -2,7 +2,7 @@\n \n import com.google.common.collect.Sets;\n import org.apache.commons.io.IOUtils;\n-import org.apache.commons.lang.StringUtils;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.http.HttpHost;\n import org.apache.http.HttpResponse;\n import org.apache.http.NameValuePair;",
      "parent_sha": "3e33959b7a99dbeccdc6fa8636768a99380a3b6b"
    }
  },
  {
    "oid": "843e928c2c81ed5385f2f281a829a71470e2b983",
    "message": "comments on sinablogprocessor sample",
    "date": "2014-04-12T12:10:24Z",
    "url": "https://github.com/code4craft/webmagic/commit/843e928c2c81ed5385f2f281a829a71470e2b983",
    "details": {
      "sha": "2872e02b5a6763f0c353ebc427bf5ed968e7eced",
      "filename": "webmagic-samples/src/main/java/us/codecraft/webmagic/samples/SinaBlogProcessor.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/code4craft/webmagic/blob/843e928c2c81ed5385f2f281a829a71470e2b983/webmagic-samples%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fsamples%2FSinaBlogProcessor.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/843e928c2c81ed5385f2f281a829a71470e2b983/webmagic-samples%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fsamples%2FSinaBlogProcessor.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-samples%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fsamples%2FSinaBlogProcessor.java?ref=843e928c2c81ed5385f2f281a829a71470e2b983",
      "patch": "@@ -23,13 +23,14 @@ public class SinaBlogProcessor implements PageProcessor {\n \n     @Override\n     public void process(Page page) {\n+        //\u5217\u8868\u9875\n         if (page.getUrl().regex(URL_LIST).match()) {\n             page.addTargetRequests(page.getHtml().xpath(\"//div[@class=\\\"articleList\\\"]\").links().regex(URL_POST).all());\n             page.addTargetRequests(page.getHtml().links().regex(URL_LIST).all());\n+            //\u6587\u7ae0\u9875\n         } else {\n             page.putField(\"title\", page.getHtml().xpath(\"//div[@class='articalTitle']/h2\"));\n             page.putField(\"content\", page.getHtml().xpath(\"//div[@id='articlebody']//div[@class='articalContent']\"));\n-            page.putField(\"id\", page.getUrl().regex(\"http://blog\\\\.sina\\\\.com\\\\.cn/s/blog_(\\\\w+)\"));\n             page.putField(\"date\",\n                     page.getHtml().xpath(\"//div[@id='articlebody']//span[@class='time SG_txtc']\").regex(\"\\\\((.*)\\\\)\"));\n         }",
      "parent_sha": "be37d8b2165e6514f2a3ef2dc8d5a19498d84180"
    }
  },
  {
    "oid": "9bdb48b2d084072623ddec2236f2c3b1163ca4d5",
    "message": "version 0.6.0",
    "date": "2016-12-18T03:20:28Z",
    "url": "https://github.com/code4craft/webmagic/commit/9bdb48b2d084072623ddec2236f2c3b1163ca4d5",
    "details": {
      "sha": "2cb49b63a5f77c9c01970703f25ed5f1d6a1aef2",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/code4craft/webmagic/blob/9bdb48b2d084072623ddec2236f2c3b1163ca4d5/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/9bdb48b2d084072623ddec2236f2c3b1163ca4d5/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java?ref=9bdb48b2d084072623ddec2236f2c3b1163ca4d5",
      "patch": "@@ -154,7 +154,7 @@ protected HttpUriRequest getHttpUriRequest(Request request, Site site, Map<Strin\n                 .setConnectionRequestTimeout(site.getTimeOut())\n                 .setSocketTimeout(site.getTimeOut())\n                 .setConnectTimeout(site.getTimeOut())\n-                .setCookieSpec(CookieSpecs.DEFAULT);\n+                .setCookieSpec(CookieSpecs.BEST_MATCH);\n         if (proxy !=null) {\n \t\t\trequestConfigBuilder.setProxy(proxy);\n \t\t\trequest.putExtra(Request.PROXY, proxy);",
      "parent_sha": "eeb607fd0e24833a9021bc0a999473655a5141ea"
    }
  },
  {
    "oid": "18fefa0c0a1de123c77736211a30cc2c97a473e6",
    "message": "fix a spider init problem",
    "date": "2013-07-29T02:59:23Z",
    "url": "https://github.com/code4craft/webmagic/commit/18fefa0c0a1de123c77736211a30cc2c97a473e6",
    "details": {
      "sha": "2a8b78fb16fee0ea7e99e98ac46bcc1e0ab57485",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/Spider.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/code4craft/webmagic/blob/18fefa0c0a1de123c77736211a30cc2c97a473e6/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/18fefa0c0a1de123c77736211a30cc2c97a473e6/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java?ref=18fefa0c0a1de123c77736211a30cc2c97a473e6",
      "patch": "@@ -270,7 +270,9 @@ public Spider thread(int threadNum) {\n         if (threadNum <= 0) {\n             throw new IllegalArgumentException(\"threadNum should be more than one!\");\n         }\n-        downloader = new HttpClientDownloader(threadNum);\n+        if (downloader==null || downloader instanceof HttpClientDownloader){\n+            downloader = new HttpClientDownloader(threadNum);\n+        }\n         if (threadNum == 1) {\n             return this;\n         }",
      "parent_sha": "54904851eafcee7e8211b4ff19e5c583f0ce9880"
    }
  },
  {
    "oid": "eb3c78b9d81950dec8ca1af4acf9b9777a74b0fc",
    "message": "Update FileCacheQueueScheduler.java\n\n\u8fd9\u6837\u662f\u4e0d\u662f\u66f4\u4e25\u8c28? \u5426\u5219\u7684\u8bdd,\u4e2d\u65ad\u540e\u518d\u6b21\u542f\u52a8\u65f6, (\u7b2c\u4e00\u4e2a)\u5165\u53e3\u5730\u5740\u4ecd\u4f1a\u88ab\u6dfb\u52a0\u5230\u961f\u5217\u53ca\u5199\u5165\u5230\u6587\u4ef6\u4e2d. \r\n\u4f46\u662f\u73b0\u5728\u6709\u53e6\u5916\u4e00\u4e2a\u95ee\u9898\u5b58\u5728,\u5982\u7b2c\u4e00\u904d\u5168\u90e8\u6293\u53d6\u5b8c\u6bd5\u4e86(\u901a\u8fc7spider.getStatus==Stopped\u5224\u65ad),\u4f11\u772024\u5c0f\u65f6,\u518d\u6765\u6293\u53d6(\u901a\u8fc7\u9012\u5f52\u8c03\u7528\u6293\u53d6\u65b9\u6cd5).\r\n\u8fd9\u65f6\u4e0d\u540c\u4e8e\u4e2d\u65ad\u540e\u518d\u542f\u52a8,lineReader==cursor, \u4e8e\u662f\u521d\u59cb\u5316\u65f6\u961f\u5217\u4e3a\u7a7a,\u5165\u53e3\u5730\u5740\u53c8\u5728urls\u96c6\u5408\u4e2d\u4e86, \u6545\u5bfc\u81f4\u6293\u53d6\u7ebf\u7a0b\u9a6c\u4e0a\u5c31\u7ed3\u675f\u4e86.\u8fd9\u6837\u7684\u8bdd\u5c31\u6ca1\u6709\u529e\u6cd5\u53bb\u6293\u53d6\u7f51\u7ad9\u4e0a\u7684\u65b0\u589e\u5185\u5bb9\u4e86.\r\n\u89e3\u51b3\u65b9\u6848\u4e00:\r\n\u5224\u65ad\u6293\u53d6\u5b8c\u6bd5\u540e,\u7d27\u63a5\u7740\u8986\u76d6cursor\u6587\u4ef6,\u7b2c\u4e8c\u6b21\u6765\u6293\u53d6\u65f6,curosr\u4e3a0, \u4e8e\u662f\u5c06urls.txt\u4e2d\u7684\u6240\u6709url\u5747\u653e\u5165\u961f\u5217\u4e2d\u4e86, \u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e9burl\u6765\u53d1\u73b0\u65b0\u589eurl.\r\n\u65b9\u6848\u4e8c:\r\n\u5bf9\u65b9\u6848\u4e00\u8fdb\u884c\u4f18\u5316,\u65b9\u6848\u4e00\u867d\u7136\u53ef\u4ee5\u6ee1\u8db3\u4e1a\u52a1\u8981\u6c42,\u4f46\u4f1a\u505a\u5f88\u591a\u65e0\u7528\u529f,\u5982\u4ecd\u4f1a\u5bf9\u6240\u6709\u65e7target url\u8fdb\u884c\u4e0b\u8f7d,\u62bd\u53d6,\u6301\u4e45\u5316\u7b49\u64cd\u4f5c.\u800c\u65b0\u589e\u7684\u5185\u5bb9\u4e00\u822c\u90fd\u4f1a\u5728HelpUrl\u4e2d, \u6bd4\u5982\u67d0\u4e00\u9875\u591a\u4e86\u4e00\u4e2a\u65b0\u5e16\u5b50,\u6216\u8005\u591a\u4e86\u51e0\u9875\u5185\u5bb9. \u6545\u7b2c\u4e8c\u904d\u53ca\u4ee5\u540e\u6765\u722c\u53d6\u65f6\u53ef\u4ee5\u4ec5\u5c06HelpUrl\u653e\u5165\u961f\u5217\u4e2d. \r\n\r\n\u5e0c\u671b\u80fd\u7ed9\u4e88\u53cd\u9988,\u6211\u4e0a\u8ff0\u7406\u89e3\u5bf9\u4e0d\u5bf9, \u6709\u4ec0\u4e48\u6ca1\u6709\u8003\u8651\u5230\u7684\u60c5\u51b5\u6216\u8005\u6709\u66f4\u7b80\u5355\u7684\u65b9\u6848?\u8c22\u8c22!",
    "date": "2014-09-14T08:20:03Z",
    "url": "https://github.com/code4craft/webmagic/commit/eb3c78b9d81950dec8ca1af4acf9b9777a74b0fc",
    "details": {
      "sha": "791e89bce44faa9b0398b89ddaa7532c154f556e",
      "filename": "webmagic-extension/src/main/java/us/codecraft/webmagic/scheduler/FileCacheQueueScheduler.java",
      "status": "modified",
      "additions": 7,
      "deletions": 3,
      "changes": 10,
      "blob_url": "https://github.com/code4craft/webmagic/blob/eb3c78b9d81950dec8ca1af4acf9b9777a74b0fc/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FFileCacheQueueScheduler.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/eb3c78b9d81950dec8ca1af4acf9b9777a74b0fc/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FFileCacheQueueScheduler.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FFileCacheQueueScheduler.java?ref=eb3c78b9d81950dec8ca1af4acf9b9777a74b0fc",
      "patch": "@@ -49,6 +49,7 @@ public FileCacheQueueScheduler(String filePath) {\n             filePath += \"/\";\n         }\n         this.filePath = filePath;\n+        initDuplicateRemover();\n     }\n \n     private void flush() {\n@@ -74,6 +75,9 @@ private void initDuplicateRemover() {\n                 new DuplicateRemover() {\n                     @Override\n                     public boolean isDuplicate(Request request, Task task) {\n+                        if (!inited.get()) {\n+                            init(task);\n+                        }\n                         return !urls.add(request.getUrl());\n                     }\n \n@@ -113,7 +117,7 @@ private void readFile() {\n             urls = new LinkedHashSet<String>();\n             readCursorFile();\n             readUrlFile();\n-            initDuplicateRemover();\n+            // initDuplicateRemover();\n         } catch (FileNotFoundException e) {\n             //init\n             logger.info(\"init cache file \" + getFileName(fileUrlAllName));\n@@ -164,9 +168,9 @@ private String getFileName(String filename) {\n \n     @Override\n     protected void pushWhenNoDuplicate(Request request, Task task) {\n-        if (!inited.get()) {\n+      /*  if (!inited.get()) {\n             init(task);\n-        }\n+        }*/\n         queue.add(request);\n         fileUrlWriter.println(request.getUrl());\n     }",
      "parent_sha": "3a9c1d30026f893c07f37790ed105f79c094af98"
    }
  },
  {
    "oid": "407fbb613080102e3658727955d8731e22de3722",
    "message": "refactor logger#445",
    "date": "2017-01-21T03:05:54Z",
    "url": "https://github.com/code4craft/webmagic/commit/407fbb613080102e3658727955d8731e22de3722",
    "details": {
      "sha": "1a0b2bdb70a4ccaaf1d42ce1a84ceed59d1f8221",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientGenerator.java",
      "status": "modified",
      "additions": 15,
      "deletions": 23,
      "changes": 38,
      "blob_url": "https://github.com/code4craft/webmagic/blob/407fbb613080102e3658727955d8731e22de3722/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientGenerator.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/407fbb613080102e3658727955d8731e22de3722/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientGenerator.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientGenerator.java?ref=407fbb613080102e3658727955d8731e22de3722",
      "patch": "@@ -1,18 +1,6 @@\n package us.codecraft.webmagic.downloader;\n \n-import java.io.IOException;\n-import java.security.KeyManagementException;\n-import java.security.NoSuchAlgorithmException;\n-import java.security.cert.CertificateException;\n-import java.security.cert.X509Certificate;\n-import java.util.Map;\n-\n-import javax.net.ssl.SSLContext;\n-import javax.net.ssl.TrustManager;\n-import javax.net.ssl.X509TrustManager;\n-\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.commons.lang3.exception.ExceptionUtils;\n import org.apache.http.HttpException;\n import org.apache.http.HttpRequest;\n import org.apache.http.HttpRequestInterceptor;\n@@ -26,21 +14,25 @@\n import org.apache.http.conn.socket.ConnectionSocketFactory;\n import org.apache.http.conn.socket.PlainConnectionSocketFactory;\n import org.apache.http.conn.ssl.SSLConnectionSocketFactory;\n-import org.apache.http.impl.client.BasicCookieStore;\n-import org.apache.http.impl.client.BasicCredentialsProvider;\n-import org.apache.http.impl.client.CloseableHttpClient;\n-import org.apache.http.impl.client.DefaultHttpRequestRetryHandler;\n-import org.apache.http.impl.client.HttpClientBuilder;\n-import org.apache.http.impl.client.HttpClients;\n+import org.apache.http.impl.client.*;\n import org.apache.http.impl.conn.PoolingHttpClientConnectionManager;\n import org.apache.http.impl.cookie.BasicClientCookie;\n import org.apache.http.protocol.HttpContext;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import us.codecraft.webmagic.Site;\n import us.codecraft.webmagic.proxy.Proxy;\n \n+import javax.net.ssl.SSLContext;\n+import javax.net.ssl.TrustManager;\n+import javax.net.ssl.X509TrustManager;\n+import java.io.IOException;\n+import java.security.KeyManagementException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.cert.CertificateException;\n+import java.security.cert.X509Certificate;\n+import java.util.Map;\n+\n /**\n  * @author code4crafter@gmail.com <br>\n  * @since 0.4.0\n@@ -64,10 +56,10 @@ private SSLConnectionSocketFactory buildSSLConnectionSocketFactory() {\n \t\ttry {\n \t\t\treturn new SSLConnectionSocketFactory(createIgnoreVerifySSL()); // \u4f18\u5148\u7ed5\u8fc7\u5b89\u5168\u8bc1\u4e66\n \t\t} catch (KeyManagementException e) {\n-\t\t\tlogger.error(ExceptionUtils.getStackTrace(e));\n-\t\t} catch (NoSuchAlgorithmException e) {\n-\t\t\tlogger.error(ExceptionUtils.getStackTrace(e));\n-\t\t}\n+            logger.error(\"ssl connection fail\", e);\n+        } catch (NoSuchAlgorithmException e) {\n+            logger.error(\"ssl connection fail\", e);\n+        }\n \t\treturn SSLConnectionSocketFactory.getSocketFactory();\n \t}\n ",
      "parent_sha": "f29a10472f00bb607c49d8fb6bdb1ceb12688d1f"
    }
  },
  {
    "oid": "692de76f869312dc22b479b81b7f0f8b809f1c2f",
    "message": "fix issue #21 charset detect error",
    "date": "2013-09-04T07:27:51Z",
    "url": "https://github.com/code4craft/webmagic/commit/692de76f869312dc22b479b81b7f0f8b809f1c2f",
    "details": {
      "sha": "4e1140b42e662836f35b546f894c8bbd26413223",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/utils/UrlUtils.java",
      "status": "modified",
      "additions": 7,
      "deletions": 4,
      "changes": 11,
      "blob_url": "https://github.com/code4craft/webmagic/blob/692de76f869312dc22b479b81b7f0f8b809f1c2f/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Futils%2FUrlUtils.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/692de76f869312dc22b479b81b7f0f8b809f1c2f/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Futils%2FUrlUtils.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Futils%2FUrlUtils.java?ref=692de76f869312dc22b479b81b7f0f8b809f1c2f",
      "patch": "@@ -2,6 +2,7 @@\n \n import org.apache.commons.lang3.StringUtils;\n \n+import java.nio.charset.Charset;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n@@ -98,15 +99,17 @@ public static String fixAllRelativeHrefs(String html, String url) {\n         return stringBuilder.toString();\n     }\n \n-    private static final Pattern patternForCharset = Pattern.compile(\"charset=([^\\\\s;]*)\");\n+    private static final Pattern patternForCharset = Pattern.compile(\"charset\\\\s*=\\\\s*['\\\"]*([^\\\\s;'\\\"]*)\");\n \n     public static String getCharset(String contentType) {\n         Matcher matcher = patternForCharset.matcher(contentType);\n         if (matcher.find()) {\n-            return matcher.group(1);\n-        } else {\n-            return null;\n+            String charset = matcher.group(1);\n+            if (Charset.isSupported(charset)) {\n+                return charset;\n+            }\n         }\n+        return null;\n     }\n \n }",
      "parent_sha": "e1b6b54097a6657cfe1c43bb99ba8b47518c455f"
    }
  },
  {
    "oid": "3a666fcebf40516a116ca6b290e255648af4e186",
    "message": "add sample of 36kr #110",
    "date": "2014-04-25T10:36:07Z",
    "url": "https://github.com/code4craft/webmagic/commit/3a666fcebf40516a116ca6b290e255648af4e186",
    "details": {
      "sha": "a9e3f3a0da8dca257ed76f6d86645f3512090d6e",
      "filename": "webmagic-samples/src/main/java/us/codecraft/webmagic/model/samples/Kr36NewsModel.java",
      "status": "modified",
      "additions": 11,
      "deletions": 3,
      "changes": 14,
      "blob_url": "https://github.com/code4craft/webmagic/blob/3a666fcebf40516a116ca6b290e255648af4e186/webmagic-samples%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fmodel%2Fsamples%2FKr36NewsModel.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/3a666fcebf40516a116ca6b290e255648af4e186/webmagic-samples%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fmodel%2Fsamples%2FKr36NewsModel.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-samples%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fmodel%2Fsamples%2FKr36NewsModel.java?ref=3a666fcebf40516a116ca6b290e255648af4e186",
      "patch": "@@ -1,14 +1,19 @@\n package us.codecraft.webmagic.model.samples;\n \n import us.codecraft.webmagic.Site;\n+import us.codecraft.webmagic.Spider;\n import us.codecraft.webmagic.Task;\n import us.codecraft.webmagic.model.OOSpider;\n+import us.codecraft.webmagic.monitor.SpiderMonitor;\n import us.codecraft.webmagic.pipeline.PageModelPipeline;\n import us.codecraft.webmagic.model.annotation.ExtractBy;\n import us.codecraft.webmagic.model.annotation.ExtractByUrl;\n import us.codecraft.webmagic.model.annotation.HelpUrl;\n import us.codecraft.webmagic.model.annotation.TargetUrl;\n \n+import javax.management.JMException;\n+import java.io.IOException;\n+\n /**\n  * @author code4crafter@gmail.com <br>\n  */\n@@ -25,14 +30,17 @@ public class Kr36NewsModel {\n     @ExtractByUrl\n     private String url;\n \n-    public static void main(String[] args) {\n+    public static void main(String[] args) throws IOException, JMException {\n         //Just for benchmark\n-        OOSpider.create(Site.me().addStartUrl(\"http://www.36kr.com/\").setSleepTime(0), new PageModelPipeline() {\n+        Spider thread = OOSpider.create(Site.me().addStartUrl(\"http://www.36kr.com/\").setSleepTime(0), new PageModelPipeline() {\n             @Override\n             public void process(Object o, Task task) {\n \n             }\n-        },Kr36NewsModel.class).thread(20).run();\n+        }, Kr36NewsModel.class).thread(20);\n+        thread.run();\n+        SpiderMonitor spiderMonitor = SpiderMonitor.create();\n+        spiderMonitor.register(thread).jmxStart();\n     }\n \n     public String getTitle() {",
      "parent_sha": "b1258f4f160a84d080fc281568bfba01d3279044"
    }
  },
  {
    "oid": "b5f2498c998367a580d7cb96da4e2879177372fc",
    "message": "remove nativeobject for rhino",
    "date": "2013-11-12T03:55:56Z",
    "url": "https://github.com/code4craft/webmagic/commit/b5f2498c998367a580d7cb96da4e2879177372fc",
    "details": {
      "sha": "b53c42d3257eb5335c1da7d86b69dc281116f1c9",
      "filename": "webmagic-scripts/src/main/java/us/codecraft/webmagic/scripts/ScriptProcessor.java",
      "status": "modified",
      "additions": 13,
      "deletions": 15,
      "changes": 28,
      "blob_url": "https://github.com/code4craft/webmagic/blob/b5f2498c998367a580d7cb96da4e2879177372fc/webmagic-scripts%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscripts%2FScriptProcessor.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/b5f2498c998367a580d7cb96da4e2879177372fc/webmagic-scripts%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscripts%2FScriptProcessor.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-scripts%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscripts%2FScriptProcessor.java?ref=b5f2498c998367a580d7cb96da4e2879177372fc",
      "patch": "@@ -1,7 +1,6 @@\n package us.codecraft.webmagic.scripts;\n \n import org.apache.commons.io.IOUtils;\n-import sun.org.mozilla.javascript.internal.NativeObject;\n import us.codecraft.webmagic.Page;\n import us.codecraft.webmagic.Site;\n import us.codecraft.webmagic.processor.PageProcessor;\n@@ -12,7 +11,6 @@\n import javax.script.ScriptException;\n import java.io.IOException;\n import java.io.InputStream;\n-import java.util.Map;\n \n /**\n  * @author code4crafter@gmail.com\n@@ -53,19 +51,19 @@ public void process(Page page) {\n         context.setAttribute(\"config\", site, ScriptContext.ENGINE_SCOPE);\n         try {\n             engine.eval(defines + \"\\n\" + script, context);\n-            switch (language) {\n-                case JavaScript:\n-                    NativeObject o = (NativeObject) engine.get(\"result\");\n-                    if (o != null) {\n-                        for (Map.Entry<Object, Object> objectObjectEntry : o.entrySet()) {\n-                            page.getResultItems().put(objectObjectEntry.getKey().toString(), objectObjectEntry.getValue());\n-                        }\n-                    }\n-                    break;\n-                case JRuby:\n-                    Object o1 = engine.get(\"result\");\n-                    break;\n-            }\n+//            switch (language) {\n+//                case JavaScript:\n+//                    NativeObject o = (NativeObject) engine.get(\"result\");\n+//                    if (o != null) {\n+//                        for (Map.Entry<Object, Object> objectObjectEntry : o.entrySet()) {\n+//                            page.getResultItems().put(objectObjectEntry.getKey().toString(), objectObjectEntry.getValue());\n+//                        }\n+//                    }\n+//                    break;\n+//                case JRuby:\n+//                    Object o1 = engine.get(\"result\");\n+//                    break;\n+//            }\n         } catch (ScriptException e) {\n             e.printStackTrace();\n         }",
      "parent_sha": "6e6b3cc896e38b28a4a4d7c0d22fecce433f3c66"
    }
  },
  {
    "oid": "956d5cb3c812a68a29ff3a8daa531507dcd3bdc2",
    "message": "docs",
    "date": "2013-06-18T14:39:37Z",
    "url": "https://github.com/code4craft/webmagic/commit/956d5cb3c812a68a29ff3a8daa531507dcd3bdc2",
    "details": {
      "sha": "5bf5f26edde00f4f8e6d0e9e9456656f08c8ebb2",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/Page.java",
      "status": "modified",
      "additions": 37,
      "deletions": 6,
      "changes": 43,
      "blob_url": "https://github.com/code4craft/webmagic/blob/956d5cb3c812a68a29ff3a8daa531507dcd3bdc2/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FPage.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/956d5cb3c812a68a29ff3a8daa531507dcd3bdc2/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FPage.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FPage.java?ref=956d5cb3c812a68a29ff3a8daa531507dcd3bdc2",
      "patch": "@@ -16,6 +16,8 @@\n  *     \u4e3b\u8981\u65b9\u6cd5\uff1a\n  *     {@link #getUrl()} \u83b7\u53d6\u9875\u9762\u7684Url\n  *     {@link #getHtml()}  \u83b7\u53d6\u9875\u9762\u7684html\u5185\u5bb9\n+ *     {@link #putField(String, us.codecraft.webmagic.selector.Selectable)} \u4fdd\u5b58\u62bd\u53d6\u7684\u7ed3\u679c\n+ *     {@link #getFields()} \u83b7\u53d6\u62bd\u53d6\u7684\u7ed3\u679c\uff0c\u5728 {@link us.codecraft.webmagic.pipeline.Pipeline} \u4e2d\u8c03\u7528\n  *     {@link #addTargetRequests(java.util.List)} {@link #addTargetRequest(String)} \u6dfb\u52a0\u5f85\u6293\u53d6\u7684\u94fe\u63a5\n  *\n  * </pre>\n@@ -33,25 +35,30 @@ public class Page {\n \n     private List<Request> targetRequests = new ArrayList<Request>();\n \n-    public void process() {\n-        fields.put(\"title\", html.x(\"\").r(\"\"));\n-    }\n-\n     public Page() {\n     }\n \n     /**\n-     *\n-     * @return fields\n+     * \u83b7\u53d6\u62bd\u53d6\u7684\u7ed3\u679c\uff0c\u5728{@link us.codecraft.webmagic.pipeline.Pipeline} \u4e2d\u8c03\u7528\n+     * @return fields \u62bd\u53d6\u7684\u7ed3\u679c\n      */\n     public Map<String, Selectable> getFields() {\n         return fields;\n     }\n \n+    /**\n+     * \u4fdd\u5b58\u62bd\u53d6\u7684\u7ed3\u679c\n+     * @param key \u7ed3\u679c\u7684key\n+     * @param field \u7ed3\u679c\u7684value\n+     */\n     public void putField(String key, Selectable field) {\n         fields.put(key, field);\n     }\n \n+    /**\n+     * \u83b7\u53d6\u9875\u9762\u7684html\u5185\u5bb9\n+     * @return html \u9875\u9762\u7684html\u5185\u5bb9\n+     */\n     public Selectable getHtml() {\n         return html;\n     }\n@@ -64,6 +71,10 @@ public List<Request> getTargetRequests() {\n         return targetRequests;\n     }\n \n+    /**\n+     * \u6dfb\u52a0\u5f85\u6293\u53d6\u7684\u94fe\u63a5\n+     * @param requests \u5f85\u6293\u53d6\u7684\u94fe\u63a5\n+     */\n     public void addTargetRequests(List<String> requests) {\n         synchronized (targetRequests) {\n             for (String s : requests) {\n@@ -76,6 +87,10 @@ public void addTargetRequests(List<String> requests) {\n         }\n     }\n \n+    /**\n+     * \u6dfb\u52a0\u5f85\u6293\u53d6\u7684\u94fe\u63a5\n+     * @param requestString \u5f85\u6293\u53d6\u7684\u94fe\u63a5\n+     */\n     public void addTargetRequest(String requestString) {\n         if (StringUtils.isBlank(requestString) || requestString.equals(\"#\")) {\n             return;\n@@ -86,20 +101,36 @@ public void addTargetRequest(String requestString) {\n         }\n     }\n \n+    /**\n+     * \u6dfb\u52a0\u5f85\u6293\u53d6\u7684\u9875\u9762\uff0c\u5728\u9700\u8981\u4f20\u9012\u9644\u52a0\u4fe1\u606f\u65f6\u4f7f\u7528\n+     * @param request \u5f85\u6293\u53d6\u7684\u9875\u9762\n+     */\n     public void addTargetRequest(Request request) {\n         synchronized (targetRequests) {\n             targetRequests.add(request);\n         }\n     }\n \n+    /**\n+     * \u83b7\u53d6\u9875\u9762\u7684Url\n+     * @return url \u5f53\u524d\u9875\u9762\u7684url\uff0c\u53ef\u7528\u4e8e\u62bd\u53d6\n+     */\n     public Selectable getUrl() {\n         return url;\n     }\n \n+    /**\n+     * \u8bbe\u7f6eurl\n+     * @param url\n+     */\n     public void setUrl(Selectable url) {\n         this.url = url;\n     }\n \n+    /**\n+     * \u83b7\u53d6\u6293\u53d6\u8bf7\u6c42\n+     * @return request \u6293\u53d6\u8bf7\u6c42\n+     */\n     public Request getRequest() {\n         return request;\n     }",
      "parent_sha": "fb0797b65c2e78b1cfe072685cdee873ff931746"
    }
  },
  {
    "oid": "4e6e946dd7860f0e6291c3dd96ffd699c174c983",
    "message": "more friendly exception message in PlainText #144",
    "date": "2014-08-13T02:02:16Z",
    "url": "https://github.com/code4craft/webmagic/commit/4e6e946dd7860f0e6291c3dd96ffd699c174c983",
    "details": {
      "sha": "c78f6791b1e0cec64ede277c78dedeb3b5f05645",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/selector/PlainText.java",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/code4craft/webmagic/blob/4e6e946dd7860f0e6291c3dd96ffd699c174c983/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FPlainText.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/4e6e946dd7860f0e6291c3dd96ffd699c174c983/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FPlainText.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FPlainText.java?ref=4e6e946dd7860f0e6291c3dd96ffd699c174c983",
      "patch": "@@ -29,27 +29,27 @@ public static PlainText create(String text) {\n \n     @Override\n     public Selectable xpath(String xpath) {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(\"XPath can not apply to plain text. Please check whether you use a previous xpath with attribute select (/@href etc).\");\n     }\n \n     @Override\n     public Selectable $(String selector) {\n-        throw new UnsupportedOperationException();\n+\t\tthrow new UnsupportedOperationException(\"$ can not apply to plain text. Please check whether you use a previous xpath with attribute select (/@href etc).\");\n     }\n \n     @Override\n     public Selectable $(String selector, String attrName) {\n-        throw new UnsupportedOperationException();\n+\t\tthrow new UnsupportedOperationException(\"$ can not apply to plain text. Please check whether you use a previous xpath with attribute select (/@href etc).\");\n     }\n \n     @Override\n     public Selectable smartContent() {\n-        throw new UnsupportedOperationException();\n+\t\tthrow new UnsupportedOperationException(\"Smart content can not apply to plain text. Please check whether you use a previous xpath with attribute select (/@href etc).\");\n     }\n \n     @Override\n     public Selectable links() {\n-        throw new UnsupportedOperationException();\n+\t\tthrow new UnsupportedOperationException(\"Links can not apply to plain text. Please check whether you use a previous xpath with attribute select (/@href etc).\");\n     }\n \n     @Override",
      "parent_sha": "ebb931e0bf4b93ac55e7986864f06c0d1f5d925f"
    }
  },
  {
    "oid": "075b98291bbc920fb3d49957778e633bb9a3d205",
    "message": "Return spider in setEmptySleepTime itself for chainning.",
    "date": "2022-11-12T03:06:08Z",
    "url": "https://github.com/code4craft/webmagic/commit/075b98291bbc920fb3d49957778e633bb9a3d205",
    "details": {
      "sha": "9f9201ee3de5099674816a85f7968224d25db2bc",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/Spider.java",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/code4craft/webmagic/blob/075b98291bbc920fb3d49957778e633bb9a3d205/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/075b98291bbc920fb3d49957778e633bb9a3d205/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java?ref=075b98291bbc920fb3d49957778e633bb9a3d205",
      "patch": "@@ -333,9 +333,10 @@ public void run() {\n                     }\n                 } else {\n                     // wait until new url added\uff0c\n-                    if (waitNewUrl())\n-                        //if interrupted\n+                    if (waitNewUrl()) {\n+\t\t\t\t\t\t//if interrupted\n                         break;\n+\t\t\t\t\t}\n                     continue;\n                 }\n             }\n@@ -805,11 +806,13 @@ public Scheduler getScheduler() {\n      * Set wait time when no url is polled.<br><br>\n      *\n      * @param emptySleepTime In MILLISECONDS.\n+     * @return this\n      */\n-    public void setEmptySleepTime(long emptySleepTime) {\n+    public Spider setEmptySleepTime(long emptySleepTime) {\n         if(emptySleepTime<=0){\n             throw new IllegalArgumentException(\"emptySleepTime should be more than zero!\");\n         }\n         this.emptySleepTime = emptySleepTime;\n+        return this;\n     }\n }",
      "parent_sha": "ac912e8f1fade5be3b0d8df521819f4b01ec6fba"
    }
  },
  {
    "oid": "3a796b9413b1166bd9fa3181e5f4f6f259d6393c",
    "message": "remove duplicate code #421",
    "date": "2017-02-25T04:01:12Z",
    "url": "https://github.com/code4craft/webmagic/commit/3a796b9413b1166bd9fa3181e5f4f6f259d6393c",
    "details": {
      "sha": "9045ad86a23477bb36f66de41a10969647a6bb7a",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/Spider.java",
      "status": "modified",
      "additions": 5,
      "deletions": 6,
      "changes": 11,
      "blob_url": "https://github.com/code4craft/webmagic/blob/3a796b9413b1166bd9fa3181e5f4f6f259d6393c/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/3a796b9413b1166bd9fa3181e5f4f6f259d6393c/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java?ref=3a796b9413b1166bd9fa3181e5f4f6f259d6393c",
      "patch": "@@ -305,24 +305,23 @@ public void run() {\n         initComponent();\n         logger.info(\"Spider \" + getUUID() + \" started!\");\n         while (!Thread.currentThread().isInterrupted() && stat.get() == STAT_RUNNING) {\n-            Request request = scheduler.poll(this);\n+            final Request request = scheduler.poll(this);\n             if (request == null) {\n                 if (threadPool.getThreadAlive() == 0 && exitWhenComplete) {\n                     break;\n                 }\n                 // wait until new url added\n                 waitNewUrl();\n             } else {\n-                final Request requestFinal = request;\n                 threadPool.execute(new Runnable() {\n                     @Override\n                     public void run() {\n                         try {\n-                            processRequest(requestFinal);\n-                            onSuccess(requestFinal);\n+                            processRequest(request);\n+                            onSuccess(request);\n                         } catch (Exception e) {\n-                            onError(requestFinal);\n-                            logger.error(\"process request \" + requestFinal + \" error\", e);\n+                            onError(request);\n+                            logger.error(\"process request \" + request + \" error\", e);\n                         } finally {\n                             pageCount.incrementAndGet();\n                             signalNewUrl();",
      "parent_sha": "42f1018010d858dc3ad77bb960c6de1d044b3df8"
    }
  },
  {
    "oid": "8f942d6fe2db876a6ef3a9cd8cef9816570a1544",
    "message": "#419 \u4fee\u590d\u6293\u53d6https\u94fe\u63a5\u7ebf\u7a0b\u65e0\u6cd5\u7ed3\u675f\u5bfc\u81f4\u8fdb\u7a0b\u4e00\u76f4\u8fd0\u884c\u7684\u95ee\u9898",
    "date": "2016-12-17T22:56:01Z",
    "url": "https://github.com/code4craft/webmagic/commit/8f942d6fe2db876a6ef3a9cd8cef9816570a1544",
    "details": {
      "sha": "80a7e29ec674939e67bc3f0b7e4dbf1770fc0492",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientGenerator.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/code4craft/webmagic/blob/8f942d6fe2db876a6ef3a9cd8cef9816570a1544/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientGenerator.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/8f942d6fe2db876a6ef3a9cd8cef9816570a1544/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientGenerator.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientGenerator.java?ref=8f942d6fe2db876a6ef3a9cd8cef9816570a1544",
      "patch": "@@ -91,8 +91,9 @@ public void process(\n         }\n \n \n-        SocketConfig socketConfig = SocketConfig.custom().setSoKeepAlive(true).setTcpNoDelay(true).build();\n+        SocketConfig socketConfig = SocketConfig.custom().setSoTimeout(site.getTimeOut()).setSoKeepAlive(true).setTcpNoDelay(true).build();\n         httpClientBuilder.setDefaultSocketConfig(socketConfig);\n+        connectionManager.setDefaultSocketConfig(socketConfig);\n         if (site != null) {\n             httpClientBuilder.setRetryHandler(new DefaultHttpRequestRetryHandler(site.getRetryTimes(), true));\n         }",
      "parent_sha": "1987cd3ae1a5d6198b9d0c675bb7a1d50c4ef41e"
    }
  },
  {
    "oid": "c1e7207869417a4f35bbabaa0216f703e78e07e5",
    "message": "add FileCacheQueueScheduler support for cycleRetryTimes",
    "date": "2014-04-07T03:00:09Z",
    "url": "https://github.com/code4craft/webmagic/commit/c1e7207869417a4f35bbabaa0216f703e78e07e5",
    "details": {
      "sha": "79f3b8b951f6014a44b5c6f4c1a332924d171d5c",
      "filename": "webmagic-extension/src/main/java/us/codecraft/webmagic/scheduler/FileCacheQueueScheduler.java",
      "status": "modified",
      "additions": 4,
      "deletions": 8,
      "changes": 12,
      "blob_url": "https://github.com/code4craft/webmagic/blob/c1e7207869417a4f35bbabaa0216f703e78e07e5/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FFileCacheQueueScheduler.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/c1e7207869417a4f35bbabaa0216f703e78e07e5/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FFileCacheQueueScheduler.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FFileCacheQueueScheduler.java?ref=c1e7207869417a4f35bbabaa0216f703e78e07e5",
      "patch": "@@ -23,7 +23,7 @@\n  * @author code4crafter@gmail.com <br>\n  * @since 0.2.0\n  */\n-public class FileCacheQueueScheduler implements Scheduler {\n+public class FileCacheQueueScheduler extends LocalDuplicatedRemovedScheduler {\n \n     private Logger logger = LoggerFactory.getLogger(getClass());\n \n@@ -145,16 +145,12 @@ private String getFileName(String filename) {\n     }\n \n     @Override\n-    public synchronized void push(Request request, Task task) {\n+    protected void pushWhenNoDuplicate(Request request, Task task) {\n         if (!inited.get()) {\n             init(task);\n         }\n-        logger.debug(\"push to queue {}\" , request.getUrl());\n-        if (urls.add(request.getUrl())) {\n-            queue.add(request);\n-            fileUrlWriter.println(request.getUrl());\n-        }\n-\n+        queue.add(request);\n+        fileUrlWriter.println(request.getUrl());\n     }\n \n     @Override",
      "parent_sha": "969ad1766b51d9e7ad63a3862de3fde8e159a0d4"
    }
  },
  {
    "oid": "eda3be9432663951f42a96bf790987bb7dd6c530",
    "message": "Fix log format.",
    "date": "2023-11-06T14:44:53Z",
    "url": "https://github.com/code4craft/webmagic/commit/eda3be9432663951f42a96bf790987bb7dd6c530",
    "details": {
      "sha": "92c770236dba9fc5fdd2dffaf09a81bcdbeb1ce3",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/code4craft/webmagic/blob/eda3be9432663951f42a96bf790987bb7dd6c530/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/eda3be9432663951f42a96bf790987bb7dd6c530/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java?ref=eda3be9432663951f42a96bf790987bb7dd6c530",
      "patch": "@@ -85,13 +85,13 @@ public Page download(Request request, Task task) {\n             page = handleResponse(request, request.getCharset() != null ? request.getCharset() : task.getSite().getCharset(), httpResponse, task);\n \n             onSuccess(request, task);\n-            logger.info(\"downloading page success {}\", request.getUrl());\n+            logger.info(\"download page success {}\", request.getUrl());\n \n             return page;\n         } catch (IOException e) {\n \n             onError(request, task, e);\n-            logger.info(\"download page {} error\", request.getUrl(), e);\n+            logger.info(\"download page error {}\", request.getUrl(), e);\n \n             return page;\n         } finally {",
      "parent_sha": "73f60f809e30d56dec130811407814595a09a103"
    }
  },
  {
    "oid": "a722f9bb66a58bbd9f16d2bc231e2fee2fce6221",
    "message": "\u4fee\u590d\u7531\u4e8eFileCacheQueueScheduler\u4e2dfileCursor \u6587\u4ef6\u518d\u6b21\u6253\u5f00\u65f6\u6ca1\u6709\u521d\u59cb\u5316\u629b\u51faNullPointerException\u7684\u9519\u8bef",
    "date": "2014-01-08T13:24:58Z",
    "url": "https://github.com/code4craft/webmagic/commit/a722f9bb66a58bbd9f16d2bc231e2fee2fce6221",
    "details": {
      "sha": "3aa23c758195eece865fa9d15e916d70f55c770c",
      "filename": "webmagic-extension/src/main/java/us/codecraft/webmagic/scheduler/FileCacheQueueScheduler.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/code4craft/webmagic/blob/a722f9bb66a58bbd9f16d2bc231e2fee2fce6221/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FFileCacheQueueScheduler.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/a722f9bb66a58bbd9f16d2bc231e2fee2fce6221/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FFileCacheQueueScheduler.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FFileCacheQueueScheduler.java?ref=a722f9bb66a58bbd9f16d2bc231e2fee2fce6221",
      "patch": "@@ -126,7 +126,7 @@ private void readUrlFile() throws IOException {\n     private void readCursorFile() throws IOException {\n         BufferedReader fileCursorReader = null;\n         try {\n-            new BufferedReader(new FileReader(getFileName(fileCursor)));\n+        \tfileCursorReader = new BufferedReader(new FileReader(getFileName(fileCursor)));\n             String line;\n             //read the last number\n             while ((line = fileCursorReader.readLine()) != null) {",
      "parent_sha": "090827f124af3a8c385e040495cfc72dbfa90163"
    }
  },
  {
    "oid": "29c6a03f6019265fe40bc63b935a9a6a5c006f05",
    "message": "fix",
    "date": "2013-08-02T00:22:28Z",
    "url": "https://github.com/code4craft/webmagic/commit/29c6a03f6019265fe40bc63b935a9a6a5c006f05",
    "details": {
      "sha": "a927054501caaece231e5a3a3e0bdf38a6d1b38e",
      "filename": "webmagic-samples/src/main/java/us/codecraft/webmagic/annotation/samples/IteyeBlog.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/code4craft/webmagic/blob/29c6a03f6019265fe40bc63b935a9a6a5c006f05/webmagic-samples%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fannotation%2Fsamples%2FIteyeBlog.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/29c6a03f6019265fe40bc63b935a9a6a5c006f05/webmagic-samples%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fannotation%2Fsamples%2FIteyeBlog.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-samples%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fannotation%2Fsamples%2FIteyeBlog.java?ref=29c6a03f6019265fe40bc63b935a9a6a5c006f05",
      "patch": "@@ -14,7 +14,7 @@\n public class IteyeBlog implements Blog{\n \n     @ExtractBy(\"//title\")\n-    private int title;\n+    private String title;\n \n     @ExtractBy(value = \"div#blog_content\",type = ExtractBy.Type.Css)\n     private String content;",
      "parent_sha": "516ff3310d3cdf77d79f2508e53b84489f7fac64"
    }
  },
  {
    "oid": "42f1018010d858dc3ad77bb960c6de1d044b3df8",
    "message": "remove messy code",
    "date": "2017-02-21T06:08:05Z",
    "url": "https://github.com/code4craft/webmagic/commit/42f1018010d858dc3ad77bb960c6de1d044b3df8",
    "details": {
      "sha": "e57d5cd0e9571e1b1d3afd6913c47ada72a5e29b",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/code4craft/webmagic/blob/42f1018010d858dc3ad77bb960c6de1d044b3df8/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/42f1018010d858dc3ad77bb960c6de1d044b3df8/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java?ref=42f1018010d858dc3ad77bb960c6de1d044b3df8",
      "patch": "@@ -98,8 +98,8 @@ public Page download(Request request, Task task) {\n                 proxyHost = site.getHttpProxy();\n             }\n             \n-            HttpUriRequest httpUriRequest = getHttpUriRequest(request, site, headers, proxyHost);//\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u02f4\ufffd\ufffd\ufffd\n-            httpResponse = getHttpClient(site, proxy).execute(httpUriRequest);//getHttpClient\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u02f4\ufffd\ufffd\ufffd\ufffd\ufffd\u05a4\n+            HttpUriRequest httpUriRequest = getHttpUriRequest(request, site, headers, proxyHost);\n+            httpResponse = getHttpClient(site, proxy).execute(httpUriRequest);\n             statusCode = httpResponse.getStatusLine().getStatusCode();\n             request.putExtra(Request.STATUS_CODE, statusCode);\n             if (statusAccept(acceptStatCode, statusCode)) {",
      "parent_sha": "76076e51d8a1f4c16847943dddcb856a7f8b3287"
    }
  },
  {
    "oid": "9e1b7ed3f7ea40f9a29023be82b1f22eff6a389e",
    "message": "Update RegexSelector.java",
    "date": "2017-05-05T02:47:10Z",
    "url": "https://github.com/code4craft/webmagic/commit/9e1b7ed3f7ea40f9a29023be82b1f22eff6a389e",
    "details": {
      "sha": "1af6395c9c4cf0c483a43d6fa4cb408b1e3cf499",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/selector/RegexSelector.java",
      "status": "modified",
      "additions": 8,
      "deletions": 20,
      "changes": 28,
      "blob_url": "https://github.com/code4craft/webmagic/blob/9e1b7ed3f7ea40f9a29023be82b1f22eff6a389e/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FRegexSelector.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/9e1b7ed3f7ea40f9a29023be82b1f22eff6a389e/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FRegexSelector.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FRegexSelector.java?ref=9e1b7ed3f7ea40f9a29023be82b1f22eff6a389e",
      "patch": "@@ -26,14 +26,16 @@ public RegexSelector(String regexStr, int group) {\n         if (StringUtils.isBlank(regexStr)) {\n             throw new IllegalArgumentException(\"regex must not be empty\");\n         }\n-        // Check bracket for regex group. Add default group 1 if there is no group.\n-        // Only check if there exists the valid left parenthesis, leave regexp validation for Pattern.\n-        if ( ! hasGroup(regexStr) ){\n-            regexStr = \"(\" + regexStr + \")\";\n-        }\n-        this.regexStr = regexStr;\n+        \n         try {\n             regex = Pattern.compile(regexStr, Pattern.DOTALL | Pattern.CASE_INSENSITIVE);\n+            // Check bracket for regex group. Add default group 1 if there is no group.\n+            // Only check if there exists the valid left parenthesis, leave regexp validation for Pattern.\n+            if ( regex.matcher(\"\").groupCount() == 0 ){\n+                regexStr = \"(\" + regexStr + \")\";\n+                regex = Pattern.compile(regexStr, Pattern.DOTALL | Pattern.CASE_INSENSITIVE);\n+            }\n+            this.regexStr = regexStr;\n         } catch (PatternSyntaxException e) {\n             throw new IllegalArgumentException(\"invalid regex\", e);\n         }\n@@ -44,20 +46,6 @@ public RegexSelector(String regexStr) {\n         this(regexStr, 1);\n     }\n \n-    private boolean hasGroup(String regexStr) {\n-        int x = StringUtils.countMatches(regexStr, \"(\") - StringUtils.countMatches(regexStr, \"\\\\(\");\n-        int a = StringUtils.countMatches(regexStr, \"(?:\") - StringUtils.countMatches(regexStr, \"\\\\(?:\");\n-        int b = StringUtils.countMatches(regexStr, \"(?=\") - StringUtils.countMatches(regexStr, \"\\\\(?=\");\n-        int c = StringUtils.countMatches(regexStr, \"(?<\") - StringUtils.countMatches(regexStr, \"\\\\(?<\");\n-        int d = StringUtils.countMatches(regexStr, \"(?!\") - StringUtils.countMatches(regexStr, \"\\\\(?!\");\n-        int e = StringUtils.countMatches(regexStr, \"(?#\") - StringUtils.countMatches(regexStr, \"\\\\(?#\");\n-        \n-        if (x == (a + b + c + d + e)) {\n-            return false;\n-        }\n-        return true;\n-    }\n-\n     @Override\n     public String select(String text) {\n         return selectGroup(text).get(group);",
      "parent_sha": "975adf7072a8fb2a9d3134e7688c839cd3938d4d"
    }
  },
  {
    "oid": "ced79630d324e199abb9c3becf93aab3defa307e",
    "message": "specify jndi and jmx #98",
    "date": "2014-04-25T03:11:15Z",
    "url": "https://github.com/code4craft/webmagic/commit/ced79630d324e199abb9c3becf93aab3defa307e",
    "details": {
      "sha": "d16aa5f24df028794aa7fac8a7e4047da4ef7c93",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/monitor/SpiderMonitor.java",
      "status": "modified",
      "additions": 28,
      "deletions": 14,
      "changes": 42,
      "blob_url": "https://github.com/code4craft/webmagic/blob/ced79630d324e199abb9c3becf93aab3defa307e/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fmonitor%2FSpiderMonitor.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/ced79630d324e199abb9c3becf93aab3defa307e/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fmonitor%2FSpiderMonitor.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fmonitor%2FSpiderMonitor.java?ref=ced79630d324e199abb9c3becf93aab3defa307e",
      "patch": "@@ -5,11 +5,14 @@\n import us.codecraft.webmagic.processor.example.GithubRepoPageProcessor;\n import us.codecraft.webmagic.processor.example.OschinaBlogPageProcessor;\n \n-import javax.management.*;\n+import javax.management.JMException;\n+import javax.management.MBeanServer;\n+import javax.management.ObjectName;\n import javax.management.remote.JMXConnectorServer;\n import javax.management.remote.JMXConnectorServerFactory;\n import javax.management.remote.JMXServiceURL;\n import java.io.IOException;\n+import java.lang.management.ManagementFactory;\n import java.rmi.registry.LocateRegistry;\n import java.rmi.registry.Registry;\n import java.util.ArrayList;\n@@ -23,6 +26,7 @@\n  */\n public class SpiderMonitor {\n \n+    public static final int RMI_PORT = 14721;\n     private List<SpiderStatusMBean> spiderStatuses = new ArrayList<SpiderStatusMBean>();\n \n     public List<SpiderStatusMBean> getSpiders() {\n@@ -52,7 +56,7 @@ protected SpiderStatusMBean getSpiderStatusMBean(Spider spider, MonitorSpiderLis\n         return new SpiderStatus(spider, monitorSpiderListener);\n     }\n \n-    public static SpiderMonitor create(){\n+    public static SpiderMonitor create() {\n         return new SpiderMonitor();\n     }\n \n@@ -89,31 +93,41 @@ public List<String> getErrorUrls() {\n     }\n \n \n-    public void jmxStart() throws IOException, JMException {\n-        jmxStart(14721);\n+    public SpiderMonitor jndiStart(int port) throws IOException, JMException {\n+        Registry registry = LocateRegistry.createRegistry(port);\n+        return this;\n+    }\n+\n+    public SpiderMonitor jndiStart() throws IOException, JMException {\n+        return jndiStart(RMI_PORT);\n+    }\n+\n+    public SpiderMonitor jmxStart() throws IOException, JMException {\n+        return jmxStart(\"localhost\", RMI_PORT);\n     }\n \n-    public void jmxStart(int rmiPort) throws IOException, JMException {\n+    public SpiderMonitor jmxStart(String jndiServer, int rmiPort) throws IOException, JMException {\n         String jmxServerName = \"WebMagic\";\n-        // jdkfolder/bin/rmiregistry.exe 9999\n-        Registry registry = LocateRegistry.createRegistry(rmiPort);\n \n-        MBeanServer mbs = MBeanServerFactory.createMBeanServer(jmxServerName);\n-        //MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();\n+        // start JNDI\n+        MBeanServer localServer = ManagementFactory.getPlatformMBeanServer();\n \n         ObjectName objName;\n \n-        JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:\" + rmiPort + \"/\" + jmxServerName);\n+        JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://\" + jndiServer + \":\" + rmiPort + \"/\" + jmxServerName);\n         System.out.println(\"JMXServiceURL: \" + url.toString());\n-        JMXConnectorServer jmxConnServer = JMXConnectorServerFactory.newJMXConnectorServer(url, null, mbs);\n+        System.out.println(\"Please replace localhost of your ip if you want to connect it in remote server.\");\n+        JMXConnectorServer jmxConnServer = JMXConnectorServerFactory.newJMXConnectorServer(url, null, localServer);\n         jmxConnServer.start();\n \n+\n         for (SpiderStatusMBean spiderStatus : spiderStatuses) {\n             objName = new ObjectName(jmxServerName + \":name=\" + spiderStatus.getName());\n-            mbs.registerMBean(spiderStatus, objName);\n+            localServer.registerMBean(spiderStatus, objName);\n         }\n-    }\n \n+        return this;\n+    }\n \n     public static void main(String[] args) throws JMException,\n             NullPointerException,\n@@ -126,7 +140,7 @@ public static void main(String[] args) throws JMException,\n \n         SpiderMonitor spiderMonitor = new SpiderMonitor();\n         spiderMonitor.register(oschinaSpider, githubSpider);\n-        spiderMonitor.jmxStart();\n+        spiderMonitor.jndiStart().jmxStart();\n \n     }\n ",
      "parent_sha": "95d3802e772f6a17c14446c8c9801001b1f536b8"
    }
  },
  {
    "oid": "9338e13c38d7b70e1a919c650ebea63f6f42beff",
    "message": "fix a css selector bug=.=!",
    "date": "2013-08-01T14:55:19Z",
    "url": "https://github.com/code4craft/webmagic/commit/9338e13c38d7b70e1a919c650ebea63f6f42beff",
    "details": {
      "sha": "90a9d1d7dd2af7fa7f193edde6ef1718ba3b8caf",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/selector/CssSelector.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/code4craft/webmagic/blob/9338e13c38d7b70e1a919c650ebea63f6f42beff/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FCssSelector.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/9338e13c38d7b70e1a919c650ebea63f6f42beff/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FCssSelector.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FCssSelector.java?ref=9338e13c38d7b70e1a919c650ebea63f6f42beff",
      "patch": "@@ -27,7 +27,7 @@ public CssSelector(String selectorText) {\n     public String select(String text) {\n         Document doc = Jsoup.parse(text);\n         Elements elements = doc.select(selectorText);\n-        if (CollectionUtils.isNotEmpty(elements)) {\n+        if (CollectionUtils.isEmpty(elements)) {\n             return null;\n         }\n         return elements.get(0).outerHtml();",
      "parent_sha": "7020b8648d2ddf70cbf39b476970f7ef807832e4"
    }
  },
  {
    "oid": "95494d3c4d9e0165299726b27019d138844ae474",
    "message": "\u589e\u52a0\u5904\u7406meta\u7684\u903b\u8f91\u3002\n\u9057\u7559\uff1a\n3\u3001\u7f51\u9875\u6ca1\u6709\u6307\u5b9a\u7f16\u7801\u7684\u60c5\u51b5\u4e0b\uff0c\u9700\u8981\u91c7\u7528cpdetector\uff0c\u4f46\u76ee\u524dcpdetector\u8fd9\u4e2a\u5728Maven\u7684\u4e2d\u592e\u5e93\u91cc\u9762\u6ca1\u6709\uff0c\u4e0d\u6e05\u695a\u5982\u4f55\u89e3\u51b3\u3002",
    "date": "2014-05-14T06:53:54Z",
    "url": "https://github.com/code4craft/webmagic/commit/95494d3c4d9e0165299726b27019d138844ae474",
    "details": {
      "sha": "f5b55f969f3546e318fc37d83afc1d1939721eb6",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java",
      "status": "modified",
      "additions": 43,
      "deletions": 2,
      "changes": 45,
      "blob_url": "https://github.com/code4craft/webmagic/blob/95494d3c4d9e0165299726b27019d138844ae474/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/95494d3c4d9e0165299726b27019d138844ae474/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java?ref=95494d3c4d9e0165299726b27019d138844ae474",
      "patch": "@@ -2,6 +2,7 @@\n \n import com.google.common.collect.Sets;\n import org.apache.commons.io.IOUtils;\n+import org.apache.commons.lang.StringUtils;\n import org.apache.http.HttpResponse;\n import org.apache.http.NameValuePair;\n import org.apache.http.annotation.ThreadSafe;\n@@ -12,6 +13,10 @@\n import org.apache.http.client.methods.RequestBuilder;\n import org.apache.http.impl.client.CloseableHttpClient;\n import org.apache.http.util.EntityUtils;\n+import org.jsoup.Jsoup;\n+import org.jsoup.nodes.Document;\n+import org.jsoup.nodes.Element;\n+import org.jsoup.select.Elements;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import us.codecraft.webmagic.Page;\n@@ -86,8 +91,7 @@ public Page download(Request request, Task task) {\n             if (statusAccept(acceptStatCode, statusCode)) {\n                 //charset\n                 if (charset == null) {\n-                    String value = httpResponse.getEntity().getContentType().getValue();\n-                    charset = UrlUtils.getCharset(value);\n+                    charset = getHtmlCharset(httpResponse);\n                 }\n                 Page page = handleResponse(request, charset, httpResponse, task);\n                 onSuccess(request);\n@@ -115,6 +119,43 @@ public Page download(Request request, Task task) {\n         }\n     }\n \n+    protected String getHtmlCharset(CloseableHttpResponse httpResponse) throws IOException {\n+        // 1\u3001head\u5934\u90e8\u5305\u542b\u7f16\u7801\u96c6\n+        String value = httpResponse.getEntity().getContentType().getValue();\n+        String charset = UrlUtils.getCharset(value);\n+\n+        if(StringUtils.isEmpty(charset)) {\n+            // 2\u3001meta\u5143\u7d20\u4e2d\u5305\u542b\u7f16\u7801\u96c6\n+            String content = IOUtils.toString(httpResponse.getEntity().getContent());\n+            if(StringUtils.isNotEmpty(content)) {\n+                Document document = Jsoup.parse(content);\n+                Elements links = document.select(\"meta\");\n+                for(Element link : links) {\n+                    // 2.1\u3001\u5904\u7406\u573a\u666f: <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n+                    String metaContent = link.attr(\"content\");\n+                    if(metaContent.indexOf(\"charset\") != -1) {\n+                        metaContent = metaContent.substring(metaContent.indexOf(\"charset\"), metaContent.length());\n+                        charset = metaContent.split(\"=\")[1];\n+                        break;\n+                    }\n+\n+                    // 2.2\u3001\u5904\u7406\u573a\u666f: <meta charset=\"UTF-8\" />\n+                    String metaCharset = link.attr(\"charset\");\n+                    if(StringUtils.isNotEmpty(metaCharset)) {\n+                        charset = metaCharset.split(\"=\")[1];\n+                        break;\n+                    }\n+                }\n+\n+                // 3\u3001\u4ee5\u4e0a\u4e24\u79cd\u90fd\u4e0d\u5305\u542b\u7684\u573a\u666f\n+                if(StringUtils.isEmpty(charset)) {\n+                    // TODO http://cpdetector.sourceforge.net/usage.shtml\n+                }\n+            }\n+        }\n+        return charset;\n+    }\n+\n     @Override\n     public void setThread(int thread) {\n         httpClientGenerator.setPoolSize(thread);",
      "parent_sha": "dde2d89bbeb500de17c72ef045bebe2929498e0f"
    }
  },
  {
    "oid": "c5740b184031502a24fa7598d146e7e093c7c0d0",
    "message": "change assert #200",
    "date": "2015-04-15T00:32:08Z",
    "url": "https://github.com/code4craft/webmagic/commit/c5740b184031502a24fa7598d146e7e093c7c0d0",
    "details": {
      "sha": "a9e2c471451743956a1e64b15472201896977850",
      "filename": "webmagic-core/src/test/java/us/codecraft/webmagic/HtmlTest.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/code4craft/webmagic/blob/c5740b184031502a24fa7598d146e7e093c7c0d0/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FHtmlTest.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/c5740b184031502a24fa7598d146e7e093c7c0d0/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FHtmlTest.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FHtmlTest.java?ref=c5740b184031502a24fa7598d146e7e093c7c0d0",
      "patch": "@@ -39,7 +39,7 @@ public void testAHrefExtract(){\n \t\tassertThat(html.links().all()).contains(\"/xx/xx\");\n \t}\n \n-\t@Test\n+\t@Test(expected = NullPointerException)\n \tpublic void testNthNodesGet(){\n \t\tHtml html = new Html(\"<a data-tip=\\\"p$t$xxx\\\" href=\\\"/xx/xx\\\">xx</a>\");\n \t\tassertThat(html.xpath(\"//a[1]/@href\").get()).isEqualTo(\"/xx/xx\");",
      "parent_sha": "67eb632f4dc19480400893f22b1d7ad2301edfae"
    }
  },
  {
    "oid": "0f4d6e8b1201b047204bf5c2a0ddacae94d800dc",
    "message": "#525 remove port in UrlUtils.getDomain()",
    "date": "2017-04-08T15:17:00Z",
    "url": "https://github.com/code4craft/webmagic/commit/0f4d6e8b1201b047204bf5c2a0ddacae94d800dc",
    "details": {
      "sha": "72a9d3f85ae8e08c16886def22a77c6a8c23c7a4",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/utils/UrlUtils.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/code4craft/webmagic/blob/0f4d6e8b1201b047204bf5c2a0ddacae94d800dc/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Futils%2FUrlUtils.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/0f4d6e8b1201b047204bf5c2a0ddacae94d800dc/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Futils%2FUrlUtils.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Futils%2FUrlUtils.java?ref=0f4d6e8b1201b047204bf5c2a0ddacae94d800dc",
      "patch": "@@ -80,7 +80,7 @@ public static String getDomain(String url) {\n         if (i > 0) {\n             domain = StringUtils.substring(domain, 0, i);\n         }\n-        return domain;\n+        return removePort(domain);\n     }\n \n     public static String removePort(String domain) {",
      "parent_sha": "a1ae632b62ffb63b36858b42116c35ed8246a284"
    }
  },
  {
    "oid": "165e5a72eb08318db7cc75906695f2cf2427ac0e",
    "message": "Update RedisScheduler.java\n\n\u4fee\u6539redisscheduler\u4e2d\u83b7\u53d6\u722c\u53d6\u603b\u6570bug",
    "date": "2015-12-02T09:10:42Z",
    "url": "https://github.com/code4craft/webmagic/commit/165e5a72eb08318db7cc75906695f2cf2427ac0e",
    "details": {
      "sha": "1de718a8157980dc9db39f502e70848abf78fbf4",
      "filename": "webmagic-extension/src/main/java/us/codecraft/webmagic/scheduler/RedisScheduler.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/code4craft/webmagic/blob/165e5a72eb08318db7cc75906695f2cf2427ac0e/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FRedisScheduler.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/165e5a72eb08318db7cc75906695f2cf2427ac0e/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FRedisScheduler.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FRedisScheduler.java?ref=165e5a72eb08318db7cc75906695f2cf2427ac0e",
      "patch": "@@ -119,7 +119,7 @@ public int getLeftRequestsCount(Task task) {\n     public int getTotalRequestsCount(Task task) {\n         Jedis jedis = pool.getResource();\n         try {\n-            Long size = jedis.scard(getQueueKey(task));\n+            Long size = jedis.scard(getSetKey(task));\n             return size.intValue();\n         } finally {\n             pool.returnResource(jedis);",
      "parent_sha": "56e0cd513a48b05e2c472988047ced82dfe1c3e3"
    }
  },
  {
    "oid": "c2d6d495b3732f920adcd622978a4098c81f0989",
    "message": "#41 add getThreadAlive(),getStatus,getPageCount() to spider",
    "date": "2013-11-27T23:59:24Z",
    "url": "https://github.com/code4craft/webmagic/commit/c2d6d495b3732f920adcd622978a4098c81f0989",
    "details": {
      "sha": "a6b8dac24290dfe193a22a9fd9b0c3ea283da0fb",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/Spider.java",
      "status": "modified",
      "additions": 61,
      "deletions": 5,
      "changes": 66,
      "blob_url": "https://github.com/code4craft/webmagic/blob/c2d6d495b3732f920adcd622978a4098c81f0989/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/c2d6d495b3732f920adcd622978a4098c81f0989/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java?ref=c2d6d495b3732f920adcd622978a4098c81f0989",
      "patch": "@@ -6,9 +6,9 @@\n import us.codecraft.webmagic.downloader.Downloader;\n import us.codecraft.webmagic.downloader.HttpClientDownloader;\n import us.codecraft.webmagic.pipeline.CollectorPipeline;\n-import us.codecraft.webmagic.pipeline.ResultItemsCollectorPipeline;\n import us.codecraft.webmagic.pipeline.ConsolePipeline;\n import us.codecraft.webmagic.pipeline.Pipeline;\n+import us.codecraft.webmagic.pipeline.ResultItemsCollectorPipeline;\n import us.codecraft.webmagic.processor.PageProcessor;\n import us.codecraft.webmagic.scheduler.QueueScheduler;\n import us.codecraft.webmagic.scheduler.Scheduler;\n@@ -18,12 +18,10 @@\n \n import java.io.Closeable;\n import java.io.IOException;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.List;\n-import java.util.UUID;\n+import java.util.*;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.concurrent.atomic.AtomicLong;\n import java.util.concurrent.locks.Condition;\n import java.util.concurrent.locks.ReentrantLock;\n \n@@ -100,6 +98,8 @@ public class Spider implements Runnable, Task {\n \n     private final AtomicInteger threadAlive = new AtomicInteger(0);\n \n+    private final AtomicLong pageCount = new AtomicLong(0);\n+\n     /**\n      * create a spider with pageProcessor.\n      *\n@@ -306,6 +306,7 @@ public void run() {\n                             logger.error(\"download \" + requestFinal + \" error\", e);\n                         } finally {\n                             threadAlive.decrementAndGet();\n+                            pageCount.incrementAndGet();\n                             signalNewUrl();\n                         }\n                     }\n@@ -566,6 +567,61 @@ public boolean isSpawnUrl() {\n         return spawnUrl;\n     }\n \n+    /**\n+     * Get page count downloaded by spider.\n+     *\n+     * @return total downloaded page count\n+     * @since 0.4.1\n+     */\n+    public long getPageCount() {\n+        return pageCount.get();\n+    }\n+\n+    /**\n+     * Get running status by spider.\n+     *\n+     * @return running status\n+     * @see Status\n+     * @since 0.4.1\n+     */\n+    public Status getStatus(){\n+           return Status.fromValue(stat.get());\n+    }\n+\n+\n+    public enum Status {\n+        Init(0), Running(1), Stopped(2);\n+\n+        private Status(int value) {\n+            this.value = value;\n+        }\n+\n+        private int value;\n+\n+        int getValue() {\n+            return value;\n+        }\n+\n+        public static Status fromValue(int value) {\n+            for (Status status : Status.values()) {\n+                if (status.getValue() == value) {\n+                    return status;\n+                }\n+            }\n+            //default value\n+            return Init;\n+        }\n+    }\n+\n+    /**\n+     * Get thread count which is running\n+     * @return thread count which is running\n+     * @since 0.4.1\n+     */\n+    public int getThreadAlive() {\n+        return threadAlive.get();\n+    }\n+\n     /**\n      * Whether add urls extracted to download.<br>\n      * Add urls to download when it is true, and just download seed urls when it is false. <br>",
      "parent_sha": "cf62d707e0690c10e0ee50a1acf9ce416185c549"
    }
  },
  {
    "oid": "2400ff7e1af7e9f95a29b33b0b3194302f50d587",
    "message": "resovle conflict",
    "date": "2016-05-08T12:31:43Z",
    "url": "https://github.com/code4craft/webmagic/commit/2400ff7e1af7e9f95a29b33b0b3194302f50d587",
    "details": {
      "sha": "520d376eee53430c21d3537f48d8387455b34aea",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientGenerator.java",
      "status": "modified",
      "additions": 8,
      "deletions": 7,
      "changes": 15,
      "blob_url": "https://github.com/code4craft/webmagic/blob/2400ff7e1af7e9f95a29b33b0b3194302f50d587/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientGenerator.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/2400ff7e1af7e9f95a29b33b0b3194302f50d587/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientGenerator.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientGenerator.java?ref=2400ff7e1af7e9f95a29b33b0b3194302f50d587",
      "patch": "@@ -62,6 +62,14 @@ private CloseableHttpClient generateClient(Site site, Proxy proxy) {\n                     new UsernamePasswordCredentials(proxy.getUser(), proxy.getPassword()));\n             httpClientBuilder.setDefaultCredentialsProvider(credsProvider);\n         }\n+\n+        if(site!=null&&site.getHttpProxy()!=null&&site.getUsernamePasswordCredentials()!=null){\n+            credsProvider = new BasicCredentialsProvider();\n+            credsProvider.setCredentials(\n+                    new AuthScope(site.getHttpProxy()),//\u53ef\u4ee5\u8bbf\u95ee\u7684\u8303\u56f4\n+                    site.getUsernamePasswordCredentials());//\u7528\u6237\u540d\u548c\u5bc6\u7801\n+            httpClientBuilder.setDefaultCredentialsProvider(credsProvider);\n+        }\n         \n         httpClientBuilder.setConnectionManager(connectionManager);\n         if (site != null && site.getUserAgent() != null) {\n@@ -82,13 +90,6 @@ public void process(\n             });\n         }\n \n-        if(site!=null&&site.getHttpProxy()!=null&&site.getUsernamePasswordCredentials()!=null){\n-            CredentialsProvider credsProvider = new BasicCredentialsProvider();\n-            credsProvider.setCredentials(\n-                    new AuthScope(site.getHttpProxy()),//\u53ef\u4ee5\u8bbf\u95ee\u7684\u8303\u56f4\n-                    site.getUsernamePasswordCredentials());//\u7528\u6237\u540d\u548c\u5bc6\u7801\n-            httpClientBuilder.setDefaultCredentialsProvider(credsProvider);\n-        }\n \n         SocketConfig socketConfig = SocketConfig.custom().setSoKeepAlive(true).setTcpNoDelay(true).build();\n         httpClientBuilder.setDefaultSocketConfig(socketConfig);",
      "parent_sha": "9de64ea0f25d33b71e4778332d31b051a708299a"
    }
  },
  {
    "oid": "ad010927f6acb5c605e4befe269076629d8d4357",
    "message": "Fix test.",
    "date": "2023-06-22T02:40:46Z",
    "url": "https://github.com/code4craft/webmagic/commit/ad010927f6acb5c605e4befe269076629d8d4357",
    "details": {
      "sha": "e9325a7a70cdeeced63c8c03c6164be2e4d4fd7f",
      "filename": "webmagic-core/src/test/java/us/codecraft/webmagic/proxy/SimpleProxyProviderTest.java",
      "status": "modified",
      "additions": 7,
      "deletions": 3,
      "changes": 10,
      "blob_url": "https://github.com/code4craft/webmagic/blob/ad010927f6acb5c605e4befe269076629d8d4357/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fproxy%2FSimpleProxyProviderTest.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/ad010927f6acb5c605e4befe269076629d8d4357/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fproxy%2FSimpleProxyProviderTest.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fproxy%2FSimpleProxyProviderTest.java?ref=ad010927f6acb5c605e4befe269076629d8d4357",
      "patch": "@@ -1,6 +1,9 @@\n package us.codecraft.webmagic.proxy;\n \n import org.junit.Test;\n+import org.mockito.Mockito;\n+\n+import us.codecraft.webmagic.Request;\n import us.codecraft.webmagic.Site;\n import us.codecraft.webmagic.Task;\n \n@@ -20,11 +23,12 @@ public void test_get_proxy() throws Exception {\n         Proxy originProxy1 = new Proxy(\"127.0.0.1\", 1087);\n         Proxy originProxy2 = new Proxy(\"127.0.0.1\", 1088);\n         SimpleProxyProvider proxyProvider = SimpleProxyProvider.from(originProxy1, originProxy2);\n-        Proxy proxy = proxyProvider.getProxy(null, TASK);\n+        Request request = Mockito.mock(Request.class);\n+        Proxy proxy = proxyProvider.getProxy(request, TASK);\n         assertThat(proxy).isEqualTo(originProxy1);\n-        proxy = proxyProvider.getProxy(TASK);\n+        proxy = proxyProvider.getProxy(request, TASK);\n         assertThat(proxy).isEqualTo(originProxy2);\n-        proxy = proxyProvider.getProxy(TASK);\n+        proxy = proxyProvider.getProxy(request, TASK);\n         assertThat(proxy).isEqualTo(originProxy1);\n     }\n }",
      "parent_sha": "a5fb4e041476ecd93346b3bc41354d5b29c6ae13"
    }
  },
  {
    "oid": "bc666e927dbbed942085c93a808b4a003691faad",
    "message": "Update Site.java\n\nsetCycleRetryTimes\u7684javadoc\u662f\u8fd9\u4e48\u8bf4\u7684:Set cycleRetryTimes times when download fail, 0 by default. Only work in RedisScheduler.\r\n\u800c\u901a\u8fc7\u67e5\u770b\u6e90\u7801\u53d1\u73b0\u4f3c\u4e4e\u5e76\u6ca1\u6709\u505a\u9650\u5236,\u5373\u53ea\u80fd\u7528\u4e8eRedisScheduler. \u6545\u60f3\u95ee\u4e00\u4e0b\u8be5javadoc\u662f\u5426\u8fc7\u65f6\u4e86?",
    "date": "2014-09-12T04:42:57Z",
    "url": "https://github.com/code4craft/webmagic/commit/bc666e927dbbed942085c93a808b4a003691faad",
    "details": {
      "sha": "dd9ea6b83692fa05ce6167b617751a57417b6cac",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/Site.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/code4craft/webmagic/blob/bc666e927dbbed942085c93a808b4a003691faad/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSite.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/bc666e927dbbed942085c93a808b4a003691faad/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSite.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSite.java?ref=bc666e927dbbed942085c93a808b4a003691faad",
      "patch": "@@ -331,7 +331,7 @@ public int getCycleRetryTimes() {\n     }\n \n     /**\n-     * Set cycleRetryTimes times when download fail, 0 by default. Only work in RedisScheduler. <br>\n+     * Set cycleRetryTimes times when download fail, 0 by default. <br>\n      *\n      * @return this\n      */",
      "parent_sha": "42a30074c920f412820cdd38eb802e6188b8f3f3"
    }
  },
  {
    "oid": "bc828e13848eacb1e6f51cddc715961a5fec5b11",
    "message": "\u4fee\u590dformatter\u521d\u59cb\u5316\u672a\u4f20\u53c2bug",
    "date": "2017-05-25T04:17:10Z",
    "url": "https://github.com/code4craft/webmagic/commit/bc828e13848eacb1e6f51cddc715961a5fec5b11",
    "details": {
      "sha": "3a06ee054c0cc2893f8f6e1f5545ba1cba637b24",
      "filename": "webmagic-extension/src/main/java/us/codecraft/webmagic/model/PageModelExtractor.java",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/code4craft/webmagic/blob/bc828e13848eacb1e6f51cddc715961a5fec5b11/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fmodel%2FPageModelExtractor.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/bc828e13848eacb1e6f51cddc715961a5fec5b11/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fmodel%2FPageModelExtractor.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fmodel%2FPageModelExtractor.java?ref=bc828e13848eacb1e6f51cddc715961a5fec5b11",
      "patch": "@@ -115,7 +115,11 @@ private void checkFormat(Field field, FieldExtractor fieldExtractor) {\n     }\n \n     private ObjectFormatter getObjectFormatter(Field field, Class<?> fieldClazz, Formatter formatter) {\n-        return initFormatter(ObjectFormatters.get(fieldClazz));\n+        ObjectFormatter objectFormatter = initFormatter(ObjectFormatters.get(fieldClazz));\n+        if(formatter != null && formatter.value() != null){\n+          objectFormatter.initParam(formatter.value());\n+        }\n+        return objectFormatter;\n     }\n \n     private ObjectFormatter initFormatter(Class<? extends ObjectFormatter> formatterClazz) {",
      "parent_sha": "e8abc280723603028677ae008cb6065787ac60cd"
    }
  },
  {
    "oid": "d7abbd0e4bf5a922b3abc3e75ebed7328df124e9",
    "message": "fix compile error",
    "date": "2013-08-25T08:31:00Z",
    "url": "https://github.com/code4craft/webmagic/commit/d7abbd0e4bf5a922b3abc3e75ebed7328df124e9",
    "details": {
      "sha": "f5018249274ff0cb3d84024b3d34decfdb125fa2",
      "filename": "webmagic-core/src/test/java/us/codecraft/webmagic/selector/TextContentSelectorTest.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/code4craft/webmagic/blob/d7abbd0e4bf5a922b3abc3e75ebed7328df124e9/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FTextContentSelectorTest.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/d7abbd0e4bf5a922b3abc3e75ebed7328df124e9/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FTextContentSelectorTest.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FTextContentSelectorTest.java?ref=d7abbd0e4bf5a922b3abc3e75ebed7328df124e9",
      "patch": "@@ -28,7 +28,7 @@ public void test() {\n     public void testDownload() {\n         String s = new HttpClientDownloader().download(\"http://blog.codecraft.us/blog/2013/08/18/ti-yan-dao-liao-open-sourcede-mei-li/\", \"utf-8\")\n                 .smartContent().text().toString();\n-        Assert.assertNotNull(text);\n+        Assert.assertNotNull(s);\n     }\n \n }",
      "parent_sha": "5e9e8b2541a3b85dadd222bc923540d51f30b09c"
    }
  },
  {
    "oid": "c20edb824645806cd02367fd3b517efacb3e44cf",
    "message": "Polish code.",
    "date": "2024-11-26T19:31:30Z",
    "url": "https://github.com/code4craft/webmagic/commit/c20edb824645806cd02367fd3b517efacb3e44cf",
    "details": {
      "sha": "6fdae38d8c1c73da00a9ead05065706200017d8a",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/code4craft/webmagic/blob/c20edb824645806cd02367fd3b517efacb3e44cf/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/c20edb824645806cd02367fd3b517efacb3e44cf/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java?ref=c20edb824645806cd02367fd3b517efacb3e44cf",
      "patch": "@@ -76,13 +76,14 @@ public Page download(Request request, Task task) {\n         CloseableHttpClient httpClient = getHttpClient(task.getSite());\n         Proxy proxy = proxyProvider != null ? proxyProvider.getProxy(request, task) : null;\n         HttpClientRequestContext requestContext = httpUriRequestConverter.convert(request, task.getSite(), proxy);\n-        Page page = Page.ofFailure(request);\n+        Page page = null;\n         try {\n             httpResponse = httpClient.execute(requestContext.getHttpUriRequest(), requestContext.getHttpClientContext());\n             page = handleResponse(request, request.getCharset() != null ? request.getCharset() : task.getSite().getCharset(), httpResponse, task);\n             onSuccess(page, task);\n             return page;\n         } catch (IOException e) {\n+            page = Page.ofFailure(request);\n             onError(page, task, e);\n             return page;\n         } finally {",
      "parent_sha": "0a9fe8d3e03e58c96e497efdc727ce6d09684229"
    }
  },
  {
    "oid": "5ce3fdfe5ab7b370452584158db740fd62c7c6dc",
    "message": "some refactor in log",
    "date": "2016-12-18T00:15:09Z",
    "url": "https://github.com/code4craft/webmagic/commit/5ce3fdfe5ab7b370452584158db740fd62c7c6dc",
    "details": {
      "sha": "75d25113d8080eba9a6431dfda16cfcfd357379b",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/code4craft/webmagic/blob/5ce3fdfe5ab7b370452584158db740fd62c7c6dc/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/5ce3fdfe5ab7b370452584158db740fd62c7c6dc/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java?ref=5ce3fdfe5ab7b370452584158db740fd62c7c6dc",
      "patch": "@@ -107,11 +107,11 @@ public Page download(Request request, Task task) {\n                 onSuccess(request);\n                 return page;\n             } else {\n-                logger.warn(\"code error \" + statusCode + \"\\t\" + request.getUrl());\n+                logger.warn(\"get page {} error, status code {} \",request.getUrl(),statusCode);\n                 return null;\n             }\n         } catch (IOException e) {\n-            logger.warn(\"download page \" + request.getUrl() + \" error\", e);\n+            logger.warn(\"download page {} error\", request.getUrl(), e);\n             if (site.getCycleRetryTimes() > 0) {\n                 return addToCycleRetry(request, site);\n             }\n@@ -154,7 +154,7 @@ protected HttpUriRequest getHttpUriRequest(Request request, Site site, Map<Strin\n                 .setConnectionRequestTimeout(site.getTimeOut())\n                 .setSocketTimeout(site.getTimeOut())\n                 .setConnectTimeout(site.getTimeOut())\n-                .setCookieSpec(CookieSpecs.BEST_MATCH);\n+                .setCookieSpec(CookieSpecs.DEFAULT);\n         if (proxy !=null) {\n \t\t\trequestConfigBuilder.setProxy(proxy);\n \t\t\trequest.putExtra(Request.PROXY, proxy);",
      "parent_sha": "98163a3e40cc94dbc8c6d5102374aca26137e8d9"
    }
  },
  {
    "oid": "3c6fced48e3efe2883646d53176af4073bbcca70",
    "message": "update connection client",
    "date": "2013-11-03T16:53:01Z",
    "url": "https://github.com/code4craft/webmagic/commit/3c6fced48e3efe2883646d53176af4073bbcca70",
    "details": {
      "sha": "5c80ba5d213682794e2f3e9a307e238c70bd465e",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientPool.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/code4craft/webmagic/blob/3c6fced48e3efe2883646d53176af4073bbcca70/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientPool.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/3c6fced48e3efe2883646d53176af4073bbcca70/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientPool.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientPool.java?ref=3c6fced48e3efe2883646d53176af4073bbcca70",
      "patch": "@@ -30,7 +30,7 @@ public HttpClientPool(int poolSize) {\n                 .register(\"http\", PlainConnectionSocketFactory.INSTANCE)\n                 .register(\"https\", SSLConnectionSocketFactory.getSocketFactory())\n                 .build();\n-        PoolingHttpClientConnectionManager connectionManager = new PoolingHttpClientConnectionManager(reg);\n+        connectionManager = new PoolingHttpClientConnectionManager(reg);\n         connectionManager.setMaxTotal(poolSize);\n         connectionManager.setDefaultMaxPerRoute(100);\n     }",
      "parent_sha": "09153ff71506eb502ec341c29f332b5eed24ff3c"
    }
  },
  {
    "oid": "d877fa50901da3ca9a8669e75ad6603cba3c8bfa",
    "message": "Fix us.codecraft.webmagic.scheduler.FileCacheQueueScheduler#readCursorFile, refs #1175.",
    "date": "2025-04-04T09:33:13Z",
    "url": "https://github.com/code4craft/webmagic/commit/d877fa50901da3ca9a8669e75ad6603cba3c8bfa",
    "details": {
      "sha": "a0cebc3af22391e9a8cc852dc26ea3ffa222ff74",
      "filename": "webmagic-extension/src/main/java/us/codecraft/webmagic/scheduler/FileCacheQueueScheduler.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/code4craft/webmagic/blob/d877fa50901da3ca9a8669e75ad6603cba3c8bfa/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FFileCacheQueueScheduler.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/d877fa50901da3ca9a8669e75ad6603cba3c8bfa/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FFileCacheQueueScheduler.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FFileCacheQueueScheduler.java?ref=d877fa50901da3ca9a8669e75ad6603cba3c8bfa",
      "patch": "@@ -125,7 +125,7 @@ private void readCursorFile() throws IOException {\n                 }\n             }\n             if (lastLine != null) {\n-                cursor.set(NumberUtils.toInt(line));\n+                cursor.set(NumberUtils.toInt(lastLine));\n             }\n         }\n     }",
      "parent_sha": "36533c769349532ac7d11d4445cd95cee3cb5a5d"
    }
  },
  {
    "oid": "6d3f2d9b641b2c99f5b5b244d7ed86e4ee23ca13",
    "message": "Wrap URISyntaxException as IllegalArgumentException for Proxy#toURI.",
    "date": "2020-06-24T05:24:45Z",
    "url": "https://github.com/code4craft/webmagic/commit/6d3f2d9b641b2c99f5b5b244d7ed86e4ee23ca13",
    "details": {
      "sha": "dffadba8b18c7f27f09c2cda921a39d3cde02fe2",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/proxy/Proxy.java",
      "status": "modified",
      "additions": 8,
      "deletions": 7,
      "changes": 15,
      "blob_url": "https://github.com/code4craft/webmagic/blob/6d3f2d9b641b2c99f5b5b244d7ed86e4ee23ca13/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fproxy%2FProxy.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/6d3f2d9b641b2c99f5b5b244d7ed86e4ee23ca13/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fproxy%2FProxy.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fproxy%2FProxy.java?ref=6d3f2d9b641b2c99f5b5b244d7ed86e4ee23ca13",
      "patch": "@@ -61,7 +61,7 @@ public String getPassword() {\n         return password;\n     }\n \n-    public URI toURI() throws URISyntaxException {\n+    public URI toURI() {\n         final StringBuilder userInfoBuffer = new StringBuilder();\n         if (username != null) {\n             userInfoBuffer.append(urlencode(username));\n@@ -70,7 +70,12 @@ public URI toURI() throws URISyntaxException {\n             userInfoBuffer.append(\":\").append(urlencode(password));\n         }\n         final String userInfo = StringUtils.defaultIfEmpty(userInfoBuffer.toString(), null);\n-        final URI uri = new URI(scheme, userInfo, host, port, null, null, null);\n+        URI uri;\n+        try {\n+            uri = new URI(scheme, userInfo, host, port, null, null, null);\n+        } catch (URISyntaxException e) {\n+            throw new IllegalArgumentException(e.getMessage(), e);\n+        }\n         return uri;\n     }\n \n@@ -109,11 +114,7 @@ public int hashCode() {\n \n     @Override\n     public String toString() {\n-        try {\n-            return this.toURI().toString();\n-        } catch (URISyntaxException e) {\n-            throw new IllegalArgumentException(e);\n-        }\n+        return this.toURI().toString();\n     }\n \n }",
      "parent_sha": "236e5ade44b24ac7db2e7821444db923a5f5da33"
    }
  },
  {
    "oid": "2d693580fcaded658434e1712b885b586e583e6e",
    "message": "add test",
    "date": "2017-06-01T14:28:03Z",
    "url": "https://github.com/code4craft/webmagic/commit/2d693580fcaded658434e1712b885b586e583e6e",
    "details": {
      "sha": "b4124d2d9d5854de12bfe6dac6723ab2b65ed1cb",
      "filename": "webmagic-extension/src/test/java/us/codecraft/webmagic/scheduler/RedisSchedulerTest.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/code4craft/webmagic/blob/2d693580fcaded658434e1712b885b586e583e6e/webmagic-extension%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FRedisSchedulerTest.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/2d693580fcaded658434e1712b885b586e583e6e/webmagic-extension%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FRedisSchedulerTest.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-extension%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FRedisSchedulerTest.java?ref=2d693580fcaded658434e1712b885b586e583e6e",
      "patch": "@@ -7,6 +7,8 @@\n import us.codecraft.webmagic.Site;\n import us.codecraft.webmagic.Task;\n \n+import static org.assertj.core.api.Assertions.assertThat;\n+\n /**\n  * @author code4crafter@gmail.com <br>\n  */\n@@ -37,7 +39,7 @@ public Site getSite() {\n         request.putExtra(\"1\",\"2\");\n         redisScheduler.push(request, task);\n         Request poll = redisScheduler.poll(task);\n-        System.out.println(poll);\n+        assertThat(poll).isEqualTo(request);\n \n     }\n }",
      "parent_sha": "b879b0eed088b3cc42d7346f06f85f048442eb2c"
    }
  },
  {
    "oid": "a9111040763f1c078e67e5d4d2434fce9992ed5a",
    "message": "Refactored to remove multiple calls of getSourceTexts() api (#1137)",
    "date": "2023-11-24T12:09:32Z",
    "url": "https://github.com/code4craft/webmagic/commit/a9111040763f1c078e67e5d4d2434fce9992ed5a",
    "details": {
      "sha": "1fb35f1a87fdf854d1fc45556d7888cb936e3034",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/selector/AbstractSelectable.java",
      "status": "modified",
      "additions": 11,
      "deletions": 8,
      "changes": 19,
      "blob_url": "https://github.com/code4craft/webmagic/blob/a9111040763f1c078e67e5d4d2434fce9992ed5a/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FAbstractSelectable.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/a9111040763f1c078e67e5d4d2434fce9992ed5a/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FAbstractSelectable.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FAbstractSelectable.java?ref=a9111040763f1c078e67e5d4d2434fce9992ed5a",
      "patch": "@@ -3,6 +3,7 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+\n import org.apache.commons.collections4.CollectionUtils;\n \n /**\n@@ -55,11 +56,12 @@ public Selectable jsonPath(String jsonPath) {\n \n     @Override\n     public String get() {\n-        if (CollectionUtils.isNotEmpty(all())) {\n-            return all().get(0);\n-        } else {\n-            return null;\n-        }\n+    \tList<String> sourceTexts = all();\n+        if (CollectionUtils.isNotEmpty(sourceTexts)) {\n+            return sourceTexts.get(0);\n+        } \n+        return null;\n+        \n     }\n \n     @Override\n@@ -91,8 +93,9 @@ public Selectable replace(String regex, String replacement) {\n     }\n \n     public String getFirstSourceText() {\n-        if (getSourceTexts() != null && getSourceTexts().size() > 0) {\n-            return getSourceTexts().get(0);\n+    \tList<String> sourceTexts = getSourceTexts();\n+        if (CollectionUtils.isNotEmpty(sourceTexts)) {\n+            return sourceTexts.get(0);\n         }\n         return null;\n     }\n@@ -104,6 +107,6 @@ public String toString() {\n \n     @Override\n     public boolean match() {\n-        return getSourceTexts() != null && getSourceTexts().size() > 0;\n+        return CollectionUtils.isNotEmpty(getSourceTexts());\n     }\n }",
      "parent_sha": "622ed5a17f98ee1625222452096741ebe16dfe85"
    }
  },
  {
    "oid": "221c1550600192d1b5f4ebf91e6c1ac8a56a9546",
    "message": "move release connection before return proxy #396",
    "date": "2017-03-18T03:15:36Z",
    "url": "https://github.com/code4craft/webmagic/commit/221c1550600192d1b5f4ebf91e6c1ac8a56a9546",
    "details": {
      "sha": "fa907a1d2f55d554a3b34efe648473db460b7af8",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java",
      "status": "modified",
      "additions": 4,
      "deletions": 8,
      "changes": 12,
      "blob_url": "https://github.com/code4craft/webmagic/blob/221c1550600192d1b5f4ebf91e6c1ac8a56a9546/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/221c1550600192d1b5f4ebf91e6c1ac8a56a9546/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java?ref=221c1550600192d1b5f4ebf91e6c1ac8a56a9546",
      "patch": "@@ -113,19 +113,15 @@ public Page download(Request request, Task task) {\n             onError(request);\n             return null;\n         } finally {\n+            if (httpResponse != null) {\n+                //ensure the connection is released back to pool\n+                EntityUtils.consumeQuietly(httpResponse.getEntity());\n+            }\n         \trequest.putExtra(Request.STATUS_CODE, statusCode);\n             if (site != null && site.getHttpProxyPool() != null && site.getHttpProxyPool().isEnable()) {\n                 site.returnHttpProxyToPool((HttpHost) request.getExtra(Request.PROXY), (Integer) request\n                         .getExtra(Request.STATUS_CODE));\n             }\n-            try {\n-                if (httpResponse != null) {\n-                    //ensure the connection is released back to pool\n-                    EntityUtils.consume(httpResponse.getEntity());\n-                }\n-            } catch (IOException e) {\n-                logger.warn(\"close response fail\", e);\n-            }\n         }\n     }\n ",
      "parent_sha": "68beff42c5c563770c4b978bd8d47ca188e4b9ff"
    }
  },
  {
    "oid": "9a71f0ac924615d21882e1faa4bbda0c2e5eb7d7",
    "message": "pageCount\u4fee\u6539",
    "date": "2020-12-15T09:05:16Z",
    "url": "https://github.com/code4craft/webmagic/commit/9a71f0ac924615d21882e1faa4bbda0c2e5eb7d7",
    "details": {
      "sha": "1a03bbfaeedefd29308c7d3cd06b9b09a8f9c971",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/Spider.java",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/code4craft/webmagic/blob/9a71f0ac924615d21882e1faa4bbda0c2e5eb7d7/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/9a71f0ac924615d21882e1faa4bbda0c2e5eb7d7/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java?ref=9a71f0ac924615d21882e1faa4bbda0c2e5eb7d7",
      "patch": "@@ -24,6 +24,7 @@\n import java.util.concurrent.TimeUnit;\n import java.util.concurrent.atomic.AtomicInteger;\n import java.util.concurrent.atomic.AtomicLong;\n+import java.util.concurrent.atomic.LongAdder;\n import java.util.concurrent.locks.Condition;\n import java.util.concurrent.locks.ReentrantLock;\n \n@@ -102,7 +103,7 @@ public class Spider implements Runnable, Task {\n \n     private List<SpiderListener> spiderListeners;\n \n-    private final AtomicLong pageCount = new AtomicLong(0);\n+    private final LongAdder pageCount = new LongAdder();\n \n     private Date startTime;\n \n@@ -323,7 +324,7 @@ public void run() {\n                             onError(request);\n                             logger.error(\"process request \" + request + \" error\", e);\n                         } finally {\n-                            pageCount.incrementAndGet();\n+                            pageCount.increment();\n                             signalNewUrl();\n                         }\n                     }\n@@ -335,7 +336,7 @@ public void run() {\n         if (destroyWhenExit) {\n             close();\n         }\n-        logger.info(\"Spider {} closed! {} pages downloaded.\", getUUID(), pageCount.get());\n+        logger.info(\"Spider {} closed! {} pages downloaded.\", getUUID(), pageCount.sumThenReset());\n     }\n \n     protected void onError(Request request) {\n@@ -645,7 +646,7 @@ public boolean isSpawnUrl() {\n      * @since 0.4.1\n      */\n     public long getPageCount() {\n-        return pageCount.get();\n+        return pageCount.sum();\n     }\n \n     /**",
      "parent_sha": "4b902270b4d6358fbbfeb56695e7ee89f967d38d"
    }
  },
  {
    "oid": "91ed66ecacab02dfd4b29d4cfd2fc5f2398fe241",
    "message": "Update RegexSelector.java",
    "date": "2013-12-17T08:57:22Z",
    "url": "https://github.com/code4craft/webmagic/commit/91ed66ecacab02dfd4b29d4cfd2fc5f2398fe241",
    "details": {
      "sha": "b30bc18a60cc7fd781703d5e5bfd71eb795d9354",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/selector/RegexSelector.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/code4craft/webmagic/blob/91ed66ecacab02dfd4b29d4cfd2fc5f2398fe241/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FRegexSelector.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/91ed66ecacab02dfd4b29d4cfd2fc5f2398fe241/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FRegexSelector.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FRegexSelector.java?ref=91ed66ecacab02dfd4b29d4cfd2fc5f2398fe241",
      "patch": "@@ -26,7 +26,7 @@ public RegexSelector(String regexStr, int group) {\n         if (StringUtils.isBlank(regexStr)) {\r\n             throw new IllegalArgumentException(\"regex must not be empty\");\r\n         }\r\n-        /* Can't detect '\\(', '(?:)' so that would be result in ArrayIndexOutOfBoundsException\r\n+        /* Can't detect '\\(', '(?:)' so that would result in ArrayIndexOutOfBoundsException\r\n         if (!StringUtils.contains(regexStr, \"(\") && !StringUtils.contains(regexStr, \")\")) {\r\n             regexStr = \"(\" + regexStr + \")\";\r\n         }\r",
      "parent_sha": "83926970b23856c3d23de69ae1d5d0b8ad7371cb"
    }
  },
  {
    "oid": "e7a7fbeeeb6ebc1e8f2bc152d1b142f4e6590a10",
    "message": "Enhance Jsoup could parse tr td tag directly",
    "date": "2022-10-01T10:23:15Z",
    "url": "https://github.com/code4craft/webmagic/commit/e7a7fbeeeb6ebc1e8f2bc152d1b142f4e6590a10",
    "details": {
      "sha": "b267d5ba9becf935cafdea3f5fe5f1de715dcd74",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/selector/BaseElementSelector.java",
      "status": "modified",
      "additions": 18,
      "deletions": 4,
      "changes": 22,
      "blob_url": "https://github.com/code4craft/webmagic/blob/e7a7fbeeeb6ebc1e8f2bc152d1b142f4e6590a10/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FBaseElementSelector.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/e7a7fbeeeb6ebc1e8f2bc152d1b142f4e6590a10/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FBaseElementSelector.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fselector%2FBaseElementSelector.java?ref=e7a7fbeeeb6ebc1e8f2bc152d1b142f4e6590a10",
      "patch": "@@ -1,6 +1,7 @@\n package us.codecraft.webmagic.selector;\n \n import org.jsoup.Jsoup;\n+import org.jsoup.nodes.Document;\n import org.jsoup.nodes.Element;\n \n import java.util.ArrayList;\n@@ -11,34 +12,47 @@\n  * @since 0.3.0\n  */\n public abstract class BaseElementSelector implements Selector, ElementSelector {\n+    private Document parse(String text) {\n+        if (text == null) {\n+            return null;\n+        }\n+\n+        // Jsoup could not parse <tr></tr> or <td></td> tag directly\n+        // https://stackoverflow.com/questions/63607740/jsoup-couldnt-parse-tr-tag\n+        if ((text.startsWith(\"<tr>\") && text.endsWith(\"</tr>\"))\n+                || (text.startsWith(\"<td>\") && text.endsWith(\"</td>\"))) {\n+            text = \"<table>\" + text + \"</table>\";\n+        }\n+        return Jsoup.parse(text);\n+    }\n \n     @Override\n     public String select(String text) {\n         if (text != null) {\n-            return select(Jsoup.parse(text));\n+            return select(parse(text));\n         }\n         return null;\n     }\n \n     @Override\n     public List<String> selectList(String text) {\n         if (text != null) {\n-            return selectList(Jsoup.parse(text));\n+            return selectList(parse(text));\n         } else {\n             return new ArrayList<String>();\n         }\n     }\n \n     public Element selectElement(String text) {\n         if (text != null) {\n-            return selectElement(Jsoup.parse(text));\n+            return selectElement(parse(text));\n         }\n         return null;\n     }\n \n     public List<Element> selectElements(String text) {\n         if (text != null) {\n-            return selectElements(Jsoup.parse(text));\n+            return selectElements(parse(text));\n         } else {\n             return new ArrayList<Element>();\n         }",
      "parent_sha": "db9c92edf5acb78583df0de3a5570e61480bb286"
    }
  },
  {
    "oid": "9ab342c3a782db8ad95e8e3ce1cff2cb4d8b158d",
    "message": "Remove public modifiers from junit5 test methods.",
    "date": "2024-04-21T15:31:21Z",
    "url": "https://github.com/code4craft/webmagic/commit/9ab342c3a782db8ad95e8e3ce1cff2cb4d8b158d",
    "details": {
      "sha": "61fc6ab8b377f02d598a76b69fbc53d3b925bee6",
      "filename": "webmagic-core/src/test/java/us/codecraft/webmagic/proxy/ProxyTest.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/code4craft/webmagic/blob/9ab342c3a782db8ad95e8e3ce1cff2cb4d8b158d/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fproxy%2FProxyTest.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/9ab342c3a782db8ad95e8e3ce1cff2cb4d8b158d/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fproxy%2FProxyTest.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fproxy%2FProxyTest.java?ref=9ab342c3a782db8ad95e8e3ce1cff2cb4d8b158d",
      "patch": "@@ -15,12 +15,12 @@\n  * @author yxssfxwzy@sina.com May 30, 2014\n  *\n  */\n-public class ProxyTest {\n+class ProxyTest {\n \n     private static List<String[]> httpProxyList = new ArrayList<String[]>();\n \n     @BeforeAll\n-    public static void before() {\n+    static void before() {\n         // String[] source = { \"0.0.0.1:0\", \"0.0.0.2:0\", \"0.0.0.3:0\",\n         // \"0.0.0.4:0\" };\n         String[] source = { \"::0.0.0.1:0\", \"::0.0.0.2:0\", \"::0.0.0.3:0\", \"::0.0.0.4:0\" };",
      "parent_sha": "5196a56ccf7aee374b44a02a1e9a414496431938"
    }
  },
  {
    "oid": "2bb6f847428e85226c7e0875ceff7602b5c43198",
    "message": "fix redis null pointer exception",
    "date": "2013-07-26T11:12:55Z",
    "url": "https://github.com/code4craft/webmagic/commit/2bb6f847428e85226c7e0875ceff7602b5c43198",
    "details": {
      "sha": "382642b7de9ee29527443ab311175ddad7ef908e",
      "filename": "webmagic-plugin/webmagic-misc/src/main/java/us/codecraft/webmagic/scheduler/RedisScheduler.java",
      "status": "modified",
      "additions": 6,
      "deletions": 30,
      "changes": 36,
      "blob_url": "https://github.com/code4craft/webmagic/blob/2bb6f847428e85226c7e0875ceff7602b5c43198/webmagic-plugin%2Fwebmagic-misc%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FRedisScheduler.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/2bb6f847428e85226c7e0875ceff7602b5c43198/webmagic-plugin%2Fwebmagic-misc%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FRedisScheduler.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-plugin%2Fwebmagic-misc%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FRedisScheduler.java?ref=2bb6f847428e85226c7e0875ceff7602b5c43198",
      "patch": "@@ -7,9 +7,6 @@\n import us.codecraft.webmagic.Task;\n import us.codecraft.webmagic.schedular.Scheduler;\n \n-import java.util.concurrent.locks.Condition;\n-import java.util.concurrent.locks.ReentrantLock;\n-\n /**\n  * \u4f7f\u7528redis\u7ba1\u7406url\uff0c\u6784\u5efa\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u722c\u866b\u3002<br>\n  *\n@@ -25,10 +22,6 @@ public class RedisScheduler implements Scheduler {\n \n     private static final String SET_PREFIX = \"set_\";\n \n-    private ReentrantLock lock = new ReentrantLock();\n-\n-    private Condition condition = lock.newCondition();\n-\n     public RedisScheduler(String host) {\n         pool = new JedisPool(new JedisPoolConfig(), host);\n     }\n@@ -38,15 +31,9 @@ public synchronized void push(Request request, Task task) {\n         Jedis jedis = pool.getResource();\n         //\u4f7f\u7528SortedSet\u8fdb\u884curl\u53bb\u91cd\n         if (jedis.zrank(SET_PREFIX + task.getUUID(), request.getUrl()) == null) {\n-            try {\n-                lock.lock();\n-                //\u4f7f\u7528List\u4fdd\u5b58\u961f\u5217\n-                jedis.rpush(QUEUE_PREFIX + task.getUUID(), request.getUrl());\n-                jedis.zadd(SET_PREFIX + task.getUUID(), System.currentTimeMillis(), request.getUrl());\n-                condition.signal();\n-            } finally {\n-                lock.unlock();\n-            }\n+            //\u4f7f\u7528List\u4fdd\u5b58\u961f\u5217\n+            jedis.rpush(QUEUE_PREFIX + task.getUUID(), request.getUrl());\n+            jedis.zadd(SET_PREFIX + task.getUUID(), System.currentTimeMillis(), request.getUrl());\n         }\n         pool.returnResource(jedis);\n     }\n@@ -55,21 +42,10 @@ public synchronized void push(Request request, Task task) {\n     public synchronized Request poll(Task task) {\n         Jedis jedis = pool.getResource();\n         String url = jedis.lpop(QUEUE_PREFIX + task.getUUID());\n-        if (url == null) {\n-            try {\n-                lock.lock();\n-                while (url == null) {\n-                    try {\n-                        condition.await();\n-                        url = jedis.lpop(QUEUE_PREFIX + task.getUUID());\n-                    } catch (InterruptedException e) {\n-                    }\n-                }\n-            } finally {\n-                lock.unlock();\n-            }\n-        }\n         pool.returnResource(jedis);\n+        if (url==null){\n+            return null;\n+        }\n         return new Request(url);\n     }\n }",
      "parent_sha": "2c97dd90c7d60624864d5d2c2b2e93f725940e76"
    }
  },
  {
    "oid": "aa01e27779a8148f2372abe25645169b4d56f5b0",
    "message": "change constructor for Proxy to public #490",
    "date": "2017-03-16T23:02:02Z",
    "url": "https://github.com/code4craft/webmagic/commit/aa01e27779a8148f2372abe25645169b4d56f5b0",
    "details": {
      "sha": "dbe3a182b2d2dabb070dbdf1df7a912a8a620080",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/proxy/Proxy.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/code4craft/webmagic/blob/aa01e27779a8148f2372abe25645169b4d56f5b0/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fproxy%2FProxy.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/aa01e27779a8148f2372abe25645169b4d56f5b0/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fproxy%2FProxy.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fproxy%2FProxy.java?ref=aa01e27779a8148f2372abe25645169b4d56f5b0",
      "patch": "@@ -79,14 +79,14 @@ public class Proxy implements Delayed, Serializable {\n \n \tprivate List<Integer> failedErrorType = new ArrayList<Integer>();\n \n-\tProxy(HttpHost httpHost, String user, String password) {\n+\tpublic Proxy(HttpHost httpHost, String user, String password) {\n \t\tthis.httpHost = httpHost;\n \t\tthis.user = user;\n \t\tthis.password = password;\n \t\tthis.canReuseTime = System.nanoTime() + TimeUnit.NANOSECONDS.convert(reuseTimeInterval, TimeUnit.MILLISECONDS);\n \t}\n \n-\tProxy(HttpHost httpHost,  int reuseInterval, String user, String password) {\n+\tpublic Proxy(HttpHost httpHost,  int reuseInterval, String user, String password) {\n \t\tthis.httpHost = httpHost;\n \t\tthis.user = user;\n \t\tthis.password = password;",
      "parent_sha": "0fbf657d86a14d281f05ce367f9910c5df9612bd"
    }
  },
  {
    "oid": "a3ee9e3d08f2ae7171f1f4df58d3160032447456",
    "message": "fix example",
    "date": "2016-12-18T00:18:26Z",
    "url": "https://github.com/code4craft/webmagic/commit/a3ee9e3d08f2ae7171f1f4df58d3160032447456",
    "details": {
      "sha": "7e4efeed64f0a4e56873547040e99ad3f36dc99b",
      "filename": "webmagic-extension/src/main/java/us/codecraft/webmagic/example/MonitorExample.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/code4craft/webmagic/blob/a3ee9e3d08f2ae7171f1f4df58d3160032447456/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fexample%2FMonitorExample.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/a3ee9e3d08f2ae7171f1f4df58d3160032447456/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fexample%2FMonitorExample.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fexample%2FMonitorExample.java?ref=a3ee9e3d08f2ae7171f1f4df58d3160032447456",
      "patch": "@@ -3,7 +3,7 @@\n import us.codecraft.webmagic.Spider;\n import us.codecraft.webmagic.monitor.SpiderMonitor;\n import us.codecraft.webmagic.processor.example.GithubRepoPageProcessor;\n-import us.codecraft.webmagic.processor.example.OschinaBlogPageProcessor;\n+import us.codecraft.webmagic.processor.example.ZhihuPageProcessor;\n \n /**\n  * @author code4crafer@gmail.com\n@@ -13,14 +13,14 @@ public class MonitorExample {\n \n     public static void main(String[] args) throws Exception {\n \n-        Spider oschinaSpider = Spider.create(new OschinaBlogPageProcessor())\n+        Spider zhihuPageProcessor = Spider.create(new ZhihuPageProcessor())\n                 .addUrl(\"http://my.oschina.net/flashsword/blog\");\n         Spider githubSpider = Spider.create(new GithubRepoPageProcessor())\n                 .addUrl(\"https://github.com/code4craft\");\n \n-        SpiderMonitor.instance().register(oschinaSpider);\n+        SpiderMonitor.instance().register(zhihuPageProcessor);\n         SpiderMonitor.instance().register(githubSpider);\n-        oschinaSpider.start();\n+        zhihuPageProcessor.start();\n         githubSpider.start();\n     }\n }",
      "parent_sha": "7476ceccee28827a1aab951e319e0ec915dbaaa3"
    }
  },
  {
    "oid": "42a30074c920f412820cdd38eb802e6188b8f3f3",
    "message": "update urls.contains to DuplicateRemover in FileCacheQueueScheduler #157",
    "date": "2014-09-11T23:52:38Z",
    "url": "https://github.com/code4craft/webmagic/commit/42a30074c920f412820cdd38eb802e6188b8f3f3",
    "details": {
      "sha": "fcbcc4d2589ecb3eb264460e4b2d921d936b2799",
      "filename": "webmagic-extension/src/main/java/us/codecraft/webmagic/scheduler/FileCacheQueueScheduler.java",
      "status": "modified",
      "additions": 22,
      "deletions": 2,
      "changes": 24,
      "blob_url": "https://github.com/code4craft/webmagic/blob/42a30074c920f412820cdd38eb802e6188b8f3f3/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FFileCacheQueueScheduler.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/42a30074c920f412820cdd38eb802e6188b8f3f3/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FFileCacheQueueScheduler.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FFileCacheQueueScheduler.java?ref=42a30074c920f412820cdd38eb802e6188b8f3f3",
      "patch": "@@ -4,6 +4,7 @@\n import org.apache.commons.lang3.math.NumberUtils;\n import us.codecraft.webmagic.Request;\n import us.codecraft.webmagic.Task;\n+import us.codecraft.webmagic.scheduler.component.DuplicateRemover;\n \n import java.io.*;\n import java.util.LinkedHashSet;\n@@ -68,6 +69,26 @@ private void init(Task task) {\n         logger.info(\"init cache scheduler success\");\n     }\n \n+    private void initDuplicateRemover() {\n+        setDuplicateRemover(\n+                new DuplicateRemover() {\n+                    @Override\n+                    public boolean isDuplicate(Request request, Task task) {\n+                        return !urls.add(request.getUrl());\n+                    }\n+\n+                    @Override\n+                    public void resetDuplicateCheck(Task task) {\n+                        urls.clear();\n+                    }\n+\n+                    @Override\n+                    public int getTotalRequestsCount(Task task) {\n+                        return urls.size();\n+                    }\n+                });\n+    }\n+\n     private void initFlushThread() {\n         Executors.newScheduledThreadPool(1).scheduleAtFixedRate(new Runnable() {\n             @Override\n@@ -92,6 +113,7 @@ private void readFile() {\n             urls = new LinkedHashSet<String>();\n             readCursorFile();\n             readUrlFile();\n+            initDuplicateRemover();\n         } catch (FileNotFoundException e) {\n             //init\n             logger.info(\"init cache file \" + getFileName(fileUrlAllName));\n@@ -145,8 +167,6 @@ protected void pushWhenNoDuplicate(Request request, Task task) {\n         if (!inited.get()) {\n             init(task);\n         }\n-        if(urls.contains(request.getUrl())) //\u5df2\u5b58\u5728\u6b64URL \u8868\u793a\u5df2\u6293\u53d6\u8fc7 \u8df3\u8fc7\n-            return;\n         queue.add(request);\n         fileUrlWriter.println(request.getUrl());\n     }",
      "parent_sha": "689e89a9b27c24b74ae2c17accdca59c4cae410f"
    }
  },
  {
    "oid": "964e637264d8eba7f738f32466d45ad4505e8cfc",
    "message": "fix ut #110",
    "date": "2014-04-25T10:46:31Z",
    "url": "https://github.com/code4craft/webmagic/commit/964e637264d8eba7f738f32466d45ad4505e8cfc",
    "details": {
      "sha": "312500b1086c9550dfa981b4b32dc28fdcd6e6da",
      "filename": "webmagic-avalon/webmagic-worker/src/main/java/us/codecraft/webmagic/worker/Worker.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/code4craft/webmagic/blob/964e637264d8eba7f738f32466d45ad4505e8cfc/webmagic-avalon%2Fwebmagic-worker%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fworker%2FWorker.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/964e637264d8eba7f738f32466d45ad4505e8cfc/webmagic-avalon%2Fwebmagic-worker%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fworker%2FWorker.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-avalon%2Fwebmagic-worker%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fworker%2FWorker.java?ref=964e637264d8eba7f738f32466d45ad4505e8cfc",
      "patch": "@@ -1,11 +1,11 @@\n package us.codecraft.webmagic.worker;\n \n import us.codecraft.webmagic.Spider;\n-import us.codecraft.webmagic.utils.ThreadUtils;\n \n import java.util.Map;\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n \n /**\n  * Container of Spiders.\n@@ -33,7 +33,7 @@ public Worker() {\n     }\n \n     protected ExecutorService initExecutorService() {\n-        return ThreadUtils.newFixedThreadPool(poolSize);\n+        return Executors.newFixedThreadPool(poolSize);\n     }\n \n     public void addSpider(Spider spider) {",
      "parent_sha": "c7afdb516e0cda23a03017efc427a388eed997d4"
    }
  },
  {
    "oid": "b06a248c00a8e23db5e87db470d0c82363c89523",
    "message": "fix test",
    "date": "2017-04-08T12:06:04Z",
    "url": "https://github.com/code4craft/webmagic/commit/b06a248c00a8e23db5e87db470d0c82363c89523",
    "details": {
      "sha": "79bbb7b870c5797c11e367f50af437c17efcd20f",
      "filename": "webmagic-core/src/test/java/us/codecraft/webmagic/downloader/HttpClientDownloaderTest.java",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/code4craft/webmagic/blob/b06a248c00a8e23db5e87db470d0c82363c89523/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloaderTest.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/b06a248c00a8e23db5e87db470d0c82363c89523/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloaderTest.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloaderTest.java?ref=b06a248c00a8e23db5e87db470d0c82363c89523",
      "patch": "@@ -96,7 +96,7 @@ private String getCharsetByUrl(String url) {\n                 Request requestGBK = new Request(url);\n                 CloseableHttpResponse httpResponse = null;\n                 try {\n-                    httpResponse = httpClient.execute(new HttpUriRequestConverter().convert(requestGBK, site, null));\n+                    httpResponse = httpClient.execute(new HttpUriRequestConverter().convert(requestGBK, site, null).getHttpUriRequest());\n                 } catch (IOException e) {\n                     e.printStackTrace();\n                 }\n@@ -131,24 +131,24 @@ public void run() throws Exception {\n                 request.setMethod(HttpConstant.Method.GET);\n                 Map<String,Object> params = new HashedMap();\n                 params.put(\"q\",\"webmagic\");\n-                HttpUriRequest  httpUriRequest = httpUriRequestConverter.convert(request,site,null);\n+                HttpUriRequest  httpUriRequest = httpUriRequestConverter.convert(request,site,null).getHttpUriRequest();\n                 assertThat(EntityUtils.toString(HttpClients.custom().build().execute(httpUriRequest).getEntity())).isEqualTo(\"get\");\n                 request.setMethod(HttpConstant.Method.DELETE);\n-                httpUriRequest = httpUriRequestConverter.convert(request, site, null);\n+                httpUriRequest = httpUriRequestConverter.convert(request, site, null).getHttpUriRequest();\n                 assertThat(EntityUtils.toString(HttpClients.custom().build().execute(httpUriRequest).getEntity())).isEqualTo(\"delete\");\n                 request.setMethod(HttpConstant.Method.HEAD);\n-                httpUriRequest = httpUriRequestConverter.convert(request, site, null);\n+                httpUriRequest = httpUriRequestConverter.convert(request, site, null).getHttpUriRequest();\n                 assertThat(HttpClients.custom().build().execute(httpUriRequest).getFirstHeader(\"method\").getValue()).isEqualTo(\"head\");\n                 request.setMethod(HttpConstant.Method.TRACE);\n-                httpUriRequest = httpUriRequestConverter.convert(request, site, null);\n+                httpUriRequest = httpUriRequestConverter.convert(request, site, null).getHttpUriRequest();\n                 assertThat(EntityUtils.toString(HttpClients.custom().build().execute(httpUriRequest).getEntity())).isEqualTo(\"trace\");\n                 request.setUrl(\"http://127.0.0.1:12306/search\");\n                 request.setMethod(HttpConstant.Method.POST);\n                 request.setRequestBody(HttpRequestBody.form(params, \"utf-8\"));\n-                httpUriRequest = httpUriRequestConverter.convert(request, site, null);\n+                httpUriRequest = httpUriRequestConverter.convert(request, site, null).getHttpUriRequest();\n                 assertThat(EntityUtils.toString(HttpClients.custom().build().execute(httpUriRequest).getEntity())).isEqualTo(\"post\");\n                 request.setMethod(HttpConstant.Method.PUT);\n-                httpUriRequest = httpUriRequestConverter.convert(request, site, null);\n+                httpUriRequest = httpUriRequestConverter.convert(request, site, null).getHttpUriRequest();\n                 assertThat(EntityUtils.toString(HttpClients.custom().build().execute(httpUriRequest).getEntity())).isEqualTo(\"put\");\n             }\n         });",
      "parent_sha": "1cfbd13aaedfb1bd20dcd576570f6a0a65662200"
    }
  },
  {
    "oid": "30af23d003ba744cf5d15a947636b095644bdbb0",
    "message": "split monitor to server and client mode #98",
    "date": "2014-04-25T03:25:52Z",
    "url": "https://github.com/code4craft/webmagic/commit/30af23d003ba744cf5d15a947636b095644bdbb0",
    "details": {
      "sha": "d4243c1cf9a826f64c26a792ed7aa860b694a22d",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/monitor/SpiderMonitor.java",
      "status": "modified",
      "additions": 76,
      "deletions": 15,
      "changes": 91,
      "blob_url": "https://github.com/code4craft/webmagic/blob/30af23d003ba744cf5d15a947636b095644bdbb0/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fmonitor%2FSpiderMonitor.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/30af23d003ba744cf5d15a947636b095644bdbb0/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fmonitor%2FSpiderMonitor.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fmonitor%2FSpiderMonitor.java?ref=30af23d003ba744cf5d15a947636b095644bdbb0",
      "patch": "@@ -26,7 +26,20 @@\n  */\n public class SpiderMonitor {\n \n-    public static final int RMI_PORT = 14721;\n+    private enum Type {\n+        Server, Client, Local;\n+    }\n+\n+    private static final int DEFAULT_SERVER_PORT = 14721;\n+\n+    private static final String DEFAULT_SERVER_HOST = \"localhost\";\n+\n+    private int serverPort;\n+\n+    private String serverHost;\n+\n+    private Type type = Type.Local;\n+\n     private List<SpiderStatusMBean> spiderStatuses = new ArrayList<SpiderStatusMBean>();\n \n     public List<SpiderStatusMBean> getSpiders() {\n@@ -37,6 +50,11 @@ public SpiderStatusMBean getSpider() {\n         return spiderStatuses.get(0);\n     }\n \n+    /**\n+     * Register spider for monitor.\n+     * @param spiders\n+     * @return\n+     */\n     public SpiderMonitor register(Spider... spiders) {\n         for (Spider spider : spiders) {\n             MonitorSpiderListener monitorSpiderListener = new MonitorSpiderListener();\n@@ -93,17 +111,59 @@ public List<String> getErrorUrls() {\n     }\n \n \n-    public SpiderMonitor jndiStart(int port) throws IOException, JMException {\n+    /**\n+     * Start monitor as server mode.\n+     * @param port\n+     * @return\n+     * @throws IOException\n+     * @throws JMException\n+     */\n+    public SpiderMonitor server(int port) throws IOException, JMException {\n         Registry registry = LocateRegistry.createRegistry(port);\n+        serverPort = port;\n+        serverHost = \"localhost\";\n+        type = Type.Server;\n         return this;\n     }\n \n-    public SpiderMonitor jndiStart() throws IOException, JMException {\n-        return jndiStart(RMI_PORT);\n+    /**\n+     * Start monitor as server mode.\n+     * @return\n+     * @throws IOException\n+     * @throws JMException\n+     */\n+    public SpiderMonitor server() throws IOException, JMException {\n+        return server(DEFAULT_SERVER_PORT);\n+    }\n+\n+\n+    /**\n+     * Start monitor as client mode.\n+     * @param serverHost\n+     * @param serverPort\n+     * @return\n+     * @throws IOException\n+     * @throws JMException\n+     */\n+    public SpiderMonitor client(String serverHost, int serverPort) throws IOException, JMException {\n+        type = Type.Client;\n+        this.serverHost = serverHost;\n+        this.serverPort = serverPort;\n+        return this;\n+    }\n+\n+    /**\n+     * Start monitor as client mode.\n+     * @return\n+     * @throws IOException\n+     * @throws JMException\n+     */\n+    public SpiderMonitor client() throws IOException, JMException {\n+        return client(DEFAULT_SERVER_HOST, DEFAULT_SERVER_PORT);\n     }\n \n     public SpiderMonitor jmxStart() throws IOException, JMException {\n-        return jmxStart(\"localhost\", RMI_PORT);\n+        return jmxStart(\"localhost\", DEFAULT_SERVER_PORT);\n     }\n \n     public SpiderMonitor jmxStart(String jndiServer, int rmiPort) throws IOException, JMException {\n@@ -114,12 +174,13 @@ public SpiderMonitor jmxStart(String jndiServer, int rmiPort) throws IOException\n \n         ObjectName objName;\n \n-        JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://\" + jndiServer + \":\" + rmiPort + \"/\" + jmxServerName);\n-        System.out.println(\"JMXServiceURL: \" + url.toString());\n-        System.out.println(\"Please replace localhost of your ip if you want to connect it in remote server.\");\n-        JMXConnectorServer jmxConnServer = JMXConnectorServerFactory.newJMXConnectorServer(url, null, localServer);\n-        jmxConnServer.start();\n-\n+        if (type != Type.Local) {\n+            JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://\" + jndiServer + \":\" + rmiPort + \"/\" + jmxServerName);\n+            System.out.println(\"JMXServiceURL: \" + url.toString());\n+            System.out.println(\"Please replace localhost of your ip if you want to connect it in remote server.\");\n+            JMXConnectorServer jmxConnServer = JMXConnectorServerFactory.newJMXConnectorServer(url, null, localServer);\n+            jmxConnServer.start();\n+        }\n \n         for (SpiderStatusMBean spiderStatus : spiderStatuses) {\n             objName = new ObjectName(jmxServerName + \":name=\" + spiderStatus.getName());\n@@ -129,9 +190,7 @@ public SpiderMonitor jmxStart(String jndiServer, int rmiPort) throws IOException\n         return this;\n     }\n \n-    public static void main(String[] args) throws JMException,\n-            NullPointerException,\n-            IOException {\n+    public static void main(String[] args) throws Exception {\n \n         Spider oschinaSpider = Spider.create(new OschinaBlogPageProcessor())\n                 .addUrl(\"http://my.oschina.net/flashsword/blog\").thread(2);\n@@ -140,7 +199,9 @@ public static void main(String[] args) throws JMException,\n \n         SpiderMonitor spiderMonitor = new SpiderMonitor();\n         spiderMonitor.register(oschinaSpider, githubSpider);\n-        spiderMonitor.jndiStart().jmxStart();\n+        spiderMonitor.jmxStart();\n+        oschinaSpider.start();\n+        githubSpider.start();\n \n     }\n ",
      "parent_sha": "ced79630d324e199abb9c3becf93aab3defa307e"
    }
  },
  {
    "oid": "ab5d81a6b6ab215e3450cb2fde94df12c5e49544",
    "message": "perfect Spider.run to avoid some rare concurrent issue, change the Spider.emptySleepTime to long type",
    "date": "2021-08-04T09:17:22Z",
    "url": "https://github.com/code4craft/webmagic/commit/ab5d81a6b6ab215e3450cb2fde94df12c5e49544",
    "details": {
      "sha": "65c0ceea95320416078cce659f6d483ea7b977f4",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/Spider.java",
      "status": "modified",
      "additions": 60,
      "deletions": 29,
      "changes": 89,
      "blob_url": "https://github.com/code4craft/webmagic/blob/ab5d81a6b6ab215e3450cb2fde94df12c5e49544/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/ab5d81a6b6ab215e3450cb2fde94df12c5e49544/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java?ref=ab5d81a6b6ab215e3450cb2fde94df12c5e49544",
      "patch": "@@ -106,7 +106,7 @@ public class Spider implements Runnable, Task {\n \n     private Date startTime;\n \n-    private int emptySleepTime = 30000;\n+    private long emptySleepTime = 30000;\n \n     /**\n      * create a spider with pageProcessor.\n@@ -305,32 +305,52 @@ protected void initComponent() {\n     public void run() {\n         checkRunningStat();\n         initComponent();\n-        logger.info(\"Spider {} started!\",getUUID());\n+        logger.info(\"Spider {} started!\", getUUID());\n+        // interrupt won't be necessarily detected\n         while (!Thread.currentThread().isInterrupted() && stat.get() == STAT_RUNNING) {\n-            final Request request = scheduler.poll(this);\n-            if (request == null) {\n-                if (threadPool.getThreadAlive() == 0 && exitWhenComplete) {\n-                    break;\n-                }\n-                // wait until new url added\n-                waitNewUrl();\n-            } else {\n-                threadPool.execute(new Runnable() {\n-                    @Override\n-                    public void run() {\n-                        try {\n-                            processRequest(request);\n-                            onSuccess(request);\n-                        } catch (Exception e) {\n-                            onError(request, e);\n-                            logger.error(\"process request \" + request + \" error\", e);\n-                        } finally {\n-                            pageCount.incrementAndGet();\n-                            signalNewUrl();\n+            Request poll = scheduler.poll(this);\n+            if (poll == null) {\n+                if (threadPool.getThreadAlive() == 0) {\n+                    //no alive thread anymore , try again\n+                    poll = scheduler.poll(this);\n+                    if(poll==null) {\n+                        if (exitWhenComplete) {\n+                            break;\n+                        }else{\n+                            // wait\n+                            try {\n+                                Thread.sleep(emptySleepTime);\n+                                continue;\n+                            } catch (InterruptedException e) {\n+                                break;\n+                            }\n                         }\n                     }\n-                });\n+                }else {\n+                    // wait until new url added\uff0c\n+                    if(waitNewUrl())\n+                        //if interrupted\n+                        break;\n+                    continue;\n+                }\n             }\n+            final Request request = poll;\n+            //this may swallow the interruption\n+            threadPool.execute(new Runnable() {\n+                @Override\n+                public void run() {\n+                    try {\n+                        processRequest(request);\n+                        onSuccess(request);\n+                    } catch (Exception e) {\n+                        onError(request,e);\n+                        logger.error(\"process request \" + request + \" error\", e);\n+                    } finally {\n+                        pageCount.incrementAndGet();\n+                        signalNewUrl();\n+                    }\n+                }\n+            });\n         }\n         stat.set(STAT_STOPPED);\n         // release some resources\n@@ -565,16 +585,24 @@ public Spider addRequest(Request... requests) {\n         return this;\n     }\n \n-    private void waitNewUrl() {\n+    /**\n+     *\n+     * @return isInterrupted\n+     */\n+    private boolean waitNewUrl() {\n+        // now there may not be any thread live\n         newUrlLock.lock();\n         try {\n-            //double check\n-            if (threadPool.getThreadAlive() == 0 && exitWhenComplete) {\n-                return;\n+            //double check\uff0cunnecessary, unless very fast concurrent\n+            if (threadPool.getThreadAlive() == 0) {\n+                return false;\n             }\n+            //wait for amount of time\n             newUrlCondition.await(emptySleepTime, TimeUnit.MILLISECONDS);\n+            return false;\n         } catch (InterruptedException e) {\n-            logger.warn(\"waitNewUrl - interrupted, error {}\", e);\n+            // logger.warn(\"waitNewUrl - interrupted, error {}\", e);\n+            return true;\n         } finally {\n             newUrlLock.unlock();\n         }\n@@ -772,7 +800,10 @@ public Scheduler getScheduler() {\n      *\n      * @param emptySleepTime In MILLISECONDS.\n      */\n-    public void setEmptySleepTime(int emptySleepTime) {\n+    public void setEmptySleepTime(long emptySleepTime) {\n+        if(emptySleepTime<=0){\n+            throw new IllegalArgumentException(\"emptySleepTime should be more than zero!\");\n+        }\n         this.emptySleepTime = emptySleepTime;\n     }\n }",
      "parent_sha": "c5a037a8072575b0938bfc26b0e326931f7a6b16"
    }
  },
  {
    "oid": "352887870c15a1601288508a1840c925576f1961",
    "message": "remove shutdown call",
    "date": "2013-10-31T14:22:14Z",
    "url": "https://github.com/code4craft/webmagic/commit/352887870c15a1601288508a1840c925576f1961",
    "details": {
      "sha": "65ee7af8cf7e4d9f48b461ab6cb46897c8768f99",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/Spider.java",
      "status": "modified",
      "additions": 21,
      "deletions": 10,
      "changes": 31,
      "blob_url": "https://github.com/code4craft/webmagic/blob/352887870c15a1601288508a1840c925576f1961/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/352887870c15a1601288508a1840c925576f1961/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FSpider.java?ref=352887870c15a1601288508a1840c925576f1961",
      "patch": "@@ -74,6 +74,8 @@ public class Spider implements Runnable, Task {\n \n     protected AtomicInteger stat = new AtomicInteger(STAT_INIT);\n \n+    protected boolean exitWhenComplete = false;\n+\n     protected final static int STAT_INIT = 0;\n \n     protected final static int STAT_RUNNING = 1;\n@@ -240,7 +242,7 @@ public void run() {\n         while (!Thread.currentThread().isInterrupted() && stat.get() == STAT_RUNNING) {\n             Request request = scheduler.poll(this);\n             if (request == null) {\n-                if (threadAlive.get() == 0) {\n+                if (threadAlive.get() == 0 && exitWhenComplete) {\n                     break;\n                 }\n                 // when no request found but some thread is alive, sleep a\n@@ -258,7 +260,7 @@ public void run() {\n                         try {\n                             processRequest(requestFinal);\n                         } catch (Exception e) {\n-                            logger.error(\"download \"+requestFinal+\" error\",e);\n+                            logger.error(\"download \" + requestFinal + \" error\", e);\n                         } finally {\n                             threadAlive.decrementAndGet();\n                         }\n@@ -372,20 +374,12 @@ public void start() {\n \n     public void stop() {\n         if (stat.compareAndSet(STAT_RUNNING, STAT_STOPPED)) {\n-            if (executorService != null) {\n-                executorService.shutdown();\n-            }\n             logger.info(\"Spider \" + getUUID() + \" stop success!\");\n         } else {\n             logger.info(\"Spider \" + getUUID() + \" stop fail!\");\n         }\n     }\n \n-    public void stopAndDestroy() {\n-        stop();\n-        destroy();\n-    }\n-\n     /**\n      * start with more than one threads\n      *\n@@ -413,6 +407,23 @@ public static void xsoupOff() {\n         EnvironmentUtil.setUseXsoup(false);\n     }\n \n+    public boolean isExitWhenComplete() {\n+        return exitWhenComplete;\n+    }\n+\n+    /**\n+     * Exit when complete. <br/>\n+     * True: exit when all url of the site is downloaded. <br/>\n+     * False: not exit until call stop manually.<br/>\n+     *\n+     * @param exitWhenComplete\n+     * @return\n+     */\n+    public Spider setExitWhenComplete(boolean exitWhenComplete) {\n+        this.exitWhenComplete = exitWhenComplete;\n+        return this;\n+    }\n+\n     @Override\n     public String getUUID() {\n         if (uuid != null) {",
      "parent_sha": "a3f9ad198f18cc58a6dd46a2f92d8bfb9c0ab397"
    }
  },
  {
    "oid": "adf545483797392333135a3d7900b31b71110d9d",
    "message": "[Fix] \u4fee\u6b63\u9519\u8bef\u65b9\u6cd5\u540d",
    "date": "2017-11-30T03:35:12Z",
    "url": "https://github.com/code4craft/webmagic/commit/adf545483797392333135a3d7900b31b71110d9d",
    "details": {
      "sha": "ee04f35cf4cfea027e485da09fcf68a916792224",
      "filename": "webmagic-extension/src/main/java/us/codecraft/webmagic/scheduler/RedisScheduler.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/code4craft/webmagic/blob/adf545483797392333135a3d7900b31b71110d9d/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FRedisScheduler.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/adf545483797392333135a3d7900b31b71110d9d/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FRedisScheduler.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FRedisScheduler.java?ref=adf545483797392333135a3d7900b31b71110d9d",
      "patch": "@@ -61,7 +61,7 @@ protected void pushWhenNoDuplicate(Request request, Task task) {\n         Jedis jedis = pool.getResource();\n         try {\n             jedis.rpush(getQueueKey(task), request.getUrl());\n-            if (CheckForAdditionalInfo(request)) {\n+            if (checkForAdditionalInfo(request)) {\n                 String field = DigestUtils.shaHex(request.getUrl());\n                 String value = JSON.toJSONString(request);\n                 jedis.hset((ITEM_PREFIX + task.getUUID()), field, value);\n@@ -71,7 +71,7 @@ protected void pushWhenNoDuplicate(Request request, Task task) {\n         }\n     }\n \n-    private boolean CheckForAdditionalInfo(Request request) {\n+    private boolean checkForAdditionalInfo(Request request) {\n         if (request == null) {\n             return false;\n         }",
      "parent_sha": "266083fa074819232a02d359566be81ff687da87"
    }
  },
  {
    "oid": "b51fb2696b85b2867c1dcf7dd852df4f0425977d",
    "message": "update ut for cookie",
    "date": "2013-12-05T16:30:01Z",
    "url": "https://github.com/code4craft/webmagic/commit/b51fb2696b85b2867c1dcf7dd852df4f0425977d",
    "details": {
      "sha": "b371f3fbfc9ff4474499a6dddb3b707f72acd6df",
      "filename": "webmagic-core/src/test/java/us/codecraft/webmagic/downloader/HttpClientDownloaderTest.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/code4craft/webmagic/blob/b51fb2696b85b2867c1dcf7dd852df4f0425977d/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloaderTest.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/b51fb2696b85b2867c1dcf7dd852df4f0425977d/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloaderTest.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Ftest%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloaderTest.java?ref=b51fb2696b85b2867c1dcf7dd852df4f0425977d",
      "patch": "@@ -18,7 +18,7 @@ public class HttpClientDownloaderTest {\n     @Ignore\n     @Test\n     public void testCookie() {\n-        Site site = Site.me().setDomain(\"www.diandian.com\").addCookie(\"t\", \"yct7q7e6v319wpg4cpxqduu5m77lcgix\");\n+        Site site = Site.me().setDomain(\"www.diandian.com\").addCookie(\"t\", \"43ztv9srfszl99yxv2aumx3zr7el7ybb\");\n         HttpClientDownloader httpClientDownloader = new HttpClientDownloader();\n         Page download = httpClientDownloader.download(new Request(\"http://www.diandian.com\"), site.toTask());\n         Assert.assertTrue(download.getHtml().toString().contains(\"flashsword30\"));",
      "parent_sha": "ff2f588c4164a768488e6bae70ad71f898327822"
    }
  },
  {
    "oid": "bd1384a5134c08ec690650e1ee10cefe1d961170",
    "message": "remove samples",
    "date": "2013-08-07T06:18:58Z",
    "url": "https://github.com/code4craft/webmagic/commit/bd1384a5134c08ec690650e1ee10cefe1d961170",
    "details": {
      "sha": "dfff0c6c2d20a8faa05db855cc3273760fca1a34",
      "filename": "webmagic-samples/src/main/java/us/codecraft/webmagic/samples/selenium/HuabanProcessor.java",
      "status": "renamed",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/code4craft/webmagic/blob/bd1384a5134c08ec690650e1ee10cefe1d961170/webmagic-samples%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fsamples%2Fselenium%2FHuabanProcessor.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/bd1384a5134c08ec690650e1ee10cefe1d961170/webmagic-samples%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fsamples%2Fselenium%2FHuabanProcessor.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-samples%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fsamples%2Fselenium%2FHuabanProcessor.java?ref=bd1384a5134c08ec690650e1ee10cefe1d961170",
      "patch": "@@ -1,4 +1,4 @@\n-package us.codecraft.webmagic.samples;\n+package us.codecraft.webmagic.samples.selenium;\n \n import us.codecraft.webmagic.Page;\n import us.codecraft.webmagic.Site;",
      "previous_filename": "webmagic-samples/src/main/java/us/codecraft/webmagic/samples/HuabanProcessor.java",
      "parent_sha": "46c65f19c773aac1f11e7a689b4b28486166dcbe"
    }
  },
  {
    "oid": "42a172729e87b220bb6b9e6454b2b9e4036a1a43",
    "message": "Remove useless modifier.",
    "date": "2024-12-22T08:49:07Z",
    "url": "https://github.com/code4craft/webmagic/commit/42a172729e87b220bb6b9e6454b2b9e4036a1a43",
    "details": {
      "sha": "94b00cc73e3c91bb039261ea7491bdc685e161d3",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientGenerator.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/code4craft/webmagic/blob/42a172729e87b220bb6b9e6454b2b9e4036a1a43/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientGenerator.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/42a172729e87b220bb6b9e6454b2b9e4036a1a43/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientGenerator.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientGenerator.java?ref=42a172729e87b220bb6b9e6454b2b9e4036a1a43",
      "patch": "@@ -36,7 +36,7 @@\n  */\n public class HttpClientGenerator {\n \n-    private transient Logger logger = LoggerFactory.getLogger(getClass());\n+    private Logger logger = LoggerFactory.getLogger(getClass());\n \n     private PoolingHttpClientConnectionManager connectionManager;\n ",
      "parent_sha": "b1cf7ae4554e47b64b49b7e1827d731ea71a4cc8"
    }
  },
  {
    "oid": "b4b1df85a089e3f0321036c2eb5230a7ad8aa4f2",
    "message": "Fix TLSv1.3. Maybe we should expose a API to allow user to use  org.apache.http.ssl.SSLContextBuilder. Fixes #948.",
    "date": "2020-09-21T09:48:59Z",
    "url": "https://github.com/code4craft/webmagic/commit/b4b1df85a089e3f0321036c2eb5230a7ad8aa4f2",
    "details": {
      "sha": "80e0f1085f36d5d77756f3bfeb34ed9e66ad50ba",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientGenerator.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/code4craft/webmagic/blob/b4b1df85a089e3f0321036c2eb5230a7ad8aa4f2/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientGenerator.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/b4b1df85a089e3f0321036c2eb5230a7ad8aa4f2/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientGenerator.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientGenerator.java?ref=b4b1df85a089e3f0321036c2eb5230a7ad8aa4f2",
      "patch": "@@ -96,7 +96,7 @@ public X509Certificate[] getAcceptedIssuers() {\n \n         };\n \n-        SSLContext sc = SSLContext.getInstance(\"SSLv3\");\n+        SSLContext sc = SSLContext.getInstance(\"TLS\");\n         sc.init(null, new TrustManager[] { trustManager }, null);\n         return sc;\n \t}",
      "parent_sha": "94ac7ca3b635d82a424f7d7de64c3fbe71e1ab78"
    }
  },
  {
    "oid": "436af973465797f3a2e865cce4bf6d1b0701362e",
    "message": "Use spaces as indent.",
    "date": "2020-05-28T05:59:05Z",
    "url": "https://github.com/code4craft/webmagic/commit/436af973465797f3a2e865cce4bf6d1b0701362e",
    "details": {
      "sha": "9c38916566fa56da180e4a5c6ae6be56feb0a6fb",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientGenerator.java",
      "status": "modified",
      "additions": 30,
      "deletions": 30,
      "changes": 60,
      "blob_url": "https://github.com/code4craft/webmagic/blob/436af973465797f3a2e865cce4bf6d1b0701362e/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientGenerator.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/436af973465797f3a2e865cce4bf6d1b0701362e/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientGenerator.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientGenerator.java?ref=436af973465797f3a2e865cce4bf6d1b0701362e",
      "patch": "@@ -34,9 +34,9 @@\n  * @since 0.4.0\n  */\n public class HttpClientGenerator {\n-\t\n+\n \tprivate transient Logger logger = LoggerFactory.getLogger(getClass());\n-\t\n+\n     private PoolingHttpClientConnectionManager connectionManager;\n \n     public HttpClientGenerator() {\n@@ -48,43 +48,43 @@ public HttpClientGenerator() {\n         connectionManager.setDefaultMaxPerRoute(100);\n     }\n \n-\tprivate SSLConnectionSocketFactory buildSSLConnectionSocketFactory() {\n-\t\ttry {\n+    private SSLConnectionSocketFactory buildSSLConnectionSocketFactory() {\n+        try {\n             return new SSLConnectionSocketFactory(createIgnoreVerifySSL(), new String[]{\"SSLv3\", \"TLSv1\", \"TLSv1.1\", \"TLSv1.2\", \"TLSv1.3\"},\n                     null,\n                     new DefaultHostnameVerifier()); // \u4f18\u5148\u7ed5\u8fc7\u5b89\u5168\u8bc1\u4e66\n-\t\t} catch (KeyManagementException e) {\n+        } catch (KeyManagementException e) {\n             logger.error(\"ssl connection fail\", e);\n         } catch (NoSuchAlgorithmException e) {\n             logger.error(\"ssl connection fail\", e);\n         }\n-\t\treturn SSLConnectionSocketFactory.getSocketFactory();\n+        return SSLConnectionSocketFactory.getSocketFactory();\n \t}\n \n-\tprivate SSLContext createIgnoreVerifySSL() throws NoSuchAlgorithmException, KeyManagementException {\n-\t\t// \u5b9e\u73b0\u4e00\u4e2aX509TrustManager\u63a5\u53e3\uff0c\u7528\u4e8e\u7ed5\u8fc7\u9a8c\u8bc1\uff0c\u4e0d\u7528\u4fee\u6539\u91cc\u9762\u7684\u65b9\u6cd5\n-\t\tX509TrustManager trustManager = new X509TrustManager() {\n-\n-\t\t\t@Override\n-\t\t\tpublic void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException {\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException {\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic X509Certificate[] getAcceptedIssuers() {\n-\t\t\t\treturn null;\n-\t\t\t}\n-\t\t\t\n-\t\t};\n-\t\t\n-\t\tSSLContext sc = SSLContext.getInstance(\"SSLv3\");\n-\t\tsc.init(null, new TrustManager[] { trustManager }, null);\n-\t\treturn sc;\n+    private SSLContext createIgnoreVerifySSL() throws NoSuchAlgorithmException, KeyManagementException {\n+        // \u5b9e\u73b0\u4e00\u4e2aX509TrustManager\u63a5\u53e3\uff0c\u7528\u4e8e\u7ed5\u8fc7\u9a8c\u8bc1\uff0c\u4e0d\u7528\u4fee\u6539\u91cc\u9762\u7684\u65b9\u6cd5\n+        X509TrustManager trustManager = new X509TrustManager() {\n+\n+            @Override\n+            public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException {\n+            }\n+\n+            @Override\n+            public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException {\n+            }\n+\n+            @Override\n+            public X509Certificate[] getAcceptedIssuers() {\n+                return null;\n+            }\n+\n+        };\n+\n+        SSLContext sc = SSLContext.getInstance(\"SSLv3\");\n+        sc.init(null, new TrustManager[] { trustManager }, null);\n+        return sc;\n \t}\n-    \n+\n     public HttpClientGenerator setPoolSize(int poolSize) {\n         connectionManager.setMaxTotal(poolSize);\n         return this;\n@@ -96,7 +96,7 @@ public CloseableHttpClient getClient(Site site) {\n \n     private CloseableHttpClient generateClient(Site site) {\n         HttpClientBuilder httpClientBuilder = HttpClients.custom();\n-        \n+\n         httpClientBuilder.setConnectionManager(connectionManager);\n         if (site.getUserAgent() != null) {\n             httpClientBuilder.setUserAgent(site.getUserAgent());",
      "parent_sha": "ba1b4017a7399d7fa073b309d5376e5f3463214d"
    }
  },
  {
    "oid": "c93a8a27227defa82788783ca012e60dbd2a5014",
    "message": "\u4fee\u590d\u5b57\u7b26\u7f16\u7801\u68c0\u6d4bBUG",
    "date": "2017-03-31T10:27:18Z",
    "url": "https://github.com/code4craft/webmagic/commit/c93a8a27227defa82788783ca012e60dbd2a5014",
    "details": {
      "sha": "ccf00a466f5b2063685770b7c852c61115687560",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/utils/CharsetUtils.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/code4craft/webmagic/blob/c93a8a27227defa82788783ca012e60dbd2a5014/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Futils%2FCharsetUtils.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/c93a8a27227defa82788783ca012e60dbd2a5014/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Futils%2FCharsetUtils.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Futils%2FCharsetUtils.java?ref=c93a8a27227defa82788783ca012e60dbd2a5014",
      "patch": "@@ -26,7 +26,7 @@ public static String detectCharset(String contentType, byte[] contentBytes) thro\n         // charset\n         // 1\u3001encoding in http header Content-Type\n         charset = UrlUtils.getCharset(contentType);\n-        if (StringUtils.isNotBlank(contentType)) {\n+        if (StringUtils.isNotBlank(contentType) && StringUtils.isNotBlank(charset)) {\n             logger.debug(\"Auto get charset: {}\", charset);\n             return charset;\n         }",
      "parent_sha": "1c24baa8d12e27e311527a09c569f9b425d8b5f0"
    }
  },
  {
    "oid": "9cc5287743de9715ec3ac10a20636377be41d060",
    "message": "\u7b80\u5316\u4ee3\u7801",
    "date": "2020-12-21T06:58:01Z",
    "url": "https://github.com/code4craft/webmagic/commit/9cc5287743de9715ec3ac10a20636377be41d060",
    "details": {
      "sha": "5684114e7f3a94a457e22bfb00646134a17c00c6",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java",
      "status": "modified",
      "additions": 10,
      "deletions": 13,
      "changes": 23,
      "blob_url": "https://github.com/code4craft/webmagic/blob/9cc5287743de9715ec3ac10a20636377be41d060/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/9cc5287743de9715ec3ac10a20636377be41d060/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java?ref=9cc5287743de9715ec3ac10a20636377be41d060",
      "patch": "@@ -32,24 +32,21 @@\n  */\n public class HttpClientDownloader extends AbstractDownloader {\n \n-    private Logger logger = LoggerFactory.getLogger(getClass());\n-\n     private final Map<String, CloseableHttpClient> httpClients = new HashMap<String, CloseableHttpClient>();\n-\n-    private HttpClientGenerator httpClientGenerator = new HttpClientGenerator();\n+    private final Logger logger = LoggerFactory.getLogger(getClass());\n+    private final HttpClientGenerator httpClientGenerator = new HttpClientGenerator();\n \n     private HttpUriRequestConverter httpUriRequestConverter = new HttpUriRequestConverter();\n-    \n+\n     private ProxyProvider proxyProvider;\n \n-    private boolean responseHeader = true;\n+    private final boolean responseHeader = true;\n \n-    private volatile boolean refreshProxyOnError = false;\n \n-    private Predicate<Throwable> throwablePredicate = t->false;\n+    private Predicate<Throwable> refreshProxyOnError = t -> false;\n \n-    public void setThrowablePredicate(Predicate<Throwable> predicate){\n-        this.throwablePredicate = predicate;\n+    public void setRefreshProxyOnError(Predicate<Throwable> proxyOnError) {\n+        this.refreshProxyOnError = refreshProxyOnError;\n     }\n \n     public void setHttpUriRequestConverter(HttpUriRequestConverter httpUriRequestConverter) {\n@@ -96,8 +93,8 @@ public Page download(Request request, Task task) {\n             return page;\n         } catch (IOException e) {\n             logger.warn(\"download page {} error\", request.getUrl(), e);\n-            onError(request,e,proxyProvider);\n-            if(proxyProvider != null && refreshProxyOnError && throwablePredicate.test(e)){\n+            onError(request, e, proxyProvider);\n+            if (proxyProvider != null  && refreshProxyOnError.test(e)) {\n                 proxyProvider.refreshProxy(task);\n             }\n             return page;\n@@ -122,7 +119,7 @@ protected Page handleResponse(Request request, String charset, HttpResponse http\n         String contentType = httpResponse.getEntity().getContentType() == null ? \"\" : httpResponse.getEntity().getContentType().getValue();\n         Page page = new Page();\n         page.setBytes(bytes);\n-        if (!request.isBinaryContent()){\n+        if (!request.isBinaryContent()) {\n             if (charset == null) {\n                 charset = getHtmlCharset(contentType, bytes);\n             }",
      "parent_sha": "4a6441e7c5923c14d889c7f54af0ef15e5a05cb9"
    }
  },
  {
    "oid": "d1f2e65e5d798936e535ceb809671133185c25d9",
    "message": "\u65b0\u589ePhantomJSDownloader\u6784\u9020\u51fd\u6570\uff0c\u652f\u6301crawl.js\u8def\u5f84\u81ea\u5b9a\u4e49\uff0c\u56e0\u4e3a\u5f53\u5176\u4ed6\u9879\u76ee\u4f9d\u8d56\u6b64jar\u5305\u65f6\uff0cruntime.exec()\u6267\u884cphantomjs\u547d\u4ee4\u65f6\u65e0\u4f7f\u7528\u6cd5jar\u5305\u4e2d\u7684crawl.js",
    "date": "2016-12-08T06:28:48Z",
    "url": "https://github.com/code4craft/webmagic/commit/d1f2e65e5d798936e535ceb809671133185c25d9",
    "details": {
      "sha": "bea44fd9355398c8b1d25fed61d3531eae1d0a28",
      "filename": "webmagic-extension/src/main/java/us/codecraft/webmagic/downloader/PhantomJSDownloader.java",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/code4craft/webmagic/blob/d1f2e65e5d798936e535ceb809671133185c25d9/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FPhantomJSDownloader.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/d1f2e65e5d798936e535ceb809671133185c25d9/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FPhantomJSDownloader.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-extension%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FPhantomJSDownloader.java?ref=d1f2e65e5d798936e535ceb809671133185c25d9",
      "patch": "@@ -44,6 +44,11 @@ public PhantomJSDownloader(String phantomJsCommand) {\n         PhantomJSDownloader.phantomJsCommand = phantomJsCommand;\n     }\n     \n+    public PhantomJSDownloader(String phantomJsCommand, String crawlJsPath) {\n+      PhantomJSDownloader.phantomJsCommand = phantomJsCommand;\n+      PhantomJSDownloader.crawlJsPath = crawlJsPath;\n+    }\n+    \n     private void initPhantomjsCrawlPath() {\n         PhantomJSDownloader.crawlJsPath = new File(this.getClass().getResource(\"/\").getPath()).getPath() + System.getProperty(\"file.separator\") + \"crawl.js \";\n     }\n@@ -86,7 +91,7 @@ protected String getPage(Request request) {\n         try {\n             String url = request.getUrl();\n             Runtime runtime = Runtime.getRuntime();\n-            Process process = runtime.exec(phantomJsCommand + \" \" + crawlJsPath + url);\n+            Process process = runtime.exec(phantomJsCommand + \" \" + crawlJsPath + \" \" + url);\n             InputStream is = process.getInputStream();\n             BufferedReader br = new BufferedReader(new InputStreamReader(is));\n             StringBuffer stringBuffer = new StringBuffer();",
      "parent_sha": "f8a2328ead78f4bc3d6c711e02aee993566a4065"
    }
  },
  {
    "oid": "7c20290ce4be0c642e9bd02edb82d235e39b761c",
    "message": "Refactor addTargetRequests method to eliminate redundant code. (#1138)",
    "date": "2023-11-26T02:56:06Z",
    "url": "https://github.com/code4craft/webmagic/commit/7c20290ce4be0c642e9bd02edb82d235e39b761c",
    "details": {
      "sha": "17f8b03dda1d56e33e7e3d28008291314f0ba3b9",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/Page.java",
      "status": "modified",
      "additions": 27,
      "deletions": 14,
      "changes": 41,
      "blob_url": "https://github.com/code4craft/webmagic/blob/7c20290ce4be0c642e9bd02edb82d235e39b761c/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FPage.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/7c20290ce4be0c642e9bd02edb82d235e39b761c/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FPage.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2FPage.java?ref=7c20290ce4be0c642e9bd02edb82d235e39b761c",
      "patch": "@@ -49,7 +49,7 @@ public class Page {\n \n     private byte[] bytes;\n \n-    private List<Request> targetRequests = new ArrayList<Request>();\n+    private List<Request> targetRequests = new ArrayList<>();\n \n     private String charset;\n \n@@ -142,13 +142,7 @@ public List<Request> getTargetRequests() {\n      * @param requests requests\n      */\n     public void addTargetRequests(Iterable<String> requests) {\n-        for (String s : requests) {\n-            if (StringUtils.isBlank(s) || s.equals(\"#\") || s.startsWith(\"javascript:\")) {\n-                continue;\n-            }\n-            s = UrlUtils.canonicalizeUrl(s, url.toString());\n-            targetRequests.add(new Request(s));\n-        }\n+    \taddTargetRequests(requests, 0); // Default priority is 0\n     }\n \n     /**\n@@ -158,13 +152,32 @@ public void addTargetRequests(Iterable<String> requests) {\n      * @param priority priority\n      */\n     public void addTargetRequests(Iterable<String> requests, long priority) {\n-        for (String s : requests) {\n-            if (StringUtils.isBlank(s) || s.equals(\"#\") || s.startsWith(\"javascript:\")) {\n-                continue;\n-            }\n-            s = UrlUtils.canonicalizeUrl(s, url.toString());\n-            targetRequests.add(new Request(s).setPriority(priority));\n+    \tif(requests == null) {\n+    \t\treturn;\n+    \t}\n+    \t\n+        for (String req : requests) {\n+        \taddRequestIfValid(req, priority);\n+        }\n+    }\n+    \n+    /**\n+     * Helper method to add a request if it's valid.\n+     *\n+     * @param url      URL to add\n+     * @param priority Priority for the URL\n+     */\n+    private void addRequestIfValid(String url, long priority) {\n+        if (StringUtils.isBlank(url) || url.equals(\"#\") || url.startsWith(\"javascript:\")) {\n+            return;\n+        }\n+\n+        String canonicalizedUrl = UrlUtils.canonicalizeUrl(url, this.url.toString());\n+        Request req = new Request(canonicalizedUrl);\n+        if(priority > 0) {\n+            req.setPriority(priority);\n         }\n+        targetRequests.add(req);\n     }\n \n     /**",
      "parent_sha": "a9111040763f1c078e67e5d4d2434fce9992ed5a"
    }
  },
  {
    "oid": "5751681c9126e3c9ea1daeece2dc3eba10a281e7",
    "message": "Common the downloader status process and pass error information when onError",
    "date": "2022-10-01T09:34:02Z",
    "url": "https://github.com/code4craft/webmagic/commit/5751681c9126e3c9ea1daeece2dc3eba10a281e7",
    "details": {
      "sha": "ab5314073628b0c5c627b0cab31d41eeecdf71c8",
      "filename": "webmagic-samples/src/main/java/us/codecraft/webmagic/samples/PhantomJSPageProcessor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/code4craft/webmagic/blob/5751681c9126e3c9ea1daeece2dc3eba10a281e7/webmagic-samples%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fsamples%2FPhantomJSPageProcessor.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/5751681c9126e3c9ea1daeece2dc3eba10a281e7/webmagic-samples%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fsamples%2FPhantomJSPageProcessor.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-samples%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fsamples%2FPhantomJSPageProcessor.java?ref=5751681c9126e3c9ea1daeece2dc3eba10a281e7",
      "patch": "@@ -36,7 +36,7 @@ public Site getSite() {\n     }\n \n     public static void main(String[] args) throws Exception {\n-        PhantomJSDownloader phantomDownloader = new PhantomJSDownloader().setRetryNum(3);\n+        PhantomJSDownloader phantomDownloader = new PhantomJSDownloader();\n \n         CollectorPipeline<ResultItems> collectorPipeline = new ResultItemsCollectorPipeline();\n ",
      "parent_sha": "7a62a6cb45b02466bc343ad7c7d1984e6f831594"
    }
  },
  {
    "oid": "3669e73e4a6fe0d56010f76eb63f00281158188d",
    "message": "update News163: use Xsoup 0.2.0 syntax instead of ComboExtract",
    "date": "2014-04-09T08:43:55Z",
    "url": "https://github.com/code4craft/webmagic/commit/3669e73e4a6fe0d56010f76eb63f00281158188d",
    "details": {
      "sha": "45bee2f4cbcc35301de8645e75c04ffa44d399fe",
      "filename": "webmagic-samples/src/main/java/us/codecraft/webmagic/model/samples/News163.java",
      "status": "modified",
      "additions": 4,
      "deletions": 6,
      "changes": 10,
      "blob_url": "https://github.com/code4craft/webmagic/blob/3669e73e4a6fe0d56010f76eb63f00281158188d/webmagic-samples%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fmodel%2Fsamples%2FNews163.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/3669e73e4a6fe0d56010f76eb63f00281158188d/webmagic-samples%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fmodel%2Fsamples%2FNews163.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-samples%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fmodel%2Fsamples%2FNews163.java?ref=3669e73e4a6fe0d56010f76eb63f00281158188d",
      "patch": "@@ -3,7 +3,6 @@\n import us.codecraft.webmagic.MultiPageModel;\n import us.codecraft.webmagic.Site;\n import us.codecraft.webmagic.model.OOSpider;\n-import us.codecraft.webmagic.model.annotation.ComboExtract;\n import us.codecraft.webmagic.model.annotation.ExtractBy;\n import us.codecraft.webmagic.model.annotation.ExtractByUrl;\n import us.codecraft.webmagic.model.annotation.TargetUrl;\n@@ -26,9 +25,8 @@ public class News163 implements MultiPageModel {\n     @ExtractByUrl(value = \"http://news\\\\.163\\\\.com/\\\\d+/\\\\d+/\\\\d+/\\\\w+_(\\\\d+)\\\\.html\", notNull = false)\n     private String page;\n \n-    @ComboExtract(value = {@ExtractBy(\"//div[@class=\\\"ep-pages\\\"]//a/@href\"),\n-            @ExtractBy(value = \"http://news\\\\.163\\\\.com/\\\\d+/\\\\d+/\\\\d+/\\\\w+_(\\\\d+)\\\\.html\", type = ExtractBy.Type.Regex)},\n-            multi = true, notNull = false)\n+    @ExtractBy(value = \"//div[@class=\\\"ep-pages\\\"]//a/regex('http://news\\\\.163\\\\.com/\\\\d+/\\\\d+/\\\\d+/\\\\w+_(\\\\d+)\\\\.html',1)\"\n+            , multi = true, notNull = false)\n     private List<String> otherPage;\n \n     @ExtractBy(\"//h1[@id=\\\"h1title\\\"]/text()\")\n@@ -74,8 +72,8 @@ public String toString() {\n     }\n \n     public static void main(String[] args) {\n-        OOSpider.create(Site.me().addStartUrl(\"http://news.163.com/13/0802/05/958I1E330001124J_2.html\"), News163.class)\n-                .scheduler(new RedisScheduler(\"localhost\")).clearPipeline().pipeline(new MultiPagePipeline()).pipeline(new ConsolePipeline()).run();\n+        OOSpider.create(Site.me(), News163.class).addUrl(\"http://news.163.com/13/0802/05/958I1E330001124J_2.html\")\n+                .scheduler(new RedisScheduler(\"localhost\")).addPipeline(new MultiPagePipeline()).addPipeline(new ConsolePipeline()).run();\n     }\n \n }",
      "parent_sha": "02b441ad38e11cc8e23ca68010a0437f71f70f7d"
    }
  },
  {
    "oid": "4915431845ac035bc5b9379c809edfb4a0f19603",
    "message": "Revise logging level from warn to info, as we have passed the exception to onError. refs #1094",
    "date": "2022-11-15T14:48:02Z",
    "url": "https://github.com/code4craft/webmagic/commit/4915431845ac035bc5b9379c809edfb4a0f19603",
    "details": {
      "sha": "72821f3c1bf0acfb65de32ef968a5e8aee6a5fec",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/code4craft/webmagic/blob/4915431845ac035bc5b9379c809edfb4a0f19603/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/4915431845ac035bc5b9379c809edfb4a0f19603/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fdownloader%2FHttpClientDownloader.java?ref=4915431845ac035bc5b9379c809edfb4a0f19603",
      "patch": "@@ -82,12 +82,16 @@ public Page download(Request request, Task task) {\n         try {\n             httpResponse = httpClient.execute(requestContext.getHttpUriRequest(), requestContext.getHttpClientContext());\n             page = handleResponse(request, request.getCharset() != null ? request.getCharset() : task.getSite().getCharset(), httpResponse, task);\n+\n             onSuccess(request, task);\n             logger.info(\"downloading page success {}\", request.getUrl());\n+\n             return page;\n         } catch (IOException e) {\n-            logger.warn(\"download page {} error\", request.getUrl(), e);\n+\n             onError(request, task, e);\n+            logger.info(\"download page {} error\", request.getUrl(), e);\n+\n             return page;\n         } finally {\n             if (httpResponse != null) {",
      "parent_sha": "075b98291bbc920fb3d49957778e633bb9a3d205"
    }
  },
  {
    "oid": "f63d33b457fadf16ab6e65d03b7224eacfbccb17",
    "message": "update some comments",
    "date": "2013-11-27T13:06:53Z",
    "url": "https://github.com/code4craft/webmagic/commit/f63d33b457fadf16ab6e65d03b7224eacfbccb17",
    "details": {
      "sha": "927c64789649fe1e3980487948c23d05fabd6e4f",
      "filename": "webmagic-core/src/main/java/us/codecraft/webmagic/scheduler/Scheduler.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/code4craft/webmagic/blob/f63d33b457fadf16ab6e65d03b7224eacfbccb17/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FScheduler.java",
      "raw_url": "https://github.com/code4craft/webmagic/raw/f63d33b457fadf16ab6e65d03b7224eacfbccb17/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FScheduler.java",
      "contents_url": "https://api.github.com/repos/code4craft/webmagic/contents/webmagic-core%2Fsrc%2Fmain%2Fjava%2Fus%2Fcodecraft%2Fwebmagic%2Fscheduler%2FScheduler.java?ref=f63d33b457fadf16ab6e65d03b7224eacfbccb17",
      "patch": "@@ -23,10 +23,10 @@ public interface Scheduler {\n     public void push(Request request, Task task);\n \n     /**\n-     * \u8fd4\u56de\u4e0b\u4e00\u4e2a\u8981\u6293\u53d6\u7684\u94fe\u63a5\n+     * get an url to crawl\n      *\n-     * @param task \u5b9a\u4e49\u7684\u4efb\u52a1\uff0c\u4ee5\u6ee1\u8db3\u5355Scheduler\u591aTask\u7684\u60c5\u51b5\n-     * @return \u4e0b\u4e00\u4e2a\u8981\u6293\u53d6\u7684\u94fe\u63a5\n+     * @param task the task of spider\n+     * @return the url to crawl\n      */\n     public Request poll(Task task);\n ",
      "parent_sha": "04fcf3193f541a5190cc194e08c0c796677cbaad"
    }
  }
]