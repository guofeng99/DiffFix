[
  {
    "oid": "70870506f4fe964c69ebba0896f7c19eb1e2b753",
    "message": "Improved the error diagnostics if the connection fails - Kohsuke\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@8989 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2008-05-01T01:23:03Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/70870506f4fe964c69ebba0896f7c19eb1e2b753",
    "details": {
      "sha": "04a2957fa0c84b94df09ae742bb36db096402777",
      "filename": "jnlp-agent/src/main/java/hudson/jnlp/Engine.java",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/70870506f4fe964c69ebba0896f7c19eb1e2b753/jnlp-agent%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fjnlp%2FEngine.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/70870506f4fe964c69ebba0896f7c19eb1e2b753/jnlp-agent%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fjnlp%2FEngine.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/jnlp-agent%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fjnlp%2FEngine.java?ref=70870506f4fe964c69ebba0896f7c19eb1e2b753",
      "patch": "@@ -38,9 +38,12 @@ public void run() {\n                 HttpURLConnection con = (HttpURLConnection)new URL(hudsonUrl).openConnection();\n                 con.connect();\n                 String port = con.getHeaderField(\"X-Hudson-JNLP-Port\");\n-                if(con.getResponseCode()!=200\n-                || port ==null) {\n-                    listener.error(new Exception(hudsonUrl+\" is not Hudson: \"+con.getResponseMessage()));\n+                if(con.getResponseCode()!=200) {\n+                    listener.error(new Exception(hudsonUrl+\" is invalid: \"+con.getResponseCode()+\" \"+con.getResponseMessage()));\n+                    return;\n+                }\n+                if(port ==null) {\n+                    listener.error(new Exception(hudsonUrl+\" is not Hudson: \"));\n                     return;\n                 }\n ",
      "parent_sha": "3e3ebd1cfb626c0864c3739465b2c2a972b6257d"
    }
  },
  {
    "oid": "776008c8c4c02537f54b667487ab4261645fbc63",
    "message": "Fixed boundary check error, and made variable names clearer.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@37113 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2010-11-26T14:23:44Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/776008c8c4c02537f54b667487ab4261645fbc63",
    "details": {
      "sha": "0318247aaf4c223f0d07598aab934ca9c0c9267c",
      "filename": "core/src/main/java/hudson/tasks/MailSender.java",
      "status": "modified",
      "additions": 13,
      "deletions": 10,
      "changes": 23,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/776008c8c4c02537f54b667487ab4261645fbc63/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Ftasks%2FMailSender.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/776008c8c4c02537f54b667487ab4261645fbc63/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Ftasks%2FMailSender.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Ftasks%2FMailSender.java?ref=776008c8c4c02537f54b667487ab4261645fbc63",
      "patch": "@@ -358,20 +358,23 @@ private MimeMessage createEmptyMail(AbstractBuild<?, ?> build, BuildListener lis\n         return msg;\n     }\n \n-    private void includeCulpritsOf(AbstractProject upstreamBuild, AbstractBuild<?, ?> currentBuild, BuildListener listener, Set<InternetAddress> recipientList) throws AddressException {\n-        AbstractBuild<?,?> pb = currentBuild.getPreviousBuild();\n-        AbstractBuild<?,?> ub = currentBuild.getUpstreamRelationshipBuild(upstreamBuild);\n-        AbstractBuild<?,?> upb = pb!=null ? pb.getUpstreamRelationshipBuild(upstreamBuild) : null;\n-        if(pb==null && ub==null && upb==null) {\n-            listener.getLogger().println(\"Unable to compute the changesets in \"+ upstreamBuild +\". Is the fingerprint configured?\");\n+    private void includeCulpritsOf(AbstractProject upstreamProject, AbstractBuild<?, ?> currentBuild, BuildListener listener, Set<InternetAddress> recipientList) throws AddressException {\n+        AbstractBuild<?,?> upstreamBuild = currentBuild.getUpstreamRelationshipBuild(upstreamProject);\n+        AbstractBuild<?,?> previousBuild = currentBuild.getPreviousBuild();\n+        AbstractBuild<?,?> previousBuildUpstreamBuild = previousBuild!=null ? previousBuild.getUpstreamRelationshipBuild(upstreamProject) : null;\n+        if(previousBuild==null && upstreamBuild==null && previousBuildUpstreamBuild==null) {\n+            listener.getLogger().println(\"Unable to compute the changesets in \"+ upstreamProject +\". Is the fingerprint configured?\");\n             return;\n         }\n-        if(pb==null || ub==null || upb==null) {\n-            listener.getLogger().println(\"Unable to compute the changesets in \"+ upstreamBuild);\n+        if(previousBuild==null || upstreamBuild==null || previousBuildUpstreamBuild==null) {\n+            listener.getLogger().println(\"Unable to compute the changesets in \"+ upstreamProject);\n             return;\n         }\n-        for( AbstractBuild<?,?> b=upb; b!=ub && b!=null; b=b.getNextBuild())\n-            recipientList.addAll(buildCulpritList(listener,b.getCulprits()));\n+        AbstractBuild<?,?> b=previousBuildUpstreamBuild;\n+        do {\n+            recipientList.addAll( buildCulpritList( listener, b.getCulprits() ) );\n+            b = b.getNextBuild();\n+        } while ( b != upstreamBuild && b != null );\n     }\n \n     private Set<InternetAddress> buildCulpritList(BuildListener listener, Set<User> culprits) throws AddressException {",
      "parent_sha": "dd833177b5395cfcd03231c1b3d99af7d4c01532"
    }
  },
  {
    "oid": "f914170e32aaa67c1734a003dcbdcf8e21e80b03",
    "message": "[JENKINS-62231] Adjust level depending on the case",
    "date": "2020-05-15T06:57:43Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/f914170e32aaa67c1734a003dcbdcf8e21e80b03",
    "details": {
      "sha": "9b07e31886401f66ca8921b90155c9731a69b864",
      "filename": "core/src/main/java/hudson/util/RobustReflectionConverter.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/f914170e32aaa67c1734a003dcbdcf8e21e80b03/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Futil%2FRobustReflectionConverter.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/f914170e32aaa67c1734a003dcbdcf8e21e80b03/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Futil%2FRobustReflectionConverter.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Futil%2FRobustReflectionConverter.java?ref=f914170e32aaa67c1734a003dcbdcf8e21e80b03",
      "patch": "@@ -376,11 +376,13 @@ public Object doUnmarshal(final Object result, final HierarchicalStreamReader re\n             } catch (Throwable t) {\n                 // it should be already reported, but we report with INFO just in case\n                 StringBuilder message = new StringBuilder(\"There was a problem reporting unmarshalling field errors\");\n+                Level level = Level.WARNING;\n                 if (t instanceof IllegalStateException && t.getMessage().contains(\"Expected 1 instance of \" + OldDataMonitor.class.getName())) {\n                     message.append(\". Make sure this code is executed after InitMilestone.EXTENSIONS_AUGMENTED stage, for example in Plugin#postInitialize instead of Plugin#start\");\n+                    level = Level.INFO; // it was reported when getting the singleton for OldDataMonitor\n                 }\n                 // it should be already reported, but we report with INFO just in case\n-                LOGGER.log(Level.INFO, message.toString(), t);\n+                LOGGER.log(level, message.toString(), t);\n             }\n             context.put(\"ReadError\", null);\n         }",
      "parent_sha": "a69a9a24e9b369fa9b54c008f0a9ca4f5c956cef"
    }
  },
  {
    "oid": "6724baca19cb0d9a51e01e0e3ad603f8adb85ae4",
    "message": "confirming this work around.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@22279 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2009-09-29T01:05:29Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/6724baca19cb0d9a51e01e0e3ad603f8adb85ae4",
    "details": {
      "sha": "bd5e9d0eaaba425d26dfd8f3f61232bca04c390f",
      "filename": "remoting/src/main/java/hudson/remoting/Launcher.java",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/6724baca19cb0d9a51e01e0e3ad603f8adb85ae4/remoting%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fremoting%2FLauncher.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/6724baca19cb0d9a51e01e0e3ad603f8adb85ae4/remoting%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fremoting%2FLauncher.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/remoting%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fremoting%2FLauncher.java?ref=6724baca19cb0d9a51e01e0e3ad603f8adb85ae4",
      "patch": "@@ -336,8 +336,7 @@ private void runWithStdinStdout() throws IOException, InterruptedException {\n                 WARNING: Stack unwind information not available. Following frames may be wrong.\n                 02f1f13c 6d99c844 java_6d3e0000!Java_sun_security_provider_NativeSeedGenerator_nativeGenerateSeed+0x6e\n              */\n-//            new SecureRandom().nextBoolean();\n-            ;\n+            new SecureRandom().nextBoolean();\n         }\n \n         // this will prevent programs from accidentally writing to System.out",
      "parent_sha": "2c4d2cd93432cbb2d48f81a8be85ab8d5041b0f6"
    }
  },
  {
    "oid": "9ccc2aea8591f27def6d4e340db731417118e96b",
    "message": "bug fixes in the JSON exposure.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@2972 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2007-04-08T15:13:28Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/9ccc2aea8591f27def6d4e340db731417118e96b",
    "details": {
      "sha": "fa221658611987d418b20218f3bb75357c888d1e",
      "filename": "core/src/main/java/hudson/model/Api.java",
      "status": "modified",
      "additions": 13,
      "deletions": 1,
      "changes": 14,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/9ccc2aea8591f27def6d4e340db731417118e96b/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FApi.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/9ccc2aea8591f27def6d4e340db731417118e96b/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FApi.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FApi.java?ref=9ccc2aea8591f27def6d4e340db731417118e96b",
      "patch": "@@ -12,12 +12,14 @@\n import java.io.IOException;\n import java.io.PrintWriter;\n import java.lang.reflect.Field;\n+import java.lang.reflect.Modifier;\n import java.net.URL;\n import java.util.Arrays;\n import java.util.Collection;\n import java.util.HashSet;\n import java.util.Map;\n import java.util.Set;\n+import java.util.Calendar;\n \n /**\n  * Used to expose remote access API for \".../api/\"\n@@ -101,7 +103,11 @@ private static class JSONSerializer {\n             String.class,\n             URL.class,\n             Boolean.class,\n-            Integer.class\n+            Integer.class,\n+            Short.class,\n+            Long.class,\n+            Float.class,\n+            Double.class\n         ));\n \n         public static void write(Object bean, JSONBuilder builder) {\n@@ -138,6 +144,10 @@ public static void write(Object bean, JSONBuilder builder) {\n                 }\n                 return;\n             }\n+            if(bean instanceof Calendar) {\n+                builder.value(((Calendar)bean).getTimeInMillis());\n+                return;\n+            }\n             if(bean instanceof Enum) {\n                 builder.value(bean);\n                 return;\n@@ -152,6 +162,8 @@ private static void writeBean(JSONBuilder builder, Object bean) {\n \n             for( Field f : bean.getClass().getFields() ) {\n                 try {\n+                    if(Modifier.isStatic(f.getModifiers()))\n+                        continue;\n                     f.setAccessible(true);\n                     Object value = f.get(bean);\n                     if(value!=null) {",
      "parent_sha": "339b9b869eaac155016a4e7dad4ddf0862d0854a"
    }
  },
  {
    "oid": "4a7684e568ad3799e7639a5217b5fb675e0c9fd0",
    "message": "Add test for basic exception.\n\nAnd clean up a few tests.",
    "date": "2020-01-14T20:27:10Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/4a7684e568ad3799e7639a5217b5fb675e0c9fd0",
    "details": {
      "sha": "d71fd2887bc87f16ca782c015325ec77a519924e",
      "filename": "test/src/test/java/jenkins/security/SuppressionFilterTest.java",
      "status": "modified",
      "additions": 51,
      "deletions": 12,
      "changes": 63,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/4a7684e568ad3799e7639a5217b5fb675e0c9fd0/test%2Fsrc%2Ftest%2Fjava%2Fjenkins%2Fsecurity%2FSuppressionFilterTest.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/4a7684e568ad3799e7639a5217b5fb675e0c9fd0/test%2Fsrc%2Ftest%2Fjava%2Fjenkins%2Fsecurity%2FSuppressionFilterTest.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/test%2Fsrc%2Ftest%2Fjava%2Fjenkins%2Fsecurity%2FSuppressionFilterTest.java?ref=4a7684e568ad3799e7639a5217b5fb675e0c9fd0",
      "patch": "@@ -24,14 +24,19 @@\n package jenkins.security;\n \n import com.gargoylesoftware.htmlunit.Page;\n+import com.gargoylesoftware.htmlunit.html.HtmlPage;\n+import hudson.model.FreeStyleProject;\n+import hudson.model.ItemGroup;\n+import hudson.model.TopLevelItemDescriptor;\n import hudson.model.User;\n import jenkins.model.Jenkins;\n import org.junit.Before;\n import org.junit.Rule;\n import org.junit.Test;\n import org.jvnet.hudson.test.JenkinsRule;\n import org.jvnet.hudson.test.MockAuthorizationStrategy;\n-import org.kohsuke.stapler.Dispatcher;\n+\n+import java.io.IOException;\n \n import static org.hamcrest.CoreMatchers.containsString;\n import static org.hamcrest.CoreMatchers.not;\n@@ -51,12 +56,12 @@ public void setup() {\n     public void authenticationException() throws Exception {\n         j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n         j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\"));\n-        User alice = User.get(\"alice\");\n+        User alice = User.getById(\"alice\", true);\n         JenkinsRule.WebClient wc = j.createWebClient();\n         wc.login(alice.getId());\n \n         wc.setThrowExceptionOnFailingStatusCode(false);\n-        Page page = wc.goTo(\"configureSecurity\");\n+        HtmlPage page = wc.goTo(\"configureSecurity\");\n \n         String content = page.getWebResponse().getContentAsString();\n         assertThat(content, containsString(alice.getId() + \" is missing the Overall/Administer permission\"));\n@@ -66,14 +71,10 @@ public void authenticationException() throws Exception {\n     @Test\n     public void nonexistentAdjunct() throws Exception {\n         // This test probably doesn't belong here. Probably really belongs in Stapler.\n-        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n-        j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\"));\n-        User alice = User.get(\"alice\");\n         JenkinsRule.WebClient wc = j.createWebClient();\n-        wc.login(alice.getId());\n \n         wc.setThrowExceptionOnFailingStatusCode(false);\n-        Page page = wc.goTo(\"adjuncts/40331c1bldu3i%3b//'%3b//\\\"%3b//%25>%3f>uezm3<script>alert(1)</script>foo/org/kohsuke/stapler/jquery/jquery.full.js\");\n+        HtmlPage page = wc.goTo(\"adjuncts/40331c1bldu3i%3b//'%3b//\\\"%3b//%25>%3f>uezm3<script>alert(1)</script>foo/org/kohsuke/stapler/jquery/jquery.full.js\");\n \n         String content = page.getWebResponse().getContentAsString();\n         assertThat(content, containsString(\"No such adjunct found\"));\n@@ -83,11 +84,7 @@ public void nonexistentAdjunct() throws Exception {\n     @Test\n     public void nonexistentAdjunctShowsTrace() throws Exception {\n         // This test probably doesn't belong here. Probably really belongs in Stapler.\n-        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n-        j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\"));\n-        User alice = User.get(\"alice\");\n         JenkinsRule.WebClient wc = j.createWebClient();\n-        wc.login(alice.getId());\n         SuppressionFilter.SHOW_STACK_TRACE = true;\n \n         wc.setThrowExceptionOnFailingStatusCode(false);\n@@ -98,4 +95,46 @@ public void nonexistentAdjunctShowsTrace() throws Exception {\n         assertThat(content, containsString(\"AdjunctManager.doDynamic\"));\n     }\n \n+    @Test\n+    public void exception() throws Exception {\n+        FreeStyleProject projectError = createBrokenProject();\n+\n+        JenkinsRule.WebClient wc = j.createWebClient();\n+        wc.setThrowExceptionOnFailingStatusCode(false);\n+        HtmlPage page = wc.goTo(\"job/\" + projectError.getName() + \"/configure\");\n+\n+        String content = page.getWebResponse().getContentAsString();\n+        assertThat(content, containsString(\"An error occurred processing your request. Ask your Jenkins administrator to look up details.\"));\n+        assertThat(content, not(containsString(\"Oops!\")));\n+    }\n+\n+    @Test\n+    public void exceptionShowsTrace() throws Exception {\n+        FreeStyleProject projectError = createBrokenProject();\n+\n+        SuppressionFilter.SHOW_STACK_TRACE = true;\n+        JenkinsRule.WebClient wc = j.createWebClient();\n+        wc.setThrowExceptionOnFailingStatusCode(false);\n+        HtmlPage page = wc.goTo(\"job/\" + projectError.getName() + \"/configure\");\n+\n+        String content = page.getWebResponse().getContentAsString();\n+        assertThat(content, containsString(\"Oops!\"));\n+        assertThat(content, not(containsString(\"An error occurred processing your request. Ask your Jenkins administrator to look up details.\")));\n+    }\n+\n+    private FreeStyleProject createBrokenProject() throws IOException {\n+        TopLevelItemDescriptor descriptor = new TopLevelItemDescriptor(FreeStyleProject.class) {\n+            @Override\n+            public FreeStyleProject newInstance(ItemGroup parent, String name) {\n+                return new FreeStyleProject(parent, name) {\n+                    @Override\n+                    public void save() {\n+                        //do not need save\n+                    }\n+                };\n+            }\n+        };\n+        return (FreeStyleProject) j.jenkins.createProject(descriptor, \"throw-error\");\n+    }\n+\n }",
      "parent_sha": "0e3be6653a11a4cbe7d3a5ea4875c7228ccddcff"
    }
  },
  {
    "oid": "ce2c0c5a1b7a17f5c908490b70a5d43d64340ed5",
    "message": "fixed some warnings",
    "date": "2011-12-30T15:51:32Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/ce2c0c5a1b7a17f5c908490b70a5d43d64340ed5",
    "details": {
      "sha": "5c4166f16c8dc5143795515c1b64ead9d2b1b002",
      "filename": "core/src/main/java/hudson/FilePath.java",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/ce2c0c5a1b7a17f5c908490b70a5d43d64340ed5/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FFilePath.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/ce2c0c5a1b7a17f5c908490b70a5d43d64340ed5/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FFilePath.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FFilePath.java?ref=ce2c0c5a1b7a17f5c908490b70a5d43d64340ed5",
      "patch": "@@ -483,6 +483,7 @@ private void unzip(File dir, InputStream in) throws IOException {\n     private void unzip(File dir, File zipFile) throws IOException {\n         dir = dir.getAbsoluteFile();    // without absolutization, getParentFile below seems to fail\n         ZipFile zip = new ZipFile(zipFile);\n+        @SuppressWarnings(\"unchecked\")\n         Enumeration<ZipEntry> entries = zip.getEntries();\n \n         try {\n@@ -703,7 +704,7 @@ public void copyFrom(InputStream in) throws IOException, InterruptedException {\n     }\n \n     /**\n-     * Conveniene method to call {@link FilePath#copyTo(FilePath)}.\n+     * Convenience method to call {@link FilePath#copyTo(FilePath)}.\n      * \n      * @since 1.311\n      */\n@@ -1059,6 +1060,7 @@ public Long invoke(File f, VirtualChannel channel) throws IOException {\n      */\n     public void touch(final long timestamp) throws IOException, InterruptedException {\n         act(new FileCallable<Void>() {\n+            private static final long serialVersionUID = -5094638816500738429L;\n             public Void invoke(File f, VirtualChannel channel) throws IOException {\n                 if(!f.exists())\n                     new FileOutputStream(f).close();\n@@ -1456,6 +1458,7 @@ public void copyTo(OutputStream os) throws IOException, InterruptedException {\n         final OutputStream out = new RemoteOutputStream(os);\n \n         act(new FileCallable<Void>() {\n+            private static final long serialVersionUID = 4088559042349254141L;\n             public Void invoke(File f, VirtualChannel channel) throws IOException {\n                 FileInputStream fis = null;\n                 try {",
      "parent_sha": "b4fe626f73acaa3d52453543752709261994635a"
    }
  },
  {
    "oid": "eb2340467418c72d6b2a9f12d3cb3c43b1adade1",
    "message": "simplified.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@1943 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2007-01-26T14:11:16Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/eb2340467418c72d6b2a9f12d3cb3c43b1adade1",
    "details": {
      "sha": "83d136b63d8d8e3181810d1900e827ef420fd0bd",
      "filename": "core/src/main/java/hudson/PluginWrapper.java",
      "status": "modified",
      "additions": 4,
      "deletions": 12,
      "changes": 16,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/eb2340467418c72d6b2a9f12d3cb3c43b1adade1/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FPluginWrapper.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/eb2340467418c72d6b2a9f12d3cb3c43b1adade1/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FPluginWrapper.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FPluginWrapper.java?ref=eb2340467418c72d6b2a9f12d3cb3c43b1adade1",
      "patch": "@@ -184,17 +184,11 @@ public PluginWrapper(PluginManager owner, File archive) throws IOException {\n                 this.plugin = (Plugin)plugin;\n                 this.plugin.wrapper = this;\n             } catch (ClassNotFoundException e) {\n-                IOException ioe = new IOException(\"Unable to load \" + className + \" from \" + archive);\n-                ioe.initCause(e);\n-                throw ioe;\n+                throw new IOException2(\"Unable to load \" + className + \" from \" + archive,e);\n             } catch (IllegalAccessException e) {\n-                IOException ioe = new IOException(\"Unable to create instance of \" + className + \" from \" + archive);\n-                ioe.initCause(e);\n-                throw ioe;\n+                throw new IOException2(\"Unable to create instance of \" + className + \" from \" + archive,e);\n             } catch (InstantiationException e) {\n-                IOException ioe = new IOException(\"Unable to create instance of \" + className + \" from \" + archive);\n-                ioe.initCause(e);\n-                throw ioe;\n+                throw new IOException2(\"Unable to create instance of \" + className + \" from \" + archive,e);\n             }\n \n             // initialize plugin\n@@ -203,9 +197,7 @@ public PluginWrapper(PluginManager owner, File archive) throws IOException {\n                 plugin.start();\n             } catch(Throwable t) {\n                 // gracefully handle any error in plugin.\n-                IOException ioe = new IOException(\"Failed to initialize\");\n-                ioe.initCause(t);\n-                throw ioe;\n+                throw new IOException2(\"Failed to initialize\",t);\n             }\n         } finally {\n             Thread.currentThread().setContextClassLoader(old);",
      "parent_sha": "99e5bde6095c8960d3db9f2200a40337dbcc973e"
    }
  },
  {
    "oid": "5bcb2c4d7a288ee606b353660a8127742b3af997",
    "message": "fix up java.class.path since some programs rely on this value\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@16184 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2009-03-12T05:08:19Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/5bcb2c4d7a288ee606b353660a8127742b3af997",
    "details": {
      "sha": "d8e92672edd59b2c3dd4cdddab606fbeab5676f0",
      "filename": "remoting/src/main/java/hudson/remoting/Launcher.java",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/5bcb2c4d7a288ee606b353660a8127742b3af997/remoting%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fremoting%2FLauncher.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/5bcb2c4d7a288ee606b353660a8127742b3af997/remoting%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fremoting%2FLauncher.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/remoting%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fremoting%2FLauncher.java?ref=5bcb2c4d7a288ee606b353660a8127742b3af997",
      "patch": "@@ -105,8 +105,15 @@ public static void main(String[] args) throws Exception {\n                 Method $addURL = URLClassLoader.class.getDeclaredMethod(\"addURL\", URL.class);\n                 $addURL.setAccessible(true);\n \n-                for(String token : args[++i].split(File.pathSeparator))\n+                String pathList = args[++i];\n+                for(String token : pathList.split(File.pathSeparator))\n                     $addURL.invoke(ClassLoader.getSystemClassLoader(),new File(token).toURI().toURL());\n+\n+                // fix up the system.class.path to pretend that those jar files\n+                // are given through CLASSPATH or something.\n+                // some tools like JAX-WS RI and Hadoop relies on this.\n+                System.setProperty(\"java.class.path\",System.getProperty(\"java.class.path\")+File.pathSeparatorChar+pathList);\n+\n                 continue;\n             }\n             if(arg.equals(\"-tcp\")) {",
      "parent_sha": "51cddcbd3c9ea3905b70638f026bab86b6de655a"
    }
  },
  {
    "oid": "a7e83ec8d6a09e1c560b3375ca672c73f6c7a01e",
    "message": "Use System.currentTimeMillis() instead of System.nanoTime() to protect\nagainst incorrect values if times are ever compared between different JVM nodes",
    "date": "2013-07-11T20:47:09Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/a7e83ec8d6a09e1c560b3375ca672c73f6c7a01e",
    "details": {
      "sha": "6248b84d86204cb1342c1983fc974cd3b24ef203",
      "filename": "core/src/main/java/hudson/node_monitors/ResponseTimeMonitor.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/a7e83ec8d6a09e1c560b3375ca672c73f6c7a01e/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fnode_monitors%2FResponseTimeMonitor.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/a7e83ec8d6a09e1c560b3375ca672c73f6c7a01e/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fnode_monitors%2FResponseTimeMonitor.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fnode_monitors%2FResponseTimeMonitor.java?ref=a7e83ec8d6a09e1c560b3375ca672c73f6c7a01e",
      "patch": "@@ -113,7 +113,7 @@ private Object writeReplace() {\n \n     private static final class Step2 implements Callable<Step3,IOException> {\n         private final Data cur;\n-        private final long start = System.nanoTime();\n+        private final long start = System.currentTimeMillis();\n \n         public Step2(Data cur) {\n             this.cur = cur;\n@@ -137,8 +137,8 @@ private Step3(Data cur, long start) {\n         }\n \n         private Object readResolve() {\n-            long end = System.nanoTime();\n-            return new Data(cur,TimeUnit2.NANOSECONDS.toMillis(end-start));\n+            long end = System.currentTimeMillis();\n+            return new Data(cur,(end-start));\n         }\n \n         private static final long serialVersionUID = 1L;",
      "parent_sha": "da9c2c55c1962dc805a3bc74f7950379371dab98"
    }
  },
  {
    "oid": "c154a02aff739487d1762a8af602c28dd18abbd1",
    "message": "fixing a compilation problem\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@15684 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2009-02-24T23:02:34Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/c154a02aff739487d1762a8af602c28dd18abbd1",
    "details": {
      "sha": "e2e90276b03e4c0732baf44841ee5c1a62a22f93",
      "filename": "core/src/main/java/hudson/DescriptorExtensionList.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/c154a02aff739487d1762a8af602c28dd18abbd1/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FDescriptorExtensionList.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/c154a02aff739487d1762a8af602c28dd18abbd1/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FDescriptorExtensionList.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FDescriptorExtensionList.java?ref=c154a02aff739487d1762a8af602c28dd18abbd1",
      "patch": "@@ -66,7 +66,7 @@ public class DescriptorExtensionList<T extends Describable<T>, D extends Descrip\n      */\n     public static <T extends Describable<T>,D extends Descriptor<T>>\n     DescriptorExtensionList<T,D> create(Hudson hudson, Class<T> describableType) {\n-        if(describableType==Publisher.class)\n+        if(describableType==(Class)Publisher.class) // javac complains if I don't have this cast\n             return (DescriptorExtensionList)new DescriptorExtensionListImpl(hudson);\n         return new DescriptorExtensionList<T,D>(hudson,describableType);\n     }",
      "parent_sha": "b63f162f75964f52118755105bee676d29da8828"
    }
  },
  {
    "oid": "79c60432981b5b62159748b463e1b0b33fc5fc97",
    "message": "Allow detached plugin location to be overridden (#7303)\n\nobtain detatched plugin location via a method that can be overridden",
    "date": "2022-11-07T18:24:05Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/79c60432981b5b62159748b463e1b0b33fc5fc97",
    "details": {
      "sha": "7bcc23af8bf7d8b34d1ff768b4b619ebbb118076",
      "filename": "core/src/main/java/hudson/PluginManager.java",
      "status": "modified",
      "additions": 13,
      "deletions": 4,
      "changes": 17,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/79c60432981b5b62159748b463e1b0b33fc5fc97/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FPluginManager.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/79c60432981b5b62159748b463e1b0b33fc5fc97/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FPluginManager.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FPluginManager.java?ref=79c60432981b5b62159748b463e1b0b33fc5fc97",
      "patch": "@@ -617,7 +617,7 @@ void considerDetachedPlugin(String shortName) {\n             return;\n         }\n         LOGGER.fine(() -> \"considering loading a detached dependency \" + shortName);\n-        for (String loadedFile : loadPluginsFromWar(\"/WEB-INF/detached-plugins\", (dir, name) -> normalisePluginName(name).equals(shortName))) {\n+        for (String loadedFile : loadPluginsFromWar(getDetachedLocation(), (dir, name) -> normalisePluginName(name).equals(shortName))) {\n             String loaded = normalisePluginName(loadedFile);\n             File arc = new File(rootDir, loaded + \".jpi\");\n             LOGGER.info(() -> \"Loading a detached plugin as a dependency: \" + arc);\n@@ -630,6 +630,15 @@ void considerDetachedPlugin(String shortName) {\n         }\n     }\n \n+    /**\n+     * Defines the location of the detached plugins in the WAR.\n+     * @return by default, {@code /WEB-INF/detached-plugins}\n+     * @since TODO\n+     */\n+    protected @NonNull String getDetachedLocation() {\n+        return \"/WEB-INF/detached-plugins\";\n+    }\n+\n     protected @NonNull Set<String> loadPluginsFromWar(@NonNull String fromPath) {\n         return loadPluginsFromWar(fromPath, null);\n     }\n@@ -758,7 +767,7 @@ protected void loadDetachedPlugins() {\n \n             final List<DetachedPluginsUtil.DetachedPlugin> detachedPlugins = DetachedPluginsUtil.getDetachedPlugins(lastExecVersion);\n \n-            Set<String> loadedDetached = loadPluginsFromWar(\"/WEB-INF/detached-plugins\", new FilenameFilter() {\n+            Set<String> loadedDetached = loadPluginsFromWar(getDetachedLocation(), new FilenameFilter() {\n                 @Override\n                 public boolean accept(File dir, String name) {\n                     name = normalisePluginName(name);\n@@ -793,7 +802,7 @@ public boolean accept(File dir, String name) {\n                     new Object[] {lastExecVersion, Jenkins.VERSION, loadedDetached});\n         } else {\n             final Set<DetachedPluginsUtil.DetachedPlugin> forceUpgrade = new HashSet<>();\n-            // TODO using getDetachedPlugins here seems wrong; should be forcing an upgrade when the installed version is older than that in WEB-INF/detached-plugins/\n+            // TODO using getDetachedPlugins here seems wrong; should be forcing an upgrade when the installed version is older than that in getDetachedLocation()\n             for (DetachedPluginsUtil.DetachedPlugin p : DetachedPluginsUtil.getDetachedPlugins()) {\n                 VersionNumber installedVersion = getPluginVersion(rootDir, p.getShortName());\n                 VersionNumber requiredVersion = p.getRequiredVersion();\n@@ -805,7 +814,7 @@ public boolean accept(File dir, String name) {\n                 }\n             }\n             if (!forceUpgrade.isEmpty()) {\n-                Set<String> loadedDetached = loadPluginsFromWar(\"/WEB-INF/detached-plugins\", new FilenameFilter() {\n+                Set<String> loadedDetached = loadPluginsFromWar(getDetachedLocation(), new FilenameFilter() {\n                     @Override\n                     public boolean accept(File dir, String name) {\n                         name = normalisePluginName(name);",
      "parent_sha": "2f239fbd4cb28234ef055bd6abe0d64651ca4332"
    }
  },
  {
    "oid": "b4bb963e217a6ef0e88f6d8975e8ae4ebfe63c63",
    "message": "Move SaveableListener notification outside of the lock",
    "date": "2015-03-25T10:31:28Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/b4bb963e217a6ef0e88f6d8975e8ae4ebfe63c63",
    "details": {
      "sha": "b057e19a20323d7a3b4910394f14d3a1b7aa8bbb",
      "filename": "core/src/main/java/hudson/model/Queue.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/b4bb963e217a6ef0e88f6d8975e8ae4ebfe63c63/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FQueue.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/b4bb963e217a6ef0e88f6d8975e8ae4ebfe63c63/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FQueue.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FQueue.java?ref=b4bb963e217a6ef0e88f6d8975e8ae4ebfe63c63",
      "patch": "@@ -463,6 +463,7 @@ public void load() {\n     public void save() {\n         if(BulkChange.contains(this))  return;\n \n+        XmlFile queueFile = new XmlFile(XSTREAM, getXMLQueueFile());\n         lock.lock();\n         try {\n             // write out the queue state we want to save\n@@ -472,19 +473,18 @@ public void save() {\n             // write out the tasks on the queue\n             for (Item item: getItems()) {\n                 if(item.task instanceof TransientTask)  continue;\n-            state.items.add(item);\n+                state.items.add(item);\n             }\n \n             try {\n-                XmlFile queueFile = new XmlFile(XSTREAM, getXMLQueueFile());\n                 queueFile.write(state);\n-                SaveableListener.fireOnChange(this, queueFile);\n             } catch (IOException e) {\n                 LOGGER.log(Level.WARNING, \"Failed to write out the queue file \" + getXMLQueueFile(), e);\n             }\n         } finally {\n             lock.unlock();\n         }\n+        SaveableListener.fireOnChange(this, queueFile);\n     }\n \n     /**",
      "parent_sha": "5a1999ea3035c16160e1961ffc6a61166bc6cae4"
    }
  },
  {
    "oid": "c483f1196a292f0fd95ba6620852c8b8925efe13",
    "message": "[FIXED HUDSON-2587]\nNotice that the error message indicates a permission problem. The error message isn't as descriptive as it could be, but the directory that Java uses as the temporary directory doesn't seem to let the current user create files.\n\nIn 1.260 improved the code so that you can see the directory name.\n\nGo big red!\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@13013 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2008-11-05T23:47:06Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/c483f1196a292f0fd95ba6620852c8b8925efe13",
    "details": {
      "sha": "939cc4d6619722c211d68e6405244fd5918d09af",
      "filename": "core/src/main/java/hudson/FilePath.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/c483f1196a292f0fd95ba6620852c8b8925efe13/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FFilePath.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/c483f1196a292f0fd95ba6620852c8b8925efe13/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FFilePath.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FFilePath.java?ref=c483f1196a292f0fd95ba6620852c8b8925efe13",
      "patch": "@@ -552,7 +552,7 @@ public FilePath createTextTempFile(final String prefix, final String suffix, fin\n             return new FilePath(channel,act(new FileCallable<String>() {\n                 public String invoke(File dir, VirtualChannel channel) throws IOException {\n                     if(!inThisDirectory)\n-                        dir = null;\n+                        dir = new File(System.getProperty(\"java.io.tmpdir\"));\n                     else\n                         dir.mkdirs();\n ",
      "parent_sha": "911f469631ace0f88711466f6da0c36f50317841"
    }
  },
  {
    "oid": "72152be42d57debd585cd9b9ed16d074df92a157",
    "message": "Detecting why this exception happens:\n\nmavenExecutionResult exceptions not empty\nmessage : Internal error: java.lang.NullPointerException\ncause : null\nStack trace :\norg.apache.maven.InternalErrorException: Internal error: java.lang.NullPointerException\n\tat org.apache.maven.lifecycle.internal.BuilderCommon.handleBuildError(BuilderCommon.java:128)\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:95)\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)\n\tat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)\n\tat org.jvnet.hudson.maven3.launcher.Maven3Launcher.main(Maven3Launcher.java:79)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launchStandard(Launcher.java:329)\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:239)\n\tat org.jvnet.hudson.maven3.agent.Maven3Main.launch(Maven3Main.java:158)\n\tat hudson.maven.Maven3Builder.call(Maven3Builder.java:121)\n\tat hudson.maven.Maven3Builder.call(Maven3Builder.java:73)\n\tat hudson.remoting.UserRequest.perform(UserRequest.java:118)\n\tat hudson.remoting.UserRequest.perform(UserRequest.java:48)\n\tat hudson.remoting.Request$2.run(Request.java:287)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)\n\tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:138)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n\tat java.lang.Thread.run(Thread.java:662)\nCaused by: java.lang.NullPointerException\n\tat hudson.maven.MojoInfo.intercept(MojoInfo.java:208)\n\tat hudson.maven.reporters.MavenArtifactArchiver.preExecute(MavenArtifactArchiver.java:74)\n\tat hudson.maven.Maven3Builder$MavenExecutionListener.recordMojoStarted(Maven3Builder.java:535)\n\tat hudson.maven.Maven3Builder$MavenExecutionListener.forkStarted(Maven3Builder.java:671)\n\tat org.apache.maven.lifecycle.internal.DefaultExecutionEventCatapult.fire(DefaultExecutionEventCatapult.java:94)\n\tat org.apache.maven.lifecycle.internal.DefaultExecutionEventCatapult.fire(DefaultExecutionEventCatapult.java:42)\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.executeForkedExecutions(MojoExecutor.java:328)\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:199)\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)\n\t... 24 more\nchannel stopped\nFATAL: null\njava.lang.NullPointerException\n\tat hudson.maven.MavenModuleSetBuild$RunnerImpl.doRun(MavenModuleSetBuild.java:833)\n\tat hudson.model.AbstractBuild$AbstractRunner.run(AbstractBuild.java:448)\n\tat hudson.model.Run.run(Run.java:1376)\n\tat hudson.maven.MavenModuleSetBuild.run(MavenModuleSetBuild.java:479)\n\tat hudson.model.ResourceController.execute(ResourceController.java:88)\n\tat hudson.model.Executor.run(Executor.java:230)",
    "date": "2011-08-23T21:12:09Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/72152be42d57debd585cd9b9ed16d074df92a157",
    "details": {
      "sha": "92aadebd67c2e34f1b2e8e0b188503c0d995f4d1",
      "filename": "maven-plugin/src/main/java/hudson/maven/MojoInfo.java",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/72152be42d57debd585cd9b9ed16d074df92a157/maven-plugin%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmaven%2FMojoInfo.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/72152be42d57debd585cd9b9ed16d074df92a157/maven-plugin%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmaven%2FMojoInfo.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/maven-plugin%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmaven%2FMojoInfo.java?ref=72152be42d57debd585cd9b9ed16d074df92a157",
      "patch": "@@ -92,6 +92,8 @@ public class MojoInfo {\n     private final ConverterLookup converterLookup = new DefaultConverterLookup();\n \n     public MojoInfo(MojoExecution mojoExecution, Mojo mojo, PlexusConfiguration configuration, ExpressionEvaluator expressionEvaluator) {\n+        if (mojo==null)     throw new IllegalArgumentException();\n+        // TODO: exactly what other variables are always non-null?\n         this.mojo = mojo;\n         this.mojoExecution = mojoExecution;\n         this.configuration = configuration;\n@@ -130,14 +132,13 @@ public <T> T getConfigurationValue(String configName, Class<T> type) throws Comp\n         PlexusConfiguration child = configuration.getChild(configName);\n         if(child==null) return null;    // no such config\n        \n-        ClassLoader cl = null;\n+        ClassLoader cl;\n         PluginDescriptor pd = mojoExecution.getMojoDescriptor().getPluginDescriptor();\n         // for maven2 builds ClassRealm doesn't extends ClassLoader !\n         // so check stuff with reflection\n         Method method = ReflectionUtils.getPublicMethodNamed( pd.getClass(), \"getClassRealm\" );\n        \n-        if ( ReflectionUtils.invokeMethod( method, pd ) instanceof ClassRealm)\n-        {\n+        if ( ReflectionUtils.invokeMethod( method, pd ) instanceof ClassRealm) {\n             ClassRealm cr = (ClassRealm) ReflectionUtils.invokeMethod( method, pd );\n             cl = cr.getClassLoader();\n         } else {",
      "parent_sha": "68117973f5c6abeb82bec0a657230b6d0e0961a0"
    }
  },
  {
    "oid": "e4c4b810793aa4d118702608c16c1d680edbab89",
    "message": "[FIXED JENKINS-44330] - Prevent classloading of Target comparator in LogRecorder#orderedTargets()\n\nIt is just a hotfix, there may be other LogRecorders affected. Ideally we need a response from Jetty maintainers to https://github.com/eclipse/jetty.project/issues/1563. No tests since I see no way to trigger such classloading + no actual need in it.",
    "date": "2017-05-20T11:00:42Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/e4c4b810793aa4d118702608c16c1d680edbab89",
    "details": {
      "sha": "7313778df04399340fc09ac394bee6a6195bb4e7",
      "filename": "core/src/main/java/hudson/logging/LogRecorder.java",
      "status": "modified",
      "additions": 11,
      "deletions": 6,
      "changes": 17,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/e4c4b810793aa4d118702608c16c1d680edbab89/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Flogging%2FLogRecorder.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/e4c4b810793aa4d118702608c16c1d680edbab89/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Flogging%2FLogRecorder.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Flogging%2FLogRecorder.java?ref=e4c4b810793aa4d118702608c16c1d680edbab89",
      "patch": "@@ -73,17 +73,14 @@ public class LogRecorder extends AbstractModelObject implements Saveable {\n     private volatile String name;\n \n     public final CopyOnWriteList<Target> targets = new CopyOnWriteList<Target>();\n-\n+    private final static TargetComparator TARGET_COMPARATOR = new TargetComparator();\n+    \n     @Restricted(NoExternalUse.class)\n     Target[] orderedTargets() {\n         // will contain targets ordered by reverse name length (place specific targets at the beginning)\n         Target[] ts = targets.toArray(new Target[]{});\n \n-        Arrays.sort(ts, new Comparator<Target>() {\n-            public int compare(Target left, Target right) {\n-                return right.getName().length() - left.getName().length();\n-            }\n-        });\n+        Arrays.sort(ts, TARGET_COMPARATOR);\n \n         return ts;\n     }\n@@ -206,6 +203,14 @@ public void disable() {\n         }\n \n     }\n+    \n+    private static class TargetComparator implements Comparator<Target> {\n+\n+        @Override\n+        public int compare(Target left, Target right) {\n+            return right.getName().length() - left.getName().length();\n+        }\n+    }\n \n     private static final class SetLevel extends MasterToSlaveCallable<Void,Error> {\n         /** known loggers (kept per agent), to avoid GC */",
      "parent_sha": "d13b1361e1650494528a7b46f82fe25d7fb5e3c3"
    }
  },
  {
    "oid": "fd4fdc91812bd17626140b079ea79219c2f402ec",
    "message": "Don't click and submit if it's a SubmitableElement",
    "date": "2015-08-24T18:09:47Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/fd4fdc91812bd17626140b079ea79219c2f402ec",
    "details": {
      "sha": "825b45d64838ccd34f13c4449c6cd767b0fdb427",
      "filename": "test/src/main/java/com/gargoylesoftware/htmlunit/html/HtmlFormUtil.java",
      "status": "modified",
      "additions": 4,
      "deletions": 8,
      "changes": 12,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/fd4fdc91812bd17626140b079ea79219c2f402ec/test%2Fsrc%2Fmain%2Fjava%2Fcom%2Fgargoylesoftware%2Fhtmlunit%2Fhtml%2FHtmlFormUtil.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/fd4fdc91812bd17626140b079ea79219c2f402ec/test%2Fsrc%2Fmain%2Fjava%2Fcom%2Fgargoylesoftware%2Fhtmlunit%2Fhtml%2FHtmlFormUtil.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/test%2Fsrc%2Fmain%2Fjava%2Fcom%2Fgargoylesoftware%2Fhtmlunit%2Fhtml%2FHtmlFormUtil.java?ref=fd4fdc91812bd17626140b079ea79219c2f402ec",
      "patch": "@@ -46,7 +46,9 @@ public static Page submit(final HtmlForm htmlForm) throws IOException {\n      * Plain {@link com.gargoylesoftware.htmlunit.html.HtmlForm#submit()} doesn't work correctly due to the use of YUI in Hudson.\n      */\n     public static Page submit(HtmlForm htmlForm, HtmlElement submitElement) throws IOException {\n-        if (submitElement != null) {\n+        if (submitElement == null || submitElement instanceof SubmittableElement) {\n+            htmlForm.submit((SubmittableElement) submitElement);\n+        } else {\n             // To make YUI event handling work, this combo seems to be necessary\n             // the click will trigger _onClick in buton-*.js, but it doesn't submit the form\n             // (a comment alluding to this behavior can be seen in submitForm method)\n@@ -57,9 +59,6 @@ public static Page submit(HtmlForm htmlForm, HtmlElement submitElement) throws I\n             // triggered a submission (more concretely, m_oSubmitTrigger is not set.)\n             submitElement.click();\n         }\n-        if (submitElement instanceof SubmittableElement) {\n-            htmlForm.submit((SubmittableElement) submitElement);\n-        }\n         return htmlForm.getPage();\n     }\n \n@@ -87,10 +86,7 @@ public static HtmlElement getSubmitButton(final HtmlForm htmlForm) throws Elemen\n         }\n         for (HtmlElement element : htmlForm.getHtmlElementsByTagName(\"button\")) {\n             if(element instanceof HtmlButton) {\n-                HtmlButton button = (HtmlButton) element;\n-                if (button.isSubmittableByEnter()) {\n-                    return element;\n-                }\n+                return element;\n             }\n         }\n         return null;",
      "parent_sha": "bc88d2124fd0da5e42b955e22a8f6210b72da52f"
    }
  },
  {
    "oid": "2d93ee8d4ae0d0580839bdaa24105ec556947390",
    "message": "simplified the implementation of the write method.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@1712 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2007-01-08T17:19:35Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/2d93ee8d4ae0d0580839bdaa24105ec556947390",
    "details": {
      "sha": "326c40973984776cd09470cec259bddc26cb7c02",
      "filename": "core/src/main/java/hudson/FilePath.java",
      "status": "modified",
      "additions": 4,
      "deletions": 10,
      "changes": 14,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/2d93ee8d4ae0d0580839bdaa24105ec556947390/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FFilePath.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/2d93ee8d4ae0d0580839bdaa24105ec556947390/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FFilePath.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FFilePath.java?ref=2d93ee8d4ae0d0580839bdaa24105ec556947390",
      "patch": "@@ -438,24 +438,18 @@ public Void call() throws IOException {\n      * If this file already exists, it will be overwritten.\n      * If the directory doesn't exist, it will be created.\n      */\n-    public OutputStream write() throws IOException {\n+    public OutputStream write() throws IOException, InterruptedException {\n         if(channel==null)\n             return new FileOutputStream(new File(remote));\n \n-        final Pipe p = Pipe.createLocalToRemote();\n-        channel.callAsync(new Callable<Void,IOException>() {\n-            public Void call() throws IOException {\n+        return channel.call(new Callable<OutputStream,IOException>() {\n+            public OutputStream call() throws IOException {\n                 File f = new File(remote);\n                 f.getParentFile().mkdirs();\n                 FileOutputStream fos = new FileOutputStream(f);\n-                Util.copyStream(p.getIn(),fos);\n-                fos.close();\n-                p.getIn().close();\n-                return null;\n+                return new RemoteOutputStream(fos);\n             }\n         });\n-\n-        return p.getOut();\n     }\n \n     /**",
      "parent_sha": "fbc918b1f598a0fafd9545bcd497a1498d29c8b8"
    }
  },
  {
    "oid": "b82d07712e5003cebace29e5d25fdc61f1751390",
    "message": "[JENKINS-8383] Maven 2.2 Project does not return a BuilderConfiguration,\nonly resolve parent artifact for Maven 3+",
    "date": "2011-10-12T21:09:34Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/b82d07712e5003cebace29e5d25fdc61f1751390",
    "details": {
      "sha": "4586300994148e84e69334a1e787aab2373662c6",
      "filename": "maven-plugin/src/main/java/hudson/maven/reporters/MavenFingerprinter.java",
      "status": "modified",
      "additions": 1,
      "deletions": 20,
      "changes": 21,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/b82d07712e5003cebace29e5d25fdc61f1751390/maven-plugin%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmaven%2Freporters%2FMavenFingerprinter.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/b82d07712e5003cebace29e5d25fdc61f1751390/maven-plugin%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmaven%2Freporters%2FMavenFingerprinter.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/maven-plugin%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmaven%2Freporters%2FMavenFingerprinter.java?ref=b82d07712e5003cebace29e5d25fdc61f1751390",
      "patch": "@@ -160,32 +160,13 @@ private void recordParents(MavenBuildProxy build, MavenProject pom) throws IOExc\n \t}\n \n \tprivate ArtifactRepository getLocalRepository(String mavenVersion, MavenProject parent) {\n-\t\tif (mavenVersion.startsWith(\"2.0\")) return null;\n-\t\t\n-\t\tif (mavenVersion.startsWith(\"2.\")) {\n-\t\t\treturn getMaven22LocalRepository(parent);\n-\t\t}\n+\t\tif (mavenVersion.startsWith(\"2.\")) return null;\n \t\t\n \t\t// Maven 3\n \t\treturn parent.getProjectBuildingRequest()\n \t\t\t\t.getLocalRepository();\n \t}\n \n-    \n-    private ArtifactRepository getMaven22LocalRepository(MavenProject parent) {\n-    \tProjectBuilderConfiguration projectBuilderConfiguration;\n-\t\ttry {\n-\t\t\t// Since maven-plugin is compiled against maven-core-3x, we need to retrieve \n-\t\t\t// this maven 2 object via reflection\n-\t\t\tMethod method = MavenProject.class.getMethod(\"getProjectBuilderConfiguration\");\n-\t\t\tprojectBuilderConfiguration = (ProjectBuilderConfiguration) method.invoke(parent);\n-\t\t\treturn projectBuilderConfiguration.getLocalRepository();\n-\t\t} catch (Exception e) {\n-\t\t\tLogger.getLogger(getClass().getName()).log(Level.WARNING, \"Could not retrieve BuilderConfigration\", e);\n-\t\t\treturn null;\n-\t\t}\n-\t}\n-\n \tprivate void record(Collection<Artifact> artifacts, Map<String,String> record) throws IOException, InterruptedException {\n         for (Artifact a : artifacts)\n             record(a,record);",
      "parent_sha": "8e334165309db82ca56be7c813ad7b9294376bce"
    }
  },
  {
    "oid": "f2bf7c494a5e788e38104b436c9f098de4272843",
    "message": "Improving a rather cryptic and misleading error message.\n(Maven \"configuration\" sounds like something you need to define in pom.xml.)\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@16572 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2009-03-26T14:19:56Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/f2bf7c494a5e788e38104b436c9f098de4272843",
    "details": {
      "sha": "81e9b3dd1953805a84cd901e7fc968982af0ad52",
      "filename": "core/src/main/java/hudson/maven/MavenModuleSetBuild.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/f2bf7c494a5e788e38104b436c9f098de4272843/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmaven%2FMavenModuleSetBuild.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/f2bf7c494a5e788e38104b436c9f098de4272843/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmaven%2FMavenModuleSetBuild.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmaven%2FMavenModuleSetBuild.java?ref=f2bf7c494a5e788e38104b436c9f098de4272843",
      "patch": "@@ -414,7 +414,8 @@ private void parsePoms(BuildListener listener, PrintStream logger, EnvVars envVa\n             logger.println(\"Parsing POMs\");\n             MavenInstallation mvn = project.getMaven();\n             if(mvn==null) {\n-                logger.println(\"A Maven configuration needs to be associated with this project. Please reconfigure this project\");\n+                logger.println(\"A Maven installation needs to be available for this project to be built.\");\n+                logger.println(\"Either your server has no Maven installations defined, or the requested Maven version does not exist.\");\n                 throw new AbortException();\n             }\n             mvn = mvn.forEnvironment(envVars).forNode(Computer.currentComputer().getNode());",
      "parent_sha": "73e816418cd4661e14a85799cb3a98d378ea0273"
    }
  },
  {
    "oid": "b83a335e85225578f9b0504c346d63dad69ff286",
    "message": "Fixed typo.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@32205 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2010-06-21T16:52:34Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/b83a335e85225578f9b0504c346d63dad69ff286",
    "details": {
      "sha": "c95035248c41bd7c7c466cbc601bbf0031873b4f",
      "filename": "core/src/main/java/hudson/tools/JDKInstaller.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/b83a335e85225578f9b0504c346d63dad69ff286/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Ftools%2FJDKInstaller.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/b83a335e85225578f9b0504c346d63dad69ff286/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Ftools%2FJDKInstaller.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Ftools%2FJDKInstaller.java?ref=b83a335e85225578f9b0504c346d63dad69ff286",
      "patch": "@@ -281,7 +281,7 @@ public void pullUp(String from, String to) throws IOException, InterruptedExcept\n      * This is where we locally cache this JDK.\n      */\n     private File getLocalCacheFile(Platform platform, CPU cpu) {\n-        return new File(Hudson.getInstance().getRootDir(),\"cahce/jdks/\"+platform+\"/\"+cpu+\"/\"+id);\n+        return new File(Hudson.getInstance().getRootDir(),\"cache/jdks/\"+platform+\"/\"+cpu+\"/\"+id);\n     }\n \n     /**",
      "parent_sha": "ff9ece2299c2aa60862dd335648ffe1989828edf"
    }
  },
  {
    "oid": "3e35a67592c9bc783c19c9c1897a5cc8f05def5c",
    "message": "Don't wrap the InterruptedException without unwrapping",
    "date": "2017-03-10T15:21:26Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/3e35a67592c9bc783c19c9c1897a5cc8f05def5c",
    "details": {
      "sha": "852a72f3669d352badd44a1de041d6be49ad53a6",
      "filename": "core/src/main/java/hudson/model/ResourceController.java",
      "status": "modified",
      "additions": 15,
      "deletions": 10,
      "changes": 25,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/3e35a67592c9bc783c19c9c1897a5cc8f05def5c/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FResourceController.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/3e35a67592c9bc783c19c9c1897a5cc8f05def5c/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FResourceController.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FResourceController.java?ref=3e35a67592c9bc783c19c9c1897a5cc8f05def5c",
      "patch": "@@ -32,6 +32,7 @@\n import java.util.concurrent.Callable;\n import java.util.concurrent.CopyOnWriteArraySet;\n import javax.annotation.Nonnull;\n+import jenkins.security.NotReallyRoleSensitiveCallable;\n \n /**\n  * Controls mutual exclusion of {@link ResourceList}.\n@@ -77,20 +78,18 @@ public int size() {\n      */\n     public void execute(@Nonnull Runnable task, final ResourceActivity activity ) throws InterruptedException {\n         final ResourceList resources = activity.getResourceList();\n-        _withLock(new Runnable() {\n+        _withLock(new NotReallyRoleSensitiveCallable<Void,InterruptedException>() {\n             @Override\n-            public void run() {\n-                while(inUse.isCollidingWith(resources))\n-                    try {\n-                        // TODO revalidate the resource list after re-acquiring lock, for now we just let the build fail\n-                        _await();\n-                    } catch (InterruptedException e) {\n-                        throw new RuntimeException(e);\n-                    }\n+            public Void call() throws InterruptedException {\n+                while (inUse.isCollidingWith(resources)) {\n+                    // TODO revalidate the resource list after re-acquiring lock, for now we just let the build fail\n+                    _await();\n+                }\n \n                 // we have a go\n                 inProgress.add(activity);\n-                inUse = ResourceList.union(inUse,resources);\n+                inUse = ResourceList.union(inUse, resources);\n+                return null;\n             }\n         });\n \n@@ -184,5 +183,11 @@ protected <V> V _withLock(java.util.concurrent.Callable<V> callable) throws Exce\n             return callable.call();\n         }\n     }\n+\n+    protected <V, T extends Throwable> V _withLock(hudson.remoting.Callable<V,T> callable) throws T {\n+        synchronized (this) {\n+            return callable.call();\n+        }\n+    }\n }\n ",
      "parent_sha": "6e39dd35bdbb2633e0fe513052c8cf23b403179f"
    }
  },
  {
    "oid": "1eba93806cba7eed1e1d591621e90518fcb7d0c3",
    "message": "Clarify PermissionGroup.owner is @Nonnull\n\nPermission.owner is already marked @Nonnull, and\nis built using PermissionGroup.owner.",
    "date": "2017-03-14T13:09:07Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/1eba93806cba7eed1e1d591621e90518fcb7d0c3",
    "details": {
      "sha": "1f435be71a668b38969969bc86c886dff0d3e7c7",
      "filename": "core/src/main/java/hudson/security/PermissionGroup.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/1eba93806cba7eed1e1d591621e90518fcb7d0c3/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fsecurity%2FPermissionGroup.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/1eba93806cba7eed1e1d591621e90518fcb7d0c3/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fsecurity%2FPermissionGroup.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fsecurity%2FPermissionGroup.java?ref=1eba93806cba7eed1e1d591621e90518fcb7d0c3",
      "patch": "@@ -30,6 +30,8 @@\n import java.util.SortedSet;\n import java.util.TreeSet;\n import javax.annotation.CheckForNull;\n+import javax.annotation.Nonnull;\n+\n import org.jvnet.localizer.Localizable;\n \n /**\n@@ -53,7 +55,7 @@ public final class PermissionGroup implements Iterable<Permission>, Comparable<P\n      * @param title sets {@link #title}\n      * @throws IllegalStateException if this group was already registered\n      */\n-    public PermissionGroup(Class owner, Localizable title) throws IllegalStateException {\n+    public PermissionGroup(@Nonnull Class owner, Localizable title) throws IllegalStateException {\n         this.owner = owner;\n         this.title = title;\n         register(this);",
      "parent_sha": "a953bc863cf6da5fcd36cabb1b7ee9efb305c3c0"
    }
  },
  {
    "oid": "ecfbd6a0d464b0f7695a0f17116000fd7a0855ed",
    "message": "better documenting my intention in rev.32528.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@32531 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2010-07-06T22:45:26Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/ecfbd6a0d464b0f7695a0f17116000fd7a0855ed",
    "details": {
      "sha": "192bb7dbfadda1369d99d73581b11facbb8cb150",
      "filename": "core/src/main/java/hudson/model/Executor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/ecfbd6a0d464b0f7695a0f17116000fd7a0855ed/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FExecutor.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/ecfbd6a0d464b0f7695a0f17116000fd7a0855ed/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FExecutor.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FExecutor.java?ref=ecfbd6a0d464b0f7695a0f17116000fd7a0855ed",
      "patch": "@@ -102,7 +102,7 @@ public void run() {\n                 Queue.Item queueItem;\n                 Queue.Task task;\n                 try {\n-                    synchronized (queue) {\n+                    synchronized (queue) {// perform this state change as an atomic operation wrt other queue operations\n                         queueItem = grabJob();\n                         task = queueItem.task;\n                         startTime = System.currentTimeMillis();",
      "parent_sha": "142c31bcba9c02aa4e67e78bb78ac17a97923479"
    }
  },
  {
    "oid": "2935258e9132be549cafdceada791716d14a86d9",
    "message": "deleting temporary file after test\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@16115 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2009-03-08T21:43:52Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/2935258e9132be549cafdceada791716d14a86d9",
    "details": {
      "sha": "b3fe47b875067602c30deb7a55952c327823e0b8",
      "filename": "core/src/test/java/hudson/FilePathTest.java",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/2935258e9132be549cafdceada791716d14a86d9/core%2Fsrc%2Ftest%2Fjava%2Fhudson%2FFilePathTest.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/2935258e9132be549cafdceada791716d14a86d9/core%2Fsrc%2Ftest%2Fjava%2Fhudson%2FFilePathTest.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Ftest%2Fjava%2Fhudson%2FFilePathTest.java?ref=2935258e9132be549cafdceada791716d14a86d9",
      "patch": "@@ -35,6 +35,8 @@\n import java.util.concurrent.Callable;\n import java.util.concurrent.Future;\n \n+import org.junit.Assert;\n+\n /**\n  * @author Kohsuke Kawaguchi\n  */\n@@ -79,7 +81,8 @@ public void testCopyTo() throws Exception {\n         File tmp = File.createTempFile(\"testCopyTo\",\"\");\n         FilePath f = new FilePath(french,tmp.getPath());\n         f.copyTo(new NullStream());\n-        tmp.delete();\n+        Assert.assertTrue(\"target does not exist\", tmp.exists());\n+        Assert.assertTrue(\"could not delete target \" + tmp.getPath(), tmp.delete());\n     }\n \n     /**\n@@ -95,8 +98,8 @@ public void testCopyTo2() throws Exception {\n \n             f.copyTo(f2);\n \n-            tmp.delete();\n-            tmp2.delete();\n+            Assert.assertTrue(\"could not delete target \" + tmp.getPath(), tmp.delete());\n+            Assert.assertTrue(\"could not delete target \" + tmp2.getPath(), tmp2.delete());\n         }\n     }\n }",
      "parent_sha": "910bcfa5b8743a2226cc7364130b6de10f120334"
    }
  },
  {
    "oid": "3a05155f9c17d51be27ae10059a104bb132b70bf",
    "message": "[FIXED HUDSON-1901] Ignore directories that don't have config.xml in it.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@10302 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2008-06-23T00:17:25Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/3a05155f9c17d51be27ae10059a104bb132b70bf",
    "details": {
      "sha": "34f59c2b090602b2e60e23b63da0de6183add521",
      "filename": "core/src/main/java/hudson/model/Hudson.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/3a05155f9c17d51be27ae10059a104bb132b70bf/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FHudson.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/3a05155f9c17d51be27ae10059a104bb132b70bf/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FHudson.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FHudson.java?ref=3a05155f9c17d51be27ae10059a104bb132b70bf",
      "patch": "@@ -1293,7 +1293,7 @@ private synchronized void load() throws IOException {\n         }\n         File[] subdirs = projectsDir.listFiles(new FileFilter() {\n             public boolean accept(File child) {\n-                return child.isDirectory();\n+                return child.isDirectory() && Items.getConfigFile(child).exists();\n             }\n         });\n         items.clear();",
      "parent_sha": "0513a3ff4e5b7bc9a3c0f79d9bf1b8f0e717e13c"
    }
  },
  {
    "oid": "6e563ba881d6a99550e061b5764e4b782700aa1d",
    "message": "[JENKINS-55085] - Use the main update center by default when running with Java 11\n\nReverts a custom experimental update center for Java 11 which was enabled to workaround the Java 11 compatibility issue in the Pipeline: Support plugin. See https://github.com/jenkinsci/jenkins/pull/3794 . Now Pipeline: Support plugin 3.0+ is available in the main update center, and a custom UC is nolonger required.",
    "date": "2019-02-05T11:18:56Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/6e563ba881d6a99550e061b5764e4b782700aa1d",
    "details": {
      "sha": "299721f60efbc5cc76bb12fd1d12b1a26509eb49",
      "filename": "core/src/main/java/hudson/model/UpdateCenter.java",
      "status": "modified",
      "additions": 1,
      "deletions": 8,
      "changes": 9,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/6e563ba881d6a99550e061b5764e4b782700aa1d/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FUpdateCenter.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/6e563ba881d6a99550e061b5764e4b782700aa1d/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FUpdateCenter.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FUpdateCenter.java?ref=6e563ba881d6a99550e061b5764e4b782700aa1d",
      "patch": "@@ -216,15 +216,8 @@ public class UpdateCenter extends AbstractModelObject implements Saveable, OnMas\n         if (ucOverride != null) {\n             logger.log(Level.INFO, \"Using a custom update center defined by the system property: {0}\", ucOverride);\n             UPDATE_CENTER_URL = ucOverride;\n-        } else if (JavaUtils.isRunningWithJava8OrBelow()) {\n-            UPDATE_CENTER_URL = \"https://updates.jenkins.io/\";\n         } else {\n-            //TODO: Rollback the default for Java 11 when it goes to GA\n-            String experimentalJava11UC = \"https://updates.jenkins.io/temporary-experimental-java11/\";\n-            logger.log(Level.WARNING, \"Running Jenkins with Java {0} which is available in the preview mode only. \" +\n-                    \"A custom experimental update center will be used: {1}\",\n-                    new Object[] {System.getProperty(\"java.specification.version\"), experimentalJava11UC});\n-            UPDATE_CENTER_URL = experimentalJava11UC;\n+            UPDATE_CENTER_URL = \"https://updates.jenkins.io/\";\n         }\n     }\n ",
      "parent_sha": "adff32507066c038eee5efdf7386ac65824743ca"
    }
  },
  {
    "oid": "69a2461d7d2e6fc9dd5702315afe6bdec1394982",
    "message": "getTransitiveDownstreamProjects was erroneously returning the transitive upstream projects. Fixed.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@6081 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2007-11-27T04:47:04Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/69a2461d7d2e6fc9dd5702315afe6bdec1394982",
    "details": {
      "sha": "e32d4f23fec8209f6b58ad15991402c57c188667",
      "filename": "core/src/main/java/hudson/model/AbstractProject.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/69a2461d7d2e6fc9dd5702315afe6bdec1394982/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FAbstractProject.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/69a2461d7d2e6fc9dd5702315afe6bdec1394982/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FAbstractProject.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FAbstractProject.java?ref=69a2461d7d2e6fc9dd5702315afe6bdec1394982",
      "patch": "@@ -692,7 +692,7 @@ public final Set<AbstractProject> getTransitiveUpstreamProjects() {\n      * @since 1.138\n      */\n     public final Set<AbstractProject> getTransitiveDownstreamProjects() {\n-        return Hudson.getInstance().getDependencyGraph().getTransitiveUpstream(this);\n+        return Hudson.getInstance().getDependencyGraph().getTransitiveDownstream(this);\n     }\n \n     /**",
      "parent_sha": "62a34d3632eae4bfcb23bfbc7fcd29bcdc2c0586"
    }
  },
  {
    "oid": "2627da8966f8bb0f6f47e7202558e230e9769fc2",
    "message": "inconsistent synchronization\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@11306 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2008-08-06T21:21:23Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/2627da8966f8bb0f6f47e7202558e230e9769fc2",
    "details": {
      "sha": "6628e511ae1d6bc44ac7139057d47d0eee444e7f",
      "filename": "core/src/main/java/hudson/tasks/junit/TestResultAction.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/2627da8966f8bb0f6f47e7202558e230e9769fc2/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Ftasks%2Fjunit%2FTestResultAction.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/2627da8966f8bb0f6f47e7202558e230e9769fc2/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Ftasks%2Fjunit%2FTestResultAction.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Ftasks%2Fjunit%2FTestResultAction.java?ref=2627da8966f8bb0f6f47e7202558e230e9769fc2",
      "patch": "@@ -45,7 +45,7 @@ public TestResultAction(AbstractBuild owner, TestResult result, BuildListener li\n     /**\n      * Overwrites the {@link TestResult} by a new data set.\n      */\n-    public void setResult(TestResult result, BuildListener listener) {\n+    public synchronized void setResult(TestResult result, BuildListener listener) {\n         result.freeze(this);\n \n         totalCount = result.getTotalCount();",
      "parent_sha": "a06c4537c9a9660a1c25fa53e5d06c9f0ea65bc4"
    }
  },
  {
    "oid": "e266ec9a0bea4be1a35beb4353d420aa42246110",
    "message": "This just ends up passing the -B option twice.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@18030 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2009-05-13T05:51:55Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/e266ec9a0bea4be1a35beb4353d420aa42246110",
    "details": {
      "sha": "d8c5a5956766615041beabf96cf26dd53bb75db0",
      "filename": "maven-plugin/src/main/java/hudson/maven/MavenBuilder.java",
      "status": "modified",
      "additions": 2,
      "deletions": 5,
      "changes": 7,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/e266ec9a0bea4be1a35beb4353d420aa42246110/maven-plugin%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmaven%2FMavenBuilder.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/e266ec9a0bea4be1a35beb4353d420aa42246110/maven-plugin%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmaven%2FMavenBuilder.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/maven-plugin%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmaven%2FMavenBuilder.java?ref=e266ec9a0bea4be1a35beb4353d420aa42246110",
      "patch": "@@ -155,11 +155,8 @@ public Result call() throws IOException {\n \n             System.getProperties().putAll(systemProps);\n \n-            List<String> args = new ArrayList<String>(goals.size()+1);\n-            args.add(\"-B\"); // run Maven in the non-interactive mode\n-            args.addAll(goals);\n-            listener.getLogger().println(formatArgs(args));\n-            int r = Main.launch(args.toArray(new String[args.size()]));\n+            listener.getLogger().println(formatArgs(goals));\n+            int r = Main.launch(goals.toArray(new String[goals.size()]));\n \n             // now check the completion status of async ops\n             boolean messageReported = false;",
      "parent_sha": "fcf4b3629b550c6ac1e9c06a39ec2a075cc98548"
    }
  },
  {
    "oid": "d7b120fea37b46b863c89acb638d04cdddc868b4",
    "message": "Cache estimated duration for execution\n\nIn case of having 1000s of ongoing builds opening main pages can take\nsome time if list of executors are opened. It happens because for every\nqueury that comes from jelly we re-calculate the value from scratch. And\ncalculation needs to load some builds from disk. The worst thing is that it\nhappens for every user separately.",
    "date": "2017-11-16T08:43:59Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/d7b120fea37b46b863c89acb638d04cdddc868b4",
    "details": {
      "sha": "e20f9a1eeec69b4d3fd45c9b1a5c519cae2f92ee",
      "filename": "core/src/main/java/hudson/model/Executor.java",
      "status": "modified",
      "additions": 23,
      "deletions": 51,
      "changes": 74,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/d7b120fea37b46b863c89acb638d04cdddc868b4/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FExecutor.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/d7b120fea37b46b863c89acb638d04cdddc868b4/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FExecutor.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FExecutor.java?ref=d7b120fea37b46b863c89acb638d04cdddc868b4",
      "patch": "@@ -87,6 +87,7 @@ public class Executor extends Thread implements ModelObject {\n     protected final @Nonnull Computer owner;\n     private final Queue queue;\n     private final ReadWriteLock lock = new ReentrantReadWriteLock();\n+    private static final int DEFAULT_ESTIMATED_DURATION = -1;\n \n     @GuardedBy(\"lock\")\n     private long startTime;\n@@ -105,6 +106,11 @@ public class Executor extends Thread implements ModelObject {\n     @GuardedBy(\"lock\")\n     private Queue.Executable executable;\n \n+    /**\n+     * Calculation of estimated duration needs some time, so, it's better to cache it once executable is known\n+     */\n+    private long executableEstimatedDuration = DEFAULT_ESTIMATED_DURATION;\n+\n     /**\n      * Used to mark that the execution is continuing asynchronously even though {@link Executor} as {@link Thread}\n      * has finished.\n@@ -396,6 +402,8 @@ public SubTask call() throws Exception {\n                     return;\n                 }\n \n+                executableEstimatedDuration = executable.getEstimatedDuration();\n+\n                 if (executable instanceof Actionable) {\n                     if (LOGGER.isLoggable(Level.FINER)) {\n                         LOGGER.log(FINER, \"when running {0} from {1} we are copying {2} actions whereas the item currently has {3}\", new Object[] {executable, workUnit.context.item, workUnit.context.actions, workUnit.context.item.getAllActions()});\n@@ -451,6 +459,7 @@ public SubTask call() throws Exception {\n             if (asynchronousExecution == null) {\n                 finish2();\n             }\n+            executableEstimatedDuration = DEFAULT_ESTIMATED_DURATION;\n         }\n     }\n \n@@ -686,18 +695,9 @@ public boolean isParking() {\n      */\n     @Exported\n     public int getProgress() {\n-        long d;\n-        lock.readLock().lock();\n-        try {\n-            if (executable == null) {\n-                return -1;\n-            }\n-            d = executable.getEstimatedDuration();\n-        } finally {\n-            lock.readLock().unlock();\n-        }\n+        long d = executableEstimatedDuration;\n         if (d <= 0) {\n-            return -1;\n+            return DEFAULT_ESTIMATED_DURATION;\n         }\n \n         int num = (int) (getElapsedTime() * 100 / d);\n@@ -716,19 +716,17 @@ public int getProgress() {\n      */\n     @Exported\n     public boolean isLikelyStuck() {\n-        long d;\n-        long elapsed;\n         lock.readLock().lock();\n         try {\n             if (executable == null) {\n                 return false;\n             }\n-\n-            elapsed = getElapsedTime();\n-            d = executable.getEstimatedDuration();\n         } finally {\n             lock.readLock().unlock();\n         }\n+\n+        long elapsed = getElapsedTime();\n+        long d = executableEstimatedDuration;\n         if (d >= 0) {\n             // if it's taking 10 times longer than ETA, consider it stuck\n             return d * 10 < elapsed;\n@@ -776,17 +774,7 @@ public String getTimestampString() {\n      * until the build completes.\n      */\n     public String getEstimatedRemainingTime() {\n-        long d;\n-        lock.readLock().lock();\n-        try {\n-            if (executable == null) {\n-                return Messages.Executor_NotAvailable();\n-            }\n-\n-            d = executable.getEstimatedDuration();\n-        } finally {\n-            lock.readLock().unlock();\n-        }\n+        long d = executableEstimatedDuration;\n         if (d < 0) {\n             return Messages.Executor_NotAvailable();\n         }\n@@ -804,24 +792,14 @@ public String getEstimatedRemainingTime() {\n      * it as a number of milli-seconds.\n      */\n     public long getEstimatedRemainingTimeMillis() {\n-        long d;\n-        lock.readLock().lock();\n-        try {\n-            if (executable == null) {\n-                return -1;\n-            }\n-\n-            d = executable.getEstimatedDuration();\n-        } finally {\n-            lock.readLock().unlock();\n-        }\n+        long d = executableEstimatedDuration;\n         if (d < 0) {\n-            return -1;\n+            return DEFAULT_ESTIMATED_DURATION;\n         }\n \n         long eta = d - getElapsedTime();\n         if (eta <= 0) {\n-            return -1;\n+            return DEFAULT_ESTIMATED_DURATION;\n         }\n \n         return eta;\n@@ -906,16 +884,10 @@ public boolean hasStopPermission() {\n      * Returns when this executor started or should start being idle.\n      */\n     public long getIdleStartMilliseconds() {\n-        lock.readLock().lock();\n-        try {\n-            if (isIdle())\n-                return Math.max(creationTime, owner.getConnectTime());\n-            else {\n-                return Math.max(startTime + Math.max(0, executable == null ? -1 : executable.getEstimatedDuration()),\n-                        System.currentTimeMillis() + 15000);\n-            }\n-        } finally {\n-            lock.readLock().unlock();\n+        if (isIdle())\n+            return Math.max(creationTime, owner.getConnectTime());\n+        else {\n+            return Math.max(startTime + Math.max(0, executableEstimatedDuration), System.currentTimeMillis() + 15000);\n         }\n     }\n \n@@ -981,7 +953,7 @@ public static Executor of(Executable executable) {\n      */\n     @Deprecated\n     public static long getEstimatedDurationFor(Executable e) {\n-        return e == null ? -1 : e.getEstimatedDuration();\n+        return e == null ? DEFAULT_ESTIMATED_DURATION : e.getEstimatedDuration();\n     }\n \n     /**",
      "parent_sha": "790068c8486cdd4741336f9d61de72a9a6537a30"
    }
  },
  {
    "oid": "fe67909c6fd7c45ee47fa4dd8998e0c48adf430f",
    "message": "If the JDK file size is too small, don't use it as a cache.\n\nIn the past JDK download site had served error message with 200 error code, making Jenkins think that the download is actually successful. Without this check, such cache polution will not be corrected.",
    "date": "2012-05-22T01:43:17Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/fe67909c6fd7c45ee47fa4dd8998e0c48adf430f",
    "details": {
      "sha": "9692589efc370736ca25b0251db24048e99375e9",
      "filename": "core/src/main/java/hudson/tools/JDKInstaller.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/fe67909c6fd7c45ee47fa4dd8998e0c48adf430f/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Ftools%2FJDKInstaller.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/fe67909c6fd7c45ee47fa4dd8998e0c48adf430f/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Ftools%2FJDKInstaller.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Ftools%2FJDKInstaller.java?ref=fe67909c6fd7c45ee47fa4dd8998e0c48adf430f",
      "patch": "@@ -324,7 +324,7 @@ private File getLocalCacheFile(Platform platform, CPU cpu) {\n      */\n     public URL locate(TaskListener log, Platform platform, CPU cpu) throws IOException {\n         File cache = getLocalCacheFile(platform, cpu);\n-        if (cache.exists()) return cache.toURL();\n+        if (cache.exists() && cache.length()>1*1024*1024) return cache.toURL(); // if the file is too small, don't trust it. In the past, the download site served error message in 200 status code\n \n         log.getLogger().println(\"Installing JDK \"+id);\n         JDKFamilyList families = JDKList.all().get(JDKList.class).toList();",
      "parent_sha": "d85d3b2f07e0f3ae446f366413ee16b0e85528ee"
    }
  },
  {
    "oid": "90fd89ff67e881e5efbc7085defbc0be674a92c8",
    "message": "Use run(Callable) from the default list(String, String, boolean) so it can run efficiently without an override.",
    "date": "2018-03-23T20:47:53Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/90fd89ff67e881e5efbc7085defbc0be674a92c8",
    "details": {
      "sha": "77d56157877e464f1382b5b85c035cffd6a880c0",
      "filename": "core/src/main/java/jenkins/util/VirtualFile.java",
      "status": "modified",
      "additions": 22,
      "deletions": 9,
      "changes": 31,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/90fd89ff67e881e5efbc7085defbc0be674a92c8/core%2Fsrc%2Fmain%2Fjava%2Fjenkins%2Futil%2FVirtualFile.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/90fd89ff67e881e5efbc7085defbc0be674a92c8/core%2Fsrc%2Fmain%2Fjava%2Fjenkins%2Futil%2FVirtualFile.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fjenkins%2Futil%2FVirtualFile.java?ref=90fd89ff67e881e5efbc7085defbc0be674a92c8",
      "patch": "@@ -56,6 +56,7 @@\n import javax.annotation.Nonnull;\n import jenkins.MasterToSlaveFileCallable;\n import jenkins.model.ArtifactManager;\n+import jenkins.security.MasterToSlaveCallable;\n import org.apache.tools.ant.DirectoryScanner;\n import org.apache.tools.ant.types.AbstractFileSet;\n import org.apache.tools.ant.types.selectors.SelectorUtils;\n@@ -177,7 +178,7 @@ public abstract class VirtualFile implements Comparable<VirtualFile>, Serializab\n \n     /**\n      * Lists recursive files of this directory with pattern matching.\n-     * <p>The default implementation calls {@link #list()} recursively and applies filtering to the result.\n+     * <p>The default implementation calls {@link #list()} recursively inside {@link #run} and applies filtering to the result.\n      * Implementations may wish to override this more efficiently.\n      * @param includes comma-separated Ant-style globs as per {@link Util#createFileSet(File, String, String)} using {@code /} as a path separator;\n      *                 the empty string means <em>no matches</em> (use {@link SelectorUtils#DEEP_TREE_MATCH} if you want to match everything except some excludes)\n@@ -188,8 +189,7 @@ public abstract class VirtualFile implements Comparable<VirtualFile>, Serializab\n      * @since FIXME\n      */\n     public @Nonnull Collection<String> list(@Nonnull String includes, @CheckForNull String excludes, boolean useDefaultExcludes) throws IOException {\n-        List<String> r = new ArrayList<>();\n-        collectFiles(r, \"\");\n+        Collection<String> r = run(new CollectFiles(this));\n         List<TokenizedPattern> includePatterns = patterns(includes);\n         List<TokenizedPattern> excludePatterns = patterns(excludes);\n         if (useDefaultExcludes) {\n@@ -202,12 +202,25 @@ public abstract class VirtualFile implements Comparable<VirtualFile>, Serializab\n             return includePatterns.stream().anyMatch(patt -> patt.matchPath(path, true)) && !excludePatterns.stream().anyMatch(patt -> patt.matchPath(path, true));\n         }).collect(Collectors.toSet());\n     }\n-    private void collectFiles(Collection<String> names, String prefix) throws IOException {\n-        for (VirtualFile child : list()) {\n-            if (child.isFile()) {\n-                names.add(prefix + child.getName());\n-            } else if (child.isDirectory()) {\n-                child.collectFiles(names, prefix + child.getName() + \"/\");\n+    private static final class CollectFiles extends MasterToSlaveCallable<Collection<String>, IOException> {\n+        private static final long serialVersionUID = 1;\n+        private final VirtualFile root;\n+        CollectFiles(VirtualFile root) {\n+            this.root = root;\n+        }\n+        @Override\n+        public Collection<String> call() throws IOException {\n+            List<String> r = new ArrayList<>();\n+            collectFiles(root, r, \"\");\n+            return r;\n+        }\n+        private static void collectFiles(VirtualFile d, Collection<String> names, String prefix) throws IOException {\n+            for (VirtualFile child : d.list()) {\n+                if (child.isFile()) {\n+                    names.add(prefix + child.getName());\n+                } else if (child.isDirectory()) {\n+                    collectFiles(child, names, prefix + child.getName() + \"/\");\n+                }\n             }\n         }\n     }",
      "parent_sha": "2e1af785ea2252a609af48ec2d59606957a39257"
    }
  },
  {
    "oid": "53e95ee517259e1e10d7209bcbaa4314397c1f40",
    "message": "[JENKINS-22395]\n\nI'm not sure if I understand how the original fix in PR #1190 (f1430a2) addresses the problem.\n\nMy understanding is of the problem is as follows:\n\n  - someone deletes 'b2' but holds on to its reference (could be different threads)\n  - someone calls b2.getPreviousBuild()\n    - if b2.previousBuildR is null, then this triggers the loading of b1, and\n      that process sets up a bi-di link via b1<->b2 via b1.nextBuildR <-> b2.previousBuildR\n    - this makes b1.getNextBuild() incorrectly return b2\n\nPresumably f1430a2 addresses this somehow, but I think I can induce this situation in other ways,\nwhich is what dropLinksAfterGC2() does.\n\nIn this test,\n\ninitial state:\n\n   b1 <-> b2 <-> b3\n\n   we load everyone and connect them all up\n\nafter deleting b2:\n\n   b1 <--------> b3\n    ^            ^\n    +---- b2 ----+\n\n  b1 and b3 points each other, and b2 still refers to each side\n\nafter dropping b1:\n\n          b2 --> b3\n\nnow, here, when I do b2.getPreviousBuild(), it loads b1a and it sets b1a.nextBuildR to b2.\n\n    b1a <-> b2 --> b3\n\nSo I claim this is a proof that the fix is incomplete, even for the problem JENKINS-22395 has discovered.\n\nI don't think that the problem is for the dropLinks call to fail to patch up references.\nThe problem is that b2.getPreviousBuild() forcing b1 to point to b2, because if b2 is deleted and assumed to be\ninvalid, then no matter what bX this method will find you never want bX.nextBuildR to point to b2.",
    "date": "2014-07-10T22:24:34Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/53e95ee517259e1e10d7209bcbaa4314397c1f40",
    "details": {
      "sha": "d18a565e23dd44fd3e1235f930560d0822f28f41",
      "filename": "test/src/test/java/jenkins/model/lazy/LazyBuildMixInTest.java",
      "status": "modified",
      "additions": 23,
      "deletions": 1,
      "changes": 24,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/53e95ee517259e1e10d7209bcbaa4314397c1f40/test%2Fsrc%2Ftest%2Fjava%2Fjenkins%2Fmodel%2Flazy%2FLazyBuildMixInTest.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/53e95ee517259e1e10d7209bcbaa4314397c1f40/test%2Fsrc%2Ftest%2Fjava%2Fjenkins%2Fmodel%2Flazy%2FLazyBuildMixInTest.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/test%2Fsrc%2Ftest%2Fjava%2Fjenkins%2Fmodel%2Flazy%2FLazyBuildMixInTest.java?ref=53e95ee517259e1e10d7209bcbaa4314397c1f40",
      "patch": "@@ -33,6 +33,7 @@\n import org.junit.Rule;\n import org.junit.Test;\n import org.jvnet.hudson.test.Bug;\n+import org.jvnet.hudson.test.Issue;\n import org.jvnet.hudson.test.JenkinsRule;\n import org.jvnet.hudson.test.SleepBuilder;\n import org.jvnet.hudson.test.TestExtension;\n@@ -60,10 +61,31 @@ public class LazyBuildMixInTest {\n         assertEquals(1, b1a.getNumber());\n         assertEquals(b3, b1a.getNextBuild());\n     }\n+\n+    @Issue(\"JENKINS-22395\")\n+    @Test public void dropLinksAfterGC2() throws Exception {\n+        FreeStyleProject p = r.createFreeStyleProject();\n+        FreeStyleBuild b1 = r.buildAndAssertSuccess(p);\n+        FreeStyleBuild b2 = r.buildAndAssertSuccess(p);\n+        FreeStyleBuild b3 = r.buildAndAssertSuccess(p);\n+        assertEquals(b2, b1.getNextBuild());\n+        assertEquals(b3, b2.getNextBuild());\n+        assertEquals(null, b3.getNextBuild());\n+        assertEquals(null, b1.getPreviousBuild());\n+        assertEquals(b1, b2.getPreviousBuild());\n+        assertEquals(b2, b3.getPreviousBuild());\n+        b2.delete();\n+        assertEquals(1, BRHF.drop(b1));\n+        FreeStyleBuild b1a = b2.getPreviousBuild();\n+        assertNotSame(b1, b1a);\n+        assertEquals(1, b1a.getNumber());\n+        assertEquals(b3, b1a.getNextBuild());\n+    }\n+\n     /**\n      * Unlike the standard {@link SoftReference} this lets us simulate a referent disappearing at a specific time.\n      */\n-    @TestExtension(\"dropLinksAfterGC\") public static final class BRHF implements BuildReference.HolderFactory {\n+    @TestExtension public static final class BRHF implements BuildReference.HolderFactory {\n         private static final List<BRH<?>> refs = new ArrayList<BRH<?>>();\n         private static final class BRH<R> implements BuildReference.Holder<R> {\n             R r;",
      "parent_sha": "fb47f1d11346fe45245a8fdb1b2cf9e188d3c0c8"
    }
  },
  {
    "oid": "e51d990bc02b37fcdd8a9e9db08a3b98a00ce08b",
    "message": "improving the headless environment detection.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@16750 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2009-03-31T01:30:19Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/e51d990bc02b37fcdd8a9e9db08a3b98a00ce08b",
    "details": {
      "sha": "8b430af229160bb1389e2309fbea12b3054c6cbc",
      "filename": "test/src/test/java/hudson/slaves/JNLPLauncherTest.java",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/e51d990bc02b37fcdd8a9e9db08a3b98a00ce08b/test%2Fsrc%2Ftest%2Fjava%2Fhudson%2Fslaves%2FJNLPLauncherTest.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/e51d990bc02b37fcdd8a9e9db08a3b98a00ce08b/test%2Fsrc%2Ftest%2Fjava%2Fhudson%2Fslaves%2FJNLPLauncherTest.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/test%2Fsrc%2Ftest%2Fjava%2Fhudson%2Fslaves%2FJNLPLauncherTest.java?ref=e51d990bc02b37fcdd8a9e9db08a3b98a00ce08b",
      "patch": "@@ -41,6 +41,7 @@\n import java.util.ArrayList;\n import java.util.List;\n import java.util.concurrent.TimeUnit;\n+import java.awt.*;\n \n /**\n  * @author Kohsuke Kawaguchi\n@@ -50,10 +51,13 @@ public class JNLPLauncherTest extends HudsonTestCase {\n      * Starts a JNLP slave agent and makes sure it successfully connects to Hudson. \n      */\n     public void testLaunch() throws Exception {\n-        if(Boolean.getBoolean(\"java.awt.headless\")) {\n+        try {\n+            GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice();\n+        } catch (HeadlessException e) {\n             System.err.println(\"Skipping JNLPLauncherTest.testLaunch because we are running headless\");\n             return;\n         }\n+\n         System.err.println(\"Not in headless mode, continuing with JNLPLauncherTest.testLaunch...\");\n         Computer c = addTestSlave();\n         launchJnlpAndVerify(c, buildJnlpArgs(c));",
      "parent_sha": "d9296edee929452272767f13db2c0bdba255375f"
    }
  },
  {
    "oid": "994fd9ffdd29261ac83c7f6d8b4f682da636e07c",
    "message": "Annotate and document the AsynchronousExecution#getExecutor() method (#2447)",
    "date": "2016-07-15T13:32:47Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/994fd9ffdd29261ac83c7f6d8b4f682da636e07c",
    "details": {
      "sha": "9189a4e630b72d3948739121d0d9a0091f9dd6e5",
      "filename": "core/src/main/java/jenkins/model/queue/AsynchronousExecution.java",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/994fd9ffdd29261ac83c7f6d8b4f682da636e07c/core%2Fsrc%2Fmain%2Fjava%2Fjenkins%2Fmodel%2Fqueue%2FAsynchronousExecution.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/994fd9ffdd29261ac83c7f6d8b4f682da636e07c/core%2Fsrc%2Fmain%2Fjava%2Fjenkins%2Fmodel%2Fqueue%2FAsynchronousExecution.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fjenkins%2Fmodel%2Fqueue%2FAsynchronousExecution.java?ref=994fd9ffdd29261ac83c7f6d8b4f682da636e07c",
      "patch": "@@ -32,6 +32,7 @@\n import hudson.model.ResourceController;\n import hudson.model.ResourceList;\n import javax.annotation.CheckForNull;\n+import javax.annotation.Nonnull;\n import javax.annotation.concurrent.GuardedBy;\n import org.kohsuke.accmod.Restricted;\n import org.kohsuke.accmod.restrictions.NoExternalUse;\n@@ -93,13 +94,16 @@ protected AsynchronousExecution() {}\n \n     /**\n      * Obtains the associated executor.\n+     * @return Associated Executor. May be {@code null} if {@link #setExecutor(hudson.model.Executor)} \n+     * has not been called yet.\n      */\n+    @CheckForNull\n     public synchronized final Executor getExecutor() {\n         return executor;\n     }\n \n     @Restricted(NoExternalUse.class)\n-    public synchronized final void setExecutor(Executor executor) {\n+    public synchronized final void setExecutor(@Nonnull Executor executor) {\n         assert this.executor==null;\n \n         this.executor = executor;",
      "parent_sha": "0b517705f5de454f2896d5c345ac8ec4fa8f6651"
    }
  },
  {
    "oid": "991072bf722bc2b4f365721b432d7dde86dd9c1e",
    "message": "Constraining type of People.parent at least a little bit, to ModelObject.\n(Its index.jelly does assume getDisplayName is available.)",
    "date": "2012-09-17T19:58:27Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/991072bf722bc2b4f365721b432d7dde86dd9c1e",
    "details": {
      "sha": "ded2b9872fc402d095b4639f7648245d95a1ac8a",
      "filename": "core/src/main/java/hudson/model/View.java",
      "status": "modified",
      "additions": 1,
      "deletions": 9,
      "changes": 10,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/991072bf722bc2b4f365721b432d7dde86dd9c1e/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FView.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/991072bf722bc2b4f365721b432d7dde86dd9c1e/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FView.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FView.java?ref=991072bf722bc2b4f365721b432d7dde86dd9c1e",
      "patch": "@@ -32,12 +32,8 @@\n import hudson.ExtensionPoint;\n import hudson.Indenter;\n import hudson.Util;\n-import hudson.XmlFile;\n import hudson.model.Descriptor.FormException;\n-import hudson.model.Node.Mode;\n-import hudson.model.labels.LabelAtom;\n import hudson.model.labels.LabelAtomPropertyDescriptor;\n-import hudson.model.listeners.SaveableListener;\n import hudson.scm.ChangeLogSet.Entry;\n import hudson.search.CollectionSearchIndex;\n import hudson.search.SearchIndexBuilder;\n@@ -48,11 +44,9 @@\n import hudson.security.PermissionScope;\n import hudson.util.AlternativeUiTextProvider;\n import hudson.util.AlternativeUiTextProvider.Message;\n-import hudson.util.AtomicFileWriter;\n import hudson.util.DescribableList;\n import hudson.util.DescriptorList;\n import hudson.util.IOException2;\n-import hudson.util.IOUtils;\n import hudson.util.RunList;\n import hudson.util.XStream2;\n import hudson.views.ListViewColumn;\n@@ -77,7 +71,6 @@\n import javax.xml.transform.stream.StreamSource;\n import java.io.BufferedInputStream;\n import java.io.ByteArrayInputStream;\n-import java.io.FileInputStream;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.StringWriter;\n@@ -92,7 +85,6 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n-import java.util.Set;\n import java.util.logging.Level;\n import java.util.logging.Logger;\n \n@@ -645,7 +637,7 @@ public static final class People  {\n         @Exported\n         public final List<UserInfo> users;\n \n-        public final Object parent;\n+        public final ModelObject parent;\n \n         public People(Jenkins parent) {\n             this.parent = parent;",
      "parent_sha": "1906f601edab9f800d8453cdc0aea0d63f2b604d"
    }
  },
  {
    "oid": "3aaac809b64a5c420aadd1359253cd78ce95ebdf",
    "message": "Fixing ClassCastException\n\ncasting the toArray result will sometimes cause ClassCastExceptions.\r\ni.e.:\r\nCaused by: java.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Ljava.lang.String;\r\n\tat hudson.security.WhoAmI.getAuthorities(WhoAmI.java:65)",
    "date": "2012-09-26T21:31:44Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/3aaac809b64a5c420aadd1359253cd78ce95ebdf",
    "details": {
      "sha": "4f03981646e9fa223d727ec481a3dcf5ff76f505",
      "filename": "core/src/main/java/hudson/security/WhoAmI.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/3aaac809b64a5c420aadd1359253cd78ce95ebdf/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fsecurity%2FWhoAmI.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/3aaac809b64a5c420aadd1359253cd78ce95ebdf/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fsecurity%2FWhoAmI.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fsecurity%2FWhoAmI.java?ref=3aaac809b64a5c420aadd1359253cd78ce95ebdf",
      "patch": "@@ -62,12 +62,12 @@ private Authentication auth() {\n     public String[] getAuthorities() {\n         List <String> authorities = new ArrayList<String>();\n         if (auth().getAuthorities() == null) {\n-            return (String[]) authorities.toArray();\n+            return new String[0];\n         }\n         for (GrantedAuthority a : auth().getAuthorities()) {\n             authorities.add(a.getAuthority());\n         }\n-        return (String[]) authorities.toArray(new String[0]);\n+        return (String[]) authorities.toArray(new String[authorities.size()]);\n     }\n \n     @Override",
      "parent_sha": "f4c8165838485bf2b3d5bacd6c7910c1d644fd5a"
    }
  },
  {
    "oid": "987fecd3f86542e2746deb02cb7bd59ba23d940f",
    "message": "doc improvement\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@14769 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2009-01-24T07:41:09Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/987fecd3f86542e2746deb02cb7bd59ba23d940f",
    "details": {
      "sha": "13131a5909f79d9eb8ca01621a879e2dae7ef38f",
      "filename": "core/src/main/java/hudson/model/Queue.java",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/987fecd3f86542e2746deb02cb7bd59ba23d940f/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FQueue.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/987fecd3f86542e2746deb02cb7bd59ba23d940f/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FQueue.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FQueue.java?ref=987fecd3f86542e2746deb02cb7bd59ba23d940f",
      "patch": "@@ -750,7 +750,14 @@ public interface Task extends ModelObject, ResourceActivity {\n         boolean hasAbortPermission();\n         \n         /**\n-         * The relative url for this task\n+         * Returns the URL of this task relative to the context root of the application.\n+         *\n+         * <p>\n+         * When the user clicks an item in the queue, this is the page where the user is taken to.\n+         * Hudson expects the current instance to be bound to the URL returned by this method.\n+         *\n+         * @return\n+         *      URL that ends with '/'.\n          */\n         String getUrl();\n         ",
      "parent_sha": "f98867a6db284c3afe1d5470292ba5b4d3dce89d"
    }
  },
  {
    "oid": "e992cf11f506bcd7d79065827140992e006ebe7c",
    "message": "doc improvement.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@1065 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2006-11-09T02:26:26Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/e992cf11f506bcd7d79065827140992e006ebe7c",
    "details": {
      "sha": "c243d3e7e20dc1ecbf9017257f872793c696ca71",
      "filename": "core/src/main/java/hudson/triggers/Trigger.java",
      "status": "modified",
      "additions": 18,
      "deletions": 5,
      "changes": 23,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/e992cf11f506bcd7d79065827140992e006ebe7c/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Ftriggers%2FTrigger.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/e992cf11f506bcd7d79065827140992e006ebe7c/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Ftriggers%2FTrigger.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Ftriggers%2FTrigger.java?ref=e992cf11f506bcd7d79065827140992e006ebe7c",
      "patch": "@@ -1,6 +1,7 @@\n package hudson.triggers;\n \n import antlr.ANTLRException;\n+import hudson.ExtensionPoint;\n import hudson.model.Action;\n import hudson.model.Build;\n import hudson.model.Describable;\n@@ -9,8 +10,6 @@\n import hudson.model.Project;\n import hudson.model.WorkspaceCleanupThread;\n import hudson.scheduler.CronTabList;\n-import hudson.ExtensionPoint;\n-import hudson.tasks.BuildStep;\n \n import java.io.InvalidObjectException;\n import java.io.ObjectStreamException;\n@@ -46,9 +45,10 @@ public void start(Project project) {\n     /**\n      * Executes the triggered task.\n      *\n-     * This method is invoked when the crontab matches the current time.\n+     * This method is invoked when {@link #Trigger(String)} is used\n+     * to create an instance, and the crontab matches the current time.\n      */\n-    protected abstract void run();\n+    protected void run() {}\n \n     /**\n      * Called before a {@link Trigger} is removed.\n@@ -71,17 +71,30 @@ public Action getProjectAction() {\n     protected transient CronTabList tabs;\n     protected transient Project project;\n \n+    /**\n+     * Creates a new {@link Trigger} that gets {@link #run() run}\n+     * periodically. This is useful when your trigger does\n+     * some polling work.\n+     */\n     protected Trigger(String cronTabSpec) throws ANTLRException {\n         this.spec = cronTabSpec;\n         this.tabs = CronTabList.create(cronTabSpec);\n     }\n \n+    /**\n+     * Creates a new {@link Trigger} without using cron.\n+     */\n     protected Trigger() {\n         this.spec = \"\";\n         this.tabs = new CronTabList(Collections.EMPTY_LIST);\n     }\n \n-    public String getSpec() {\n+    /**\n+     * Gets the crontab specification.\n+     *\n+     * If you are not using cron service, just ignore it.\n+     */\n+    public final String getSpec() {\n         return spec;\n     }\n ",
      "parent_sha": "a5a18c1c011d7e79f458d2c107b0abb5b76ffc39"
    }
  },
  {
    "oid": "58a5d2249deb2abfa6e0c4e7854ac2fc2f3fc1b7",
    "message": "[JENKINS-4610] - Remove historical CVS code in the ChangeLogParser initialization (#2248)\n\n* Remove CVS historical code - JENKINS-4610\r\n\r\n* Fix whitespace issue",
    "date": "2016-05-11T09:45:43Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/58a5d2249deb2abfa6e0c4e7854ac2fc2f3fc1b7",
    "details": {
      "sha": "071872fab3a08abf3e8331cb4cc7a06123f51641",
      "filename": "core/src/main/java/hudson/model/AbstractBuild.java",
      "status": "modified",
      "additions": 1,
      "deletions": 18,
      "changes": 19,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/58a5d2249deb2abfa6e0c4e7854ac2fc2f3fc1b7/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FAbstractBuild.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/58a5d2249deb2abfa6e0c4e7854ac2fc2f3fc1b7/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FAbstractBuild.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FAbstractBuild.java?ref=58a5d2249deb2abfa6e0c4e7854ac2fc2f3fc1b7",
      "patch": "@@ -127,7 +127,6 @@ public abstract class AbstractBuild<P extends AbstractProject<P,R>,R extends Abs\n \n     /**\n      * SCM used for this build.\n-     * Maybe null, for historical reason, in which case CVS is assumed.\n      */\n     private ChangeLogParser scm;\n \n@@ -597,9 +596,6 @@ public void defaultCheckout() throws IOException, InterruptedException {\n             AbstractProject<?, ?> project = build.getProject();\n \n             for (int retryCount=project.getScmCheckoutRetryCount(); ; retryCount--) {\n-                // for historical reasons, null in the scm field means CVS, so we need to explicitly set this to something\n-                // in case check out fails and leaves a broken changelog.xml behind.\n-                // see http://www.nabble.com/CVSChangeLogSet.parse-yields-SAXParseExceptions-when-parsing-bad-*AccuRev*-changelog.xml-files-td22213663.html\n                 build.scm = NullChangeLogParser.INSTANCE;\n \n                 try {\n@@ -870,20 +866,7 @@ public Collection<Fingerprint> getBuildFingerprints() {\n     public ChangeLogSet<? extends Entry> getChangeSet() {\n         synchronized (changeSetLock) {\n             if (scm==null) {\n-                // for historical reason, null means CVS.\n-                try {\n-                    Class<?> c = Jenkins.getInstance().getPluginManager().uberClassLoader.loadClass(\"hudson.scm.CVSChangeLogParser\");\n-                    scm = (ChangeLogParser)c.newInstance();\n-                } catch (ClassNotFoundException e) {\n-                    // if CVS isn't available, fall back to something non-null.\n-                    scm = NullChangeLogParser.INSTANCE;\n-                } catch (InstantiationException e) {\n-                    scm = NullChangeLogParser.INSTANCE;\n-                    throw (Error)new InstantiationError().initCause(e);\n-                } catch (IllegalAccessException e) {\n-                    scm = NullChangeLogParser.INSTANCE;\n-                    throw (Error)new IllegalAccessError().initCause(e);\n-                }\n+                scm = NullChangeLogParser.INSTANCE;                \n             }\n         }\n ",
      "parent_sha": "1047cd9ed98c9ab8abf1e85a212a939e3a636091"
    }
  },
  {
    "oid": "439a6b94f0176b79ca40ce9b319dc73dfe1d7f91",
    "message": "while working on a hang problem in JavaFX deployment of Hudson, I noticed that slave is eagerly loading a lot of classes that it shouldn't load, which appears to be caused by the fact that SLAVE_LOG_HANDLER is in SlaveComputer class, which triggers classloading of such classes like hudson.model.Hudson.\n\nI'm hoping that this fixes the hang issue, but at least this makes the start up a bit faster.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@19542 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2009-07-08T23:20:54Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/439a6b94f0176b79ca40ce9b319dc73dfe1d7f91",
    "details": {
      "sha": "6f7ef2c299d33edef66e8999ef4274cc6579fdcc",
      "filename": "core/src/main/java/hudson/slaves/SlaveComputer.java",
      "status": "modified",
      "additions": 9,
      "deletions": 2,
      "changes": 11,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/439a6b94f0176b79ca40ce9b319dc73dfe1d7f91/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fslaves%2FSlaveComputer.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/439a6b94f0176b79ca40ce9b319dc73dfe1d7f91/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fslaves%2FSlaveComputer.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fslaves%2FSlaveComputer.java?ref=439a6b94f0176b79ca40ce9b319dc73dfe1d7f91",
      "patch": "@@ -35,6 +35,7 @@\n import hudson.lifecycle.WindowsSlaveInstaller;\n import hudson.Util;\n import hudson.AbortException;\n+import static hudson.slaves.SlaveComputer.LogHolder.SLAVE_LOG_HANDLER;\n \n import java.io.File;\n import java.io.OutputStream;\n@@ -467,9 +468,15 @@ public String call() throws IOException {\n     }\n \n     /**\n-     * This field is used on each slave node to record log records on the slave.\n+     * Puts the {@link #SLAVE_LOG_HANDLER} into a separate class so that loading this class\n+     * in JVM doesn't end up loading tons of additional classes.\n      */\n-    private static final RingBufferLogHandler SLAVE_LOG_HANDLER = new RingBufferLogHandler();\n+    static final class LogHolder {\n+        /**\n+         * This field is used on each slave node to record log records on the slave.\n+         */\n+        static final RingBufferLogHandler SLAVE_LOG_HANDLER = new RingBufferLogHandler();\n+    }\n \n     private static class SlaveInitializer implements Callable<Void,RuntimeException> {\n         public Void call() {",
      "parent_sha": "24e146f07d60c1a51498531ff2a846d9e97409d4"
    }
  },
  {
    "oid": "c4c55d1c0301d0b6eb4393eabcb214f77e122bf2",
    "message": "waitUntilNoActivityUpTo should also produce a thread dump (despite 80da8f2).",
    "date": "2014-10-03T20:00:56Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/c4c55d1c0301d0b6eb4393eabcb214f77e122bf2",
    "details": {
      "sha": "d2b8b69c0988d6a7f032e23988f5f8c01bca5d2e",
      "filename": "test/src/main/java/org/jvnet/hudson/test/JenkinsRule.java",
      "status": "modified",
      "additions": 11,
      "deletions": 7,
      "changes": 18,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/c4c55d1c0301d0b6eb4393eabcb214f77e122bf2/test%2Fsrc%2Fmain%2Fjava%2Forg%2Fjvnet%2Fhudson%2Ftest%2FJenkinsRule.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/c4c55d1c0301d0b6eb4393eabcb214f77e122bf2/test%2Fsrc%2Fmain%2Fjava%2Forg%2Fjvnet%2Fhudson%2Ftest%2FJenkinsRule.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/test%2Fsrc%2Fmain%2Fjava%2Forg%2Fjvnet%2Fhudson%2Ftest%2FJenkinsRule.java?ref=c4c55d1c0301d0b6eb4393eabcb214f77e122bf2",
      "patch": "@@ -386,18 +386,21 @@ protected void setUpTimeout() {\n             public void run() {\n                 if (timeoutTimer!=null) {\n                     LOGGER.warning(String.format(\"Test timed out (after %d seconds).\", timeout));\n-                    // dump threads\n-                    ThreadInfo[] threadInfos = Functions.getThreadInfos();\n-                    Functions.ThreadGroupMap m = Functions.sortThreadsAndGetGroupMap(threadInfos);\n-                    for (ThreadInfo ti : threadInfos) {\n-                        System.err.println(Functions.dumpThreadInfo(ti, m));\n-                    }\n+                    dumpThreads();\n                     testThread.interrupt();\n                 }\n             }\n         }, TimeUnit.SECONDS.toMillis(timeout));\n     }\n \n+    private static void dumpThreads() {\n+        ThreadInfo[] threadInfos = Functions.getThreadInfos();\n+        Functions.ThreadGroupMap m = Functions.sortThreadsAndGetGroupMap(threadInfos);\n+        for (ThreadInfo ti : threadInfos) {\n+            System.err.println(Functions.dumpThreadInfo(ti, m));\n+        }\n+    }\n+\n     /**\n      * Override to tear down your specific external resource.\n      */\n@@ -1481,7 +1484,8 @@ public void waitUntilNoActivityUpTo(int timeout) throws Exception {\n                             building.add(e.getCurrentExecutable());\n                     }\n                 }\n-                throw new AssertionError(String.format(\"Hudson is still doing something after %dms: queue=%s building=%s\",\n+                dumpThreads();\n+                throw new AssertionError(String.format(\"Jenkins is still doing something after %dms: queue=%s building=%s\",\n                         timeout, Arrays.asList(jenkins.getQueue().getItems()), building));\n             }\n         }",
      "parent_sha": "2b6c00db3406c753291ff00ccd16d64ad5f92a78"
    }
  },
  {
    "oid": "8a174621e3843f8ff24ddb9b017e6daf7f9d189b",
    "message": "Incorrect Javadoc.",
    "date": "2014-04-10T14:03:04Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/8a174621e3843f8ff24ddb9b017e6daf7f9d189b",
    "details": {
      "sha": "4489e5dc77179ab681d9168d9ad60e0bea48a9a3",
      "filename": "core/src/main/java/hudson/model/listeners/RunListener.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/8a174621e3843f8ff24ddb9b017e6daf7f9d189b/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2Flisteners%2FRunListener.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/8a174621e3843f8ff24ddb9b017e6daf7f9d189b/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2Flisteners%2FRunListener.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2Flisteners%2FRunListener.java?ref=8a174621e3843f8ff24ddb9b017e6daf7f9d189b",
      "patch": "@@ -235,7 +235,7 @@ public static void fireFinalized(Run r) {\n     }\n \n     /**\n-     * Fires the {@link #onFinalized(Run)} event.\n+     * Fires the {@link #onDeleted} event.\n      */\n     public static void fireDeleted(Run r) {\n         for (RunListener l : all()) {",
      "parent_sha": "b35f834b665178b52cbcb1b77600a8060509bbc6"
    }
  },
  {
    "oid": "a3f0a992561ec1eefcc6bea4e31253c457d939ad",
    "message": "Manually wiping out a workspace from GUI can cause NPE with some SCM plugins.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@20934 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2009-08-19T21:59:50Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/a3f0a992561ec1eefcc6bea4e31253c457d939ad",
    "details": {
      "sha": "1188f82da3ed29bd3c8f8f74ed62f3ee36de5fd3",
      "filename": "core/src/main/java/hudson/model/AbstractProject.java",
      "status": "modified",
      "additions": 15,
      "deletions": 4,
      "changes": 19,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/a3f0a992561ec1eefcc6bea4e31253c457d939ad/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FAbstractProject.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/a3f0a992561ec1eefcc6bea4e31253c457d939ad/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FAbstractProject.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FAbstractProject.java?ref=a3f0a992561ec1eefcc6bea4e31253c457d939ad",
      "patch": "@@ -335,10 +335,20 @@ public final FilePath getWorkspace() {\n      * @since 1.319\n      */\n     public final FilePath getSomeWorkspace() {\n+        R b = getSomeBuildWithWorkspace();\n+        return b!=null ? b.getWorkspace() : null;\n+    }\n+\n+    /**\n+     * Gets some build that has a live workspace.\n+     *\n+     * @return null if no such build exists.\n+     */\n+    public final R getSomeBuildWithWorkspace() {\n         int cnt=0;\n         for (R b = getLastBuild(); cnt<5 && b!=null; b=b.getPreviousBuild()) {\n             FilePath ws = b.getWorkspace();\n-            if (ws!=null)   return ws;\n+            if (ws!=null)   return b;\n         }\n         return null;\n     }\n@@ -1342,9 +1352,10 @@ public void doWs( StaplerRequest req, StaplerResponse rsp ) throws IOException,\n      */\n     public HttpResponse doDoWipeOutWorkspace() throws IOException, ServletException, InterruptedException {\n         checkPermission(BUILD);\n-        getLastBuild();\n-        if (getScm().processWorkspaceBeforeDeletion(this, getWorkspace(), null)) {\n-            getWorkspace().deleteRecursive();\n+        R b = getSomeBuildWithWorkspace();\n+        FilePath ws = b!=null ? b.getWorkspace() : null;\n+        if (ws!=null && getScm().processWorkspaceBeforeDeletion(this, ws, b.getBuiltOn())) {\n+            ws.deleteRecursive();\n             return new HttpRedirect(\".\");\n         } else {\n             // If we get here, that means the SCM blocked the workspace deletion.",
      "parent_sha": "237f1e275da9753e7a13db08b19bc158ba987018"
    }
  },
  {
    "oid": "84fa59a87c6886d4f1efd86f5df6f21520c3f918",
    "message": "Do not use '_' as an identifier\n\nEliminates Java 8 warnings:\n  (use of '_' as an identifier might not be supported in releases after Java SE 8)",
    "date": "2016-04-05T18:03:08Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/84fa59a87c6886d4f1efd86f5df6f21520c3f918",
    "details": {
      "sha": "7e93dc4e097da6708374ce4fc6a3675c59fca928",
      "filename": "core/src/test/java/hudson/BulkChangeTest.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/84fa59a87c6886d4f1efd86f5df6f21520c3f918/core%2Fsrc%2Ftest%2Fjava%2Fhudson%2FBulkChangeTest.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/84fa59a87c6886d4f1efd86f5df6f21520c3f918/core%2Fsrc%2Ftest%2Fjava%2Fhudson%2FBulkChangeTest.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Ftest%2Fjava%2Fhudson%2FBulkChangeTest.java?ref=84fa59a87c6886d4f1efd86f5df6f21520c3f918",
      "patch": "@@ -98,10 +98,10 @@ public void bulkChange() throws Exception {\n     @Test\n     public void nestedBulkChange() throws Exception {\n         Point pt = new Point();\n-        Point _ = new Point();\n+        Point pt2 = new Point();\n         BulkChange bc1 = new BulkChange(pt);\n         try {\n-            BulkChange bc2 = new BulkChange(_);\n+            BulkChange bc2 = new BulkChange(pt2);\n             try {\n                 BulkChange bc3 = new BulkChange(pt);\n                 try {",
      "parent_sha": "29f197069a5b5154dff19d7edde0d800716efa6f"
    }
  },
  {
    "oid": "dbba18a0e2f582fb7650d67da475ffde2ad5c669",
    "message": "redirect error stream to reduce the # of threads.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@5739 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2007-11-06T14:20:22Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/dbba18a0e2f582fb7650d67da475ffde2ad5c669",
    "details": {
      "sha": "231261c1b9b23c26caaa59df5ad51f44052e5ff8",
      "filename": "core/src/main/java/hudson/Proc.java",
      "status": "modified",
      "additions": 18,
      "deletions": 9,
      "changes": 27,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/dbba18a0e2f582fb7650d67da475ffde2ad5c669/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FProc.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/dbba18a0e2f582fb7650d67da475ffde2ad5c669/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FProc.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FProc.java?ref=dbba18a0e2f582fb7650d67da475ffde2ad5c669",
      "patch": "@@ -53,7 +53,7 @@ private Proc() {}\n      */\n     public static final class LocalProc extends Proc {\n         private final Process proc;\n-        private final Thread t1,t2;\n+        private final Thread copier;\n         private final OutputStream out;\n \n         public LocalProc(String cmd, Map<String,String> env, OutputStream out, File workDir) throws IOException {\n@@ -77,17 +77,27 @@ public LocalProc(String[] cmd,String[] env,InputStream in,OutputStream out) thro\n         }\n \n         public LocalProc(String[] cmd,String[] env,InputStream in,OutputStream out, File workDir) throws IOException {\n-            this( calcName(cmd), Runtime.getRuntime().exec(cmd,env,workDir), in, out );\n+            this( calcName(cmd),\n+                  environment(new ProcessBuilder(cmd),env).directory(workDir).redirectErrorStream(true).start(),\n+                  in, out );\n+        }\n+\n+        private static ProcessBuilder environment(ProcessBuilder pb, String[] env) {\n+            Map<String, String> m = pb.environment();\n+            m.clear();\n+            for (String e : env) {\n+                int idx = e.indexOf('=');\n+                m.put(e.substring(0,idx),e.substring(idx+1,0));\n+            }\n+            return pb;\n         }\n \n         private LocalProc( String name, Process proc, InputStream in, OutputStream out ) throws IOException {\n             Logger.getLogger(Proc.class.getName()).log(Level.FINE, \"Running: {0}\", name);\n             this.out = out;\n             this.proc = proc;\n-            t1 = new StreamCopyThread(name+\": stdout copier\", proc.getInputStream(), out);\n-            t1.start();\n-            t2 = new StreamCopyThread(name+\": stderr copier\", proc.getErrorStream(), out);\n-            t2.start();\n+            copier = new StreamCopyThread(name+\": stdout copier\", proc.getInputStream(), out);\n+            copier.start();\n             if(in!=null)\n                 new ByteCopier(name+\": stdin copier\",in,proc.getOutputStream()).start();\n             else\n@@ -104,9 +114,8 @@ public int join() throws InterruptedException, IOException {\n                 // see http://hudson.gotdns.com/wiki/display/HUDSON/Spawning+processes+from+build\n                 // problems like that shows up as inifinite wait in join(), which confuses great many users.\n                 // So let's do a timed wait here and try to diagnose the problem\n-                t1.join(10*1000);\n-                t2.join(10*1000);\n-                if(t1.isAlive() || t2.isAlive()) {\n+                copier.join(10*1000);\n+                if(copier.isAlive()) {\n                     // looks like handles are leaking.\n                     // closing these handles should terminate the threads.\n                     String msg = \"Process leaked file descriptors. See http://hudson.gotdns.com/wiki/display/HUDSON/Spawning+processes+from+build for more information\";",
      "parent_sha": "eff5a469020101d02f7a2fa55e01d6cee573d6c9"
    }
  },
  {
    "oid": "b910e6af920261fe598bbe43d05bf75a2264f71b",
    "message": "[FIXED HUDSON-4506] \"Redeploy Maven artifacts\" GUI was broken, because of rev.20314. This fix will be in 1.325.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@21886 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2009-09-19T01:40:05Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/b910e6af920261fe598bbe43d05bf75a2264f71b",
    "details": {
      "sha": "53604632d384f39c4f3c7dfdc0346b486569d9e8",
      "filename": "maven-plugin/src/main/java/hudson/maven/reporters/MavenAbstractArtifactRecord.java",
      "status": "modified",
      "additions": 8,
      "deletions": 6,
      "changes": 14,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/b910e6af920261fe598bbe43d05bf75a2264f71b/maven-plugin%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmaven%2Freporters%2FMavenAbstractArtifactRecord.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/b910e6af920261fe598bbe43d05bf75a2264f71b/maven-plugin%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmaven%2Freporters%2FMavenAbstractArtifactRecord.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/maven-plugin%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmaven%2Freporters%2FMavenAbstractArtifactRecord.java?ref=b910e6af920261fe598bbe43d05bf75a2264f71b",
      "patch": "@@ -48,6 +48,8 @@\n import org.kohsuke.stapler.QueryParameter;\n import org.kohsuke.stapler.StaplerRequest;\n import org.kohsuke.stapler.StaplerResponse;\n+import org.kohsuke.stapler.HttpResponse;\n+import org.kohsuke.stapler.HttpRedirect;\n import org.kohsuke.stapler.framework.io.LargeText;\n \n import javax.servlet.ServletException;\n@@ -129,7 +131,7 @@ public BallColor getIconColor() {\n         }\n \n         // TODO: Eventually provide a better UI\n-        public final void doIndex(StaplerRequest req, StaplerResponse rsp) throws IOException {\n+        public final void doIndex(StaplerResponse rsp) throws IOException {\n             rsp.setContentType(\"text/plain;charset=UTF-8\");\n             getLog().writeLogTo(0,rsp.getWriter());\n         }\n@@ -186,10 +188,10 @@ public Object getDynamic(String token, StaplerRequest req, StaplerResponse rsp)\n     /**\n      * Performs a redeployment.\n      */\n-    public final void doRedeploy(StaplerRequest req, StaplerResponse rsp,\n-                           @QueryParameter(\"redeploy.id\") final String id,\n-                           @QueryParameter(\"redeploy.url\") final String repositoryUrl,\n-                           @QueryParameter(\"redeploy.uniqueVersion\") final boolean uniqueVersion) throws ServletException, IOException {\n+    public final HttpResponse doRedeploy(\n+            @QueryParameter(\"_.id\") final String id,\n+            @QueryParameter(\"_.url\") final String repositoryUrl,\n+            @QueryParameter(\"_.uniqueVersion\") final boolean uniqueVersion) throws ServletException, IOException {\n         getACL().checkPermission(REDEPLOY);\n \n         File logFile = new File(getBuild().getRootDir(),\"maven-deployment.\"+records.size()+\".log\");\n@@ -221,7 +223,7 @@ protected void perform(TaskListener listener) throws Exception {\n             }\n         }.start();\n \n-        rsp.sendRedirect(\".\");\n+        return HttpRedirect.DOT;\n     }\n \n     /**",
      "parent_sha": "9882aba6a9a9825195eb34b60af9f0e205aa3622"
    }
  },
  {
    "oid": "16c4d4c88781ad92b3c82c214f4f3947a35044ed",
    "message": "rename error?\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@3930 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2007-07-30T00:04:59Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/16c4d4c88781ad92b3c82c214f4f3947a35044ed",
    "details": {
      "sha": "7c6fbbdbc0bb85cb6e2f629d0ecaccb3f3df3130",
      "filename": "core/src/main/java/hudson/node_monitors/ClockMonitor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/16c4d4c88781ad92b3c82c214f4f3947a35044ed/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fnode_monitors%2FClockMonitor.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/16c4d4c88781ad92b3c82c214f4f3947a35044ed/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fnode_monitors%2FClockMonitor.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fnode_monitors%2FClockMonitor.java?ref=16c4d4c88781ad92b3c82c214f4f3947a35044ed",
      "patch": "@@ -32,7 +32,7 @@ public String getDisplayName() {\n         }\n \n         public NodeMonitor newInstance(StaplerRequest req) throws FormException {\n-            return new DiskSpaceMonitor();\n+            return new ClockMonitor();\n         }\n     };\n }",
      "parent_sha": "30e54a7bc9014ced1bea06acadf4da3921e0c2bf"
    }
  },
  {
    "oid": "e3952f41c5649c326ace3cc263420a8c287e1e7c",
    "message": "[FIXED JENKINS-17667] - Syncronization of InstallerTranslator::getToolHome()\n\nThere appears to be some unthreadsafe initialization going on here.\nInitialize/get inside a synchronized block for threadsaftey.",
    "date": "2014-06-02T21:48:58Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/e3952f41c5649c326ace3cc263420a8c287e1e7c",
    "details": {
      "sha": "734d80d6843b38d32f8bf7e32c674c2f5bc845a6",
      "filename": "core/src/main/java/hudson/tools/InstallerTranslator.java",
      "status": "modified",
      "additions": 13,
      "deletions": 7,
      "changes": 20,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/e3952f41c5649c326ace3cc263420a8c287e1e7c/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Ftools%2FInstallerTranslator.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/e3952f41c5649c326ace3cc263420a8c287e1e7c/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Ftools%2FInstallerTranslator.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Ftools%2FInstallerTranslator.java?ref=e3952f41c5649c326ace3cc263420a8c287e1e7c",
      "patch": "@@ -46,16 +46,22 @@ public String getToolHome(Node node, ToolInstallation tool, TaskListener log) th\n         if (isp == null) {\n             return null;\n         }\n+\n         for (ToolInstaller installer : isp.installers) {\n             if (installer.appliesTo(node)) {\n-                Map<ToolInstallation, Semaphore> mutexByTool = mutexByNode.get(node);\n-                if (mutexByTool == null) {\n-                    mutexByNode.put(node, mutexByTool = new WeakHashMap<ToolInstallation, Semaphore>());\n-                }\n-                Semaphore semaphore = mutexByTool.get(tool);\n-                if (semaphore == null) {\n-                    mutexByTool.put(tool, semaphore = new Semaphore(1));\n+            \tMap<ToolInstallation, Semaphore> mutexByTool;\n+            \tSemaphore semaphore;\n+            \t\n+                synchronized(mutexByNode) {\n+                    mutexByTool = mutexByNode.get(node);\n+                    if (mutexByTool == null) {\n+                        mutexByNode.put(node, mutexByTool = new WeakHashMap<ToolInstallation, Semaphore>());\n+                        mutexByTool.put(tool, semaphore = new Semaphore(1));\n+                    } else {\n+                    \tsemaphore = mutexByTool.get(tool);\n+                    }\n                 }\n+\n                 semaphore.acquire();\n                 try {\n                     return installer.performInstallation(tool, node, log).getRemote();",
      "parent_sha": "7937b2bf51101e2a701f55d9401ca04b94c24111"
    }
  },
  {
    "oid": "7f7db958c21b39d29b77c8a186a94fb83f0a30f2",
    "message": "[JENKINS-26643] DescribableList.buildDependencyGraph should catch RuntimeException",
    "date": "2015-01-27T22:34:02Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/7f7db958c21b39d29b77c8a186a94fb83f0a30f2",
    "details": {
      "sha": "9ba34d5faf03739be5f2d9dc1e9e61df7e3a2fc0",
      "filename": "core/src/main/java/hudson/util/DescribableList.java",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/7f7db958c21b39d29b77c8a186a94fb83f0a30f2/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Futil%2FDescribableList.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/7f7db958c21b39d29b77c8a186a94fb83f0a30f2/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Futil%2FDescribableList.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Futil%2FDescribableList.java?ref=7f7db958c21b39d29b77c8a186a94fb83f0a30f2",
      "patch": "@@ -46,6 +46,8 @@\n import java.util.Collection;\n import java.util.List;\n import java.util.Map;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n \n /**\n  * Persisted list of {@link Describable}s with some operations specific\n@@ -210,7 +212,11 @@ public void buildDependencyGraph(AbstractProject owner,DependencyGraph graph) {\n         for (Object o : this) {\n             if (o instanceof DependencyDeclarer) {\n                 DependencyDeclarer dd = (DependencyDeclarer) o;\n-                dd.buildDependencyGraph(owner,graph);\n+                try {\n+                    dd.buildDependencyGraph(owner,graph);\n+                } catch (RuntimeException e) {\n+                    LOGGER.log(Level.SEVERE, \"Failed to build dependency graph for \" + owner,e);\n+                }\n             }\n         }\n     }\n@@ -277,4 +283,6 @@ public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext co\n             }\n         }\n     }\n+\n+    private final static Logger LOGGER = Logger.getLogger(DescribableList.class.getName());\n }",
      "parent_sha": "d10b9fab1d11addb7a4ca008f9eead2cb71415dc"
    }
  },
  {
    "oid": "537c46658da188c893b621551b55a6f94ed98f48",
    "message": "Wait for background JS to execute on form submit",
    "date": "2015-08-24T18:09:50Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/537c46658da188c893b621551b55a6f94ed98f48",
    "details": {
      "sha": "f2963b0c77c0f6c79e930fe853f360cc6691c49f",
      "filename": "test/src/main/java/com/gargoylesoftware/htmlunit/html/HtmlFormUtil.java",
      "status": "modified",
      "additions": 26,
      "deletions": 19,
      "changes": 45,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/537c46658da188c893b621551b55a6f94ed98f48/test%2Fsrc%2Fmain%2Fjava%2Fcom%2Fgargoylesoftware%2Fhtmlunit%2Fhtml%2FHtmlFormUtil.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/537c46658da188c893b621551b55a6f94ed98f48/test%2Fsrc%2Fmain%2Fjava%2Fcom%2Fgargoylesoftware%2Fhtmlunit%2Fhtml%2FHtmlFormUtil.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/test%2Fsrc%2Fmain%2Fjava%2Fcom%2Fgargoylesoftware%2Fhtmlunit%2Fhtml%2FHtmlFormUtil.java?ref=537c46658da188c893b621551b55a6f94ed98f48",
      "patch": "@@ -26,6 +26,8 @@\n import com.gargoylesoftware.htmlunit.ElementNotFoundException;\n import com.gargoylesoftware.htmlunit.Page;\n import com.gargoylesoftware.htmlunit.WebClient;\n+import com.gargoylesoftware.htmlunit.WebClientUtil;\n+import com.gargoylesoftware.htmlunit.util.WebClientUtils;\n \n import java.io.IOException;\n import java.util.List;\n@@ -41,32 +43,37 @@ public static Page submit(final HtmlForm htmlForm) throws IOException {\n     }\n \n     public static Page submit(HtmlForm htmlForm, HtmlElement submitElement) throws IOException {\n-        if (submitElement != null && !(submitElement instanceof SubmittableElement)) {\n-            // Just click and return\n-            return submitElement.click();\n-        }\n-\n         final HtmlPage htmlPage = (HtmlPage) htmlForm.getPage();\n         final WebClient webClient = htmlPage.getWebClient();\n \n         try {\n-            htmlForm.submit((SubmittableElement) submitElement);\n-        } finally {\n-            // The HtmlForm submit doesn't really do anything. It just adds a \"LoadJob\"\n-            // to an internal queue. What we are doing here is manually forcing the load of\n-            // the response for that submit LoadJob and then getting the enclosing page\n-            // from the current window on the WebClient, allowing us to return the correct\n-            // HtmlPage object to the test.\n-            webClient.loadDownloadedResponses();\n-            Page resultPage = webClient.getCurrentWindow().getEnclosedPage();\n-\n-            if (resultPage == htmlPage) {\n-                // We're still on the same page (form submit didn't bring us anywhere).\n-                // Hackery. Seems like YUI is messing us about.\n+            if (submitElement != null && !(submitElement instanceof SubmittableElement)) {\n+                // Just click and return\n                 return submitElement.click();\n             }\n \n-            return resultPage;\n+            try {\n+                htmlForm.submit((SubmittableElement) submitElement);\n+            } finally {\n+                // The HtmlForm submit doesn't really do anything. It just adds a \"LoadJob\"\n+                // to an internal queue. What we are doing here is manually forcing the load of\n+                // the response for that submit LoadJob and then getting the enclosing page\n+                // from the current window on the WebClient, allowing us to return the correct\n+                // HtmlPage object to the test.\n+                webClient.loadDownloadedResponses();\n+                Page resultPage = webClient.getCurrentWindow().getEnclosedPage();\n+\n+                if (resultPage == htmlPage) {\n+                    // We're still on the same page (form submit didn't bring us anywhere).\n+                    // Hackery. Seems like YUI is messing us about.\n+                    return submitElement.click();\n+                }\n+\n+                return resultPage;\n+            }\n+        } finally {\n+            // Make sure all background JS has executed.\n+            WebClientUtil.waitForJSExec(webClient);\n         }\n     }\n ",
      "parent_sha": "41bf661ec218c5bd6f58b6a8a75bb4b99480e152"
    }
  },
  {
    "oid": "d5a19e9d67fe3286b5d7ac5aec6fbcc3ac034767",
    "message": "RelativePathTest fixes",
    "date": "2015-08-24T18:09:50Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/d5a19e9d67fe3286b5d7ac5aec6fbcc3ac034767",
    "details": {
      "sha": "6543b55e578c2b71f9e1a61e9416cce4f26ef7be",
      "filename": "test/src/main/java/org/jvnet/hudson/test/HudsonTestCase.java",
      "status": "modified",
      "additions": 7,
      "deletions": 4,
      "changes": 11,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/d5a19e9d67fe3286b5d7ac5aec6fbcc3ac034767/test%2Fsrc%2Fmain%2Fjava%2Forg%2Fjvnet%2Fhudson%2Ftest%2FHudsonTestCase.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/d5a19e9d67fe3286b5d7ac5aec6fbcc3ac034767/test%2Fsrc%2Fmain%2Fjava%2Forg%2Fjvnet%2Fhudson%2Ftest%2FHudsonTestCase.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/test%2Fsrc%2Fmain%2Fjava%2Forg%2Fjvnet%2Fhudson%2Ftest%2FHudsonTestCase.java?ref=d5a19e9d67fe3286b5d7ac5aec6fbcc3ac034767",
      "patch": "@@ -25,13 +25,11 @@\n package org.jvnet.hudson.test;\n \n import com.gargoylesoftware.htmlunit.AlertHandler;\n+import com.gargoylesoftware.htmlunit.WebClientUtil;\n import com.gargoylesoftware.htmlunit.WebRequest;\n-import com.gargoylesoftware.htmlunit.WebResponse;\n-import com.gargoylesoftware.htmlunit.WebWindow;\n import com.gargoylesoftware.htmlunit.html.DomNodeUtil;\n import com.gargoylesoftware.htmlunit.html.HtmlFormUtil;\n import com.gargoylesoftware.htmlunit.html.HtmlImage;\n-import com.gargoylesoftware.htmlunit.html.HtmlSubmitInput;\n import com.google.inject.Injector;\n \n import hudson.ClassicPluginStrategy;\n@@ -1818,7 +1816,11 @@ public HtmlPage getPage(View view, String relative) throws IOException, SAXExcep\n         @SuppressWarnings(\"unchecked\")\n         @Override\n         public Page getPage(String url) throws IOException, FailingHttpStatusCodeException {\n-            return super.getPage(url);\n+            try {\n+                return super.getPage(url);\n+            } finally {\n+                WebClientUtil.waitForJSExec(this);\n+            }\n         }\n \n         /**\n@@ -1842,6 +1844,7 @@ public Page goTo(String relative, String expectedContentType) throws IOException\n             Page p;\n             try {\n                 p = super.getPage(getContextPath() + relative);\n+                WebClientUtil.waitForJSExec(this);\n             } catch (IOException x) {\n                 if (x.getCause() != null) {\n                     x.getCause().printStackTrace();",
      "parent_sha": "a930d31fd15c8183d104eac6759aaf56b1ed4efc"
    }
  },
  {
    "oid": "3e34afb08dc6225b43be8e09bb9b49a1a709fff2",
    "message": "Typo.",
    "date": "2012-08-08T11:26:16Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/3e34afb08dc6225b43be8e09bb9b49a1a709fff2",
    "details": {
      "sha": "899dcf8964371819503cbe555c14c9bffa8c71d8",
      "filename": "core/src/main/java/hudson/security/Permission.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/3e34afb08dc6225b43be8e09bb9b49a1a709fff2/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fsecurity%2FPermission.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/3e34afb08dc6225b43be8e09bb9b49a1a709fff2/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fsecurity%2FPermission.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fsecurity%2FPermission.java?ref=3e34afb08dc6225b43be8e09bb9b49a1a709fff2",
      "patch": "@@ -129,7 +129,7 @@ public int compare(Permission one, Permission two) {\n      * <pre>\n      * class Foo {\n      *     private static final PermissionGroup PERMISSIONS = new PermissionGroup(Foo.class,...);\n-     *     public static final Permission ABC = new Permisison(PERMISSION,...) ;\n+     *     public static final Permission ABC = new Permission(PERMISSION,...) ;\n      * }\n      * </pre>\n      *",
      "parent_sha": "f824568502c5a1e0a423043fef65387e08e92e63"
    }
  },
  {
    "oid": "a008b1c8209994dc6b76753123d25f5193cf349f",
    "message": "so that it can be invoked from MavenModuleSetBuild.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@2306 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2007-03-03T01:48:15Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/a008b1c8209994dc6b76753123d25f5193cf349f",
    "details": {
      "sha": "e039879d0a010898d1d5bf72642b1fd52a7e1dd6",
      "filename": "core/src/main/java/hudson/maven/MavenModuleSet.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/a008b1c8209994dc6b76753123d25f5193cf349f/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmaven%2FMavenModuleSet.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/a008b1c8209994dc6b76753123d25f5193cf349f/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmaven%2FMavenModuleSet.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmaven%2FMavenModuleSet.java?ref=a008b1c8209994dc6b76753123d25f5193cf349f",
      "patch": "@@ -199,7 +199,7 @@ public synchronized int getNextBuildNumber() {\n         return nextBuildNumber;\n     }\n \n-    private void updateNextBuildNumber() throws IOException {\n+    /*package*/ void updateNextBuildNumber() throws IOException {\n         int next = this.nextBuildNumber;\n         for (MavenModule m : modules.values())\n             next = Math.max(next,m.getNextBuildNumber());",
      "parent_sha": "503a174d309d867a006cb23852e414eaf5bc3a53"
    }
  },
  {
    "oid": "3c31f1d9a1b6e32ec3c93fe7c46804509f6fb077",
    "message": "[FIXED HUDSON-3312] - support for handling HTML in truncated descriptions properly.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@16895 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2009-04-07T00:35:55Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/3c31f1d9a1b6e32ec3c93fe7c46804509f6fb077",
    "details": {
      "sha": "f74a53511bf3b9360f38812c20cc273b66931f1f",
      "filename": "core/src/main/java/hudson/model/Run.java",
      "status": "modified",
      "additions": 32,
      "deletions": 8,
      "changes": 40,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/3c31f1d9a1b6e32ec3c93fe7c46804509f6fb077/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FRun.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/3c31f1d9a1b6e32ec3c93fe7c46804509f6fb077/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FRun.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FRun.java?ref=3c31f1d9a1b6e32ec3c93fe7c46804509f6fb077",
      "patch": "@@ -389,6 +389,7 @@ public String getDescription() {\n         return description;\n     }\n \n+\n     /**\n      * Returns the length-limited description.\n      * @return The length-limited description.\n@@ -401,17 +402,40 @@ public String getTruncatedDescription() {\n \n         final String ending = \"...\";\n \n-        // limit the description\n-        String truncDescr = description.substring(\n-                0, maxDescrLength - ending.length());\n+        int sz = description.length();\n+\n+        boolean inTag = false;\n+        int displayChars = 0;\n+        int lastTruncatablePoint = -1;\n \n-        // truncate the description on the space\n-        int lastSpace = truncDescr.lastIndexOf(\" \");\n-        if (lastSpace != -1) {\n-            truncDescr = truncDescr.substring(0, lastSpace);\n+        for (int i=0; i<sz; i++) {\n+            char ch = description.charAt(i);\n+            if(ch == '<') {\n+                inTag = true;\n+            } else if (ch == '>') {\n+                inTag = false;\n+                if (displayChars <= (maxDescrLength - ending.length())) {\n+                    lastTruncatablePoint = i + 1;\n+                }\n+            }\n+            if (!inTag) {\n+                displayChars++;\n+                if (displayChars <= (maxDescrLength - ending.length())) {\n+                    if (ch == ' ') {\n+                        lastTruncatablePoint = i;\n+                    }\n+                }\n+            }\n         }\n \n-        return truncDescr + ending;\n+        String truncDesc = description;\n+        \n+        if (lastTruncatablePoint != -1) {\n+            truncDesc = truncDesc.substring(0, lastTruncatablePoint);\n+        }\n+        \n+        return truncDesc + ending;\n+        \n     }\n \n     /**",
      "parent_sha": "f498682abb4719ac8f1d2d26b171e1d1a612ce3c"
    }
  },
  {
    "oid": "fccc34987f03a2716f3744a998cfe7d9127abafc",
    "message": "[JENKINS-26519] Unreproducible NPE from unmigrateJobsDir.",
    "date": "2015-01-21T18:57:41Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/fccc34987f03a2716f3744a998cfe7d9127abafc",
    "details": {
      "sha": "7d375c79a5f6b8362e159b7617f1a3016d3aef3e",
      "filename": "core/src/main/java/jenkins/model/RunIdMigrator.java",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/fccc34987f03a2716f3744a998cfe7d9127abafc/core%2Fsrc%2Fmain%2Fjava%2Fjenkins%2Fmodel%2FRunIdMigrator.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/fccc34987f03a2716f3744a998cfe7d9127abafc/core%2Fsrc%2Fmain%2Fjava%2Fjenkins%2Fmodel%2FRunIdMigrator.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fjenkins%2Fmodel%2FRunIdMigrator.java?ref=fccc34987f03a2716f3744a998cfe7d9127abafc",
      "patch": "@@ -309,7 +309,12 @@ public static void main(String... args) throws Exception {\n         new RunIdMigrator().unmigrateJobsDir(jobs);\n     }\n     private void unmigrateJobsDir(File jobs) throws Exception {\n-        for (File job : jobs.listFiles()) {\n+        File[] jobDirs = jobs.listFiles();\n+        if (jobDirs == null) {\n+            System.err.println(jobs + \" claimed to exist, but cannot be listed\");\n+            return;\n+        }\n+        for (File job : jobDirs) {\n             File[] kids = job.listFiles();\n             if (kids == null) {\n                 continue;",
      "parent_sha": "b2cc36377e6e18557808f2a185e678ee0f40af80"
    }
  },
  {
    "oid": "f9f091c216ce0048b93af6c1b1beddd23bad3d76",
    "message": "restore @Nullable deleted on merge",
    "date": "2012-08-18T08:19:10Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/f9f091c216ce0048b93af6c1b1beddd23bad3d76",
    "details": {
      "sha": "dfc6e0c8ad3f9dd815d42fc4bcea41dff5ec28aa",
      "filename": "core/src/main/java/hudson/model/User.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/f9f091c216ce0048b93af6c1b1beddd23bad3d76/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FUser.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/f9f091c216ce0048b93af6c1b1beddd23bad3d76/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FUser.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FUser.java?ref=f9f091c216ce0048b93af6c1b1beddd23bad3d76",
      "patch": "@@ -51,6 +51,7 @@\n import org.apache.commons.io.filefilter.DirectoryFileFilter;\n import org.kohsuke.stapler.interceptor.RequirePOST;\n \n+import javax.annotation.Nullable;\n import javax.servlet.ServletException;\n import javax.servlet.http.HttpServletResponse;\n import java.io.File;\n@@ -289,7 +290,7 @@ public synchronized void doSubmitDescription( StaplerRequest req, StaplerRespons\n      *      If false, this method will return null if {@link User} object\n      *      with the given name doesn't exist.\n      */\n-    public static User get(String idOrFullName, boolean create) {\n+    public static @Nullable User get(String idOrFullName, boolean create) {\n \n         if(idOrFullName==null)\n             return null;\n@@ -653,7 +654,7 @@ public int compareTo(CannonicalIdResolver o) {\n          * extract user ID from idOrFullName with help from contextual infos.\n          * can return <code>null</code> if no user ID matched the input\n          */\n-        public abstract String resolveCannonicalId(String idOrFullName);\n+        public abstract @Nullable String resolveCannonicalId(String idOrFullName);\n \n         public int getPriority() {\n             return 1;",
      "parent_sha": "af42534defea4503347dfc0ec442fadf51cf3336"
    }
  },
  {
    "oid": "01b8e7e94e5cce53c409489ccc87d7c7a93a4bfa",
    "message": "[JENKINS-51889] - DRY in Javadoc",
    "date": "2018-06-12T16:46:22Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/01b8e7e94e5cce53c409489ccc87d7c7a93a4bfa",
    "details": {
      "sha": "7dea6b1667254b4f3ba90259dafd2c899c87845e",
      "filename": "core/src/main/java/hudson/slaves/SlaveComputer.java",
      "status": "modified",
      "additions": 2,
      "deletions": 15,
      "changes": 17,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/01b8e7e94e5cce53c409489ccc87d7c7a93a4bfa/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fslaves%2FSlaveComputer.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/01b8e7e94e5cce53c409489ccc87d7c7a93a4bfa/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fslaves%2FSlaveComputer.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fslaves%2FSlaveComputer.java?ref=01b8e7e94e5cce53c409489ccc87d7c7a93a4bfa",
      "patch": "@@ -389,21 +389,8 @@ public OutputStream openLogFile() {\n     /**\n      * Creates a {@link Channel} from the given stream and sets that to this agent.\n      *\n-     * @param in\n-     *      Stream connected to the remote agent. It's the caller's responsibility to do\n-     *      buffering on this stream, if that's necessary.\n-     * @param out\n-     *      Stream connected to the remote peer. It's the caller's responsibility to do\n-     *      buffering on this stream, if that's necessary.\n-     * @param taskListener\n-     *      Receives the portion of data in <tt>is</tt> before\n-     *      the data goes into the \"binary mode\". This is useful\n-     *      when the established communication channel might include some data that might\n-     *      be useful for debugging/trouble-shooting.\n-     * @param listener\n-     *      Gets a notification when the channel closes, to perform clean up. Can be null.\n-     *      By the time this method is called, the cause of the termination is reported to the user,\n-     *      so the implementation of the listener doesn't need to do that again.\n+     * Same as {@link #setChannel(InputStream, OutputStream, OutputStream, Channel.Listener)}, but for\n+     * {@link TaskListener}.\n      */\n     public void setChannel(@Nonnull InputStream in, @Nonnull OutputStream out,\n                            @Nonnull TaskListener taskListener,",
      "parent_sha": "cb3087256e541051d698edc447b8460f6cf8b3a9"
    }
  },
  {
    "oid": "ecec5902ff572c86e09ffb6d0c506fd1acd2dffa",
    "message": "leaving the record of attempted gzip encoding problem fix.",
    "date": "2012-05-24T03:08:57Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/ecec5902ff572c86e09ffb6d0c506fd1acd2dffa",
    "details": {
      "sha": "453d8ea8ec10f16ebf431ef706c87dee14b192fd",
      "filename": "core/src/main/java/hudson/security/HudsonAuthenticationEntryPoint.java",
      "status": "modified",
      "additions": 39,
      "deletions": 7,
      "changes": 46,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/ecec5902ff572c86e09ffb6d0c506fd1acd2dffa/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fsecurity%2FHudsonAuthenticationEntryPoint.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/ecec5902ff572c86e09ffb6d0c506fd1acd2dffa/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fsecurity%2FHudsonAuthenticationEntryPoint.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fsecurity%2FHudsonAuthenticationEntryPoint.java?ref=ecec5902ff572c86e09ffb6d0c506fd1acd2dffa",
      "patch": "@@ -33,6 +33,8 @@\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import static javax.servlet.http.HttpServletResponse.SC_FORBIDDEN;\n+\n+import java.io.FilterOutputStream;\n import java.io.IOException;\n import java.io.OutputStream;\n import java.io.OutputStreamWriter;\n@@ -81,12 +83,14 @@ public void commence(ServletRequest request, ServletResponse response, Authentic\n             PrintWriter out;\n             try {\n                 OutputStream sout = rsp.getOutputStream();\n-                if (rsp.containsHeader(\"Content-Encoding\")) {\n-                    // we serve Jelly pages with Content-Encoding:gzip.\n-                    // ServletResponse doesn't provide means for us to check the value of the header,\n-                    // so this is a hack.\n-                    sout = new GZIPOutputStream(sout);\n-                }\n+//                if (rsp.containsHeader(\"Content-Encoding\")) {\n+//                    // we serve Jelly pages with Content-Encoding:gzip.\n+//                    // ServletResponse doesn't provide means for us to check the value of the header,\n+//                    // to make the matter worse, GZIPOutputStream writes a header right away,\n+//                    // so by the time we get here we already have GZip header. Skip that part away by skipping first 10 bytes.\n+//                    // this is a hack.\n+//                    sout = new GZIPOutputStream(new ChopHeaderOutputStream(sout,10));\n+//                }\n                 out = new PrintWriter(new OutputStreamWriter(sout));\n             } catch (IllegalStateException e) {\n                 out = rsp.getWriter();\n@@ -103,7 +107,35 @@ public void commence(ServletRequest request, ServletResponse response, Authentic\n             // See http://support.microsoft.com/kb/294807\n             for (int i=0; i < 10; i++)\n                 out.print(\"                              \");\n-            out.flush();\n+            out.close();\n+        }\n+    }\n+\n+    private static class ChopHeaderOutputStream extends FilterOutputStream {\n+        private int count;\n+\n+        ChopHeaderOutputStream(OutputStream out, int count) {\n+            super(out);\n+            this.count = count;\n+        }\n+        \n+        @Override\n+        public void write(byte[] b, int off, int len) throws IOException {\n+            int i = Math.min(len,count);\n+            count-=i;\n+            off+=i;\n+            len-=i;\n+\n+            if (len>0)\n+                out.write(b, off, len);\n+        }\n+\n+        @Override\n+        public void write(int b) throws IOException {\n+            if (count>0)\n+                count--;\n+            else\n+                out.write(b);\n         }\n     }\n }",
      "parent_sha": "be1f8f91a3dcdcdfd2ed07198659e7eb68abf1f7"
    }
  },
  {
    "oid": "922e8c084a0d453fae8d7f0cb8aa7cc12efd2ec6",
    "message": "TAB->WS\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@31021 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2010-05-13T23:53:07Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/922e8c084a0d453fae8d7f0cb8aa7cc12efd2ec6",
    "details": {
      "sha": "5455efd2e7e9b2dbc2b7471d2bf2aaa358009537",
      "filename": "test/src/main/java/org/jvnet/hudson/test/ExtractChangeLogParser.java",
      "status": "modified",
      "additions": 106,
      "deletions": 119,
      "changes": 225,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/922e8c084a0d453fae8d7f0cb8aa7cc12efd2ec6/test%2Fsrc%2Fmain%2Fjava%2Forg%2Fjvnet%2Fhudson%2Ftest%2FExtractChangeLogParser.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/922e8c084a0d453fae8d7f0cb8aa7cc12efd2ec6/test%2Fsrc%2Fmain%2Fjava%2Forg%2Fjvnet%2Fhudson%2Ftest%2FExtractChangeLogParser.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/test%2Fsrc%2Fmain%2Fjava%2Forg%2Fjvnet%2Fhudson%2Ftest%2FExtractChangeLogParser.java?ref=922e8c084a0d453fae8d7f0cb8aa7cc12efd2ec6",
      "patch": "@@ -24,149 +24,136 @@\n package org.jvnet.hudson.test;\n \n import hudson.model.AbstractBuild;\n-import hudson.model.BuildListener;\n import hudson.model.User;\n+import hudson.scm.ChangeLogParser;\n import hudson.scm.ChangeLogSet;\n+import org.apache.commons.digester.Digester;\n+import org.kohsuke.stapler.export.Exported;\n+import org.kohsuke.stapler.export.ExportedBean;\n+import org.xml.sax.SAXException;\n \n-import hudson.scm.ChangeLogParser;\n import java.io.File;\n import java.io.FileInputStream;\n-import java.io.InputStream;\n-import java.io.FileOutputStream;\n-\n import java.io.IOException;\n-\n-import java.util.List;\n+import java.io.InputStream;\n import java.util.ArrayList;\n import java.util.Collection;\n-import java.util.Collections;\n-import java.util.Iterator;\n-\n-import org.apache.commons.digester.Digester;\n-import org.xml.sax.SAXException;\n-\n-import org.kohsuke.stapler.export.ExportedBean;\n-import org.kohsuke.stapler.export.Exported;\n+import java.util.List;\n \n /**\n  * @author Andrew Bayer\n  */\n-\n-\n public class ExtractChangeLogParser extends ChangeLogParser {\n     @Override\n     public ExtractChangeLogSet parse(AbstractBuild build, File changeLogFile) throws IOException, SAXException {\n-\tif (changeLogFile.exists()) {\n-\t    FileInputStream fis = new FileInputStream(changeLogFile);\n-\t    ExtractChangeLogSet logSet = parse(build, fis);\n-\t    fis.close();\n-\t    return logSet;\n-\t}\n-\telse {\n-\t    return new ExtractChangeLogSet(build, new ArrayList<ExtractChangeLogEntry>());\n-\t}\n+        if (changeLogFile.exists()) {\n+            FileInputStream fis = new FileInputStream(changeLogFile);\n+            ExtractChangeLogSet logSet = parse(build, fis);\n+            fis.close();\n+            return logSet;\n+        } else {\n+            return new ExtractChangeLogSet(build, new ArrayList<ExtractChangeLogEntry>());\n+        }\n     }\n-    \n-    \n-    \n+\n     public ExtractChangeLogSet parse(AbstractBuild build, InputStream changeLogStream) throws IOException, SAXException {\n-\t\n-\tArrayList<ExtractChangeLogEntry> changeLog = new ArrayList<ExtractChangeLogEntry>();\n-\t\n-\tDigester digester = new Digester();\n-\tdigester.setClassLoader(ExtractChangeLogSet.class.getClassLoader());\n-\tdigester.push(changeLog);\n-\tdigester.addObjectCreate(\"*/extractChanges/entry\", ExtractChangeLogEntry.class);\n-\t\n-\tdigester.addBeanPropertySetter(\"*/extractChanges/entry/zipFile\");\n-\t\n-\tdigester.addObjectCreate(\"*/extractChanges/entry/file\",\n-\t\t\t\t FileInZip.class);\n-\tdigester.addBeanPropertySetter(\"*/extractChanges/entry/file/fileName\");\n-\tdigester.addSetNext(\"*/extractChanges/entry/file\", \"addFile\");\n-\tdigester.addSetNext(\"*/extractChanges/entry\", \"add\");\n-\t\n-\tdigester.parse(changeLogStream);\n-\t\n-\treturn new ExtractChangeLogSet(build, changeLog);\n+\n+        ArrayList<ExtractChangeLogEntry> changeLog = new ArrayList<ExtractChangeLogEntry>();\n+\n+        Digester digester = new Digester();\n+        digester.setClassLoader(ExtractChangeLogSet.class.getClassLoader());\n+        digester.push(changeLog);\n+        digester.addObjectCreate(\"*/extractChanges/entry\", ExtractChangeLogEntry.class);\n+\n+        digester.addBeanPropertySetter(\"*/extractChanges/entry/zipFile\");\n+\n+        digester.addObjectCreate(\"*/extractChanges/entry/file\",\n+                FileInZip.class);\n+        digester.addBeanPropertySetter(\"*/extractChanges/entry/file/fileName\");\n+        digester.addSetNext(\"*/extractChanges/entry/file\", \"addFile\");\n+        digester.addSetNext(\"*/extractChanges/entry\", \"add\");\n+\n+        digester.parse(changeLogStream);\n+\n+        return new ExtractChangeLogSet(build, changeLog);\n     }\n \n \n-    @ExportedBean(defaultVisibility=999)\n+    @ExportedBean(defaultVisibility = 999)\n     public static class ExtractChangeLogEntry extends ChangeLogSet.Entry {\n-\tprivate List<FileInZip> files = new ArrayList<FileInZip>();\n-\tprivate String zipFile;\n-\n-\tpublic ExtractChangeLogEntry() {\n-\t}\n-\t\n-\tpublic ExtractChangeLogEntry(String zipFile) {\n-\t    this.zipFile = zipFile;\n-\t}\n-    \n-\tpublic void setZipFile(String zipFile) {\n-\t    this.zipFile = zipFile;\n-\t}\n-    \n-\t@Exported\n-\tpublic String getZipFile() {\n-\t    return zipFile;\n-\t}\n-    \n-\t@Override\n-\tpublic void setParent(ChangeLogSet parent) {\n-\t    super.setParent(parent);\n-\t}\n-    \n-\t@Override\n-\tpublic Collection<String> getAffectedPaths() {\n-\t    Collection<String> paths = new ArrayList<String>(files.size());\n-\t    for (FileInZip file : files) {\n-\t\tpaths.add(file.getFileName());\n-\t    }\n-\t    return paths;\n-\t}\n-    \n-\t@Override\n-\t@Exported\n-\tpublic User getAuthor() {\n-\t    return User.get(\"testuser\");\n-\t}\n-    \n-\t@Override\n-\t@Exported\n-\tpublic String getMsg() {\n-\t    return \"Extracted from \" + zipFile;\n-\t}\n-    \n-\tpublic void addFile(FileInZip fileName) {\n-\t    files.add(fileName);\n-\t}\n-    \n-\tpublic void addFiles(Collection<FileInZip> fileNames) {\n-\t    this.files.addAll(fileNames);\n-\t}\n+        private List<FileInZip> files = new ArrayList<FileInZip>();\n+        private String zipFile;\n+\n+        public ExtractChangeLogEntry() {\n+        }\n+\n+        public ExtractChangeLogEntry(String zipFile) {\n+            this.zipFile = zipFile;\n+        }\n+\n+        public void setZipFile(String zipFile) {\n+            this.zipFile = zipFile;\n+        }\n+\n+        @Exported\n+        public String getZipFile() {\n+            return zipFile;\n+        }\n+\n+        @Override\n+        public void setParent(ChangeLogSet parent) {\n+            super.setParent(parent);\n+        }\n+\n+        @Override\n+        public Collection<String> getAffectedPaths() {\n+            Collection<String> paths = new ArrayList<String>(files.size());\n+            for (FileInZip file : files) {\n+                paths.add(file.getFileName());\n+            }\n+            return paths;\n+        }\n+\n+        @Override\n+        @Exported\n+        public User getAuthor() {\n+            return User.get(\"testuser\");\n+        }\n+\n+        @Override\n+        @Exported\n+        public String getMsg() {\n+            return \"Extracted from \" + zipFile;\n+        }\n+\n+        public void addFile(FileInZip fileName) {\n+            files.add(fileName);\n+        }\n+\n+        public void addFiles(Collection<FileInZip> fileNames) {\n+            this.files.addAll(fileNames);\n+        }\n     }\n \n-    @ExportedBean(defaultVisibility=999)\n+    @ExportedBean(defaultVisibility = 999)\n     public static class FileInZip {\n-\tprivate String fileName = \"\";\n-\t\n-\tpublic FileInZip() {\n-\t}\n-\t\n-\tpublic FileInZip(String fileName) {\n-\t    this.fileName = fileName;\n-\t}\n-\t\n-\t@Exported\n-\tpublic String getFileName() {\n-\t    return fileName;\n-\t}\n-\t\n-\tpublic void setFileName(String fileName) {\n-\t    this.fileName = fileName;\n-\t}\n+        private String fileName = \"\";\n+\n+        public FileInZip() {\n+        }\n+\n+        public FileInZip(String fileName) {\n+            this.fileName = fileName;\n+        }\n+\n+        @Exported\n+        public String getFileName() {\n+            return fileName;\n+        }\n+\n+        public void setFileName(String fileName) {\n+            this.fileName = fileName;\n+        }\n     }\n \n }",
      "parent_sha": "0a2a97c22591454209c2af78267563a6a376e1d3"
    }
  },
  {
    "oid": "84788b757e27e52467e96bb20e75d2050f72262c",
    "message": "UseRecipesWithJenkinsRuleTest compiling against HtmlUnit 2.17",
    "date": "2015-08-24T18:09:44Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/84788b757e27e52467e96bb20e75d2050f72262c",
    "details": {
      "sha": "c4ded0e43ee03f2b8460e0987d6196af1e495b6c",
      "filename": "test/src/test/java/org/jvnet/hudson/main/UseRecipesWithJenkinsRuleTest.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/84788b757e27e52467e96bb20e75d2050f72262c/test%2Fsrc%2Ftest%2Fjava%2Forg%2Fjvnet%2Fhudson%2Fmain%2FUseRecipesWithJenkinsRuleTest.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/84788b757e27e52467e96bb20e75d2050f72262c/test%2Fsrc%2Ftest%2Fjava%2Forg%2Fjvnet%2Fhudson%2Fmain%2FUseRecipesWithJenkinsRuleTest.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/test%2Fsrc%2Ftest%2Fjava%2Forg%2Fjvnet%2Fhudson%2Fmain%2FUseRecipesWithJenkinsRuleTest.java?ref=84788b757e27e52467e96bb20e75d2050f72262c",
      "patch": "@@ -62,7 +62,7 @@ public void testWithPluginManager() {\n \n     private void verifyNotError(WebClient wc) throws IOException, SAXException {\n         HtmlPage p = wc.goTo(\"loginError\");\n-        URL url = p.getWebResponse().getUrl();\n+        URL url = p.getUrl();\n         System.out.println(url);\n         assertFalse(url.toExternalForm().contains(\"login\"));\n     }",
      "parent_sha": "83d529cb93c21a06a36ba64531cdf7787dd2fb73"
    }
  },
  {
    "oid": "8daf7ca476f5b089adf9ad343f267e1e418a7774",
    "message": "send back the user where he came from.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@1154 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2006-11-18T14:52:59Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/8daf7ca476f5b089adf9ad343f267e1e418a7774",
    "details": {
      "sha": "3dc1cdf15121d59e1433c3eeb6a16cd86d979dcd",
      "filename": "core/src/main/java/hudson/model/Hudson.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/8daf7ca476f5b089adf9ad343f267e1e418a7774/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FHudson.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/8daf7ca476f5b089adf9ad343f267e1e418a7774/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FHudson.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FHudson.java?ref=8daf7ca476f5b089adf9ad343f267e1e418a7774",
      "patch": "@@ -1051,7 +1051,9 @@ public void doScript( StaplerRequest req, StaplerResponse rsp ) throws IOExcepti\n      */\n     public void doIconSize( StaplerRequest req, StaplerResponse rsp ) throws IOException {\n         rsp.addCookie(new Cookie(\"iconSize\",req.getQueryString()));\n-        rsp.sendRedirect2(\".\");\n+        String ref = req.getHeader(\"Referer\");\n+        if(ref==null)   ref=\".\";\n+        rsp.sendRedirect2(ref);\n     }\n \n     public void doFingerprintCleanup( StaplerRequest req, StaplerResponse rsp ) throws IOException {",
      "parent_sha": "2a80399f2e3afd9644266aa4a782229dd63e8817"
    }
  },
  {
    "oid": "f6098a1df413b50d334e707f26e71231864b502e",
    "message": "Fixing deprecation link in Util.isAbsoluteUri",
    "date": "2021-04-05T22:05:39Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/f6098a1df413b50d334e707f26e71231864b502e",
    "details": {
      "sha": "6821fc4960ea62d0ad6372d68a11b78046b7c779",
      "filename": "core/src/main/java/hudson/Util.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/f6098a1df413b50d334e707f26e71231864b502e/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FUtil.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/f6098a1df413b50d334e707f26e71231864b502e/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FUtil.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FUtil.java?ref=f6098a1df413b50d334e707f26e71231864b502e",
      "patch": "@@ -1561,7 +1561,7 @@ public static String intern(@CheckForNull String s) {\n      * implementing this by ourselves allow it to be more lenient about\n      * escaping of URI.\n      *\n-     * @deprecated Use {@code isAbsoluteOrSchemeRelativeUri} instead if your goal is to prevent open redirects\n+     * @deprecated Use {@link #isSafeToRedirectTo} instead if your goal is to prevent open redirects\n      */\n     @Deprecated\n     @RestrictedSince(\"1.651.2 / 2.3\")",
      "parent_sha": "c4e0291c502bff9c70e81d0bcf6f66c381f84546"
    }
  },
  {
    "oid": "47c91b0800d1c4211efd9da729e8318abfc1b58f",
    "message": "[FIXED HUDSON-6262] HTTP auth support was added in HUDSON-4071, so I've only integrated the portion that specifies the timeout and a call to disconnect(). Will be in 1.361.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@31576 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2010-05-31T16:22:43Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/47c91b0800d1c4211efd9da729e8318abfc1b58f",
    "details": {
      "sha": "33b0ecd0c65d6eac422ffe74374c5e623c8cf1fb",
      "filename": "remoting/src/main/java/hudson/remoting/Engine.java",
      "status": "modified",
      "additions": 23,
      "deletions": 18,
      "changes": 41,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/47c91b0800d1c4211efd9da729e8318abfc1b58f/remoting%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fremoting%2FEngine.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/47c91b0800d1c4211efd9da729e8318abfc1b58f/remoting%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fremoting%2FEngine.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/remoting%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fremoting%2FEngine.java?ref=47c91b0800d1c4211efd9da729e8318abfc1b58f",
      "patch": "@@ -141,28 +141,33 @@ public void run() {\n                     // find out the TCP port\n                     HttpURLConnection con = (HttpURLConnection)salURL.openConnection();\n                     if (con instanceof HttpURLConnection && credentials != null) {\n-                        HttpURLConnection http = (HttpURLConnection) con;\n                         String encoding = new sun.misc.BASE64Encoder().encode(credentials.getBytes());\n-                        http.setRequestProperty(\"Authorization\", \"Basic \" + encoding);\n+                        con.setRequestProperty(\"Authorization\", \"Basic \" + encoding);\n                     }\n                     try {\n-                        con.connect();\n-                    } catch (IOException x) {\n-                        if (firstError == null) {\n-                            firstError = new IOException(\"Failed to connect to \" + salURL + \": \" + x.getMessage()).initCause(x);\n+                        try {\n+                            con.setConnectTimeout(30000);\n+                            con.setReadTimeout(60000);\n+                            con.connect();\n+                        } catch (IOException x) {\n+                            if (firstError == null) {\n+                                firstError = new IOException(\"Failed to connect to \" + salURL + \": \" + x.getMessage()).initCause(x);\n+                            }\n+                            continue;\n                         }\n-                        continue;\n-                    }\n-                    port = con.getHeaderField(\"X-Hudson-JNLP-Port\");\n-                    if(con.getResponseCode()!=200) {\n-                        if(firstError==null)\n-                            firstError = new Exception(salURL+\" is invalid: \"+con.getResponseCode()+\" \"+con.getResponseMessage());\n-                        continue;\n-                    }\n-                    if(port ==null) {\n-                        if(firstError==null)\n-                            firstError = new Exception(url+\" is not Hudson\");\n-                        continue;\n+                        port = con.getHeaderField(\"X-Hudson-JNLP-Port\");\n+                        if(con.getResponseCode()!=200) {\n+                            if(firstError==null)\n+                                firstError = new Exception(salURL+\" is invalid: \"+con.getResponseCode()+\" \"+con.getResponseMessage());\n+                            continue;\n+                        }\n+                        if(port ==null) {\n+                            if(firstError==null)\n+                                firstError = new Exception(url+\" is not Hudson\");\n+                            continue;\n+                        }\n+                    } finally {\n+                        con.disconnect();\n                     }\n \n                     // this URL works. From now on, only try this URL",
      "parent_sha": "4a65156106c614aa7af058bca46850b3b0635649"
    }
  },
  {
    "oid": "205fea68adc64140bd3aa0bb8d799b1555aa3bee",
    "message": "use more modern DescribableList to avoid code redundancy",
    "date": "2011-03-31T08:53:28Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/205fea68adc64140bd3aa0bb8d799b1555aa3bee",
    "details": {
      "sha": "81c4eb3074639908ef1432fee5d584ce70fbf33d",
      "filename": "core/src/main/java/hudson/model/View.java",
      "status": "modified",
      "additions": 28,
      "deletions": 49,
      "changes": 77,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/205fea68adc64140bd3aa0bb8d799b1555aa3bee/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FView.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/205fea68adc64140bd3aa0bb8d799b1555aa3bee/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FView.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FView.java?ref=205fea68adc64140bd3aa0bb8d799b1555aa3bee",
      "patch": "@@ -23,9 +23,6 @@\n  */\n package hudson.model;\n \n-import static hudson.model.Hudson.checkGoodName;\n-\n-import hudson.CopyOnWrite;\n import hudson.DescriptorExtensionList;\n import hudson.Extension;\n import hudson.ExtensionPoint;\n@@ -39,10 +36,17 @@\n import hudson.security.AccessControlled;\n import hudson.security.Permission;\n import hudson.security.PermissionGroup;\n+import hudson.util.DescribableList;\n import hudson.util.DescriptorList;\n import hudson.util.RunList;\n import hudson.widgets.Widget;\n+import net.sf.json.JSONObject;\n+import org.kohsuke.stapler.StaplerRequest;\n+import org.kohsuke.stapler.StaplerResponse;\n+import org.kohsuke.stapler.export.Exported;\n+import org.kohsuke.stapler.export.ExportedBean;\n \n+import javax.servlet.ServletException;\n import java.io.IOException;\n import java.util.ArrayList;\n import java.util.Arrays;\n@@ -56,13 +60,7 @@\n import java.util.List;\n import java.util.Map;\n \n-import javax.servlet.ServletException;\n-\n-import net.sf.json.JSONObject;\n-import org.kohsuke.stapler.StaplerRequest;\n-import org.kohsuke.stapler.StaplerResponse;\n-import org.kohsuke.stapler.export.Exported;\n-import org.kohsuke.stapler.export.ExportedBean;\n+import static hudson.model.Hudson.*;\n \n /**\n  * Encapsulates the rendering of the list of {@link TopLevelItem}s\n@@ -85,7 +83,7 @@\n  * @see ViewGroup\n  */\n @ExportedBean\n-public abstract class View extends AbstractModelObject implements AccessControlled, Describable<View>, ExtensionPoint {\n+public abstract class View extends AbstractModelObject implements AccessControlled, Describable<View>, ExtensionPoint, Saveable {\n     /**\n      * Container of this view. Set right after the construction\n      * and never change thereafter.\n@@ -118,8 +116,7 @@ public abstract class View extends AbstractModelObject implements AccessControll\n      * List of {@link ViewProperty}s configured for this view.\n      * @since 1.406\n      */\n-    @CopyOnWrite\n-    private volatile List<ViewProperty> properties = new ArrayList<ViewProperty>();\n+    private volatile DescribableList<ViewProperty,ViewPropertyDescriptor> properties = new PropertyList();\n \n     protected View(String name) {\n         this.name = name;\n@@ -132,7 +129,7 @@ protected View(String name, ViewGroup owner) {\n \n     private Object readResolve() {\n         if (properties == null) {\n-            properties = new ArrayList<ViewProperty>();\n+            properties = new PropertyList();\n         }\n         return this;\n     }\n@@ -204,23 +201,8 @@ public String getDescription() {\n      * Gets the view properties configured for this view.\n      * @since 1.406\n      */\n-    public Map<Descriptor<ViewProperty>,ViewProperty> getProperties() {\n-        return Descriptor.toMap(properties);\n-    }\n-\n-    /**\n-     * Updates the view object by adding a property.\n-     * @since 1.406\n-     */\n-    public synchronized void addProperty(ViewProperty p) throws IOException {\n-        ViewProperty old = getProperty(p.getClass());\n-        List<ViewProperty> ps = new ArrayList<ViewProperty>(properties);\n-        if(old!=null)\n-            ps.remove(old);\n-        ps.add(p);\n-        p.setView(this);\n-        properties = ps;\n-        save();\n+    public DescribableList<ViewProperty,ViewPropertyDescriptor> getProperties() {\n+        return properties;\n     }\n \n     public void save() throws IOException {\n@@ -237,23 +219,9 @@ public void save() throws IOException {\n      */\n     @Exported(name=\"property\",inline=true)\n     public List<ViewProperty> getAllProperties() {\n-        return Collections.unmodifiableList(properties);\n+        return properties.toList();\n     }\n \n-    /**\n-     * Gets the specific property, or null.\n-     * @since 1.406\n-     */\n-    public <T extends ViewProperty> T getProperty(Class<T> clazz) {\n-        for (ViewProperty p : properties) {\n-            if(clazz.isInstance(p))\n-                return clazz.cast(p);\n-        }\n-        return null;\n-    }\n-\n-\n-\n     public ViewDescriptor getDescriptor() {\n         return (ViewDescriptor)Hudson.getInstance().getDescriptorOrDie(getClass());\n     }\n@@ -655,7 +623,7 @@ public final synchronized void doConfigSubmit( StaplerRequest req, StaplerRespon\n         List<ViewProperty> props = new ArrayList<ViewProperty>();\n         int i = 0;\n         for (ViewPropertyDescriptor d: ViewProperty.all()) {\n-            ViewProperty p = getProperty(d.clazz);\n+            ViewProperty p = properties.get(d.clazz);\n \n             JSONObject o = json.optJSONObject(\"viewProperty\" + (i++));\n             if (o != null) {\n@@ -664,14 +632,13 @@ public final synchronized void doConfigSubmit( StaplerRequest req, StaplerRespon\n                 } else {\n                     p = d.newInstance(req, o);\n                 }\n-                p.setView(this);\n             }\n \n             if (p != null) {\n                 props.add(p);\n             }\n         }\n-        properties = props;\n+        properties.replaceBy(props);\n \n         save();\n \n@@ -797,4 +764,16 @@ public static View create(StaplerRequest req, StaplerResponse rsp, ViewGroup own\n \n         return v;\n     }\n+\n+    private class PropertyList extends DescribableList<ViewProperty,ViewPropertyDescriptor> {\n+        private PropertyList() {\n+            super(View.this);\n+        }\n+\n+        @Override\n+        protected void onModified() throws IOException {\n+            for (ViewProperty p : this)\n+                p.setView(View.this);\n+        }\n+    }\n }",
      "parent_sha": "e1837ec7755e8e15c77ee64e8f63153d9d75a9b2"
    }
  },
  {
    "oid": "16f6c7a3d54cddae756f30ce728703fd1bbd04ec",
    "message": "added @since tags for version and children fields",
    "date": "2011-06-02T10:09:22Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/16f6c7a3d54cddae756f30ce728703fd1bbd04ec",
    "details": {
      "sha": "24e82156c07e85b36276c10ff6e18419f7693946",
      "filename": "maven-plugin/src/main/java/hudson/maven/MavenModule.java",
      "status": "modified",
      "additions": 12,
      "deletions": 5,
      "changes": 17,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/16f6c7a3d54cddae756f30ce728703fd1bbd04ec/maven-plugin%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmaven%2FMavenModule.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/16f6c7a3d54cddae756f30ce728703fd1bbd04ec/maven-plugin%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmaven%2FMavenModule.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/maven-plugin%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmaven%2FMavenModule.java?ref=16f6c7a3d54cddae756f30ce728703fd1bbd04ec",
      "patch": "@@ -79,11 +79,13 @@ public final class MavenModule extends AbstractMavenProject<MavenModule,MavenBui\n     private String displayName;\n \n     /**\n-     * Version number of this module as of fhe last build, taken from {@link MavenProject#getVersion()}.\n+     * Version number of this module as of the last build, taken from {@link MavenProject#getVersion()}.\n      *\n-     * This field can be null if Hudson loaded old data\n+     * This field can be null if Jenkins loaded old data\n      * that didn't record this information, so that situation\n      * needs to be handled gracefully.\n+     * \n+     * @since 1.199\n      */\n     private String version;\n \n@@ -110,7 +112,9 @@ public final class MavenModule extends AbstractMavenProject<MavenModule,MavenBui\n      * List of child modules as defined by &lt;module> POM element.\n      * Used to determine parent/child relationship of modules.\n      * <p>\n-     * For compatibility reason, this field may be null when loading data from old hudson. \n+     * For compatibility reason, this field may be null when loading data from old hudson.\n+     * \n+     * @since 1.133\n      */\n     @CopyOnWrite\n     private volatile List<ModuleName> children;\n@@ -216,7 +220,7 @@ public void onLoad(ItemGroup<? extends Item> parent, String name) throws IOExcep\n         else {\n             // Until 1.207, we used to have ModuleName in dependencies. So convert.\n             Set<ModuleDependency> deps = new HashSet<ModuleDependency>(dependencies.size());\n-            for (Object d : (Set)dependencies) {\n+            for (Object d : (Set<?>)dependencies) {\n                 if (d instanceof ModuleDependency) {\n                     deps.add((ModuleDependency) d);\n                 } else {\n@@ -241,9 +245,10 @@ public String getRelativePath() {\n      * Gets the version number in Maven POM as of the last build.\n      *\n      * @return\n-     *      This method can return null if Hudson loaded old data\n+     *      This method can return null if Jenkins loaded old data\n      *      that didn't record this information, so that situation\n      *      needs to be handled gracefully.\n+     * @since 1.199\n      */\n     public String getVersion() {\n         return version;\n@@ -333,6 +338,8 @@ public MavenModuleSet getParent() {\n      * <p>\n      * This method returns null if this information is not recorded. This happens\n      * for compatibility reason.\n+     * \n+     * @since 1.133\n      */\n     public List<MavenModule> getChildren() {\n         List<ModuleName> l = children;    // take a snapshot",
      "parent_sha": "db0dcf0d257fcc6c47d116e7958fcbd107312c93"
    }
  },
  {
    "oid": "1225d1c43ad11a7943cb84fa884fc4467c8bb7eb",
    "message": "parent needs to be transient since it's implied by the file system structure.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@1869 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2007-01-22T04:00:53Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/1225d1c43ad11a7943cb84fa884fc4467c8bb7eb",
    "details": {
      "sha": "774a2772dceecb523d4409b82156567c60d02e4f",
      "filename": "core/src/main/java/hudson/model/AbstractItem.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/1225d1c43ad11a7943cb84fa884fc4467c8bb7eb/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FAbstractItem.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/1225d1c43ad11a7943cb84fa884fc4467c8bb7eb/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FAbstractItem.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FAbstractItem.java?ref=1225d1c43ad11a7943cb84fa884fc4467c8bb7eb",
      "patch": "@@ -30,7 +30,7 @@ public abstract class AbstractItem extends Actionable implements Item {\n      */\n     protected String description;\n \n-    private ItemGroup parent;\n+    private transient ItemGroup parent;\n \n     protected AbstractItem(ItemGroup parent, String name) {\n         this.parent = parent;",
      "parent_sha": "7ff6439978dc2f6e874c32d7529839ee75dc8325"
    }
  },
  {
    "oid": "1c9e5a4cc3c35f2ef99efaa2e13b87efcdb67b44",
    "message": "improved error message\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@26107 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2010-01-19T23:03:05Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/1c9e5a4cc3c35f2ef99efaa2e13b87efcdb67b44",
    "details": {
      "sha": "01bfe4361ffc59a44c0d2445e5b31aa92fc0711c",
      "filename": "remoting/src/main/java/hudson/remoting/Channel.java",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/1c9e5a4cc3c35f2ef99efaa2e13b87efcdb67b44/remoting%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fremoting%2FChannel.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/1c9e5a4cc3c35f2ef99efaa2e13b87efcdb67b44/remoting%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fremoting%2FChannel.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/remoting%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fremoting%2FChannel.java?ref=1c9e5a4cc3c35f2ef99efaa2e13b87efcdb67b44",
      "patch": "@@ -101,6 +101,10 @@\n public class Channel implements VirtualChannel, IChannel {\n     private final ObjectInputStream ois;\n     private final ObjectOutputStream oos;\n+    /**\n+     * Human readable description of where this channel is connected to. Used during diagnostic output\n+     * and error reports.\n+     */\n     private final String name;\n     /*package*/ final boolean isRestricted;\n     /*package*/ final ExecutorService executor;\n@@ -549,11 +553,11 @@ V call(Callable<V,T> callable) throws IOException, T, InterruptedException {\n \n         // re-wrap the exception so that we can capture the stack trace of the caller.\n         } catch (ClassNotFoundException e) {\n-            IOException x = new IOException(\"Remote call failed\");\n+            IOException x = new IOException(\"Remote call on \"+name+\" failed\");\n             x.initCause(e);\n             throw x;\n         } catch (Error e) {\n-            IOException x = new IOException(\"Remote call failed\");\n+            IOException x = new IOException(\"Remote call on \"+name+\" failed\");\n             x.initCause(e);\n             throw x;\n         } finally {",
      "parent_sha": "05163295471592048d2831968d20cc85ff690c18"
    }
  },
  {
    "oid": "dd29ee69c6d78c4f8ad43466110f5cb82788302d",
    "message": "Users should be allowed to configure himself regardless of the permission setting.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@9980 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2008-06-10T00:35:56Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/dd29ee69c6d78c4f8ad43466110f5cb82788302d",
    "details": {
      "sha": "f68dd6a331218dcbef743127632d53440cb67919",
      "filename": "core/src/main/java/hudson/model/User.java",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/dd29ee69c6d78c4f8ad43466110f5cb82788302d/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FUser.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/dd29ee69c6d78c4f8ad43466110f5cb82788302d/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FUser.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FUser.java?ref=dd29ee69c6d78c4f8ad43466110f5cb82788302d",
      "patch": "@@ -267,7 +267,7 @@ public static User current() {\n         Authentication a = Hudson.getAuthentication();\n         if(a instanceof AnonymousAuthenticationToken)\n             return null;\n-        return get(a.getPrincipal().toString());\n+        return get(a.getName());\n     }\n \n     private static volatile long lastScanned;\n@@ -463,7 +463,13 @@ public Calendar getEntryTimestamp(Run entry) {\n \n \n     public ACL getACL() {\n-        return Hudson.getInstance().getAuthorizationStrategy().getACL(this);\n+        final ACL base = Hudson.getInstance().getAuthorizationStrategy().getACL(this);\n+        // always allow the user full control of himself.\n+        return new ACL() {\n+            public boolean hasPermission(Authentication a, Permission permission) {\n+                return a.getName().equals(id) || base.hasPermission(a, permission);\n+            }\n+        };\n     }\n \n     public void checkPermission(Permission permission) {",
      "parent_sha": "064aace82bb20c968dbe2323979d426360ec6266"
    }
  },
  {
    "oid": "64dc4de1e07407a4570d080e1f443a59a2538a9b",
    "message": "Better handle AccessDeniedException.",
    "date": "2020-01-09T23:13:10Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/64dc4de1e07407a4570d080e1f443a59a2538a9b",
    "details": {
      "sha": "129a6a49f0603d73b83b4ef568ca7070f4974359",
      "filename": "core/src/main/java/jenkins/security/SuppressionFilter.java",
      "status": "modified",
      "additions": 7,
      "deletions": 6,
      "changes": 13,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/64dc4de1e07407a4570d080e1f443a59a2538a9b/core%2Fsrc%2Fmain%2Fjava%2Fjenkins%2Fsecurity%2FSuppressionFilter.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/64dc4de1e07407a4570d080e1f443a59a2538a9b/core%2Fsrc%2Fmain%2Fjava%2Fjenkins%2Fsecurity%2FSuppressionFilter.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fjenkins%2Fsecurity%2FSuppressionFilter.java?ref=64dc4de1e07407a4570d080e1f443a59a2538a9b",
      "patch": "@@ -1,7 +1,7 @@\n /*\n  * The MIT License\n  *\n- * Copyright (c) 2019 CloudBees, Inc.\n+ * Copyright (c) 2019-2020 CloudBees, Inc.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to deal\n@@ -80,8 +80,9 @@ public void doFilter(ServletRequest request, ServletResponse response, FilterCha\n         try {\n             chain.doFilter(request, response);\n         } catch (Exception e) {\n-            if (containsAccessDeniedException(e)) {\n-                throw e;\n+            AccessDeniedException accessDeniedException = containsAccessDeniedException(e);\n+            if (accessDeniedException != null) {\n+                throw accessDeniedException;\n             }\n             if (Stapler.isSocketException(e)) {\n                 return;\n@@ -156,19 +157,19 @@ private static boolean showStackTrace() {\n         return Jenkins.get().hasPermission(Jenkins.ADMINISTER);\n     }\n \n-    private boolean containsAccessDeniedException(Exception exception) {\n+    private AccessDeniedException containsAccessDeniedException(Exception exception) {\n         // Guard against malicious overrides of Throwable.equals by\n         // using a Set with identity equality semantics.\n         Set<Throwable> dejaVu = Collections.newSetFromMap(new IdentityHashMap<>());\n         Throwable currentException = exception;\n         do {\n             dejaVu.add(currentException);\n             if (currentException instanceof AccessDeniedException) {\n-                return true;\n+                return (AccessDeniedException) currentException;\n             }\n             currentException = currentException.getCause();\n         } while (currentException != null && !dejaVu.contains(currentException));\n-        return false;\n+        return null;\n     }\n \n }",
      "parent_sha": "b720e27e695052a7937ac45bb7712c6c5c55d6ad"
    }
  },
  {
    "oid": "b3eecf7eddf029126c5d6e6f7a65e393f353c5c2",
    "message": "[FIXED HUDSON-3444] Fix javadoc browsing.\nStapler does not seem to call \"<Type> doDynamic()\" (though it does call\n\"<Type> doSomethingElse()\"), so reverted to \"void doDynamic(req,rsp)\".\nCould change this back after fix in Stapler..\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@17104 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2009-04-12T16:22:07Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/b3eecf7eddf029126c5d6e6f7a65e393f353c5c2",
    "details": {
      "sha": "1b3e66a62368f86e05607d28fe51308d001492ee",
      "filename": "core/src/main/java/hudson/tasks/JavadocArchiver.java",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/b3eecf7eddf029126c5d6e6f7a65e393f353c5c2/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Ftasks%2FJavadocArchiver.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/b3eecf7eddf029126c5d6e6f7a65e393f353c5c2/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Ftasks%2FJavadocArchiver.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Ftasks%2FJavadocArchiver.java?ref=b3eecf7eddf029126c5d6e6f7a65e393f353c5c2",
      "patch": "@@ -32,6 +32,8 @@\n \n import org.kohsuke.stapler.DataBoundConstructor;\n import org.kohsuke.stapler.QueryParameter;\n+import org.kohsuke.stapler.StaplerRequest;\n+import org.kohsuke.stapler.StaplerResponse;\n import org.kohsuke.stapler.AncestorInPath;\n \n import javax.servlet.ServletException;\n@@ -138,8 +140,8 @@ public String getIconFileName() {\n         /**\n          * Serves javadoc.\n          */\n-        public DirectoryBrowserSupport doDynamic() {\n-            return new DirectoryBrowserSupport(this, new FilePath(dir()), getTitle(), \"help.gif\", false);\n+        public void doDynamic(StaplerRequest req, StaplerResponse rsp) throws IOException, ServletException {\n+            new DirectoryBrowserSupport(this, new FilePath(dir()), getTitle(), \"help.gif\", false).generateResponse(req,rsp,this);\n         }\n \n         protected abstract String getTitle();",
      "parent_sha": "168a8891ea5e6d2746c55057f43eee8e6836be3a"
    }
  },
  {
    "oid": "1c6498f95b91288b106613b7fdad5f106e6efd3e",
    "message": "[FIXED HUDSON-7475] maintain ancestors if possible when forwarding to error page,\nso nav links at top work properly\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@35270 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2010-09-25T19:40:36Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/1c6498f95b91288b106613b7fdad5f106e6efd3e",
    "details": {
      "sha": "86fad48c6f64e2932b1053dfd2abda833b0364c4",
      "filename": "core/src/main/java/hudson/model/Failure.java",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/1c6498f95b91288b106613b7fdad5f106e6efd3e/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FFailure.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/1c6498f95b91288b106613b7fdad5f106e6efd3e/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FFailure.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FFailure.java?ref=1c6498f95b91288b106613b7fdad5f106e6efd3e",
      "patch": "@@ -1,7 +1,7 @@\n /*\n  * The MIT License\n  *\n- * Copyright (c) 2004-2009, Sun Microsystems, Inc., Kohsuke Kawaguchi\n+ * Copyright (c) 2004-2010, Sun Microsystems, Inc., Kohsuke Kawaguchi\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to deal\n@@ -57,6 +57,9 @@ public void generateResponse(StaplerRequest req, StaplerResponse rsp, Object nod\n         req.setAttribute(\"message\",getMessage());\n         if(pre)\n             req.setAttribute(\"pre\",true);\n-        rsp.forward( node instanceof AbstractModelObject ? node : Hudson.getInstance() ,\"error\",req);\n+        if (node instanceof AbstractItem) // Maintain ancestors\n+            rsp.forward(Hudson.getInstance(), ((AbstractItem)node).getUrl() + \"error\", req);\n+        else\n+            rsp.forward(node instanceof AbstractModelObject ? node : Hudson.getInstance() ,\"error\", req);\n     }\n }",
      "parent_sha": "7c35506bf9cd4b88f0f009b1ca75212ad11241d5"
    }
  },
  {
    "oid": "d65fbbce27e729adb46d30676c3f1f6a9a793343",
    "message": "Fixed ambiguity problem in Eclipse",
    "date": "2012-06-02T18:12:51Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/d65fbbce27e729adb46d30676c3f1f6a9a793343",
    "details": {
      "sha": "690a0ecd4618c626db5ce8fcfe20806e50fe7f1b",
      "filename": "test/src/test/java/hudson/bugs/seasar/Operation2174Test.java",
      "status": "modified",
      "additions": 7,
      "deletions": 10,
      "changes": 17,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/d65fbbce27e729adb46d30676c3f1f6a9a793343/test%2Fsrc%2Ftest%2Fjava%2Fhudson%2Fbugs%2Fseasar%2FOperation2174Test.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/d65fbbce27e729adb46d30676c3f1f6a9a793343/test%2Fsrc%2Ftest%2Fjava%2Fhudson%2Fbugs%2Fseasar%2FOperation2174Test.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/test%2Fsrc%2Ftest%2Fjava%2Fhudson%2Fbugs%2Fseasar%2FOperation2174Test.java?ref=d65fbbce27e729adb46d30676c3f1f6a9a793343",
      "patch": "@@ -23,45 +23,42 @@\n  */\n package hudson.bugs.seasar;\n \n-import com.gargoylesoftware.htmlunit.html.HtmlForm;\n-import com.gargoylesoftware.htmlunit.html.HtmlPage;\n import hudson.maven.MavenModuleSet;\n+import hudson.model.Item;\n import hudson.model.FreeStyleProject;\n import hudson.tasks.BuildTrigger;\n-import hudson.tasks.BuildTrigger.DescriptorImpl;\n-import org.jvnet.hudson.test.HudsonTestCase;\n \n import java.util.Collections;\n \n+import org.jvnet.hudson.test.HudsonTestCase;\n+\n /**\n  * See http://ml.seasar.org/archives/operation/2008-November/004003.html\n  *\n  * @author Kohsuke Kawaguchi\n  */\n public class Operation2174Test extends HudsonTestCase {\n     /**\n-     * Upstream/downstream relationship lost.\n+     * Tests that configuring a dependency from a freestyle to a maven project actually works.\n      */\n     public void testBuildChains() throws Exception {\n         FreeStyleProject up = createFreeStyleProject(\"up\");\n         MavenModuleSet dp = createMavenProject(\"dp\");\n \n         // designate 'dp' as the downstream in 'up'\n         WebClient webClient = new WebClient();\n-        HtmlPage page = webClient.getPage(up,\"configure\");\n-\n-        HtmlForm form = page.getFormByName(\"config\");\n+        webClient.getPage(up,\"configure\");\n \n         // configure downstream build\n         up.getPublishersList().add(new BuildTrigger(\"dp\",false));\n-        configRoundtrip(up);\n+        configRoundtrip((Item)up);\n \n         // verify that the relationship is set up\n         BuildTrigger trigger = up.getPublishersList().get(BuildTrigger.class);\n         assertEquals(trigger.getChildProjects(up), Collections.singletonList(dp));\n \n         // now go ahead and edit the downstream\n-        configRoundtrip(dp);\n+        configRoundtrip((Item)dp);\n \n         // verify that the relationship is set up\n         trigger = up.getPublishersList().get(BuildTrigger.class);",
      "parent_sha": "91b3d3c544932c29e50d278e7782ff5c720df0af"
    }
  },
  {
    "oid": "d985712982b5ed3d5050ea75133de2650096f49f",
    "message": "More helpful diagnostic.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@17393 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2009-04-22T20:51:22Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/d985712982b5ed3d5050ea75133de2650096f49f",
    "details": {
      "sha": "fafe2c8a63c40957593d7d533f07de1ce455bad7",
      "filename": "remoting/src/main/java/hudson/remoting/Engine.java",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/d985712982b5ed3d5050ea75133de2650096f49f/remoting%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fremoting%2FEngine.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/d985712982b5ed3d5050ea75133de2650096f49f/remoting%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fremoting%2FEngine.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/remoting%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fremoting%2FEngine.java?ref=d985712982b5ed3d5050ea75133de2650096f49f",
      "patch": "@@ -115,7 +115,11 @@ public void run() {\n \n                     // find out the TCP port\n                     HttpURLConnection con = (HttpURLConnection)salURL.openConnection();\n-                    con.connect();\n+                    try {\n+                        con.connect();\n+                    } catch (IOException x) {\n+                        throw new IOException(\"Failed to connect to \" + salURL + \": \" + x.getMessage()).initCause(x);\n+                    }\n                     port = con.getHeaderField(\"X-Hudson-JNLP-Port\");\n                     if(con.getResponseCode()!=200) {\n                         if(firstError==null)",
      "parent_sha": "542ce78c7fa4baabfa771fcfa746212289bee422"
    }
  },
  {
    "oid": "f380d068d5c2379da306face41da1e6feaa5d97b",
    "message": "doc improvement.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@34631 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2010-09-09T22:35:54Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/f380d068d5c2379da306face41da1e6feaa5d97b",
    "details": {
      "sha": "98ac130e3d7969fa57ba6b103aa98187e497d24b",
      "filename": "core/src/main/java/hudson/model/queue/MappingWorksheet.java",
      "status": "modified",
      "additions": 56,
      "deletions": 1,
      "changes": 57,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/f380d068d5c2379da306face41da1e6feaa5d97b/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2Fqueue%2FMappingWorksheet.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/f380d068d5c2379da306face41da1e6feaa5d97b/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2Fqueue%2FMappingWorksheet.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2Fqueue%2FMappingWorksheet.java?ref=f380d068d5c2379da306face41da1e6feaa5d97b",
      "patch": "@@ -25,9 +25,12 @@\n \n import com.google.common.collect.ImmutableList;\n import hudson.model.Computer;\n+import hudson.model.Executor;\n import hudson.model.Label;\n+import hudson.model.LoadBalancer;\n import hudson.model.Node;\n import hudson.model.Queue;\n+import hudson.model.Queue.Executable;\n import hudson.model.Queue.JobOffer;\n import hudson.model.Queue.Task;\n \n@@ -39,6 +42,39 @@\n import java.util.Map;\n \n /**\n+ * Defines a mapping problem for answering \"where do we execute this task?\"\n+ *\n+ * <p>\n+ * The heart of the placement problem is a mapping problem. We are given a {@link Task},\n+ * (which in the general case consists of a set of {@link SubTask}s), and we are also given a number\n+ * of idle {@link Executor}s, and our goal is to find a mapping from the former to the latter,\n+ * which determines where each {@link SubTask} gets executed.\n+ *\n+ * <p>\n+ * This mapping is done under two constraints:\n+ *\n+ * <ul>\n+ * <li>\n+ * \"Same node\" constraint. Some of the subtasks need to be co-located on the same node.\n+ * See {@link SubTask#getSameNodeConstraint()}\n+ * <li>\n+ * Label constraint. {@link SubTask}s can specify that it can be only run on nodes that has the label.\n+ * </ul>\n+ *\n+ * <p>\n+ * We first fold the former constraint into the problem definition. That is, we now consider\n+ * a set of {@link SubTask}s that need to be co-located as a single {@link WorkChunk}. Similarly,\n+ * we consider a set of all {@link Executor}s from the same node as {@link ExecutorChunk}.\n+ * Now, the problem becomes the weighted matching problem from {@link WorkChunk} to {@link ExecutorChunk}.\n+ *\n+ * <p>\n+ * An instance of {@link MappingWorksheet} captures a problem definition, plus which\n+ * {@link ExecutorChunk} and {@link WorkChunk} are compatible. The purpose of this class\n+ * (and {@link ExecutorChunk} and {@link WorkChunk}) are to expose a lot of convenience methods\n+ * to assist various algorithms that produce the solution of this mapping problem,\n+ * which is represented as {@link Mapping}.\n+ *\n+ * @see LoadBalancer#map(Task, MappingWorksheet)\n  * @author Kohsuke Kawaguchi\n  */\n public class MappingWorksheet {\n@@ -74,16 +110,23 @@ private ExecutorChunk(List<JobOffer> base, int index) {\n             node = computer.getNode();\n         }\n \n+        /**\n+         * Is this executor chunk and the given work chunk compatible? Can the latter be run on the former?\n+         */\n         public boolean canAccept(WorkChunk c) {\n             return this.size() >= c.size()\n                 && (c.assignedLabel==null || c.assignedLabel.contains(node));\n         }\n \n+        /**\n+         * Node name.\n+         */\n         public String getName() {\n             return node.getNodeName();\n         }\n \n         /**\n+         * Number of executors in this chunk.\n          * Alias for size but more readable.\n          */\n         public int capacity() {\n@@ -151,6 +194,11 @@ public List<ExecutorChunk> applicableExecutorChunks() {\n         }\n     }\n \n+    /**\n+     * Represents the solution to the mapping problem.\n+     * It's a mapping from every {@link WorkChunk} to {@link ExecutorChunk}\n+     * that satisfies the constraints.\n+     */\n     public final class Mapping {\n         // for each WorkChunk, identify ExecutorChunk where it is assigned to.\n         private final ExecutorChunk[] mapping = new ExecutorChunk[works.size()];\n@@ -185,6 +233,9 @@ public int size() {\n             return mapping.length;\n         }\n \n+        /**\n+         * Checks if the assignments made thus far are valid an within the constraints.\n+         */\n         public boolean isPartiallyValid() {\n             int[] used = new int[executors.size()];\n             for (int i=0; i<mapping.length; i++) {\n@@ -198,14 +249,18 @@ public boolean isPartiallyValid() {\n             return true;\n         }\n \n+        /**\n+         * Makes sure that all the assignments are made and it is within the constraints.\n+         */\n         public boolean isCompletelyValid() {\n             for (ExecutorChunk ec : mapping)\n                 if (ec==null)   return false;   // unassigned\n             return isPartiallyValid();\n         }\n \n         /**\n-         * Executes this mapping\n+         * Executes this mapping by handing over {@link Executable}s to {@link JobOffer}\n+         * as defined by the mapping.\n          */\n         public void execute(WorkUnitContext wuc) {\n             if (!isCompletelyValid())",
      "parent_sha": "41bc77f74133461b2c476220c8e28348d9734412"
    }
  },
  {
    "oid": "07f4117582d3399e33bb9b06685e212b13044535",
    "message": "added one more utility method.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@3520 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2007-06-23T16:56:11Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/07f4117582d3399e33bb9b06685e212b13044535",
    "details": {
      "sha": "fc724b13657c5ce0db1144a36f638d2ea306c878",
      "filename": "core/src/main/java/hudson/Util.java",
      "status": "modified",
      "additions": 15,
      "deletions": 1,
      "changes": 16,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/07f4117582d3399e33bb9b06685e212b13044535/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FUtil.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/07f4117582d3399e33bb9b06685e212b13044535/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FUtil.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FUtil.java?ref=07f4117582d3399e33bb9b06685e212b13044535",
      "patch": "@@ -498,6 +498,21 @@ public static String getFileName(String filePath) {\n         return filePath;\n     }\n \n+    /**\n+     * Concatenate multiple strings by inserting a separator.\n+     */\n+    public static String join(Collection<String> strings, String seprator) {\n+        StringBuilder buf = new StringBuilder();\n+        boolean first=true;\n+        for (String s : strings) {\n+            if(first)   first=false;\n+            else        buf.append(seprator);\n+            buf.append(s);\n+        }\n+        return buf.toString();\n+    }\n+\n+\n     public static final SimpleDateFormat XS_DATETIME_FORMATTER = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n \n     // Note: RFC822 dates must not be localized!\n@@ -511,5 +526,4 @@ public static String getFileName(String filePath) {\n \n \n     private static final Logger LOGGER = Logger.getLogger(Util.class.getName());\n-\n }",
      "parent_sha": "192458c19d9f7db22e331d5010664c64d26efdb5"
    }
  },
  {
    "oid": "2771d233075e33337cde9910dc7b3f2595ff2472",
    "message": "ExtensionList.remove was unconditionally returning true, against Collection contract.",
    "date": "2013-10-23T18:39:52Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/2771d233075e33337cde9910dc7b3f2595ff2472",
    "details": {
      "sha": "0d1d8f2d7f386df3c7e97ab6c0b69bad5ce53abc",
      "filename": "core/src/main/java/hudson/ExtensionList.java",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/2771d233075e33337cde9910dc7b3f2595ff2472/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FExtensionList.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/2771d233075e33337cde9910dc7b3f2595ff2472/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FExtensionList.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FExtensionList.java?ref=2771d233075e33337cde9910dc7b3f2595ff2472",
      "patch": "@@ -176,23 +176,23 @@ public int size() {\n \n     @Override\n     public synchronized boolean remove(Object o) {\n-        removeComponent(legacyInstances,o);\n+        boolean removed = removeComponent(legacyInstances, o);\n         if(extensions!=null) {\n             List<ExtensionComponent<T>> r = new ArrayList<ExtensionComponent<T>>(extensions);\n-            removeComponent(r,o);\n+            removed |= removeComponent(r,o);\n             extensions = sort(r);\n         }\n-        return true;\n+        return removed;\n     }\n \n-    private <T> void removeComponent(Collection<ExtensionComponent<T>> collection, Object t) {\n+    private <T> boolean removeComponent(Collection<ExtensionComponent<T>> collection, Object t) {\n         for (Iterator<ExtensionComponent<T>> itr = collection.iterator(); itr.hasNext();) {\n             ExtensionComponent<T> c =  itr.next();\n             if (c.getInstance().equals(t)) {\n-                collection.remove(c);\n-                return;\n+                return collection.remove(c);\n             }\n         }\n+        return false;\n     }\n \n     @Override",
      "parent_sha": "728caf4dd05ca565d36de62c1fc3afd9be17f1a7"
    }
  },
  {
    "oid": "cdc18ec56987204535c9919ea385c555d3d66863",
    "message": "fixed JENKINS-8614 ProcessTreeTest fails on Windows",
    "date": "2013-04-06T03:44:07Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/cdc18ec56987204535c9919ea385c555d3d66863",
    "details": {
      "sha": "df5946c2d606fac9a198d6bc57c971e32543f648",
      "filename": "core/src/main/java/hudson/util/ProcessTree.java",
      "status": "modified",
      "additions": 10,
      "deletions": 9,
      "changes": 19,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/cdc18ec56987204535c9919ea385c555d3d66863/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Futil%2FProcessTree.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/cdc18ec56987204535c9919ea385c555d3d66863/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Futil%2FProcessTree.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Futil%2FProcessTree.java?ref=cdc18ec56987204535c9919ea385c555d3d66863",
      "patch": "@@ -425,16 +425,17 @@ public synchronized List<String> getArguments() {\n \n                     @Override\n                     public synchronized EnvVars getEnvironmentVariables() {\n-                        if(env==null)  \n+                        if(env !=null)\n+                          return env;\n+                        env = new EnvVars();   \n+                        \n+                        try \n                         {\n-                            try\n-                            {\n-                                env = new EnvVars(p.getEnvironmentVariables());\n-                            } catch (WinpException e)\n-                            {\n-                                LOGGER.log(FINE, \"Failed to get environment variable \", e);\n-                            }                          \n-                        }\n+                           env.putAll(p.getEnvironmentVariables());\n+                        } catch (WinpException e)\n+                        {\n+                           LOGGER.log(FINE, \"Failed to get environment variable \", e);\n+                        }                          \n                         return env;\n                     }\n                 });",
      "parent_sha": "4709490334c2affd6b82270449daff7a6cb1e5e1"
    }
  },
  {
    "oid": "33cab211ca6b352a9e81b4fbb06285873aa73216",
    "message": "This page doesn't seem to exist anymore at all in the Jenkins Wiki. Therefore deleting without replacement.",
    "date": "2011-11-14T16:48:52Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/33cab211ca6b352a9e81b4fbb06285873aa73216",
    "details": {
      "sha": "1760d6fe8ef5ad778d87abb127e9eb2c4cb1aff0",
      "filename": "maven-plugin/src/main/java/hudson/maven/MavenUtil.java",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/33cab211ca6b352a9e81b4fbb06285873aa73216/maven-plugin%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmaven%2FMavenUtil.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/33cab211ca6b352a9e81b4fbb06285873aa73216/maven-plugin%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmaven%2FMavenUtil.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/maven-plugin%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmaven%2FMavenUtil.java?ref=33cab211ca6b352a9e81b4fbb06285873aa73216",
      "patch": "@@ -148,8 +148,7 @@ public static MavenEmbedder createEmbedder(MavenEmbedderRequest mavenEmbedderReq\n         File m2Home = new File(MavenEmbedder.userHome, \".m2\");\n         m2Home.mkdirs();\n         if(!m2Home.exists())\n-            throw new AbortException(\"Failed to create \"+m2Home+\n-                \"\\nSee https://hudson.dev.java.net/cannot-create-.m2.html\");\n+            throw new AbortException(\"Failed to create \"+m2Home);\n \n         if (mavenEmbedderRequest.getPrivateRepository()!=null)\n             mavenRequest.setLocalRepositoryPath( mavenEmbedderRequest.getPrivateRepository() );",
      "parent_sha": "38aa485883b3304b919101b4730485f45b988ed4"
    }
  },
  {
    "oid": "6d5bcad475e9e8858cd1da5b4783b9af51e80581",
    "message": "Use standard property naming convention",
    "date": "2016-03-23T18:59:45Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/6d5bcad475e9e8858cd1da5b4783b9af51e80581",
    "details": {
      "sha": "025f9e53731432e5262e2b66c52a4e5baed0260c",
      "filename": "core/src/main/java/hudson/ProxyConfiguration.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/6d5bcad475e9e8858cd1da5b4783b9af51e80581/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FProxyConfiguration.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/6d5bcad475e9e8858cd1da5b4783b9af51e80581/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FProxyConfiguration.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FProxyConfiguration.java?ref=6d5bcad475e9e8858cd1da5b4783b9af51e80581",
      "patch": "@@ -78,7 +78,7 @@ public final class ProxyConfiguration extends AbstractDescribableImpl<ProxyConfi\n      * Holds a default TCP connect timeout set on all connections returned from this class,\n      * note this is value is in milliseconds, it's passed directly to {@link URLConnection#setConnectTimeout(int)}\n      */\n-    private static final int DEFAULT_CONNECT_TIMEOUT_MILLIS = Integer.getInteger(\"jenkins.proxy.default_connect_timeout_millis\", 20 * 1000);\n+    private static final int DEFAULT_CONNECT_TIMEOUT_MILLIS = Integer.getInteger(\"hudson.ProxyConfiguration.DEFAULT_CONNECT_TIMEOUT_MILLIS\", 20 * 1000);\n     \n     public final String name;\n     public final int port;",
      "parent_sha": "a536e627665939e85992f186619fa91145ac7838"
    }
  },
  {
    "oid": "76ac10d1e6feee31e642bc3dbb7a73a34e61a949",
    "message": "Log the exception when there is some problem in detemining changelog author",
    "date": "2012-07-16T19:00:00Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/76ac10d1e6feee31e642bc3dbb7a73a34e61a949",
    "details": {
      "sha": "d1a9557c0fc43aa449a85bf1e0650ce5f1f58f1f",
      "filename": "core/src/main/java/hudson/model/AbstractBuild.java",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/76ac10d1e6feee31e642bc3dbb7a73a34e61a949/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FAbstractBuild.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/76ac10d1e6feee31e642bc3dbb7a73a34e61a949/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FAbstractBuild.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FAbstractBuild.java?ref=76ac10d1e6feee31e642bc3dbb7a73a34e61a949",
      "patch": "@@ -359,9 +359,8 @@ public boolean hasParticipant(User user) {\n             try{\n                 if (e.getAuthor()==user)\n                     return true;\n-            } catch (RuntimeException re) {\n-                // no-op, just remove exception thrown e.g. from git plugin. \n-                // It there's some problem to determine committer, user probably doesn't participate in the build.\n+            } catch (RuntimeException re) { \n+                LOGGER.log(Level.INFO, \"Failed to determine author of changelog \" + e.getCommitId() + \"for \" + getParent().getDisplayName() + \", \" + getDisplayName(), re);\n             }\n         return false;\n     }",
      "parent_sha": "6a928f5537534d0fe55d774c4b9b262b8c3da041"
    }
  },
  {
    "oid": "7325517cade67358582cef5a3996c90cd27f58c9",
    "message": "improved efficiency --- not that it matters, though\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@7569 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2008-03-11T05:40:07Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/7325517cade67358582cef5a3996c90cd27f58c9",
    "details": {
      "sha": "4619963d9e103b7d30a8552e252660176d993c6c",
      "filename": "core/src/main/java/hudson/tasks/DynamicLabeler.java",
      "status": "modified",
      "additions": 3,
      "deletions": 5,
      "changes": 8,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/7325517cade67358582cef5a3996c90cd27f58c9/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Ftasks%2FDynamicLabeler.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/7325517cade67358582cef5a3996c90cd27f58c9/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Ftasks%2FDynamicLabeler.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Ftasks%2FDynamicLabeler.java?ref=7325517cade67358582cef5a3996c90cd27f58c9",
      "patch": "@@ -1,12 +1,10 @@\n package hudson.tasks;\n \n-import hudson.model.Describable;\n-import hudson.model.Node;\n-import hudson.model.Descriptor;\n import hudson.ExtensionPoint;\n import hudson.remoting.VirtualChannel;\n \n-import java.util.*;\n+import java.util.Collections;\n+import java.util.Set;\n \n /**\n  * Created by IntelliJ IDEA.\n@@ -23,6 +21,6 @@ public abstract class DynamicLabeler implements LabelFinder, ExtensionPoint {\n      * @return a set of labels.\n      */\n     public Set<String> findLabels(VirtualChannel channel) {\n-        return new HashSet<String>();\n+        return Collections.emptySet();\n     }\n }",
      "parent_sha": "d3b0d3afd216abe6035578e928ecd3172dd5329d"
    }
  },
  {
    "oid": "07bfa1e2471fbe36a9847daeace754f6135dc616",
    "message": "added 'Libraries' that supercede 'Class-Path', which handles whitespaces in path names correctly.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@1001 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2006-11-06T13:27:20Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/07bfa1e2471fbe36a9847daeace754f6135dc616",
    "details": {
      "sha": "248fe9d02f4123cd7b08c418ebe2cb93b8d6780f",
      "filename": "core/src/main/java/hudson/PluginWrapper.java",
      "status": "modified",
      "additions": 23,
      "deletions": 18,
      "changes": 41,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/07bfa1e2471fbe36a9847daeace754f6135dc616/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FPluginWrapper.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/07bfa1e2471fbe36a9847daeace754f6135dc616/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FPluginWrapper.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FPluginWrapper.java?ref=07bfa1e2471fbe36a9847daeace754f6135dc616",
      "patch": "@@ -133,24 +133,8 @@ public PluginWrapper(PluginManager owner, File archive) throws IOException {\n \n         List<URL> paths = new ArrayList<URL>();\n         if(isLinked) {\n-            String classPath = manifest.getMainAttributes().getValue(\"Class-Path\");\n-            for (String s : classPath.split(\" +\")) {\n-                File file = resolve(archive, s);\n-                if(file.getName().contains(\"*\")) {\n-                    // handle wildcard\n-                    FileSet fs = new FileSet();\n-                    File dir = file.getParentFile();\n-                    fs.setDir(dir);\n-                    fs.setIncludes(file.getName());\n-                    for( String included : fs.getDirectoryScanner(new Project()).getIncludedFiles() ) {\n-                        paths.add(new File(dir,included).toURL());\n-                    }\n-                } else {\n-                    if(!file.exists())\n-                        throw new IOException(\"No such file: \"+file);\n-                    paths.add(file.toURL());\n-                }\n-            }\n+            parseClassPath(archive, paths, \"Libraries\", \",\");\n+            parseClassPath(archive, paths, \"Class-Path\", \" +\"); // backward compatibility\n \n             this.baseResourceURL = resolve(archive,\n                 manifest.getMainAttributes().getValue(\"Resource-Path\")).toURL();\n@@ -215,6 +199,27 @@ public PluginWrapper(PluginManager owner, File archive) throws IOException {\n         }\n     }\n \n+    private void parseClassPath(File archive, List<URL> paths, String attributeName, String separator) throws IOException {\n+        String classPath = manifest.getMainAttributes().getValue(attributeName);\n+        for (String s : classPath.split(separator)) {\n+            File file = resolve(archive, s);\n+            if(file.getName().contains(\"*\")) {\n+                // handle wildcard\n+                FileSet fs = new FileSet();\n+                File dir = file.getParentFile();\n+                fs.setDir(dir);\n+                fs.setIncludes(file.getName());\n+                for( String included : fs.getDirectoryScanner(new Project()).getIncludedFiles() ) {\n+                    paths.add(new File(dir,included).toURL());\n+                }\n+            } else {\n+                if(!file.exists())\n+                    throw new IOException(\"No such file: \"+file);\n+                paths.add(file.toURL());\n+            }\n+        }\n+    }\n+\n     private static File resolve(File base, String relative) {\n         File rel = new File(relative);\n         if(rel.isAbsolute())",
      "parent_sha": "14952adec6020af66bd8c2196a7ada66d234f583"
    }
  },
  {
    "oid": "0c429e89273dfc58194b7f1b969c0bd19ae6989b",
    "message": "fixed an inconsistent use of synchronization\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@11298 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2008-08-06T21:04:40Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/0c429e89273dfc58194b7f1b969c0bd19ae6989b",
    "details": {
      "sha": "2f4453537d10a19b8f74efee0bcbb00ecd02889b",
      "filename": "core/src/main/java/hudson/util/PluginServletFilter.java",
      "status": "modified",
      "additions": 10,
      "deletions": 5,
      "changes": 15,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/0c429e89273dfc58194b7f1b969c0bd19ae6989b/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Futil%2FPluginServletFilter.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/0c429e89273dfc58194b7f1b969c0bd19ae6989b/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Futil%2FPluginServletFilter.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Futil%2FPluginServletFilter.java?ref=0c429e89273dfc58194b7f1b969c0bd19ae6989b",
      "patch": "@@ -9,22 +9,25 @@\n import java.io.IOException;\r\n import java.util.Arrays;\r\n import java.util.Collection;\r\n+import java.util.List;\r\n+import java.util.ArrayList;\r\n+import java.util.Vector;\r\n \r\n /**\r\n  * Servlet {@link Filter} that chains multiple {@link Filter}s, provided by plugins\r\n  *\r\n  */\r\n public class PluginServletFilter implements Filter {\r\n \r\n-\tprivate static CopyOnWriteList<Filter> LIST = new CopyOnWriteList<Filter>();\r\n+\tprivate static final List<Filter> LIST = new Vector<Filter>();\r\n \t\r\n \tprivate static FilterConfig filterConfig;\r\n     \r\n     public PluginServletFilter() {\r\n     }\r\n \r\n     public void init(FilterConfig filterConfig) throws ServletException {\r\n-    \tthis.filterConfig = filterConfig;\r\n+    \tPluginServletFilter.filterConfig = filterConfig;\r\n     \tsynchronized (LIST)  {\r\n     \t\tfor (Filter f : LIST) {\r\n     \t\t\tf.init(filterConfig);\r\n@@ -45,7 +48,7 @@ public void doFilter(ServletRequest request, ServletResponse response, final Fil\n         new FilterChain() {\r\n             private int position=0;\r\n             // capture the array for thread-safety\r\n-            private final Filter[] filters = LIST.toArray(new Filter[0]);\r\n+            private final Filter[] filters = LIST.toArray(new Filter[LIST.size()]);\r\n \r\n             public void doFilter(ServletRequest request, ServletResponse response) throws IOException, ServletException {\r\n                 if(position==filters.length) {\r\n@@ -60,7 +63,9 @@ public void doFilter(ServletRequest request, ServletResponse response) throws IO\n     }\r\n \r\n     public void destroy() {\r\n-        for (Filter f : LIST)\r\n-            f.destroy();\r\n+        synchronized (LIST)  {\r\n+            for (Filter f : LIST)\r\n+                f.destroy();\r\n+        }\r\n     }\r\n }\r",
      "parent_sha": "132ca44407fbba7a6f42eec7a0f1da024b680629"
    }
  },
  {
    "oid": "0ab79882978292f3751be8e0acf5ae7edb0751f1",
    "message": "[FIXED JENKINS-12629] Using jenkins-cli connecting to HTTPS port fails due to hostname mismatch in certificate.\n\n- NoCheckTrustManager needed to implement X509TrustManager not just plain TrustManager",
    "date": "2013-09-25T08:48:55Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/0ab79882978292f3751be8e0acf5ae7edb0751f1",
    "details": {
      "sha": "c69b3330c21073ad54f34b7d4e527b2181f9e28d",
      "filename": "cli/src/main/java/hudson/cli/NoCheckTrustManager.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/0ab79882978292f3751be8e0acf5ae7edb0751f1/cli%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fcli%2FNoCheckTrustManager.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/0ab79882978292f3751be8e0acf5ae7edb0751f1/cli%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fcli%2FNoCheckTrustManager.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/cli%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fcli%2FNoCheckTrustManager.java?ref=0ab79882978292f3751be8e0acf5ae7edb0751f1",
      "patch": "@@ -1,13 +1,13 @@\n package hudson.cli;\n \n-import javax.net.ssl.TrustManager;\n+import javax.net.ssl.X509TrustManager;\n import java.security.cert.CertificateException;\n import java.security.cert.X509Certificate;\n \n /**\n  * @author Kohsuke Kawaguchi\n  */\n-public class NoCheckTrustManager implements TrustManager {\n+public class NoCheckTrustManager implements X509TrustManager {\n     public void checkClientTrusted(X509Certificate[] x509Certificates, String s) throws CertificateException {\n     }\n ",
      "parent_sha": "d5678365eb2130f39dbda263c4cfe7b110e66d98"
    }
  },
  {
    "oid": "d2b1f15fc56f382f1d578c9317fca917ddabac92",
    "message": "[JENKINS-32831] if metadata for tool installer does not exist should not fail",
    "date": "2016-02-22T16:10:01Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/d2b1f15fc56f382f1d578c9317fca917ddabac92",
    "details": {
      "sha": "c89556a2ea075818a159a274899ed35e7ddd2d31",
      "filename": "core/src/main/java/hudson/model/DownloadService.java",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/d2b1f15fc56f382f1d578c9317fca917ddabac92/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FDownloadService.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/d2b1f15fc56f382f1d578c9317fca917ddabac92/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FDownloadService.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FDownloadService.java?ref=d2b1f15fc56f382f1d578c9317fca917ddabac92",
      "patch": "@@ -395,10 +395,12 @@ private FormValidation load(String json, long dataTimestamp) throws IOException\n         @Restricted(NoExternalUse.class)\n         public FormValidation updateNow() throws IOException {\n             List<JSONObject> jsonList = new ArrayList<>();\n+            boolean toolInstallerMetadataExists = false;\n             for (String site : getUrls()) {\n                 String jsonString;\n                 try {\n                     jsonString = loadJSONHTML(new URL(site + \".html?id=\" + URLEncoder.encode(getId(), \"UTF-8\") + \"&version=\" + URLEncoder.encode(Jenkins.VERSION, \"UTF-8\")));\n+                    toolInstallerMetadataExists = true;\n                 } catch (Exception e) {\n                     LOGGER.log(Level.WARNING, \"Could not load json from \" + site, e );\n                     continue;\n@@ -407,13 +409,17 @@ public FormValidation updateNow() throws IOException {\n                 if (signatureCheck) {\n                     FormValidation e = new JSONSignatureValidator(\"downloadable '\"+id+\"'\").verifySignature(o);\n                     if (e.kind!= Kind.OK) {\n+                        LOGGER.log(Level.WARNING, \"signature check failed for \" + site, e );\n                         continue;\n                     }\n                 }\n                 jsonList.add(o);\n             }\n-            if (jsonList.size() == 0) {\n-                return FormValidation.warning(\"None of the Update Sites passed the signature check\");\n+            if (jsonList.size() == 0 && toolInstallerMetadataExists) {\n+                return FormValidation.warning(\"None of the tool installer metadata passed the signature check\");\n+            } else if (!toolInstallerMetadataExists) {\n+                LOGGER.log(Level.WARNING, \"No tool installer metadata found for \" + id);\n+                return FormValidation.ok();\n             }\n             JSONObject reducedJson = reduce(jsonList);\n             return load(reducedJson.toString(), System.currentTimeMillis());",
      "parent_sha": "51f215c3b8788de14417edc9605bbef6e1beb03b"
    }
  },
  {
    "oid": "57fc2185da383e904a2a714f2d945426a92bfc3e",
    "message": "honor undocumented formatting rule \nSee but very important  as not following this will result in :bugs: during code review",
    "date": "2016-10-03T13:12:48Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/57fc2185da383e904a2a714f2d945426a92bfc3e",
    "details": {
      "sha": "ff38d20e3b7a861e3146e5ef2baadd5c8b8990e2",
      "filename": "core/src/main/java/hudson/model/UpdateCenter.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/57fc2185da383e904a2a714f2d945426a92bfc3e/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FUpdateCenter.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/57fc2185da383e904a2a714f2d945426a92bfc3e/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FUpdateCenter.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FUpdateCenter.java?ref=57fc2185da383e904a2a714f2d945426a92bfc3e",
      "patch": "@@ -755,7 +755,7 @@ public String getBackupVersion() {\n             try (JarFile backupWar = new JarFile(new File(Lifecycle.get().getHudsonWar() + \".bak\"))) {\n                 Attributes attrs = backupWar.getManifest().getMainAttributes();\n                 String v = attrs.getValue(\"Jenkins-Version\");\n-                if (v == null) v = attrs.getValue(\"Hudson-Version\");\n+                if (v == null)   v = attrs.getValue(\"Hudson-Version\");\n                 return v;\n             }\n         } catch (IOException e) {",
      "parent_sha": "7b3942449516b564ede642b85b99ccc83063c8ff"
    }
  },
  {
    "oid": "7322f0c40fa405fa8d71b583bd54bbd503e7e7ea",
    "message": "[JENKINS-48770] speed up the test",
    "date": "2018-08-21T14:47:01Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/7322f0c40fa405fa8d71b583bd54bbd503e7e7ea",
    "details": {
      "sha": "c94daee83e2b8ea2369269d7e78711d3323b895d",
      "filename": "test/src/test/java/jenkins/model/ParameterizedJobMixInTest.java",
      "status": "modified",
      "additions": 12,
      "deletions": 8,
      "changes": 20,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/7322f0c40fa405fa8d71b583bd54bbd503e7e7ea/test%2Fsrc%2Ftest%2Fjava%2Fjenkins%2Fmodel%2FParameterizedJobMixInTest.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/7322f0c40fa405fa8d71b583bd54bbd503e7e7ea/test%2Fsrc%2Ftest%2Fjava%2Fjenkins%2Fmodel%2FParameterizedJobMixInTest.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/test%2Fsrc%2Ftest%2Fjava%2Fjenkins%2Fmodel%2FParameterizedJobMixInTest.java?ref=7322f0c40fa405fa8d71b583bd54bbd503e7e7ea",
      "patch": "@@ -25,6 +25,7 @@\n \n import hudson.model.FreeStyleProject;\n import hudson.model.ParametersDefinitionProperty;\n+import hudson.model.Queue;\n import hudson.model.StringParameterDefinition;\n import javax.servlet.http.HttpServletResponse;\n \n@@ -66,19 +67,22 @@ public void doBuildWithParameters_shouldFailWhenInvokingDisabledProject() throws\n     @Test\n     @Issue(\"JENKINS-48770\")\n     public void doBuildQuietPeriodInSeconds() throws Exception {\n-        final int projectQuietPeriodInSeconds = 10;\n-        final int projectQuietPeriodInMillis = projectQuietPeriodInSeconds * 1000;\n-        final int timeToExecuteProject = 5000; // Time to finish the execution of the job\n+        final int projectQuietPeriodInSeconds = 50;\n+\n         final FreeStyleProject project = j.createFreeStyleProject();\n         project.setQuietPeriod(projectQuietPeriodInSeconds);\n \n         final JenkinsRule.WebClient webClient = j.createWebClient();\n         webClient.goTo(project.getUrl() + \"build\", \"\");\n+        long triggerTime = System.currentTimeMillis();\n+\n+        Queue.Item item = Jenkins.get().getQueue().getItem(1);\n+        Assert.assertTrue(item instanceof Queue.WaitingItem);\n+        Assert.assertTrue(item.task instanceof FreeStyleProject);\n+\n+        Queue.WaitingItem waitingItem = (Queue.WaitingItem) item;\n+        Assert.assertTrue((waitingItem.timestamp.getTimeInMillis() - triggerTime) > 45000);\n \n-        Assert.assertEquals(0, project.getBuilds().size());\n-        Thread.sleep(projectQuietPeriodInMillis / 2);\n-        Assert.assertEquals(0, project.getBuilds().size());\n-        Thread.sleep(projectQuietPeriodInMillis / 2 + timeToExecuteProject);\n-        Assert.assertEquals(1, project.getBuilds().size());\n+        Jenkins.get().getQueue().doCancelItem(1);\n     }\n }",
      "parent_sha": "51c75aacfd59efa6d345694664682f1aaac3b0b3"
    }
  },
  {
    "oid": "f0328e55b721f83b3a7556d50affc89c94d05e0d",
    "message": "testTriggerJob has been unstable recently, probably because of executor-ondemand branch changes.",
    "date": "2013-10-17T13:59:06Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/f0328e55b721f83b3a7556d50affc89c94d05e0d",
    "details": {
      "sha": "8ea0daf81822c79917e7d3b1984f633d266231d2",
      "filename": "test/src/test/java/hudson/model/DependencyGraphTest.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/f0328e55b721f83b3a7556d50affc89c94d05e0d/test%2Fsrc%2Ftest%2Fjava%2Fhudson%2Fmodel%2FDependencyGraphTest.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/f0328e55b721f83b3a7556d50affc89c94d05e0d/test%2Fsrc%2Ftest%2Fjava%2Fhudson%2Fmodel%2FDependencyGraphTest.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/test%2Fsrc%2Ftest%2Fjava%2Fhudson%2Fmodel%2FDependencyGraphTest.java?ref=f0328e55b721f83b3a7556d50affc89c94d05e0d",
      "patch": "@@ -66,7 +66,7 @@ public void testTriggerJob() throws Exception {\n         assertNull(\"down1 should not be triggered: \" + log, down1.getLastBuild());\n         q = jenkins.getQueue().getItem(down2);\n         assertNotNull(\"down2 should be in queue (quiet period): \" + log, q);\n-        Run r = (Run)q.getFuture().get(6, TimeUnit.SECONDS);\n+        Run r = (Run)q.getFuture().get(60, TimeUnit.SECONDS);\n         assertNotNull(\"down2 should be triggered: \" + log, r);\n         assertNotNull(\"down2 should have MailMessageIdAction\",\n                       r.getAction(MailMessageIdAction.class));\n@@ -83,7 +83,7 @@ public void testTriggerJob() throws Exception {\n                      down2.getLastBuild().getNumber());\n         q = jenkins.getQueue().getItem(down1);\n         assertNotNull(\"down1 should be in queue (quiet period): \" + log, q);\n-        r = (Run)q.getFuture().get(6, TimeUnit.SECONDS);\n+        r = (Run)q.getFuture().get(60, TimeUnit.SECONDS);\n         assertNotNull(\"down1 should be triggered\", r);\n     }\n ",
      "parent_sha": "6fd82c75a030c59b1c5d1adc2e0ef3365a884807"
    }
  },
  {
    "oid": "ae20c03771d8e0ec34c5261c6f69dd707eeeb906",
    "message": "Using JUnit assertions only",
    "date": "2015-05-02T14:22:36Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/ae20c03771d8e0ec34c5261c6f69dd707eeeb906",
    "details": {
      "sha": "aba40066a28f01859e96019ae95905741a8365bd",
      "filename": "test/src/test/java/hudson/ClassicPluginStrategyTest.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/ae20c03771d8e0ec34c5261c6f69dd707eeeb906/test%2Fsrc%2Ftest%2Fjava%2Fhudson%2FClassicPluginStrategyTest.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/ae20c03771d8e0ec34c5261c6f69dd707eeeb906/test%2Fsrc%2Ftest%2Fjava%2Fhudson%2FClassicPluginStrategyTest.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/test%2Fsrc%2Ftest%2Fjava%2Fhudson%2FClassicPluginStrategyTest.java?ref=ae20c03771d8e0ec34c5261c6f69dd707eeeb906",
      "patch": "@@ -100,7 +100,7 @@ public void testMaskResourceClassLoader() throws Exception {\n         Class<?> clazz = pw.classLoader.loadClass(\"org.apache.http.impl.io.SocketInputBuffer\");\n         ClassLoader cl = clazz.getClassLoader();\n         URL url = cl.getResource(\"org/apache/http/impl/io/SocketInputBuffer.class\");\n-        assert url != null;\n+        assertNotNull(url);\n         assertTrue(\"expected to find the class from foo1 plugin\", url.toString().contains(\"plugins/foo1\"));\n     }\n }",
      "parent_sha": "791bf568224399bb6263ac17838eadc4040715a5"
    }
  },
  {
    "oid": "a2191488919f107c0dc1080aac4814161374ab70",
    "message": "Noting possibility of summary.jelly.",
    "date": "2013-09-05T21:34:50Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/a2191488919f107c0dc1080aac4814161374ab70",
    "details": {
      "sha": "3400bb27eea1d43b5ca35921de91283b4c59fa9b",
      "filename": "core/src/main/java/hudson/model/UserProperty.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/a2191488919f107c0dc1080aac4814161374ab70/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FUserProperty.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/a2191488919f107c0dc1080aac4814161374ab70/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FUserProperty.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FUserProperty.java?ref=a2191488919f107c0dc1080aac4814161374ab70",
      "patch": "@@ -46,7 +46,7 @@\n  * Within this page, the {@link UserProperty} instance is available\n  * as <tt>instance</tt> variable (while <tt>it</tt> refers to {@link User}.\n  * See {@link hudson.search.UserSearchProperty}'s <tt>config.jelly</tt> for an example.\n- *\n+ * <p>A property may also define a {@code summary.jelly} view to show in the main user screen.\n  *\n  * @author Kohsuke Kawaguchi\n  */",
      "parent_sha": "d52da3f38d39bf5a45042cbfc9b3de225cc02f33"
    }
  },
  {
    "oid": "88857a6f6c94f0328c77bc852c63835da8485c38",
    "message": "avoid \"2nd instance\" test failures. The stack trace was:\n\njava.lang.NullPointerException\n\tat com.gargoylesoftware.htmlunit.html.HtmlPage.loadFrames(HtmlPage.java:1732)\n\tat com.gargoylesoftware.htmlunit.html.HtmlPage.initialize(HtmlPage.java:153)\n\tat com.gargoylesoftware.htmlunit.WebClient.loadWebResponseInto(WebClient.java:455)\n\tat com.gargoylesoftware.htmlunit.WebClient.getPage(WebClient.java:340)\n\tat com.gargoylesoftware.htmlunit.WebClient.getPage(WebClient.java:390)\n\tat com.gargoylesoftware.htmlunit.WebClient.getPage(WebClient.java:377)\n\tat org.jvnet.hudson.test.HudsonTestCase$WebClient.getPage(HudsonTestCase.java:1002)\n\tat org.jvnet.hudson.test.HudsonTestCase.tearDown(HudsonTestCase.java:257)\n\tat junit.framework.TestCase.runBare(TestCase.java:130)\n\tat junit.framework.TestResult$1.protect(TestResult.java:106)\n\tat junit.framework.TestResult.runProtected(TestResult.java:124)\n\tat junit.framework.TestResult.run(TestResult.java:109)\n\tat junit.framework.TestCase.run(TestCase.java:118)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:208)\n\tat junit.framework.TestSuite.run(TestSuite.java:203)\n\tat sun.reflect.GeneratedMethodAccessor232.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.apache.maven.surefire.junit.JUnitTestSet.execute(JUnitTestSet.java:213)\n\tat org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:140)\n\tat org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:127)\n\tat org.apache.maven.surefire.Surefire.run(Surefire.java:177)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:345)\n\tat org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1009)\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@21328 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2009-09-01T21:57:49Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/88857a6f6c94f0328c77bc852c63835da8485c38",
    "details": {
      "sha": "1af7a91e20fd2103445b1f881393cc30a3a3655b",
      "filename": "test/src/main/java/org/jvnet/hudson/test/HudsonTestCase.java",
      "status": "modified",
      "additions": 24,
      "deletions": 22,
      "changes": 46,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/88857a6f6c94f0328c77bc852c63835da8485c38/test%2Fsrc%2Fmain%2Fjava%2Forg%2Fjvnet%2Fhudson%2Ftest%2FHudsonTestCase.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/88857a6f6c94f0328c77bc852c63835da8485c38/test%2Fsrc%2Fmain%2Fjava%2Forg%2Fjvnet%2Fhudson%2Ftest%2FHudsonTestCase.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/test%2Fsrc%2Fmain%2Fjava%2Forg%2Fjvnet%2Fhudson%2Ftest%2FHudsonTestCase.java?ref=88857a6f6c94f0328c77bc852c63835da8485c38",
      "patch": "@@ -249,29 +249,31 @@ public String getUpdateCenterUrl() {\n     }\n \n     protected void tearDown() throws Exception {\n-        // cancel pending asynchronous operations, although this doesn't really seem to be working\n-        for (WeakReference<WebClient> client : clients) {\n-            WebClient c = client.get();\n-            if(c==null) continue;\n-            // unload the page to cancel asynchronous operations \n-            c.getPage(\"about:blank\");\n+        try {\n+            // cancel pending asynchronous operations, although this doesn't really seem to be working\n+            for (WeakReference<WebClient> client : clients) {\n+                WebClient c = client.get();\n+                if(c==null) continue;\n+                // unload the page to cancel asynchronous operations\n+                c.getPage(\"about:blank\");\n+            }\n+            clients.clear();\n+        } finally {\n+            server.stop();\n+            for (LenientRunnable r : tearDowns)\n+                r.run();\n+\n+            hudson.cleanUp();\n+            env.dispose();\n+            ExtensionList.clearLegacyInstances();\n+            DescriptorExtensionList.clearLegacyInstances();\n+\n+            // Hudson creates ClassLoaders for plugins that hold on to file descriptors of its jar files,\n+            // but because there's no explicit dispose method on ClassLoader, they won't get GC-ed until\n+            // at some later point, leading to possible file descriptor overflow. So encourage GC now.\n+            // see http://bugs.sun.com/view_bug.do?bug_id=4950148\n+            System.gc();\n         }\n-        clients.clear();\n-\n-        server.stop();\n-        for (LenientRunnable r : tearDowns)\n-            r.run();\n-\n-        hudson.cleanUp();\n-        env.dispose();\n-        ExtensionList.clearLegacyInstances();\n-        DescriptorExtensionList.clearLegacyInstances();\n-\n-        // Hudson creates ClassLoaders for plugins that hold on to file descriptors of its jar files,\n-        // but because there's no explicit dispose method on ClassLoader, they won't get GC-ed until\n-        // at some later point, leading to possible file descriptor overflow. So encourage GC now.\n-        // see http://bugs.sun.com/view_bug.do?bug_id=4950148\n-        System.gc();\n     }\n \n     protected void runTest() throws Throwable {",
      "parent_sha": "b0c76f7b515c89ba567f91a1adc91fa64a26cfe6"
    }
  },
  {
    "oid": "c3d7e940d6ff4eee4716d76c252746883db25582",
    "message": "NPE during shutdown.\njava.lang.NullPointerException\n\tat hudson.model.User.idStrategy(User.java:140)\n\tat hudson.model.User.getOrCreate(User.java:373)\n\tat hudson.model.User.get(User.java:366)\n\tat hudson.model.User.get(User.java:331)\n\tat hudson.model.User.get(User.java:441)\n\tat org.jenkinsci.plugins.workflow.cps.CpsFlowExecution.getAuthentication(CpsFlowExecution.java:614)\n\tat org.jenkinsci.plugins.workflow.cps.CpsVmThread.run(CpsVmThread.java:20)",
    "date": "2014-10-02T23:47:44Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/c3d7e940d6ff4eee4716d76c252746883db25582",
    "details": {
      "sha": "46ab4365c3fa6b158aef5cb4ff716132cadab4e7",
      "filename": "core/src/main/java/hudson/model/User.java",
      "status": "modified",
      "additions": 9,
      "deletions": 2,
      "changes": 11,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/c3d7e940d6ff4eee4716d76c252746883db25582/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FUser.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/c3d7e940d6ff4eee4716d76c252746883db25582/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FUser.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FUser.java?ref=c3d7e940d6ff4eee4716d76c252746883db25582",
      "patch": "@@ -137,8 +137,15 @@ private User(String id, String fullName) {\n      */\n     @Nonnull\n     public static IdStrategy idStrategy() {\n-        SecurityRealm realm = Jenkins.getInstance().getSecurityRealm();\n-        return realm == null ? IdStrategy.CASE_INSENSITIVE : realm.getUserIdStrategy();\n+        Jenkins j = Jenkins.getInstance();\n+        if (j == null) {\n+            return IdStrategy.CASE_INSENSITIVE;\n+        }\n+        SecurityRealm realm = j.getSecurityRealm();\n+        if (realm == null) {\n+            return IdStrategy.CASE_INSENSITIVE;\n+        }\n+        return realm.getUserIdStrategy();\n     }\n \n     public int compareTo(User that) {",
      "parent_sha": "d10b9fab1d11addb7a4ca008f9eead2cb71415dc"
    }
  },
  {
    "oid": "76ff1034a902f08cd30b69a086cd3fdb7bdc2159",
    "message": "Avoid duplicate class conflict with core/src/test/java/hudson/model/AbstractItemTest.java.",
    "date": "2015-02-05T14:05:06Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/76ff1034a902f08cd30b69a086cd3fdb7bdc2159",
    "details": {
      "sha": "d9d26d363c496e02c76e63cb0c4496fdd2976162",
      "filename": "test/src/test/java/hudson/model/AbstractItemSecurityTest.java",
      "status": "renamed",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/76ff1034a902f08cd30b69a086cd3fdb7bdc2159/test%2Fsrc%2Ftest%2Fjava%2Fhudson%2Fmodel%2FAbstractItemSecurityTest.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/76ff1034a902f08cd30b69a086cd3fdb7bdc2159/test%2Fsrc%2Ftest%2Fjava%2Fhudson%2Fmodel%2FAbstractItemSecurityTest.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/test%2Fsrc%2Ftest%2Fjava%2Fhudson%2Fmodel%2FAbstractItemSecurityTest.java?ref=76ff1034a902f08cd30b69a086cd3fdb7bdc2159",
      "patch": "@@ -49,7 +49,7 @@\n import static org.junit.Assert.assertThat;\n import static org.junit.Assert.fail;\n \n-public class AbstractItemTest {\n+public class AbstractItemSecurityTest {\n \n     @Rule\n     public JenkinsRule jenkinsRule = new JenkinsRule();",
      "previous_filename": "test/src/test/java/hudson/model/AbstractItemTest.java",
      "parent_sha": "065c3b40d39fbe19ed31fac1627204bf9a2d31be"
    }
  },
  {
    "oid": "fa33cf10bafa9698a5c198a5be1f902b6b13e663",
    "message": "doc improvement.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@2653 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2007-03-25T22:22:03Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/fa33cf10bafa9698a5c198a5be1f902b6b13e663",
    "details": {
      "sha": "47b2357f5907c083266903e71e51890b6838fdd4",
      "filename": "core/src/main/java/hudson/scm/CVSChangeLogSet.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/fa33cf10bafa9698a5c198a5be1f902b6b13e663/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fscm%2FCVSChangeLogSet.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/fa33cf10bafa9698a5c198a5be1f902b6b13e663/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fscm%2FCVSChangeLogSet.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fscm%2FCVSChangeLogSet.java?ref=fa33cf10bafa9698a5c198a5be1f902b6b13e663",
      "patch": "@@ -201,7 +201,8 @@ public String getName() {\n         }\n \n         /**\n-         * Gets the full path name in the CVS repository.\n+         * Gets the full path name in the CVS repository,\n+         * like \"/module/foo/bar/zot.c\"\n          *\n          * <p>\n          * Unlike {@link #getName()}, this method returns",
      "parent_sha": "08978229fc45144b0ffdadfb6166f871f841a165"
    }
  },
  {
    "oid": "fbb95cd54b82a684e86c8668b386fc311f5fef74",
    "message": "Proactive fix in case some plugins take too long to calculate their health report. Will now cache the health reports until the next build.  Should speed display of main page.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@4106 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2007-08-06T08:55:54Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/fbb95cd54b82a684e86c8668b386fc311f5fef74",
    "details": {
      "sha": "d9c3c51778dac871115a6212812c56e277b8181f",
      "filename": "core/src/main/java/hudson/model/Job.java",
      "status": "modified",
      "additions": 20,
      "deletions": 2,
      "changes": 22,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/fbb95cd54b82a684e86c8668b386fc311f5fef74/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FJob.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/fbb95cd54b82a684e86c8668b386fc311f5fef74/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FJob.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fmodel%2FJob.java?ref=fbb95cd54b82a684e86c8668b386fc311f5fef74",
      "patch": "@@ -73,6 +73,13 @@ public abstract class Job<JobT extends Job<JobT,RunT>, RunT extends Run<JobT,Run\n     protected transient int nextBuildNumber = 1;\n \n     private LogRotator logRotator;\n+    \n+    /**\n+     * Not all plugins are good at calculating their health report quickly.\n+     * These fields are used to cache the health reports to speed up rendering the main page.\n+     */\n+    private transient Integer cachedBuildHealthReportsBuildNumber = null;\n+    private transient List<HealthReport> cachedBuildHealthReports = null;\n \n     private boolean keepDependencies;\n \n@@ -546,7 +553,13 @@ public List<HealthReport> getBuildHealthReports() {\n             lastBuild = lastBuild.getPreviousBuild();\n         }\n \n-        if (lastBuild != null) {\n+        // check the cache\n+        if (cachedBuildHealthReportsBuildNumber != null && \n+                cachedBuildHealthReports != null &&\n+                lastBuild != null &&\n+                cachedBuildHealthReportsBuildNumber.intValue() == lastBuild.getNumber()) {\n+            reports.addAll(cachedBuildHealthReports);\n+        } else if (lastBuild != null) {\n             for (HealthReportingAction healthReportingAction : lastBuild.getActions(HealthReportingAction.class)) {\n                 final HealthReport report = healthReportingAction.getBuildHealth();\n                 if (report != null) {\n@@ -565,9 +578,14 @@ public List<HealthReport> getBuildHealthReports() {\n                     reports.add(report);\n                 }\n             }\n+\n+            Collections.sort(reports);\n+    \n+            // store the cache\n+            cachedBuildHealthReportsBuildNumber = lastBuild.getNumber();\n+            cachedBuildHealthReports = new ArrayList<HealthReport>(reports);\n         }\n \n-        Collections.sort(reports);\n         return reports;\n     }\n ",
      "parent_sha": "a8dc04a1f2411d88e35e39722525d2cefcd93b55"
    }
  },
  {
    "oid": "e8a9854e23dcce8ff3b2d0899c3b6a0a2c09840a",
    "message": "doc improvement.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@6160 71c3de6d-444a-0410-be80-ed276b4c234a",
    "date": "2007-12-01T15:39:48Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/e8a9854e23dcce8ff3b2d0899c3b6a0a2c09840a",
    "details": {
      "sha": "8a72ef8a66686219e18b97b9585d9b78615ad7dd",
      "filename": "core/src/main/java/hudson/security/SparseACL.java",
      "status": "modified",
      "additions": 1,
      "deletions": 9,
      "changes": 10,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/e8a9854e23dcce8ff3b2d0899c3b6a0a2c09840a/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fsecurity%2FSparseACL.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/e8a9854e23dcce8ff3b2d0899c3b6a0a2c09840a/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fsecurity%2FSparseACL.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fsecurity%2FSparseACL.java?ref=e8a9854e23dcce8ff3b2d0899c3b6a0a2c09840a",
      "patch": "@@ -1,12 +1,10 @@\n package hudson.security;\n \n-import org.acegisecurity.AccessDeniedException;\n import org.acegisecurity.Authentication;\n import org.acegisecurity.GrantedAuthority;\n import org.acegisecurity.acls.sid.GrantedAuthoritySid;\n import org.acegisecurity.acls.sid.PrincipalSid;\n import org.acegisecurity.acls.sid.Sid;\n-import org.acegisecurity.context.SecurityContextHolder;\n \n import java.util.ArrayList;\n import java.util.List;\n@@ -65,6 +63,7 @@ public boolean hasPermission(Authentication a, Permission permission) {\n         if(parent!=null)\n             return parent.hasPermission(a,permission);\n \n+        // the ultimate default is to reject everything\n         return false;\n     }\n \n@@ -78,11 +77,4 @@ private Boolean hasPermission(Sid p, Permission permission) {\n         }\n         return null;\n     }\n-\n-    /**\n-     * {@link Sid} that represents everyone, including anonymous users.\n-     */\n-    public static final Sid EVERYONE = new Sid() {};\n-\n-    public static final Sid ANONYMOUS = new PrincipalSid(\"anonymous\");\n }",
      "parent_sha": "9b9f4d04c779de7d8652d5ec402d2958938c1ddd"
    }
  },
  {
    "oid": "99767d68824bbcf1fb99b38d742a69f1ea7e0fa0",
    "message": "Increase timeout on test to stop flaking",
    "date": "2020-02-10T03:39:43Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/99767d68824bbcf1fb99b38d742a69f1ea7e0fa0",
    "details": {
      "sha": "1d03ba5de480a424d38ca3883027397cc4f141cc",
      "filename": "test/src/test/java/hudson/model/ViewDescriptorTest.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/99767d68824bbcf1fb99b38d742a69f1ea7e0fa0/test%2Fsrc%2Ftest%2Fjava%2Fhudson%2Fmodel%2FViewDescriptorTest.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/99767d68824bbcf1fb99b38d742a69f1ea7e0fa0/test%2Fsrc%2Ftest%2Fjava%2Fhudson%2Fmodel%2FViewDescriptorTest.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/test%2Fsrc%2Ftest%2Fjava%2Fhudson%2Fmodel%2FViewDescriptorTest.java?ref=99767d68824bbcf1fb99b38d742a69f1ea7e0fa0",
      "patch": "@@ -119,7 +119,7 @@ public void invisiblePropertiesOnViewShoudBePersisted() throws Exception {\n         r.submit(editViewForm);\n \n         //Check that the description is updated on view\n-        Awaitility.waitAtMost(3, TimeUnit.SECONDS).until(() -> webClient.getPage(myListView)\n+        Awaitility.waitAtMost(10, TimeUnit.SECONDS).until(() -> webClient.getPage(myListView)\n                                                                         .asText()\n                                                                         .contains(\"This list view is awesome !\"));\n ",
      "parent_sha": "e489dc20e5a0258ed72e613725c853d715a3d832"
    }
  },
  {
    "oid": "0b71243e62dac0a63318fdf77adea9ad49be69da",
    "message": "[FIXED JENKINS-50795] Add null safety checks to FixedSet\n\n(cherry picked from commit 4a1667146d096c650a707a52b7411fcbe0fe0e28)",
    "date": "2018-10-11T12:21:41Z",
    "url": "https://github.com/jenkinsci/jenkins/commit/0b71243e62dac0a63318fdf77adea9ad49be69da",
    "details": {
      "sha": "eca310184329baf7a1925f447596501f7d89d2e2",
      "filename": "core/src/main/java/hudson/search/FixedSet.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/jenkinsci/jenkins/blob/0b71243e62dac0a63318fdf77adea9ad49be69da/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fsearch%2FFixedSet.java",
      "raw_url": "https://github.com/jenkinsci/jenkins/raw/0b71243e62dac0a63318fdf77adea9ad49be69da/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fsearch%2FFixedSet.java",
      "contents_url": "https://api.github.com/repos/jenkinsci/jenkins/contents/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fsearch%2FFixedSet.java?ref=0b71243e62dac0a63318fdf77adea9ad49be69da",
      "patch": "@@ -50,7 +50,7 @@ public void find(String token, List<SearchItem> result) {\n         boolean caseInsensitive = UserSearchProperty.isCaseInsensitive();\n         for (SearchItem i : items) {\n             String name = i.getSearchName();\n-            if (name.equals(token) || (caseInsensitive && name.equalsIgnoreCase(token))) {\n+            if (name != null && (name.equals(token) || (caseInsensitive && name.equalsIgnoreCase(token)))) {\n                 result.add(i);\n             }\n         }\n@@ -60,7 +60,7 @@ public void suggest(String token, List<SearchItem> result) {\n         boolean caseInsensitive = UserSearchProperty.isCaseInsensitive();\n         for (SearchItem i : items) {\n             String name = i.getSearchName();\n-            if (name.contains(token) || (caseInsensitive && StringUtils.containsIgnoreCase(name, token))) {\n+            if (name != null && (name.contains(token) || (caseInsensitive && StringUtils.containsIgnoreCase(name, token)))) {\n                 result.add(i);\n             }\n         }",
      "parent_sha": "dacd550921d7f9bc3ec5dec614bfd0b7faf3f6eb"
    }
  }
]