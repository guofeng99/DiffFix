[
  {
    "oid": "e599de038a6ae3dbcd0dae6e6b9433efc459559a",
    "message": "Silence CheckForNewAppVersionTask\n\nCloses #2421",
    "date": "2019-06-25T09:49:59Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/e599de038a6ae3dbcd0dae6e6b9433efc459559a",
    "details": {
      "sha": "9285820e891ab706a3f277f7c5e44e657d9d8f8a",
      "filename": "app/src/main/java/org/schabi/newpipe/CheckForNewAppVersionTask.java",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/e599de038a6ae3dbcd0dae6e6b9433efc459559a/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FCheckForNewAppVersionTask.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/e599de038a6ae3dbcd0dae6e6b9433efc459559a/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FCheckForNewAppVersionTask.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FCheckForNewAppVersionTask.java?ref=e599de038a6ae3dbcd0dae6e6b9433efc459559a",
      "patch": "@@ -90,9 +90,7 @@ protected String doInBackground(Void... voids) {\n             Response response = client.newCall(request).execute();\n             return response.body().string();\n         } catch (IOException ex) {\n-            ErrorActivity.reportError(app, ex, null, null,\n-                    ErrorActivity.ErrorInfo.make(UserAction.SOMETHING_ELSE, \"none\",\n-                            \"app update API fail\", R.string.app_ui_crash));\n+            // connectivity problems, do not alarm user and fail silently\n         }\n \n         return null;",
      "parent_sha": "61472a995f76468b1cffe168d5e75de8c2b06224"
    }
  },
  {
    "oid": "fbd983217db2c76bbbb9d55f0c5e3261041548ce",
    "message": "Hide related streams while loading",
    "date": "2018-08-29T05:08:35Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/fbd983217db2c76bbbb9d55f0c5e3261041548ce",
    "details": {
      "sha": "77583f2e5da59ab52c13199d3dd5b8613a906983",
      "filename": "app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/fbd983217db2c76bbbb9d55f0c5e3261041548ce/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Fdetail%2FVideoDetailFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/fbd983217db2c76bbbb9d55f0c5e3261041548ce/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Fdetail%2FVideoDetailFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Fdetail%2FVideoDetailFragment.java?ref=fbd983217db2c76bbbb9d55f0c5e3261041548ce",
      "patch": "@@ -1122,9 +1122,15 @@ public void showLoading() {\n         animateView(videoTitleTextView, true, 0);\n \n         videoDescriptionRootLayout.setVisibility(View.GONE);\n-        if (videoTitleToggleArrow != null) {\n+        if (videoTitleToggleArrow != null) {    //phone\n             videoTitleToggleArrow.setImageResource(R.drawable.arrow_down);\n             videoTitleToggleArrow.setVisibility(View.GONE);\n+        } else {    //tablet\n+            final View related = (View) relatedStreamRootLayout.getParent();\n+            //don`t need to hide it if related streams are disabled\n+            if (related.getVisibility() == View.VISIBLE) {\n+                related.setVisibility(View.INVISIBLE);\n+            }\n         }\n         videoTitleRoot.setClickable(false);\n ",
      "parent_sha": "ce21fe208738ea6f27936df4314b78d76a80074b"
    }
  },
  {
    "oid": "1fe6da14eadf224aa5e527cde875480cd30cad50",
    "message": "Small code improvements",
    "date": "2017-12-10T10:07:08Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/1fe6da14eadf224aa5e527cde875480cd30cad50",
    "details": {
      "sha": "e220654a47386f674e86d7749a013dff23206081",
      "filename": "app/src/main/java/org/schabi/newpipe/fragments/MainFragment.java",
      "status": "modified",
      "additions": 30,
      "deletions": 31,
      "changes": 61,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/1fe6da14eadf224aa5e527cde875480cd30cad50/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2FMainFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/1fe6da14eadf224aa5e527cde875480cd30cad50/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2FMainFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2FMainFragment.java?ref=1fe6da14eadf224aa5e527cde875480cd30cad50",
      "patch": "@@ -2,6 +2,7 @@\n \n import android.content.SharedPreferences;\n import android.os.Bundle;\n+import android.support.annotation.NonNull;\n import android.support.annotation.Nullable;\n import android.support.design.widget.TabLayout;\n import android.support.v4.app.Fragment;\n@@ -30,30 +31,28 @@\n import org.schabi.newpipe.fragments.subscription.SubscriptionFragment;\n import org.schabi.newpipe.report.ErrorActivity;\n import org.schabi.newpipe.report.UserAction;\n-import org.schabi.newpipe.util.Constants;\n import org.schabi.newpipe.util.KioskTranslator;\n import org.schabi.newpipe.util.NavigationHelper;\n import org.schabi.newpipe.util.ThemeHelper;\n \n-import java.util.concurrent.ExecutionException;\n-\n public class MainFragment extends BaseFragment implements TabLayout.OnTabSelectedListener {\n     private ViewPager viewPager;\n     private boolean showBlankTab = false;\n \n-    private static final int FALLBACK_SERVICE_ID = 0; // Youtbe\n-    private static final String FALLBACK_CHANNEL_URL =\n-            \"https://www.youtube.com/channel/UC-9-kyTW8ZkZNDHQJ6FgpwQ\";\n-    private static final String FALLBACK_CHANNEL_NAME = \"Music\";\n-    private static final String FALLBACK_KIOSK_ID = \"Trending\";\n-\n     public int currentServiceId = -1;\n \n+\n     /*//////////////////////////////////////////////////////////////////////////\n-    // Konst\n+    // Constants\n     //////////////////////////////////////////////////////////////////////////*/\n \n-    private static final int KIOSK_MENU_OFFSETT = 2000;\n+\n+    private static final int FALLBACK_SERVICE_ID = 0; // Youtube\n+    private static final String FALLBACK_CHANNEL_URL =\n+            \"https://www.youtube.com/channel/UC-9-kyTW8ZkZNDHQJ6FgpwQ\";\n+    private static final String FALLBACK_CHANNEL_NAME = \"Music\";\n+    private static final String FALLBACK_KIOSK_ID = \"Trending\";\n+    private static final int KIOSK_MENU_OFFSET = 2000;\n \n     /*//////////////////////////////////////////////////////////////////////////\n     // Fragment's LifeCycle\n@@ -66,7 +65,7 @@ public void onCreate(Bundle savedInstanceState) {\n     }\n \n     @Override\n-    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n+    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n         currentServiceId = Integer.parseInt(PreferenceManager.getDefaultSharedPreferences(getActivity())\n                 .getString(getString(R.string.current_service_key), \"0\"));\n         return inflater.inflate(R.layout.fragment_main, container, false);\n@@ -86,27 +85,27 @@ protected void initViews(View rootView, Bundle savedInstanceState) {\n \n         tabLayout.setupWithViewPager(viewPager);\n \n-        if(ThemeHelper.isLightThemeSelected(getActivity())) {\n+        int channelIcon;\n+        int whatsHotIcon;\n+\n+        if (ThemeHelper.isLightThemeSelected(getActivity())) {\n             tabLayout.setBackgroundColor(getResources().getColor(R.color.light_youtube_primary_color));\n+            channelIcon = R.drawable.ic_channel_black_24dp;\n+            whatsHotIcon = R.drawable.ic_whatshot_black_24dp;\n+        } else {\n+            channelIcon = R.drawable.ic_channel_white_24dp;\n+            whatsHotIcon = R.drawable.ic_whatshot_white_24dp;\n         }\n \n-       if(PreferenceManager.getDefaultSharedPreferences(getActivity())\n+\n+        if (PreferenceManager.getDefaultSharedPreferences(getActivity())\n                 .getString(getString(R.string.main_page_content_key), getString(R.string.blank_page_key))\n                 .equals(getString(R.string.subscription_page_key))) {\n-           if(ThemeHelper.isLightThemeSelected(getActivity())) {\n-               tabLayout.getTabAt(0).setIcon(R.drawable.ic_channel_black_24dp);\n-           } else{\n-               tabLayout.getTabAt(0).setIcon(R.drawable.ic_channel_white_24dp);\n-           }\n-       } else {\n-           if(ThemeHelper.isLightThemeSelected(getActivity())) {\n-               tabLayout.getTabAt(0).setIcon(R.drawable.ic_whatshot_black_24dp);\n-               tabLayout.getTabAt(1).setIcon(R.drawable.ic_channel_black_24dp);\n-           } else {\n-               tabLayout.getTabAt(0).setIcon(R.drawable.ic_whatshot_white_24dp);\n-               tabLayout.getTabAt(1).setIcon(R.drawable.ic_channel_white_24dp);\n-           }\n-       }\n+            tabLayout.getTabAt(0).setIcon(channelIcon);\n+        } else {\n+            tabLayout.getTabAt(0).setIcon(whatsHotIcon);\n+            tabLayout.getTabAt(1).setIcon(channelIcon);\n+        }\n     }\n \n     /*//////////////////////////////////////////////////////////////////////////\n@@ -182,7 +181,7 @@ public Fragment getItem(int position) {\n                             .equals(getString(R.string.subscription_page_key))) {\n                         return new SubscriptionFragment();\n                     } else {\n-                        return getMainPageFramgent();\n+                        return getMainPageFragment();\n                     }\n                 case 1:\n                     return new SubscriptionFragment();\n@@ -213,7 +212,7 @@ public int getCount() {\n     // Main page content\n     //////////////////////////////////////////////////////////////////////////*/\n \n-    private Fragment getMainPageFramgent() {\n+    private Fragment getMainPageFragment() {\n         try {\n             SharedPreferences preferences =\n                     PreferenceManager.getDefaultSharedPreferences(getActivity());\n@@ -268,7 +267,7 @@ private void createKioskMenu(Menu menu, MenuInflater menuInflater)\n         KioskList kl = service.getKioskList();\n         int i = 0;\n         for(final String ks : kl.getAvailableKiosks()) {\n-            menu.add(0, KIOSK_MENU_OFFSETT + i, Menu.NONE,\n+            menu.add(0, KIOSK_MENU_OFFSET + i, Menu.NONE,\n                     KioskTranslator.getTranslatedKioskName(ks, getContext()))\n                     .setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n                         @Override",
      "parent_sha": "b7b9653c21b591efd1e289b181f922df9fccd6a9"
    }
  },
  {
    "oid": "5191907af0f5abfcb45b6dcb09cc56a8924ce5db",
    "message": "Fix player resume",
    "date": "2019-08-11T20:10:05Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/5191907af0f5abfcb45b6dcb09cc56a8924ce5db",
    "details": {
      "sha": "62be71995bb934d732bc61e8cb1acd08479c4129",
      "filename": "app/src/main/java/org/schabi/newpipe/player/BasePlayer.java",
      "status": "modified",
      "additions": 7,
      "deletions": 8,
      "changes": 15,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/5191907af0f5abfcb45b6dcb09cc56a8924ce5db/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FBasePlayer.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/5191907af0f5abfcb45b6dcb09cc56a8924ce5db/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FBasePlayer.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FBasePlayer.java?ref=5191907af0f5abfcb45b6dcb09cc56a8924ce5db",
      "patch": "@@ -187,6 +187,7 @@ public abstract class BasePlayer implements\n     protected MediaSessionManager mediaSessionManager;\n \n     private boolean isPrepared = false;\n+    private Disposable stateLoader;\n \n     //////////////////////////////////////////////////////////////////////////*/\n \n@@ -283,16 +284,14 @@ public void handleIntent(Intent intent) {\n                 ) {\n             simpleExoPlayer.seekTo(playQueue.getIndex(), queue.getItem().getRecoveryPosition());\n             return;\n+\n         } else if (intent.getBooleanExtra(RESUME_PLAYBACK, false) && isPlaybackResumeEnabled()) {\n             final PlayQueueItem item = queue.getItem();\n-            if (item != null && item.getRecoveryPosition() == PlayQueueItem.RECOVERY_UNSET && isPlaybackResumeEnabled()) {\n-                final Disposable stateLoader = recordManager.loadStreamState(item)\n+            if (item != null && item.getRecoveryPosition() == PlayQueueItem.RECOVERY_UNSET) {\n+                stateLoader = recordManager.loadStreamState(item)\n                         .observeOn(AndroidSchedulers.mainThread())\n-                        .doFinally(() -> {\n-                            if (simpleExoPlayer == null) return; // doFinally called while closing\n-                            initPlayback(queue, repeatMode, playbackSpeed, playbackPitch, playbackSkipSilence,\n-                                    /*playOnInit=*/true);\n-                        })\n+                        .doFinally(() -> initPlayback(queue, repeatMode, playbackSpeed, playbackPitch, playbackSkipSilence,\n+                                /*playOnInit=*/true))\n                         .subscribe(\n                                 state -> queue.setRecovery(queue.getIndex(), state.getProgressTime()),\n                                 error -> {\n@@ -334,13 +333,13 @@ public void destroyPlayer() {\n             simpleExoPlayer.removeListener(this);\n             simpleExoPlayer.stop();\n             simpleExoPlayer.release();\n-            simpleExoPlayer = null;\n         }\n         if (isProgressLoopRunning()) stopProgressLoop();\n         if (playQueue != null) playQueue.dispose();\n         if (audioReactor != null) audioReactor.dispose();\n         if (playbackManager != null) playbackManager.dispose();\n         if (mediaSessionManager != null) mediaSessionManager.dispose();\n+        if (stateLoader != null) stateLoader.dispose();\n \n         if (playQueueAdapter != null) {\n             playQueueAdapter.unsetSelectedListener();",
      "parent_sha": "a64f5206446edc396b99e23e2c213900b285480a"
    }
  },
  {
    "oid": "52e89c1d1cea4226ec25c0708ecd0dea75794108",
    "message": "Prevent seeking out of video duration in player",
    "date": "2020-09-10T17:47:02Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/52e89c1d1cea4226ec25c0708ecd0dea75794108",
    "details": {
      "sha": "5a60095ae1b864fa6a69abc4d89bb44e3a582389",
      "filename": "app/src/main/java/org/schabi/newpipe/player/BasePlayer.java",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/52e89c1d1cea4226ec25c0708ecd0dea75794108/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FBasePlayer.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/52e89c1d1cea4226ec25c0708ecd0dea75794108/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FBasePlayer.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FBasePlayer.java?ref=52e89c1d1cea4226ec25c0708ecd0dea75794108",
      "patch": "@@ -1242,7 +1242,15 @@ public void seekTo(final long positionMillis) {\n             Log.d(TAG, \"seekBy() called with: position = [\" + positionMillis + \"]\");\n         }\n         if (simpleExoPlayer != null) {\n-            simpleExoPlayer.seekTo(positionMillis);\n+            // prevent invalid positions when fast-forwarding/-rewinding\n+            long normalizedPositionMillis = positionMillis;\n+            if (normalizedPositionMillis < 0) {\n+                normalizedPositionMillis = 0;\n+            } else if (normalizedPositionMillis > simpleExoPlayer.getDuration()) {\n+                normalizedPositionMillis = simpleExoPlayer.getDuration();\n+            }\n+\n+            simpleExoPlayer.seekTo(normalizedPositionMillis);\n         }\n     }\n ",
      "parent_sha": "1605e50cef85e54a7ff6faee6519ba13c45c0b74"
    }
  },
  {
    "oid": "5064ec3ac45d26957c4f1110a3473cdb181c9ed2",
    "message": "Fix spelling",
    "date": "2016-12-27T12:16:51Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/5064ec3ac45d26957c4f1110a3473cdb181c9ed2",
    "details": {
      "sha": "0f4eb7502035ba530f36fdff1c33d65647331a81",
      "filename": "app/src/main/java/org/schabi/newpipe/extractor/stream_info/StreamExtractor.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/5064ec3ac45d26957c4f1110a3473cdb181c9ed2/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fextractor%2Fstream_info%2FStreamExtractor.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/5064ec3ac45d26957c4f1110a3473cdb181c9ed2/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fextractor%2Fstream_info%2FStreamExtractor.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fextractor%2Fstream_info%2FStreamExtractor.java?ref=5064ec3ac45d26957c4f1110a3473cdb181c9ed2",
      "patch": "@@ -37,14 +37,14 @@ public abstract class StreamExtractor {\n     private UrlIdHandler urlIdHandler;\n     private StreamPreviewInfoCollector previewInfoCollector;\n \n-    public class ExctractorInitException extends ExtractionException {\n-        public ExctractorInitException(String message) {\n+    public class ExtractorInitException extends ExtractionException {\n+        public ExtractorInitException(String message) {\n             super(message);\n         }\n-        public ExctractorInitException(Throwable cause) {\n+        public ExtractorInitException(Throwable cause) {\n             super(cause);\n         }\n-        public ExctractorInitException(String message, Throwable cause) {\n+        public ExtractorInitException(String message, Throwable cause) {\n             super(message, cause);\n         }\n     }",
      "parent_sha": "892888796d4cf3fcdf4f000233d8c3241a120473"
    }
  },
  {
    "oid": "4cd1f201f536e52fbf183f281ec2267ebdc72e40",
    "message": "Refactor streams to initialize with values",
    "date": "2021-05-24T16:20:19Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/4cd1f201f536e52fbf183f281ec2267ebdc72e40",
    "details": {
      "sha": "857cb5e720fdcfee786e05ff4061c26e38398494",
      "filename": "app/src/main/java/org/schabi/newpipe/player/playqueue/PlayQueue.java",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/4cd1f201f536e52fbf183f281ec2267ebdc72e40/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2Fplayqueue%2FPlayQueue.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/4cd1f201f536e52fbf183f281ec2267ebdc72e40/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2Fplayqueue%2FPlayQueue.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2Fplayqueue%2FPlayQueue.java?ref=4cd1f201f536e52fbf183f281ec2267ebdc72e40",
      "patch": "@@ -54,8 +54,7 @@ public abstract class PlayQueue implements Serializable {\n     private transient boolean disposed;\n \n     PlayQueue(final int index, final List<PlayQueueItem> startWith) {\n-        streams = new ArrayList<>();\n-        streams.addAll(startWith);\n+        streams = new ArrayList<>(startWith);\n         history = new ArrayList<>();\n         if (streams.size() > index) {\n             history.add(streams.get(index));",
      "parent_sha": "013c59f904595899a404dae672a16245174d3eda"
    }
  },
  {
    "oid": "fd34b1a29108e9d24ed62045232f12ec7271926e",
    "message": "Fixes Improved",
    "date": "2019-10-15T13:18:06Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/fd34b1a29108e9d24ed62045232f12ec7271926e",
    "details": {
      "sha": "d51267220b41d0d66232fdd093f9f7587fdeb08a",
      "filename": "app/src/main/java/org/schabi/newpipe/database/playlist/model/PlaylistRemoteEntity.java",
      "status": "modified",
      "additions": 9,
      "deletions": 12,
      "changes": 21,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/fd34b1a29108e9d24ed62045232f12ec7271926e/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fdatabase%2Fplaylist%2Fmodel%2FPlaylistRemoteEntity.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/fd34b1a29108e9d24ed62045232f12ec7271926e/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fdatabase%2Fplaylist%2Fmodel%2FPlaylistRemoteEntity.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fdatabase%2Fplaylist%2Fmodel%2FPlaylistRemoteEntity.java?ref=fd34b1a29108e9d24ed62045232f12ec7271926e",
      "patch": "@@ -16,8 +16,6 @@\n import static org.schabi.newpipe.database.playlist.model.PlaylistRemoteEntity.REMOTE_PLAYLIST_TABLE;\n import static org.schabi.newpipe.database.playlist.model.PlaylistRemoteEntity.REMOTE_PLAYLIST_URL;\n \n-import android.text.TextUtils;\n-\n @Entity(tableName = REMOTE_PLAYLIST_TABLE,\n         indices = {\n                 @Index(value = {REMOTE_PLAYLIST_NAME}),\n@@ -75,19 +73,18 @@ public PlaylistRemoteEntity(final PlaylistInfo info) {\n     @Ignore\n     public boolean isIdenticalTo(final PlaylistInfo info) {\n         /*\n-        // Returns boolean comparing the online playlist and the local copy.\n-        // (False if info changed such as playlist name or track count)\n-        // [Note that we don't check if the playlist creator changed:\n-        //    getUploader().equals(info.getUploaderName())\n-        //  because this would crash the app on playlists that are auto-generated with no creator,\n-        //  and the creator can not change to my knowledge.\n-        //  if you need this functionality back please use\n-        //    getUploader() == info.getUploaderName()\n-        //  instead as it will work with blank names (Null value if I remember correctly).\n+         * Returns boolean comparing the online playlist and the local copy.\n+         * (False if info changed such as playlist name or track count)\n+         * [Note that\n+         *    getUploader().equals(info.getUploaderName())\n+         *  crashes  the app on playlists that are auto-generated with no creator,\n+         *  please use\n+         *    getUploader() == info.getUploaderName()\n+         *  instead as it will work with blank names (Null value if I remember correctly).\n         */\n         return getServiceId() == info.getServiceId() && getName().equals(info.getName()) &&\n                 getStreamCount() == info.getStreamCount() && getUrl().equals(info.getUrl()) &&\n-                getThumbnailUrl().equals(info.getThumbnailUrl());\n+                getThumbnailUrl().equals(info.getThumbnailUrl()) && getUploader() == info.getUploaderName();\n     }\n \n     public long getUid() {",
      "parent_sha": "bfc987f81b482ecab1669c3c35f3bd5b5107f33f"
    }
  },
  {
    "oid": "8ed87e7fbb2a9a24fa8b1d6677049720b9fddbdd",
    "message": "Improved ``ListHelper#getSortedStreamVideosList``",
    "date": "2022-02-20T18:38:40Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/8ed87e7fbb2a9a24fa8b1d6677049720b9fddbdd",
    "details": {
      "sha": "507bdf6d8f53141b2c2b630b325defc9404f6975",
      "filename": "app/src/main/java/org/schabi/newpipe/util/ListHelper.java",
      "status": "modified",
      "additions": 35,
      "deletions": 55,
      "changes": 90,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/8ed87e7fbb2a9a24fa8b1d6677049720b9fddbdd/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Futil%2FListHelper.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/8ed87e7fbb2a9a24fa8b1d6677049720b9fddbdd/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Futil%2FListHelper.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Futil%2FListHelper.java?ref=8ed87e7fbb2a9a24fa8b1d6677049720b9fddbdd",
      "patch": "@@ -20,7 +20,11 @@\n import java.util.Collections;\n import java.util.Comparator;\n import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.List;\n+import java.util.Objects;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n \n public final class ListHelper {\n     // Video format in order of quality. 0=lowest quality, n=highest quality\n@@ -34,8 +38,9 @@ public final class ListHelper {\n     private static final List<MediaFormat> AUDIO_FORMAT_EFFICIENCY_RANKING =\n             Arrays.asList(MediaFormat.WEBMA, MediaFormat.M4A, MediaFormat.MP3);\n \n-    private static final List<String> HIGH_RESOLUTION_LIST\n-            = Arrays.asList(\"1440p\", \"2160p\", \"1440p60\", \"2160p60\");\n+    private static final Set<String> HIGH_RESOLUTION_LIST\n+            // Uses a HashSet for better performance\n+            = new HashSet<>(Arrays.asList(\"1440p\", \"2160p\", \"1440p60\", \"2160p60\"));\n \n     private ListHelper() { }\n \n@@ -213,66 +218,39 @@ static List<VideoStream> getSortedStreamVideosList(\n             @Nullable final List<VideoStream> videoStreams,\n             @Nullable final List<VideoStream> videoOnlyStreams,\n             final boolean ascendingOrder,\n-            final boolean preferVideoOnlyStreams) {\n-        final ArrayList<VideoStream> retList = new ArrayList<>();\n-        final HashMap<String, VideoStream> hashMap = new HashMap<>();\n-\n-        if (preferVideoOnlyStreams) {\n-            if (videoStreams != null) {\n-                for (final VideoStream stream : videoStreams) {\n-                    if (!showHigherResolutions && HIGH_RESOLUTION_LIST.contains(\n-                            stream.getResolution())) {\n-                        continue;\n-                    }\n-                    retList.add(stream);\n-                }\n-            }\n-            if (videoOnlyStreams != null) {\n-                for (final VideoStream stream : videoOnlyStreams) {\n-                    if (!showHigherResolutions && HIGH_RESOLUTION_LIST.contains(\n-                            stream.getResolution())) {\n-                        continue;\n-                    }\n-                    retList.add(stream);\n-                }\n-            }\n-        } else {\n-            if (videoOnlyStreams != null) {\n-                for (final VideoStream stream : videoOnlyStreams) {\n-                    if (!showHigherResolutions && HIGH_RESOLUTION_LIST.contains(\n-                            stream.getResolution())) {\n-                        continue;\n-                    }\n-                    retList.add(stream);\n-                }\n-            }\n-            if (videoStreams != null) {\n-                for (final VideoStream stream : videoStreams) {\n-                    if (!showHigherResolutions && HIGH_RESOLUTION_LIST.contains(\n-                            stream.getResolution())) {\n-                        continue;\n-                    }\n-                    retList.add(stream);\n-                }\n-            }\n-        }\n+            final boolean preferVideoOnlyStreams\n+    ) {\n+        // Determine order of streams\n+        // The last added list is preferred\n+        final List<List<VideoStream>> videoStreamsOrdered =\n+                preferVideoOnlyStreams\n+                        ? Arrays.asList(videoStreams, videoOnlyStreams)\n+                        : Arrays.asList(videoOnlyStreams, videoStreams);\n+\n+        final List<VideoStream> allInitialStreams = videoStreamsOrdered.stream()\n+                // Ignore lists that are null\n+                .filter(Objects::nonNull)\n+                .flatMap(List::stream)\n+                // Filter out higher resolutions (or not if high resolutions should always be shown)\n+                .filter(stream -> showHigherResolutions\n+                        || !HIGH_RESOLUTION_LIST.contains(stream.getResolution()))\n+                .collect(Collectors.toList());\n \n+        final HashMap<String, VideoStream> hashMap = new HashMap<>();\n         // Add all to the hashmap\n-        for (final VideoStream videoStream : retList) {\n+        for (final VideoStream videoStream : allInitialStreams) {\n             hashMap.put(videoStream.getResolution(), videoStream);\n         }\n \n         // Override the values when the key == resolution, with the defaultFormat\n-        for (final VideoStream videoStream : retList) {\n+        for (final VideoStream videoStream : allInitialStreams) {\n             if (videoStream.getFormat() == defaultFormat) {\n                 hashMap.put(videoStream.getResolution(), videoStream);\n             }\n         }\n \n-        retList.clear();\n-        retList.addAll(hashMap.values());\n-        sortStreamList(retList, ascendingOrder);\n-        return retList;\n+        // Return the sorted list\n+        return sortStreamList(new ArrayList<>(hashMap.values()), ascendingOrder);\n     }\n \n     /**\n@@ -288,16 +266,18 @@ static List<VideoStream> getSortedStreamVideosList(\n      *      1080p    ->  1080\n      *      1080p60  ->  1081\n      * <br>\n-     *  ascendingOrder  ? 360 < 720 < 721 < 1080 < 1081\n-     *  !ascendingOrder ? 1081 < 1080 < 721 < 720 < 360</pre></blockquote>\n+     * ascendingOrder  ? 360 < 720 < 721 < 1080 < 1081\n+     * !ascendingOrder ? 1081 < 1080 < 721 < 720 < 360</pre></blockquote>\n      *\n      * @param videoStreams   list that the sorting will be applied\n      * @param ascendingOrder true -> smallest to greatest | false -> greatest to smallest\n+     * @return The sorted list (same reference as parameter videoStreams)\n      */\n-    private static void sortStreamList(final List<VideoStream> videoStreams,\n-                                       final boolean ascendingOrder) {\n+    private static List<VideoStream> sortStreamList(final List<VideoStream> videoStreams,\n+                                                    final boolean ascendingOrder) {\n         final Comparator<VideoStream> comparator = ListHelper::compareVideoStreamResolution;\n         Collections.sort(videoStreams, ascendingOrder ? comparator : comparator.reversed());\n+        return videoStreams;\n     }\n \n     /**",
      "parent_sha": "cc96ac173c5b9755bd0c7ffa6d798b8ee1604ab6"
    }
  },
  {
    "oid": "f29fa939ab6ab96ef8e25555ef8c34cae6af3318",
    "message": "Removing by long pressing no longer removes a random tab, but the pressed one.",
    "date": "2018-08-24T10:23:26Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/f29fa939ab6ab96ef8e25555ef8c34cae6af3318",
    "details": {
      "sha": "e4a80ab0fe8eda4c14642ac36226bb401ff56384",
      "filename": "app/src/main/java/org/schabi/newpipe/settings/ContentSettingsMain.java",
      "status": "modified",
      "additions": 16,
      "deletions": 5,
      "changes": 21,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/f29fa939ab6ab96ef8e25555ef8c34cae6af3318/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fsettings%2FContentSettingsMain.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/f29fa939ab6ab96ef8e25555ef8c34cae6af3318/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fsettings%2FContentSettingsMain.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fsettings%2FContentSettingsMain.java?ref=f29fa939ab6ab96ef8e25555ef8c34cae6af3318",
      "patch": "@@ -161,12 +161,12 @@ public void setOnItemSelectedListener(ItemTouchHelper mItemTouchHelper) {\n             itemTouchHelper = mItemTouchHelper;\n         }\n \n-        public boolean swapItems(int fromPosition, int toPosition) {\n+        public void swapItems(int fromPosition, int toPosition) {\n             String temp = usedTabs.get(fromPosition);\n             usedTabs.set(fromPosition, usedTabs.get(toPosition));\n             usedTabs.set(toPosition, temp);\n             notifyItemMoved(fromPosition, toPosition);\n-            return true;\n+            saveChanges();\n         }\n \n         @Override\n@@ -208,6 +208,8 @@ void bind(int position, ContentSettingsMain.UsedAdapter.TabViewHolder holder) {\n                 handle.setImageResource(ThemeHelper.getIconByAttr(R.attr.drag_handle, getContext()));\n                 handle.setOnTouchListener(getOnTouchListener(holder));\n \n+                view.setOnLongClickListener(getOnLongClickListener(holder));\n+\n                 if(usedTabs.get(position).startsWith(\"6\\t\")) {\n                     String channelInfo[] = usedTabs.get(position).split(\"\\t\");\n                     String channelName = \"\";\n@@ -228,6 +230,16 @@ private View.OnTouchListener getOnTouchListener(final RecyclerView.ViewHolder it\n                     return false;\n                 };\n             }\n+\n+            private View.OnLongClickListener getOnLongClickListener(TabViewHolder holder) {\n+                return (view) -> {\n+                    int position = holder.getAdapterPosition();\n+                    usedTabs.remove(position);\n+                    notifyItemRemoved(position);\n+                    saveChanges();\n+                    return false;\n+                };\n+            }\n         }\n     }\n \n@@ -255,9 +267,8 @@ public boolean onMove(RecyclerView recyclerView, RecyclerView.ViewHolder source,\n \n                 final int sourceIndex = source.getAdapterPosition();\n                 final int targetIndex = target.getAdapterPosition();\n-                final boolean isSwapped = usedAdapter.swapItems(sourceIndex, targetIndex);\n-                if (isSwapped) saveChanges();\n-                return isSwapped;\n+                usedAdapter.swapItems(sourceIndex, targetIndex);\n+                return true;\n             }\n \n             @Override",
      "parent_sha": "614bdb33b4f78651f51389920a4a25d346161021"
    }
  },
  {
    "oid": "13a065f2dcc17914bcf4bc822275909d326db1e9",
    "message": "Fix crash when opening video in local playlist tab",
    "date": "2020-08-03T12:47:10Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/13a065f2dcc17914bcf4bc822275909d326db1e9",
    "details": {
      "sha": "b223087deba3f9a0cf98f3d7122f0ffc07f2d8d4",
      "filename": "app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/13a065f2dcc17914bcf4bc822275909d326db1e9/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Flocal%2Fplaylist%2FLocalPlaylistFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/13a065f2dcc17914bcf4bc822275909d326db1e9/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Flocal%2Fplaylist%2FLocalPlaylistFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Flocal%2Fplaylist%2FLocalPlaylistFragment.java?ref=13a065f2dcc17914bcf4bc822275909d326db1e9",
      "patch": "@@ -177,7 +177,7 @@ protected void initListeners() {\n             public void selected(final LocalItem selectedItem) {\n                 if (selectedItem instanceof PlaylistStreamEntry) {\n                     final PlaylistStreamEntry item = (PlaylistStreamEntry) selectedItem;\n-                    NavigationHelper.openVideoDetailFragment(getFragmentManager(),\n+                    NavigationHelper.openVideoDetailFragment(getFM(),\n                             item.getStreamEntity().getServiceId(), item.getStreamEntity().getUrl(),\n                             item.getStreamEntity().getTitle());\n                 }",
      "parent_sha": "d8b5549fd98e43f18b993c5f36f2385cf9a80620"
    }
  },
  {
    "oid": "8644a4542af46bd6fef711f99c595624d748c45e",
    "message": "skip ads and channels from test.",
    "date": "2016-07-04T09:43:18Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/8644a4542af46bd6fef711f99c595624d748c45e",
    "details": {
      "sha": "ed81b92bf87c30cd4082bfb2c5e3333bd2c14b16",
      "filename": "app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeSearchEngineTest.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/8644a4542af46bd6fef711f99c595624d748c45e/app%2Fsrc%2FandroidTest%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fextractor%2Fyoutube%2FYoutubeSearchEngineTest.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/8644a4542af46bd6fef711f99c595624d748c45e/app%2Fsrc%2FandroidTest%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fextractor%2Fyoutube%2FYoutubeSearchEngineTest.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2FandroidTest%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fextractor%2Fyoutube%2FYoutubeSearchEngineTest.java?ref=8644a4542af46bd6fef711f99c595624d748c45e",
      "patch": "@@ -43,7 +43,7 @@ public void setUp() throws Exception{\n         SearchEngine engine = ServiceList.getService(\"Youtube\")\n                 .getSearchEngineInstance(new Downloader());\n \n-        result = engine.search(\"cats\",\n+        result = engine.search(\"boring panda\",\n                 0, \"de\", new Downloader()).getSearchResult();\n         suggestionReply = engine.suggestionList(\"hello\",\"de\",new Downloader());\n     }",
      "parent_sha": "0b6bae6ce3f604563b218f6647e07fe15dcef570"
    }
  },
  {
    "oid": "3c7b026d7d9afbb90ea41fd99bd093396d0e1e91",
    "message": "[#11930] Updating javadoc",
    "date": "2025-02-25T23:23:07Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/3c7b026d7d9afbb90ea41fd99bd093396d0e1e91",
    "details": {
      "sha": "de1aabb9cc9c3b115e91691e910b37f84424a2c7",
      "filename": "app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java",
      "status": "modified",
      "additions": 9,
      "deletions": 10,
      "changes": 19,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/3c7b026d7d9afbb90ea41fd99bd093396d0e1e91/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Flocal%2Fplaylist%2FLocalPlaylistFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/3c7b026d7d9afbb90ea41fd99bd093396d0e1e91/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Flocal%2Fplaylist%2FLocalPlaylistFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Flocal%2Fplaylist%2FLocalPlaylistFragment.java?ref=3c7b026d7d9afbb90ea41fd99bd093396d0e1e91",
      "patch": "@@ -388,16 +388,15 @@ public boolean onOptionsItemSelected(final MenuItem item) {\n         return true;\n     }\n \n-    /**\n-     * FIXME update this\n-     *\n-     * Shares the playlist as a list of stream URLs if {@code shareMode} is\n-     * set to {@code false}. Shares the playlist name along with a list of video titles and URLs\n-     * if {@code shareMode} is set to {@code true}.\n-     *\n-     * @param shareMode Whether the playlist details should be included in the\n-     *                  shared content.\n-     */\n+    ///\n+    /// Shares the playlist in one of 3 ways, depending on the value of `shareMode`:\n+    ///\n+    /// - `JUST_URLS`: shares the URLs only.\n+    /// - `WITH_TITLES`: each entry in the list is accompanied by its title.\n+    /// - `YOUTUBE_TEMP_PLAYLIST`: shares as a YouTube temporary playlist.\n+    ///\n+    ///  @param shareMode The way the playlist should be shared.\n+    ///\n     private void sharePlaylist(final PlayListShareMode shareMode) {\n         final Context context = requireContext();\n ",
      "parent_sha": "998d84de6c0f1ea707f9efda1ba1ac3a8bab4229"
    }
  },
  {
    "oid": "5f26501ddfc42c22b8859dc94eaeb449cf9bde72",
    "message": "fix triangle play button when returning to app",
    "date": "2018-01-20T12:39:06Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/5f26501ddfc42c22b8859dc94eaeb449cf9bde72",
    "details": {
      "sha": "da8a733d88b041bcb055246a7348016ba8db31e8",
      "filename": "app/src/main/java/org/schabi/newpipe/player/MainVideoPlayer.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/5f26501ddfc42c22b8859dc94eaeb449cf9bde72/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FMainVideoPlayer.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/5f26501ddfc42c22b8859dc94eaeb449cf9bde72/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FMainVideoPlayer.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FMainVideoPlayer.java?ref=5f26501ddfc42c22b8859dc94eaeb449cf9bde72",
      "patch": "@@ -379,7 +379,7 @@ public void sync(@NonNull final PlayQueueItem item, @Nullable final StreamInfo i\n             titleTextView.setText(getVideoTitle());\n             channelTextView.setText(getUploaderName());\n \n-            playPauseButton.setImageResource(R.drawable.ic_pause_white);\n+            //playPauseButton.setImageResource(R.drawable.ic_pause_white);\n         }\n \n         @Override",
      "parent_sha": "b33a72f864d8a6b1b9874cfc4fdfc5915dee5d69"
    }
  },
  {
    "oid": "ea1b910d7ea7359cd7c584477a1a8ec76ddee0de",
    "message": "Simplify code",
    "date": "2021-05-26T16:01:58Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/ea1b910d7ea7359cd7c584477a1a8ec76ddee0de",
    "details": {
      "sha": "70fce1cb75b5fb57c6798e40f79ba9d8bd345297",
      "filename": "app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java",
      "status": "modified",
      "additions": 3,
      "deletions": 6,
      "changes": 9,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/ea1b910d7ea7359cd7c584477a1a8ec76ddee0de/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2Fsearch%2FSearchFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/ea1b910d7ea7359cd7c584477a1a8ec76ddee0de/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2Fsearch%2FSearchFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2Fsearch%2FSearchFragment.java?ref=ea1b910d7ea7359cd7c584477a1a8ec76ddee0de",
      "patch": "@@ -590,13 +590,10 @@ public void onTextChanged(final CharSequence s, final int start,\n             @Override\n             public void afterTextChanged(final Editable s) {\n                 // Remove rich text formatting\n-                final CharacterStyle[] toBeRemovedSpans = s.getSpans(\n-                        0, s.length(), CharacterStyle.class\n-                );\n-                for (final CharacterStyle toBeRemovedSpan : toBeRemovedSpans) {\n-                    s.removeSpan(toBeRemovedSpan);\n+                for (final CharacterStyle span : s.getSpans(0, s.length(), CharacterStyle.class)) {\n+                    s.removeSpan(span);\n                 }\n-                \n+\n                 final String newText = searchEditText.getText().toString();\n                 suggestionPublisher.onNext(newText);\n             }",
      "parent_sha": "8f4c6fb6ac414a703a80ff64d4f6c9b4ce9aed76"
    }
  },
  {
    "oid": "0d3e0c201e78e1bfddc84be94c2fe3eeb6a5ae93",
    "message": "-Fixed MediaSourceManager from inserting already inserted entry.",
    "date": "2017-10-31T03:58:45Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/0d3e0c201e78e1bfddc84be94c2fe3eeb6a5ae93",
    "details": {
      "sha": "ff139e9d7ef100dc949783fba906a9886d32497d",
      "filename": "app/src/main/java/org/schabi/newpipe/player/playback/MediaSourceManager.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/0d3e0c201e78e1bfddc84be94c2fe3eeb6a5ae93/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2Fplayback%2FMediaSourceManager.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/0d3e0c201e78e1bfddc84be94c2fe3eeb6a5ae93/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2Fplayback%2FMediaSourceManager.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2Fplayback%2FMediaSourceManager.java?ref=0d3e0c201e78e1bfddc84be94c2fe3eeb6a5ae93",
      "patch": "@@ -273,7 +273,7 @@ private void populateSources() {\n      * If the play queue index already exists, then the insert is ignored.\n      * */\n     private void insert(final int queueIndex, final DeferredMediaSource source) {\n-        if (queueIndex < 0) return;\n+        if (queueIndex < 0 || queueIndex < sources.getSize()) return;\n \n         sources.addMediaSource(queueIndex, source);\n     }",
      "parent_sha": "cc4e4a4f9146ac76f487ead4bf0d8af5f11e7c32"
    }
  },
  {
    "oid": "daa4fd510320f2ee8a898a38b3851d6408e50a93",
    "message": "Fix ReCaptchaActivity crash and save cookies correctly",
    "date": "2020-02-01T17:24:16Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/daa4fd510320f2ee8a898a38b3851d6408e50a93",
    "details": {
      "sha": "533379dbb601086ea2b31c8f96095cb76a9c5cfe",
      "filename": "app/src/main/java/org/schabi/newpipe/ReCaptchaActivity.java",
      "status": "modified",
      "additions": 85,
      "deletions": 68,
      "changes": 153,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/daa4fd510320f2ee8a898a38b3851d6408e50a93/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FReCaptchaActivity.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/daa4fd510320f2ee8a898a38b3851d6408e50a93/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FReCaptchaActivity.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FReCaptchaActivity.java?ref=daa4fd510320f2ee8a898a38b3851d6408e50a93",
      "patch": "@@ -1,6 +1,5 @@\n package org.schabi.newpipe;\n \n-import android.app.Activity;\n import android.content.Intent;\n import android.graphics.Bitmap;\n import android.os.Build;\n@@ -9,12 +8,18 @@\n import androidx.appcompat.app.ActionBar;\n import androidx.appcompat.app.AppCompatActivity;\n import androidx.appcompat.widget.Toolbar;\n+\n+import android.util.Log;\n+import android.view.Menu;\n import android.view.MenuItem;\n import android.webkit.CookieManager;\n import android.webkit.WebSettings;\n import android.webkit.WebView;\n import android.webkit.WebViewClient;\n \n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+\n /*\n  * Created by beneth <bmauduit@beneth.fr> on 06.12.16.\n  *\n@@ -37,18 +42,17 @@\n public class ReCaptchaActivity extends AppCompatActivity {\n     public static final int RECAPTCHA_REQUEST = 10;\n     public static final String RECAPTCHA_URL_EXTRA = \"recaptcha_url_extra\";\n-\n     public static final String TAG = ReCaptchaActivity.class.toString();\n     public static final String YT_URL = \"https://www.youtube.com\";\n \n-    private String url;\n+    private String foundCookies = \"\";\n \n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         setContentView(R.layout.activity_recaptcha);\n \n-        url = getIntent().getStringExtra(RECAPTCHA_URL_EXTRA);\n+        String url = getIntent().getStringExtra(RECAPTCHA_URL_EXTRA);\n         if (url == null || url.isEmpty()) {\n             url = YT_URL;\n         }\n@@ -60,26 +64,24 @@ protected void onCreate(Bundle savedInstanceState) {\n         Toolbar toolbar = findViewById(R.id.toolbar);\n         setSupportActionBar(toolbar);\n \n-        ActionBar actionBar = getSupportActionBar();\n-        if (actionBar != null) {\n-            actionBar.setDisplayHomeAsUpEnabled(true);\n-            actionBar.setTitle(R.string.reCaptcha_title);\n-            actionBar.setDisplayShowTitleEnabled(true);\n-        }\n-\n         WebView myWebView = findViewById(R.id.reCaptchaWebView);\n \n         // Enable Javascript\n         WebSettings webSettings = myWebView.getSettings();\n         webSettings.setJavaScriptEnabled(true);\n \n-        ReCaptchaWebViewClient webClient = new ReCaptchaWebViewClient(this);\n-        myWebView.setWebViewClient(webClient);\n+        myWebView.setWebViewClient(new WebViewClient() {\n+            @Override\n+            public void onPageFinished(WebView view, String url) {\n+                super.onPageFinished(view, url);\n+                handleCookies(CookieManager.getInstance().getCookie(url));\n+            }\n+        });\n \n         // Cleaning cache, history and cookies from webView\n         myWebView.clearCache(true);\n         myWebView.clearHistory();\n-        android.webkit.CookieManager cookieManager = CookieManager.getInstance();\n+        android.webkit.CookieManager cookieManager = CookieManager .getInstance();\n         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n             cookieManager.removeAllCookies(aBoolean -> {});\n         } else {\n@@ -89,74 +91,89 @@ protected void onCreate(Bundle savedInstanceState) {\n         myWebView.loadUrl(url);\n     }\n \n-    private class ReCaptchaWebViewClient extends WebViewClient {\n-        private final Activity context;\n-        private String mCookies;\n+    @Override\n+    public boolean onCreateOptionsMenu(Menu menu) {\n+        boolean ret = super.onCreateOptionsMenu(menu);\n \n-        ReCaptchaWebViewClient(Activity ctx) {\n-            context = ctx;\n+        ActionBar actionBar = getSupportActionBar();\n+        if (actionBar != null) {\n+            actionBar.setDisplayHomeAsUpEnabled(true);\n+            actionBar.setHomeAsUpIndicator(getResources().getDrawable(R.drawable.ic_done_white_24dp));\n+            actionBar.setTitle(R.string.title_activity_recaptcha);\n+            actionBar.setSubtitle(R.string.subtitle_activity_recaptcha);\n         }\n \n-        @Override\n-        public void onPageStarted(WebView view, String url, Bitmap favicon) {\n-            // TODO: Start Loader\n-            super.onPageStarted(view, url, favicon);\n+        return ret;\n+    }\n+\n+    @Override\n+    public void onBackPressed() {\n+        saveCookiesAndFinish();\n+    }\n+\n+    @Override\n+    public boolean onOptionsItemSelected(MenuItem item) {\n+        int id = item.getItemId();\n+        switch (id) {\n+            case android.R.id.home:\n+                saveCookiesAndFinish();\n+                return true;\n+            default:\n+                return false;\n         }\n+    }\n \n-        @Override\n-        public void onPageFinished(WebView view, String url) {\n-            String cookies = CookieManager.getInstance().getCookie(url);\n+    private void saveCookiesAndFinish() {\n+        if (!foundCookies.isEmpty()) {\n+            // Give cookies to Downloader class\n+            DownloaderImpl.getInstance().setCookies(foundCookies);\n+            setResult(RESULT_OK);\n+        }\n \n-            // TODO: Stop Loader\n+        Intent intent = new Intent(this, org.schabi.newpipe.MainActivity.class);\n+        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\n+        NavUtils.navigateUpTo(this, intent);\n+    }\n \n-            // find cookies : s_gl & goojf and Add cookies to Downloader\n-            if (find_access_cookies(cookies)) {\n-                // Give cookies to Downloader class\n-                DownloaderImpl.getInstance().setCookies(mCookies);\n \n-                // Closing activity and return to parent\n-                setResult(RESULT_OK);\n-                finish();\n-            }\n-        }\n \n-        private boolean find_access_cookies(String cookies) {\n-            boolean ret = false;\n-            String c_s_gl = \"\";\n-            String c_goojf = \"\";\n-\n-            String[] parts = cookies.split(\"; \");\n-            for (String part : parts) {\n-                if (part.trim().startsWith(\"s_gl\")) {\n-                    c_s_gl = part.trim();\n-                }\n-                if (part.trim().startsWith(\"goojf\")) {\n-                    c_goojf = part.trim();\n-                }\n+    private void handleCookies(@Nullable String cookies) {\n+        if (MainActivity.DEBUG) Log.d(TAG, \"handleCookies: cookies=\" + (cookies == null ? \"null\" : cookies));\n+        if (cookies == null) return;\n+\n+        addYoutubeCookies(cookies);\n+        // add other methods to extract cookies here\n+    }\n+\n+    private void addYoutubeCookies(@Nonnull String cookies) {\n+        String c_s_gl = \"\";\n+        String c_goojf = \"\";\n+\n+        String[] parts = cookies.split(\";\");\n+        for (String part : parts) {\n+            String trimmedPart = part.trim();\n+            if (trimmedPart.startsWith(\"s_gl\")) {\n+                c_s_gl = trimmedPart;\n             }\n-            if (c_s_gl.length() > 0 && c_goojf.length() > 0) {\n-                ret = true;\n-                //mCookies = c_s_gl + \"; \" + c_goojf;\n-                // Youtube seems to also need the other cookies:\n-                mCookies = cookies;\n+            if (trimmedPart.startsWith(\"goojf\")) {\n+                c_goojf = trimmedPart;\n             }\n-\n-            return ret;\n+        }\n+        if (c_s_gl.length() > 0 && c_goojf.length() > 0) {\n+            // addCookie(c_s_gl);\n+            // addCookie(c_goojf);\n+            // Youtube seems to also need the other cookies:\n+            addCookie(cookies);\n         }\n     }\n \n-    @Override\n-    public boolean onOptionsItemSelected(MenuItem item) {\n-        int id = item.getItemId();\n-        switch (id) {\n-            case android.R.id.home: {\n-                Intent intent = new Intent(this, org.schabi.newpipe.MainActivity.class);\n-                intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\n-                NavUtils.navigateUpTo(this, intent);\n-                return true;\n-            }\n-            default:\n-                return false;\n+    private void addCookie(String cookie) {\n+        if (foundCookies.isEmpty() || foundCookies.endsWith(\"; \")) {\n+            foundCookies += cookie;\n+        } else if (foundCookies.endsWith(\";\")) {\n+            foundCookies += \" \" + cookie;\n+        } else {\n+            foundCookies += \"; \" + cookie;\n         }\n     }\n }",
      "parent_sha": "a3d8848825d52226479f7d14d5ddbb7c0d3bf605"
    }
  },
  {
    "oid": "3e099fb2a349622d04c62dba55bc576f8f42199d",
    "message": "Fixed Period Transition",
    "date": "2021-11-14T20:19:36Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/3e099fb2a349622d04c62dba55bc576f8f42199d",
    "details": {
      "sha": "4cc0d4aa48cde1160fd3bbe51e45e7e9e8400550",
      "filename": "app/src/main/java/org/schabi/newpipe/player/Player.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/3e099fb2a349622d04c62dba55bc576f8f42199d/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FPlayer.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/3e099fb2a349622d04c62dba55bc576f8f42199d/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FPlayer.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FPlayer.java?ref=3e099fb2a349622d04c62dba55bc576f8f42199d",
      "patch": "@@ -2448,6 +2448,7 @@ public void onPositionDiscontinuity(\n         // Refresh the playback if there is a transition to the next video\n         final int newWindowIndex = simpleExoPlayer.getCurrentWindowIndex();\n         switch (discontinuityReason) {\n+            case DISCONTINUITY_REASON_AUTO_TRANSITION:\n             case DISCONTINUITY_REASON_REMOVE:\n                 // When player is in single repeat mode and a period transition occurs,\n                 // we need to register a view count here since no metadata has changed\n@@ -2470,7 +2471,6 @@ public void onPositionDiscontinuity(\n                 }\n                 break;\n             case DISCONTINUITY_REASON_SKIP:\n-            case DISCONTINUITY_REASON_AUTO_TRANSITION:\n                 break; // only makes Android Studio linter happy, as there are no ads\n         }\n ",
      "parent_sha": "9e44053e22db0a1e9fc291e35ea74181782cd76b"
    }
  },
  {
    "oid": "0d9910cbbec39cd605aba774f2714e93db33ce5b",
    "message": "Fix SubscriptionManagerTest tests\n\nThe breakage of these tests is related to the channel tabs changes.\n\nThe testRememberRecentStreams test method has been removed, as it doesn't seem\nto be relevant anymore to managing subscriptions.",
    "date": "2023-09-18T21:22:32Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/0d9910cbbec39cd605aba774f2714e93db33ce5b",
    "details": {
      "sha": "213b679f0096e8775cec6a7e48be253713df6a08",
      "filename": "app/src/androidTest/java/org/schabi/newpipe/local/subscription/SubscriptionManagerTest.java",
      "status": "modified",
      "additions": 2,
      "deletions": 39,
      "changes": 41,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/0d9910cbbec39cd605aba774f2714e93db33ce5b/app%2Fsrc%2FandroidTest%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Flocal%2Fsubscription%2FSubscriptionManagerTest.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/0d9910cbbec39cd605aba774f2714e93db33ce5b/app%2Fsrc%2FandroidTest%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Flocal%2Fsubscription%2FSubscriptionManagerTest.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2FandroidTest%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Flocal%2Fsubscription%2FSubscriptionManagerTest.java?ref=0d9910cbbec39cd605aba774f2714e93db33ce5b",
      "patch": "@@ -10,19 +10,13 @@\n import org.junit.Test;\n import org.schabi.newpipe.database.AppDatabase;\n import org.schabi.newpipe.database.feed.model.FeedGroupEntity;\n-import org.schabi.newpipe.database.stream.model.StreamEntity;\n import org.schabi.newpipe.database.subscription.SubscriptionEntity;\n import org.schabi.newpipe.extractor.channel.ChannelInfo;\n import org.schabi.newpipe.extractor.exceptions.ExtractionException;\n-import org.schabi.newpipe.extractor.localization.DateWrapper;\n-import org.schabi.newpipe.extractor.stream.StreamInfoItem;\n-import org.schabi.newpipe.extractor.stream.StreamType;\n import org.schabi.newpipe.testUtil.TestDatabase;\n import org.schabi.newpipe.testUtil.TrampolineSchedulerRule;\n \n import java.io.IOException;\n-import java.time.OffsetDateTime;\n-import java.util.Comparator;\n import java.util.List;\n \n public class SubscriptionManagerTest {\n@@ -58,7 +52,7 @@ public void testInsert() throws ExtractionException, IOException {\n         final ChannelInfo info = ChannelInfo.getInfo(\"https://www.youtube.com/c/3blue1brown\");\n         final SubscriptionEntity subscription = SubscriptionEntity.from(info);\n \n-        manager.insertSubscription(subscription, info);\n+        manager.insertSubscription(subscription);\n         final SubscriptionEntity readSubscription = getAssertOneSubscriptionEntity();\n \n         // the uid has changed, since the uid is chosen upon inserting, but the rest should match\n@@ -76,7 +70,7 @@ public void testUpdateNotificationMode() throws ExtractionException, IOException\n         final SubscriptionEntity subscription = SubscriptionEntity.from(info);\n         subscription.setNotificationMode(0);\n \n-        manager.insertSubscription(subscription, info);\n+        manager.insertSubscription(subscription);\n         manager.updateNotificationMode(subscription.getServiceId(), subscription.getUrl(), 1)\n                 .blockingAwait();\n         final SubscriptionEntity anotherSubscription = getAssertOneSubscriptionEntity();\n@@ -85,35 +79,4 @@ public void testUpdateNotificationMode() throws ExtractionException, IOException\n         assertEquals(subscription.getUrl(), anotherSubscription.getUrl());\n         assertEquals(1, anotherSubscription.getNotificationMode());\n     }\n-\n-    @Test\n-    public void testRememberRecentStreams() throws ExtractionException, IOException {\n-        final ChannelInfo info = ChannelInfo.getInfo(\"https://www.youtube.com/c/Polyphia\");\n-        final List<StreamInfoItem> relatedItems = List.of(\n-                new StreamInfoItem(0, \"a\", \"b\", StreamType.VIDEO_STREAM),\n-                new StreamInfoItem(1, \"c\", \"d\", StreamType.AUDIO_STREAM),\n-                new StreamInfoItem(2, \"e\", \"f\", StreamType.AUDIO_LIVE_STREAM),\n-                new StreamInfoItem(3, \"g\", \"h\", StreamType.LIVE_STREAM));\n-        relatedItems.forEach(item -> {\n-            // these two fields must be non-null for the insert to succeed\n-            item.setUploaderUrl(info.getUrl());\n-            item.setUploaderName(info.getName());\n-            // the upload date must not be too much in the past for the item to actually be inserted\n-            item.setUploadDate(new DateWrapper(OffsetDateTime.now()));\n-        });\n-        info.setRelatedItems(relatedItems);\n-        final SubscriptionEntity subscription = SubscriptionEntity.from(info);\n-\n-        manager.insertSubscription(subscription, info);\n-        final List<StreamEntity> streams = database.streamDAO().getAll().blockingFirst();\n-\n-        assertEquals(4, streams.size());\n-        streams.sort(Comparator.comparing(StreamEntity::getServiceId));\n-        for (int i = 0; i < 4; i++) {\n-            assertEquals(relatedItems.get(0).getServiceId(), streams.get(0).getServiceId());\n-            assertEquals(relatedItems.get(0).getUrl(), streams.get(0).getUrl());\n-            assertEquals(relatedItems.get(0).getName(), streams.get(0).getTitle());\n-            assertEquals(relatedItems.get(0).getStreamType(), streams.get(0).getStreamType());\n-        }\n-    }\n }",
      "parent_sha": "8fbc8ffc7c57555bb617c7c5d6b3b158bf31ffa3"
    }
  },
  {
    "oid": "4863084fa2565f674a0eedcff429abdabda60185",
    "message": "Improve code in VideoDetailFragment",
    "date": "2022-06-18T15:49:04Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/4863084fa2565f674a0eedcff429abdabda60185",
    "details": {
      "sha": "cbd8b05b4fc770037ccfc2cd0c1e16d127385c9d",
      "filename": "app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java",
      "status": "modified",
      "additions": 13,
      "deletions": 12,
      "changes": 25,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/4863084fa2565f674a0eedcff429abdabda60185/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Fdetail%2FVideoDetailFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/4863084fa2565f674a0eedcff429abdabda60185/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Fdetail%2FVideoDetailFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Fdetail%2FVideoDetailFragment.java?ref=4863084fa2565f674a0eedcff429abdabda60185",
      "patch": "@@ -1555,13 +1555,11 @@ public void handleResult(@NonNull final StreamInfo info) {\n         binding.detailSubChannelThumbnailView.setImageDrawable(buddyDrawable);\n         binding.detailUploaderThumbnailView.setImageDrawable(buddyDrawable);\n \n-        final StreamType streamType = info.getStreamType();\n-\n         if (info.getViewCount() >= 0) {\n-            if (streamType.equals(StreamType.AUDIO_LIVE_STREAM)) {\n+            if (info.getStreamType().equals(StreamType.AUDIO_LIVE_STREAM)) {\n                 binding.detailViewCountView.setText(Localization.listeningCount(activity,\n                         info.getViewCount()));\n-            } else if (streamType.equals(StreamType.LIVE_STREAM)) {\n+            } else if (info.getStreamType().equals(StreamType.LIVE_STREAM)) {\n                 binding.detailViewCountView.setText(Localization\n                         .localizeWatchingCount(activity, info.getViewCount()));\n             } else {\n@@ -1648,7 +1646,7 @@ public void handleResult(@NonNull final StreamInfo info) {\n         }\n \n         binding.detailControlsDownload.setVisibility(\n-                StreamTypeUtil.isLiveStream(streamType) ? View.GONE : View.VISIBLE);\n+                StreamTypeUtil.isLiveStream(info.getStreamType()) ? View.GONE : View.VISIBLE);\n         binding.detailControlsBackground.setVisibility(info.getAudioStreams().isEmpty()\n                 ? View.GONE : View.VISIBLE);\n \n@@ -2151,21 +2149,24 @@ private void showExternalPlaybackDialog() {\n             return;\n         }\n \n-        final List<VideoStream> videoStreams = getNonUrlAndNonTorrentStreams(\n-                currentInfo.getVideoStreams());\n-        final List<VideoStream> videoOnlyStreams = getNonUrlAndNonTorrentStreams(\n-                currentInfo.getVideoOnlyStreams());\n-\n         final AlertDialog.Builder builder = new AlertDialog.Builder(activity);\n         builder.setTitle(R.string.select_quality_external_players);\n         builder.setNeutralButton(R.string.open_in_browser, (dialog, i) ->\n                 ShareUtils.openUrlInBrowser(requireActivity(), url));\n+\n         final List<VideoStream> videoStreamsForExternalPlayers =\n-                ListHelper.getSortedStreamVideosList(activity, videoStreams, videoOnlyStreams,\n-                        false, false);\n+                ListHelper.getSortedStreamVideosList(\n+                        activity,\n+                        getNonUrlAndNonTorrentStreams(currentInfo.getVideoStreams()),\n+                        getNonUrlAndNonTorrentStreams(currentInfo.getVideoOnlyStreams()),\n+                        false,\n+                        false\n+                );\n+\n         if (videoStreamsForExternalPlayers.isEmpty()) {\n             builder.setMessage(R.string.no_video_streams_available_for_external_players);\n             builder.setPositiveButton(R.string.ok, null);\n+\n         } else {\n             final int selectedVideoStreamIndexForExternalPlayers =\n                     ListHelper.getDefaultResolutionIndex(activity, videoStreamsForExternalPlayers);",
      "parent_sha": "7ba79171c7c9e84fb0e9f4bc242d81ef321c36fa"
    }
  },
  {
    "oid": "cfad3fb5ded10334317501fde5b18cf7859c6746",
    "message": "Fix inconsistent style",
    "date": "2020-01-11T14:09:01Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/cfad3fb5ded10334317501fde5b18cf7859c6746",
    "details": {
      "sha": "eea3f2795b8e81c258c9a36fd1f913fb116752ed",
      "filename": "app/src/main/java/us/shandian/giga/ui/adapter/MissionAdapter.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/cfad3fb5ded10334317501fde5b18cf7859c6746/app%2Fsrc%2Fmain%2Fjava%2Fus%2Fshandian%2Fgiga%2Fui%2Fadapter%2FMissionAdapter.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/cfad3fb5ded10334317501fde5b18cf7859c6746/app%2Fsrc%2Fmain%2Fjava%2Fus%2Fshandian%2Fgiga%2Fui%2Fadapter%2FMissionAdapter.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Fus%2Fshandian%2Fgiga%2Fui%2Fadapter%2FMissionAdapter.java?ref=cfad3fb5ded10334317501fde5b18cf7859c6746",
      "patch": "@@ -559,7 +559,7 @@ private void showError(DownloadMission mission, UserAction action, @StringRes in\n \n     public void clearFinishedDownloads(boolean delete) {\n         if (delete && mIterator.hasFinishedMissions()) {\n-            for(int i=0; i<mIterator.getOldListSize(); i++) {\n+            for (int i = 0; i < mIterator.getOldListSize(); i++) {\n                 FinishedMission mission = mIterator.getItem(i).mission instanceof FinishedMission ? (FinishedMission) mIterator.getItem(i).mission : null;\n                 if (mission != null) {\n                     mDownloadManager.deleteMission(mission);",
      "parent_sha": "b18236a27e05076225f2b151560511d6279e36ff"
    }
  },
  {
    "oid": "cc34734131a5e4b8d51eb3246a68ee5fe52d37e3",
    "message": "Refactored ``initNotificationChannels``",
    "date": "2022-01-05T14:48:46Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/cc34734131a5e4b8d51eb3246a68ee5fe52d37e3",
    "details": {
      "sha": "26b50855ef416cec0f2e88faa469dcb4939ee605",
      "filename": "app/src/main/java/org/schabi/newpipe/App.java",
      "status": "modified",
      "additions": 13,
      "deletions": 14,
      "changes": 27,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/cc34734131a5e4b8d51eb3246a68ee5fe52d37e3/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FApp.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/cc34734131a5e4b8d51eb3246a68ee5fe52d37e3/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FApp.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FApp.java?ref=cc34734131a5e4b8d51eb3246a68ee5fe52d37e3",
      "patch": "@@ -32,7 +32,7 @@\n import java.io.IOException;\n import java.io.InterruptedIOException;\n import java.net.SocketException;\n-import java.util.Arrays;\n+import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n \n@@ -225,45 +225,44 @@ protected void initACRA() {\n     private void initNotificationChannels() {\n         // Keep the importance below DEFAULT to avoid making noise on every notification update for\n         // the main and update channels\n-        final NotificationChannelCompat mainChannel = new NotificationChannelCompat\n+        final List<NotificationChannelCompat> notificationChannelCompats = new ArrayList<>();\n+        notificationChannelCompats.add(new NotificationChannelCompat\n                 .Builder(getString(R.string.notification_channel_id),\n                         NotificationManagerCompat.IMPORTANCE_LOW)\n                 .setName(getString(R.string.notification_channel_name))\n                 .setDescription(getString(R.string.notification_channel_description))\n-                .build();\n+                .build());\n \n-        final NotificationChannelCompat appUpdateChannel = new NotificationChannelCompat\n+        notificationChannelCompats.add(new NotificationChannelCompat\n                 .Builder(getString(R.string.app_update_notification_channel_id),\n                         NotificationManagerCompat.IMPORTANCE_LOW)\n                 .setName(getString(R.string.app_update_notification_channel_name))\n                 .setDescription(getString(R.string.app_update_notification_channel_description))\n-                .build();\n+                .build());\n \n-        final NotificationChannelCompat hashChannel = new NotificationChannelCompat\n+        notificationChannelCompats.add(new NotificationChannelCompat\n                 .Builder(getString(R.string.hash_channel_id),\n                         NotificationManagerCompat.IMPORTANCE_HIGH)\n                 .setName(getString(R.string.hash_channel_name))\n                 .setDescription(getString(R.string.hash_channel_description))\n-                .build();\n+                .build());\n \n-        final NotificationChannelCompat errorReportChannel = new NotificationChannelCompat\n+        notificationChannelCompats.add(new NotificationChannelCompat\n                 .Builder(getString(R.string.error_report_channel_id),\n                         NotificationManagerCompat.IMPORTANCE_LOW)\n                 .setName(getString(R.string.error_report_channel_name))\n                 .setDescription(getString(R.string.error_report_channel_description))\n-                .build();\n+                .build());\n \n-\n-        final NotificationChannelCompat newStreamsChannel = new NotificationChannelCompat\n+        notificationChannelCompats.add(new NotificationChannelCompat\n                 .Builder(getString(R.string.streams_notification_channel_id),\n                     NotificationManagerCompat.IMPORTANCE_DEFAULT)\n                 .setName(getString(R.string.streams_notification_channel_name))\n                 .setDescription(getString(R.string.streams_notification_channel_description))\n-                .build();\n+                .build());\n \n         final NotificationManagerCompat notificationManager = NotificationManagerCompat.from(this);\n-        notificationManager.createNotificationChannelsCompat(Arrays.asList(mainChannel,\n-                appUpdateChannel, hashChannel, errorReportChannel, newStreamsChannel));\n+        notificationManager.createNotificationChannelsCompat(notificationChannelCompats);\n     }\n \n     protected boolean isDisposedRxExceptionsReported() {",
      "parent_sha": "6dcde96f85cc0173b81c6875282a04bfa5a60c1a"
    }
  },
  {
    "oid": "201e5ee09d96bf7f033f405b040e2f02146ad396",
    "message": "Fix NPE when connecting via BT",
    "date": "2021-06-25T07:14:15Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/201e5ee09d96bf7f033f405b040e2f02146ad396",
    "details": {
      "sha": "f5384a9d90b1f957de71bfd2f902ddc79817ab35",
      "filename": "app/src/main/java/org/schabi/newpipe/player/Player.java",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/201e5ee09d96bf7f033f405b040e2f02146ad396/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FPlayer.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/201e5ee09d96bf7f033f405b040e2f02146ad396/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FPlayer.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FPlayer.java?ref=201e5ee09d96bf7f033f405b040e2f02146ad396",
      "patch": "@@ -2160,7 +2160,10 @@ private void onPausedSeek() {\n \n     private void onCompleted() {\n         if (DEBUG) {\n-            Log.d(TAG, \"onCompleted() called\");\n+            Log.d(TAG, \"onCompleted() called\" + (playQueue == null ? \". playQueue is null\" : \"\"));\n+        }\n+        if (playQueue == null) {\n+            return;\n         }\n \n         animate(binding.playPauseButton, false, 0, AnimationType.SCALE_AND_ALPHA, 0,",
      "parent_sha": "c398308872f617829352ed283a464c0f105ad8ef"
    }
  },
  {
    "oid": "2acaefdb2adce73da19875ec30bb468731ba8904",
    "message": "Fixed scrolling not working when rotating device",
    "date": "2022-02-17T19:59:41Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/2acaefdb2adce73da19875ec30bb468731ba8904",
    "details": {
      "sha": "6ea0a8a0d5bf018cc38cad94e7414546d9f0d7cc",
      "filename": "app/src/main/java/org/schabi/newpipe/fragments/list/BaseListFragment.java",
      "status": "modified",
      "additions": 22,
      "deletions": 13,
      "changes": 35,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/2acaefdb2adce73da19875ec30bb468731ba8904/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2FBaseListFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/2acaefdb2adce73da19875ec30bb468731ba8904/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2FBaseListFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2FBaseListFragment.java?ref=2acaefdb2adce73da19875ec30bb468731ba8904",
      "patch": "@@ -310,10 +310,24 @@ public void selected(final CommentsInfoItem selectedItem) {\n                 onItemSelected(selectedItem);\n             }\n         });\n+\n+        // Ensure that there is always a scroll listener (e.g. when rotating the device)\n+        useNormalItemListScrollListener();\n+    }\n+\n+    /**\n+     * Removes all listeners and adds the normal scroll listener to the {@link #itemsList}.\n+     */\n+    protected void useNormalItemListScrollListener() {\n+        if (DEBUG) {\n+            Log.d(TAG, \"useNormalItemListScrollListener called\");\n+        }\n+        itemsList.clearOnScrollListeners();\n+        itemsList.addOnScrollListener(new DefaultItemListOnScrolledDownListener());\n     }\n \n     /**\n-     * Remove all listeners and add the initial scroll listener to the {@link #itemsList}.\n+     * Removes all listeners and adds the initial scroll listener to the {@link #itemsList}.\n      * <br/>\n      * Which tries to load more items when not enough are in the view (not scrollable)\n      * and more are available.\n@@ -329,9 +343,9 @@ public void selected(final CommentsInfoItem selectedItem) {\n      *     <li>no more items can be loaded</li>\n      * </ul>\n      */\n-    protected void setItemsListInitialScrollListener() {\n+    protected void useInitialItemListLoadScrollListener() {\n         if (DEBUG) {\n-            Log.d(TAG, \"setItemsListInitialScrollListener called\");\n+            Log.d(TAG, \"useInitialItemListLoadScrollListener called\");\n         }\n         itemsList.clearOnScrollListeners();\n         itemsList.addOnScrollListener(new DefaultItemListOnScrolledDownListener() {\n@@ -342,7 +356,7 @@ public void onScrolled(final RecyclerView recyclerView, final int dx, final int\n                 if (dy != 0) {\n                     log(\"Vertical scroll occurred\");\n \n-                    useNormalScrollListener();\n+                    useNormalItemListScrollListener();\n                     return;\n                 }\n                 if (isLoading.get()) {\n@@ -352,29 +366,24 @@ public void onScrolled(final RecyclerView recyclerView, final int dx, final int\n                 if (!hasMoreItems()) {\n                     log(\"No more items to load\");\n \n-                    useNormalScrollListener();\n+                    useNormalItemListScrollListener();\n                     return;\n                 }\n                 if (itemsList.canScrollVertically(1)\n                         || itemsList.canScrollVertically(-1)) {\n                     log(\"View is scrollable\");\n \n-                    useNormalScrollListener();\n+                    useNormalItemListScrollListener();\n                     return;\n                 }\n \n                 log(\"Loading more data\");\n                 loadMoreItems();\n             }\n \n-            private void useNormalScrollListener() {\n-                itemsList.removeOnScrollListener(this);\n-                itemsList.addOnScrollListener(new DefaultItemListOnScrolledDownListener());\n-            }\n-\n             private void log(final String msg) {\n                 if (DEBUG) {\n-                    Log.d(TAG, \"itemListInitScrollListener - \" + msg);\n+                    Log.d(TAG, \"initItemListLoadScrollListener - \" + msg);\n                 }\n             }\n         });\n@@ -476,7 +485,7 @@ public void onCreateOptionsMenu(@NonNull final Menu menu,\n \n     @Override\n     protected void startLoading(final boolean forceLoad) {\n-        setItemsListInitialScrollListener();\n+        useInitialItemListLoadScrollListener();\n         super.startLoading(forceLoad);\n     }\n ",
      "parent_sha": "9c2cdd251390fab9e4949befe306fd4c7b589a2b"
    }
  },
  {
    "oid": "5c46412faac23f27940cba860c8e8a1219375edd",
    "message": "Changed alert dialogue.",
    "date": "2023-09-21T14:01:07Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/5c46412faac23f27940cba860c8e8a1219375edd",
    "details": {
      "sha": "88addd73e05aa751d443286af538932855bc6b10",
      "filename": "app/src/main/java/org/schabi/newpipe/settings/DebugSettingsFragment.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/5c46412faac23f27940cba860c8e8a1219375edd/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fsettings%2FDebugSettingsFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/5c46412faac23f27940cba860c8e8a1219375edd/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fsettings%2FDebugSettingsFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fsettings%2FDebugSettingsFragment.java?ref=5c46412faac23f27940cba860c8e8a1219375edd",
      "patch": "@@ -98,7 +98,7 @@ public void onCreatePreferences(final Bundle savedInstanceState, final String ro\n             final AlertDialog.Builder builder = new AlertDialog.Builder(getContext());\n             builder.setMessage(\"Resetting all settings will discard \"\n                     + \"all of your preferred settings and restarts the app. \"\n-                    + \"Are you sure you want to do this?\");\n+                    + \"Are you sure you want to proceed?\");\n             builder.setCancelable(true);\n             builder.setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {\n                 @Override",
      "parent_sha": "076e9eee01ca3f55f56124ce407364182ff8278d"
    }
  },
  {
    "oid": "a1e8b9be4e16bfc1d27baf2af05a6e5e2391407b",
    "message": "Fix channel tabs in main page setting title themselves",
    "date": "2023-09-18T21:22:32Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/a1e8b9be4e16bfc1d27baf2af05a6e5e2391407b",
    "details": {
      "sha": "46faaf277abe8888973ed1e3d4bb0428b57452b5",
      "filename": "app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/a1e8b9be4e16bfc1d27baf2af05a6e5e2391407b/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2Fchannel%2FChannelFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/a1e8b9be4e16bfc1d27baf2af05a6e5e2391407b/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2Fchannel%2FChannelFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2Fchannel%2FChannelFragment.java?ref=a1e8b9be4e16bfc1d27baf2af05a6e5e2391407b",
      "patch": "@@ -457,8 +457,10 @@ private void updateTabs() {\n             for (final ListLinkHandler linkHandler : currentInfo.getTabs()) {\n                 final String tab = linkHandler.getContentFilters().get(0);\n                 if (ChannelTabHelper.showChannelTab(context, preferences, tab)) {\n-                    tabAdapter.addFragment(\n-                            ChannelTabFragment.getInstance(serviceId, linkHandler, name),\n+                    final ChannelTabFragment channelTabFragment =\n+                            ChannelTabFragment.getInstance(serviceId, linkHandler, name);\n+                    channelTabFragment.useAsFrontPage(useAsFrontPage);\n+                    tabAdapter.addFragment(channelTabFragment,\n                             context.getString(ChannelTabHelper.getTranslationKey(tab)));\n                 }\n             }",
      "parent_sha": "c076a0f77127fe6a875461dc879605405ada5ede"
    }
  },
  {
    "oid": "0392bf6a0278b679fdd4d0d493e6689702c71fb9",
    "message": "fix bug with upload date + better way to parse it",
    "date": "2015-11-19T21:49:52Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/0392bf6a0278b679fdd4d0d493e6689702c71fb9",
    "details": {
      "sha": "4be7d74f56634016dd0c4c7bcc53c9f4ee458d21",
      "filename": "app/src/main/java/org/schabi/newpipe/VideoItemDetailFragment.java",
      "status": "modified",
      "additions": 10,
      "deletions": 9,
      "changes": 19,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/0392bf6a0278b679fdd4d0d493e6689702c71fb9/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FVideoItemDetailFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/0392bf6a0278b679fdd4d0d493e6689702c71fb9/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FVideoItemDetailFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FVideoItemDetailFragment.java?ref=0392bf6a0278b679fdd4d0d493e6689702c71fb9",
      "patch": "@@ -32,6 +32,8 @@\n import java.net.URL;\n import java.text.DateFormat;\n import java.text.NumberFormat;\n+import java.text.ParseException;\n+import java.text.SimpleDateFormat;\n import java.util.ArrayList;\n import java.util.Calendar;\n import java.util.Date;\n@@ -240,15 +242,14 @@ public void updateInfo(VideoInfo info) {\n                     thumbsUpView.setText(nf.format(info.like_count));\n                     thumbsDownView.setText(nf.format(info.dislike_count));\n \n-                    //this is horribly convoluted\n-                    //TODO: find a better way to convert YYYY-MM-DD to a locale-specific date\n-                    //suggestions are welcome\n-                    int year  = Integer.parseInt(info.upload_date.substring(0, 4));\n-                    int month = Integer.parseInt(info.upload_date.substring(5, 7));\n-                    int date  = Integer.parseInt(info.upload_date.substring(8, 10));\n-                    Calendar cal = Calendar.getInstance();\n-                    cal.set(year, month, date);\n-                    Date datum = cal.getTime();\n+                    SimpleDateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd\");\n+                    Date datum = null;\n+                    try {\n+                        datum = formatter.parse(info.upload_date);\n+                    } catch (ParseException e) {\n+                        e.printStackTrace();\n+                    }\n+\n                     DateFormat df = DateFormat.getDateInstance(DateFormat.MEDIUM, locale);\n \n                     String localisedDate = df.format(datum);",
      "parent_sha": "2c11bd188998715aefa6f56bcc5c4c190f19ffaa"
    }
  },
  {
    "oid": "845767e2f8f62dc34452e54723a2dd3670c93ff7",
    "message": "StandardCharsets.UTF_8 instead of Charset.forName(\"utf-8\")",
    "date": "2020-01-18T03:43:38Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/845767e2f8f62dc34452e54723a2dd3670c93ff7",
    "details": {
      "sha": "696f24d05360805afeb5b80756e5814ab8c9faf2",
      "filename": "app/src/main/java/org/schabi/newpipe/streams/SrtFromTtmlWriter.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/845767e2f8f62dc34452e54723a2dd3670c93ff7/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fstreams%2FSrtFromTtmlWriter.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/845767e2f8f62dc34452e54723a2dd3670c93ff7/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fstreams%2FSrtFromTtmlWriter.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fstreams%2FSrtFromTtmlWriter.java?ref=845767e2f8f62dc34452e54723a2dd3670c93ff7",
      "patch": "@@ -22,7 +22,7 @@ public class SrtFromTtmlWriter {\n \n     private SharpStream out;\n     private boolean ignoreEmptyFrames;\n-    private final Charset charset = Charset.forName(\"utf-8\");\n+    private final Charset charset = StandardCharsets.UTF_8;\n \n     private int frameIndex = 0;\n ",
      "parent_sha": "42ec6f0810332904fbb22d1d3dd87a8ce442c655"
    }
  },
  {
    "oid": "28b34f379667c9efe75a70fee536b72688d69f64",
    "message": "Fix scroll issues in suggestion list\n\nBefore if the list before updating contained item 'test' at position 0 and after updating that value went to the bottom, the list would incorrectly scroll to the bottom to follow that item. Now the scrolling is done after the list is updated.",
    "date": "2022-09-14T12:39:32Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/28b34f379667c9efe75a70fee536b72688d69f64",
    "details": {
      "sha": "5175e0096858ee9e5ba203fd937277ded3538cec",
      "filename": "app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/28b34f379667c9efe75a70fee536b72688d69f64/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2Fsearch%2FSearchFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/28b34f379667c9efe75a70fee536b72688d69f64/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2Fsearch%2FSearchFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2Fsearch%2FSearchFragment.java?ref=28b34f379667c9efe75a70fee536b72688d69f64",
      "patch": "@@ -946,8 +946,8 @@ public void handleSuggestions(@NonNull final List<SuggestionItem> suggestions) {\n         if (DEBUG) {\n             Log.d(TAG, \"handleSuggestions() called with: suggestions = [\" + suggestions + \"]\");\n         }\n-        searchBinding.suggestionsList.smoothScrollToPosition(0);\n-        suggestionListAdapter.submitList(suggestions);\n+        suggestionListAdapter.submitList(suggestions,\n+                () -> searchBinding.suggestionsList.scrollToPosition(0));\n \n         if (suggestionsPanelVisible && isErrorPanelVisible()) {\n             hideLoading();",
      "parent_sha": "1f57c878598f41d69e704c79276973223c7c33ad"
    }
  },
  {
    "oid": "010c607e40cc08314cd623b716c9ca10d263762d",
    "message": "Prevent automatic replay after returning from background\n\nSee also https://github.com/TeamNewPipe/NewPipe/pull/7195#issuecomment-962624380",
    "date": "2021-11-15T18:47:08Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/010c607e40cc08314cd623b716c9ca10d263762d",
    "details": {
      "sha": "4310ccad7631b200def9a2e55d3ccc47d2d01805",
      "filename": "app/src/main/java/org/schabi/newpipe/player/Player.java",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/010c607e40cc08314cd623b716c9ca10d263762d/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FPlayer.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/010c607e40cc08314cd623b716c9ca10d263762d/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FPlayer.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FPlayer.java?ref=010c607e40cc08314cd623b716c9ca10d263762d",
      "patch": "@@ -857,9 +857,15 @@ public void setRecovery() {\n \n         final int queuePos = playQueue.getIndex();\n         final long windowPos = simpleExoPlayer.getCurrentPosition();\n+        final long duration = simpleExoPlayer.getDuration();\n \n-        if (windowPos > 0 && windowPos <= simpleExoPlayer.getDuration()) {\n-            setRecovery(queuePos, windowPos);\n+        if (windowPos > 0\n+                // Sometimes (e.g. when the playback ended) the windowPos is a few milliseconds\n+                // higher than the duration. Due to this a little buffer (100ms) was introduced.\n+                // See also https://github.com/TeamNewPipe/NewPipe/pull/7195#issuecomment-962624380\n+                && windowPos <= duration + 100\n+        ) {\n+            setRecovery(queuePos, Math.min(windowPos, duration));\n         }\n     }\n ",
      "parent_sha": "9e44053e22db0a1e9fc291e35ea74181782cd76b"
    }
  },
  {
    "oid": "81ad50e82a0eb183cd348259445e8ffe25d9f6c8",
    "message": "Added delete xml method inside the yes dialogue.",
    "date": "2023-09-21T14:01:07Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/81ad50e82a0eb183cd348259445e8ffe25d9f6c8",
    "details": {
      "sha": "5952fbe5bbf2711d06fbcfc9cd6f1c98c2650b9e",
      "filename": "app/src/main/java/org/schabi/newpipe/settings/DebugSettingsFragment.java",
      "status": "modified",
      "additions": 11,
      "deletions": 16,
      "changes": 27,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/81ad50e82a0eb183cd348259445e8ffe25d9f6c8/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fsettings%2FDebugSettingsFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/81ad50e82a0eb183cd348259445e8ffe25d9f6c8/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fsettings%2FDebugSettingsFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fsettings%2FDebugSettingsFragment.java?ref=81ad50e82a0eb183cd348259445e8ffe25d9f6c8",
      "patch": "@@ -1,7 +1,6 @@\n package org.schabi.newpipe.settings;\n \n import android.app.AlertDialog;\n-import android.content.DialogInterface;\n import android.content.Intent;\n import android.content.SharedPreferences;\n import android.os.Bundle;\n@@ -98,31 +97,27 @@ public void onCreatePreferences(final Bundle savedInstanceState, final String ro\n         // A dialogue will pop up to confirm if user intends to reset all settings\n         assert resetSettings != null;\n         resetSettings.setOnPreferenceClickListener(preference -> {\n+            // Show Alert Dialogue\n             final AlertDialog.Builder builder = new AlertDialog.Builder(getContext());\n             builder.setMessage(\"Resetting all settings will discard \"\n                     + \"all of your preferred settings and restarts the app. \"\n                     + \"Are you sure you want to proceed?\");\n             builder.setCancelable(true);\n-            builder.setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {\n-                @Override\n-                public void onClick(final DialogInterface dialogInterface, final int i) {\n-                    NavigationHelper.restartApp(getActivity());\n+            builder.setPositiveButton(\"Yes\", (dialogInterface, i) -> {\n+                // Deletes all shared preferences xml files.\n+                final SharedPreferences sharedPreferences =\n+                        PreferenceManager.getDefaultSharedPreferences(requireContext());\n+                sharedPreferences.edit().clear().apply();\n+                // Restarts the app\n+                if (getActivity() == null) {\n+                    return;\n                 }\n+                NavigationHelper.restartApp(getActivity());\n             });\n-            builder.setNegativeButton(\"Cancel\", new DialogInterface.OnClickListener() {\n-                @Override\n-                public void onClick(final DialogInterface dialogInterface, final int i) {\n-                }\n+            builder.setNegativeButton(\"Cancel\", (dialogInterface, i) -> {\n             });\n             final AlertDialog alertDialog = builder.create();\n             alertDialog.show();\n-\n-            // delete all shared preferences xml files.\n-            final SharedPreferences sharedPreferences =\n-                    PreferenceManager.getDefaultSharedPreferences(requireContext());\n-            sharedPreferences.edit().clear().apply();\n-\n-\n             return true;\n         });\n     }",
      "parent_sha": "23de9bf93ed6629afc8080ffa6a3f2467d0f76b1"
    }
  },
  {
    "oid": "1193b02ca136080edeab89d71039db3092a7a91b",
    "message": "Update user agent to Firefox ESR128",
    "date": "2024-11-03T10:52:31Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/1193b02ca136080edeab89d71039db3092a7a91b",
    "details": {
      "sha": "fda45e39ed1d0e871b10d93f4832fe9babfbb7fb",
      "filename": "app/src/main/java/org/schabi/newpipe/DownloaderImpl.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/1193b02ca136080edeab89d71039db3092a7a91b/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FDownloaderImpl.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/1193b02ca136080edeab89d71039db3092a7a91b/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FDownloaderImpl.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FDownloaderImpl.java?ref=1193b02ca136080edeab89d71039db3092a7a91b",
      "patch": "@@ -29,7 +29,7 @@\n \n public final class DownloaderImpl extends Downloader {\n     public static final String USER_AGENT =\n-            \"Mozilla/5.0 (Windows NT 10.0; rv:91.0) Gecko/20100101 Firefox/91.0\";\n+            \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0\";\n     public static final String YOUTUBE_RESTRICTED_MODE_COOKIE_KEY =\n             \"youtube_restricted_mode_key\";\n     public static final String YOUTUBE_RESTRICTED_MODE_COOKIE = \"PREF=f2=8000000\";",
      "parent_sha": "c0b36b86b9dd88b04b5bc85b4207e7dbe327b3a4"
    }
  },
  {
    "oid": "400ee808e08055fcbec4304a5488dbe38afa8a04",
    "message": "Set up theme/locale before super.create()\nThis seems to solve a bug where the Open action menu dialog does not appear the first time on cold start on older Android (8.0).\nThis is also the order of things in MainActivity and probably good practice.",
    "date": "2023-01-11T13:53:48Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/400ee808e08055fcbec4304a5488dbe38afa8a04",
    "details": {
      "sha": "b012be1090bb492f0d30b783e0878e1e0419b7b8",
      "filename": "app/src/main/java/org/schabi/newpipe/RouterActivity.java",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/400ee808e08055fcbec4304a5488dbe38afa8a04/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FRouterActivity.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/400ee808e08055fcbec4304a5488dbe38afa8a04/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FRouterActivity.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FRouterActivity.java?ref=400ee808e08055fcbec4304a5488dbe38afa8a04",
      "patch": "@@ -114,6 +114,11 @@ public class RouterActivity extends AppCompatActivity {\n \n     @Override\n     protected void onCreate(final Bundle savedInstanceState) {\n+        ThemeHelper.setDayNightMode(this);\n+        setTheme(ThemeHelper.isLightThemeSelected(this)\n+                ? R.style.RouterActivityThemeLight : R.style.RouterActivityThemeDark);\n+        Localization.assureCorrectAppLanguage(this);\n+\n         super.onCreate(savedInstanceState);\n         Icepick.restoreInstanceState(this, savedInstanceState);\n \n@@ -125,11 +130,6 @@ protected void onCreate(final Bundle savedInstanceState) {\n                 finish();\n             }\n         }\n-\n-        ThemeHelper.setDayNightMode(this);\n-        setTheme(ThemeHelper.isLightThemeSelected(this)\n-                ? R.style.RouterActivityThemeLight : R.style.RouterActivityThemeDark);\n-        Localization.assureCorrectAppLanguage(this);\n     }\n \n     @Override",
      "parent_sha": "87976693f853a48b72c81e446257547145ba63f5"
    }
  },
  {
    "oid": "4917da2d2e533f08c0050ba45151fb714a7adf7e",
    "message": "fixed: disabled caption to no longer automatically re-enable on new player instance.",
    "date": "2022-04-17T17:26:39Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/4917da2d2e533f08c0050ba45151fb714a7adf7e",
    "details": {
      "sha": "9f95aa519589a0bc6bffd924042a517651ead57d",
      "filename": "app/src/main/java/org/schabi/newpipe/player/Player.java",
      "status": "modified",
      "additions": 9,
      "deletions": 4,
      "changes": 13,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/4917da2d2e533f08c0050ba45151fb714a7adf7e/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FPlayer.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/4917da2d2e533f08c0050ba45151fb714a7adf7e/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FPlayer.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FPlayer.java?ref=4917da2d2e533f08c0050ba45151fb714a7adf7e",
      "patch": "@@ -3557,14 +3557,19 @@ private void buildCaptionMenu(@NonNull final List<String> availableLanguages) {\n         }\n \n         // apply caption language from previous user preference\n-        final List<String> selectedPreferredLanguages =\n-                trackSelector.getParameters().preferredTextLanguages;\n         final String userPreferredLanguage =\n                 prefs.getString(context.getString(R.string.caption_user_set_key), null);\n         final int textRendererIndex = getCaptionRendererIndex();\n \n-        if (userPreferredLanguage != null\n-                && !selectedPreferredLanguages.contains(userPreferredLanguage)\n+        if (userPreferredLanguage == null) {\n+            trackSelector.setParameters(trackSelector.buildUponParameters()\n+                    .setRendererDisabled(textRendererIndex, true));\n+            return;\n+        }\n+\n+        final List<String> selectedPreferredLanguages =\n+                trackSelector.getParameters().preferredTextLanguages;\n+        if (!selectedPreferredLanguages.contains(userPreferredLanguage)\n                 && textRendererIndex != RENDERER_UNAVAILABLE) {\n             trackSelector.setParameters(trackSelector.buildUponParameters()\n                     .setPreferredTextLanguages(userPreferredLanguage,",
      "parent_sha": "6e81f2430b2efb584d6769104f733cde2a8dba7a"
    }
  },
  {
    "oid": "bd1aae8d66d68ca511740a7b3765b513354c4e6e",
    "message": "Fix sonar warning",
    "date": "2022-04-16T04:44:24Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/bd1aae8d66d68ca511740a7b3765b513354c4e6e",
    "details": {
      "sha": "b1910781776dfd91084ea7fc9e5291206374a983",
      "filename": "app/src/main/java/org/schabi/newpipe/local/bookmark/BookmarkFragment.java",
      "status": "modified",
      "additions": 6,
      "deletions": 10,
      "changes": 16,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/bd1aae8d66d68ca511740a7b3765b513354c4e6e/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Flocal%2Fbookmark%2FBookmarkFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/bd1aae8d66d68ca511740a7b3765b513354c4e6e/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Flocal%2Fbookmark%2FBookmarkFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Flocal%2Fbookmark%2FBookmarkFragment.java?ref=bd1aae8d66d68ca511740a7b3765b513354c4e6e",
      "patch": "@@ -446,12 +446,10 @@ private void saveImmediate() {\n                 final Long databaseIndex = displayIndexInDatabase.remove(key);\n \n                 // The database index should not be null because inserting new item into database\n-                // is not dealt here. NullPointerException has occurred once, but I can't reproduce\n-                // it. Enhance robustness here.\n-                if (databaseIndex != null) {\n-                    if (databaseIndex != i) {\n-                        localItemsUpdate.add((PlaylistMetadataEntry) item);\n-                    }\n+                // is not handled here. NullPointerException has occurred once, but I can't\n+                // reproduce it. Enhance robustness here.\n+                if (databaseIndex != null && databaseIndex != i) {\n+                    localItemsUpdate.add((PlaylistMetadataEntry) item);\n                 }\n             } else if (item instanceof PlaylistRemoteEntity) {\n                 ((PlaylistRemoteEntity) item).setDisplayIndex(i);\n@@ -461,10 +459,8 @@ private void saveImmediate() {\n                         LocalItem.LocalItemType.PLAYLIST_REMOTE_ITEM);\n                 final Long databaseIndex = displayIndexInDatabase.remove(key);\n \n-                if (databaseIndex != null) {\n-                    if (databaseIndex != i) {\n-                        remoteItemsUpdate.add((PlaylistRemoteEntity) item);\n-                    }\n+                if (databaseIndex != null && databaseIndex != i) {\n+                    remoteItemsUpdate.add((PlaylistRemoteEntity) item);\n                 }\n             }\n         }",
      "parent_sha": "c24aed054f9da7dcde634faf570f0314d44f6a87"
    }
  },
  {
    "oid": "543440e38d83f79fa9e94ebf24bf6aea953ec300",
    "message": "Update app/src/main/java/org/schabi/newpipe/settings/tabs/Tab.java",
    "date": "2021-06-08T12:44:54Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/543440e38d83f79fa9e94ebf24bf6aea953ec300",
    "details": {
      "sha": "2922e8942760136b9d4b2f54eec27e0e8a1bacd4",
      "filename": "app/src/main/java/org/schabi/newpipe/settings/tabs/Tab.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/543440e38d83f79fa9e94ebf24bf6aea953ec300/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fsettings%2Ftabs%2FTab.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/543440e38d83f79fa9e94ebf24bf6aea953ec300/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fsettings%2Ftabs%2FTab.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fsettings%2Ftabs%2FTab.java?ref=543440e38d83f79fa9e94ebf24bf6aea953ec300",
      "patch": "@@ -611,7 +611,8 @@ public boolean equals(final Object obj) {\n                 return false;\n             }\n \n-            return playlistServiceId == other.playlistServiceId // Remote\n+            return super.equals(obj)\n+                    && playlistServiceId == other.playlistServiceId // Remote\n                     && playlistId == other.playlistId // Local\n                     && playlistUrl.equals(other.playlistUrl)\n                     && playlistName.equals(other.playlistName)",
      "parent_sha": "448989f32f73259aa164eb6319ccdc91bc67b91b"
    }
  },
  {
    "oid": "781bf8e7ec41a51352975a786baf2b6cfab29074",
    "message": "fixed yet another bug",
    "date": "2016-03-01T22:28:22Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/781bf8e7ec41a51352975a786baf2b6cfab29074",
    "details": {
      "sha": "1a35a4d3845a6addcedf9b268f43a94b3f1f0db8",
      "filename": "app/src/main/java/org/schabi/newpipe/VideoItemDetailFragment.java",
      "status": "modified",
      "additions": 9,
      "deletions": 6,
      "changes": 15,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/781bf8e7ec41a51352975a786baf2b6cfab29074/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FVideoItemDetailFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/781bf8e7ec41a51352975a786baf2b6cfab29074/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FVideoItemDetailFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FVideoItemDetailFragment.java?ref=781bf8e7ec41a51352975a786baf2b6cfab29074",
      "patch": "@@ -238,12 +238,15 @@ public VideoResultReturnedRunnable(StreamInfo streamInfo) {\n         }\n         @Override\n         public void run() {\n-            boolean show_age_restricted_content = PreferenceManager.getDefaultSharedPreferences(getActivity())\n-                    .getBoolean(activity.getString(R.string.show_age_restricted_content), false);\n-            if(streamInfo.age_limit == 0 || show_age_restricted_content) {\n-                updateInfo(streamInfo);\n-            } else {\n-                onNotSpecifiedContentErrorWithMessage(R.string.video_is_age_restricted);\n+            Activity a = getActivity();\n+            if(a != null) {\n+                boolean show_age_restricted_content = PreferenceManager.getDefaultSharedPreferences(a)\n+                        .getBoolean(activity.getString(R.string.show_age_restricted_content), false);\n+                if (streamInfo.age_limit == 0 || show_age_restricted_content) {\n+                    updateInfo(streamInfo);\n+                } else {\n+                    onNotSpecifiedContentErrorWithMessage(R.string.video_is_age_restricted);\n+                }\n             }\n         }\n     }",
      "parent_sha": "77b94577072e12aed0a496365034d7844642a103"
    }
  },
  {
    "oid": "0a05534c848a5b32d67ce3df7060a037ce686c1c",
    "message": "Fix null pointer exception in play button method\n\nWhen the play queue was null, and this method was called a null pointer\nexception would be thrown. This change adds an additional check to see\nif the play queue is not null before making additional changes.",
    "date": "2020-12-29T19:51:24Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/0a05534c848a5b32d67ce3df7060a037ce686c1c",
    "details": {
      "sha": "06cbcd780ee1fe366463b9ad740917caf1664e95",
      "filename": "app/src/main/java/org/schabi/newpipe/player/VideoPlayerImpl.java",
      "status": "modified",
      "additions": 19,
      "deletions": 5,
      "changes": 24,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/0a05534c848a5b32d67ce3df7060a037ce686c1c/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FVideoPlayerImpl.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/0a05534c848a5b32d67ce3df7060a037ce686c1c/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FVideoPlayerImpl.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FVideoPlayerImpl.java?ref=0a05534c848a5b32d67ce3df7060a037ce686c1c",
      "patch": "@@ -1071,11 +1071,25 @@ public int getOverrideResolutionIndex(final List<VideoStream> sortedVideos,\n \n     private void animatePlayButtons(final boolean show, final int duration) {\n         animateView(playPauseButton, AnimationUtils.Type.SCALE_AND_ALPHA, show, duration);\n-        if (playQueue.getIndex() > 0 || !show) {\n-            animateView(playPreviousButton, AnimationUtils.Type.SCALE_AND_ALPHA, show, duration);\n-        }\n-        if (playQueue.getIndex() + 1 < playQueue.getStreams().size() || !show) {\n-            animateView(playNextButton, AnimationUtils.Type.SCALE_AND_ALPHA, show, duration);\n+\n+        boolean showQueueButtons = show;\n+        if (playQueue == null) {\n+            showQueueButtons = false;\n+        }\n+\n+        if (!showQueueButtons || playQueue.getIndex() > 0) {\n+            animateView(\n+                playPreviousButton,\n+                AnimationUtils.Type.SCALE_AND_ALPHA,\n+                showQueueButtons,\n+                duration);\n+        }\n+        if (!showQueueButtons || playQueue.getIndex() + 1 < playQueue.getStreams().size()) {\n+            animateView(\n+                playNextButton,\n+                AnimationUtils.Type.SCALE_AND_ALPHA,\n+                showQueueButtons,\n+                duration);\n         }\n \n     }",
      "parent_sha": "90d3c9ced05b6b7227b2ca937e97026aea293707"
    }
  },
  {
    "oid": "c06d61a83c5ab999a583c13ef0124bae03167abb",
    "message": "Made audio-focus calls respect mute state.",
    "date": "2023-08-03T03:44:23Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/c06d61a83c5ab999a583c13ef0124bae03167abb",
    "details": {
      "sha": "1a323176c1d681a7c4a50752a781ec2e13e51993",
      "filename": "app/src/main/java/org/schabi/newpipe/player/Player.java",
      "status": "modified",
      "additions": 9,
      "deletions": 2,
      "changes": 11,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/c06d61a83c5ab999a583c13ef0124bae03167abb/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FPlayer.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/c06d61a83c5ab999a583c13ef0124bae03167abb/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FPlayer.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FPlayer.java?ref=c06d61a83c5ab999a583c13ef0124bae03167abb",
      "patch": "@@ -1082,7 +1082,7 @@ private void onPrepared(final boolean playWhenReady) {\n \n         UIs.call(PlayerUi::onPrepared);\n \n-        if (playWhenReady) {\n+        if (playWhenReady && !isMuted()) {\n             audioReactor.requestAudioFocus();\n         }\n     }\n@@ -1223,6 +1223,11 @@ public void toggleShuffleModeEnabled() {\n     public void toggleMute() {\n         final boolean wasMuted = isMuted();\n         simpleExoPlayer.setVolume(wasMuted ? 1 : 0);\n+        if (wasMuted) {\n+            audioReactor.requestAudioFocus();\n+        } else {\n+            audioReactor.abandonAudioFocus();\n+        }\n         UIs.call(playerUi -> playerUi.onMuteUnmuteChanged(!wasMuted));\n         notifyPlaybackUpdateToListeners();\n     }\n@@ -1620,7 +1625,9 @@ public void play() {\n             return;\n         }\n \n-        audioReactor.requestAudioFocus();\n+        if (!isMuted()) {\n+            audioReactor.requestAudioFocus();\n+        }\n \n         if (currentState == STATE_COMPLETED) {\n             if (playQueue.getIndex() == 0) {",
      "parent_sha": "bc4f0c699fba3265cfb4aaef3370ebc81d36249b"
    }
  },
  {
    "oid": "0c716c12d769cea04025abe0090462bea2c6cc4f",
    "message": "fixed viewcount test again",
    "date": "2016-03-04T12:51:50Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/0c716c12d769cea04025abe0090462bea2c6cc4f",
    "details": {
      "sha": "39f04f4a0ed8c47a1abe48019bdda15841c6d3c1",
      "filename": "app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeSearchEngineTest.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/0c716c12d769cea04025abe0090462bea2c6cc4f/app%2Fsrc%2FandroidTest%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fextractor%2Fyoutube%2FYoutubeSearchEngineTest.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/0c716c12d769cea04025abe0090462bea2c6cc4f/app%2Fsrc%2FandroidTest%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fextractor%2Fyoutube%2FYoutubeSearchEngineTest.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2FandroidTest%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fextractor%2Fyoutube%2FYoutubeSearchEngineTest.java?ref=0c716c12d769cea04025abe0090462bea2c6cc4f",
      "patch": "@@ -43,7 +43,7 @@ public void setUp() throws Exception{\n         SearchEngine engine = ServiceList.getService(\"Youtube\")\n                 .getSearchEngineInstance(new Downloader());\n \n-        result = engine.search(\"bla\",\n+        result = engine.search(\"lefloid\",\n                 0, \"de\", new Downloader()).getSearchResult();\n         suggestionReply = engine.suggestionList(\"hello\",\"de\",new Downloader());\n     }\n@@ -96,7 +96,7 @@ public void testViewCount() {\n         // that specific link used for this test, there are no videos with less\n         // than 10.000 views, so we can test against that.\n         for(StreamPreviewInfo i : result.resultList) {\n-            assertTrue(Long.toString(i.view_count), i.view_count >= 10000);\n+            assertTrue(i.title + \": \" + Long.toString(i.view_count), i.view_count >= 10000);\n         }\n     }\n ",
      "parent_sha": "b1d2e644500e27064f0a5118711f263d1027c2ab"
    }
  },
  {
    "oid": "646698f1ed09cc18c53b95d9352f1a0444f5c803",
    "message": "fixed NPE in soundcloud",
    "date": "2018-12-25T14:29:03Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/646698f1ed09cc18c53b95d9352f1a0444f5c803",
    "details": {
      "sha": "702e0e3fb349990774af860099afb0af05e3659e",
      "filename": "app/src/main/java/org/schabi/newpipe/fragments/list/videos/RelatedVideosFragment.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/646698f1ed09cc18c53b95d9352f1a0444f5c803/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2Fvideos%2FRelatedVideosFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/646698f1ed09cc18c53b95d9352f1a0444f5c803/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2Fvideos%2FRelatedVideosFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2Fvideos%2FRelatedVideosFragment.java?ref=646698f1ed09cc18c53b95d9352f1a0444f5c803",
      "patch": "@@ -111,15 +111,15 @@ protected Single<RelatedStreamInfo> loadResult(boolean forceLoad) {\n     @Override\n     public void showLoading() {\n         super.showLoading();\n-        headerRootLayout.setVisibility(View.INVISIBLE);\n+        if(null != headerRootLayout) headerRootLayout.setVisibility(View.INVISIBLE);\n     }\n \n     @Override\n     public void handleResult(@NonNull RelatedStreamInfo result) {\n \n         super.handleResult(result);\n \n-        headerRootLayout.setVisibility(View.VISIBLE);\n+        if(null != headerRootLayout) headerRootLayout.setVisibility(View.VISIBLE);\n         AnimationUtils.slideUp(getView(),120, 96, 0.06f);\n \n         if (!result.getErrors().isEmpty()) {",
      "parent_sha": "c9b938ae55473af6aa5749bef5e77d97672531e6"
    }
  },
  {
    "oid": "4f6b5b3b89879a53039a868c2007bcbdbb3972f8",
    "message": "Use ListAdapter in PeertubeInstanceListFragment.",
    "date": "2022-08-15T01:56:02Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/4f6b5b3b89879a53039a868c2007bcbdbb3972f8",
    "details": {
      "sha": "1158b3d830739a16193a2de540a44fe50c58ce3e",
      "filename": "app/src/main/java/org/schabi/newpipe/settings/PeertubeInstanceListFragment.java",
      "status": "modified",
      "additions": 88,
      "deletions": 106,
      "changes": 194,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/4f6b5b3b89879a53039a868c2007bcbdbb3972f8/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fsettings%2FPeertubeInstanceListFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/4f6b5b3b89879a53039a868c2007bcbdbb3972f8/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fsettings%2FPeertubeInstanceListFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fsettings%2FPeertubeInstanceListFragment.java?ref=4f6b5b3b89879a53039a868c2007bcbdbb3972f8",
      "patch": "@@ -12,36 +12,34 @@\n import android.view.MotionEvent;\n import android.view.View;\n import android.view.ViewGroup;\n-import android.widget.ImageView;\n-import android.widget.ProgressBar;\n import android.widget.RadioButton;\n-import android.widget.TextView;\n import android.widget.Toast;\n \n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n import androidx.appcompat.app.AlertDialog;\n-import androidx.appcompat.widget.AppCompatImageView;\n import androidx.fragment.app.Fragment;\n import androidx.preference.PreferenceManager;\n+import androidx.recyclerview.widget.DiffUtil;\n import androidx.recyclerview.widget.ItemTouchHelper;\n import androidx.recyclerview.widget.LinearLayoutManager;\n+import androidx.recyclerview.widget.ListAdapter;\n import androidx.recyclerview.widget.RecyclerView;\n \n-import com.google.android.material.floatingactionbutton.FloatingActionButton;\n import com.grack.nanojson.JsonStringWriter;\n import com.grack.nanojson.JsonWriter;\n \n import org.schabi.newpipe.R;\n import org.schabi.newpipe.databinding.DialogEditTextBinding;\n+import org.schabi.newpipe.databinding.FragmentInstanceListBinding;\n+import org.schabi.newpipe.databinding.ItemInstanceBinding;\n import org.schabi.newpipe.extractor.services.peertube.PeertubeInstance;\n import org.schabi.newpipe.util.Constants;\n import org.schabi.newpipe.util.PeertubeHelper;\n import org.schabi.newpipe.util.ThemeHelper;\n \n import java.util.ArrayList;\n import java.util.Collections;\n-import java.util.List;\n \n import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\n import io.reactivex.rxjava3.core.Single;\n@@ -50,12 +48,11 @@\n import io.reactivex.rxjava3.schedulers.Schedulers;\n \n public class PeertubeInstanceListFragment extends Fragment {\n-    private final List<PeertubeInstance> instanceList = new ArrayList<>();\n     private PeertubeInstance selectedInstance;\n     private String savedInstanceListKey;\n     private InstanceListAdapter instanceListAdapter;\n \n-    private ProgressBar progressBar;\n+    private FragmentInstanceListBinding binding;\n     private SharedPreferences sharedPreferences;\n \n     private CompositeDisposable disposables = new CompositeDisposable();\n@@ -71,42 +68,33 @@ public void onCreate(@Nullable final Bundle savedInstanceState) {\n         sharedPreferences = PreferenceManager.getDefaultSharedPreferences(requireContext());\n         savedInstanceListKey = getString(R.string.peertube_instance_list_key);\n         selectedInstance = PeertubeHelper.getCurrentInstance();\n-        updateInstanceList();\n \n         setHasOptionsMenu(true);\n     }\n \n     @Override\n     public View onCreateView(@NonNull final LayoutInflater inflater, final ViewGroup container,\n                              final Bundle savedInstanceState) {\n-        return inflater.inflate(R.layout.fragment_instance_list, container, false);\n+        binding = FragmentInstanceListBinding.inflate(inflater, container, false);\n+        return binding.getRoot();\n     }\n \n     @Override\n     public void onViewCreated(@NonNull final View rootView,\n                               @Nullable final Bundle savedInstanceState) {\n         super.onViewCreated(rootView, savedInstanceState);\n \n-        initViews(rootView);\n-    }\n-\n-    private void initViews(@NonNull final View rootView) {\n-        final TextView instanceHelpTV = rootView.findViewById(R.id.instanceHelpTV);\n-        instanceHelpTV.setText(getString(R.string.peertube_instance_url_help,\n+        binding.instanceHelpTV.setText(getString(R.string.peertube_instance_url_help,\n                 getString(R.string.peertube_instance_list_url)));\n-\n-        initButton(rootView);\n-\n-        final RecyclerView listInstances = rootView.findViewById(R.id.instances);\n-        listInstances.setLayoutManager(new LinearLayoutManager(requireContext()));\n+        binding.addInstanceButton.setOnClickListener(v -> showAddItemDialog(requireContext()));\n+        binding.instances.setLayoutManager(new LinearLayoutManager(requireContext()));\n \n         final ItemTouchHelper itemTouchHelper = new ItemTouchHelper(getItemTouchCallback());\n-        itemTouchHelper.attachToRecyclerView(listInstances);\n+        itemTouchHelper.attachToRecyclerView(binding.instances);\n \n         instanceListAdapter = new InstanceListAdapter(requireContext(), itemTouchHelper);\n-        listInstances.setAdapter(instanceListAdapter);\n-\n-        progressBar = rootView.findViewById(R.id.loading_progress_bar);\n+        binding.instances.setAdapter(instanceListAdapter);\n+        instanceListAdapter.submitList(PeertubeHelper.getInstanceList(requireContext()));\n     }\n \n     @Override\n@@ -131,6 +119,12 @@ public void onDestroy() {\n         disposables = null;\n     }\n \n+    @Override\n+    public void onDestroyView() {\n+        binding = null;\n+        super.onDestroyView();\n+    }\n+\n     /*//////////////////////////////////////////////////////////////////////////\n     // Menu\n     //////////////////////////////////////////////////////////////////////////*/\n@@ -156,19 +150,14 @@ public boolean onOptionsItemSelected(final MenuItem item) {\n     // Utils\n     //////////////////////////////////////////////////////////////////////////*/\n \n-    private void updateInstanceList() {\n-        instanceList.clear();\n-        instanceList.addAll(PeertubeHelper.getInstanceList(requireContext()));\n-    }\n-\n     private void selectInstance(final PeertubeInstance instance) {\n         selectedInstance = PeertubeHelper.selectInstance(instance, requireContext());\n         sharedPreferences.edit().putBoolean(Constants.KEY_MAIN_PAGE_CHANGE, true).apply();\n     }\n \n     private void saveChanges() {\n         final JsonStringWriter jsonWriter = JsonWriter.string().object().array(\"instances\");\n-        for (final PeertubeInstance instance : instanceList) {\n+        for (final PeertubeInstance instance : instanceListAdapter.getCurrentList()) {\n             jsonWriter.object();\n             jsonWriter.value(\"name\", instance.getName());\n             jsonWriter.value(\"url\", instance.getUrl());\n@@ -179,28 +168,21 @@ private void saveChanges() {\n     }\n \n     private void restoreDefaults() {\n-        new AlertDialog.Builder(requireContext())\n+        final Context context = requireContext();\n+        new AlertDialog.Builder(context)\n                 .setTitle(R.string.restore_defaults)\n                 .setMessage(R.string.restore_defaults_confirmation)\n                 .setNegativeButton(R.string.cancel, null)\n                 .setPositiveButton(R.string.ok, (dialog, which) -> {\n                     sharedPreferences.edit().remove(savedInstanceListKey).apply();\n                     selectInstance(PeertubeInstance.DEFAULT_INSTANCE);\n-                    updateInstanceList();\n-                    instanceListAdapter.notifyDataSetChanged();\n+                    instanceListAdapter.submitList(PeertubeHelper.getInstanceList(context));\n                 })\n                 .show();\n     }\n \n-    private void initButton(final View rootView) {\n-        final FloatingActionButton fab = rootView.findViewById(R.id.addInstanceButton);\n-        fab.setOnClickListener(v ->\n-                showAddItemDialog(requireContext()));\n-    }\n-\n     private void showAddItemDialog(final Context c) {\n-        final DialogEditTextBinding dialogBinding =\n-                DialogEditTextBinding.inflate(getLayoutInflater());\n+        final var dialogBinding = DialogEditTextBinding.inflate(getLayoutInflater());\n         dialogBinding.dialogEditText.setInputType(\n                 InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_URI);\n         dialogBinding.dialogEditText.setHint(R.string.peertube_instance_add_help);\n@@ -222,17 +204,17 @@ private void addInstance(final String url) {\n         if (cleanUrl == null) {\n             return;\n         }\n-        progressBar.setVisibility(View.VISIBLE);\n+        binding.loadingProgressBar.setVisibility(View.VISIBLE);\n         final Disposable disposable = Single.fromCallable(() -> {\n             final PeertubeInstance instance = new PeertubeInstance(cleanUrl);\n             instance.fetchInstanceMetaData();\n             return instance;\n         }).subscribeOn(Schedulers.io()).observeOn(AndroidSchedulers.mainThread())\n                 .subscribe((instance) -> {\n-                    progressBar.setVisibility(View.GONE);\n+                    binding.loadingProgressBar.setVisibility(View.GONE);\n                     add(instance);\n                 }, e -> {\n-                    progressBar.setVisibility(View.GONE);\n+                    binding.loadingProgressBar.setVisibility(View.GONE);\n                     Toast.makeText(getActivity(), R.string.peertube_instance_add_fail,\n                             Toast.LENGTH_SHORT).show();\n                 });\n@@ -255,7 +237,7 @@ private String cleanUrl(final String url) {\n             return null;\n         }\n         // only allow if not already exists\n-        for (final PeertubeInstance instance : instanceList) {\n+        for (final PeertubeInstance instance : instanceListAdapter.getCurrentList()) {\n             if (instance.getUrl().equals(cleanUrl)) {\n                 Toast.makeText(getActivity(), R.string.peertube_instance_add_exists,\n                         Toast.LENGTH_SHORT).show();\n@@ -266,8 +248,9 @@ private String cleanUrl(final String url) {\n     }\n \n     private void add(final PeertubeInstance instance) {\n-        instanceList.add(instance);\n-        instanceListAdapter.notifyDataSetChanged();\n+        final var list = new ArrayList<>(instanceListAdapter.getCurrentList());\n+        list.add(instance);\n+        instanceListAdapter.submitList(list);\n     }\n \n     private ItemTouchHelper.SimpleCallback getItemTouchCallback() {\n@@ -281,8 +264,7 @@ public int interpolateOutOfBoundsScroll(@NonNull final RecyclerView recyclerView\n                                                     final long msSinceStartScroll) {\n                 final int standardSpeed = super.interpolateOutOfBoundsScroll(recyclerView, viewSize,\n                         viewSizeOutOfBounds, totalSize, msSinceStartScroll);\n-                final int minimumAbsVelocity = Math.max(12,\n-                        Math.abs(standardSpeed));\n+                final int minimumAbsVelocity = Math.max(12, Math.abs(standardSpeed));\n                 return minimumAbsVelocity * (int) Math.signum(viewSizeOutOfBounds);\n             }\n \n@@ -316,17 +298,19 @@ public void onSwiped(@NonNull final RecyclerView.ViewHolder viewHolder,\n                                  final int swipeDir) {\n                 final int position = viewHolder.getBindingAdapterPosition();\n                 // do not allow swiping the selected instance\n-                if (instanceList.get(position).getUrl().equals(selectedInstance.getUrl())) {\n+                if (instanceListAdapter.getCurrentList().get(position).getUrl()\n+                        .equals(selectedInstance.getUrl())) {\n                     instanceListAdapter.notifyItemChanged(position);\n                     return;\n                 }\n-                instanceList.remove(position);\n-                instanceListAdapter.notifyItemRemoved(position);\n+                final var list = new ArrayList<>(instanceListAdapter.getCurrentList());\n+                list.remove(position);\n \n-                if (instanceList.isEmpty()) {\n-                    instanceList.add(selectedInstance);\n-                    instanceListAdapter.notifyItemInserted(0);\n+                if (list.isEmpty()) {\n+                    list.add(selectedInstance);\n                 }\n+\n+                instanceListAdapter.submitList(list);\n             }\n         };\n     }\n@@ -336,96 +320,94 @@ public void onSwiped(@NonNull final RecyclerView.ViewHolder viewHolder,\n     //////////////////////////////////////////////////////////////////////////*/\n \n     private class InstanceListAdapter\n-            extends RecyclerView.Adapter<InstanceListAdapter.TabViewHolder> {\n+            extends ListAdapter<PeertubeInstance, InstanceListAdapter.TabViewHolder> {\n         private final LayoutInflater inflater;\n         private final ItemTouchHelper itemTouchHelper;\n         private RadioButton lastChecked;\n \n         InstanceListAdapter(final Context context, final ItemTouchHelper itemTouchHelper) {\n+            super(new PeertubeInstanceCallback());\n             this.itemTouchHelper = itemTouchHelper;\n             this.inflater = LayoutInflater.from(context);\n         }\n \n         public void swapItems(final int fromPosition, final int toPosition) {\n-            Collections.swap(instanceList, fromPosition, toPosition);\n-            notifyItemMoved(fromPosition, toPosition);\n+            final var list = new ArrayList<>(getCurrentList());\n+            Collections.swap(list, fromPosition, toPosition);\n+            submitList(list);\n         }\n \n         @NonNull\n         @Override\n         public InstanceListAdapter.TabViewHolder onCreateViewHolder(@NonNull final ViewGroup parent,\n                                                                     final int viewType) {\n-            final View view = inflater.inflate(R.layout.item_instance, parent, false);\n-            return new InstanceListAdapter.TabViewHolder(view);\n+            return new InstanceListAdapter.TabViewHolder(ItemInstanceBinding.inflate(inflater,\n+                    parent, false));\n         }\n \n         @Override\n         public void onBindViewHolder(@NonNull final InstanceListAdapter.TabViewHolder holder,\n                                      final int position) {\n-            holder.bind(position, holder);\n-        }\n-\n-        @Override\n-        public int getItemCount() {\n-            return instanceList.size();\n+            holder.bind(position);\n         }\n \n         class TabViewHolder extends RecyclerView.ViewHolder {\n-            private final AppCompatImageView instanceIconView;\n-            private final TextView instanceNameView;\n-            private final TextView instanceUrlView;\n-            private final RadioButton instanceRB;\n-            private final ImageView handle;\n-\n-            TabViewHolder(final View itemView) {\n-                super(itemView);\n-\n-                instanceIconView = itemView.findViewById(R.id.instanceIcon);\n-                instanceNameView = itemView.findViewById(R.id.instanceName);\n-                instanceUrlView = itemView.findViewById(R.id.instanceUrl);\n-                instanceRB = itemView.findViewById(R.id.selectInstanceRB);\n-                handle = itemView.findViewById(R.id.handle);\n+            private final ItemInstanceBinding itemBinding;\n+\n+            TabViewHolder(final ItemInstanceBinding binding) {\n+                super(binding.getRoot());\n+                this.itemBinding = binding;\n             }\n \n             @SuppressLint(\"ClickableViewAccessibility\")\n-            void bind(final int position, final TabViewHolder holder) {\n-                handle.setOnTouchListener(getOnTouchListener(holder));\n+            void bind(final int position) {\n+                itemBinding.handle.setOnTouchListener((view, motionEvent) -> {\n+                    if (motionEvent.getActionMasked() == MotionEvent.ACTION_DOWN) {\n+                        if (itemTouchHelper != null && getItemCount() > 1) {\n+                            itemTouchHelper.startDrag(this);\n+                            return true;\n+                        }\n+                    }\n+                    return false;\n+                });\n \n-                final PeertubeInstance instance = instanceList.get(position);\n-                instanceNameView.setText(instance.getName());\n-                instanceUrlView.setText(instance.getUrl());\n-                instanceRB.setOnCheckedChangeListener(null);\n+                final PeertubeInstance instance = getItem(position);\n+                itemBinding.instanceName.setText(instance.getName());\n+                itemBinding.instanceUrl.setText(instance.getUrl());\n+                itemBinding.selectInstanceRB.setOnCheckedChangeListener(null);\n                 if (selectedInstance.getUrl().equals(instance.getUrl())) {\n-                    if (lastChecked != null && lastChecked != instanceRB) {\n+                    if (lastChecked != null && lastChecked != itemBinding.selectInstanceRB) {\n                         lastChecked.setChecked(false);\n                     }\n-                    instanceRB.setChecked(true);\n-                    lastChecked = instanceRB;\n+                    itemBinding.selectInstanceRB.setChecked(true);\n+                    lastChecked = itemBinding.selectInstanceRB;\n                 }\n-                instanceRB.setOnCheckedChangeListener((buttonView, isChecked) -> {\n+                itemBinding.selectInstanceRB.setOnCheckedChangeListener((buttonView, isChecked) -> {\n                     if (isChecked) {\n                         selectInstance(instance);\n-                        if (lastChecked != null && lastChecked != instanceRB) {\n+                        if (lastChecked != null && lastChecked != itemBinding.selectInstanceRB) {\n                             lastChecked.setChecked(false);\n                         }\n-                        lastChecked = instanceRB;\n+                        lastChecked = itemBinding.selectInstanceRB;\n                     }\n                 });\n-                instanceIconView.setImageResource(R.drawable.ic_placeholder_peertube);\n+                itemBinding.instanceIcon.setImageResource(R.drawable.ic_placeholder_peertube);\n             }\n+        }\n+    }\n \n-            @SuppressLint(\"ClickableViewAccessibility\")\n-            private View.OnTouchListener getOnTouchListener(final RecyclerView.ViewHolder item) {\n-                return (view, motionEvent) -> {\n-                    if (motionEvent.getActionMasked() == MotionEvent.ACTION_DOWN) {\n-                        if (itemTouchHelper != null && getItemCount() > 1) {\n-                            itemTouchHelper.startDrag(item);\n-                            return true;\n-                        }\n-                    }\n-                    return false;\n-                };\n-            }\n+    private static class PeertubeInstanceCallback extends DiffUtil.ItemCallback<PeertubeInstance> {\n+        @Override\n+        public boolean areItemsTheSame(@NonNull final PeertubeInstance oldItem,\n+                                       @NonNull final PeertubeInstance newItem) {\n+            return oldItem.getUrl().equals(newItem.getUrl());\n+        }\n+\n+        @Override\n+        public boolean areContentsTheSame(@NonNull final PeertubeInstance oldItem,\n+                                          @NonNull final PeertubeInstance newItem) {\n+            return oldItem.getName().equals(newItem.getName())\n+                    && oldItem.getUrl().equals(newItem.getUrl());\n         }\n     }\n }",
      "parent_sha": "b9b09d325ab009f9b27f015da3bec2e0bd04a9c8"
    }
  },
  {
    "oid": "910d22daa6dcccdb6b21213ab02da1eed1842047",
    "message": "Use view binding in MainFragment.",
    "date": "2021-01-14T05:45:58Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/910d22daa6dcccdb6b21213ab02da1eed1842047",
    "details": {
      "sha": "9487fa385a965009c8d11bcdcc8131686be51b36",
      "filename": "app/src/main/java/org/schabi/newpipe/fragments/MainFragment.java",
      "status": "modified",
      "additions": 19,
      "deletions": 16,
      "changes": 35,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/910d22daa6dcccdb6b21213ab02da1eed1842047/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2FMainFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/910d22daa6dcccdb6b21213ab02da1eed1842047/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2FMainFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2FMainFragment.java?ref=910d22daa6dcccdb6b21213ab02da1eed1842047",
      "patch": "@@ -19,12 +19,12 @@\n import androidx.fragment.app.FragmentManager;\n import androidx.fragment.app.FragmentStatePagerAdapterMenuWorkaround;\n import androidx.preference.PreferenceManager;\n-import androidx.viewpager.widget.ViewPager;\n \n import com.google.android.material.tabs.TabLayout;\n \n import org.schabi.newpipe.BaseFragment;\n import org.schabi.newpipe.R;\n+import org.schabi.newpipe.databinding.FragmentMainBinding;\n import org.schabi.newpipe.extractor.exceptions.ExtractionException;\n import org.schabi.newpipe.report.ErrorActivity;\n import org.schabi.newpipe.report.ErrorInfo;\n@@ -34,15 +34,13 @@\n import org.schabi.newpipe.util.NavigationHelper;\n import org.schabi.newpipe.util.ServiceHelper;\n import org.schabi.newpipe.util.ThemeHelper;\n-import org.schabi.newpipe.views.ScrollableTabLayout;\n \n import java.util.ArrayList;\n import java.util.List;\n \n public class MainFragment extends BaseFragment implements TabLayout.OnTabSelectedListener {\n-    private ViewPager viewPager;\n+    private FragmentMainBinding binding;\n     private SelectedTabsPagerAdapter pagerAdapter;\n-    private ScrollableTabLayout tabLayout;\n \n     private final List<Tab> tabsList = new ArrayList<>();\n     private TabsManager tabsManager;\n@@ -90,13 +88,12 @@ public View onCreateView(@NonNull final LayoutInflater inflater,\n     protected void initViews(final View rootView, final Bundle savedInstanceState) {\n         super.initViews(rootView, savedInstanceState);\n \n-        tabLayout = rootView.findViewById(R.id.main_tab_layout);\n-        viewPager = rootView.findViewById(R.id.pager);\n+        binding = FragmentMainBinding.bind(rootView);\n \n-        tabLayout.setTabIconTint(ColorStateList.valueOf(\n+        binding.mainTabLayout.setTabIconTint(ColorStateList.valueOf(\n                 ThemeHelper.resolveColorFromAttr(requireContext(), R.attr.colorAccent)));\n-        tabLayout.setupWithViewPager(viewPager);\n-        tabLayout.addOnTabSelectedListener(this);\n+        binding.mainTabLayout.setupWithViewPager(binding.pager);\n+        binding.mainTabLayout.addOnTabSelectedListener(this);\n \n         setupTabs();\n     }\n@@ -120,8 +117,14 @@ public void onResume() {\n     public void onDestroy() {\n         super.onDestroy();\n         tabsManager.unsetSavedTabsListener();\n-        if (viewPager != null) {\n-            viewPager.setAdapter(null);\n+    }\n+\n+    @Override\n+    public void onDestroyView() {\n+        super.onDestroyView();\n+        if (binding != null) {\n+            binding.pager.setAdapter(null);\n+            binding = null;\n         }\n     }\n \n@@ -172,19 +175,19 @@ private void setupTabs() {\n                     getChildFragmentManager(), tabsList);\n         }\n \n-        viewPager.setAdapter(null);\n-        viewPager.setOffscreenPageLimit(tabsList.size());\n-        viewPager.setAdapter(pagerAdapter);\n+        binding.pager.setAdapter(null);\n+        binding.pager.setOffscreenPageLimit(tabsList.size());\n+        binding.pager.setAdapter(pagerAdapter);\n \n         updateTabsIconAndDescription();\n-        updateTitleForTab(viewPager.getCurrentItem());\n+        updateTitleForTab(binding.pager.getCurrentItem());\n \n         hasTabsChanged = false;\n     }\n \n     private void updateTabsIconAndDescription() {\n         for (int i = 0; i < tabsList.size(); i++) {\n-            final TabLayout.Tab tabToSet = tabLayout.getTabAt(i);\n+            final TabLayout.Tab tabToSet = binding.mainTabLayout.getTabAt(i);\n             if (tabToSet != null) {\n                 final Tab tab = tabsList.get(i);\n                 tabToSet.setIcon(tab.getTabIconRes(requireContext()));",
      "parent_sha": "979102a2d932cd17ce58d367244c6c906dcc81a8"
    }
  },
  {
    "oid": "38c79bbc11c3c1e81fdfdb03ba8e98cac34d1041",
    "message": "Fix audio/video desync caused by floating point cumulative errors",
    "date": "2020-06-30T20:41:09Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/38c79bbc11c3c1e81fdfdb03ba8e98cac34d1041",
    "details": {
      "sha": "61c5d9e689bea67f5e45dbfba90f0d40d6f2cee6",
      "filename": "app/src/main/java/org/schabi/newpipe/player/BasePlayer.java",
      "status": "modified",
      "additions": 19,
      "deletions": 9,
      "changes": 28,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/38c79bbc11c3c1e81fdfdb03ba8e98cac34d1041/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FBasePlayer.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/38c79bbc11c3c1e81fdfdb03ba8e98cac34d1041/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FBasePlayer.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FBasePlayer.java?ref=38c79bbc11c3c1e81fdfdb03ba8e98cac34d1041",
      "patch": "@@ -331,13 +331,12 @@ private PlaybackParameters retrievePlaybackParametersFromPreferences() {\n         final SharedPreferences preferences =\n                 PreferenceManager.getDefaultSharedPreferences(context);\n \n-        final float speed = preferences\n-            .getFloat(context.getString(R.string.playback_speed_key), getPlaybackSpeed());\n-        final float pitch = preferences.getFloat(context.getString(R.string.playback_pitch_key),\n-            getPlaybackPitch());\n-        final boolean skipSilence = preferences\n-            .getBoolean(context.getString(R.string.playback_skip_silence_key),\n-                getPlaybackSkipSilence());\n+        final float speed = preferences.getFloat(\n+                context.getString(R.string.playback_speed_key), getPlaybackSpeed());\n+        final float pitch = preferences.getFloat(\n+                context.getString(R.string.playback_pitch_key), getPlaybackPitch());\n+        final boolean skipSilence = preferences.getBoolean(\n+                context.getString(R.string.playback_skip_silence_key), getPlaybackSkipSilence());\n         return new PlaybackParameters(speed, pitch, skipSilence);\n     }\n \n@@ -1471,10 +1470,21 @@ public PlaybackParameters getPlaybackParameters() {\n         return parameters == null ? PlaybackParameters.DEFAULT : parameters;\n     }\n \n+    /**\n+     * Sets the playback parameters of the player, and also saves them to shared preferences.\n+     * Speed and pitch are rounded up to 2 decimal places before being used or saved.\n+     * @param speed the playback speed, will be rounded to up to 2 decimal places\n+     * @param pitch the playback pitch, will be rounded to up to 2 decimal places\n+     * @param skipSilence skip silence during playback\n+     */\n     public void setPlaybackParameters(final float speed, final float pitch,\n                                       final boolean skipSilence) {\n-        savePlaybackParametersToPreferences(speed, pitch, skipSilence);\n-        simpleExoPlayer.setPlaybackParameters(new PlaybackParameters(speed, pitch, skipSilence));\n+        final float roundedSpeed = Math.round(speed * 100.0f) / 100.0f;\n+        final float roundedPitch = Math.round(pitch * 100.0f) / 100.0f;\n+\n+        savePlaybackParametersToPreferences(roundedSpeed, roundedPitch, skipSilence);\n+        simpleExoPlayer.setPlaybackParameters(\n+                new PlaybackParameters(roundedSpeed, roundedPitch, skipSilence));\n     }\n \n     private void savePlaybackParametersToPreferences(final float speed, final float pitch,",
      "parent_sha": "d9100913d54eb96ecbdd3393510ee10f1ef59677"
    }
  },
  {
    "oid": "b365973ac62007fa1c6d22ecfbc927cf00278490",
    "message": "fix last recomendation. syntax and imports",
    "date": "2019-12-10T19:18:49Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/b365973ac62007fa1c6d22ecfbc927cf00278490",
    "details": {
      "sha": "8bb16c318b5cb395d4b46fdcbf52df02a8b6d29d",
      "filename": "app/src/main/java/org/schabi/newpipe/local/holder/RemotePlaylistItemHolder.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/b365973ac62007fa1c6d22ecfbc927cf00278490/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Flocal%2Fholder%2FRemotePlaylistItemHolder.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/b365973ac62007fa1c6d22ecfbc927cf00278490/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Flocal%2Fholder%2FRemotePlaylistItemHolder.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Flocal%2Fholder%2FRemotePlaylistItemHolder.java?ref=b365973ac62007fa1c6d22ecfbc927cf00278490",
      "patch": "@@ -10,6 +10,8 @@\n import org.schabi.newpipe.util.ImageDisplayConstants;\n import org.schabi.newpipe.util.Localization;\n \n+import android.text.TextUtils;\n+\n import java.text.DateFormat;\n \n public class RemotePlaylistItemHolder extends PlaylistItemHolder {\n@@ -29,7 +31,7 @@ public void updateFromItem(final LocalItem localItem, HistoryRecordManager histo\n         itemTitleView.setText(item.getName());\n         itemStreamCountView.setText(String.valueOf(item.getStreamCount()));\n         // Here is where the uploader name is set in the bookmarked playlists library\n-        if (!TextUtils.isEmpty(item.getUploader)) {\n+        if (!TextUtils.isEmpty(item.getUploader())) {\n             itemUploaderView.setText(Localization.concatenateStrings(item.getUploader(),\n                 NewPipe.getNameOfService(item.getServiceId())));\n         } else {",
      "parent_sha": "19fb8cfbfe705dec2315ab90c6fa8bcfcb2730b7"
    }
  },
  {
    "oid": "18a40168d9ca0dadacb64a69f8ac15ecbe0b0b00",
    "message": "Add Groupie library to the credit list in the about page",
    "date": "2020-03-14T03:12:43Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/18a40168d9ca0dadacb64a69f8ac15ecbe0b0b00",
    "details": {
      "sha": "0a4e9e8656b7957784a61b704bbe924d91384a52",
      "filename": "app/src/main/java/org/schabi/newpipe/about/AboutActivity.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/18a40168d9ca0dadacb64a69f8ac15ecbe0b0b00/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fabout%2FAboutActivity.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/18a40168d9ca0dadacb64a69f8ac15ecbe0b0b00/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fabout%2FAboutActivity.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fabout%2FAboutActivity.java?ref=18a40168d9ca0dadacb64a69f8ac15ecbe0b0b00",
      "patch": "@@ -45,7 +45,8 @@ public class AboutActivity extends AppCompatActivity {\n             new SoftwareComponent(\"RxJava\", \"2016 - 2020\", \"RxJava Contributors\", \"https://github.com/ReactiveX/RxJava\", StandardLicenses.APACHE2),\n             new SoftwareComponent(\"RxBinding\", \"2015 - 2018\", \"Jake Wharton\", \"https://github.com/JakeWharton/RxBinding\", StandardLicenses.APACHE2),\n             new SoftwareComponent(\"PrettyTime\", \"2012 - 2020\", \"Lincoln Baxter, III\", \"https://github.com/ocpsoft/prettytime\", StandardLicenses.APACHE2),\n-            new SoftwareComponent(\"Markwon\", \"2017 - 2020\", \"Noties\", \"https://github.com/noties/Markwon\", StandardLicenses.APACHE2)\n+            new SoftwareComponent(\"Markwon\", \"2017 - 2020\", \"Noties\", \"https://github.com/noties/Markwon\", StandardLicenses.APACHE2),\n+            new SoftwareComponent(\"Groupie\", \"2016\", \"Lisa Wray\", \"https://github.com/lisawray/groupie\", StandardLicenses.MIT)\n     };\n \n     /**",
      "parent_sha": "2c783ff911dad1d4326b84b7b0c92d5fbcb11c30"
    }
  },
  {
    "oid": "570738190d3afb354445517e86781e2fe91f3459",
    "message": "Mp4FromDashWriter fixes\n* correct calculation of \"co64\" box and usage of 64bits offsets\n* generate one chunk for audio streams like ffmpeg does, attempt to fix cut-off audio\n* misc. cleanup",
    "date": "2019-11-26T13:46:26Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/570738190d3afb354445517e86781e2fe91f3459",
    "details": {
      "sha": "420f77955742ac120a58a9d196c78f450e109b77",
      "filename": "app/src/main/java/org/schabi/newpipe/streams/Mp4FromDashWriter.java",
      "status": "modified",
      "additions": 50,
      "deletions": 29,
      "changes": 79,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/570738190d3afb354445517e86781e2fe91f3459/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fstreams%2FMp4FromDashWriter.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/570738190d3afb354445517e86781e2fe91f3459/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fstreams%2FMp4FromDashWriter.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fstreams%2FMp4FromDashWriter.java?ref=570738190d3afb354445517e86781e2fe91f3459",
      "patch": "@@ -6,6 +6,7 @@\n import org.schabi.newpipe.streams.Mp4DashReader.Mp4DashSample;\n import org.schabi.newpipe.streams.Mp4DashReader.Mp4Track;\n import org.schabi.newpipe.streams.Mp4DashReader.TrunEntry;\n+import org.schabi.newpipe.streams.Mp4DashReader.TrackKind;\n import org.schabi.newpipe.streams.io.SharpStream;\n \n import java.io.IOException;\n@@ -22,6 +23,7 @@ public class Mp4FromDashWriter {\n     private final static byte SAMPLES_PER_CHUNK = 6;// ffmpeg uses 2, basic uses 1 (with 60fps uses 21 or 22). NewPipe will use 6\n     private final static long THRESHOLD_FOR_CO64 = 0xFFFEFFFFL;// near 3.999 GiB\n     private final static int THRESHOLD_MOOV_LENGTH = (256 * 1024) + (2048 * 1024); // 2.2 MiB enough for: 1080p 60fps 00h35m00s\n+    private final static short SINGLE_CHUNK_SAMPLE_BUFFER = 256;\n \n     private final long time;\n \n@@ -145,7 +147,7 @@ public void build(SharpStream output) throws IOException {\n         //          not allowed for very short tracks (less than 0.5 seconds)\n         //\n         outStream = output;\n-        int read = 8;// mdat box header size\n+        long read = 8;// mdat box header size\n         long totalSampleSize = 0;\n         int[] sampleExtra = new int[readers.length];\n         int[] defaultMediaTime = new int[readers.length];\n@@ -157,6 +159,8 @@ public void build(SharpStream output) throws IOException {\n             tablesInfo[i] = new TablesInfo();\n         }\n \n+        boolean singleChunk = tracks.length == 1 && tracks[0].kind == TrackKind.Audio;\n+\n         //<editor-fold defaultstate=\"expanded\" desc=\"calculate stbl sample tables size and required moov values\">\n         for (int i = 0; i < readers.length; i++) {\n             int samplesSize = 0;\n@@ -210,14 +214,21 @@ public void build(SharpStream output) throws IOException {\n             tablesInfo[i].stco = (tmp / SAMPLES_PER_CHUNK) + 1;// +1 for samples in first chunk\n \n             tmp = tmp % SAMPLES_PER_CHUNK;\n-            if (tmp == 0) {\n+            if (singleChunk) {\n+                // avoid split audio streams in chunks\n+                tablesInfo[i].stsc = 1;\n+                tablesInfo[i].stsc_bEntries = new int[]{\n+                        1, tablesInfo[i].stsz, 1\n+                };\n+                tablesInfo[i].stco = 1;\n+            } else if (tmp == 0) {\n                 tablesInfo[i].stsc = 2;// first chunk (init) and succesive chunks\n                 tablesInfo[i].stsc_bEntries = new int[]{\n                         1, SAMPLES_PER_CHUNK_INIT, 1,\n                         2, SAMPLES_PER_CHUNK, 1\n                 };\n             } else {\n-                tablesInfo[i].stsc = 3;// first chunk (init) and succesive chunks and remain chunk\n+                tablesInfo[i].stsc = 3;// first chunk (init) and successive chunks and remain chunk\n                 tablesInfo[i].stsc_bEntries = new int[]{\n                         1, SAMPLES_PER_CHUNK_INIT, 1,\n                         2, SAMPLES_PER_CHUNK, 1,\n@@ -268,10 +279,10 @@ public void build(SharpStream output) throws IOException {\n         } else {*/\n         if (auxSize > 0) {\n             int length = auxSize;\n-            byte[] buffer = new byte[8 * 1024];// 8 KiB\n+            byte[] buffer = new byte[64 * 1024];// 64 KiB\n             while (length > 0) {\n                 int count = Math.min(length, buffer.length);\n-                outWrite(buffer, 0, count);\n+                outWrite(buffer, count);\n                 length -= count;\n             }\n         }\n@@ -280,7 +291,7 @@ public void build(SharpStream output) throws IOException {\n             outSeek(ftyp_size);\n         }\n \n-        // tablesInfo contais row counts\n+        // tablesInfo contains row counts\n         // and after returning from make_moov() will contain table offsets\n         make_moov(defaultMediaTime, tablesInfo, is64);\n \n@@ -291,7 +302,7 @@ public void build(SharpStream output) throws IOException {\n             writeEntryArray(tablesInfo[i].stsc, tablesInfo[i].stsc_bEntries.length, tablesInfo[i].stsc_bEntries);\n             tablesInfo[i].stsc_bEntries = null;\n             if (tablesInfo[i].ctts > 0) {\n-                sampleCount[i] = 1;// index is not base zero\n+                sampleCount[i] = 1;// the index is not base zero\n                 sampleExtra[i] = -1;\n             }\n         }\n@@ -303,8 +314,8 @@ public void build(SharpStream output) throws IOException {\n         outWrite(make_mdat(totalSampleSize, is64));\n \n         int[] sampleIndex = new int[readers.length];\n-        int[] sizes = new int[SAMPLES_PER_CHUNK];\n-        int[] sync = new int[SAMPLES_PER_CHUNK];\n+        int[] sizes = new int[singleChunk ? SINGLE_CHUNK_SAMPLE_BUFFER : SAMPLES_PER_CHUNK];\n+        int[] sync = new int[singleChunk ? SINGLE_CHUNK_SAMPLE_BUFFER : SAMPLES_PER_CHUNK];\n \n         int written = readers.length;\n         while (written > 0) {\n@@ -317,7 +328,12 @@ public void build(SharpStream output) throws IOException {\n \n                 long chunkOffset = writeOffset;\n                 int syncCount = 0;\n-                int limit = sampleIndex[i] == 0 ? SAMPLES_PER_CHUNK_INIT : SAMPLES_PER_CHUNK;\n+                int limit;\n+                if (singleChunk) {\n+                    limit = SINGLE_CHUNK_SAMPLE_BUFFER;\n+                } else {\n+                    limit = sampleIndex[i] == 0 ? SAMPLES_PER_CHUNK_INIT : SAMPLES_PER_CHUNK;\n+                }\n \n                 int j = 0;\n                 for (; j < limit; j++) {\n@@ -354,7 +370,7 @@ public void build(SharpStream output) throws IOException {\n                         sizes[j] = sample.data.length;\n                     }\n \n-                    outWrite(sample.data, 0, sample.data.length);\n+                    outWrite(sample.data, sample.data.length);\n                 }\n \n                 if (j > 0) {\n@@ -368,10 +384,16 @@ public void build(SharpStream output) throws IOException {\n                         tablesInfo[i].stss = writeEntryArray(tablesInfo[i].stss, syncCount, sync);\n                     }\n \n-                    if (is64) {\n-                        tablesInfo[i].stco = writeEntry64(tablesInfo[i].stco, chunkOffset);\n-                    } else {\n-                        tablesInfo[i].stco = writeEntryArray(tablesInfo[i].stco, 1, (int) chunkOffset);\n+                    if (tablesInfo[i].stco > 0) {\n+                        if (is64) {\n+                            tablesInfo[i].stco = writeEntry64(tablesInfo[i].stco, chunkOffset);\n+                        } else {\n+                            tablesInfo[i].stco = writeEntryArray(tablesInfo[i].stco, 1, (int) chunkOffset);\n+                        }\n+\n+                        if (singleChunk) {\n+                            tablesInfo[i].stco = -1;\n+                        }\n                     }\n \n                     outRestore();\n@@ -451,12 +473,12 @@ private void outRestore() throws IOException {\n \n     // <editor-fold defaultstate=\"expanded\" desc=\"Utils\">\n     private void outWrite(byte[] buffer) throws IOException {\n-        outWrite(buffer, 0, buffer.length);\n+        outWrite(buffer, buffer.length);\n     }\n \n-    private void outWrite(byte[] buffer, int offset, int count) throws IOException {\n+    private void outWrite(byte[] buffer, int count) throws IOException {\n         writeOffset += count;\n-        outStream.write(buffer, offset, count);\n+        outStream.write(buffer, 0, count);\n     }\n \n     private void outSeek(long offset) throws IOException {\n@@ -509,7 +531,6 @@ private int make(int type, int extra, int columns, int rows) throws IOException\n         );\n \n         if (extra >= 0) {\n-            //size += 4;// commented for auxiliar buffer !!!\n             offset += 4;\n             auxWrite(extra);\n         }\n@@ -531,7 +552,7 @@ private void auxWrite(byte[] buffer) throws IOException {\n         if (moovSimulation) {\n             writeOffset += buffer.length;\n         } else if (auxBuffer == null) {\n-            outWrite(buffer, 0, buffer.length);\n+            outWrite(buffer, buffer.length);\n         } else {\n             auxBuffer.put(buffer);\n         }\n@@ -703,7 +724,7 @@ private void make_trak(int index, long duration, int defaultMediaTime, TablesInf\n         int mediaTime;\n \n         if (tracks[index].trak.edst_elst == null) {\n-            // is a audio track \u00bfis edst/elst opcional for audio tracks?\n+            // is a audio track \u00bfis edst/elst optional for audio tracks?\n             mediaTime = 0x00;// ffmpeg set this value as zero, instead of defaultMediaTime\n             bMediaRate = 0x00010000;\n         } else {\n@@ -798,13 +819,13 @@ private byte[] make_hdlr(Hdlr hdlr) {\n \n     class TablesInfo {\n \n-        public int stts;\n-        public int stsc;\n-        public int[] stsc_bEntries;\n-        public int ctts;\n-        public int stsz;\n-        public int stsz_default;\n-        public int stss;\n-        public int stco;\n+        int stts;\n+        int stsc;\n+        int[] stsc_bEntries;\n+        int ctts;\n+        int stsz;\n+        int stsz_default;\n+        int stss;\n+        int stco;\n     }\n }",
      "parent_sha": "86dafdd92b200e295494e335d024f99d950af6cb"
    }
  },
  {
    "oid": "683d9816cb21124cc1f0f04ee26130cb5c4e5a4c",
    "message": "Removed dead code",
    "date": "2022-01-24T20:08:38Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/683d9816cb21124cc1f0f04ee26130cb5c4e5a4c",
    "details": {
      "sha": "4bc5a210efa56b0e328b8ad607c70c8d881d6ad8",
      "filename": "app/src/main/java/org/schabi/newpipe/settings/AppearanceSettingsFragment.java",
      "status": "modified",
      "additions": 1,
      "deletions": 11,
      "changes": 12,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/683d9816cb21124cc1f0f04ee26130cb5c4e5a4c/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fsettings%2FAppearanceSettingsFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/683d9816cb21124cc1f0f04ee26130cb5c4e5a4c/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fsettings%2FAppearanceSettingsFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fsettings%2FAppearanceSettingsFragment.java?ref=683d9816cb21124cc1f0f04ee26130cb5c4e5a4c",
      "patch": "@@ -2,7 +2,6 @@\n \n import android.content.ActivityNotFoundException;\n import android.content.Intent;\n-import android.os.Build;\n import android.os.Bundle;\n import android.provider.Settings;\n import android.widget.Toast;\n@@ -15,10 +14,6 @@\n import org.schabi.newpipe.util.ThemeHelper;\n \n public class AppearanceSettingsFragment extends BasePreferenceFragment {\n-    private static final boolean CAPTIONING_SETTINGS_ACCESSIBLE =\n-            Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT;\n-\n-    private String captionSettingsKey;\n \n     @Override\n     public void onCreatePreferences(final Bundle savedInstanceState, final String rootKey) {\n@@ -51,16 +46,11 @@ public void onCreatePreferences(final Bundle savedInstanceState, final String ro\n         } else {\n             removePreference(nightThemeKey);\n         }\n-\n-        captionSettingsKey = getString(R.string.caption_settings_key);\n-        if (!CAPTIONING_SETTINGS_ACCESSIBLE) {\n-            removePreference(captionSettingsKey);\n-        }\n     }\n \n     @Override\n     public boolean onPreferenceTreeClick(final Preference preference) {\n-        if (preference.getKey().equals(captionSettingsKey) && CAPTIONING_SETTINGS_ACCESSIBLE) {\n+        if (preference.getKey().equals(getString(R.string.caption_settings_key))) {\n             try {\n                 startActivity(new Intent(Settings.ACTION_CAPTIONING_SETTINGS));\n             } catch (final ActivityNotFoundException e) {",
      "parent_sha": "8802582997f61c2ab3e581491986d80b78f7f51d"
    }
  },
  {
    "oid": "51c60e5261434599fe72b406a81f3e6fe85bafc1",
    "message": "Catch errors while processing timestamp-links\n\nOtherwise the complete app crashes, which is bad",
    "date": "2021-08-04T20:35:41Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/51c60e5261434599fe72b406a81f3e6fe85bafc1",
    "details": {
      "sha": "0543829bc571996c724cf35549dbeef0c87effee",
      "filename": "app/src/main/java/org/schabi/newpipe/info_list/holder/CommentsMiniInfoItemHolder.java",
      "status": "modified",
      "additions": 21,
      "deletions": 13,
      "changes": 34,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/51c60e5261434599fe72b406a81f3e6fe85bafc1/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Finfo_list%2Fholder%2FCommentsMiniInfoItemHolder.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/51c60e5261434599fe72b406a81f3e6fe85bafc1/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Finfo_list%2Fholder%2FCommentsMiniInfoItemHolder.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Finfo_list%2Fholder%2FCommentsMiniInfoItemHolder.java?ref=51c60e5261434599fe72b406a81f3e6fe85bafc1",
      "patch": "@@ -5,6 +5,7 @@\n import android.text.method.LinkMovementMethod;\n import android.text.style.URLSpan;\n import android.text.util.Linkify;\n+import android.util.Log;\n import android.view.View;\n import android.view.ViewGroup;\n import android.widget.RelativeLayout;\n@@ -32,6 +33,8 @@\n import de.hdodenhof.circleimageview.CircleImageView;\n \n public class CommentsMiniInfoItemHolder extends InfoItemHolder {\n+    private static final String TAG = \"CommentsMiniIIHolder\";\n+\n     private static final int COMMENT_DEFAULT_LINES = 2;\n     private static final int COMMENT_EXPANDED_LINES = 1000;\n     private static final Pattern PATTERN = Pattern.compile(\"(\\\\d+:)?(\\\\d+)?:(\\\\d+)\");\n@@ -53,20 +56,25 @@ public class CommentsMiniInfoItemHolder extends InfoItemHolder {\n     private final Linkify.TransformFilter timestampLink = new Linkify.TransformFilter() {\n         @Override\n         public String transformUrl(final Matcher match, final String url) {\n-            int timestamp = 0;\n-            final String hours = match.group(1);\n-            final String minutes = match.group(2);\n-            final String seconds = match.group(3);\n-            if (hours != null) {\n-                timestamp += (Integer.parseInt(hours.replace(\":\", \"\")) * 3600);\n-            }\n-            if (minutes != null) {\n-                timestamp += (Integer.parseInt(minutes.replace(\":\", \"\")) * 60);\n-            }\n-            if (seconds != null) {\n-                timestamp += (Integer.parseInt(seconds));\n+            try {\n+                int timestamp = 0;\n+                final String hours = match.group(1);\n+                final String minutes = match.group(2);\n+                final String seconds = match.group(3);\n+                if (hours != null) {\n+                    timestamp += (Integer.parseInt(hours.replace(\":\", \"\")) * 3600);\n+                }\n+                if (minutes != null) {\n+                    timestamp += (Integer.parseInt(minutes.replace(\":\", \"\")) * 60);\n+                }\n+                if (seconds != null) {\n+                    timestamp += (Integer.parseInt(seconds));\n+                }\n+                return streamUrl + url.replace(match.group(0), \"#timestamp=\" + timestamp);\n+            } catch (final Exception ex) {\n+                Log.d(TAG, \"Unable to process url='\" + url + \"' as timestampLink\", ex);\n+                return url;\n             }\n-            return streamUrl + url.replace(match.group(0), \"#timestamp=\" + timestamp);\n         }\n     };\n ",
      "parent_sha": "12e46e0a36cacb50451d0b70c3adaf3e117e30b8"
    }
  },
  {
    "oid": "a6cc13845a70dd80aaa31efa291078c3534cca48",
    "message": "Use Map.of().",
    "date": "2022-07-19T23:09:11Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/a6cc13845a70dd80aaa31efa291078c3534cca48",
    "details": {
      "sha": "d542e1c531cd3e38ff1cbb0289e3ba98e73f39ee",
      "filename": "app/src/main/java/org/schabi/newpipe/player/helper/PlaybackParameterDialog.java",
      "status": "modified",
      "additions": 7,
      "deletions": 12,
      "changes": 19,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/a6cc13845a70dd80aaa31efa291078c3534cca48/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2Fhelper%2FPlaybackParameterDialog.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/a6cc13845a70dd80aaa31efa291078c3534cca48/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2Fhelper%2FPlaybackParameterDialog.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2Fhelper%2FPlaybackParameterDialog.java?ref=a6cc13845a70dd80aaa31efa291078c3534cca48",
      "patch": "@@ -30,7 +30,6 @@\n import org.schabi.newpipe.util.SimpleOnSeekBarChangeListener;\n import org.schabi.newpipe.util.SliderStrategy;\n \n-import java.util.HashMap;\n import java.util.Map;\n import java.util.Objects;\n import java.util.function.Consumer;\n@@ -334,10 +333,8 @@ private void setupPitchControlModeTextView(\n     }\n \n     private Map<Boolean, TextView> getPitchControlModeComponentMappings() {\n-        final Map<Boolean, TextView> mappings = new HashMap<>();\n-        mappings.put(PITCH_CTRL_MODE_PERCENT, binding.pitchControlModePercent);\n-        mappings.put(PITCH_CTRL_MODE_SEMITONE, binding.pitchControlModeSemitone);\n-        return mappings;\n+        return Map.of(PITCH_CTRL_MODE_PERCENT, binding.pitchControlModePercent,\n+                PITCH_CTRL_MODE_SEMITONE, binding.pitchControlModeSemitone);\n     }\n \n     private void changePitchControlMode(final boolean semitones) {\n@@ -407,13 +404,11 @@ private void setupStepTextView(\n     }\n \n     private Map<Double, TextView> getStepSizeComponentMappings() {\n-        final Map<Double, TextView> mappings = new HashMap<>();\n-        mappings.put(STEP_1_PERCENT_VALUE, binding.stepSizeOnePercent);\n-        mappings.put(STEP_5_PERCENT_VALUE, binding.stepSizeFivePercent);\n-        mappings.put(STEP_10_PERCENT_VALUE, binding.stepSizeTenPercent);\n-        mappings.put(STEP_25_PERCENT_VALUE, binding.stepSizeTwentyFivePercent);\n-        mappings.put(STEP_100_PERCENT_VALUE, binding.stepSizeOneHundredPercent);\n-        return mappings;\n+        return Map.of(STEP_1_PERCENT_VALUE, binding.stepSizeOnePercent,\n+                STEP_5_PERCENT_VALUE, binding.stepSizeFivePercent,\n+                STEP_10_PERCENT_VALUE, binding.stepSizeTenPercent,\n+                STEP_25_PERCENT_VALUE, binding.stepSizeTwentyFivePercent,\n+                STEP_100_PERCENT_VALUE, binding.stepSizeOneHundredPercent);\n     }\n \n     private void setStepSizeToUI(final double newStepSize) {",
      "parent_sha": "55a995c4cd5990eb0a6b0058b58e7fa2e16a1c00"
    }
  },
  {
    "oid": "39e04de208839cd29e9e0353582037a8e5a732b8",
    "message": "show radio pin for content filter again",
    "date": "2018-07-18T13:05:49Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/39e04de208839cd29e9e0353582037a8e5a732b8",
    "details": {
      "sha": "77274c96a5b0e16eaf8ab27af05dbb89c4c7778b",
      "filename": "app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/39e04de208839cd29e9e0353582037a8e5a732b8/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2Fsearch%2FSearchFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/39e04de208839cd29e9e0353582037a8e5a732b8/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2Fsearch%2FSearchFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2Fsearch%2FSearchFragment.java?ref=39e04de208839cd29e9e0353582037a8e5a732b8",
      "patch": "@@ -358,9 +358,17 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n             supportActionBar.setDisplayHomeAsUpEnabled(true);\n         }\n \n+        int itemId = 0;\n+        boolean isFirstItem = true;\n         for(String filter : service.getSearchQIHFactory().getAvailableContentFilter()) {\n-            menu.add(filter);\n+            MenuItem item = menu.add(1, itemId++, 0, filter);\n+            if(isFirstItem) {\n+                item.setChecked(true);\n+                isFirstItem = false;\n+            }\n         }\n+        menu.setGroupCheckable(1, true, true);\n+\n         restoreFilterChecked(menu, filterItemCheckedId);\n     }\n ",
      "parent_sha": "14e0dcb085f826e636003e1fe1f9371bb1099bdc"
    }
  },
  {
    "oid": "985f659026b1cbedeb1562a62aec5c77aa5c3eca",
    "message": "Fix empty stream title in minimized player",
    "date": "2021-03-13T19:12:57Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/985f659026b1cbedeb1562a62aec5c77aa5c3eca",
    "details": {
      "sha": "aa0708bd6560f7dac19358d1e369d21dc7b2796a",
      "filename": "app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/985f659026b1cbedeb1562a62aec5c77aa5c3eca/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Fdetail%2FVideoDetailFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/985f659026b1cbedeb1562a62aec5c77aa5c3eca/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Fdetail%2FVideoDetailFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Fdetail%2FVideoDetailFragment.java?ref=985f659026b1cbedeb1562a62aec5c77aa5c3eca",
      "patch": "@@ -2278,7 +2278,7 @@ public void onSlide(@NonNull final View bottomSheet, final float slideOffset) {\n     private void updateOverlayData(@Nullable final String overlayTitle,\n                                    @Nullable final String uploader,\n                                    @Nullable final String thumbnailUrl) {\n-        binding.overlayTitleTextView.setText(isEmpty(title) ? \"\" : title);\n+        binding.overlayTitleTextView.setText(isEmpty(overlayTitle) ? \"\" : overlayTitle);\n         binding.overlayChannelTextView.setText(isEmpty(uploader) ? \"\" : uploader);\n         binding.overlayThumbnail.setImageResource(R.drawable.dummy_thumbnail_dark);\n         if (!isEmpty(thumbnailUrl)) {",
      "parent_sha": "4c31636d191dc5da3b2dcc1a58cf93901ddd398f"
    }
  },
  {
    "oid": "f65c08431c445a4f748e865ce733b9479211a801",
    "message": "support all variants of vnd.youtube url.",
    "date": "2016-06-30T18:21:54Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/f65c08431c445a4f748e865ce733b9479211a801",
    "details": {
      "sha": "4cc50d0c4a088c55523a9d3391d6f0a35c9d70ce",
      "filename": "app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeStreamUrlIdHandler.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/f65c08431c445a4f748e865ce733b9479211a801/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fextractor%2Fservices%2Fyoutube%2FYoutubeStreamUrlIdHandler.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/f65c08431c445a4f748e865ce733b9479211a801/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fextractor%2Fservices%2Fyoutube%2FYoutubeStreamUrlIdHandler.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fextractor%2Fservices%2Fyoutube%2FYoutubeStreamUrlIdHandler.java?ref=f65c08431c445a4f748e865ce733b9479211a801",
      "patch": "@@ -55,7 +55,7 @@ public String getVideoId(String url) throws ParsingException, IllegalArgumentExc\n             }\n             else if(url.contains(\"vnd.youtube\"))\n             {\n-                id = Parser.matchGroup1(\"vnd.youtube\\\\:([\\\\-a-zA-Z0-9_]{11}).*\", url);\n+                id = Parser.matchGroup1(\"([\\\\-a-zA-Z0-9_]{11}).*\", url);\n             }\n             else {\n                 id = Parser.matchGroup1(\"[?&]v=([\\\\-a-zA-Z0-9_]{11})\", url);",
      "parent_sha": "4cde97e65d1e079ee899c5ec1fec98890ee1794d"
    }
  },
  {
    "oid": "1e076ea63d776f76c36934669545c7e4f2ec6838",
    "message": "Wrap debug log in if(DEBUG)",
    "date": "2022-06-18T16:09:12Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/1e076ea63d776f76c36934669545c7e4f2ec6838",
    "details": {
      "sha": "88f25e194efcf936b5b9afc0e2358d731e9932b5",
      "filename": "app/src/main/java/org/schabi/newpipe/player/helper/PlayerDataSource.java",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/1e076ea63d776f76c36934669545c7e4f2ec6838/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2Fhelper%2FPlayerDataSource.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/1e076ea63d776f76c36934669545c7e4f2ec6838/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2Fhelper%2FPlayerDataSource.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2Fhelper%2FPlayerDataSource.java?ref=1e076ea63d776f76c36934669545c7e4f2ec6838",
      "patch": "@@ -1,5 +1,7 @@\n package org.schabi.newpipe.player.helper;\n \n+import static org.schabi.newpipe.MainActivity.DEBUG;\n+\n import android.content.Context;\n import android.util.Log;\n \n@@ -199,7 +201,9 @@ private static YoutubeHttpDataSource.Factory getYoutubeHttpDataSourceFactory(\n     private static void instantiateCacheIfNeeded(final Context context) {\n         if (cache == null) {\n             final File cacheDir = new File(context.getExternalCacheDir(), CACHE_FOLDER_NAME);\n-            Log.d(TAG, \"instantiateCacheIfNeeded: cacheDir = \" + cacheDir.getAbsolutePath());\n+            if (DEBUG) {\n+                Log.d(TAG, \"instantiateCacheIfNeeded: cacheDir = \" + cacheDir.getAbsolutePath());\n+            }\n             if (!cacheDir.exists() && !cacheDir.mkdir()) {\n                 Log.w(TAG, \"instantiateCacheIfNeeded: could not create cache dir\");\n             }",
      "parent_sha": "4863084fa2565f674a0eedcff429abdabda60185"
    }
  },
  {
    "oid": "7667b2ce59ce76be93830d390284be624bce3ba5",
    "message": "Fix restoring orientation in onBack",
    "date": "2021-09-19T17:09:11Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/7667b2ce59ce76be93830d390284be624bce3ba5",
    "details": {
      "sha": "324ee37a860c8c54b3b30f0374302d99a2942523",
      "filename": "app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java",
      "status": "modified",
      "additions": 8,
      "deletions": 11,
      "changes": 19,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/7667b2ce59ce76be93830d390284be624bce3ba5/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Fdetail%2FVideoDetailFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/7667b2ce59ce76be93830d390284be624bce3ba5/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Fdetail%2FVideoDetailFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Fdetail%2FVideoDetailFragment.java?ref=7667b2ce59ce76be93830d390284be624bce3ba5",
      "patch": "@@ -742,20 +742,19 @@ public boolean onBackPressed() {\n                 && player.getPlayQueue() != null\n                 && player.videoPlayerSelected()\n                 && player.getPlayQueue().previous()) {\n-            return true;\n+            return true; // no code here, as previous() was used in the if\n         }\n+\n         // That means that we are on the start of the stack,\n-        // return false to let the MainActivity handle the onBack\n         if (stack.size() <= 1) {\n             restoreDefaultOrientation();\n-\n-            return false;\n+            return false; // let MainActivity handle the onBack (e.g. to minimize the mini player)\n         }\n+\n         // Remove top\n         stack.pop();\n         // Get stack item from the new top\n-        assert stack.peek() != null;\n-        setupFromHistoryItem(stack.peek());\n+        setupFromHistoryItem(Objects.requireNonNull(stack.peek()));\n \n         return true;\n     }\n@@ -1432,17 +1431,15 @@ public void onReceive(final Context context, final Intent intent) {\n     //////////////////////////////////////////////////////////////////////////*/\n \n     private void restoreDefaultOrientation() {\n-        if (!isPlayerAvailable() || !player.videoPlayerSelected() || activity == null) {\n-            return;\n+        if (isPlayerAvailable() && player.videoPlayerSelected()) {\n+            toggleFullscreenIfInFullscreenMode();\n         }\n \n-        toggleFullscreenIfInFullscreenMode();\n-\n         // This will show systemUI and pause the player.\n         // User can tap on Play button and video will be in fullscreen mode again\n         // Note for tablet: trying to avoid orientation changes since it's not easy\n         // to physically rotate the tablet every time\n-        if (!DeviceUtils.isTablet(activity)) {\n+        if (activity != null && !DeviceUtils.isTablet(activity)) {\n             activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED);\n         }\n     }",
      "parent_sha": "9346f9b0f3f246fec1acfe3a633044e575bb1c20"
    }
  },
  {
    "oid": "7f88c3d0a93e9f6ec31c57feb6eb5b080b9784bd",
    "message": "roleback wrong fix",
    "date": "2017-12-29T23:27:29Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/7f88c3d0a93e9f6ec31c57feb6eb5b080b9784bd",
    "details": {
      "sha": "482f8f8039baf986609f889d00024b5402a34163",
      "filename": "app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/7f88c3d0a93e9f6ec31c57feb6eb5b080b9784bd/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FBackgroundPlayer.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/7f88c3d0a93e9f6ec31c57feb6eb5b080b9784bd/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FBackgroundPlayer.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FBackgroundPlayer.java?ref=7f88c3d0a93e9f6ec31c57feb6eb5b080b9784bd",
      "patch": "@@ -180,8 +180,7 @@ private NotificationCompat.Builder createNotification() {\n                 .setSmallIcon(R.drawable.ic_newpipe_triangle_white)\n                 .setVisibility(NotificationCompat.VISIBILITY_PUBLIC)\n                 .setCustomContentView(notRemoteView)\n-                .setCustomBigContentView(bigNotRemoteView)\n-                .setContentIntent(NavigationHelper.getServicePlayerControlPendingIntent(this, BackgroundPlayerActivity.class));\n+                .setCustomBigContentView(bigNotRemoteView);\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.JELLY_BEAN) builder.setPriority(NotificationCompat.PRIORITY_MAX);\n         return builder;\n     }\n@@ -454,6 +453,7 @@ protected void setupBroadcastReceiver(IntentFilter intentFilter) {\n             super.setupBroadcastReceiver(intentFilter);\n             intentFilter.addAction(ACTION_CLOSE);\n             intentFilter.addAction(ACTION_PLAY_PAUSE);\n+            intentFilter.addAction(ACTION_OPEN_CONTROLS);\n             intentFilter.addAction(ACTION_REPEAT);\n             intentFilter.addAction(ACTION_PLAY_PREVIOUS);\n             intentFilter.addAction(ACTION_PLAY_NEXT);\n@@ -478,6 +478,9 @@ public void onBroadcastReceived(Intent intent) {\n                 case ACTION_PLAY_PAUSE:\n                     onVideoPlayPause();\n                     break;\n+                case ACTION_OPEN_CONTROLS:\n+                    NavigationHelper.openBackgroundPlayerControl(getApplicationContext());\n+                    break;\n                 case ACTION_REPEAT:\n                     onRepeatClicked();\n                     break;",
      "parent_sha": "11e8e38f2cf879f6f4a4d62ed6278dcbe17e3b9f"
    }
  },
  {
    "oid": "c100d15ba8324019b100e537b7c68fba3b427cd9",
    "message": "Fix bug when fetching unavailable content\n\n- Fix #482\r\n- When opening a invalid/deleted/unavailable video, the popup was just printing the error, now it shows a message to the user and exits",
    "date": "2017-03-17T14:50:27Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/c100d15ba8324019b100e537b7c68fba3b427cd9",
    "details": {
      "sha": "7d6345a8aadd26427a0f9d48988f8a51e849e011",
      "filename": "app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java",
      "status": "modified",
      "additions": 9,
      "deletions": 2,
      "changes": 11,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/c100d15ba8324019b100e537b7c68fba3b427cd9/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FPopupVideoPlayer.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/c100d15ba8324019b100e537b7c68fba3b427cd9/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FPopupVideoPlayer.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FPopupVideoPlayer.java?ref=c100d15ba8324019b100e537b7c68fba3b427cd9",
      "patch": "@@ -819,8 +819,15 @@ public void run() {\n                     }\n                 });\n             } catch (Exception e) {\n-                e.printStackTrace();\n+                if (DEBUG) e.printStackTrace();\n+                mainHandler.post(new Runnable() {\n+                    @Override\n+                    public void run() {\n+                        Toast.makeText(PopupVideoPlayer.this, R.string.content_not_available, Toast.LENGTH_SHORT).show();\n+                    }\n+                });\n+                stopSelf();\n             }\n         }\n     }\n-}\n\\ No newline at end of file\n+}",
      "parent_sha": "16b757d9a341178d3ba38e20d8abcaf1512ae0ab"
    }
  },
  {
    "oid": "b175774ad882eaec1530d329ddcc104c5500aca8",
    "message": "Try to amicably handle DialogFragment in FragmentManager when recreated from orientation change\n- Handle finish() call instead of passing around callbacks to setOnDismissListener()\n- Don't start over again if returning to DialogFragment before orientation change",
    "date": "2023-01-11T13:53:48Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/b175774ad882eaec1530d329ddcc104c5500aca8",
    "details": {
      "sha": "0c4cff8d1f7873bec09f722ff0486fe89a827f32",
      "filename": "app/src/main/java/org/schabi/newpipe/RouterActivity.java",
      "status": "modified",
      "additions": 34,
      "deletions": 7,
      "changes": 41,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/b175774ad882eaec1530d329ddcc104c5500aca8/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FRouterActivity.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/b175774ad882eaec1530d329ddcc104c5500aca8/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FRouterActivity.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FRouterActivity.java?ref=b175774ad882eaec1530d329ddcc104c5500aca8",
      "patch": "@@ -31,6 +31,7 @@\n import androidx.core.app.NotificationCompat;\n import androidx.core.app.ServiceCompat;\n import androidx.core.math.MathUtils;\n+import androidx.fragment.app.Fragment;\n import androidx.fragment.app.FragmentManager;\n import androidx.preference.PreferenceManager;\n \n@@ -151,7 +152,32 @@ protected void onSaveInstanceState(@NonNull final Bundle outState) {\n     protected void onStart() {\n         super.onStart();\n \n-        handleUrl(currentUrl);\n+        // FragmentManager will take care to recreate DialogFragments when screen rotates\n+        // currently that's namely PlaylistDialog or DownloadDialog\n+        // We used to .setOnDismissListener(dialog ->finish()); when creating those Dialogs\n+        // but those callbacks won't survive a config change\n+        // Try an alternate approach to hook into FragmentManager instead, to that effect\n+        // (courtesy of https://stackoverflow.com/a/44028453)\n+        final FragmentManager fm = getSupportFragmentManager();\n+        fm.registerFragmentLifecycleCallbacks(new FragmentManager.FragmentLifecycleCallbacks() {\n+            @Override\n+            public void onFragmentViewDestroyed(@NonNull final FragmentManager fm,\n+                                                @NonNull final Fragment f) {\n+                super.onFragmentViewDestroyed(fm, f);\n+                if (fm.getFragments().isEmpty()) {\n+                    // No more Dialog, we're done\n+                    finish();\n+                }\n+            }\n+        }, false);\n+\n+        // Don't overlap the DialogFragment after rotating the screen\n+        // If there's no DialogFragment, we're either starting afresh\n+        // or we didn't make it to PlaylistDialog or DownloadDialog before the orientation change\n+        if (fm.getFragments().isEmpty()) {\n+            // Start over from scratch\n+            handleUrl(currentUrl);\n+        }\n     }\n \n     @Override\n@@ -659,12 +685,12 @@ private void openAddToPlaylistDialog() {\n                                 getThemeWrapperContext(),\n                                 List.of(new StreamEntity(info)),\n                                 playlistDialog -> {\n-                                    playlistDialog.setOnDismissListener(dialog -> finish());\n+                                    // to be handled by FragmentManager\n+                                    // playlistDialog.setOnDismissListener(dialog ->finish());\n \n-                                    playlistDialog.show(\n-                                            this.getSupportFragmentManager(),\n-                                            \"addToPlaylistDialog\"\n-                                    );\n+                                    final FragmentManager fm = getSupportFragmentManager();\n+                                    playlistDialog.show(fm, \"addToPlaylistDialog\");\n+                                    fm.executePendingTransactions();\n                                 }\n                         ),\n                         throwable -> handleError(this, new ErrorInfo(\n@@ -684,7 +710,8 @@ private void openDownloadDialog() {\n                 .observeOn(AndroidSchedulers.mainThread())\n                 .subscribe(result -> {\n                     final DownloadDialog downloadDialog = new DownloadDialog(this, result);\n-                    downloadDialog.setOnDismissListener(dialog -> finish());\n+                    // to be handled by FragmentManager since listener would be gone when recreated\n+                    // playlistDialog.setOnDismissListener(dialog ->finish());\n \n                     final FragmentManager fm = getSupportFragmentManager();\n                     downloadDialog.show(fm, \"downloadDialog\");",
      "parent_sha": "73e32889b674d9344306b7494247529d0a3925d6"
    }
  },
  {
    "oid": "596443bf5e68a24f6e61218db87a0599811ac573",
    "message": "added licensing notice to MediaFormat",
    "date": "2015-11-10T17:23:07Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/596443bf5e68a24f6e61218db87a0599811ac573",
    "details": {
      "sha": "fb2a508c5fe38def94a2802a34b3441225396a19",
      "filename": "app/src/main/java/org/schabi/newpipe/MediaFormat.java",
      "status": "modified",
      "additions": 19,
      "deletions": 1,
      "changes": 20,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/596443bf5e68a24f6e61218db87a0599811ac573/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FMediaFormat.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/596443bf5e68a24f6e61218db87a0599811ac573/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FMediaFormat.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FMediaFormat.java?ref=596443bf5e68a24f6e61218db87a0599811ac573",
      "patch": "@@ -1,7 +1,25 @@\n package org.schabi.newpipe;\n \n /**\n- * Created by scc on 08/11/15.\n+ * Created by Adam Howard on 08/11/15.\n+ *\n+ * Copyright (c) Christian Schabesberger <chris.schabesberger@mailbox.org>\n+ *     and Adam Howard <achdisposable1@gmail.com> 2015\n+ *\n+ * VideoListAdapter.java is part of NewPipe.\n+ *\n+ * NewPipe is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * NewPipe is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with NewPipe.  If not, see <http://www.gnu.org/licenses/>.\n  */\n public enum MediaFormat {\n     //           id      name    suffix  mime type",
      "parent_sha": "27b450f1e30a421b9bdf7d36193bd818aa8f809a"
    }
  },
  {
    "oid": "df2bb228c5ed6a7d5d39c8f342865c3578c81614",
    "message": "Much Simpler Fix",
    "date": "2019-10-15T15:11:04Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/df2bb228c5ed6a7d5d39c8f342865c3578c81614",
    "details": {
      "sha": "4a7ff06d2f862ca2a8f804387de22b8af0349a03",
      "filename": "app/src/main/java/org/schabi/newpipe/database/playlist/model/PlaylistRemoteEntity.java",
      "status": "modified",
      "additions": 2,
      "deletions": 9,
      "changes": 11,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/df2bb228c5ed6a7d5d39c8f342865c3578c81614/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fdatabase%2Fplaylist%2Fmodel%2FPlaylistRemoteEntity.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/df2bb228c5ed6a7d5d39c8f342865c3578c81614/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fdatabase%2Fplaylist%2Fmodel%2FPlaylistRemoteEntity.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fdatabase%2Fplaylist%2Fmodel%2FPlaylistRemoteEntity.java?ref=df2bb228c5ed6a7d5d39c8f342865c3578c81614",
      "patch": "@@ -83,17 +83,10 @@ public boolean isIdenticalTo(final PlaylistInfo info) {\n          * (False if info changed such as playlist name or track count)\n          */\n         boolean returnMe = true;\n-        String uploaderAction = \"\";\n-        if (!TextUtils.isEmpty(getUploader()) || !TextUtils.isEmpty(info.getUploaderName())) { // We have an uploader, add it to the comparison\n-            returnMe &= getUploader().equals(info.getUploaderName()); // Use .equals for uploader names\n-            uploaderAction = \"compared uploaders: \"+returnMe;\n-        } else {\n-            uploaderAction = \"no uploader\";\n-        }\n         returnMe &= getServiceId() == info.getServiceId() && getName().equals(info.getName()) &&\n                 getStreamCount() == info.getStreamCount() && getUrl().equals(info.getUrl()) &&\n-                getThumbnailUrl().equals(info.getThumbnailUrl());\n-        if (DEBUG) Log.d(TAG, TAG+\"() called with result: returnMe = \"+returnMe+\". and uploaderAction: \"+uploaderAction);\n+                getThumbnailUrl().equals(info.getThumbnailUrl()) && TextUtils.equals(getUploader(), info.getUploaderName());\n+        if (DEBUG) Log.d(TAG, TAG+\"() called with result: returnMe = \"+returnMe);\n         return returnMe;\n     }\n ",
      "parent_sha": "49db47c12c9021d6d2da965f99c303d2a4725366"
    }
  },
  {
    "oid": "4c7b5d44a040d31b1ebf95d39838a9e2f06d453c",
    "message": "[Regression] Fix videos added multiple times to detail fragment stack",
    "date": "2020-11-15T21:23:47Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/4c7b5d44a040d31b1ebf95d39838a9e2f06d453c",
    "details": {
      "sha": "67bc51c58c7cd26b8039f7bbda37d043b3f9143f",
      "filename": "app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/4c7b5d44a040d31b1ebf95d39838a9e2f06d453c/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Fdetail%2FVideoDetailFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/4c7b5d44a040d31b1ebf95d39838a9e2f06d453c/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Fdetail%2FVideoDetailFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Fdetail%2FVideoDetailFragment.java?ref=4c7b5d44a040d31b1ebf95d39838a9e2f06d453c",
      "patch": "@@ -1756,7 +1756,7 @@ public void onQueueUpdate(final PlayQueue queue) {\n         // deleted/added items inside Channel/Playlist queue and makes possible to have\n         // a history of played items\n         @Nullable final StackItem stackPeek = stack.peek();\n-        if (stackPeek != null && stackPeek.getPlayQueue().equals(queue)) {\n+        if (stackPeek != null && !stackPeek.getPlayQueue().equals(queue)) {\n             @Nullable final PlayQueueItem playQueueItem = queue.getItem();\n             if (playQueueItem != null) {\n                 stack.push(new StackItem(playQueueItem.getServiceId(), playQueueItem.getUrl(),",
      "parent_sha": "620bb54881d3b759ecade9f7cbbd15288ced7c6b"
    }
  },
  {
    "oid": "ae39b31c683552502a815889626742d7e32f4bae",
    "message": "Fix onActivityResult deprecation in DownloadDialog",
    "date": "2021-06-20T18:14:44Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/ae39b31c683552502a815889626742d7e32f4bae",
    "details": {
      "sha": "af8c1b258d422991f6ac543f14382dd7a2c1b38a",
      "filename": "app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java",
      "status": "modified",
      "additions": 77,
      "deletions": 57,
      "changes": 134,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/ae39b31c683552502a815889626742d7e32f4bae/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fdownload%2FDownloadDialog.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/ae39b31c683552502a815889626742d7e32f4bae/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fdownload%2FDownloadDialog.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fdownload%2FDownloadDialog.java?ref=ae39b31c683552502a815889626742d7e32f4bae",
      "patch": "@@ -20,6 +20,9 @@\n import android.widget.SeekBar;\n import android.widget.Toast;\n \n+import androidx.activity.result.ActivityResult;\n+import androidx.activity.result.ActivityResultLauncher;\n+import androidx.activity.result.contract.ActivityResultContracts.StartActivityForResult;\n import androidx.annotation.IdRes;\n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n@@ -82,9 +85,6 @@ public class DownloadDialog extends DialogFragment\n         implements RadioGroup.OnCheckedChangeListener, AdapterView.OnItemSelectedListener {\n     private static final String TAG = \"DialogFragment\";\n     private static final boolean DEBUG = MainActivity.DEBUG;\n-    private static final int REQUEST_DOWNLOAD_SAVE_AS = 0x1230;\n-    private static final int REQUEST_DOWNLOAD_PICK_VIDEO_FOLDER = 0x789E;\n-    private static final int REQUEST_DOWNLOAD_PICK_AUDIO_FOLDER = 0x789F;\n \n     @State\n     StreamInfo currentInfo;\n@@ -122,6 +122,16 @@ public class DownloadDialog extends DialogFragment\n     private String filenameTmp;\n     private String mimeTmp;\n \n+    private final ActivityResultLauncher<Intent> requestDownloadSaveAsLauncher =\n+            registerForActivityResult(\n+                    new StartActivityForResult(), this::requestDownloadSaveAsResult);\n+    private final ActivityResultLauncher<Intent> requestDownloadPickAudioFolderLauncher =\n+            registerForActivityResult(\n+                    new StartActivityForResult(), this::requestDownloadPickAudioFolderResult);\n+    private final ActivityResultLauncher<Intent> requestDownloadPickVideoFolderLauncher =\n+            registerForActivityResult(\n+                    new StartActivityForResult(), this::requestDownloadPickVideoFolderResult);\n+\n     public static DownloadDialog newInstance(final StreamInfo info) {\n         final DownloadDialog dialog = new DownloadDialog();\n         dialog.setInfo(info);\n@@ -372,67 +382,75 @@ public void onSaveInstanceState(@NonNull final Bundle outState) {\n     // Streams Spinner Listener\n     //////////////////////////////////////////////////////////////////////////*/\n \n-    @Override\n-    public void onActivityResult(final int requestCode, final int resultCode, final Intent data) {\n-        super.onActivityResult(requestCode, resultCode, data);\n+    private void requestDownloadPickAudioFolderResult(final ActivityResult result) {\n+        requestDownloadPickFolderResult(\n+                result, getString(R.string.download_path_audio_key), DownloadManager.TAG_AUDIO);\n+    }\n+\n+    private void requestDownloadPickVideoFolderResult(final ActivityResult result) {\n+        requestDownloadPickFolderResult(\n+                result, getString(R.string.download_path_video_key), DownloadManager.TAG_VIDEO);\n+    }\n \n-        if (resultCode != Activity.RESULT_OK) {\n+    private void requestDownloadSaveAsResult(final ActivityResult result) {\n+        if (result.getResultCode() != Activity.RESULT_OK) {\n             return;\n         }\n \n-        if (data.getData() == null) {\n+        if (result.getData() == null || result.getData().getData() == null) {\n             showFailedDialog(R.string.general_error);\n             return;\n         }\n \n-        if (requestCode == REQUEST_DOWNLOAD_SAVE_AS) {\n-            if (FilePickerActivityHelper.isOwnFileUri(context, data.getData())) {\n-                final File file = Utils.getFileForUri(data.getData());\n-                checkSelectedDownload(null, Uri.fromFile(file), file.getName(),\n-                        StoredFileHelper.DEFAULT_MIME);\n-                return;\n-            }\n+        if (FilePickerActivityHelper.isOwnFileUri(context, result.getData().getData())) {\n+            final File file = Utils.getFileForUri(result.getData().getData());\n+            checkSelectedDownload(null, Uri.fromFile(file), file.getName(),\n+                    StoredFileHelper.DEFAULT_MIME);\n+            return;\n+        }\n \n-            final DocumentFile docFile = DocumentFile.fromSingleUri(context, data.getData());\n-            if (docFile == null) {\n-                showFailedDialog(R.string.general_error);\n-                return;\n-            }\n+        final DocumentFile docFile\n+                = DocumentFile.fromSingleUri(context, result.getData().getData());\n+        if (docFile == null) {\n+            showFailedDialog(R.string.general_error);\n+            return;\n+        }\n \n-            // check if the selected file was previously used\n-            checkSelectedDownload(null, data.getData(), docFile.getName(),\n-                    docFile.getType());\n-        } else if (requestCode == REQUEST_DOWNLOAD_PICK_AUDIO_FOLDER\n-                || requestCode == REQUEST_DOWNLOAD_PICK_VIDEO_FOLDER) {\n-            Uri uri = data.getData();\n-            if (FilePickerActivityHelper.isOwnFileUri(context, uri)) {\n-                uri = Uri.fromFile(Utils.getFileForUri(uri));\n-            } else {\n-                context.grantUriPermission(context.getPackageName(), uri,\n-                        StoredDirectoryHelper.PERMISSION_FLAGS);\n-            }\n+        // check if the selected file was previously used\n+        checkSelectedDownload(null, result.getData().getData(), docFile.getName(),\n+                docFile.getType());\n+    }\n \n-            final String key;\n-            final String tag;\n-            if (requestCode == REQUEST_DOWNLOAD_PICK_AUDIO_FOLDER) {\n-                key = getString(R.string.download_path_audio_key);\n-                tag = DownloadManager.TAG_AUDIO;\n-            } else {\n-                key = getString(R.string.download_path_video_key);\n-                tag = DownloadManager.TAG_VIDEO;\n-            }\n+    private void requestDownloadPickFolderResult(final ActivityResult result,\n+                                                 final String key,\n+                                                 final String tag) {\n+        if (result.getResultCode() != Activity.RESULT_OK) {\n+            return;\n+        }\n \n-            PreferenceManager.getDefaultSharedPreferences(context).edit()\n-                    .putString(key, uri.toString()).apply();\n+        if (result.getData() == null || result.getData().getData() == null) {\n+            showFailedDialog(R.string.general_error);\n+            return;\n+        }\n \n-            try {\n-                final StoredDirectoryHelper mainStorage\n-                        = new StoredDirectoryHelper(context, uri, tag);\n-                checkSelectedDownload(mainStorage, mainStorage.findFile(filenameTmp),\n-                        filenameTmp, mimeTmp);\n-            } catch (final IOException e) {\n-                showFailedDialog(R.string.general_error);\n-            }\n+        Uri uri = result.getData().getData();\n+        if (FilePickerActivityHelper.isOwnFileUri(context, uri)) {\n+            uri = Uri.fromFile(Utils.getFileForUri(uri));\n+        } else {\n+            context.grantUriPermission(context.getPackageName(), uri,\n+                    StoredDirectoryHelper.PERMISSION_FLAGS);\n+        }\n+\n+        PreferenceManager.getDefaultSharedPreferences(context).edit()\n+                .putString(key, uri.toString()).apply();\n+\n+        try {\n+            final StoredDirectoryHelper mainStorage\n+                    = new StoredDirectoryHelper(context, uri, tag);\n+            checkSelectedDownload(mainStorage, mainStorage.findFile(filenameTmp),\n+                    filenameTmp, mimeTmp);\n+        } catch (final IOException e) {\n+            showFailedDialog(R.string.general_error);\n         }\n     }\n \n@@ -637,6 +655,10 @@ private void showFailedDialog(@StringRes final int msg) {\n                 .show();\n     }\n \n+    private void launchDirectoryPicker(final ActivityResultLauncher<Intent> launcher) {\n+        launcher.launch(StoredDirectoryHelper.getPicker(context));\n+    }\n+\n     private void prepareSelectedDownload() {\n         final StoredDirectoryHelper mainStorage;\n         final MediaFormat format;\n@@ -691,11 +713,9 @@ private void prepareSelectedDownload() {\n                     Toast.LENGTH_LONG).show();\n \n             if (dialogBinding.videoAudioGroup.getCheckedRadioButtonId() == R.id.audio_button) {\n-                startActivityForResult(StoredDirectoryHelper.getPicker(context),\n-                        REQUEST_DOWNLOAD_PICK_AUDIO_FOLDER);\n+                launchDirectoryPicker(requestDownloadPickAudioFolderLauncher);\n             } else {\n-                startActivityForResult(StoredDirectoryHelper.getPicker(context),\n-                        REQUEST_DOWNLOAD_PICK_VIDEO_FOLDER);\n+                launchDirectoryPicker(requestDownloadPickVideoFolderLauncher);\n             }\n \n             return;\n@@ -715,8 +735,8 @@ private void prepareSelectedDownload() {\n                 initialPath = Uri.parse(initialSavePath.getAbsolutePath());\n             }\n \n-            startActivityForResult(StoredFileHelper.getNewPicker(context,\n-                    filenameTmp, mimeTmp, initialPath), REQUEST_DOWNLOAD_SAVE_AS);\n+            requestDownloadSaveAsLauncher.launch(StoredFileHelper.getNewPicker(context,\n+                    filenameTmp, mimeTmp, initialPath));\n \n             return;\n         }",
      "parent_sha": "e5a143867347e6cc289ed3e6306875f2e015a4d6"
    }
  },
  {
    "oid": "0fa2e76c3e396d9456215bd9f5784b3531691107",
    "message": "Fix NPE when ChannelTabLHFactory not implemented for a service\n\nFixes #10698",
    "date": "2023-12-26T15:55:52Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/0fa2e76c3e396d9456215bd9f5784b3531691107",
    "details": {
      "sha": "95ac42eed08849640d508f9b574aa9c6466d6484",
      "filename": "app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelTabFragment.java",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/0fa2e76c3e396d9456215bd9f5784b3531691107/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2Fchannel%2FChannelTabFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/0fa2e76c3e396d9456215bd9f5784b3531691107/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2Fchannel%2FChannelTabFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2Fchannel%2FChannelTabFragment.java?ref=0fa2e76c3e396d9456215bd9f5784b3531691107",
      "patch": "@@ -17,6 +17,7 @@\n import org.schabi.newpipe.extractor.channel.tabs.ChannelTabInfo;\n import org.schabi.newpipe.extractor.exceptions.ParsingException;\n import org.schabi.newpipe.extractor.linkhandler.ListLinkHandler;\n+import org.schabi.newpipe.extractor.linkhandler.ListLinkHandlerFactory;\n import org.schabi.newpipe.extractor.linkhandler.ReadyChannelTabListLinkHandler;\n import org.schabi.newpipe.extractor.stream.StreamInfoItem;\n import org.schabi.newpipe.fragments.list.BaseListInfoFragment;\n@@ -128,10 +129,13 @@ public void handleResult(@NonNull final ChannelTabInfo result) {\n                 // once `handleResult` is called, the parsed data was already saved to cache, so\n                 // we can discard any raw data in ReadyChannelTabListLinkHandler and create a\n                 // link handler with identical properties, but without any raw data\n-                tabHandler = result.getService()\n-                        .getChannelTabLHFactory()\n-                        .fromQuery(tabHandler.getId(), tabHandler.getContentFilters(),\n-                                tabHandler.getSortFilter());\n+                final ListLinkHandlerFactory channelTabLHFactory = result.getService()\n+                        .getChannelTabLHFactory();\n+                if (channelTabLHFactory != null) {\n+                    // some services do not not have a ChannelTabLHFactory\n+                    tabHandler = channelTabLHFactory.fromQuery(tabHandler.getId(),\n+                            tabHandler.getContentFilters(), tabHandler.getSortFilter());\n+                }\n             } catch (final ParsingException e) {\n                 // silently ignore the error, as the app can continue to function normally\n                 Log.w(TAG, \"Could not recreate channel tab handler\", e);",
      "parent_sha": "67629938d68682f3ccb6e047a4dc0af32dbbd116"
    }
  },
  {
    "oid": "a64f5206446edc396b99e23e2c213900b285480a",
    "message": "fix item addition to list",
    "date": "2019-08-07T16:57:58Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/a64f5206446edc396b99e23e2c213900b285480a",
    "details": {
      "sha": "17ac919d91eb95f315f56b47e023ec0f1e505e8c",
      "filename": "app/src/main/java/org/schabi/newpipe/info_list/StateObjectsListAdapter.java",
      "status": "modified",
      "additions": 24,
      "deletions": 33,
      "changes": 57,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/a64f5206446edc396b99e23e2c213900b285480a/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Finfo_list%2FStateObjectsListAdapter.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/a64f5206446edc396b99e23e2c213900b285480a/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Finfo_list%2FStateObjectsListAdapter.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Finfo_list%2FStateObjectsListAdapter.java?ref=a64f5206446edc396b99e23e2c213900b285480a",
      "patch": "@@ -75,53 +75,44 @@ protected void moveState(int from, int to) {\n \n \tprotected void loadStates(List<InfoItem> list, int offset, Runnable callback) {\n \t\tif (isPlaybackStatesVisible()) {\n-\t\t\tstateLoaders.add(\n-\t\t\t\t\trecordManager.loadStreamStateBatch(list)\n-\t\t\t\t\t\t\t.observeOn(AndroidSchedulers.mainThread())\n-\t\t\t\t\t\t\t.subscribe(streamStateEntities -> {\n-\t\t\t\t\t\t\t\tappendStates(streamStateEntities, offset);\n-\t\t\t\t\t\t\t\tcallback.run();\n-\t\t\t\t\t\t\t}, throwable -> {\n-\t\t\t\t\t\t\t\tif (BuildConfig.DEBUG) throwable.printStackTrace();\n-\t\t\t\t\t\t\t\tcallback.run();\n-\t\t\t\t\t\t\t})\n-\t\t\t);\n+\t\t\tList<StreamStateEntity> streamStateEntities = null;\n+\t\t\ttry {\n+\t\t\t\tstreamStateEntities = recordManager.loadStreamStateBatch(list).blockingGet();\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tif (BuildConfig.DEBUG) e.printStackTrace();\n+\t\t\t}\n+\t\t\tif(streamStateEntities != null) appendStates(streamStateEntities, offset);\n+\t\t\tcallback.run();\n \t\t} else {\n \t\t\tcallback.run();\n \t\t}\n \t}\n \n \tprotected void loadState(InfoItem item, int offset, Runnable callback) {\n \t\tif (isPlaybackStatesVisible()) {\n-\t\t\tstateLoaders.add(\n-\t\t\t\t\trecordManager.loadStreamState(item)\n-\t\t\t\t\t\t\t.observeOn(AndroidSchedulers.mainThread())\n-\t\t\t\t\t\t\t.subscribe(streamStateEntities -> {\n-\t\t\t\t\t\t\t\tappendState(streamStateEntities[0], offset);\n-\t\t\t\t\t\t\t\tcallback.run();\n-\t\t\t\t\t\t\t}, throwable -> {\n-\t\t\t\t\t\t\t\tif (BuildConfig.DEBUG) throwable.printStackTrace();\n-\t\t\t\t\t\t\t\tcallback.run();\n-\t\t\t\t\t\t\t})\n-\t\t\t);\n+\t\t\tStreamStateEntity[] streamStateEntities = null;\n+\t\t\ttry {\n+\t\t\t\tstreamStateEntities = recordManager.loadStreamState(item).blockingGet();\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tif (BuildConfig.DEBUG) e.printStackTrace();\n+\t\t\t}\n+\t\t\tif(streamStateEntities != null && streamStateEntities.length > 0) appendState(streamStateEntities[0], offset);\n+\t\t\tcallback.run();\n \t\t} else {\n \t\t\tcallback.run();\n \t\t}\n \t}\n \n \tprotected void loadStatesForLocal(List<? extends LocalItem> list, int offset, Runnable callback) {\n \t\tif (isPlaybackStatesVisible()) {\n-\t\t\tstateLoaders.add(\n-\t\t\t\t\trecordManager.loadLocalStreamStateBatch(list)\n-\t\t\t\t\t\t\t.observeOn(AndroidSchedulers.mainThread())\n-\t\t\t\t\t\t\t.subscribe(streamStateEntities -> {\n-\t\t\t\t\t\t\t\tappendStates(streamStateEntities, offset);\n-\t\t\t\t\t\t\t\tcallback.run();\n-\t\t\t\t\t\t\t}, throwable -> {\n-\t\t\t\t\t\t\t\tif (BuildConfig.DEBUG) throwable.printStackTrace();\n-\t\t\t\t\t\t\t\tcallback.run();\n-\t\t\t\t\t\t\t})\n-\t\t\t);\n+\t\t\tList<StreamStateEntity> streamStateEntities = null;\n+\t\t\ttry {\n+\t\t\t\tstreamStateEntities = recordManager.loadLocalStreamStateBatch(list).blockingGet();\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tif (BuildConfig.DEBUG) e.printStackTrace();\n+\t\t\t}\n+\t\t\tif(streamStateEntities != null) appendStates(streamStateEntities, offset);\n+\t\t\tcallback.run();\n \t\t} else {\n \t\t\tcallback.run();\n \t\t}",
      "parent_sha": "5aced46345c4e283123236885eb47259e3fc2fea"
    }
  },
  {
    "oid": "5f3b8bea52dbb58d24c38289c765b11fbcd5dfeb",
    "message": "Fixed format",
    "date": "2021-08-06T20:12:49Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/5f3b8bea52dbb58d24c38289c765b11fbcd5dfeb",
    "details": {
      "sha": "a13c66402d522025132786c15670c65bb7f25201",
      "filename": "app/src/main/java/org/schabi/newpipe/util/external_communication/TimestampExtractor.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/5f3b8bea52dbb58d24c38289c765b11fbcd5dfeb/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Futil%2Fexternal_communication%2FTimestampExtractor.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/5f3b8bea52dbb58d24c38289c765b11fbcd5dfeb/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Futil%2Fexternal_communication%2FTimestampExtractor.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Futil%2Fexternal_communication%2FTimestampExtractor.java?ref=5f3b8bea52dbb58d24c38289c765b11fbcd5dfeb",
      "patch": "@@ -18,7 +18,8 @@ private TimestampExtractor() {\n      * Get's a single timestamp from a matcher.\n      *\n      * @param timestampMatches The matcher which was created using {@link #TIMESTAMPS_PATTERN}\n-     * @param baseText         The text where the pattern was applied to / where the matcher is based upon\n+     * @param baseText         The text where the pattern was applied to /\n+     *                         where the matcher is based upon\n      * @return If a match occurred: a {@link TimestampMatchDTO} filled with information.<br/>\n      * If not <code>null</code>.\n      */",
      "parent_sha": "0e4c8ea8af4b05e1de62f04173550da5e5ae41bd"
    }
  },
  {
    "oid": "5c1af6d29608ee28146dd991ab70c06d1f38fcd8",
    "message": "Group private Localization methods together.",
    "date": "2022-11-09T03:24:47Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/5c1af6d29608ee28146dd991ab70c06d1f38fcd8",
    "details": {
      "sha": "916b902f0ba21fefc300197d35d2c980e07a433b",
      "filename": "app/src/main/java/org/schabi/newpipe/util/Localization.java",
      "status": "modified",
      "additions": 33,
      "deletions": 37,
      "changes": 70,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/5c1af6d29608ee28146dd991ab70c06d1f38fcd8/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Futil%2FLocalization.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/5c1af6d29608ee28146dd991ab70c06d1f38fcd8/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Futil%2FLocalization.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Futil%2FLocalization.java?ref=5c1af6d29608ee28146dd991ab70c06d1f38fcd8",
      "patch": "@@ -56,7 +56,6 @@\n  */\n \n public final class Localization {\n-\n     public static final String DOT_SEPARATOR = \" \u2022 \";\n     private static PrettyTime prettyTime;\n \n@@ -90,18 +89,6 @@ public static ContentCountry getPreferredContentCountry(final Context context) {\n         return new ContentCountry(contentCountry);\n     }\n \n-    private static Locale getLocaleFromPrefs(final Context context, @StringRes final int prefKey) {\n-        final SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(context);\n-        final String defaultKey = context.getString(R.string.default_localization_key);\n-        final String languageCode = sp.getString(context.getString(prefKey), defaultKey);\n-\n-        if (languageCode.equals(defaultKey)) {\n-            return Locale.getDefault();\n-        } else {\n-            return Locale.forLanguageTag(languageCode);\n-        }\n-    }\n-\n     public static Locale getPreferredLocale(final Context context) {\n         return getLocaleFromPrefs(context, R.string.content_language_key);\n     }\n@@ -176,13 +163,13 @@ public static String shortCount(final Context context, final long count) {\n \n         final double value = (double) count;\n         if (count >= 1000000000) {\n-            return localizeNumber(context, round(value / 1000000000, 1))\n+            return localizeNumber(context, round(value / 1000000000))\n                     + context.getString(R.string.short_billion);\n         } else if (count >= 1000000) {\n-            return localizeNumber(context, round(value / 1000000, 1))\n+            return localizeNumber(context, round(value / 1000000))\n                     + context.getString(R.string.short_million);\n         } else if (count >= 1000) {\n-            return localizeNumber(context, round(value / 1000, 1))\n+            return localizeNumber(context, round(value / 1000))\n                     + context.getString(R.string.short_thousand);\n         } else {\n             return localizeNumber(context, value);\n@@ -219,21 +206,6 @@ public static String deletedDownloadCount(final Context context, final int delet\n                 deletedCount, shortCount(context, deletedCount));\n     }\n \n-    private static String getQuantity(final Context context, @PluralsRes final int pluralId,\n-                                      @StringRes final int zeroCaseStringId, final long count,\n-                                      final String formattedCount) {\n-        if (count == 0) {\n-            return context.getString(zeroCaseStringId);\n-        }\n-\n-        // As we use the already formatted count\n-        // is not the responsibility of this method handle long numbers\n-        // (it probably will fall in the \"other\" category,\n-        // or some language have some specific rule... then we have to change it)\n-        final int safeCount = (int) MathUtils.clamp(count, Integer.MIN_VALUE, Integer.MAX_VALUE);\n-        return context.getResources().getQuantityString(pluralId, safeCount, formattedCount);\n-    }\n-\n     public static String getDurationString(final long duration) {\n         final String output;\n \n@@ -307,18 +279,42 @@ public static String relativeTime(final OffsetDateTime offsetDateTime) {\n         return prettyTime.formatUnrounded(offsetDateTime);\n     }\n \n-    private static void changeAppLanguage(final Resources res, final Locale loc) {\n+    public static void assureCorrectAppLanguage(final Context c) {\n+        final Resources res = c.getResources();\n         final DisplayMetrics dm = res.getDisplayMetrics();\n         final Configuration conf = res.getConfiguration();\n-        conf.setLocale(loc);\n+        conf.setLocale(getAppLocale(c));\n         res.updateConfiguration(conf, dm);\n     }\n \n-    public static void assureCorrectAppLanguage(final Context c) {\n-        changeAppLanguage(c.getResources(), getAppLocale(c));\n+    private static Locale getLocaleFromPrefs(final Context context, @StringRes final int prefKey) {\n+        final SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(context);\n+        final String defaultKey = context.getString(R.string.default_localization_key);\n+        final String languageCode = sp.getString(context.getString(prefKey), defaultKey);\n+\n+        if (languageCode.equals(defaultKey)) {\n+            return Locale.getDefault();\n+        } else {\n+            return Locale.forLanguageTag(languageCode);\n+        }\n+    }\n+\n+    private static double round(final double value) {\n+        return new BigDecimal(value).setScale(1, RoundingMode.HALF_UP).doubleValue();\n     }\n \n-    private static double round(final double value, final int places) {\n-        return new BigDecimal(value).setScale(places, RoundingMode.HALF_UP).doubleValue();\n+    private static String getQuantity(final Context context, @PluralsRes final int pluralId,\n+                                      @StringRes final int zeroCaseStringId, final long count,\n+                                      final String formattedCount) {\n+        if (count == 0) {\n+            return context.getString(zeroCaseStringId);\n+        }\n+\n+        // As we use the already formatted count\n+        // is not the responsibility of this method handle long numbers\n+        // (it probably will fall in the \"other\" category,\n+        // or some language have some specific rule... then we have to change it)\n+        final int safeCount = (int) MathUtils.clamp(count, Integer.MIN_VALUE, Integer.MAX_VALUE);\n+        return context.getResources().getQuantityString(pluralId, safeCount, formattedCount);\n     }\n }",
      "parent_sha": "6d812b86aaf755c3c459b99354822091f45303ff"
    }
  },
  {
    "oid": "28109fef38b2f00a8759cd34ad1473af83db50bf",
    "message": "Improve showing of toast\nWe provide visual feedback via a toast to the user that, well, they're supposed to wait; but with the benefit of the cache openAddToPlaylistDialog() may return (almost) immediately, which would render the toast otiose (if not a bit confusing). This commit improves that by cancelling the toast once the wait's over\n\n... (by 'abusing' RxJava's ambWith();\nref on compose() and Transformer: https://blog.danlew.net/2015/03/02/dont-break-the-chain/\nand for me, first time laying my hands at RxJava so kindly bear with me; open for suggestions)",
    "date": "2023-01-11T13:53:48Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/28109fef38b2f00a8759cd34ad1473af83db50bf",
    "details": {
      "sha": "d660b6f3d0d35ef3e7fdb080b63b764015926e90",
      "filename": "app/src/main/java/org/schabi/newpipe/RouterActivity.java",
      "status": "modified",
      "additions": 35,
      "deletions": 22,
      "changes": 57,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/28109fef38b2f00a8759cd34ad1473af83db50bf/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FRouterActivity.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/28109fef38b2f00a8759cd34ad1473af83db50bf/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FRouterActivity.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FRouterActivity.java?ref=28109fef38b2f00a8759cd34ad1473af83db50bf",
      "patch": "@@ -97,6 +97,7 @@\n import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\n import io.reactivex.rxjava3.core.Observable;\n import io.reactivex.rxjava3.core.Single;\n+import io.reactivex.rxjava3.core.SingleTransformer;\n import io.reactivex.rxjava3.disposables.CompositeDisposable;\n import io.reactivex.rxjava3.disposables.Disposable;\n import io.reactivex.rxjava3.functions.Consumer;\n@@ -790,12 +791,32 @@ public void onResume(@NonNull final LifecycleOwner owner) {\n             }\n         }\n \n+        <T> SingleTransformer<T, T> pleaseWait() {\n+            return single -> single\n+                    // 'abuse' ambWith() here to cancel the toast for us when the wait is over\n+                    .ambWith(Single.create(emitter -> {\n+                        if (!activityGone()) {\n+                            getActivityContext().runOnUiThread(() -> {\n+                                // Getting the stream info usually takes a moment\n+                                // Notifying the user here to ensure that no confusion arises\n+                                final Toast t = Toast.makeText(\n+                                        getActivityContext().getApplicationContext(),\n+                                        getString(R.string.processing_may_take_a_moment),\n+                                        Toast.LENGTH_LONG);\n+                                t.show();\n+                                emitter.setCancellable(t::cancel);\n+                            });\n+                        }\n+                    }));\n+        }\n+\n         @SuppressLint(\"CheckResult\")\n         private void openDownloadDialog(final int currentServiceId, final String currentUrl) {\n             inFlight(true);\n             disposables.add(ExtractorHelper.getStreamInfo(currentServiceId, currentUrl, true)\n                     .subscribeOn(Schedulers.io())\n                     .observeOn(AndroidSchedulers.mainThread())\n+                    .compose(pleaseWait())\n                     .subscribe(result ->\n                         runOnVisible(ctx -> {\n                             final FragmentManager fm = ctx.getSupportFragmentManager();\n@@ -812,17 +833,23 @@ private void openAddToPlaylistDialog(final int currentServiceId, final String cu\n             disposables.add(ExtractorHelper.getStreamInfo(currentServiceId, currentUrl, false)\n                     .subscribeOn(Schedulers.io())\n                     .observeOn(AndroidSchedulers.mainThread())\n+                    .compose(pleaseWait())\n                     .subscribe(\n-                            info -> runOnVisible(ctx ->\n+                            info -> {\n+                                if (!activityGone()) {\n                                     PlaylistDialog.createCorrespondingDialog(\n-                                    ((RouterActivity) ctx).getThemeWrapperContext(),\n+                                    getActivityContext(),\n                                     List.of(new StreamEntity(info)),\n-                                    playlistDialog -> {\n-                                        // dismiss listener to be handled by FragmentManager\n-                                        final FragmentManager fm = ctx.getSupportFragmentManager();\n-                                        playlistDialog.show(fm, \"addToPlaylistDialog\");\n-                                    }\n-                            )),\n+                                    playlistDialog ->\n+                                        runOnVisible(ctx -> {\n+                                            // dismiss listener to be handled by FragmentManager\n+                                            final FragmentManager fm =\n+                                                    ctx.getSupportFragmentManager();\n+                                            playlistDialog.show(fm, \"addToPlaylistDialog\");\n+                                        })\n+                                    );\n+                                }\n+                            },\n                             throwable -> runOnVisible(ctx -> handleError(ctx, new ErrorInfo(\n                                     throwable,\n                                     UserAction.REQUESTED_STREAM,\n@@ -835,14 +862,10 @@ private void openAddToPlaylistDialog(final int currentServiceId, final String cu\n     }\n \n     private void openAddToPlaylistDialog() {\n-        pleaseWait();\n-\n         getPersistFragment().openAddToPlaylistDialog(currentServiceId, currentUrl);\n     }\n \n     private void openDownloadDialog() {\n-        pleaseWait();\n-\n         getPersistFragment().openDownloadDialog(currentServiceId, currentUrl);\n     }\n \n@@ -859,16 +882,6 @@ private PersistentFragment getPersistFragment() {\n         return persistFragment;\n     }\n \n-    private void pleaseWait() {\n-        // Getting the stream info usually takes a moment\n-        // Notifying the user here to ensure that no confusion arises\n-        Toast.makeText(\n-                        getApplicationContext(),\n-                        getString(R.string.processing_may_take_a_moment),\n-                        Toast.LENGTH_LONG)\n-                .show();\n-    }\n-\n     @Override\n     public void onRequestPermissionsResult(final int requestCode,\n                                            @NonNull final String[] permissions,",
      "parent_sha": "40442f3f828e449dbbc4795f84756ddf43c528ea"
    }
  },
  {
    "oid": "8c73253a52c3765ea54ffcaaa9406dfb84186d23",
    "message": "follow stye on debug",
    "date": "2019-10-15T14:48:36Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/8c73253a52c3765ea54ffcaaa9406dfb84186d23",
    "details": {
      "sha": "3c908506936a28bf56d29f530556e905be3daed7",
      "filename": "app/src/main/java/org/schabi/newpipe/database/playlist/model/PlaylistRemoteEntity.java",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/8c73253a52c3765ea54ffcaaa9406dfb84186d23/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fdatabase%2Fplaylist%2Fmodel%2FPlaylistRemoteEntity.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/8c73253a52c3765ea54ffcaaa9406dfb84186d23/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fdatabase%2Fplaylist%2Fmodel%2FPlaylistRemoteEntity.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fdatabase%2Fplaylist%2Fmodel%2FPlaylistRemoteEntity.java?ref=8c73253a52c3765ea54ffcaaa9406dfb84186d23",
      "patch": "@@ -13,7 +13,6 @@\n import org.schabi.newpipe.database.playlist.PlaylistLocalItem;\n import org.schabi.newpipe.extractor.playlist.PlaylistInfo;\n import org.schabi.newpipe.util.Constants;\n-import org.w3c.dom.Text;\n \n import static org.schabi.newpipe.database.LocalItem.LocalItemType.PLAYLIST_REMOTE_ITEM;\n import static org.schabi.newpipe.database.playlist.model.PlaylistRemoteEntity.REMOTE_PLAYLIST_NAME;\n@@ -87,14 +86,14 @@ public boolean isIdenticalTo(final PlaylistInfo info) {\n         String uploaderAction = \"\";\n         if (!TextUtils.isEmpty(getUploader()) || !TextUtils.isEmpty(info.getUploaderName())) { // We have an uploader, add it to the comparison\n             returnMe &= getUploader().equals(info.getUploaderName()); // Use .equals for uploader names\n-            uploaderAction = \"We compared uploaders: \"+returnMe;\n+            uploaderAction = \"compared uploaders: \"+returnMe;\n         } else {\n-            uploaderAction = \"No Uploader\";\n+            uploaderAction = \"no uploader\";\n         }\n         returnMe &= getServiceId() == info.getServiceId() && getName().equals(info.getName()) &&\n                 getStreamCount() == info.getStreamCount() && getUrl().equals(info.getUrl()) &&\n                 getThumbnailUrl().equals(info.getThumbnailUrl());\n-        if (DEBUG) Log.d(TAG, TAG+\" Called With Result: \"+returnMe+\". And Uploader Action: \"+uploaderAction);\n+        if (DEBUG) Log.d(TAG, TAG+\"() called with result: returnMe = \"+returnMe+\". and uploaderAction: \"+uploaderAction);\n         return returnMe;\n     }\n ",
      "parent_sha": "4106645d6e89a2fbff494e3db4c482cfa1ded8f1"
    }
  },
  {
    "oid": "0cf4732d8a8b99d81cd6c9d29303cd731c7393a5",
    "message": "Fix UI crash when user navigates away before the download dialog appears",
    "date": "2024-10-19T08:43:34Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/0cf4732d8a8b99d81cd6c9d29303cd731c7393a5",
    "details": {
      "sha": "6b9e38b98aebacd9de847f767624a8fc5e6a530c",
      "filename": "app/src/main/java/org/schabi/newpipe/info_list/dialog/StreamDialogDefaultEntry.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/0cf4732d8a8b99d81cd6c9d29303cd731c7393a5/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Finfo_list%2Fdialog%2FStreamDialogDefaultEntry.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/0cf4732d8a8b99d81cd6c9d29303cd731c7393a5/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Finfo_list%2Fdialog%2FStreamDialogDefaultEntry.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Finfo_list%2Fdialog%2FStreamDialogDefaultEntry.java?ref=0cf4732d8a8b99d81cd6c9d29303cd731c7393a5",
      "patch": "@@ -113,7 +113,7 @@ public enum StreamDialogDefaultEntry {\n     DOWNLOAD(R.string.download, (fragment, item) ->\n             fetchStreamInfoAndSaveToDatabase(fragment.requireContext(), item.getServiceId(),\n                     item.getUrl(), info -> {\n-                        if (fragment.getContext() != null) {\n+                        if (fragment.isAdded() && !fragment.isStateSaved()) {\n                             final DownloadDialog downloadDialog =\n                                     new DownloadDialog(fragment.requireContext(), info);\n                             downloadDialog.show(fragment.getChildFragmentManager(),",
      "parent_sha": "53edd054aae97b1928b2d4f638312e12f4b4c4ce"
    }
  },
  {
    "oid": "68957d3880e95ac864cf93f30f2b23786fc67eb1",
    "message": "Fix grammar in JDoc",
    "date": "2023-08-22T14:23:22Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/68957d3880e95ac864cf93f30f2b23786fc67eb1",
    "details": {
      "sha": "91dc5f35b937e73a9398d616dab4789cf3c64fef",
      "filename": "app/src/main/java/org/schabi/newpipe/util/StateSaver.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/68957d3880e95ac864cf93f30f2b23786fc67eb1/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Futil%2FStateSaver.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/68957d3880e95ac864cf93f30f2b23786fc67eb1/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Futil%2FStateSaver.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Futil%2FStateSaver.java?ref=68957d3880e95ac864cf93f30f2b23786fc67eb1",
      "patch": "@@ -309,7 +309,7 @@ public static void clearStateFiles() {\n     }\n \n     /**\n-     * Used for describe how to save/read the objects.\n+     * Used for describing how to save/read the objects.\n      * <p>\n      * Queue was chosen by its FIFO property.\n      */",
      "parent_sha": "e6747066aed5f61aaa96dd20faa1714b51db79d9"
    }
  },
  {
    "oid": "01e0dd50ad4c5c4f9f8ac7b33e50cf749c93f85a",
    "message": "Added serviceId check while comparing PlayQueues",
    "date": "2022-02-22T21:53:39Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/01e0dd50ad4c5c4f9f8ac7b33e50cf749c93f85a",
    "details": {
      "sha": "f46c9d72fd080d43ee00b4243b4d3600514b1305",
      "filename": "app/src/main/java/org/schabi/newpipe/player/playqueue/PlayQueue.java",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/01e0dd50ad4c5c4f9f8ac7b33e50cf749c93f85a/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2Fplayqueue%2FPlayQueue.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/01e0dd50ad4c5c4f9f8ac7b33e50cf749c93f85a/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2Fplayqueue%2FPlayQueue.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2Fplayqueue%2FPlayQueue.java?ref=01e0dd50ad4c5c4f9f8ac7b33e50cf749c93f85a",
      "patch": "@@ -532,8 +532,11 @@ public boolean equals(@Nullable final Object obj) {\n             return false;\n         }\n         for (int i = 0; i < size(); i++) {\n-            // Check is based on URL\n-            if (!streams.get(i).getUrl().equals(other.streams.get(i).getUrl())) {\n+            final PlayQueueItem stream = streams.get(i);\n+            final PlayQueueItem otherStream = other.streams.get(i);\n+            // Check is based on serviceId and URL\n+            if (stream.getServiceId() != otherStream.getServiceId()\n+                    || !stream.getUrl().equals(otherStream.getUrl())) {\n                 return false;\n             }\n         }",
      "parent_sha": "835c5e9d43a73398227f8d77a643367b0072bbab"
    }
  },
  {
    "oid": "dc0a28b93d2d9a71b49f211e7802f62456bb24d0",
    "message": "Upsert the complete info if we fetch it for marking as watched",
    "date": "2021-07-31T15:50:41Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/dc0a28b93d2d9a71b49f211e7802f62456bb24d0",
    "details": {
      "sha": "823e56d9e4ea5fdf7684d7c5eb4f6d47c5de6208",
      "filename": "app/src/main/java/org/schabi/newpipe/local/history/HistoryRecordManager.java",
      "status": "modified",
      "additions": 13,
      "deletions": 9,
      "changes": 22,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/dc0a28b93d2d9a71b49f211e7802f62456bb24d0/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Flocal%2Fhistory%2FHistoryRecordManager.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/dc0a28b93d2d9a71b49f211e7802f62456bb24d0/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Flocal%2Fhistory%2FHistoryRecordManager.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Flocal%2Fhistory%2FHistoryRecordManager.java?ref=dc0a28b93d2d9a71b49f211e7802f62456bb24d0",
      "patch": "@@ -101,31 +101,35 @@ public Maybe<Long> markAsWatched(final StreamInfoItem info) {\n \n         final OffsetDateTime currentTime = OffsetDateTime.now(ZoneOffset.UTC);\n         return Maybe.fromCallable(() -> database.runInTransaction(() -> {\n+            final long streamId;\n+            final long duration;\n             // Duration will not exist if the item was loaded with fast mode, so fetch it if empty\n             if (info.getDuration() < 0) {\n-                final long duration = ExtractorHelper.getStreamInfo(\n+                final StreamInfo completeInfo = ExtractorHelper.getStreamInfo(\n                         info.getServiceId(),\n                         info.getUrl(),\n-                        false)\n+                        false\n+                )\n                         .subscribeOn(Schedulers.io())\n-                        .blockingGet()\n-                        .getDuration();\n-                info.setDuration(duration);\n+                        .blockingGet();\n+                duration = completeInfo.getDuration();\n+                streamId = streamTable.upsert(new StreamEntity(completeInfo));\n+            } else {\n+                duration = info.getDuration();\n+                streamId = streamTable.upsert(new StreamEntity(info));\n             }\n-            // Upsert to get a stream ID and update durations if we fetched one\n-            final long streamId = streamTable.upsert(new StreamEntity(info));\n \n             // Update the stream progress to the full duration of the video\n             final List<StreamStateEntity> states = streamStateTable.getState(streamId)\n                     .blockingFirst();\n             if (!states.isEmpty()) {\n                 final StreamStateEntity entity = states.get(0);\n-                entity.setProgressMillis(info.getDuration() * 1000);\n+                entity.setProgressMillis(duration * 1000);\n                 streamStateTable.update(entity);\n             } else {\n                 final StreamStateEntity entity = new StreamStateEntity(\n                         streamId,\n-                        info.getDuration() * 1000\n+                        duration * 1000\n                 );\n                 streamStateTable.insert(entity);\n             }",
      "parent_sha": "0e12cdea7c1d5687d662aad76aef84762e161491"
    }
  },
  {
    "oid": "ea07d7751b7aabc2887adca98bc9f3a659747e5d",
    "message": "Fix first item played in playlists when switching player type or resolution\n\nThe issue was caused by an ExoPlayer change, which when setting a media source, resets the current playback position and the current window index by default.\n\nAlso set player recovery in more places to fix playback position not propely set in some cases after a player type switch.",
    "date": "2022-01-24T20:40:16Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/ea07d7751b7aabc2887adca98bc9f3a659747e5d",
    "details": {
      "sha": "43533b52ea45915bae97270a5d6d37e11e9fedd4",
      "filename": "app/src/main/java/org/schabi/newpipe/player/Player.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/ea07d7751b7aabc2887adca98bc9f3a659747e5d/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FPlayer.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/ea07d7751b7aabc2887adca98bc9f3a659747e5d/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FPlayer.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FPlayer.java?ref=ea07d7751b7aabc2887adca98bc9f3a659747e5d",
      "patch": "@@ -2048,7 +2048,7 @@ public void onPlaybackUnblock(final MediaSource mediaSource) {\n         if (currentState == STATE_BLOCKED) {\n             changeState(STATE_BUFFERING);\n         }\n-        simpleExoPlayer.setMediaSource(mediaSource);\n+        simpleExoPlayer.setMediaSource(mediaSource, false);\n         simpleExoPlayer.prepare();\n     }\n ",
      "parent_sha": "1531a5112c6ed294efdd04361f3516c433d89d07"
    }
  },
  {
    "oid": "57474e2dab44f568243019d96d6edd4b2f6e6439",
    "message": "Refactor and optimize equals\n\n - Remove multiple casts of obj\n\n - Simply use object equals on the streams because PlayQueueItem\u2019s\n   equals already compares urls",
    "date": "2021-05-24T16:20:19Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/57474e2dab44f568243019d96d6edd4b2f6e6439",
    "details": {
      "sha": "7cfc9fba1cbe91c4f5dc42a8238b27555879c9d5",
      "filename": "app/src/main/java/org/schabi/newpipe/player/playqueue/PlayQueue.java",
      "status": "modified",
      "additions": 3,
      "deletions": 11,
      "changes": 14,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/57474e2dab44f568243019d96d6edd4b2f6e6439/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2Fplayqueue%2FPlayQueue.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/57474e2dab44f568243019d96d6edd4b2f6e6439/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2Fplayqueue%2FPlayQueue.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2Fplayqueue%2FPlayQueue.java?ref=57474e2dab44f568243019d96d6edd4b2f6e6439",
      "patch": "@@ -500,22 +500,14 @@ public synchronized boolean previous() {\n      * we don't have to do anything with new queue.\n      * This method also gives a chance to track history of items in a queue in\n      * VideoDetailFragment without duplicating items from two identical queues\n-     * */\n+     */\n     @Override\n     public boolean equals(@Nullable final Object obj) {\n-        if (!(obj instanceof PlayQueue)\n-                || getStreams().size() != ((PlayQueue) obj).getStreams().size()) {\n+        if (!(obj instanceof PlayQueue)) {\n             return false;\n         }\n-\n         final PlayQueue other = (PlayQueue) obj;\n-        for (int i = 0; i < getStreams().size(); i++) {\n-            if (!getItem(i).getUrl().equals(other.getItem(i).getUrl())) {\n-                return false;\n-            }\n-        }\n-\n-        return true;\n+        return streams.equals(other.streams);\n     }\n \n     public boolean isDisposed() {",
      "parent_sha": "139ced885d3e593dc04a66d3e56faccc7787dc63"
    }
  },
  {
    "oid": "7fbef35daab5b7122237cca636aa4ffc2a3368fe",
    "message": "Unify onThumbnailLoaded calls to ensure UIs always updated",
    "date": "2022-08-28T15:24:51Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/7fbef35daab5b7122237cca636aa4ffc2a3368fe",
    "details": {
      "sha": "040070b5b5d586cf4b23072823efe005ed610ddd",
      "filename": "app/src/main/java/org/schabi/newpipe/player/Player.java",
      "status": "modified",
      "additions": 13,
      "deletions": 5,
      "changes": 18,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/7fbef35daab5b7122237cca636aa4ffc2a3368fe/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FPlayer.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/7fbef35daab5b7122237cca636aa4ffc2a3368fe/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FPlayer.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FPlayer.java?ref=7fbef35daab5b7122237cca636aa4ffc2a3368fe",
      "patch": "@@ -765,17 +765,15 @@ public void onBitmapLoaded(final Bitmap bitmap, final Picasso.LoadedFrom from) {\n                             + \" -> \" + bitmap.getWidth() + \"x\" + bitmap.getHeight() + \"], from = [\"\n                             + from + \"]\");\n                 }\n-                currentThumbnail = bitmap;\n                 // there is a new thumbnail, so e.g. the end screen thumbnail needs to change, too.\n-                UIs.call(playerUi -> playerUi.onThumbnailLoaded(bitmap));\n+                onThumbnailLoaded(bitmap);\n             }\n \n             @Override\n             public void onBitmapFailed(final Exception e, final Drawable errorDrawable) {\n                 Log.e(TAG, \"Thumbnail - onBitmapFailed() called\", e);\n-                currentThumbnail = null;\n                 // there is a new thumbnail, so e.g. the end screen thumbnail needs to change, too.\n-                UIs.call(playerUi -> playerUi.onThumbnailLoaded(null));\n+                onThumbnailLoaded(null);\n             }\n \n             @Override\n@@ -798,7 +796,7 @@ private void loadCurrentThumbnail(final String url) {\n \n         // Unset currentThumbnail, since it is now outdated. This ensures it is not used in media\n         // session metadata while the new thumbnail is being loaded by Picasso.\n-        currentThumbnail = null;\n+        onThumbnailLoaded(null);\n         if (isNullOrEmpty(url)) {\n             return;\n         }\n@@ -813,6 +811,16 @@ private void cancelLoadingCurrentThumbnail() {\n         // cancel the Picasso job associated with the player thumbnail, if any\n         PicassoHelper.cancelTag(PICASSO_PLAYER_THUMBNAIL_TAG);\n     }\n+\n+    private void onThumbnailLoaded(@Nullable final Bitmap bitmap) {\n+        // Avoid useless thumbnail updates, if the thumbnail has not actually changed. Based on the\n+        // thumbnail loading code, this if would be skipped only when both bitmaps are `null`, since\n+        // onThumbnailLoaded won't be called twice with the same nonnull bitmap by Picasso's target.\n+        if (currentThumbnail != bitmap) {\n+            currentThumbnail = bitmap;\n+            UIs.call(playerUi -> playerUi.onThumbnailLoaded(bitmap));\n+        }\n+    }\n     //endregion\n \n ",
      "parent_sha": "e6391a860a3aa443f398641947bbf7e757ef7a66"
    }
  },
  {
    "oid": "87e7d959668d5f4f6dacb49be5ea06ee4eb64b92",
    "message": "Do not show suggestions error snackbar for interrupted I/O\n\nFix formatting",
    "date": "2021-08-24T16:16:17Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/87e7d959668d5f4f6dacb49be5ea06ee4eb64b92",
    "details": {
      "sha": "5ff2f4788290a92b492263ecc6450b1ffafafccc",
      "filename": "app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java",
      "status": "modified",
      "additions": 7,
      "deletions": 3,
      "changes": 10,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/87e7d959668d5f4f6dacb49be5ea06ee4eb64b92/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2Fsearch%2FSearchFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/87e7d959668d5f4f6dacb49be5ea06ee4eb64b92/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2Fsearch%2FSearchFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2Fsearch%2FSearchFragment.java?ref=87e7d959668d5f4f6dacb49be5ea06ee4eb64b92",
      "patch": "@@ -55,6 +55,7 @@\n import org.schabi.newpipe.fragments.BackPressable;\n import org.schabi.newpipe.fragments.list.BaseListFragment;\n import org.schabi.newpipe.ktx.AnimationType;\n+import org.schabi.newpipe.ktx.ExceptionUtils;\n import org.schabi.newpipe.local.history.HistoryRecordManager;\n import org.schabi.newpipe.settings.NewPipeSettings;\n import org.schabi.newpipe.util.Constants;\n@@ -782,7 +783,8 @@ private void initSuggestionObserver() {\n                             && query.length() >= THRESHOLD_NETWORK_SUGGESTION;\n \n                     if (showLocalSuggestions && shallShowRemoteSuggestionsNow) {\n-                        return Observable.zip(getLocalSuggestionsObservable(query, 3),\n+                        return Observable.zip(\n+                                getLocalSuggestionsObservable(query, 3),\n                                 getRemoteSuggestionsObservable(query),\n                                 (local, remote) -> {\n                                     remote.removeIf(remoteItem -> local.stream().anyMatch(\n@@ -810,8 +812,10 @@ private void initSuggestionObserver() {\n                         if (listNotification.getValue() != null) {\n                             handleSuggestions(listNotification.getValue());\n                         }\n-                    } else if (listNotification.isOnError()) {\n-                        showError(new ErrorInfo(listNotification.getError(),\n+                    } else if (listNotification.isOnError()\n+                            && listNotification.getError() != null\n+                            && !ExceptionUtils.isInterruptedCaused(listNotification.getError())) {\n+                        showSnackBarError(new ErrorInfo(listNotification.getError(),\n                                 UserAction.GET_SUGGESTIONS, searchString, serviceId));\n                     }\n                 });",
      "parent_sha": "d37ee1e0dc011e01c8a7c8508d182774b95f5720"
    }
  },
  {
    "oid": "de7057ac3a6f188a9c54348432330b01b9d4b087",
    "message": "Skip REORDER_TO_FRONT trick which doesn't seem to work on newer Androids\nprobably due to background restrictions on Android 10+",
    "date": "2023-01-11T13:53:48Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/de7057ac3a6f188a9c54348432330b01b9d4b087",
    "details": {
      "sha": "1a33c0ca4b347bca05df9e4772238dd8240bb414",
      "filename": "app/src/main/java/org/schabi/newpipe/RouterActivity.java",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/de7057ac3a6f188a9c54348432330b01b9d4b087/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FRouterActivity.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/de7057ac3a6f188a9c54348432330b01b9d4b087/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FRouterActivity.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FRouterActivity.java?ref=de7057ac3a6f188a9c54348432330b01b9d4b087",
      "patch": "@@ -10,6 +10,7 @@\n import android.content.Intent;\n import android.content.SharedPreferences;\n import android.content.pm.PackageManager;\n+import android.os.Build;\n import android.os.Bundle;\n import android.text.TextUtils;\n import android.view.ContextThemeWrapper;\n@@ -776,7 +777,10 @@ private void runOnVisible(final ResultRunnable runnable) {\n             }\n             if (isPaused) {\n                 buffer.add(runnable);\n-                if (!getActivityContext().isChangingConfigurations()) {\n+                // this trick doesn't seem to work on Android 10+ (API 29)\n+                // which places restrictions on starting activities from the background\n+                if (Build.VERSION.SDK_INT < Build.VERSION_CODES.Q\n+                        && !getActivityContext().isChangingConfigurations()) {\n                     // try to bring the activity back to front if minimised\n                     final Intent i = new Intent(getActivityContext(), RouterActivity.class);\n                     i.setFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);",
      "parent_sha": "585bfff11da4edecc9b68ac2d2f408ef272d4c27"
    }
  },
  {
    "oid": "797e1a105d7f40d5b9a9c613df049c670a16c741",
    "message": "Comment out debuging code",
    "date": "2019-10-15T20:02:37Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/797e1a105d7f40d5b9a9c613df049c670a16c741",
    "details": {
      "sha": "1a1474f802ca9856d6ec4c389166d88dda416006",
      "filename": "app/src/main/java/org/schabi/newpipe/database/playlist/model/PlaylistRemoteEntity.java",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/797e1a105d7f40d5b9a9c613df049c670a16c741/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fdatabase%2Fplaylist%2Fmodel%2FPlaylistRemoteEntity.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/797e1a105d7f40d5b9a9c613df049c670a16c741/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fdatabase%2Fplaylist%2Fmodel%2FPlaylistRemoteEntity.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fdatabase%2Fplaylist%2Fmodel%2FPlaylistRemoteEntity.java?ref=797e1a105d7f40d5b9a9c613df049c670a16c741",
      "patch": "@@ -76,18 +76,18 @@ public PlaylistRemoteEntity(final PlaylistInfo info) {\n \n     @Ignore\n     public boolean isIdenticalTo(final PlaylistInfo info) {\n-        String TAG = \"isIdenticalTo\";\n-        boolean DEBUG = !BuildConfig.BUILD_TYPE.equals(\"release\");\n+        //String TAG = \"isIdenticalTo\";\n+        //boolean DEBUG = !BuildConfig.BUILD_TYPE.equals(\"release\");\n         /*\n          * Returns boolean comparing the online playlist and the local copy.\n          * (False if info changed such as playlist name or track count)\n          */\n-        boolean returnMe = true;\n-        returnMe &= getServiceId() == info.getServiceId() && getName().equals(info.getName()) &&\n+        //boolean returnMe = true;\n+        return getServiceId() == info.getServiceId() && getName().equals(info.getName()) &&\n                 getStreamCount() == info.getStreamCount() && getUrl().equals(info.getUrl()) &&\n                 getThumbnailUrl().equals(info.getThumbnailUrl()) && TextUtils.equals(getUploader(), info.getUploaderName());\n-        if (DEBUG) Log.d(TAG, TAG+\"() called with result: returnMe = \"+returnMe);\n-        return returnMe;\n+        //if (DEBUG) Log.d(TAG, TAG+\"() called with result: returnMe = \"+returnMe);\n+        //return returnMe;\n     }\n \n     public long getUid() {",
      "parent_sha": "9c00e7f45cd00330599bbec191cc5f5288dd4032"
    }
  },
  {
    "oid": "6d0bb02544ae182328ca29d6189d8846613ab283",
    "message": "adds quotation to create filename util replacement char",
    "date": "2023-10-13T04:28:09Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/6d0bb02544ae182328ca29d6189d8846613ab283",
    "details": {
      "sha": "bc15f3f0242d4a6e46c0cce2706bd703b4ade3de",
      "filename": "app/src/main/java/org/schabi/newpipe/util/FilenameUtils.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/6d0bb02544ae182328ca29d6189d8846613ab283/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Futil%2FFilenameUtils.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/6d0bb02544ae182328ca29d6189d8846613ab283/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Futil%2FFilenameUtils.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Futil%2FFilenameUtils.java?ref=6d0bb02544ae182328ca29d6189d8846613ab283",
      "patch": "@@ -7,6 +7,7 @@\n \n import org.schabi.newpipe.R;\n \n+import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n public final class FilenameUtils {\n@@ -51,7 +52,7 @@ public static String createFilename(final Context context, final String title) {\n \n         final Pattern pattern = Pattern.compile(charset);\n \n-        return createFilename(title, pattern, replacementChar);\n+        return createFilename(title, pattern, Matcher.quoteReplacement(replacementChar));\n     }\n \n     /**",
      "parent_sha": "6f51c47dc9edcfa7e176606ba1edd7c4c8c757ab"
    }
  },
  {
    "oid": "433c6dc33b02f09340fcec8a7c088a47778f1a33",
    "message": "Fix OnErrorNotImplementedException in SearchFragment.initSuggestionObserver()\n\nHopefully also fix the cause of the original error.",
    "date": "2021-09-05T17:54:28Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/433c6dc33b02f09340fcec8a7c088a47778f1a33",
    "details": {
      "sha": "7de2123832fe2009524e7bc1d8331785e66e1ffc",
      "filename": "app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java",
      "status": "modified",
      "additions": 16,
      "deletions": 13,
      "changes": 29,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/433c6dc33b02f09340fcec8a7c088a47778f1a33/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2Fsearch%2FSearchFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/433c6dc33b02f09340fcec8a7c088a47778f1a33/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2Fsearch%2FSearchFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2Fsearch%2FSearchFragment.java?ref=433c6dc33b02f09340fcec8a7c088a47778f1a33",
      "patch": "@@ -215,6 +215,7 @@ public View onCreateView(final LayoutInflater inflater, @Nullable final ViewGrou\n \n     @Override\n     public void onViewCreated(@NonNull final View rootView, final Bundle savedInstanceState) {\n+        searchBinding = FragmentSearchBinding.bind(rootView);\n         super.onViewCreated(rootView, savedInstanceState);\n         showSearchOnStart();\n         initSearchListeners();\n@@ -341,7 +342,6 @@ public void onActivityResult(final int requestCode, final int resultCode, final\n     @Override\n     protected void initViews(final View rootView, final Bundle savedInstanceState) {\n         super.initViews(rootView, savedInstanceState);\n-        searchBinding = FragmentSearchBinding.bind(rootView);\n \n         searchBinding.suggestionsList.setAdapter(suggestionListAdapter);\n         new ItemTouchHelper(new ItemTouchHelper.Callback() {\n@@ -807,18 +807,21 @@ private void initSuggestionObserver() {\n                 })\n                 .subscribeOn(Schedulers.io())\n                 .observeOn(AndroidSchedulers.mainThread())\n-                .subscribe(listNotification -> {\n-                    if (listNotification.isOnNext()) {\n-                        if (listNotification.getValue() != null) {\n-                            handleSuggestions(listNotification.getValue());\n-                        }\n-                    } else if (listNotification.isOnError()\n-                            && listNotification.getError() != null\n-                            && !ExceptionUtils.isInterruptedCaused(listNotification.getError())) {\n-                        showSnackBarError(new ErrorInfo(listNotification.getError(),\n-                                UserAction.GET_SUGGESTIONS, searchString, serviceId));\n-                    }\n-                });\n+                .subscribe(\n+                        listNotification -> {\n+                            if (listNotification.isOnNext()) {\n+                                if (listNotification.getValue() != null) {\n+                                    handleSuggestions(listNotification.getValue());\n+                                }\n+                            } else if (listNotification.isOnError()\n+                                    && listNotification.getError() != null\n+                                    && !ExceptionUtils.isInterruptedCaused(\n+                                            listNotification.getError())) {\n+                                showSnackBarError(new ErrorInfo(listNotification.getError(),\n+                                        UserAction.GET_SUGGESTIONS, searchString, serviceId));\n+                            }\n+                        }, throwable -> showSnackBarError(new ErrorInfo(\n+                            throwable, UserAction.GET_SUGGESTIONS, searchString, serviceId)));\n     }\n \n     @Override",
      "parent_sha": "ed4fdadd4d00e95d24dd90f64c57a216b18bf2a0"
    }
  },
  {
    "oid": "c46a0f7b2ebd9fbe73c3bc33c5b62ae64c529a23",
    "message": "Code-review changes",
    "date": "2020-01-03T10:00:53Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/c46a0f7b2ebd9fbe73c3bc33c5b62ae64c529a23",
    "details": {
      "sha": "9e896b14f13daaa55e0f7647112222d924cb24ca",
      "filename": "app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/c46a0f7b2ebd9fbe73c3bc33c5b62ae64c529a23/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FBackgroundPlayer.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/c46a0f7b2ebd9fbe73c3bc33c5b62ae64c529a23/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FBackgroundPlayer.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FBackgroundPlayer.java?ref=c46a0f7b2ebd9fbe73c3bc33c5b62ae64c529a23",
      "patch": "@@ -201,12 +201,12 @@ private NotificationCompat.Builder createNotification() {\n         setupNotification(notRemoteView);\n         setupNotification(bigNotRemoteView);\n \n-        NotificationCompat.Builder builder = new NotificationCompat.Builder(this, getString(R.string.notification_channel_id));\n-        builder.setOngoing(true);\n-        builder.setSmallIcon(R.drawable.ic_newpipe_triangle_white);\n-        builder.setVisibility(NotificationCompat.VISIBILITY_PUBLIC);\n-        builder.setCustomContentView(notRemoteView);\n-        builder.setCustomBigContentView(bigNotRemoteView);\n+        NotificationCompat.Builder builder = new NotificationCompat.Builder(this, getString(R.string.notification_channel_id))\n+                .setOngoing(true)\n+                .setSmallIcon(R.drawable.ic_newpipe_triangle_white)\n+                .setVisibility(NotificationCompat.VISIBILITY_PUBLIC)\n+                .setCustomContentView(notRemoteView)\n+                .setCustomBigContentView(bigNotRemoteView);\n \n         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n             setLockScreenThumbnail(builder);",
      "parent_sha": "835476870b7b4a04af3f79c6c5ecb0c9b70e588f"
    }
  },
  {
    "oid": "fb3be544ce9902fbd12fdf8fece2d23d7e06634f",
    "message": "Fixed code styling",
    "date": "2021-12-26T05:12:48Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/fb3be544ce9902fbd12fdf8fece2d23d7e06634f",
    "details": {
      "sha": "20d01c415501d011d084d83a81f76af543f78faa",
      "filename": "app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/fb3be544ce9902fbd12fdf8fece2d23d7e06634f/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Fdetail%2FVideoDetailFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/fb3be544ce9902fbd12fdf8fece2d23d7e06634f/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Fdetail%2FVideoDetailFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Fdetail%2FVideoDetailFragment.java?ref=fb3be544ce9902fbd12fdf8fece2d23d7e06634f",
      "patch": "@@ -1650,7 +1650,7 @@ private void displayUploaderAsSubChannel(final StreamInfo info) {\n         binding.detailUploaderTextView.setVisibility(View.GONE);\n \n         //No sub-channel name implies no sub-channel icon, but check just to make sure.\n-        if(isEmpty(info.getSubChannelAvatarUrl())){\n+        if (isEmpty(info.getSubChannelAvatarUrl())) {\n             binding.detailSubChannelThumbnailView.setVisibility(View.GONE);\n         }\n     }",
      "parent_sha": "53f5741317ad00d376fd5a514d9e3f134478b7bb"
    }
  },
  {
    "oid": "984dd1cc25d6add07d136a6a602e836fb99f8462",
    "message": "checking on \"Use Tor\" when Orbot is not installed starts install\n\nIf the user turns on \"Use Tor\" and they are missing Orbot, bring them to\nthe screen to install Tor.",
    "date": "2016-01-02T20:21:34Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/984dd1cc25d6add07d136a6a602e836fb99f8462",
    "details": {
      "sha": "f599ebd8b5abcf02e147d872b230684e385b0b16",
      "filename": "app/src/main/java/org/schabi/newpipe/SettingsActivity.java",
      "status": "modified",
      "additions": 27,
      "deletions": 3,
      "changes": 30,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/984dd1cc25d6add07d136a6a602e836fb99f8462/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FSettingsActivity.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/984dd1cc25d6add07d136a6a602e836fb99f8462/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FSettingsActivity.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FSettingsActivity.java?ref=984dd1cc25d6add07d136a6a602e836fb99f8462",
      "patch": "@@ -1,5 +1,8 @@\n package org.schabi.newpipe;\n \n+import android.app.Activity;\n+import android.content.Context;\n+import android.content.Intent;\n import android.content.res.Configuration;\n import android.os.Bundle;\n import android.preference.CheckBoxPreference;\n@@ -39,6 +42,7 @@\n \n public class SettingsActivity extends PreferenceActivity {\n \n+    private static final int REQUEST_INSTALL_ORBOT = 0x1234;\n     private AppCompatDelegate mDelegate = null;\n \n     @Override\n@@ -65,19 +69,39 @@ public void onCreate(Bundle savedInstanceState) {\n \n             // if Orbot is installed, then default to using Tor, the user can still override\n             useTorCheckBox = (CheckBoxPreference) findPreference(getString(R.string.useTor));\n-            boolean useTor = OrbotHelper.isOrbotInstalled(getActivity());\n+            final Activity activity = getActivity();\n+            final boolean useTor = OrbotHelper.isOrbotInstalled(activity);\n             useTorCheckBox.setDefaultValue(useTor);\n             useTorCheckBox.setChecked(useTor);\n             useTorCheckBox.setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() {\n                 @Override\n-                public boolean onPreferenceChange(Preference preference, Object useTor) {\n-                    App.configureTor((Boolean) useTor);\n+                public boolean onPreferenceChange(Preference preference, Object o) {\n+                    boolean useTor = (Boolean) o;\n+                    if (useTor) {\n+                        if (OrbotHelper.isOrbotInstalled(activity)) {\n+                            App.configureTor(true);\n+                        } else {\n+                            Intent intent = OrbotHelper.getOrbotInstallIntent(activity);\n+                            activity.startActivityForResult(intent, REQUEST_INSTALL_ORBOT);\n+                        }\n+                    } else {\n+                        App.configureTor(false);\n+                    }\n                     return true;\n                 }\n             });\n         }\n     }\n \n+    @Override\n+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n+        super.onActivityResult(requestCode, resultCode, data);\n+        // try to start tor regardless of resultCode since clicking back after\n+        // installing the app does not necessarily return RESULT_OK\n+        App.configureTor(requestCode == REQUEST_INSTALL_ORBOT\n+                && OrbotHelper.requestStartTor(this));\n+    }\n+\n     @Override\n     protected void onPostCreate(Bundle savedInstanceState) {\n         super.onPostCreate(savedInstanceState);",
      "parent_sha": "5663e543a47eb90af320e5ebb09fcd2b8243c36d"
    }
  },
  {
    "oid": "0471fd8145cf3fe9fc0082eca7bee2150ed5f24f",
    "message": "add clear orphans",
    "date": "2018-04-29T15:06:54Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/0471fd8145cf3fe9fc0082eca7bee2150ed5f24f",
    "details": {
      "sha": "cc1f408b734d7d089a835dd586120b8ec09ecbbb",
      "filename": "app/src/main/java/org/schabi/newpipe/settings/HistorySettingsFragment.java",
      "status": "modified",
      "additions": 14,
      "deletions": 1,
      "changes": 15,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/0471fd8145cf3fe9fc0082eca7bee2150ed5f24f/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fsettings%2FHistorySettingsFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/0471fd8145cf3fe9fc0082eca7bee2150ed5f24f/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fsettings%2FHistorySettingsFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fsettings%2FHistorySettingsFragment.java?ref=0471fd8145cf3fe9fc0082eca7bee2150ed5f24f",
      "patch": "@@ -19,6 +19,7 @@\n import java.util.ArrayList;\n import java.util.Collection;\n \n+import io.reactivex.Single;\n import io.reactivex.android.schedulers.AndroidSchedulers;\n import io.reactivex.disposables.CompositeDisposable;\n import io.reactivex.disposables.Disposable;\n@@ -74,6 +75,19 @@ public boolean onPreferenceTreeClick(Preference preference) {\n                                                         \"Delete view history\",\n                                                         R.string.general_error)));\n \n+                        final Disposable onClearOrphans = recordManager.removeOrphanedRecords()\n+                                .observeOn(AndroidSchedulers.mainThread())\n+                                .subscribe(\n+                                        howManyDeleted -> {},\n+                                        throwable -> ErrorActivity.reportError(getContext(),\n+                                                throwable,\n+                                                SettingsActivity.class, null,\n+                                                ErrorActivity.ErrorInfo.make(\n+                                                        UserAction.DELETE_FROM_HISTORY,\n+                                                        \"none\",\n+                                                        \"Delete search history\",\n+                                                        R.string.general_error)));\n+                        disposables.add(onClearOrphans);\n                         disposables.add(onDelete);\n                     }))\n                     .create()\n@@ -99,7 +113,6 @@ public boolean onPreferenceTreeClick(Preference preference) {\n                                                         \"none\",\n                                                         \"Delete search history\",\n                                                         R.string.general_error)));\n-\n                         disposables.add(onDelete);\n                     }))\n                     .create()",
      "parent_sha": "a079a0c901b001c6523e5686988ec53ab0e99287"
    }
  },
  {
    "oid": "a536311d56c95af25e527bec0404ddf7b828dfcb",
    "message": "name the regions according to the comments (#6854)\n\nif a region is named android studio will show its name in the structure view.",
    "date": "2021-08-10T22:38:23Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/a536311d56c95af25e527bec0404ddf7b828dfcb",
    "details": {
      "sha": "d8d8ac14beae8aed87abe0eb58a662db9cfd4a74",
      "filename": "app/src/main/java/org/schabi/newpipe/player/Player.java",
      "status": "modified",
      "additions": 31,
      "deletions": 30,
      "changes": 61,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/a536311d56c95af25e527bec0404ddf7b828dfcb/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FPlayer.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/a536311d56c95af25e527bec0404ddf7b828dfcb/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FPlayer.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FPlayer.java?ref=a536311d56c95af25e527bec0404ddf7b828dfcb",
      "patch": "@@ -390,7 +390,7 @@ public final class Player implements\n     /*//////////////////////////////////////////////////////////////////////////\n     // Constructor\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region Constructor\n \n     public Player(@NonNull final MainPlayer service) {\n         this.service = service;\n@@ -437,7 +437,7 @@ public int getOverrideResolutionIndex(final List<VideoStream> sortedVideos,\n     /*//////////////////////////////////////////////////////////////////////////\n     // Setup and initialization\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region Setup and initialization\n \n     public void setupFromView(@NonNull final PlayerBinding playerBinding) {\n         initViews(playerBinding);\n@@ -585,7 +585,7 @@ public void onChange(final boolean selfChange) {\n     /*//////////////////////////////////////////////////////////////////////////\n     // Playback initialization via intent\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region Playback initialization via intent\n \n     public void handleIntent(@NonNull final Intent intent) {\n         // fail fast if no play queue was provided\n@@ -774,7 +774,7 @@ private void initPlayback(@NonNull final PlayQueue queue,\n     /*//////////////////////////////////////////////////////////////////////////\n     // Destroy and recovery\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region Destroy and recovery\n \n     private void destroyPlayer() {\n         if (DEBUG) {\n@@ -883,7 +883,7 @@ public void smoothStopPlayer() {\n     /*//////////////////////////////////////////////////////////////////////////\n     // Player type specific setup\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region Player type specific setup\n \n     private void initVideoPlayer() {\n         // restore last resize mode\n@@ -945,7 +945,7 @@ private void initPopupCloseOverlay() {\n     /*//////////////////////////////////////////////////////////////////////////\n     // Elements visibility and size: popup and main players have different look\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region Elements visibility and size: popup and main players have different look\n \n     /**\n      * This method ensures that popup and main players have different look.\n@@ -1059,7 +1059,7 @@ private void showHideKodiButton() {\n     /*//////////////////////////////////////////////////////////////////////////\n     // Broadcast receiver\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region Broadcast receiver\n \n     private void setupBroadcastReceiver() {\n         if (DEBUG) {\n@@ -1211,7 +1211,7 @@ private void unregisterBroadcastReceiver() {\n     /*//////////////////////////////////////////////////////////////////////////\n     // Thumbnail loading\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region Thumbnail loading\n \n     private void initThumbnail(final String url) {\n         if (DEBUG) {\n@@ -1358,7 +1358,7 @@ public void onLoadingCancelled(final String imageUri, final View view) {\n     /*//////////////////////////////////////////////////////////////////////////\n     // Popup player utils\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region Popup player utils\n \n     /**\n      * Check if {@link #popupLayoutParams}' position is within a arbitrary boundary\n@@ -1533,7 +1533,7 @@ private boolean anyPopupViewIsNull() {\n     /*//////////////////////////////////////////////////////////////////////////\n     // Playback parameters\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region Playback parameters\n \n     public float getPlaybackSpeed() {\n         return getPlaybackParameters().speed;\n@@ -1586,7 +1586,7 @@ public void setPlaybackParameters(final float speed, final float pitch,\n     /*//////////////////////////////////////////////////////////////////////////\n     // Progress loop and updates\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region Progress loop and updates\n \n     private void onUpdateProgress(final int currentProgress,\n                                   final int duration,\n@@ -1802,7 +1802,7 @@ public void saveWasPlaying() {\n     /*//////////////////////////////////////////////////////////////////////////\n     // Controls showing / hiding\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region Controls showing / hiding\n \n     public boolean isControlsVisible() {\n         return binding != null && binding.playbackControlRoot.getVisibility() == View.VISIBLE;\n@@ -1972,7 +1972,7 @@ private void hideSystemUIIfNeeded() {\n     /*//////////////////////////////////////////////////////////////////////////\n     // Playback states\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region Playback states\n \n     @Override // exoplayer listener\n     public void onPlayerStateChanged(final boolean playWhenReady, final int playbackState) {\n@@ -2293,7 +2293,7 @@ private void animatePlayButtons(final boolean show, final int duration) {\n     /*//////////////////////////////////////////////////////////////////////////\n     // Repeat and shuffle\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region Repeat and shuffle\n \n     public void onRepeatClicked() {\n         if (DEBUG) {\n@@ -2382,7 +2382,7 @@ private void setShuffleButton(final ImageButton button, final boolean shuffled)\n     /*//////////////////////////////////////////////////////////////////////////\n     // Mute / Unmute\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region Mute / Unmute\n \n     public void onMuteUnmuteButtonClicked() {\n         if (DEBUG) {\n@@ -2408,7 +2408,7 @@ private void setMuteButton(final ImageButton button, final boolean isMuted) {\n     /*//////////////////////////////////////////////////////////////////////////\n     // ExoPlayer listeners (that didn't fit in other categories)\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region ExoPlayer listeners (that didn't fit in other categories)\n \n     @Override\n     public void onTimelineChanged(@NonNull final Timeline timeline, final int reason) {\n@@ -2496,7 +2496,7 @@ public void onRenderedFirstFrame() {\n     /*//////////////////////////////////////////////////////////////////////////\n     // Errors\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region Errors\n     /**\n      * Process exceptions produced by {@link com.google.android.exoplayer2.ExoPlayer ExoPlayer}.\n      * <p>There are multiple types of errors:</p>\n@@ -2597,7 +2597,7 @@ private void showUnrecoverableError(final Exception exception) {\n     /*//////////////////////////////////////////////////////////////////////////\n     // Playback position and seek\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region Playback position and seek\n \n     @Override // own playback listener (this is a getter)\n     public boolean isApproachingPlaybackEdge(final long timeToEndMillis) {\n@@ -2747,7 +2747,7 @@ public void seekToDefault() {\n     /*//////////////////////////////////////////////////////////////////////////\n     // Player actions (play, pause, previous, fast-forward, ...)\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region Player actions (play, pause, previous, fast-forward, ...)\n \n     public void play() {\n         if (DEBUG) {\n@@ -2855,7 +2855,7 @@ public void fastRewind() {\n     /*//////////////////////////////////////////////////////////////////////////\n     // StreamInfo history: views and progress\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region StreamInfo history: views and progress\n \n     private void registerStreamViewed() {\n         if (currentMetadata != null) {\n@@ -2913,7 +2913,7 @@ public void saveStreamProgressStateCompleted() {\n     /*//////////////////////////////////////////////////////////////////////////\n     // Metadata\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region Metadata\n \n     private void onMetadataChanged(@NonNull final MediaSourceTag tag) {\n         final StreamInfo info = tag.getMetadata();\n@@ -3022,7 +3022,7 @@ public Bitmap getThumbnail() {\n     /*//////////////////////////////////////////////////////////////////////////\n     // Play queue, segments and streams\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region Play queue, segments and streams\n \n     private void maybeAutoQueueNextStream(@NonNull final MediaSourceTag metadata) {\n         if (playQueue == null || playQueue.getIndex() != playQueue.size() - 1\n@@ -3338,7 +3338,7 @@ private void updateQueueTime(final int currentTime) {\n     /*//////////////////////////////////////////////////////////////////////////\n     // Popup menus (\"popup\" means that they pop up, not that they belong to the popup player)\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region Popup menus (\"popup\" means that they pop up, not that they belong to the popup player)\n \n     private void buildQualityMenu() {\n         if (qualityPopupMenu == null) {\n@@ -3541,7 +3541,7 @@ private void setPlaybackQuality(final String quality) {\n     /*//////////////////////////////////////////////////////////////////////////\n     // Captions (text tracks)\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region Captions (text tracks)\n \n     private void setupSubtitleView() {\n         final float captionScale = PlayerHelper.getCaptionScale(context);\n@@ -3620,7 +3620,7 @@ private int getCaptionRendererIndex() {\n     /*//////////////////////////////////////////////////////////////////////////\n     // Click listeners\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region Click listeners\n \n     @Override\n     public void onClick(final View v) {\n@@ -3808,7 +3808,7 @@ private void onOpenInBrowserClicked() {\n     /*//////////////////////////////////////////////////////////////////////////\n     // Video size, resize, orientation, fullscreen\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region Video size, resize, orientation, fullscreen\n \n     private void setupScreenRotationButton() {\n         binding.screenRotationButton.setVisibility(videoPlayerSelected()\n@@ -3915,7 +3915,7 @@ public void checkLandscape() {\n     /*//////////////////////////////////////////////////////////////////////////\n     // Gestures\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region Gestures\n \n     @SuppressWarnings(\"checkstyle:ParameterNumber\")\n     private void onLayoutChange(final View view, final int l, final int t, final int r, final int b,\n@@ -3979,7 +3979,7 @@ public boolean isInsideClosingRadius(final MotionEvent popupMotionEvent) {\n     /*//////////////////////////////////////////////////////////////////////////\n     // Activity / fragment binding\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region Activity / fragment binding\n \n     public void setFragmentListener(final PlayerServiceEventListener listener) {\n         fragmentListener = listener;\n@@ -4118,7 +4118,7 @@ private void useVideoSource(final boolean video) {\n     /*//////////////////////////////////////////////////////////////////////////\n     // Getters\n     //////////////////////////////////////////////////////////////////////////*/\n-    //region\n+    //region Getters\n \n     public int getCurrentState() {\n         return currentState;\n@@ -4304,6 +4304,7 @@ public PlayQueueAdapter getPlayQueueAdapter() {\n     // SurfaceHolderCallback helpers\n     //////////////////////////////////////////////////////////////////////////*/\n     //region SurfaceHolderCallback helpers\n+\n     private void setupVideoSurface() {\n         // make sure there is nothing left over from previous calls\n         cleanupVideoSurface();\n@@ -4331,5 +4332,5 @@ private void cleanupVideoSurface() {\n             }\n         }\n     }\n-    //endregion SurfaceHolderCallback helpers\n+    //endregion\n }",
      "parent_sha": "c3b9465aa37a504455960eb2e696ed54883c1d26"
    }
  },
  {
    "oid": "b575046c05c9a47ceb856a626c79aa45933aae6e",
    "message": "Fix choice dialogs on API 19 by manually getting drawable",
    "date": "2020-05-21T13:39:36Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/b575046c05c9a47ceb856a626c79aa45933aae6e",
    "details": {
      "sha": "39f6b217dfdd4538300d37656fef3377af4f2b66",
      "filename": "app/src/main/java/org/schabi/newpipe/RouterActivity.java",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/b575046c05c9a47ceb856a626c79aa45933aae6e/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FRouterActivity.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/b575046c05c9a47ceb856a626c79aa45933aae6e/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FRouterActivity.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FRouterActivity.java?ref=b575046c05c9a47ceb856a626c79aa45933aae6e",
      "patch": "@@ -25,6 +25,7 @@\n import androidx.annotation.Nullable;\n import androidx.appcompat.app.AlertDialog;\n import androidx.appcompat.app.AppCompatActivity;\n+import androidx.appcompat.content.res.AppCompatResources;\n import androidx.core.app.NotificationCompat;\n import androidx.fragment.app.FragmentManager;\n \n@@ -313,7 +314,9 @@ private void showDialog(final List<AdapterChoiceItem> choices) {\n             final RadioButton radioButton\n                     = (RadioButton) inflater.inflate(R.layout.list_radio_icon_item, null);\n             radioButton.setText(item.description);\n-            radioButton.setCompoundDrawablesWithIntrinsicBounds(item.icon, 0, 0, 0);\n+            radioButton.setCompoundDrawablesWithIntrinsicBounds(\n+                    AppCompatResources.getDrawable(getApplicationContext(), item.icon),\n+                    null, null, null);\n             radioButton.setChecked(false);\n             radioButton.setId(id++);\n             radioButton.setLayoutParams(new RadioGroup.LayoutParams(",
      "parent_sha": "b5c60d2be24cdf752c736eb7a3bddb4c1b5b4f25"
    }
  },
  {
    "oid": "b6841158df60b066a0b53fe80f4a780d822c227a",
    "message": "Remove unused imports and clean up comment style",
    "date": "2020-02-02T20:48:45Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/b6841158df60b066a0b53fe80f4a780d822c227a",
    "details": {
      "sha": "d72f729b576b2707fcdae861ab3fefc1ccf6d54f",
      "filename": "app/src/main/java/org/schabi/newpipe/ReCaptchaActivity.java",
      "status": "modified",
      "additions": 5,
      "deletions": 7,
      "changes": 12,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/b6841158df60b066a0b53fe80f4a780d822c227a/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FReCaptchaActivity.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/b6841158df60b066a0b53fe80f4a780d822c227a/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FReCaptchaActivity.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FReCaptchaActivity.java?ref=b6841158df60b066a0b53fe80f4a780d822c227a",
      "patch": "@@ -1,7 +1,6 @@\n package org.schabi.newpipe;\n \n import android.content.Intent;\n-import android.graphics.Bitmap;\n import android.os.Build;\n import android.os.Bundle;\n import androidx.core.app.NavUtils;\n@@ -20,7 +19,6 @@\n import org.schabi.newpipe.util.ThemeHelper;\n \n import javax.annotation.Nonnull;\n-import javax.annotation.Nullable;\n \n /*\n  * Created by beneth <bmauduit@beneth.fr> on 06.12.16.\n@@ -63,13 +61,13 @@ protected void onCreate(Bundle savedInstanceState) {\n             url = YT_URL;\n         }\n \n-        // Set return to Cancel by default\n+        // set return to Cancel by default\n         setResult(RESULT_CANCELED);\n \n \n         webView = findViewById(R.id.reCaptchaWebView);\n \n-        // Enable Javascript\n+        // enable Javascript\n         WebSettings webSettings = webView.getSettings();\n         webSettings.setJavaScriptEnabled(true);\n \n@@ -81,7 +79,7 @@ public void onPageFinished(WebView view, String url) {\n             }\n         });\n \n-        // Cleaning cache, history and cookies from webView\n+        // cleaning cache, history and cookies from webView\n         webView.clearCache(true);\n         webView.clearHistory();\n         android.webkit.CookieManager cookieManager = CookieManager.getInstance();\n@@ -128,7 +126,7 @@ public boolean onOptionsItemSelected(MenuItem item) {\n     private void saveCookiesAndFinish() {\n         handleCookies(webView.getUrl()); // try to get cookies of unclosed page\n         if (!foundCookies.isEmpty()) {\n-            // Give cookies to Downloader class\n+            // give cookies to Downloader class\n             DownloaderImpl.getInstance().setCookies(foundCookies);\n             setResult(RESULT_OK);\n         }\n@@ -151,7 +149,7 @@ private void handleCookies(String url) {\n \n     private void addYoutubeCookies(@Nonnull String cookies) {\n         if (cookies.contains(\"s_gl=\") || cookies.contains(\"goojf=\") || cookies.contains(\"VISITOR_INFO1_LIVE=\")) {\n-            // Youtube seems to also need the other cookies:\n+            // youtube seems to also need the other cookies:\n             addCookie(cookies);\n         }\n     }",
      "parent_sha": "3372bacc6291b4de9f470c7724645d1ac9665964"
    }
  },
  {
    "oid": "6909d1e527a5337d712bb1c20dcb5e045f18536c",
    "message": "Simplify an if else",
    "date": "2020-10-31T19:57:01Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/6909d1e527a5337d712bb1c20dcb5e045f18536c",
    "details": {
      "sha": "79e1854e90bda511f812d691185720a502af6a85",
      "filename": "app/src/main/java/org/schabi/newpipe/fragments/list/BaseListFragment.java",
      "status": "modified",
      "additions": 1,
      "deletions": 5,
      "changes": 6,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/6909d1e527a5337d712bb1c20dcb5e045f18536c/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2FBaseListFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/6909d1e527a5337d712bb1c20dcb5e045f18536c/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2FBaseListFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2FBaseListFragment.java?ref=6909d1e527a5337d712bb1c20dcb5e045f18536c",
      "patch": "@@ -378,11 +378,7 @@ public void onCreateOptionsMenu(final Menu menu, final MenuInflater inflater) {\n         final ActionBar supportActionBar = activity.getSupportActionBar();\n         if (supportActionBar != null) {\n             supportActionBar.setDisplayShowTitleEnabled(true);\n-            if (useAsFrontPage) {\n-                supportActionBar.setDisplayHomeAsUpEnabled(false);\n-            } else {\n-                supportActionBar.setDisplayHomeAsUpEnabled(true);\n-            }\n+            supportActionBar.setDisplayHomeAsUpEnabled(!useAsFrontPage);\n         }\n     }\n ",
      "parent_sha": "972235bfba3c082dfe3e6d2b48e6f33df42ab504"
    }
  },
  {
    "oid": "0510db75fb99166537e632521e9d500998c5aee5",
    "message": "Enqueuing now triggers video playing if the play queue has done playing",
    "date": "2018-10-02T16:31:28Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/0510db75fb99166537e632521e9d500998c5aee5",
    "details": {
      "sha": "f5f843caad6e40ea0c59a1c29fa41dfa149ac1b6",
      "filename": "app/src/main/java/org/schabi/newpipe/player/BasePlayer.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/0510db75fb99166537e632521e9d500998c5aee5/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FBasePlayer.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/0510db75fb99166537e632521e9d500998c5aee5/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FBasePlayer.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FBasePlayer.java?ref=0510db75fb99166537e632521e9d500998c5aee5",
      "patch": "@@ -230,7 +230,8 @@ public void handleIntent(Intent intent) {\n             int sizeBeforeAppend = playQueue.size();\n             playQueue.append(queue.getStreams());\n \n-            if (intent.getBooleanExtra(SELECT_ON_APPEND, false) &&\n+            if ((intent.getBooleanExtra(SELECT_ON_APPEND, false) ||\n+                    getCurrentState() == STATE_COMPLETED) &&\n                     queue.getStreams().size() > 0) {\n                 playQueue.setIndex(sizeBeforeAppend);\n             }",
      "parent_sha": "a98e7451162569d010de738f29bf5896d3d4cd90"
    }
  },
  {
    "oid": "eb9f300e601394d952b643b1fe6e80358d4d2e49",
    "message": "Fix seekbar preview crashes (#11584)\n\nFixed crashes from recycled bitmaps by creating real copies of bitmaps if necessary + some minor refactoring",
    "date": "2024-10-10T08:32:06Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/eb9f300e601394d952b643b1fe6e80358d4d2e49",
    "details": {
      "sha": "2db6d39b2f63f7eb255ee860d157ddfdbf267c13",
      "filename": "app/src/main/java/org/schabi/newpipe/player/seekbarpreview/SeekbarPreviewThumbnailHolder.java",
      "status": "modified",
      "additions": 29,
      "deletions": 11,
      "changes": 40,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/eb9f300e601394d952b643b1fe6e80358d4d2e49/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2Fseekbarpreview%2FSeekbarPreviewThumbnailHolder.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/eb9f300e601394d952b643b1fe6e80358d4d2e49/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2Fseekbarpreview%2FSeekbarPreviewThumbnailHolder.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2Fseekbarpreview%2FSeekbarPreviewThumbnailHolder.java?ref=eb9f300e601394d952b643b1fe6e80358d4d2e49",
      "patch": "@@ -132,17 +132,8 @@ private void generateDataFrom(final Frameset frameset, final UUID updateRequestI\n \n                 // Get the bounds where the frame is found\n                 final int[] bounds = frameset.getFrameBoundsAt(currentPosMs);\n-                generatedDataForUrl.put(currentPosMs, () -> {\n-                    // It can happen, that the original bitmap could not be downloaded\n-                    // In such a case - we don't want a NullPointer - simply return null\n-                    if (srcBitMap == null) {\n-                        return null;\n-                    }\n-\n-                    // Cut out the corresponding bitmap form the \"srcBitMap\"\n-                    return Bitmap.createBitmap(srcBitMap, bounds[1], bounds[2],\n-                            frameset.getFrameWidth(), frameset.getFrameHeight());\n-                });\n+                generatedDataForUrl.put(currentPosMs,\n+                                        createBitmapSupplier(srcBitMap, bounds, frameset));\n \n                 currentPosMs += frameset.getDurationPerFrame();\n                 pos++;\n@@ -165,6 +156,33 @@ private void generateDataFrom(final Frameset frameset, final UUID updateRequestI\n         }\n     }\n \n+    private Supplier<Bitmap> createBitmapSupplier(final Bitmap srcBitMap,\n+                                                  final int[] bounds,\n+                                                  final Frameset frameset) {\n+        return () -> {\n+            // It can happen, that the original bitmap could not be downloaded\n+            // (or it was recycled though that should not happen)\n+            // In such a case - we don't want a NullPointer/\n+            // \"cannot use a recycled source in createBitmap\" Exception -> simply return null\n+            if (srcBitMap == null || srcBitMap.isRecycled()) {\n+                return null;\n+            }\n+\n+            // Cut out the corresponding bitmap form the \"srcBitMap\"\n+            final Bitmap cutOutBitmap = Bitmap.createBitmap(srcBitMap, bounds[1], bounds[2],\n+                    frameset.getFrameWidth(), frameset.getFrameHeight());\n+\n+            // If the cut out bitmap is identical to its source,\n+            // we need to copy the bitmap to create a new instance.\n+            // createBitmap allows itself to return the original object that is was created with\n+            // this leads to recycled bitmaps being returned (if they are identical)\n+            // Reference: https://stackoverflow.com/a/23683075 + first comment\n+            // Fixes: https://github.com/TeamNewPipe/NewPipe/issues/11461\n+            return cutOutBitmap == srcBitMap\n+                    ? cutOutBitmap.copy(cutOutBitmap.getConfig(), true) : cutOutBitmap;\n+        };\n+    }\n+\n     @Nullable\n     private Bitmap getBitMapFrom(final String url) {\n         if (url == null) {",
      "parent_sha": "035c394cf6704c0af9077c01ebfa55b810d02140"
    }
  },
  {
    "oid": "263a816c3b9ad1de439a16d1a70964ece6bf74e2",
    "message": "-Fixed preferences fetching.",
    "date": "2018-02-11T19:40:08Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/263a816c3b9ad1de439a16d1a70964ece6bf74e2",
    "details": {
      "sha": "ea6715f1632c61c8e5431dd30fba1527446b91bf",
      "filename": "app/src/main/java/org/schabi/newpipe/MainActivity.java",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/263a816c3b9ad1de439a16d1a70964ece6bf74e2/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FMainActivity.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/263a816c3b9ad1de439a16d1a70964ece6bf74e2/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FMainActivity.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FMainActivity.java?ref=263a816c3b9ad1de439a16d1a70964ece6bf74e2",
      "patch": "@@ -27,6 +27,7 @@\n import android.os.Handler;\n import android.os.Looper;\n import android.preference.PreferenceManager;\n+import android.support.annotation.NonNull;\n import android.support.design.widget.NavigationView;\n import android.support.v4.app.Fragment;\n import android.support.v4.view.GravityCompat;\n@@ -217,7 +218,8 @@ private void onHomeButtonPressed() {\n     private void onHeapDumpToggled(@NonNull MenuItem item) {\n         final boolean isHeapDumpEnabled = !item.isChecked();\n \n-        sharedPreferences.edit().putBoolean(getString(R.string.allow_heap_dumping_key), isHeapDumpEnabled).apply();\n+        PreferenceManager.getDefaultSharedPreferences(this).edit()\n+                .putBoolean(getString(R.string.allow_heap_dumping_key), isHeapDumpEnabled).apply();\n         item.setChecked(isHeapDumpEnabled);\n \n         final String heapDumpNotice;\n@@ -267,8 +269,8 @@ public boolean onCreateOptionsMenu(Menu menu) {\n     public boolean onPrepareOptionsMenu(Menu menu) {\n         MenuItem heapDumpToggle = menu.findItem(R.id.action_toggle_heap_dump);\n         if (heapDumpToggle != null) {\n-            final boolean isToggled = sharedPreferences.getBoolean(\n-                    getString(R.string.allow_heap_dumping_key), false);\n+            final boolean isToggled = PreferenceManager.getDefaultSharedPreferences(this)\n+                    .getBoolean(getString(R.string.allow_heap_dumping_key), false);\n             heapDumpToggle.setChecked(isToggled);\n         }\n         return super.onPrepareOptionsMenu(menu);",
      "parent_sha": "e7d148336b2c88c09835775c6e5e0e9d55c20a43"
    }
  },
  {
    "oid": "40957c445f4fa1d0de5d7d507df6f355723e7b44",
    "message": "Implemented share button in MainVideoPlayer\n\nAndroid Studio also decided to change the indentation of some lines",
    "date": "2019-04-06T18:27:13Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/40957c445f4fa1d0de5d7d507df6f355723e7b44",
    "details": {
      "sha": "cf179917df7f7a44ee2f389565ab7916ce15e117",
      "filename": "app/src/main/java/org/schabi/newpipe/player/MainVideoPlayer.java",
      "status": "modified",
      "additions": 23,
      "deletions": 9,
      "changes": 32,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/40957c445f4fa1d0de5d7d507df6f355723e7b44/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FMainVideoPlayer.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/40957c445f4fa1d0de5d7d507df6f355723e7b44/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FMainVideoPlayer.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fplayer%2FMainVideoPlayer.java?ref=40957c445f4fa1d0de5d7d507df6f355723e7b44",
      "patch": "@@ -75,6 +75,7 @@\n import org.schabi.newpipe.util.ListHelper;\n import org.schabi.newpipe.util.NavigationHelper;\n import org.schabi.newpipe.util.PermissionHelper;\n+import org.schabi.newpipe.util.ShareUtils;\n import org.schabi.newpipe.util.StateSaver;\n import org.schabi.newpipe.util.ThemeHelper;\n \n@@ -283,8 +284,8 @@ private void showSystemUi() {\n         if (playerImpl != null && playerImpl.queueVisible) return;\n \n         final int visibility = View.SYSTEM_UI_FLAG_LAYOUT_STABLE\n-                    | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN\n-                    | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION;\n+                | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN\n+                | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION;\n \n         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n             @ColorInt final int systenUiColor =\n@@ -402,6 +403,7 @@ private class VideoPlayerImpl extends VideoPlayer {\n         private boolean queueVisible;\n \n         private ImageButton moreOptionsButton;\n+        private ImageButton shareButton;\n         private ImageButton toggleOrientationButton;\n         private ImageButton switchPopupButton;\n         private ImageButton switchBackgroundButton;\n@@ -436,6 +438,7 @@ public void initViews(View rootView) {\n \n             this.moreOptionsButton = rootView.findViewById(R.id.moreOptionsButton);\n             this.secondaryControls = rootView.findViewById(R.id.secondaryControls);\n+            this.shareButton = rootView.findViewById(R.id.share);\n             this.toggleOrientationButton = rootView.findViewById(R.id.toggleOrientation);\n             this.switchBackgroundButton = rootView.findViewById(R.id.switchBackground);\n             this.switchPopupButton = rootView.findViewById(R.id.switchPopup);\n@@ -481,6 +484,7 @@ public void initListeners() {\n             playNextButton.setOnClickListener(this);\n \n             moreOptionsButton.setOnClickListener(this);\n+            shareButton.setOnClickListener(this);\n             toggleOrientationButton.setOnClickListener(this);\n             switchBackgroundButton.setOnClickListener(this);\n             switchPopupButton.setOnClickListener(this);\n@@ -631,6 +635,9 @@ public void onClick(View v) {\n             } else if (v.getId() == moreOptionsButton.getId()) {\n                 onMoreOptionsClicked();\n \n+            } else if (v.getId() == shareButton.getId()) {\n+                onShareClicked();\n+\n             } else if (v.getId() == toggleOrientationButton.getId()) {\n                 onScreenRotationClicked();\n \n@@ -684,6 +691,13 @@ private void onMoreOptionsClicked() {\n             showControls(DEFAULT_CONTROLS_DURATION);\n         }\n \n+        private void onShareClicked() {\n+            // share video at the current time (youtube.com/watch?v=ID&t=SECONDS)\n+            ShareUtils.shareUrl(MainVideoPlayer.this,\n+                    playerImpl.getVideoTitle(),\n+                    playerImpl.getVideoUrl() + \"&t=\" + String.valueOf(playerImpl.getPlaybackSeekBar().getProgress()/1000));\n+        }\n+\n         private void onScreenRotationClicked() {\n             if (DEBUG) Log.d(TAG, \"onScreenRotationClicked() called\");\n             toggleOrientation();\n@@ -847,8 +861,8 @@ public void hideControls(final long duration, long delay) {\n             if (DEBUG) Log.d(TAG, \"hideControls() called with: delay = [\" + delay + \"]\");\n             getControlsVisibilityHandler().removeCallbacksAndMessages(null);\n             getControlsVisibilityHandler().postDelayed(() ->\n-                    animateView(getControlsRoot(), false, duration, 0,\n-                            MainVideoPlayer.this::hideSystemUi),\n+                            animateView(getControlsRoot(), false, duration, 0,\n+                                    MainVideoPlayer.this::hideSystemUi),\n                     /*delayMillis=*/delay\n             );\n         }\n@@ -1052,9 +1066,9 @@ public boolean onScroll(MotionEvent initialEvent, MotionEvent movingEvent, float\n \n                 final int resId =\n                         currentProgressPercent <= 0 ? R.drawable.ic_volume_off_white_72dp\n-                        : currentProgressPercent < 0.25 ? R.drawable.ic_volume_mute_white_72dp\n-                        : currentProgressPercent < 0.75 ? R.drawable.ic_volume_down_white_72dp\n-                        : R.drawable.ic_volume_up_white_72dp;\n+                                : currentProgressPercent < 0.25 ? R.drawable.ic_volume_mute_white_72dp\n+                                : currentProgressPercent < 0.75 ? R.drawable.ic_volume_down_white_72dp\n+                                : R.drawable.ic_volume_up_white_72dp;\n \n                 playerImpl.getVolumeImageView().setImageDrawable(\n                         AppCompatResources.getDrawable(getApplicationContext(), resId)\n@@ -1078,8 +1092,8 @@ public boolean onScroll(MotionEvent initialEvent, MotionEvent movingEvent, float\n \n                 final int resId =\n                         currentProgressPercent < 0.25 ? R.drawable.ic_brightness_low_white_72dp\n-                        : currentProgressPercent < 0.75 ? R.drawable.ic_brightness_medium_white_72dp\n-                        : R.drawable.ic_brightness_high_white_72dp;\n+                                : currentProgressPercent < 0.75 ? R.drawable.ic_brightness_medium_white_72dp\n+                                : R.drawable.ic_brightness_high_white_72dp;\n \n                 playerImpl.getBrightnessImageView().setImageDrawable(\n                         AppCompatResources.getDrawable(getApplicationContext(), resId)",
      "parent_sha": "8eead9fda21ba6588f39b6655eacfc1cd5581c70"
    }
  },
  {
    "oid": "0062ff9cfabce706506f8651b1a2b8059f5e3a43",
    "message": "Fix deprecations, warnings and useless null checks in SearchFragment",
    "date": "2020-09-19T13:25:04Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/0062ff9cfabce706506f8651b1a2b8059f5e3a43",
    "details": {
      "sha": "64eaf3a3d007369acc6e5dfa88be36f3e994adeb",
      "filename": "app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java",
      "status": "modified",
      "additions": 47,
      "deletions": 59,
      "changes": 106,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/0062ff9cfabce706506f8651b1a2b8059f5e3a43/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2Fsearch%2FSearchFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/0062ff9cfabce706506f8651b1a2b8059f5e3a43/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2Fsearch%2FSearchFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Flist%2Fsearch%2FSearchFragment.java?ref=0062ff9cfabce706506f8651b1a2b8059f5e3a43",
      "patch": "@@ -79,7 +79,7 @@\n import static java.util.Arrays.asList;\n import static org.schabi.newpipe.util.AnimationUtils.animateView;\n \n-public class SearchFragment extends BaseListFragment<SearchInfo, ListExtractor.InfoItemsPage>\n+public class SearchFragment extends BaseListFragment<SearchInfo, ListExtractor.InfoItemsPage<?>>\n         implements BackPressable {\n     /*//////////////////////////////////////////////////////////////////////////\n     // Search\n@@ -134,7 +134,6 @@ public class SearchFragment extends BaseListFragment<SearchInfo, ListExtractor.I\n     private Map<Integer, String> menuItemToFilterName;\n     private StreamingService service;\n     private Page nextPage;\n-    private String contentCountry;\n     private boolean isSuggestionsEnabled = true;\n \n     private Disposable searchDisposable;\n@@ -206,8 +205,6 @@ public void onCreate(final Bundle savedInstanceState) {\n                 = PreferenceManager.getDefaultSharedPreferences(activity);\n         isSuggestionsEnabled = preferences\n                 .getBoolean(getString(R.string.show_search_suggestions_key), true);\n-        contentCountry = preferences.getString(getString(R.string.content_country_key),\n-                getString(R.string.default_localization_key));\n     }\n \n     @Override\n@@ -235,9 +232,7 @@ public void onPause() {\n         if (suggestionDisposable != null) {\n             suggestionDisposable.dispose();\n         }\n-        if (disposables != null) {\n-            disposables.clear();\n-        }\n+        disposables.clear();\n         hideKeyboardSearch();\n     }\n \n@@ -251,8 +246,8 @@ public void onResume() {\n         try {\n             service = NewPipe.getService(serviceId);\n         } catch (final Exception e) {\n-            ErrorActivity.reportError(getActivity(), e, getActivity().getClass(),\n-                    getActivity().findViewById(android.R.id.content),\n+            ErrorActivity.reportError(getActivity(), e, requireActivity().getClass(),\n+                    requireActivity().findViewById(android.R.id.content),\n                     ErrorActivity.ErrorInfo.make(UserAction.UI_ERROR,\n                             \"\",\n                             \"\", R.string.general_error));\n@@ -305,26 +300,20 @@ public void onDestroy() {\n         if (suggestionDisposable != null) {\n             suggestionDisposable.dispose();\n         }\n-        if (disposables != null) {\n-            disposables.clear();\n-        }\n+        disposables.clear();\n     }\n \n     @Override\n     public void onActivityResult(final int requestCode, final int resultCode, final Intent data) {\n-        switch (requestCode) {\n-            case ReCaptchaActivity.RECAPTCHA_REQUEST:\n-                if (resultCode == Activity.RESULT_OK\n-                        && !TextUtils.isEmpty(searchString)) {\n-                    search(searchString, contentFilter, sortFilter);\n-                } else {\n-                    Log.e(TAG, \"ReCaptcha failed\");\n-                }\n-                break;\n-\n-            default:\n-                Log.e(TAG, \"Request code from activity not supported [\" + requestCode + \"]\");\n-                break;\n+        if (requestCode == ReCaptchaActivity.RECAPTCHA_REQUEST) {\n+            if (resultCode == Activity.RESULT_OK\n+                    && !TextUtils.isEmpty(searchString)) {\n+                search(searchString, contentFilter, sortFilter);\n+            } else {\n+                Log.e(TAG, \"ReCaptcha failed\");\n+            }\n+        } else {\n+            Log.e(TAG, \"Request code from activity not supported [\" + requestCode + \"]\");\n         }\n     }\n \n@@ -342,7 +331,7 @@ protected void initViews(final View rootView, final Bundle savedInstanceState) {\n             @Override\n             public int getMovementFlags(@NonNull final RecyclerView recyclerView,\n                                         @NonNull final RecyclerView.ViewHolder viewHolder) {\n-                return getSuggestionMovementFlags(recyclerView, viewHolder);\n+                return getSuggestionMovementFlags(viewHolder);\n             }\n \n             @Override\n@@ -354,7 +343,7 @@ public boolean onMove(@NonNull final RecyclerView recyclerView,\n \n             @Override\n             public void onSwiped(@NonNull final RecyclerView.ViewHolder viewHolder, final int i) {\n-                onSuggestionItemSwiped(viewHolder, i);\n+                onSuggestionItemSwiped(viewHolder);\n             }\n         }).attachToRecyclerView(suggestionsRecyclerView);\n \n@@ -673,8 +662,7 @@ private void hideKeyboardSearch() {\n     }\n \n     private void showDeleteSuggestionDialog(final SuggestionItem item) {\n-        if (activity == null || historyRecordManager == null || suggestionPublisher == null\n-                || searchEditText == null || disposables == null) {\n+        if (activity == null || historyRecordManager == null || searchEditText == null) {\n             return;\n         }\n         final String query = item.query;\n@@ -802,21 +790,23 @@ protected void doInitialLoadLogic() {\n         // no-op\n     }\n \n-    private void search(final String ss, final String[] cf, final String sf) {\n+    private void search(final String theSearchString,\n+                        final String[] theContentFilter,\n+                        final String theSortFilter) {\n         if (DEBUG) {\n-            Log.d(TAG, \"search() called with: query = [\" + ss + \"]\");\n+            Log.d(TAG, \"search() called with: query = [\" + theSearchString + \"]\");\n         }\n-        if (ss.isEmpty()) {\n+        if (theSearchString.isEmpty()) {\n             return;\n         }\n \n         try {\n-            final StreamingService streamingService = NewPipe.getServiceByUrl(ss);\n+            final StreamingService streamingService = NewPipe.getServiceByUrl(theSearchString);\n             if (streamingService != null) {\n                 showLoading();\n                 disposables.add(Observable\n-                        .fromCallable(() ->\n-                                NavigationHelper.getIntentByLink(activity, streamingService, ss))\n+                        .fromCallable(() -> NavigationHelper.getIntentByLink(activity,\n+                                streamingService, theSearchString))\n                         .subscribeOn(Schedulers.io())\n                         .observeOn(AndroidSchedulers.mainThread())\n                         .subscribe(intent -> {\n@@ -831,29 +821,27 @@ private void search(final String ss, final String[] cf, final String sf) {\n         }\n \n         lastSearchedString = this.searchString;\n-        this.searchString = ss;\n+        this.searchString = theSearchString;\n         infoListAdapter.clearStreamItemList();\n         hideSuggestionsPanel();\n         hideKeyboardSearch();\n \n-        historyRecordManager.onSearched(serviceId, ss)\n+        disposables.add(historyRecordManager.onSearched(serviceId, theSearchString)\n                 .observeOn(AndroidSchedulers.mainThread())\n                 .subscribe(\n                         ignored -> {\n                         },\n                         error -> showSnackBarError(error, UserAction.SEARCHED,\n-                                NewPipe.getNameOfService(serviceId), ss, 0)\n-                );\n-        suggestionPublisher.onNext(ss);\n+                                NewPipe.getNameOfService(serviceId), theSearchString, 0)\n+                ));\n+        suggestionPublisher.onNext(theSearchString);\n         startLoading(false);\n     }\n \n     @Override\n     public void startLoading(final boolean forceLoad) {\n         super.startLoading(forceLoad);\n-        if (disposables != null) {\n-            disposables.clear();\n-        }\n+        disposables.clear();\n         if (searchDisposable != null) {\n             searchDisposable.dispose();\n         }\n@@ -892,8 +880,7 @@ protected void loadMoreItems() {\n \n     @Override\n     protected boolean hasMoreItems() {\n-        // TODO: No way to tell if search has more items in the moment\n-        return true;\n+        return Page.isValid(nextPage);\n     }\n \n     @Override\n@@ -906,22 +893,25 @@ protected void onItemSelected(final InfoItem selectedItem) {\n     // Utils\n     //////////////////////////////////////////////////////////////////////////*/\n \n-    private void changeContentFilter(final MenuItem item, final List<String> cf) {\n-        this.filterItemCheckedId = item.getItemId();\n+    private void changeContentFilter(final MenuItem item, final List<String> theContentFilter) {\n+        filterItemCheckedId = item.getItemId();\n         item.setChecked(true);\n \n-        this.contentFilter = new String[]{cf.get(0)};\n+        contentFilter = new String[]{theContentFilter.get(0)};\n \n         if (!TextUtils.isEmpty(searchString)) {\n-            search(searchString, this.contentFilter, sortFilter);\n+            search(searchString, contentFilter, sortFilter);\n         }\n     }\n \n-    private void setQuery(final int sid, final String ss, final String[] cf, final String sf) {\n-        this.serviceId = sid;\n-        this.searchString = searchString;\n-        this.contentFilter = cf;\n-        this.sortFilter = sf;\n+    private void setQuery(final int theServiceId,\n+                          final String theSearchString,\n+                          final String[] theContentFilter,\n+                          final String theSortFilter) {\n+        serviceId = theServiceId;\n+        searchString = theSearchString;\n+        contentFilter = theContentFilter;\n+        sortFilter = theSortFilter;\n     }\n \n     /*//////////////////////////////////////////////////////////////////////////\n@@ -1038,7 +1028,7 @@ private void handleSearchSuggestion() {\n     }\n \n     @Override\n-    public void handleNextItems(final ListExtractor.InfoItemsPage result) {\n+    public void handleNextItems(final ListExtractor.InfoItemsPage<?> result) {\n         showListFooter(false);\n         infoListAdapter.addInfoItemList(result.getItems());\n         nextPage = result.getNextPage();\n@@ -1077,8 +1067,7 @@ protected boolean onError(final Throwable exception) {\n     // Suggestion item touch helper\n     //////////////////////////////////////////////////////////////////////////*/\n \n-    public int getSuggestionMovementFlags(@NonNull final RecyclerView recyclerView,\n-                                          @NonNull final RecyclerView.ViewHolder viewHolder) {\n+    public int getSuggestionMovementFlags(@NonNull final RecyclerView.ViewHolder viewHolder) {\n         final int position = viewHolder.getAdapterPosition();\n         if (position == RecyclerView.NO_POSITION) {\n             return 0;\n@@ -1089,8 +1078,7 @@ public int getSuggestionMovementFlags(@NonNull final RecyclerView recyclerView,\n                 ItemTouchHelper.LEFT | ItemTouchHelper.RIGHT) : 0;\n     }\n \n-    public void onSuggestionItemSwiped(@NonNull final RecyclerView.ViewHolder viewHolder,\n-                                       final int i) {\n+    public void onSuggestionItemSwiped(@NonNull final RecyclerView.ViewHolder viewHolder) {\n         final int position = viewHolder.getAdapterPosition();\n         final String query = suggestionListAdapter.getItem(position).query;\n         final Disposable onDelete = historyRecordManager.deleteSearchHistory(query)",
      "parent_sha": "f8de72f59f42da7f57a13d5552e25e3675060a24"
    }
  },
  {
    "oid": "f24fab0fa2a7d35a0883f04f38d5807773acb4e5",
    "message": "fix brake when selecting a mediaccc channel form subscription page",
    "date": "2019-02-25T11:24:48Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/f24fab0fa2a7d35a0883f04f38d5807773acb4e5",
    "details": {
      "sha": "7e80264e6130d769fb86f673597972bada4e6d24",
      "filename": "app/src/main/java/org/schabi/newpipe/local/subscription/SubscriptionService.java",
      "status": "modified",
      "additions": 8,
      "deletions": 3,
      "changes": 11,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/f24fab0fa2a7d35a0883f04f38d5807773acb4e5/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Flocal%2Fsubscription%2FSubscriptionService.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/f24fab0fa2a7d35a0883f04f38d5807773acb4e5/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Flocal%2Fsubscription%2FSubscriptionService.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Flocal%2Fsubscription%2FSubscriptionService.java?ref=f24fab0fa2a7d35a0883f04f38d5807773acb4e5",
      "patch": "@@ -147,11 +147,16 @@ public List<SubscriptionEntity> upsertAll(final List<ChannelInfo> infoList) {\n     }\n \n     private boolean isSubscriptionUpToDate(final ChannelInfo info, final SubscriptionEntity entity) {\n-        return info.getUrl().equals(entity.getUrl()) &&\n+        return equalsAndNotNull(info.getUrl(), entity.getUrl()) &&\n                 info.getServiceId() == entity.getServiceId() &&\n                 info.getName().equals(entity.getName()) &&\n-                info.getAvatarUrl().equals(entity.getAvatarUrl()) &&\n-                info.getDescription().equals(entity.getDescription()) &&\n+                equalsAndNotNull(info.getAvatarUrl(), entity.getAvatarUrl()) &&\n+                equalsAndNotNull(info.getDescription(), entity.getDescription()) &&\n                 info.getSubscriberCount() == entity.getSubscriberCount();\n     }\n+\n+    private boolean equalsAndNotNull(final Object o1, final Object o2) {\n+        return (o1 != null && o2 != null)\n+                && o1.equals(o2);\n+    }\n }",
      "parent_sha": "261620fd1312ff5961fca4c9c768fd81efafde54"
    }
  },
  {
    "oid": "4eddd2c3d1e246d92e8da81e335c3dc10fc1e68c",
    "message": "Fix random NullPointerException when adding video player view",
    "date": "2022-07-19T18:01:46Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/4eddd2c3d1e246d92e8da81e335c3dc10fc1e68c",
    "details": {
      "sha": "cc80075969d5b6d0600de9df4e35db264fc5b90c",
      "filename": "app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/4eddd2c3d1e246d92e8da81e335c3dc10fc1e68c/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Fdetail%2FVideoDetailFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/4eddd2c3d1e246d92e8da81e335c3dc10fc1e68c/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Fdetail%2FVideoDetailFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Ffragments%2Fdetail%2FVideoDetailFragment.java?ref=4eddd2c3d1e246d92e8da81e335c3dc10fc1e68c",
      "patch": "@@ -1313,9 +1313,11 @@ private void addVideoPlayerView() {\n         // Prevent from re-adding a view multiple times\n         new Handler(Looper.getMainLooper()).post(() ->\n                 player.UIs().get(MainPlayerUi.class).ifPresent(playerUi -> {\n-                    playerUi.removeViewFromParent();\n-                    binding.playerPlaceholder.addView(playerUi.getBinding().getRoot());\n-                    playerUi.setupVideoSurfaceIfNeeded();\n+                    if (binding != null) {\n+                        playerUi.removeViewFromParent();\n+                        binding.playerPlaceholder.addView(playerUi.getBinding().getRoot());\n+                        playerUi.setupVideoSurfaceIfNeeded();\n+                    }\n                 }));\n     }\n ",
      "parent_sha": "ae369ec9bad977f394220e596c36bba813eeb039"
    }
  },
  {
    "oid": "02b0909829066d47fcb310e576a83533ab5fdfd0",
    "message": "Fix onActivityResult deprecation in MissionsFragment",
    "date": "2021-06-20T18:14:54Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/02b0909829066d47fcb310e576a83533ab5fdfd0",
    "details": {
      "sha": "2cca3239b91c6cf28e3a042de22a4070dc5fffc7",
      "filename": "app/src/main/java/us/shandian/giga/ui/fragment/MissionsFragment.java",
      "status": "modified",
      "additions": 14,
      "deletions": 11,
      "changes": 25,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/02b0909829066d47fcb310e576a83533ab5fdfd0/app%2Fsrc%2Fmain%2Fjava%2Fus%2Fshandian%2Fgiga%2Fui%2Ffragment%2FMissionsFragment.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/02b0909829066d47fcb310e576a83533ab5fdfd0/app%2Fsrc%2Fmain%2Fjava%2Fus%2Fshandian%2Fgiga%2Fui%2Ffragment%2FMissionsFragment.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Fus%2Fshandian%2Fgiga%2Fui%2Ffragment%2FMissionsFragment.java?ref=02b0909829066d47fcb310e576a83533ab5fdfd0",
      "patch": "@@ -17,6 +17,9 @@\n import android.view.ViewGroup;\n import android.widget.Toast;\n \n+import androidx.activity.result.ActivityResult;\n+import androidx.activity.result.ActivityResultLauncher;\n+import androidx.activity.result.contract.ActivityResultContracts.StartActivityForResult;\n import androidx.annotation.NonNull;\n import androidx.appcompat.app.AlertDialog;\n import androidx.fragment.app.Fragment;\n@@ -44,7 +47,6 @@\n public class MissionsFragment extends Fragment {\n \n     private static final int SPAN_SIZE = 2;\n-    private static final int REQUEST_DOWNLOAD_SAVE_AS = 0x1230;\n \n     private SharedPreferences mPrefs;\n     private boolean mLinear;\n@@ -64,7 +66,8 @@ public class MissionsFragment extends Fragment {\n     private boolean mForceUpdate;\n \n     private DownloadMission unsafeMissionTarget = null;\n-\n+    private final ActivityResultLauncher<Intent> requestDownloadSaveAsLauncher =\n+            registerForActivityResult(new StartActivityForResult(), this::requestDownloadSaveAsResult);\n     private final ServiceConnection mConnection = new ServiceConnection() {\n \n         @Override\n@@ -254,8 +257,9 @@ private void recoverMission(@NonNull DownloadMission mission) {\n             initialPath = Uri.parse(initialSavePath.getAbsolutePath());\n         }\n \n-        startActivityForResult(StoredFileHelper.getNewPicker(mContext, mission.storage.getName(),\n-                mission.storage.getType(), initialPath), REQUEST_DOWNLOAD_SAVE_AS);\n+        requestDownloadSaveAsLauncher.launch(\n+                StoredFileHelper.getNewPicker(mContext, mission.storage.getName(),\n+                        mission.storage.getType(), initialPath));\n     }\n \n     @Override\n@@ -289,18 +293,17 @@ public void onPause() {\n         if (mBinder != null) mBinder.enableNotifications(true);\n     }\n \n-    @Override\n-    public void onActivityResult(int requestCode, int resultCode, Intent data) {\n-        super.onActivityResult(requestCode, resultCode, data);\n-\n-        if (requestCode != REQUEST_DOWNLOAD_SAVE_AS || resultCode != Activity.RESULT_OK) return;\n+    private void requestDownloadSaveAsResult(final ActivityResult result) {\n+        if (result.getResultCode() != Activity.RESULT_OK) {\n+            return;\n+        }\n \n-        if (unsafeMissionTarget == null || data.getData() == null) {\n+        if (unsafeMissionTarget == null || result.getData() == null) {\n             return;\n         }\n \n         try {\n-            Uri fileUri = data.getData();\n+            Uri fileUri = result.getData().getData();\n             if (fileUri.getAuthority() != null && FilePickerActivityHelper.isOwnFileUri(mContext, fileUri)) {\n                 fileUri = Uri.fromFile(Utils.getFileForUri(fileUri));\n             }",
      "parent_sha": "ae39b31c683552502a815889626742d7e32f4bae"
    }
  },
  {
    "oid": "ec7de2a6dc075e7293dbcf95f2975fdafc1e2015",
    "message": "Fix StreamType check, missing import, and styling errors",
    "date": "2021-12-03T21:53:36Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/ec7de2a6dc075e7293dbcf95f2975fdafc1e2015",
    "details": {
      "sha": "82701723b78e9eca9adbf93a1eb57a30ff6761d6",
      "filename": "app/src/main/java/org/schabi/newpipe/util/StreamDialogEntry.java",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/ec7de2a6dc075e7293dbcf95f2975fdafc1e2015/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Futil%2FStreamDialogEntry.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/ec7de2a6dc075e7293dbcf95f2975fdafc1e2015/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Futil%2FStreamDialogEntry.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Futil%2FStreamDialogEntry.java?ref=ec7de2a6dc075e7293dbcf95f2975fdafc1e2015",
      "patch": "@@ -10,6 +10,7 @@\n import org.schabi.newpipe.NewPipeDatabase;\n import org.schabi.newpipe.R;\n import org.schabi.newpipe.extractor.stream.StreamInfoItem;\n+import org.schabi.newpipe.extractor.stream.StreamType;\n import org.schabi.newpipe.local.dialog.PlaylistAppendDialog;\n import org.schabi.newpipe.local.dialog.PlaylistCreationDialog;\n import org.schabi.newpipe.local.history.HistoryRecordManager;\n@@ -21,7 +22,6 @@\n import java.util.List;\n \n import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\n-import io.reactivex.rxjava3.disposables.Disposable;\n import io.reactivex.rxjava3.schedulers.Schedulers;\n \n import static org.schabi.newpipe.extractor.utils.Utils.isNullOrEmpty;\n@@ -221,7 +221,9 @@ private interface InfoCallback {\n     private static void fetchItemInfoIfSparse(final Fragment fragment,\n             final StreamInfoItem item,\n             final InfoCallback callback) {\n-        if ((item.getStreamType() == StreamType.LIVE_STREAM || item.getStreamType() == StreamType.AUDIO_LIVE_STREAM) && item.getDuration() < 0) {\n+        if (!(item.getStreamType() == StreamType.LIVE_STREAM\n+                || item.getStreamType() == StreamType.AUDIO_LIVE_STREAM)\n+                && item.getDuration() < 0) {\n             // Sparse item: fetched by fast fetch\n             ExtractorHelper.getStreamInfo(\n                     item.getServiceId(),",
      "parent_sha": "3d1a3606c977d5351e5cffd1d23d8110d02a455f"
    }
  },
  {
    "oid": "f2e761c07cd89eaa472be31f4c4c94b68974d63e",
    "message": "added reacquisition of CPU lock after resuming",
    "date": "2015-12-17T18:27:35Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/f2e761c07cd89eaa472be31f4c4c94b68974d63e",
    "details": {
      "sha": "7c73d4402a90a4922a836395c134b76d7ff2fe76",
      "filename": "app/src/main/java/org/schabi/newpipe/BackgroundPlayer.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/f2e761c07cd89eaa472be31f4c4c94b68974d63e/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FBackgroundPlayer.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/f2e761c07cd89eaa472be31f4c4c94b68974d63e/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FBackgroundPlayer.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FBackgroundPlayer.java?ref=f2e761c07cd89eaa472be31f4c4c94b68974d63e",
      "patch": "@@ -216,11 +216,13 @@ public void onReceive(Context context, Intent intent) {\n                         mediaPlayer.pause();\n                     }\n                     else {\n+                        //reacquire CPU lock after releasing it on pause\n+                        mediaPlayer.setWakeMode(getApplicationContext(), PowerManager.PARTIAL_WAKE_LOCK);\n                         mediaPlayer.start();\n                     }\n                 }\n                 else if(action.equals(ACTION_STOP)) {\n-                    mediaPlayer.stop();\n+                    mediaPlayer.stop();//this auto-releases CPU lock\n                     afterPlayCleanup();\n                 }\n             }\n@@ -237,7 +239,6 @@ private void afterPlayCleanup() {\n             stopForeground(true);//remove foreground status of service; make us killable\n \n             stopSelf();\n-            //todo:release cpu lock\n         }\n \n         private class EndListener implements MediaPlayer.OnCompletionListener {",
      "parent_sha": "6a741de7d1efb1b8b18d41a76ea65253df11a1f9"
    }
  },
  {
    "oid": "2a7f729e7318f259054f3b3a58d496387b2f6ae5",
    "message": "fixed unit test",
    "date": "2016-03-25T18:37:48Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/2a7f729e7318f259054f3b3a58d496387b2f6ae5",
    "details": {
      "sha": "4c42441ff0d02ddc3d3b4d704a60add46b76d529",
      "filename": "app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeSearchEngineTest.java",
      "status": "modified",
      "additions": 11,
      "deletions": 5,
      "changes": 16,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/2a7f729e7318f259054f3b3a58d496387b2f6ae5/app%2Fsrc%2FandroidTest%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fextractor%2Fyoutube%2FYoutubeSearchEngineTest.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/2a7f729e7318f259054f3b3a58d496387b2f6ae5/app%2Fsrc%2FandroidTest%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fextractor%2Fyoutube%2FYoutubeSearchEngineTest.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2FandroidTest%2Fjava%2Forg%2Fschabi%2Fnewpipe%2Fextractor%2Fyoutube%2FYoutubeSearchEngineTest.java?ref=2a7f729e7318f259054f3b3a58d496387b2f6ae5",
      "patch": "@@ -2,16 +2,15 @@\n \n import android.test.AndroidTestCase;\n \n-import org.apache.commons.lang.exception.ExceptionUtils;\n import org.schabi.newpipe.extractor.AbstractVideoInfo;\n import org.schabi.newpipe.extractor.SearchResult;\n import org.schabi.newpipe.extractor.ServiceList;\n import org.schabi.newpipe.extractor.StreamPreviewInfo;\n import org.schabi.newpipe.extractor.SearchEngine;\n-import org.schabi.newpipe.extractor.services.youtube.YoutubeSearchEngine;\n import org.schabi.newpipe.Downloader;\n-import org.schabi.newpipe.extractor.services.youtube.YoutubeService;\n \n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n import java.util.ArrayList;\n \n /**\n@@ -44,13 +43,13 @@ public void setUp() throws Exception{\n         SearchEngine engine = ServiceList.getService(\"Youtube\")\n                 .getSearchEngineInstance(new Downloader());\n \n-        result = engine.search(\"lefloid\",\n+        result = engine.search(\"adele\",\n                 0, \"de\", new Downloader()).getSearchResult();\n         suggestionReply = engine.suggestionList(\"hello\",\"de\",new Downloader());\n     }\n \n     public void testIfNoErrorOccur() {\n-        assertTrue(result.errors.isEmpty() ? \"\" : ExceptionUtils.getStackTrace(result.errors.get(0))\n+        assertTrue(result.errors.isEmpty() ? \"\" : getStackTrace(result.errors.get(0))\n                 ,result.errors.isEmpty());\n     }\n \n@@ -118,4 +117,11 @@ public void testIfSuggestionsAreValid() {\n             assertTrue(s, !s.isEmpty());\n         }\n     }\n+\n+    private static String getStackTrace(final Throwable throwable) {\n+        final StringWriter sw = new StringWriter();\n+        final PrintWriter pw = new PrintWriter(sw, true);\n+        throwable.printStackTrace(pw);\n+        return sw.getBuffer().toString();\n+    }\n }",
      "parent_sha": "1bef7fbbf3067bf8bb12a141773a67f6d4b674f5"
    }
  },
  {
    "oid": "6f5e99be6fa382ef40ddec3529f7fcf86e0ca0c8",
    "message": "Handle CheckForNewAppVersion exceptions in one place",
    "date": "2020-11-22T12:27:51Z",
    "url": "https://github.com/TeamNewPipe/NewPipe/commit/6f5e99be6fa382ef40ddec3529f7fcf86e0ca0c8",
    "details": {
      "sha": "661337b288b0d251ec74ad36eed5a481ca3da453",
      "filename": "app/src/main/java/org/schabi/newpipe/CheckForNewAppVersion.java",
      "status": "modified",
      "additions": 4,
      "deletions": 15,
      "changes": 19,
      "blob_url": "https://github.com/TeamNewPipe/NewPipe/blob/6f5e99be6fa382ef40ddec3529f7fcf86e0ca0c8/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FCheckForNewAppVersion.java",
      "raw_url": "https://github.com/TeamNewPipe/NewPipe/raw/6f5e99be6fa382ef40ddec3529f7fcf86e0ca0c8/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FCheckForNewAppVersion.java",
      "contents_url": "https://api.github.com/repos/TeamNewPipe/NewPipe/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fschabi%2Fnewpipe%2FCheckForNewAppVersion.java?ref=6f5e99be6fa382ef40ddec3529f7fcf86e0ca0c8",
      "patch": "@@ -22,13 +22,11 @@\n import com.grack.nanojson.JsonParser;\n import com.grack.nanojson.JsonParserException;\n \n-import org.schabi.newpipe.extractor.exceptions.ReCaptchaException;\n import org.schabi.newpipe.report.ErrorActivity;\n import org.schabi.newpipe.report.ErrorInfo;\n import org.schabi.newpipe.report.UserAction;\n \n import java.io.ByteArrayInputStream;\n-import java.io.IOException;\n import java.io.InputStream;\n import java.security.MessageDigest;\n import java.security.NoSuchAlgorithmException;\n@@ -186,15 +184,7 @@ public static Disposable checkNewVersion(@NonNull final App app) {\n                     }\n \n                     // Make a network request to get latest NewPipe data.\n-                    try {\n-                        return DownloaderImpl.getInstance().get(NEWPIPE_API_URL).responseBody();\n-                    } catch (IOException | ReCaptchaException e) {\n-                        // connectivity problems, do not alarm user and fail silently\n-                        if (DEBUG) {\n-                            Log.w(TAG, Log.getStackTraceString(e));\n-                        }\n-                        return null;\n-                    }\n+                    return DownloaderImpl.getInstance().get(NEWPIPE_API_URL).responseBody();\n                 })\n                 .subscribeOn(Schedulers.io())\n                 .observeOn(AndroidSchedulers.mainThread())\n@@ -218,15 +208,14 @@ public static Disposable checkNewVersion(@NonNull final App app) {\n                             } catch (final JsonParserException e) {\n                                 // connectivity problems, do not alarm user and fail silently\n                                 if (DEBUG) {\n-                                    Log.w(TAG, Log.getStackTraceString(e));\n+                                    Log.w(TAG, \"Could not get NewPipe API: invalid json\", e);\n                                 }\n                             }\n                         },\n-                        throwable -> {\n+                        e -> {\n                             // connectivity problems, do not alarm user and fail silently\n                             if (DEBUG) {\n-                                Log.i(TAG, \"Could not get NewPipe API: network problem\");\n-                                Log.i(TAG, Log.getStackTraceString(throwable));\n+                                Log.w(TAG, \"Could not get NewPipe API: network problem\", e);\n                             }\n                         });\n     }",
      "parent_sha": "fd4c37e9b38c1f75f6e91d6e9cc1137890223c6c"
    }
  }
]