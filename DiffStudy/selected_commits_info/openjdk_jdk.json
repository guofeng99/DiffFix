[
  {
    "oid": "d16ea55b627ffbce82044024f791b1a8f1db7f80",
    "message": "8236647: Correct Fix for 8236647: java/lang/invoke/CallSiteTest.java failed with InvocationTargetException in Graal mode\n\nReviewed-by: kvn, never",
    "date": "2020-06-29T15:25:16Z",
    "url": "https://github.com/openjdk/jdk/commit/d16ea55b627ffbce82044024f791b1a8f1db7f80",
    "details": {
      "sha": "4c6c647f264419876199cc823f67f44f2181c22d",
      "filename": "src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.hotspot/src/jdk/vm/ci/hotspot/HotSpotObjectConstantImpl.java",
      "status": "modified",
      "additions": 4,
      "deletions": 8,
      "changes": 12,
      "blob_url": "https://github.com/openjdk/jdk/blob/d16ea55b627ffbce82044024f791b1a8f1db7f80/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FHotSpotObjectConstantImpl.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/d16ea55b627ffbce82044024f791b1a8f1db7f80/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FHotSpotObjectConstantImpl.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FHotSpotObjectConstantImpl.java?ref=d16ea55b627ffbce82044024f791b1a8f1db7f80",
      "patch": "@@ -65,25 +65,21 @@ public HotSpotResolvedObjectType getType() {\n     @Override\n     public abstract int getIdentityHashCode();\n \n-    static class Fields {\n-        // Initializing these too early causes a hang, so do it here in a subclass\n-        static final HotSpotResolvedJavaField callSiteTargetField         = HotSpotMethodHandleAccessProvider.Internals.instance().callSiteTargetField;\n-        static final HotSpotResolvedJavaField constantCallSiteFrozenField = HotSpotMethodHandleAccessProvider.Internals.instance().constantCallSiteFrozenField;\n-    }\n-\n     private boolean isFullyInitializedConstantCallSite() {\n         if (!runtime().getConstantCallSite().isInstance(this)) {\n             return false;\n         }\n         // read ConstantCallSite.isFrozen as a volatile field\n-        boolean isFrozen = readFieldValue(Fields.constantCallSiteFrozenField, true /* volatile */).asBoolean();\n+        HotSpotResolvedJavaField field = HotSpotMethodHandleAccessProvider.Internals.instance().constantCallSiteFrozenField;\n+        boolean isFrozen = readFieldValue(field, true /* volatile */).asBoolean();\n         // isFrozen true implies fully-initialized\n         return isFrozen;\n     }\n \n     private HotSpotObjectConstantImpl readTarget() {\n         // read CallSite.target as a volatile field\n-        return (HotSpotObjectConstantImpl) readFieldValue(Fields.callSiteTargetField, true /* volatile */);\n+        HotSpotResolvedJavaField field = HotSpotMethodHandleAccessProvider.Internals.instance().callSiteTargetField;\n+        return (HotSpotObjectConstantImpl) readFieldValue(field, true /* volatile */);\n     }\n \n     @Override",
      "parent_sha": "97cdfb92f8ac195b9c8a872a34ffa8b19fd74860"
    }
  },
  {
    "oid": "3487361a39babe2b613f542c34fc0a3c38931bac",
    "message": "8242379: [TESTBUG] compiler/loopopts/TestLoopUnswitchingLostCastDependency.java fails with release VMs\n\nReviewed-by: roland, kvn",
    "date": "2020-04-09T01:20:18Z",
    "url": "https://github.com/openjdk/jdk/commit/3487361a39babe2b613f542c34fc0a3c38931bac",
    "details": {
      "sha": "d1cfdad9d80353c8fc30b948a5168650da11276e",
      "filename": "test/hotspot/jtreg/compiler/loopopts/TestLoopUnswitchingLostCastDependency.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/openjdk/jdk/blob/3487361a39babe2b613f542c34fc0a3c38931bac/test%2Fhotspot%2Fjtreg%2Fcompiler%2Floopopts%2FTestLoopUnswitchingLostCastDependency.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/3487361a39babe2b613f542c34fc0a3c38931bac/test%2Fhotspot%2Fjtreg%2Fcompiler%2Floopopts%2FTestLoopUnswitchingLostCastDependency.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fhotspot%2Fjtreg%2Fcompiler%2Floopopts%2FTestLoopUnswitchingLostCastDependency.java?ref=3487361a39babe2b613f542c34fc0a3c38931bac",
      "patch": "@@ -26,7 +26,8 @@\n  * @bug 8241900\n  * @summary Loop unswitching may cause dependence on null check to be lost\n  *\n- * @run main/othervm -XX:-TieredCompilation -XX:-BackgroundCompilation -XX:+StressGCM -XX:+StressLCM TestLoopUnswitchingLostCastDependency\n+ * @requires vm.compiler2.enabled\n+ * @run main/othervm -XX:+UnlockDiagnosticVMOptions -XX:-TieredCompilation -XX:-BackgroundCompilation -XX:+StressGCM -XX:+StressLCM TestLoopUnswitchingLostCastDependency\n  */\n \n import java.util.Arrays;",
      "parent_sha": "82dfec76c668997bb64a09c6db09eb6177936a0f"
    }
  },
  {
    "oid": "830413f19a6d998ff6c899c05e8fa93b6b2b0644",
    "message": "8313087: DerValue::toString should output a hex view of the values in byte array\n\nReviewed-by: mullan",
    "date": "2023-07-26T15:16:52Z",
    "url": "https://github.com/openjdk/jdk/commit/830413f19a6d998ff6c899c05e8fa93b6b2b0644",
    "details": {
      "sha": "3b054ea0a378503786026c4149c08a7cf08c0386",
      "filename": "src/java.base/share/classes/sun/security/util/DerValue.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/openjdk/jdk/blob/830413f19a6d998ff6c899c05e8fa93b6b2b0644/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Futil%2FDerValue.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/830413f19a6d998ff6c899c05e8fa93b6b2b0644/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Futil%2FDerValue.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Futil%2FDerValue.java?ref=830413f19a6d998ff6c899c05e8fa93b6b2b0644",
      "patch": "@@ -1133,7 +1133,8 @@ public boolean equals(Object o) {\n     @Override\n     public String toString() {\n         return String.format(\"DerValue(%02x, %s, %d, %d)\",\n-                0xff & tag, buffer, start, end);\n+                0xff & tag, HexFormat.of().withUpperCase().formatHex(buffer),\n+                start, end);\n     }\n \n     /**",
      "parent_sha": "74121930e33686d2452170554776c0901f622d3e"
    }
  },
  {
    "oid": "477b157f387116cf14f674e166eed72adce2363b",
    "message": "8065070: (fmt) Avoid creating substrings when building FormatSpecifier\n\nReviewed-by: martin, shade",
    "date": "2014-11-17T22:56:53Z",
    "url": "https://github.com/openjdk/jdk/commit/477b157f387116cf14f674e166eed72adce2363b",
    "details": {
      "sha": "70298d5b59ff7dba569f0fa91afda194a57d884e",
      "filename": "jdk/src/java.base/share/classes/java/util/Formatter.java",
      "status": "modified",
      "additions": 19,
      "deletions": 22,
      "changes": 41,
      "blob_url": "https://github.com/openjdk/jdk/blob/477b157f387116cf14f674e166eed72adce2363b/jdk%2Fsrc%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Futil%2FFormatter.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/477b157f387116cf14f674e166eed72adce2363b/jdk%2Fsrc%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Futil%2FFormatter.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Fsrc%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Futil%2FFormatter.java?ref=477b157f387116cf14f674e166eed72adce2363b",
      "patch": "@@ -2624,10 +2624,11 @@ private class FormatSpecifier implements FormatString {\n         private boolean dt = false;\n         private char c;\n \n-        private int index(String s) {\n-            if (s != null) {\n+        private int index(String s, int start, int end) {\n+            if (start >= 0) {\n                 try {\n-                    index = Integer.parseInt(s.substring(0, s.length() - 1));\n+                    // skip the trailing '$'\n+                    index = Integer.parseInt(s, start, end - 1, 10);\n                 } catch (NumberFormatException x) {\n                     assert(false);\n                 }\n@@ -2648,11 +2649,11 @@ private Flags flags(String s, int start, int end) {\n             return f;\n         }\n \n-        private int width(String s) {\n+        private int width(String s, int start, int end) {\n             width = -1;\n-            if (s != null) {\n+            if (start >= 0) {\n                 try {\n-                    width  = Integer.parseInt(s);\n+                    width = Integer.parseInt(s, start, end, 10);\n                     if (width < 0)\n                         throw new IllegalFormatWidthException(width);\n                 } catch (NumberFormatException x) {\n@@ -2662,12 +2663,12 @@ private int width(String s) {\n             return width;\n         }\n \n-        private int precision(String s) {\n+        private int precision(String s, int start, int end) {\n             precision = -1;\n-            if (s != null) {\n+            if (start >= 0) {\n                 try {\n-                    // remove the '.'\n-                    precision = Integer.parseInt(s.substring(1));\n+                    // skip the leading '.'\n+                    precision = Integer.parseInt(s, start + 1, end, 10);\n                     if (precision < 0)\n                         throw new IllegalFormatPrecisionException(precision);\n                 } catch (NumberFormatException x) {\n@@ -2695,23 +2696,19 @@ private char conversion(char conv) {\n         }\n \n         FormatSpecifier(String s, Matcher m) {\n-            int idx = 1;\n+            index(s, m.start(1), m.end(1));\n+            flags(s, m.start(2), m.end(2));\n+            width(s, m.start(3), m.end(3));\n+            precision(s, m.start(4), m.end(4));\n \n-            index(m.group(idx++));\n-            flags(s, m.start(idx), m.end(idx++));\n-            width(m.group(idx++));\n-            precision(m.group(idx++));\n-\n-            int tTStart = m.start(idx);\n-            int tTEnd = m.end(idx++);\n-            if (tTStart != -1 && tTEnd != -1) {\n+            int tTStart = m.start(5);\n+            if (tTStart >= 0) {\n                 dt = true;\n-                if (tTStart == tTEnd - 1 && s.charAt(tTStart) == 'T') {\n+                if (s.charAt(tTStart) == 'T') {\n                     f.add(Flags.UPPERCASE);\n                 }\n             }\n-\n-            conversion(s.charAt(m.start(idx)));\n+            conversion(s.charAt(m.start(6)));\n \n             if (dt)\n                 checkDateTime();",
      "parent_sha": "8ecf707b8df884e4c459f902c665ccfbe30a7158"
    }
  },
  {
    "oid": "edc0ebb7803982311e96a8710e73fa920f321992",
    "message": "8323745: Missing comma in copyright header in TestScope\n\nReviewed-by: alanb",
    "date": "2024-01-15T16:30:59Z",
    "url": "https://github.com/openjdk/jdk/commit/edc0ebb7803982311e96a8710e73fa920f321992",
    "details": {
      "sha": "b7bcc4d373cc0632a56ce404e28d2416c2ce5306",
      "filename": "test/jdk/java/foreign/TestScope.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/openjdk/jdk/blob/edc0ebb7803982311e96a8710e73fa920f321992/test%2Fjdk%2Fjava%2Fforeign%2FTestScope.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/edc0ebb7803982311e96a8710e73fa920f321992/test%2Fjdk%2Fjava%2Fforeign%2FTestScope.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fjdk%2Fjava%2Fforeign%2FTestScope.java?ref=edc0ebb7803982311e96a8710e73fa920f321992",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2023, 2024 Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it",
      "parent_sha": "a03eb6d3f69301616faf13d68be8571a037e5999"
    }
  },
  {
    "oid": "ca78f7bd762e1d5cd843d1ff36fafb8c943aba97",
    "message": "8286259: Password cleanup after KeyStore.PasswordProtection in P11KeyStore\n\nReviewed-by: valeriep",
    "date": "2022-06-27T23:15:13Z",
    "url": "https://github.com/openjdk/jdk/commit/ca78f7bd762e1d5cd843d1ff36fafb8c943aba97",
    "details": {
      "sha": "46a0cf79442ac755a0d59d84b1886b666ba5c222",
      "filename": "src/jdk.crypto.cryptoki/share/classes/sun/security/pkcs11/P11KeyStore.java",
      "status": "modified",
      "additions": 13,
      "deletions": 1,
      "changes": 14,
      "blob_url": "https://github.com/openjdk/jdk/blob/ca78f7bd762e1d5cd843d1ff36fafb8c943aba97/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FP11KeyStore.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/ca78f7bd762e1d5cd843d1ff36fafb8c943aba97/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FP11KeyStore.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FP11KeyStore.java?ref=ca78f7bd762e1d5cd843d1ff36fafb8c943aba97",
      "patch": "@@ -57,6 +57,7 @@\n import javax.crypto.SecretKey;\n import javax.crypto.interfaces.*;\n \n+import javax.security.auth.DestroyFailedException;\n import javax.security.auth.x500.X500Principal;\n import javax.security.auth.login.LoginException;\n import javax.security.auth.callback.Callback;\n@@ -454,7 +455,18 @@ public synchronized void engineSetKeyEntry(String alias, Key key,\n         } catch (NullPointerException | IllegalArgumentException e) {\n             throw new KeyStoreException(e);\n         }\n-        engineSetEntry(alias, entry, new KeyStore.PasswordProtection(password));\n+\n+        KeyStore.PasswordProtection passwordProtection =\n+                new KeyStore.PasswordProtection(password);\n+        try {\n+            engineSetEntry(alias, entry, passwordProtection);\n+        } finally {\n+            try {\n+                passwordProtection.destroy();\n+            } catch (DestroyFailedException dfe) {\n+                // ignore\n+            }\n+        }\n     }\n \n     /**",
      "parent_sha": "e322e77e9535fc3f37b409a1c805e9f6b728377a"
    }
  },
  {
    "oid": "4da45c430139fe66fab020c2f96686dc9cf26a97",
    "message": "8270609: [TESTBUG] java/awt/print/Dialog/DialogCopies.java does not show instruction\n\nReviewed-by: aivanov",
    "date": "2021-09-20T14:07:50Z",
    "url": "https://github.com/openjdk/jdk/commit/4da45c430139fe66fab020c2f96686dc9cf26a97",
    "details": {
      "sha": "39d15461de8d1c7ab05e11e974c7fea6f2b29eed",
      "filename": "test/jdk/java/awt/print/Dialog/DialogCopies.java",
      "status": "modified",
      "additions": 56,
      "deletions": 23,
      "changes": 79,
      "blob_url": "https://github.com/openjdk/jdk/blob/4da45c430139fe66fab020c2f96686dc9cf26a97/test%2Fjdk%2Fjava%2Fawt%2Fprint%2FDialog%2FDialogCopies.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/4da45c430139fe66fab020c2f96686dc9cf26a97/test%2Fjdk%2Fjava%2Fawt%2Fprint%2FDialog%2FDialogCopies.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fjdk%2Fjava%2Fawt%2Fprint%2FDialog%2FDialogCopies.java?ref=4da45c430139fe66fab020c2f96686dc9cf26a97",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2007, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -21,40 +21,73 @@\n  * questions.\n  */\n \n-/**\n+/*\n  * @test\n  * @bug 6357858\n  * @summary Job must reports the number of copies set in the dialog.\n  * @run main/manual DialogCopies\n  */\n \n-import java.awt.print.*;\n+import java.awt.Frame;\n+import java.awt.TextArea;\n+import java.awt.BorderLayout;\n+import java.awt.print.PrinterJob;\n \n public class DialogCopies {\n \n-  static String[] instructions = {\n-     \"This test assumes and requires that you have a printer installed\",\n-     \"When the dialog appears, increment the number of copies then press OK.\",\n-     \"The test will throw an exception if you fail to do this, since\",\n-     \"it cannot distinguish that from a failure\",\n-     \"\"\n-  };\n+    private static Frame createInstructionUI() {\n+        final String instruction = \"\"\"\n+                This test requires that you have a printer.\n+\n+                Press Cancel if your system has only virtual printers such as\n+                Microsoft Print to PDF or Microsoft XPS Document Writer since\n+                they don't allow setting copies to anything but 1.\n+\n+                If a real printer is installed, select it from the drop-down\n+                list in the Print dialog and increase the number of copies,\n+                then press OK button.\"\"\";\n \n-  public static void main(String[] args) {\n+        TextArea instructionTextArea = new TextArea(instruction);\n+        instructionTextArea.setEditable(false);\n \n-      for (int i=0;i<instructions.length;i++) {\n-         System.out.println(instructions[i]);\n-      }\n+        Frame instructionFrame = new Frame();\n+        instructionFrame.add(instructionTextArea, BorderLayout.CENTER);\n+        instructionFrame.pack();\n+        instructionFrame.setLocationRelativeTo(null);\n+        instructionFrame.setVisible(true);\n+        return instructionFrame;\n+    }\n \n-      PrinterJob job = PrinterJob.getPrinterJob();\n-      if (job.getPrintService() == null || !job.printDialog()) {\n-         return;\n-      }\n+    public static void showPrintDialog() {\n+        PrinterJob job = PrinterJob.getPrinterJob();\n+        if (job.getPrintService() == null) {\n+            System.out.println(\"Looks like printer is not configured. Please install printer \" +\n+                    \" and re-run the test case.\");\n+            return;\n+        }\n+        checkNoOfCopies(job, job.printDialog());\n+    }\n \n-      System.out.println(\"Job copies is \" + job.getCopies());\n+    public static void checkNoOfCopies(PrinterJob job, boolean pdReturnValue) {\n+        if (pdReturnValue) {\n+            System.out.println(\"User has selected OK/Print button on the PrintDialog\");\n+            int copies = job.getCopies();\n+            if (copies <= 1) {\n+                throw new RuntimeException(\"Expected the number of copies to be more than 1 but got \" + copies);\n+            } else {\n+                System.out.println(\"Total number of copies : \" + copies);\n+            }\n+        } else {\n+            System.out.println(\"User has selected Cancel button on the PrintDialog.\");\n+        }\n+    }\n \n-      if (job.getCopies() == 1) {\n-            throw new RuntimeException(\"Copies not incremented\");\n-      }\n-   }\n+    public static void main(String[] args) throws InterruptedException {\n+        Frame frame = createInstructionUI();\n+        try {\n+            showPrintDialog();\n+        } finally {\n+            frame.dispose();\n+        }\n+    }\n }",
      "parent_sha": "544193a3bb6431ee4bb0bd43cb29cc60c7709b25"
    }
  },
  {
    "oid": "197981b431fb7c7e6740ac45a671b99d1c7583c6",
    "message": "8311881: jdk/javax/swing/ProgressMonitor/ProgressTest.java does not show the ProgressMonitorInputStream all the time\n\nReviewed-by: azvegint, tr",
    "date": "2023-07-24T09:22:14Z",
    "url": "https://github.com/openjdk/jdk/commit/197981b431fb7c7e6740ac45a671b99d1c7583c6",
    "details": {
      "sha": "e06cba6cfb09d25bcd02a126999380866a500147",
      "filename": "test/jdk/javax/swing/ProgressMonitor/ProgressTest.java",
      "status": "modified",
      "additions": 10,
      "deletions": 5,
      "changes": 15,
      "blob_url": "https://github.com/openjdk/jdk/blob/197981b431fb7c7e6740ac45a671b99d1c7583c6/test%2Fjdk%2Fjavax%2Fswing%2FProgressMonitor%2FProgressTest.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/197981b431fb7c7e6740ac45a671b99d1c7583c6/test%2Fjdk%2Fjavax%2Fswing%2FProgressMonitor%2FProgressTest.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fjdk%2Fjavax%2Fswing%2FProgressMonitor%2FProgressTest.java?ref=197981b431fb7c7e6740ac45a671b99d1c7583c6",
      "patch": "@@ -30,11 +30,11 @@\n  */\n \n import java.io.InputStream;\n-\n+import java.awt.EventQueue;\n import javax.swing.ProgressMonitorInputStream;\n \n public class ProgressTest {\n-\n+    static volatile long total = 0;\n     private static final String instructionsText =\n             \"A ProgressMonitor will be shown.\\n\" +\n             \" If it shows blank progressbar after 2048MB bytes read,\\n\"+\n@@ -69,15 +69,20 @@ public int read() {\n             public void run() {\n                 byte[] buffer = new byte[512];\n                 int nb = 0;\n-                long total = 0;\n                 while (true) {\n                     try {\n                         nb = pmis.read(buffer);\n                     } catch (Exception e){}\n                     if (nb == 0) break;\n                     total += nb;\n-\n-                    pmis.getProgressMonitor().setNote(total/(1024*1024)+\" MB Read\");\n+                    System.out.println(\"total \" + total);\n+                    if ((total % (1024*1024)) == 0) {\n+                        try {\n+                            EventQueue.invokeAndWait(() -> {\n+                                pmis.getProgressMonitor().setNote(total/(1024*1024)+\" MB Read\");\n+                            });\n+                        } catch (Exception e) {}\n+                    }\n                 }\n             }\n         };",
      "parent_sha": "04f39e1f1e0e6c8adf75f59792f4f5b2496f7a31"
    }
  },
  {
    "oid": "34982c7509f8793a94f33ab7284204c412c832b1",
    "message": "6405891: MLet: could be improved to load a native lib\n\nReviewed-by: emcmanus",
    "date": "2008-12-09T16:41:04Z",
    "url": "https://github.com/openjdk/jdk/commit/34982c7509f8793a94f33ab7284204c412c832b1",
    "details": {
      "sha": "ffc5ce0afa1b05333f682d8c407d113997ffb925",
      "filename": "jdk/src/share/classes/javax/management/loading/MLet.java",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/openjdk/jdk/blob/34982c7509f8793a94f33ab7284204c412c832b1/jdk%2Fsrc%2Fshare%2Fclasses%2Fjavax%2Fmanagement%2Floading%2FMLet.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/34982c7509f8793a94f33ab7284204c412c832b1/jdk%2Fsrc%2Fshare%2Fclasses%2Fjavax%2Fmanagement%2Floading%2FMLet.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Fsrc%2Fshare%2Fclasses%2Fjavax%2Fmanagement%2Floading%2FMLet.java?ref=34982c7509f8793a94f33ab7284204c412c832b1",
      "patch": "@@ -1165,9 +1165,10 @@ private synchronized String loadLibraryAsResource(String libname) {\n                      file.deleteOnExit();\n                      FileOutputStream fileOutput = new FileOutputStream(file);\n                      try {\n-                         int c;\n-                         while ((c = is.read()) != -1) {\n-                             fileOutput.write(c);\n+                         byte[] buf = new byte[4096];\n+                         int n;\n+                         while ((n = is.read(buf)) >= 0) {\n+                            fileOutput.write(buf, 0, n);\n                          }\n                      } finally {\n                          fileOutput.close();",
      "parent_sha": "e936f852bfd903a2024343a3d63390d4fa1c44ad"
    }
  },
  {
    "oid": "a240b49793afdc8d99c99b22f85792355afeabd1",
    "message": "8143301: Sjavac does not close file given to --compare-found-sources\n\nFile is now closed after use.\n\nReviewed-by: jlahoda, jjg",
    "date": "2016-01-07T10:41:50Z",
    "url": "https://github.com/openjdk/jdk/commit/a240b49793afdc8d99c99b22f85792355afeabd1",
    "details": {
      "sha": "b215f5a5d63c32a05fb69ddbc4c56f994880a029",
      "filename": "langtools/src/jdk.compiler/share/classes/com/sun/tools/sjavac/JavacState.java",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/openjdk/jdk/blob/a240b49793afdc8d99c99b22f85792355afeabd1/langtools%2Fsrc%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fsjavac%2FJavacState.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/a240b49793afdc8d99c99b22f85792355afeabd1/langtools%2Fsrc%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fsjavac%2FJavacState.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/langtools%2Fsrc%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fsjavac%2FJavacState.java?ref=a240b49793afdc8d99c99b22f85792355afeabd1",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2012, 2015, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2016, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -954,8 +954,7 @@ public void compareWithMakefileList(File makefileSourceList)\n             }\n         }\n         // Read in the file and create another set of filenames with full paths.\n-        try {\n-            BufferedReader in = new BufferedReader(new FileReader(makefileSourceList));\n+        try(BufferedReader in = new BufferedReader(new FileReader(makefileSourceList))) {\n             for (;;) {\n                 String l = in.readLine();\n                 if (l==null) break;",
      "parent_sha": "70b454532e79d2db6f06f5c524d1832c9f4343ab"
    }
  },
  {
    "oid": "b0e59adb6e40f1921ccdc4a608d03f1deada7626",
    "message": "8171940: Incorrect statement about an absolute value of months unit after period's normalization\n\nReviewed-by: bpb",
    "date": "2016-12-23T18:42:21Z",
    "url": "https://github.com/openjdk/jdk/commit/b0e59adb6e40f1921ccdc4a608d03f1deada7626",
    "details": {
      "sha": "667a7bf04f85a17148c7946def915c6246f5fcfe",
      "filename": "jdk/src/java.base/share/classes/java/time/Period.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/openjdk/jdk/blob/b0e59adb6e40f1921ccdc4a608d03f1deada7626/jdk%2Fsrc%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Ftime%2FPeriod.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/b0e59adb6e40f1921ccdc4a608d03f1deada7626/jdk%2Fsrc%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Ftime%2FPeriod.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Fsrc%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Ftime%2FPeriod.java?ref=b0e59adb6e40f1921ccdc4a608d03f1deada7626",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2012, 2013, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2016, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -818,7 +818,7 @@ public Period negated() {\n      * Returns a copy of this period with the years and months normalized.\n      * <p>\n      * This normalizes the years and months units, leaving the days unit unchanged.\n-     * The months unit is adjusted to have an absolute value less than 11,\n+     * The months unit is adjusted to have an absolute value less than 12,\n      * with the years unit being adjusted to compensate. For example, a period of\n      * \"1 Year and 15 months\" will be normalized to \"2 years and 3 months\".\n      * <p>",
      "parent_sha": "7516f0284ca0b6a175588c10df16de453bef9f18"
    }
  },
  {
    "oid": "4cfa230e2daac118f21c7d8996d48a1a15d87a62",
    "message": "8273259: Character.getName doesn't follow Unicode spec for ideographs\n\nReviewed-by: bpb, lancea, iris, darcy",
    "date": "2021-09-13T16:06:10Z",
    "url": "https://github.com/openjdk/jdk/commit/4cfa230e2daac118f21c7d8996d48a1a15d87a62",
    "details": {
      "sha": "0ec08a60056679821ce7a3723592a62503e2cef8",
      "filename": "src/java.base/share/classes/java/lang/Character.java",
      "status": "modified",
      "additions": 21,
      "deletions": 9,
      "changes": 30,
      "blob_url": "https://github.com/openjdk/jdk/blob/4cfa230e2daac118f21c7d8996d48a1a15d87a62/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2FCharacter.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/4cfa230e2daac118f21c7d8996d48a1a15d87a62/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2FCharacter.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2FCharacter.java?ref=4cfa230e2daac118f21c7d8996d48a1a15d87a62",
      "patch": "@@ -11296,14 +11296,14 @@ public static char reverseBytes(char ch) {\n     }\n \n     /**\n-     * Returns the Unicode name of the specified character\n+     * Returns the name of the specified character\n      * {@code codePoint}, or null if the code point is\n      * {@link #UNASSIGNED unassigned}.\n      * <p>\n-     * Note: if the specified character is not assigned a name by\n+     * If the specified character is not assigned a name by\n      * the <i>UnicodeData</i> file (part of the Unicode Character\n      * Database maintained by the Unicode Consortium), the returned\n-     * name is the same as the result of expression:\n+     * name is the same as the result of the expression:\n      *\n      * <blockquote>{@code\n      *     Character.UnicodeBlock.of(codePoint).toString().replace('_', ' ')\n@@ -11312,9 +11312,15 @@ public static char reverseBytes(char ch) {\n      *\n      * }</blockquote>\n      *\n+     * For the {@code codePoint}s in the <i>UnicodeData</i> file, the name\n+     * returned by this method follows the naming scheme in the\n+     * \"Unicode Name Property\" section of the Unicode Standard. For other\n+     * code points, such as Hangul/Ideographs, The name generation rule above\n+     * differs from the one defined in the Unicode Standard.\n+     *\n      * @param  codePoint the character (Unicode code point)\n      *\n-     * @return the Unicode name of the specified character, or null if\n+     * @return the name of the specified character, or null if\n      *         the code point is unassigned.\n      *\n      * @throws IllegalArgumentException if the specified\n@@ -11343,11 +11349,11 @@ public static String getName(int codePoint) {\n \n     /**\n      * Returns the code point value of the Unicode character specified by\n-     * the given Unicode character name.\n+     * the given character name.\n      * <p>\n-     * Note: if a character is not assigned a name by the <i>UnicodeData</i>\n+     * If a character is not assigned a name by the <i>UnicodeData</i>\n      * file (part of the Unicode Character Database maintained by the Unicode\n-     * Consortium), its name is defined as the result of expression:\n+     * Consortium), its name is defined as the result of the expression:\n      *\n      * <blockquote>{@code\n      *     Character.UnicodeBlock.of(codePoint).toString().replace('_', ' ')\n@@ -11359,12 +11365,18 @@ public static String getName(int codePoint) {\n      * The {@code name} matching is case insensitive, with any leading and\n      * trailing whitespace character removed.\n      *\n-     * @param  name the Unicode character name\n+     * For the code points in the <i>UnicodeData</i> file, this method\n+     * recognizes the name which conforms to the name defined in the\n+     * \"Unicode Name Property\" section in the Unicode Standard. For other\n+     * code points, this method recognizes the name generated with\n+     * {@link #getName(int)} method.\n+     *\n+     * @param  name the character name\n      *\n      * @return the code point value of the character specified by its name.\n      *\n      * @throws IllegalArgumentException if the specified {@code name}\n-     *         is not a valid Unicode character name.\n+     *         is not a valid character name.\n      * @throws NullPointerException if {@code name} is {@code null}\n      *\n      * @since 9",
      "parent_sha": "f9b2507f3e86bcb91e8ccfd0a84f31712fd535c2"
    }
  },
  {
    "oid": "21f57051c4a2306ba3709d993d5aab8cd0a5496b",
    "message": "8212553: [TESTBUG] TestTrichotomyExpressions.java times out with Graal as JIT\n\nRemoved -Xcomp and increased timeout.\n\nReviewed-by: kvn",
    "date": "2018-10-18T15:50:49Z",
    "url": "https://github.com/openjdk/jdk/commit/21f57051c4a2306ba3709d993d5aab8cd0a5496b",
    "details": {
      "sha": "11f3c6c397273fcbc44bac21ad9ff48175b37b8c",
      "filename": "test/hotspot/jtreg/compiler/codegen/TestTrichotomyExpressions.java",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/openjdk/jdk/blob/21f57051c4a2306ba3709d993d5aab8cd0a5496b/test%2Fhotspot%2Fjtreg%2Fcompiler%2Fcodegen%2FTestTrichotomyExpressions.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/21f57051c4a2306ba3709d993d5aab8cd0a5496b/test%2Fhotspot%2Fjtreg%2Fcompiler%2Fcodegen%2FTestTrichotomyExpressions.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fhotspot%2Fjtreg%2Fcompiler%2Fcodegen%2FTestTrichotomyExpressions.java?ref=21f57051c4a2306ba3709d993d5aab8cd0a5496b",
      "patch": "@@ -26,10 +26,7 @@\n  * @bug 8210215\n  * @summary Test that C2 correctly optimizes trichotomy expressions.\n  * @library /test/lib\n- * @run main/othervm -XX:-TieredCompilation -Xbatch\n- *                   -XX:CompileCommand=dontinline,compiler.codegen.TestTrichotomyExpressions::test*\n- *                   compiler.codegen.TestTrichotomyExpressions\n- * @run main/othervm -XX:-TieredCompilation -Xcomp\n+ * @run main/othervm/timeout=240 -XX:-TieredCompilation -Xbatch\n  *                   -XX:CompileCommand=dontinline,compiler.codegen.TestTrichotomyExpressions::test*\n  *                   compiler.codegen.TestTrichotomyExpressions\n  */",
      "parent_sha": "d54fa9e93d786eb264d431621f7065cf4a4970e5"
    }
  },
  {
    "oid": "e6c926e0282432968c8c05865dd603a2ea7a35a3",
    "message": "8277227: Better identification of OIDs\n\nReviewed-by: ahgross, weijun, rhalade",
    "date": "2022-04-19T22:18:32Z",
    "url": "https://github.com/openjdk/jdk/commit/e6c926e0282432968c8c05865dd603a2ea7a35a3",
    "details": {
      "sha": "dc70c4d0719a1ff7b289d7ec8d6feebacc8e3a16",
      "filename": "src/java.base/share/classes/sun/security/util/ObjectIdentifier.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/openjdk/jdk/blob/e6c926e0282432968c8c05865dd603a2ea7a35a3/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Futil%2FObjectIdentifier.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/e6c926e0282432968c8c05865dd603a2ea7a35a3/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Futil%2FObjectIdentifier.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Futil%2FObjectIdentifier.java?ref=e6c926e0282432968c8c05865dd603a2ea7a35a3",
      "patch": "@@ -365,7 +365,7 @@ private int[] toIntArray() {\n             if ((encoding[i] & 0x80) == 0) {\n                 // one section [fromPos..i]\n                 if (i - fromPos + 1 > 4) {\n-                    BigInteger big = new BigInteger(pack(encoding,\n+                    BigInteger big = new BigInteger(1, pack(encoding,\n                             fromPos, i-fromPos+1, 7, 8));\n                     if (fromPos == 0) {\n                         result[which++] = 2;\n@@ -434,7 +434,7 @@ public String toString() {\n                         sb.append('.');\n                     }\n                     if (i - fromPos + 1 > 4) { // maybe big integer\n-                        BigInteger big = new BigInteger(\n+                        BigInteger big = new BigInteger(1,\n                                 pack(encoding, fromPos, i-fromPos+1, 7, 8));\n                         if (fromPos == 0) {\n                             // first section encoded with more than 4 bytes,\n@@ -688,6 +688,7 @@ private static void checkOidSize(int oidLength) throws IOException {\n             throw new IOException(\"ObjectIdentifier encoded length was \" +\n                     \"negative: \" + oidLength);\n         }\n+\n         if (oidLength > MAXIMUM_OID_SIZE) {\n             throw new IOException(\n                     \"ObjectIdentifier encoded length exceeds \" +",
      "parent_sha": "e2f8ce9c3ff4518e070960bafa70ba780746aa5c"
    }
  },
  {
    "oid": "0a03fc84b3289cf8c8effca7324f71146270a8e2",
    "message": "8255674: SSLEngine class description is missing \"case\" in switch statement\n\nReviewed-by: xuelei",
    "date": "2021-05-25T07:40:48Z",
    "url": "https://github.com/openjdk/jdk/commit/0a03fc84b3289cf8c8effca7324f71146270a8e2",
    "details": {
      "sha": "0102c17f2e21e380ffc3fb937ade1e4991d13d33",
      "filename": "src/java.base/share/classes/javax/net/ssl/SSLEngine.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/openjdk/jdk/blob/0a03fc84b3289cf8c8effca7324f71146270a8e2/src%2Fjava.base%2Fshare%2Fclasses%2Fjavax%2Fnet%2Fssl%2FSSLEngine.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/0a03fc84b3289cf8c8effca7324f71146270a8e2/src%2Fjava.base%2Fshare%2Fclasses%2Fjavax%2Fnet%2Fssl%2FSSLEngine.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fjavax%2Fnet%2Fssl%2FSSLEngine.java?ref=0a03fc84b3289cf8c8effca7324f71146270a8e2",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2003, 2020, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -224,7 +224,7 @@\n  * <pre>{@code\n  *   SSLEngineResult r = engine.unwrap(src, dst);\n  *   switch (r.getStatus()) {\n- *   BUFFER_OVERFLOW:\n+ *   case BUFFER_OVERFLOW:\n  *       // Could attempt to drain the dst buffer of any already obtained\n  *       // data, but we'll just increase it to the size needed.\n  *       int appSize = engine.getSession().getApplicationBufferSize();\n@@ -234,7 +234,7 @@\n  *       dst = b;\n  *       // retry the operation.\n  *       break;\n- *   BUFFER_UNDERFLOW:\n+ *   case BUFFER_UNDERFLOW:\n  *       int netSize = engine.getSession().getPacketBufferSize();\n  *       // Resize buffer if needed.\n  *       if (netSize > src.capacity()) {",
      "parent_sha": "d86f91642d7dcf829b8093ebed336d4386bff67a"
    }
  },
  {
    "oid": "bb675afae6876fb99aaf0160298463008a9c5efa",
    "message": "8325542: CTW: Runner can produce negative StressSeed\n\nReviewed-by: shade, xliu",
    "date": "2024-02-20T08:54:48Z",
    "url": "https://github.com/openjdk/jdk/commit/bb675afae6876fb99aaf0160298463008a9c5efa",
    "details": {
      "sha": "b8332a5e5a58c99f0256b1fef216feab5394ba98",
      "filename": "test/hotspot/jtreg/testlibrary/ctw/src/sun/hotspot/tools/ctw/CtwRunner.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/openjdk/jdk/blob/bb675afae6876fb99aaf0160298463008a9c5efa/test%2Fhotspot%2Fjtreg%2Ftestlibrary%2Fctw%2Fsrc%2Fsun%2Fhotspot%2Ftools%2Fctw%2FCtwRunner.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/bb675afae6876fb99aaf0160298463008a9c5efa/test%2Fhotspot%2Fjtreg%2Ftestlibrary%2Fctw%2Fsrc%2Fsun%2Fhotspot%2Ftools%2Fctw%2FCtwRunner.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fhotspot%2Fjtreg%2Ftestlibrary%2Fctw%2Fsrc%2Fsun%2Fhotspot%2Ftools%2Fctw%2FCtwRunner.java?ref=bb675afae6876fb99aaf0160298463008a9c5efa",
      "patch": "@@ -38,6 +38,7 @@\n import java.util.List;\n import java.util.concurrent.TimeUnit;\n import java.util.function.Predicate;\n+import java.util.Random;\n import java.util.regex.Pattern;\n import java.util.stream.Collectors;\n \n@@ -266,7 +267,7 @@ private Pair<String, Long> getLastClass(Path errFile) {\n     private String[] cmd(long classStart, long classStop) {\n         String phase = phaseName(classStart);\n         Path file = Paths.get(phase + \".cmd\");\n-        var rng = Utils.getRandomInstance();\n+        Random rng = Utils.getRandomInstance();\n \n         ArrayList<String> Args = new ArrayList<String>(Arrays.asList(\n                 \"-Xbatch\",\n@@ -301,7 +302,7 @@ private String[] cmd(long classStart, long classStop) {\n                 \"-XX:+StressMacroExpansion\",\n                 \"-XX:+StressIncrementalInlining\",\n                 // StressSeed is uint\n-                \"-XX:StressSeed=\" + Math.abs(rng.nextInt())));\n+                \"-XX:StressSeed=\" + rng.nextInt(Integer.MAX_VALUE)));\n \n         for (String arg : CTW_EXTRA_ARGS.split(\",\")) {\n             Args.add(arg);",
      "parent_sha": "5bf859c8e9bd54cfd254a1485509a7dfa12d02af"
    }
  },
  {
    "oid": "f93211b1fabfd3d2012b29235c72221ef02597a2",
    "message": "8011986: [corba] idlj generates read/write union helper methods that throw wrong exception in some cases\n\nReviewed-by: lancea",
    "date": "2013-04-29T12:51:32Z",
    "url": "https://github.com/openjdk/jdk/commit/f93211b1fabfd3d2012b29235c72221ef02597a2",
    "details": {
      "sha": "89367e69ac29e34aed041a8a96c13014dbfffaef",
      "filename": "corba/src/share/classes/com/sun/tools/corba/se/idl/toJavaPortable/UnionGen.java",
      "status": "modified",
      "additions": 21,
      "deletions": 19,
      "changes": 40,
      "blob_url": "https://github.com/openjdk/jdk/blob/f93211b1fabfd3d2012b29235c72221ef02597a2/corba%2Fsrc%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fcorba%2Fse%2Fidl%2FtoJavaPortable%2FUnionGen.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/f93211b1fabfd3d2012b29235c72221ef02597a2/corba%2Fsrc%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fcorba%2Fse%2Fidl%2FtoJavaPortable%2FUnionGen.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/corba%2Fsrc%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fcorba%2Fse%2Fidl%2FtoJavaPortable%2FUnionGen.java?ref=f93211b1fabfd3d2012b29235c72221ef02597a2",
      "patch": "@@ -776,7 +776,7 @@ private int readBoolean (String disName, int index, String indent,\n             stream.println (indent + \"if (\" + disName + ')');\n \n             if (firstBranch == null)\n-                stream.println (indent + \"  throw new org.omg.CORBA.BAD_OPERATION ();\");\n+                stream.println (indent + \"  value._default(\" + disName + \");\");\n             else {\n                 stream.println (indent + '{');\n                 index = readBranch (index, indent + \"  \", firstBranch.typedef.name (),\n@@ -787,7 +787,7 @@ private int readBoolean (String disName, int index, String indent,\n             stream.println (indent + \"else\");\n \n             if (secondBranch == null)\n-                stream.println (indent + \"  throw new org.omg.CORBA.BAD_OPERATION ();\");\n+                stream.println (indent + \"  value._default(\" + disName + \");\");\n             else {\n                 stream.println (indent + '{');\n                 index = readBranch (index, indent + \"  \", secondBranch.typedef.name (),\n@@ -937,23 +937,25 @@ private int writeBoolean (String disName, int index, String indent, String name,\n         firstBranch = secondBranch;\n         secondBranch = tmp;\n       }\n-      stream.println (indent + \"if (\" + disName + ')');\n-      if (firstBranch == null)\n-        stream.println (indent + \"  throw new org.omg.CORBA.BAD_OPERATION ();\");\n-      else\n-      {\n-        stream.println (indent + '{');\n-        index = writeBranch (index, indent + \"  \", name, firstBranch.typedef, stream);\n-        stream.println (indent + '}');\n-      }\n-      stream.println (indent + \"else\");\n-      if (secondBranch == null)\n-        stream.println (indent + \"  throw new org.omg.CORBA.BAD_OPERATION ();\");\n-      else\n-      {\n-        stream.println (indent + '{');\n-        index = writeBranch (index, indent + \"  \", name, secondBranch.typedef, stream);\n-        stream.println (indent + '}');\n+      if (firstBranch != null && secondBranch != null) {\n+          stream.println (indent + \"if (\" + disName + ')');\n+          stream.println (indent + '{');\n+          index = writeBranch (index, indent + \"  \", name, firstBranch.typedef, stream);\n+          stream.println (indent + '}');\n+          stream.println (indent + \"else\");\n+          stream.println (indent + '{');\n+          index = writeBranch (index, indent + \"  \", name, secondBranch.typedef, stream);\n+          stream.println (indent + '}');\n+      } else if (firstBranch != null) {\n+          stream.println (indent + \"if (\" + disName + ')');\n+          stream.println (indent + '{');\n+          index = writeBranch (index, indent + \"  \", name, firstBranch.typedef, stream);\n+          stream.println (indent + '}');\n+      } else {\n+          stream.println (indent + \"if (!\" + disName + ')');\n+          stream.println (indent + '{');\n+          index = writeBranch (index, indent + \"  \", name, secondBranch.typedef, stream);\n+          stream.println (indent + '}');\n       }\n     }\n     return index;",
      "parent_sha": "83a4efe56548873bfbcb6ba546e0d6ecefceab02"
    }
  },
  {
    "oid": "b81b86da9849fbc4fb341bff8a23d10aee9967b3",
    "message": "8329729: java/util/Properties/StoreReproducibilityTest.java times out\n\nReviewed-by: alanb",
    "date": "2024-04-10T01:33:13Z",
    "url": "https://github.com/openjdk/jdk/commit/b81b86da9849fbc4fb341bff8a23d10aee9967b3",
    "details": {
      "sha": "7072b24dc0c1cfae655e05f4ee6fc1b824a87058",
      "filename": "test/jdk/java/util/Properties/StoreReproducibilityTest.java",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/openjdk/jdk/blob/b81b86da9849fbc4fb341bff8a23d10aee9967b3/test%2Fjdk%2Fjava%2Futil%2FProperties%2FStoreReproducibilityTest.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/b81b86da9849fbc4fb341bff8a23d10aee9967b3/test%2Fjdk%2Fjava%2Futil%2FProperties%2FStoreReproducibilityTest.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fjdk%2Fjava%2Futil%2FProperties%2FStoreReproducibilityTest.java?ref=b81b86da9849fbc4fb341bff8a23d10aee9967b3",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2021, 2023, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -45,6 +45,9 @@\n  * @test\n  * @summary Tests that the Properties.store() APIs generate output that is reproducible\n  * @bug 8231640 8282023 8316540\n+ * @comment The test launches several processes and in the presence of -Xcomp it's too slow\n+ *          and thus causes timeouts\n+ * @requires vm.compMode != \"Xcomp\"\n  * @library /test/lib\n  * @run driver StoreReproducibilityTest\n  */",
      "parent_sha": "6276789fb5e283c11ac73602c2a5f646eab96975"
    }
  },
  {
    "oid": "d4857ff0f3a25a263cdb6c0059bbae3245a28f23",
    "message": "8169289: JavaFX application in named module fails to launch if no main method\n\nReviewed-by: mchung, ksrini",
    "date": "2016-11-07T20:46:23Z",
    "url": "https://github.com/openjdk/jdk/commit/d4857ff0f3a25a263cdb6c0059bbae3245a28f23",
    "details": {
      "sha": "c5d87287a17021fe5d5b461c03747cac4439e51f",
      "filename": "jdk/src/java.base/share/classes/sun/launcher/LauncherHelper.java",
      "status": "modified",
      "additions": 28,
      "deletions": 23,
      "changes": 51,
      "blob_url": "https://github.com/openjdk/jdk/blob/d4857ff0f3a25a263cdb6c0059bbae3245a28f23/jdk%2Fsrc%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Flauncher%2FLauncherHelper.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/d4857ff0f3a25a263cdb6c0059bbae3245a28f23/jdk%2Fsrc%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Flauncher%2FLauncherHelper.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Fsrc%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Flauncher%2FLauncherHelper.java?ref=d4857ff0f3a25a263cdb6c0059bbae3245a28f23",
      "patch": "@@ -462,6 +462,8 @@ static void abort(Throwable t, String msgKey, Object... args) {\n      * This method:\n      * 1. Loads the main class from the module or class path\n      * 2. Checks the public static void main method.\n+     * 3. If the main class extends FX Application then call on FXHelper to\n+     * perform the launch.\n      *\n      * @param printToStderr if set, all output will be routed to stderr\n      * @param mode LaunchMode as determined by the arguments passed on the\n@@ -479,11 +481,23 @@ public static Class<?> checkAndLoadMain(boolean printToStderr,\n         Class<?> mainClass = (mode == LM_MODULE) ? loadModuleMainClass(what)\n                                                  : loadMainClass(mode, what);\n \n-        validateMainClass(mainClass);\n+        // record the real main class for UI purposes\n+        // neither method above can return null, they will abort()\n+        appClass = mainClass;\n \n-        // record main class if not already set\n-        if (appClass == null)\n-            appClass = mainClass;\n+        /*\n+         * Check if FXHelper can launch it using the FX launcher. In an FX app,\n+         * the main class may or may not have a main method, so do this before\n+         * validating the main class.\n+         */\n+        if (JAVAFX_FXHELPER_CLASS_NAME_SUFFIX.equals(mainClass.getName()) ||\n+            doesExtendFXApplication(mainClass)) {\n+            // Will abort() if there are problems with FX runtime\n+            FXHelper.setFXLaunchParameters(what, mode);\n+            mainClass = FXHelper.class;\n+        }\n+\n+        validateMainClass(mainClass);\n \n         return mainClass;\n     }\n@@ -530,7 +544,6 @@ private static Class<?> loadModuleMainClass(String what) {\n \n             String cn = Normalizer.normalize(mainClass, Normalizer.Form.NFC);\n             c = Class.forName(m, cn);\n-\n         }\n         if (c == null) {\n             abort(null, \"java.launcher.module.error2\", mainClass, mainModule);\n@@ -542,8 +555,6 @@ private static Class<?> loadModuleMainClass(String what) {\n \n     /**\n      * Loads the main class from the class path (LM_CLASS or LM_JAR).\n-     * If the main class extends FX Application then call on FXHelper to\n-     * determine the main class to launch.\n      */\n     private static Class<?> loadMainClass(int mode, String what) {\n         // get the class name\n@@ -570,7 +581,7 @@ private static Class<?> loadMainClass(int mode, String what) {\n             if (System.getProperty(\"os.name\", \"\").contains(\"OS X\")\n                     && Normalizer.isNormalized(cn, Normalizer.Form.NFD)) {\n                 try {\n-                    // On Mac OS X since all names with diacretic symbols are\n+                    // On Mac OS X since all names with diacritical marks are\n                     // given as decomposed it is possible that main class name\n                     // comes incorrectly from the command line and we have\n                     // to re-compose it\n@@ -583,21 +594,6 @@ private static Class<?> loadMainClass(int mode, String what) {\n                 abort(cnfe, \"java.launcher.cls.error1\", cn);\n             }\n         }\n-\n-        // record the main class\n-        appClass = mainClass;\n-\n-        /*\n-         * Check if FXHelper can launch it using the FX launcher. In an FX app,\n-         * the main class may or may not have a main method, so do this before\n-         * validating the main class.\n-         */\n-        if (JAVAFX_FXHELPER_CLASS_NAME_SUFFIX.equals(mainClass.getName()) ||\n-            doesExtendFXApplication(mainClass)) {\n-            // Will abort() if there are problems with FX runtime\n-            FXHelper.setFXLaunchParameters(what, mode);\n-            return FXHelper.class;\n-        }\n         return mainClass;\n     }\n \n@@ -773,9 +769,15 @@ static final class FXHelper {\n          * java -cp somedir FXClass     N/A               LM_CLASS     \"LM_CLASS\"\n          * java -jar fxapp.jar          Present           LM_JAR       \"LM_JAR\"\n          * java -jar fxapp.jar          Not Present       LM_JAR       \"LM_JAR\"\n+         * java -m module/class [1]     N/A               LM_MODULE    \"LM_MODULE\"\n+         * java -m module               N/A               LM_MODULE    \"LM_MODULE\"\n+         *\n+         * [1] - JavaFX-Application-Class is ignored when modular args are used, even\n+         * if present in a modular jar\n          */\n         private static final String JAVAFX_LAUNCH_MODE_CLASS = \"LM_CLASS\";\n         private static final String JAVAFX_LAUNCH_MODE_JAR = \"LM_JAR\";\n+        private static final String JAVAFX_LAUNCH_MODE_MODULE = \"LM_MODULE\";\n \n         /*\n          * FX application launcher and launch method, so we can launch\n@@ -835,6 +837,9 @@ private static void setFXLaunchParameters(String what, int mode) {\n                 case LM_JAR:\n                     fxLaunchMode = JAVAFX_LAUNCH_MODE_JAR;\n                     break;\n+                case LM_MODULE:\n+                    fxLaunchMode = JAVAFX_LAUNCH_MODE_MODULE;\n+                    break;\n                 default:\n                     // should not have gotten this far...\n                     throw new InternalError(mode + \": Unknown launch mode\");",
      "parent_sha": "924cb72be2930b9c457fa715aa4b460ea2dfe709"
    }
  },
  {
    "oid": "57bf6a180050629b08e2ec81fd6d1e68d4decdca",
    "message": "8217827: [Graal] Some vmTestbase/nsk/jvmti/ResourceExhausted tests failing\n\nReviewed-by: cjplummer, jcbeyler, dholmes",
    "date": "2019-03-26T04:19:39Z",
    "url": "https://github.com/openjdk/jdk/commit/57bf6a180050629b08e2ec81fd6d1e68d4decdca",
    "details": {
      "sha": "be8992ba70f24766281c990561db3fd98cbfc924",
      "filename": "test/hotspot/jtreg/vmTestbase/nsk/jvmti/ResourceExhausted/resexhausted002/TestDescription.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/openjdk/jdk/blob/57bf6a180050629b08e2ec81fd6d1e68d4decdca/test%2Fhotspot%2Fjtreg%2FvmTestbase%2Fnsk%2Fjvmti%2FResourceExhausted%2Fresexhausted002%2FTestDescription.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/57bf6a180050629b08e2ec81fd6d1e68d4decdca/test%2Fhotspot%2Fjtreg%2FvmTestbase%2Fnsk%2Fjvmti%2FResourceExhausted%2Fresexhausted002%2FTestDescription.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fhotspot%2Fjtreg%2FvmTestbase%2Fnsk%2Fjvmti%2FResourceExhausted%2Fresexhausted002%2FTestDescription.java?ref=57bf6a180050629b08e2ec81fd6d1e68d4decdca",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2018, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2019, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -36,6 +36,7 @@\n  *\n  * @library /vmTestbase\n  *          /test/lib\n+ * @requires !vm.graal.enabled\n  * @run driver jdk.test.lib.FileInstaller . .\n  * @run main/othervm/native\n  *      -agentlib:resexhausted=-waittime=5",
      "parent_sha": "6ee9a154411ccb588529eaa8dab191447287f5b1"
    }
  },
  {
    "oid": "b93b62c2c9e998a7e6eabdc1bf41290870a9ec17",
    "message": "8146090: java/lang/ref/ReachabilityFenceTest.java fails with -XX:+DeoptimizeALot\n\nReviewed-by: dholmes, iignatyev",
    "date": "2018-12-05T01:18:11Z",
    "url": "https://github.com/openjdk/jdk/commit/b93b62c2c9e998a7e6eabdc1bf41290870a9ec17",
    "details": {
      "sha": "4ddc9e0c9ebce3f1140f7cbaade970ae00e1a4cc",
      "filename": "test/jdk/java/lang/ref/ReachabilityFenceTest.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/openjdk/jdk/blob/b93b62c2c9e998a7e6eabdc1bf41290870a9ec17/test%2Fjdk%2Fjava%2Flang%2Fref%2FReachabilityFenceTest.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/b93b62c2c9e998a7e6eabdc1bf41290870a9ec17/test%2Fjdk%2Fjava%2Flang%2Fref%2FReachabilityFenceTest.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fjdk%2Fjava%2Flang%2Fref%2FReachabilityFenceTest.java?ref=b93b62c2c9e998a7e6eabdc1bf41290870a9ec17",
      "patch": "@@ -25,6 +25,8 @@\n  * @bug 8133348\n  * @summary Tests if reachabilityFence is working\n  *\n+ * @requires vm.opt.DeoptimizeALot != true\n+ *\n  * @run main/othervm -Xint                   -Dpremature=false ReachabilityFenceTest\n  * @run main/othervm -XX:TieredStopAtLevel=1 -Dpremature=true  ReachabilityFenceTest\n  * @run main/othervm -XX:TieredStopAtLevel=2 -Dpremature=true  ReachabilityFenceTest\n@@ -142,4 +144,4 @@ protected void finalize() throws Throwable {\n             finalized.set(true);\n         }\n     }\n-}\n\\ No newline at end of file\n+}",
      "parent_sha": "8036ce51b2baea61cc6b30c843cc2faeab0669c7"
    }
  },
  {
    "oid": "4ca2c208ea2b308093b4a25b04a274f9b1ec6a1d",
    "message": "8338740: java/net/httpclient/HttpsTunnelAuthTest.java fails with java.io.IOException: HTTP/1.1 header parser received no bytes\n\nReviewed-by: djelinski, jpai",
    "date": "2024-09-03T13:32:50Z",
    "url": "https://github.com/openjdk/jdk/commit/4ca2c208ea2b308093b4a25b04a274f9b1ec6a1d",
    "details": {
      "sha": "7de14a79225a593eba650b6466715567b6af6f77",
      "filename": "test/jdk/java/net/httpclient/ProxyServer.java",
      "status": "modified",
      "additions": 28,
      "deletions": 7,
      "changes": 35,
      "blob_url": "https://github.com/openjdk/jdk/blob/4ca2c208ea2b308093b4a25b04a274f9b1ec6a1d/test%2Fjdk%2Fjava%2Fnet%2Fhttpclient%2FProxyServer.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/4ca2c208ea2b308093b4a25b04a274f9b1ec6a1d/test%2Fjdk%2Fjava%2Fnet%2Fhttpclient%2FProxyServer.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fjdk%2Fjava%2Fnet%2Fhttpclient%2FProxyServer.java?ref=4ca2c208ea2b308093b4a25b04a274f9b1ec6a1d",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2015, 2022, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -195,6 +195,9 @@ class Connection {\n         volatile InputStream clientIn, serverIn;\n         volatile OutputStream clientOut, serverOut;\n \n+        boolean proxyInClosed;  // only accessed from synchronized block\n+        boolean proxyOutClosed; // only accessed from synchronized block\n+\n         final static int CR = 13;\n         final static int LF = 10;\n \n@@ -594,9 +597,7 @@ synchronized void proxyCommon(boolean log) throws IOException {\n                         if (log)\n                             System.out.printf(\"Proxy Forwarding [request body]: total %d%n\", body);\n                     }\n-                    closing = true;\n-                    serverSocket.close();\n-                    clientSocket.close();\n+                    closeClientIn();\n                 } catch (IOException e) {\n                     if (!closing && debug) {\n                         System.out.println(\"Proxy: \" + e);\n@@ -615,9 +616,7 @@ synchronized void proxyCommon(boolean log) throws IOException {\n                         if (log) System.out.printf(\"Proxy Forwarding [response]: %s%n\", new String(bb, 0, n, UTF_8));\n                         if (log) System.out.printf(\"Proxy Forwarding [response]: total %d%n\", resp);\n                     }\n-                    closing = true;\n-                    serverSocket.close();\n-                    clientSocket.close();\n+                    closeClientOut();\n                 } catch (IOException e) {\n                     if (!closing && debug) {\n                         System.out.println(\"Proxy: \" + e);\n@@ -641,6 +640,28 @@ void doTunnel(String dest) throws IOException {\n             proxyCommon(false);\n         }\n \n+        synchronized void closeClientIn() throws IOException {\n+            closing = true;\n+            proxyInClosed = true;\n+            clientSocket.shutdownInput();\n+            serverSocket.shutdownOutput();\n+            if (proxyOutClosed) {\n+                serverSocket.close();\n+                clientSocket.close();\n+            }\n+        }\n+\n+        synchronized void closeClientOut() throws IOException {\n+            closing = true;\n+            proxyOutClosed = true;\n+            serverSocket.shutdownInput();\n+            clientSocket.shutdownOutput();\n+            if (proxyInClosed) {\n+                serverSocket.close();\n+                clientSocket.close();\n+            }\n+        }\n+\n         @Override\n         public String toString() {\n             return \"Proxy connection \" + id + \", client sock:\" + clientSocket;",
      "parent_sha": "e0c46d589b12aa644e12e4a4c9e84e035f7cf98d"
    }
  },
  {
    "oid": "2f747f3dba828ebeec5dee9ccc3e4a88bd04262b",
    "message": "8223265: Clarify operational semantics of java.util.Objects.equals()\n\nReviewed-by: bpb, alanb",
    "date": "2019-05-03T16:25:59Z",
    "url": "https://github.com/openjdk/jdk/commit/2f747f3dba828ebeec5dee9ccc3e4a88bd04262b",
    "details": {
      "sha": "8f4e72195ca1eca7cad5ed7bf4e24255260d7b82",
      "filename": "src/java.base/share/classes/java/util/Objects.java",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/openjdk/jdk/blob/2f747f3dba828ebeec5dee9ccc3e4a88bd04262b/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Futil%2FObjects.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/2f747f3dba828ebeec5dee9ccc3e4a88bd04262b/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Futil%2FObjects.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Futil%2FObjects.java?ref=2f747f3dba828ebeec5dee9ccc3e4a88bd04262b",
      "patch": "@@ -62,10 +62,11 @@ private Objects() {\n      * Returns {@code true} if the arguments are equal to each other\n      * and {@code false} otherwise.\n      * Consequently, if both arguments are {@code null}, {@code true}\n-     * is returned and if exactly one argument is {@code null}, {@code\n-     * false} is returned.  Otherwise, equality is determined by using\n-     * the {@link Object#equals equals} method of the first\n-     * argument.\n+     * is returned.  Otherwise, if the first argument is not {@code\n+     * null}, equality is determined by calling the {@link\n+     * Object#equals equals} method of the first argument with the\n+     * second argument of this method. Otherwise, {@code false} is\n+     * returned.\n      *\n      * @param a an object\n      * @param b an object to be compared with {@code a} for equality",
      "parent_sha": "c642ba3d7c902c4f1093fbdafe903cb9e0f14e9f"
    }
  },
  {
    "oid": "ee64ce9f14c36c38fc4fadf8e5f350daa46e3a78",
    "message": "8274937: Revert the timeout setting for DynamicLoaderConstraintsTest\n\nReviewed-by: dcubed, minqi",
    "date": "2021-10-15T16:53:00Z",
    "url": "https://github.com/openjdk/jdk/commit/ee64ce9f14c36c38fc4fadf8e5f350daa46e3a78",
    "details": {
      "sha": "9d194c288a34942acb13afdaf654150ce381b37d",
      "filename": "test/hotspot/jtreg/runtime/cds/appcds/loaderConstraints/DynamicLoaderConstraintsTest.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/openjdk/jdk/blob/ee64ce9f14c36c38fc4fadf8e5f350daa46e3a78/test%2Fhotspot%2Fjtreg%2Fruntime%2Fcds%2Fappcds%2FloaderConstraints%2FDynamicLoaderConstraintsTest.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/ee64ce9f14c36c38fc4fadf8e5f350daa46e3a78/test%2Fhotspot%2Fjtreg%2Fruntime%2Fcds%2Fappcds%2FloaderConstraints%2FDynamicLoaderConstraintsTest.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fhotspot%2Fjtreg%2Fruntime%2Fcds%2Fappcds%2FloaderConstraints%2FDynamicLoaderConstraintsTest.java?ref=ee64ce9f14c36c38fc4fadf8e5f350daa46e3a78",
      "patch": "@@ -33,7 +33,7 @@\n  *          jdk.httpserver\n  * @build sun.hotspot.WhiteBox\n  * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n- * @run main/othervm/timeout=180 -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath/a:. DynamicLoaderConstraintsTest\n+ * @run main/othervm -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath/a:. DynamicLoaderConstraintsTest\n  */\n \n /**\n@@ -49,7 +49,7 @@\n  *          jdk.httpserver\n  * @build sun.hotspot.WhiteBox\n  * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n- * @run main/othervm/timeout=180 -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath/a:. DynamicLoaderConstraintsTest custom\n+ * @run main/othervm -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath/a:. DynamicLoaderConstraintsTest custom\n  */\n \n /**\n@@ -66,7 +66,7 @@\n  *          jdk.httpserver\n  * @build sun.hotspot.WhiteBox\n  * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n- * @run main/othervm/timeout=180 -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath/a:. DynamicLoaderConstraintsTest custom-zgc\n+ * @run main/othervm -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath/a:. DynamicLoaderConstraintsTest custom-zgc\n  */\n \n import com.sun.net.httpserver.HttpExchange;",
      "parent_sha": "8c4da9c15fec7bd27e243e9a6c9ebcad63109506"
    }
  },
  {
    "oid": "6cf70f5f0809276904094bf8eba8786892bf034e",
    "message": "8273638: javax/swing/JTable/4235420/bug4235420.java fails in GTK L&F\n\nReviewed-by: pbansal, psadhukhan, azvegint",
    "date": "2021-09-15T05:15:44Z",
    "url": "https://github.com/openjdk/jdk/commit/6cf70f5f0809276904094bf8eba8786892bf034e",
    "details": {
      "sha": "8bde3b8ea9c01f131e859e9b3bf127283cfd62dd",
      "filename": "test/jdk/javax/swing/JTable/4235420/bug4235420.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/openjdk/jdk/blob/6cf70f5f0809276904094bf8eba8786892bf034e/test%2Fjdk%2Fjavax%2Fswing%2FJTable%2F4235420%2Fbug4235420.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/6cf70f5f0809276904094bf8eba8786892bf034e/test%2Fjdk%2Fjavax%2Fswing%2FJTable%2F4235420%2Fbug4235420.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fjdk%2Fjavax%2Fswing%2FJTable%2F4235420%2Fbug4235420.java?ref=6cf70f5f0809276904094bf8eba8786892bf034e",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2012, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -50,7 +50,7 @@ public static void main(String[] argv) throws Exception {\n             System.out.println(\"Testing L&F: \" + LF.getClassName());\n \n             if (\"Nimbus\".equals(UIManager.getLookAndFeel().getName()) ||\n-                \"GTK\".equals(UIManager.getLookAndFeel().getName())) {\n+                \"GTK\".equals(UIManager.getLookAndFeel().getID())) {\n                 System.out.println(\"The test is skipped for Nimbus and GTK\");\n \n                 continue;",
      "parent_sha": "e66bf472484f6873faf45d634f17b68777fdcfa6"
    }
  },
  {
    "oid": "33d9178ebdf9695584771df068825ce26ee5f657",
    "message": "8243574: java.lang.invoke.InvokerBytecodeGenerator.ClassData should be package-private\n\nReviewed-by: alanb",
    "date": "2020-04-24T19:59:04Z",
    "url": "https://github.com/openjdk/jdk/commit/33d9178ebdf9695584771df068825ce26ee5f657",
    "details": {
      "sha": "f1cc6699bce563ea658ae0d25edb2599cad801ab",
      "filename": "src/java.base/share/classes/java/lang/invoke/InvokerBytecodeGenerator.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/openjdk/jdk/blob/33d9178ebdf9695584771df068825ce26ee5f657/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2Finvoke%2FInvokerBytecodeGenerator.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/33d9178ebdf9695584771df068825ce26ee5f657/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2Finvoke%2FInvokerBytecodeGenerator.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2Finvoke%2FInvokerBytecodeGenerator.java?ref=33d9178ebdf9695584771df068825ce26ee5f657",
      "patch": "@@ -236,7 +236,7 @@ private static String makeDumpableClassName(String className) {\n         return className;\n     }\n \n-    public static class ClassData {\n+    static class ClassData {\n         final String name;\n         final String desc;\n         final Object value;",
      "parent_sha": "e19d8805814dd79a61134a5e1024d470366fbc7a"
    }
  },
  {
    "oid": "00a47ca240ab184f4f66bd247cf4f909baf29ab3",
    "message": "6850806: NPE exception throws in PrintServce.getSupportedAttributeValues\n\nReviewed-by: igor, prr",
    "date": "2011-02-18T21:47:07Z",
    "url": "https://github.com/openjdk/jdk/commit/00a47ca240ab184f4f66bd247cf4f909baf29ab3",
    "details": {
      "sha": "6e60888092f295e7e77d45980c93f573c5c19da7",
      "filename": "jdk/src/windows/classes/sun/print/Win32PrintService.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/openjdk/jdk/blob/00a47ca240ab184f4f66bd247cf4f909baf29ab3/jdk%2Fsrc%2Fwindows%2Fclasses%2Fsun%2Fprint%2FWin32PrintService.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/00a47ca240ab184f4f66bd247cf4f909baf29ab3/jdk%2Fsrc%2Fwindows%2Fclasses%2Fsun%2Fprint%2FWin32PrintService.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Fsrc%2Fwindows%2Fclasses%2Fsun%2Fprint%2FWin32PrintService.java?ref=00a47ca240ab184f4f66bd247cf4f909baf29ab3",
      "patch": "@@ -1325,7 +1325,7 @@ private boolean isAutoSense(DocFlavor flavor) {\n             }\n             if (trays != null) {\n                 System.arraycopy(trays, 0, arr,\n-                                 mediaSizeNames.length, trays.length);\n+                                 len - trays.length, trays.length);\n             }\n             return arr;\n         } else if (category == MediaPrintableArea.class) {",
      "parent_sha": "dd383efe04a62194d96f077a234a9522c734d791"
    }
  },
  {
    "oid": "4121a03c4c67de2b683f0801b27b6f2b133b0a08",
    "message": "6699589: java/awt/EventQueue/PostEventOrderingTest.java fails\n\nReviewed-by: dav, anthony",
    "date": "2008-11-26T13:25:16Z",
    "url": "https://github.com/openjdk/jdk/commit/4121a03c4c67de2b683f0801b27b6f2b133b0a08",
    "details": {
      "sha": "3db3b21a6dbb1822de19570ffbc179a07c05a644",
      "filename": "jdk/src/share/classes/sun/awt/SunToolkit.java",
      "status": "modified",
      "additions": 6,
      "deletions": 20,
      "changes": 26,
      "blob_url": "https://github.com/openjdk/jdk/blob/4121a03c4c67de2b683f0801b27b6f2b133b0a08/jdk%2Fsrc%2Fshare%2Fclasses%2Fsun%2Fawt%2FSunToolkit.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/4121a03c4c67de2b683f0801b27b6f2b133b0a08/jdk%2Fsrc%2Fshare%2Fclasses%2Fsun%2Fawt%2FSunToolkit.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Fsrc%2Fshare%2Fclasses%2Fsun%2Fawt%2FSunToolkit.java?ref=4121a03c4c67de2b683f0801b27b6f2b133b0a08",
      "patch": "@@ -2008,26 +2008,12 @@ public boolean noEvents() {\n     /*\n      * Continually post pending AWTEvents to the Java EventQueue.\n      */\n-    public void flush() {\n-        if (queueHead != null) {\n-            EventQueueItem tempQueue;\n-            /*\n-             * We have to execute the loop inside the synchronized block\n-             * to ensure that the flush is completed before a new event\n-             * can be posted to this queue.\n-             */\n-            synchronized (this) {\n-                tempQueue = queueHead;\n-                queueHead = queueTail = null;\n-                /*\n-                 * If this PostEventQueue is flushed in parallel on two\n-                 * different threads tempQueue will be null for one of them.\n-                 */\n-                while (tempQueue != null) {\n-                    eventQueue.postEvent(tempQueue.event);\n-                    tempQueue = tempQueue.next;\n-                }\n-            }\n+    public synchronized void flush() {\n+        EventQueueItem tempQueue = queueHead;\n+        queueHead = queueTail = null;\n+        while (tempQueue != null) {\n+            eventQueue.postEvent(tempQueue.event);\n+            tempQueue = tempQueue.next;\n         }\n     }\n ",
      "parent_sha": "dacdf4a500d1944a6b13a0aabc950ca08e1b2b6b"
    }
  },
  {
    "oid": "d54fa9e93d786eb264d431621f7065cf4a4970e5",
    "message": "8212662: Fix javadoc typo in java.lang.ref.Cleaner\n\nReviewed-by: lancea, rriggs",
    "date": "2018-10-18T14:45:05Z",
    "url": "https://github.com/openjdk/jdk/commit/d54fa9e93d786eb264d431621f7065cf4a4970e5",
    "details": {
      "sha": "a736f23ad2f80734b84797791e6d43d41bc5a6a8",
      "filename": "src/java.base/share/classes/java/lang/ref/Cleaner.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/openjdk/jdk/blob/d54fa9e93d786eb264d431621f7065cf4a4970e5/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2Fref%2FCleaner.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/d54fa9e93d786eb264d431621f7065cf4a4970e5/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2Fref%2FCleaner.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2Fref%2FCleaner.java?ref=d54fa9e93d786eb264d431621f7065cf4a4970e5",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2018, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -100,8 +100,8 @@\n  *            }\n  *        }\n  *\n- *        private final State;\n- *        private final Cleaner.Cleanable cleanable\n+ *        private final State state;\n+ *        private final Cleaner.Cleanable cleanable;\n  *\n  *        public CleaningExample() {\n  *            this.state = new State(...);",
      "parent_sha": "ef3c0a2458782f38f4a94b00a597c08e199dffd1"
    }
  },
  {
    "oid": "2cb764b24b82797f1fc4963296fac4248801f566",
    "message": "8231768: Remove duplicate if/else in vmTestbase/nsk/share/jdi/Binder.java\n\nReviewed-by: sspitsyn, phh, cjplummer",
    "date": "2019-10-03T15:50:10Z",
    "url": "https://github.com/openjdk/jdk/commit/2cb764b24b82797f1fc4963296fac4248801f566",
    "details": {
      "sha": "d74fb93731e5c02345002bf6e42f9431fadd68f0",
      "filename": "test/hotspot/jtreg/vmTestbase/nsk/share/jdi/Binder.java",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/openjdk/jdk/blob/2cb764b24b82797f1fc4963296fac4248801f566/test%2Fhotspot%2Fjtreg%2FvmTestbase%2Fnsk%2Fshare%2Fjdi%2FBinder.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/2cb764b24b82797f1fc4963296fac4248801f566/test%2Fhotspot%2Fjtreg%2FvmTestbase%2Fnsk%2Fshare%2Fjdi%2FBinder.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fhotspot%2Fjtreg%2FvmTestbase%2Fnsk%2Fshare%2Fjdi%2FBinder.java?ref=2cb764b24b82797f1fc4963296fac4248801f566",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2001, 2018, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2019, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -201,8 +201,6 @@ public Debugee bindToDebugeeNoWait(String classToExecute) {\n                 debugee = localLaunchDebugee(vmm, classToExecute, classPath);\n             } else if (argumentHandler.isAttachingConnector()) {\n                 debugee = localLaunchAndAttachDebugee(vmm, classToExecute, classPath);\n-            } else if (argumentHandler.isLaunchingConnector()) {\n-                debugee = localLaunchDebugee(vmm, classToExecute, classPath);\n             } else if (argumentHandler.isListeningConnector()) {\n                 debugee = localLaunchAndListenDebugee(vmm, classToExecute, classPath);\n             } else {",
      "parent_sha": "4084a43111f2e668acdf5e66a6c1d156bb58918e"
    }
  },
  {
    "oid": "355356c405adb9287b786b0b045c2eb974d2ffca",
    "message": "8273435: Remove redundant zero-length check in ClassDesc.of\n\nReviewed-by: rriggs",
    "date": "2021-09-29T23:08:23Z",
    "url": "https://github.com/openjdk/jdk/commit/355356c405adb9287b786b0b045c2eb974d2ffca",
    "details": {
      "sha": "14923594c0e1bc24cbfbce13bc91596dcd0495ac",
      "filename": "src/java.base/share/classes/java/lang/constant/ClassDesc.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/openjdk/jdk/blob/355356c405adb9287b786b0b045c2eb974d2ffca/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2Fconstant%2FClassDesc.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/355356c405adb9287b786b0b045c2eb974d2ffca/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2Fconstant%2FClassDesc.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2Fconstant%2FClassDesc.java?ref=355356c405adb9287b786b0b045c2eb974d2ffca",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2018, 2019, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -99,7 +99,7 @@ static ClassDesc of(String packageName, String className) {\n         }\n         validateMemberName(requireNonNull(className), false);\n         return ofDescriptor(\"L\" + binaryToInternal(packageName) +\n-                (packageName.length() > 0 ? \"/\" : \"\") + className + \";\");\n+                \"/\" + className + \";\");\n     }\n \n     /**",
      "parent_sha": "97385d4f166fbd63a7c91d2ee28b5ed75cb02518"
    }
  },
  {
    "oid": "caddf21da808c1f4a86ef7f61aa6f8da8a9d5b37",
    "message": "8132548: java/lang/ThreadGroup/Stop.java fails with \"RuntimeException: Failure\"\n\nReviewed-by: dholmes, martin, darcy",
    "date": "2016-07-13T02:26:11Z",
    "url": "https://github.com/openjdk/jdk/commit/caddf21da808c1f4a86ef7f61aa6f8da8a9d5b37",
    "details": {
      "sha": "c0be8c08fcaf1b7058b994c59cbc10ee75ff1ac3",
      "filename": "jdk/test/java/lang/ThreadGroup/Stop.java",
      "status": "modified",
      "additions": 25,
      "deletions": 44,
      "changes": 69,
      "blob_url": "https://github.com/openjdk/jdk/blob/caddf21da808c1f4a86ef7f61aa6f8da8a9d5b37/jdk%2Ftest%2Fjava%2Flang%2FThreadGroup%2FStop.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/caddf21da808c1f4a86ef7f61aa6f8da8a9d5b37/jdk%2Ftest%2Fjava%2Flang%2FThreadGroup%2FStop.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Ftest%2Fjava%2Flang%2FThreadGroup%2FStop.java?ref=caddf21da808c1f4a86ef7f61aa6f8da8a9d5b37",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1999, 2011, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2016, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -28,60 +28,41 @@\n  *          unpredictable results.\n  */\n \n-public class Stop implements Runnable {\n-    private static boolean groupStopped = false ;\n-    private static final Object lock = new Object();\n+import java.util.concurrent.CountDownLatch;\n \n-    private static final ThreadGroup group = new ThreadGroup(\"\");\n-    private static final Thread first = new Thread(group, new Stop());\n-    private static final Thread second = new Thread(group, new Stop());\n+public class Stop {\n \n-    public void run() {\n-        while (true) {\n-            // Give the other thread a chance to start\n-            try {\n-                Thread.sleep(1000);\n-            } catch (InterruptedException e) {\n-            }\n+    public static void main(String[] args) throws Exception {\n+        final CountDownLatch ready = new CountDownLatch(1);\n+        final ThreadGroup group = new ThreadGroup(\"\");\n \n-            // When the first thread runs, it will stop the group.\n-            if (Thread.currentThread() == first) {\n-                synchronized (lock) {\n-                    try {\n-                        group.stop();\n-                    } finally {\n-                        // Signal the main thread it is time to check\n-                        // that the stopped thread group was successful\n-                        groupStopped = true;\n-                        lock.notifyAll();\n-                    }\n+        final Thread second = new Thread(group, () -> {\n+            ready.countDown();\n+            while (true) {\n+                try {\n+                    Thread.sleep(60000);\n+                } catch (InterruptedException shouldNotHappen) {\n                 }\n             }\n-        }\n-    }\n+        });\n+\n+        final Thread first = new Thread(group, () -> {\n+            // Wait until \"second\" is started\n+            try {\n+                ready.await();\n+            } catch (InterruptedException shouldNotHappen) {\n+            }\n+            // Now stop the group\n+            group.stop();\n+        });\n \n-    public static void main(String[] args) throws Exception {\n         // Launch two threads as part of the same thread group\n         first.start();\n         second.start();\n \n-        // Wait for the thread group stop to be issued\n-        synchronized(lock){\n-            while (!groupStopped) {\n-                lock.wait();\n-                // Give the other thread a chance to stop\n-                Thread.sleep(1000);\n-            }\n-        }\n-\n         // Check that the second thread is terminated when the\n         // first thread terminates the thread group.\n-        boolean failed = second.isAlive();\n-\n-        // Clean up any threads that may have not been terminated\n-        first.stop();\n-        second.stop();\n-        if (failed)\n-            throw new RuntimeException(\"Failure.\");\n+        second.join();\n+        // Test passed - if never get here the test times out and fails.\n     }\n }",
      "parent_sha": "cd2dd88b9eb786d78acab960a8c63e687160c768"
    }
  },
  {
    "oid": "d819debaa5f0155e5e3990fa4f919ab420610c97",
    "message": "8304423: Refactor FdLibm.java\n\nReviewed-by: bpb",
    "date": "2023-04-25T19:33:22Z",
    "url": "https://github.com/openjdk/jdk/commit/d819debaa5f0155e5e3990fa4f919ab420610c97",
    "details": {
      "sha": "5410a0a1ad6187a4104c441301933177a134463a",
      "filename": "src/java.base/share/classes/java/lang/FdLibm.java",
      "status": "modified",
      "additions": 82,
      "deletions": 75,
      "changes": 157,
      "blob_url": "https://github.com/openjdk/jdk/blob/d819debaa5f0155e5e3990fa4f919ab420610c97/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2FFdLibm.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/d819debaa5f0155e5e3990fa4f919ab420610c97/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2FFdLibm.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2FFdLibm.java?ref=d819debaa5f0155e5e3990fa4f919ab420610c97",
      "patch": "@@ -64,6 +64,16 @@ class FdLibm {\n     private static final double TWO54    = 0x1.0p54; // 1.80143985094819840000e+16\n     private static final double HUGE     = 1.0e+300;\n \n+    /*\n+     * Constants for bit-wise manipulation of IEEE 754 double\n+     * values. These constants are for the high-order 32-bits of a\n+     * 64-bit double value: 1 sign bit as the most significant bit,\n+     * followed by 11 exponent bits, and then the remaining bits as\n+     * the significand.\n+     */\n+    private static final int SIGN_BIT        = 0x8000_0000;\n+    private static final int EXP_BITS        = 0x7ff0_0000;\n+    private static final int EXP_SIGNIF_BITS = 0x7fff_ffff;\n \n     private FdLibm() {\n         throw new UnsupportedOperationException(\"No FdLibm instances for you.\");\n@@ -156,10 +166,10 @@ static double compute(double x) {\n             ix = __HI(x);\n \n             // |x| ~< pi/4\n-            ix &= 0x7fff_ffff;\n+            ix &= EXP_SIGNIF_BITS;\n             if (ix <= 0x3fe9_21fb) {\n                 return __kernel_sin(x, z, 0);\n-            } else if (ix>=0x7ff0_0000) {  // sin(Inf or NaN) is NaN\n+            } else if (ix >= EXP_BITS) {  // sin(Inf or NaN) is NaN\n                 return x - x;\n             } else { // argument reduction needed\n                 n = RemPio2.__ieee754_rem_pio2(x, y);\n@@ -211,7 +221,7 @@ static double compute(double x) {\n         static double __kernel_sin(double x, double y, int iy) {\n             double z, r, v;\n             int ix;\n-            ix = __HI(x) & 0x7fff_ffff;        // high word of x\n+            ix = __HI(x) & EXP_SIGNIF_BITS;    // high word of x\n             if (ix < 0x3e40_0000) {            // |x| < 2**-27\n                 if ((int)x == 0)               // generate inexact\n                     return x;\n@@ -269,11 +279,11 @@ static double compute(double x) {\n             ix = __HI(x);\n \n             // |x| ~< pi/4\n-            ix &= 0x7fff_ffff;\n+            ix &= EXP_SIGNIF_BITS;\n             if (ix <= 0x3fe9_21fb) {\n                 return __kernel_cos(x, z);\n-            } else if (ix >= 0x7ff0_0000) { // cos(Inf or NaN) is NaN\n-                return x-x;\n+            } else if (ix >= EXP_BITS) { // cos(Inf or NaN) is NaN\n+                return x - x;\n             } else { // argument reduction needed\n                 n = RemPio2.__ieee754_rem_pio2(x,y);\n                 switch (n & 3) {\n@@ -331,7 +341,7 @@ static double compute(double x) {\n         static double __kernel_cos(double x, double y) {\n             double a, hz, z, r, qx = 0.0;\n             int ix;\n-            ix = __HI(x) & 0x7fff_ffff;       // ix = |x|'s high word\n+            ix = __HI(x) & EXP_SIGNIF_BITS;       // ix = |x|'s high word\n             if (ix < 0x3e40_0000) {           // if x < 2**27\n                 if (((int)x) == 0) {          // generate inexact\n                     return 1.0;\n@@ -395,11 +405,11 @@ static double compute(double x) {\n             ix = __HI(x);\n \n             // |x| ~< pi/4\n-            ix &= 0x7fff_ffff;\n+            ix &= EXP_SIGNIF_BITS;\n             if (ix <= 0x3fe9_21fb) {\n                 return __kernel_tan(x, z, 1);\n-            } else if (ix >= 0x7ff0_0000) { // tan(Inf or NaN) is NaN\n-                return x-x;            // NaN\n+            } else if (ix >= EXP_BITS) { // tan(Inf or NaN) is NaN\n+                return x - x;            // NaN\n             } else {           // argument reduction needed\n                 n = RemPio2.__ieee754_rem_pio2(x, y);\n                 return __kernel_tan(y[0], y[1], 1 - ((n & 1) << 1)); // 1 -- n even; -1 -- n odd\n@@ -462,7 +472,7 @@ static double __kernel_tan(double x, double y, int iy) {\n             double z, r, v, w, s;\n             int ix, hx;\n             hx = __HI(x);   // high word of x\n-            ix = hx&0x7fff_ffff;     // high word of |x|\n+            ix = hx & EXP_SIGNIF_BITS;     // high word of |x|\n             if (ix < 0x3e30_0000) {  // x < 2**-28\n                 if ((int)x == 0) {   // generate inexact\n                     if (((ix | __LO(x)) | (iy + 1)) == 0) {\n@@ -584,7 +594,7 @@ static int __ieee754_rem_pio2(double x, double[] y) {\n             int e0, i, j, nx, n, ix, hx;\n \n             hx = __HI(x);           // high word of x\n-            ix = hx & 0x7fff_ffff;\n+            ix = hx & EXP_SIGNIF_BITS;\n             if (ix <= 0x3fe9_21fb) {   // |x| ~<= pi/4 , no need for reduction\n                 y[0] = x;\n                 y[1] = 0;\n@@ -655,13 +665,13 @@ static int __ieee754_rem_pio2(double x, double[] y) {\n             /*\n              * all other (large) arguments\n              */\n-            if (ix >= 0x7ff0_0000) {            // x is inf or NaN\n+            if (ix >= EXP_BITS) {            // x is inf or NaN\n                 y[0] = y[1] = x - x;\n                 return 0;\n             }\n-            // set z = scalbn(|x|,ilogb(x)-23)\n+            // set z = scalbn(|x|, ilogb(x)-23)\n             z = __LO(z, __LO(x));\n-            e0 = (ix >> 20) - 1046;        /* e0 = ilogb(z)-23; */\n+            e0 = (ix >> 20) - 1046;        // e0 = ilogb(z) - 23;\n             z = __HI(z, ix - (e0 << 20));\n             for (i=0; i < 2; i++) {\n                 tx[i] = (double)((int)(z));\n@@ -859,7 +869,7 @@ static int __kernel_rem_pio2(double[] x, double[] y, int e0, int nx, int prec, f\n \n                 // compute n\n                 z  = Math.scalb(z, q0);              // actual value of z\n-                z -= 8.0*Math.floor(z*0.125);           // trim off integer >= 8\n+                z -= 8.0*Math.floor(z*0.125);        // trim off integer >= 8\n                 n  = (int) z;\n                 z -= (double)n;\n                 ih = 0;\n@@ -1071,7 +1081,7 @@ static double compute(double x) {\n             double t = 0, w, p, q, c, r, s;\n             int hx, ix;\n             hx = __HI(x);\n-            ix = hx & 0x7fff_ffff;\n+            ix = hx & EXP_SIGNIF_BITS;\n             if (ix >= 0x3ff0_0000) {           // |x| >= 1\n                 if(((ix - 0x3ff0_0000) | __LO(x)) == 0) {\n                     // asin(1) = +-pi/2 with inexact\n@@ -1157,7 +1167,7 @@ static double compute(double x) {\n             double z, p, q, r, w, s, c, df;\n             int hx, ix;\n             hx = __HI(x);\n-            ix = hx & 0x7fff_ffff;\n+            ix = hx & EXP_SIGNIF_BITS;\n             if (ix >= 0x3ff0_0000) {    // |x| >= 1\n                 if (((ix - 0x3ff0_0000) | __LO(x)) == 0) {  // |x| == 1\n                     if (hx > 0) {// acos(1) = 0\n@@ -1166,7 +1176,7 @@ static double compute(double x) {\n                         return Math.PI + 2.0*pio2_lo;\n                     }\n                 }\n-                return (x-x)/(x-x);         // acos(|x| > 1) is NaN\n+                return (x - x)/(x - x);         // acos(|x| > 1) is NaN\n             }\n             if (ix < 0x3fe0_0000) {     // |x| < 0.5\n                 if (ix <= 0x3c60_0000) {  // if |x| < 2**-57\n@@ -1255,10 +1265,10 @@ static double compute(double x) {\n             int ix, hx, id;\n \n             hx = __HI(x);\n-            ix = hx & 0x7fff_ffff;\n+            ix = hx & EXP_SIGNIF_BITS;\n             if (ix >= 0x4410_0000) {    // if |x| >= 2^66\n-                if (ix > 0x7ff0_0000 ||\n-                    (ix == 0x7ff0_0000 && (__LO(x) != 0))) {\n+                if (ix > EXP_BITS ||\n+                    (ix == EXP_BITS && (__LO(x) != 0))) {\n                     return x+x;             // NaN\n                 }\n                 if (hx > 0) {\n@@ -1352,10 +1362,10 @@ static double compute(double y, double x) {\n             /*unsigned*/ int lx, ly;\n \n             hx = __HI(x);\n-            ix = hx & 0x7fff_ffff;\n+            ix = hx & EXP_SIGNIF_BITS;\n             lx = __LO(x);\n             hy = __HI(y);\n-            iy = hy&0x7fff_ffff;\n+            iy = hy & EXP_SIGNIF_BITS;\n             ly = __LO(y);\n             if (Double.isNaN(x) || Double.isNaN(y))\n                 return x + y;\n@@ -1378,8 +1388,8 @@ static double compute(double y, double x) {\n             }\n \n             // when x is INF\n-            if (ix == 0x7ff0_0000) {\n-                if (iy == 0x7ff0_0000) {\n+            if (ix == EXP_BITS) {\n+                if (iy == EXP_BITS) {\n                     switch(m) {\n                     case 0: return  pi_o_4 + tiny;      // atan(+INF, +INF)\n                     case 1: return -pi_o_4 - tiny;      // atan(-INF, +INF)\n@@ -1396,7 +1406,7 @@ static double compute(double y, double x) {\n                 }\n             }\n             // when y is INF\n-            if (iy == 0x7ff0_0000) {\n+            if (iy == EXP_BITS) {\n                 return (hy < 0)? -pi_o_2 - tiny : pi_o_2 + tiny;\n             }\n \n@@ -1494,23 +1504,23 @@ static class Sqrt {\n \n         static double compute(double x) {\n             double z = 0.0;\n-            int sign = 0x8000_0000;\n+            int sign = SIGN_BIT;\n             /*unsigned*/ int r, t1, s1, ix1, q1;\n             int ix0, s0, q, m, t, i;\n \n             ix0 = __HI(x);  // high word of x\n             ix1 = __LO(x);  // low word of x\n \n             // take care of Inf and NaN\n-            if ((ix0 & 0x7ff0_0000) == 0x7ff0_0000) {\n+            if ((ix0 & EXP_BITS) == EXP_BITS) {\n                 return x*x + x; // sqrt(NaN)=NaN, sqrt(+inf)=+inf, sqrt(-inf)=sNaN\n             }\n             // take care of zero\n             if (ix0 <= 0) {\n                 if (((ix0 & (~sign)) | ix1) == 0)\n                     return x; // sqrt(+-0) = +-0\n                 else if (ix0 < 0)\n-                    return (x-x)/(x-x); // sqrt(-ve) = sNaN\n+                    return (x - x)/(x - x); // sqrt(-ve) = sNaN\n             }\n             // normalize x\n             m = (ix0 >> 20);\n@@ -2136,7 +2146,7 @@ else if (x_abs > 1.0) // (|x| > 1)**+/-inf = inf, 0\n             }\n \n             final int hx = __HI(x);\n-            int ix = hx & 0x7fffffff;\n+            int ix = hx & EXP_SIGNIF_BITS;\n \n             /*\n              * When x < 0, determine if y is an odd integer:\n@@ -2176,7 +2186,7 @@ else if (y_abs >= 1.0) { // |y| >= 1.0\n \n             // (x < 0)**(non-int) is NaN\n             if ((n | y_is_int) == 0)\n-                return (x-x)/(x-x);\n+                return (x - x)/(x - x);\n \n             s = 1.0; // s (sign of result -ve**odd) = -1 else = 1\n             if ( (n | (y_is_int - 1)) == 0)\n@@ -2299,7 +2309,7 @@ else if (j < 0xBB67A)\n                     if (p_l + OVT > z - p_h)\n                         return s * INFINITY;   // Overflow\n                 }\n-            } else if ((j & 0x7fffffff) >= 0x4090cc00 ) {        // z <= -1075\n+            } else if ((j & EXP_SIGNIF_BITS) >= 0x4090cc00 ) {        // z <= -1075\n                 if (((j - 0xc090cc00) | i)!=0)           // z < -1075\n                     return s * 0.0;           // Underflow\n                 else {\n@@ -2319,12 +2329,12 @@ else if (j < 0xBB67A)\n             final double LG2     =  0x1.62e4_2fef_a39efp-1;  //  6.93147180559945286227e-01\n             final double LG2_H   =  0x1.62e43p-1;            //  6.93147182464599609375e-01\n             final double LG2_L   = -0x1.05c6_10ca_86c39p-29; // -1.90465429995776804525e-09\n-            i = j & 0x7fffffff;\n+            i = j & EXP_SIGNIF_BITS;\n             k = (i >> 20) - 0x3ff;\n             n = 0;\n             if (i > 0x3fe00000) {              // if |z| > 0.5, set n = [z + 0.5]\n                 n = j + (0x00100000 >> (k + 1));\n-                k = ((n & 0x7fffffff) >> 20) - 0x3ff;     // new k for n\n+                k = ((n & EXP_SIGNIF_BITS) >> 20) - 0x3ff;     // new k for n\n                 t = 0.0;\n                 t = __HI(t, (n & ~(0x000fffff >> k)) );\n                 n = ((n & 0x000fffff) | 0x00100000) >> (20 - k);\n@@ -2449,7 +2459,7 @@ public static double compute(double x) {\n \n             hx  = __HI(x);  /* high word of x */\n             xsb = (hx >> 31) & 1;               /* sign bit of x */\n-            hx &= 0x7fffffff;               /* high word of |x| */\n+            hx &= EXP_SIGNIF_BITS;              /* high word of |x| */\n \n             /* filter out non-finite argument */\n             if (hx >= 0x40862E42) {                  /* if |x| >= 709.78... */\n@@ -2568,8 +2578,6 @@ static final class Log {\n             Lg6    = 0x1.39a09d078c69fp-3,  // 1.531383769920937332e-01\n             Lg7    = 0x1.2f112df3e5244p-3;  // 1.479819860511658591e-01\n \n-        private static final double zero = 0.0;\n-\n         static double compute(double x) {\n             double hfsq, f, s, z, R, w, t1, t2, dk;\n             int k, hx, i, j;\n@@ -2580,17 +2588,17 @@ static double compute(double x) {\n \n             k=0;\n             if (hx < 0x0010_0000) {                  // x < 2**-1022\n-                if (((hx & 0x7fff_ffff) | lx) == 0) { // log(+-0) = -inf\n-                    return -TWO54/zero;\n+                if (((hx & EXP_SIGNIF_BITS) | lx) == 0) { // log(+-0) = -inf\n+                    return -TWO54/0.0;\n                 }\n                 if (hx < 0) {                        // log(-#) = NaN\n-                    return (x - x)/zero;\n+                    return (x - x)/0.0;\n                 }\n                 k -= 54;\n                 x *= TWO54;    // subnormal number, scale up x\n                 hx = __HI(x);  // high word of x\n             }\n-            if (hx >= 0x7ff0_0000) {\n+            if (hx >= EXP_BITS) {\n                 return x + x;\n             }\n             k += (hx >> 20) - 1023;\n@@ -2600,9 +2608,9 @@ static double compute(double x) {\n             k += (i >> 20);\n             f = x - 1.0;\n             if ((0x000f_ffff & (2 + hx)) < 3) {// |f| < 2**-20\n-                if (f == zero) {\n+                if (f == 0.0) {\n                     if (k == 0) {\n-                        return zero;\n+                        return 0.0;\n                     } else {\n                         dk = (double)k;\n                         return dk*ln2_hi + dk*ln2_lo;\n@@ -2694,7 +2702,7 @@ public static double compute(double x) {\n \n             k=0;\n             if (hx < 0x0010_0000) {                  /* x < 2**-1022  */\n-                if (((hx & 0x7fff_ffff) | lx) == 0) {\n+                if (((hx & EXP_SIGNIF_BITS) | lx) == 0) {\n                     return -TWO54/0.0;               /* log(+-0)=-inf */\n                 }\n                 if (hx < 0) {\n@@ -2705,12 +2713,12 @@ public static double compute(double x) {\n                 hx = __HI(x);\n             }\n \n-            if (hx >= 0x7ff0_0000) {\n+            if (hx >= EXP_BITS) {\n                 return x + x;\n             }\n \n             k += (hx >> 20) - 1023;\n-            i  = (k  & 0x8000_0000) >>> 31; // unsigned shift\n+            i  = (k  & SIGN_BIT) >>> 31; // unsigned shift\n             hx = (hx & 0x000f_ffff) | ((0x3ff - i) << 20);\n             y  = (double)(k + i);\n             x = __HI(x, hx); // replace high word of x with hx\n@@ -2800,7 +2808,7 @@ public static double compute(double x) {\n             int k, hx, hu=0, ax;\n \n             hx = __HI(x);           /* high word of x */\n-            ax = hx & 0x7fff_ffff;\n+            ax = hx & EXP_SIGNIF_BITS;\n \n             k = 1;\n             if (hx < 0x3FDA_827A) {                  /* x < 0.41422  */\n@@ -2826,7 +2834,7 @@ public static double compute(double x) {\n                 }\n             }\n \n-            if (hx >= 0x7ff0_0000) {\n+            if (hx >= EXP_BITS) {\n                 return x + x;\n             }\n \n@@ -2977,7 +2985,6 @@ public static double compute(double x) {\n      * to produce the hexadecimal values shown.\n      */\n     static class Expm1 {\n-        private static final double one         =  1.0;\n         private static final double huge        =  1.0e+300;\n         private static final double tiny        =  1.0e-300;\n         private static final double o_threshold =  0x1.62e42fefa39efp9;   //  7.09782712893383973096e+02\n@@ -2997,9 +3004,9 @@ static double compute(double x) {\n             /*unsigned*/ int hx;\n \n             hx  = __HI(x);  // high word of x\n-            xsb = hx & 0x8000_0000;          // sign bit of x\n+            xsb = hx & SIGN_BIT;                 // sign bit of x\n             y = Math.abs(x);\n-            hx &= 0x7fff_ffff;               // high word of |x|\n+            hx &= EXP_SIGNIF_BITS;               // high word of |x|\n \n             // filter out huge and non-finite argument\n             if (hx >= 0x4043_687A) {                  // if |x| >= 56*ln2\n@@ -3017,7 +3024,7 @@ static double compute(double x) {\n                 }\n                 if (xsb != 0) { // x < -56*ln2, return -1.0 with inexact\n                     if (x + tiny < 0.0) {         // raise inexact\n-                        return tiny - one;        // return -1\n+                        return tiny - 1.0;        // return -1\n                     }\n                 }\n             }\n@@ -3052,7 +3059,7 @@ static double compute(double x) {\n             // x is now in primary range\n             hfx = 0.5*x;\n             hxs = x*hfx;\n-            r1 = one + hxs*(Q1 + hxs*(Q2 + hxs*(Q3 + hxs*(Q4 + hxs*Q5))));\n+            r1 = 1.0 + hxs*(Q1 + hxs*(Q2 + hxs*(Q3 + hxs*(Q4 + hxs*Q5))));\n             t  = 3.0 - r1*hfx;\n             e  = hxs *((r1 - t)/(6.0 - x*t));\n             if (k == 0) {\n@@ -3067,23 +3074,23 @@ static double compute(double x) {\n                     if (x < -0.25) {\n                         return -2.0*(e - (x + 0.5));\n                     } else {\n-                        return one + 2.0*(x - e);\n+                        return 1.0 + 2.0*(x - e);\n                     }\n                 }\n                 if (k <= -2 || k > 56) {   // suffice to return exp(x) - 1\n-                    y = one - (e - x);\n+                    y = 1.0 - (e - x);\n                     y = __HI(y, __HI(y) + (k << 20));     // add k to y's exponent\n-                    return y - one;\n+                    return y - 1.0;\n                 }\n-                t = one;\n+                t = 1.0;\n                 if (k < 20) {\n                     t = __HI(t, 0x3ff0_0000 - (0x2_00000 >> k));  // t = 1-2^-k\n                     y = t - ( e - x);\n                     y = __HI(y, __HI(y) + (k << 20));     // add k to y's exponent\n                 } else {\n                     t = __HI(t, ((0x3ff - k) << 20));     // 2^-k\n                     y = x - (e + t);\n-                    y += one;\n+                    y += 1.0;\n                     y = __HI(y, __HI(y) + (k << 20));     // add k to y's exponent\n                 }\n             }\n@@ -3120,10 +3127,10 @@ static double compute(double x) {\n \n             // High word of |x|\n             jx = __HI(x);\n-            ix = jx & 0x7fff_ffff;\n+            ix = jx & EXP_SIGNIF_BITS;\n \n             // x is INF or NaN\n-            if (ix >= 0x7ff0_0000) {\n+            if (ix >= EXP_BITS) {\n                 return x + x;\n             }\n \n@@ -3196,10 +3203,10 @@ static double compute(double x) {\n \n             // High word of |x|\n             ix = __HI(x);\n-            ix &= 0x7fff_ffff;\n+            ix &= EXP_SIGNIF_BITS;\n \n             // x is INF or NaN\n-            if (ix >= 0x7ff0_0000) {\n+            if (ix >= EXP_BITS) {\n                 return x*x;\n             }\n \n@@ -3273,10 +3280,10 @@ static double compute(double x) {\n \n             // High word of |x|.\n             jx = __HI(x);\n-            ix = jx & 0x7fff_ffff;\n+            ix = jx & EXP_SIGNIF_BITS;\n \n             // x is INF or NaN\n-            if (ix >= 0x7ff0_0000) {\n+            if (ix >= EXP_BITS) {\n                 if (jx >= 0) {  // tanh(+-inf)=+-1\n                     return 1.0/x + 1.0;\n                 } else {        // tanh(NaN) = NaN\n@@ -3314,17 +3321,17 @@ static double compute(double x, double p) {\n             lx = __LO(x);           // low  word of x\n             hp = __HI(p);           // high word of p\n             lp = __LO(p);           // low  word of p\n-            sx = hx & 0x8000_0000;\n-            hp &= 0x7fff_ffff;\n-            hx &= 0x7fff_ffff;\n+            sx = hx & SIGN_BIT;\n+            hp &= EXP_SIGNIF_BITS;\n+            hx &= EXP_SIGNIF_BITS;\n \n             // purge off exception values\n             if ((hp | lp) == 0) {// p = 0\n                 return (x*p)/(x*p);\n             }\n-            if ((hx >= 0x7ff0_0000) ||                   // not finite\n-                ((hp >= 0x7ff0_0000) &&                   // p is NaN\n-                 (((hp - 0x7ff0_0000) | lp) != 0)))\n+            if ((hx >= EXP_BITS) ||                   // not finite\n+                ((hp >= EXP_BITS) &&                   // p is NaN\n+                 (((hp - EXP_BITS) | lp) != 0)))\n                 return (x*p)/(x*p);\n \n             if (hp <= 0x7fdf_ffff) {  // now x < 2p\n@@ -3362,13 +3369,13 @@ private static double __ieee754_fmod(double x, double y) {\n             lx = __LO(x);           // low  word of x\n             hy = __HI(y);           // high word of y\n             ly = __LO(y);           // low  word of y\n-            sx = hx & 0x8000_0000;  // sign of x\n+            sx = hx & SIGN_BIT;     // sign of x\n             hx ^= sx;               // |x|\n-            hy &= 0x7fff_ffff;      // |y|\n+            hy &= EXP_SIGNIF_BITS;  // |y|\n \n             // purge off exception values\n-            if ((hy | ly) == 0 || (hx >= 0x7ff0_0000)||       // y = 0, or x not finite\n-               ((hy | ((ly | -ly) >>> 31)) > 0x7ff0_0000))    // or y is NaN, unsigned shift\n+            if ((hy | ly) == 0 || (hx >= EXP_BITS)||       // y = 0, or x not finite\n+               ((hy | ((ly | -ly) >>> 31)) > EXP_BITS))    // or y is NaN, unsigned shift\n                 return (x*y)/(x*y);\n             if (hx <= hy) {\n                 if ((hx < hy) || (Integer.compareUnsigned(lx, ly) < 0)) { // |x| < |y| return x",
      "parent_sha": "28829f308fe6314388c9a47b91273bcf81eb806c"
    }
  },
  {
    "oid": "1c0f2023827d5cfda3b42224eeb91cfa7fa3764b",
    "message": "8025965: Specialized functions with same weight replace each other in TreeSet\n\nReviewed-by: jlaskey, sundar",
    "date": "2013-10-08T11:11:15Z",
    "url": "https://github.com/openjdk/jdk/commit/1c0f2023827d5cfda3b42224eeb91cfa7fa3764b",
    "details": {
      "sha": "18b20a3d54e6d813d8a6c8bb49be216a0b3c1617",
      "filename": "nashorn/src/jdk/nashorn/internal/runtime/CompiledFunction.java",
      "status": "modified",
      "additions": 39,
      "deletions": 8,
      "changes": 47,
      "blob_url": "https://github.com/openjdk/jdk/blob/1c0f2023827d5cfda3b42224eeb91cfa7fa3764b/nashorn%2Fsrc%2Fjdk%2Fnashorn%2Finternal%2Fruntime%2FCompiledFunction.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/1c0f2023827d5cfda3b42224eeb91cfa7fa3764b/nashorn%2Fsrc%2Fjdk%2Fnashorn%2Finternal%2Fruntime%2FCompiledFunction.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/nashorn%2Fsrc%2Fjdk%2Fnashorn%2Finternal%2Fruntime%2FCompiledFunction.java?ref=1c0f2023827d5cfda3b42224eeb91cfa7fa3764b",
      "patch": "@@ -48,6 +48,7 @@ final class CompiledFunction implements Comparable<CompiledFunction> {\n     }\n \n     CompiledFunction(final MethodType type, final MethodHandle invoker, final MethodHandle constructor) {\n+        assert type != null;\n         this.type        = type;\n         this.invoker     = invoker;\n         this.constructor = constructor;\n@@ -80,7 +81,37 @@ MethodType type() {\n \n     @Override\n     public int compareTo(final CompiledFunction o) {\n-        return weight() - o.weight();\n+        return compareMethodTypes(type(), o.type());\n+    }\n+\n+    private static int compareMethodTypes(final MethodType ownType, final MethodType otherType) {\n+        // Comparable interface demands that compareTo() should only return 0 if objects are equal.\n+        // Failing to meet this requirement causes same weight functions to replace each other in TreeSet,\n+        // so we go some lengths to come up with an ordering between same weight functions,\n+        // first falling back to parameter count and then to hash code.\n+        if (ownType.equals(otherType)) {\n+            return 0;\n+        }\n+\n+        final int diff = weight(ownType) - weight(otherType);\n+        if (diff != 0) {\n+            return diff;\n+        }\n+        if (ownType.parameterCount() != otherType.parameterCount()) {\n+            return ownType.parameterCount() - otherType.parameterCount();\n+        }\n+        // We're just interested in not returning 0 here, not correct ordering\n+        return ownType.hashCode() - otherType.hashCode();\n+    }\n+\n+    @Override\n+    public boolean equals(Object obj) {\n+        return obj instanceof CompiledFunction && type().equals(((CompiledFunction)obj).type());\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return type().hashCode();\n     }\n \n     private int weight() {\n@@ -119,25 +150,25 @@ boolean moreGenericThan(final MethodType mt) {\n      * a semantically equivalent linkage can be performed.\n      *\n      * @param mt type to check against\n-     * @return\n+     * @return true if types are compatible\n      */\n     boolean typeCompatible(final MethodType mt) {\n-        final Class<?>[] wantedParams   = mt.parameterArray();\n-        final Class<?>[] existingParams = type().parameterArray();\n+        final int wantedParamCount   = mt.parameterCount();\n+        final int existingParamCount = type.parameterCount();\n \n         //if we are not examining a varargs type, the number of parameters must be the same\n-        if (wantedParams.length != existingParams.length && !isVarArgsType(mt)) {\n+        if (wantedParamCount != existingParamCount && !isVarArgsType(mt)) {\n             return false;\n         }\n \n         //we only go as far as the shortest array. the only chance to make this work if\n         //parameters lengths do not match is if our type ends with a varargs argument.\n         //then every trailing parameter in the given callsite can be folded into it, making\n         //us compatible (albeit slower than a direct specialization)\n-        final int lastParamIndex = Math.min(wantedParams.length, existingParams.length);\n+        final int lastParamIndex = Math.min(wantedParamCount, existingParamCount);\n         for (int i = 0; i < lastParamIndex; i++) {\n-            final Type w = Type.typeFor(wantedParams[i]);\n-            final Type e = Type.typeFor(existingParams[i]);\n+            final Type w = Type.typeFor(mt.parameterType(i));\n+            final Type e = Type.typeFor(type.parameterType(i));\n \n             //don't specialize on booleans, we have the \"true\" vs int 1 ambiguity in resolution\n             //we also currently don't support boolean as a javascript function callsite type.",
      "parent_sha": "d77e1a17017becdce3a5cfb0623ffbc5d6e25440"
    }
  },
  {
    "oid": "7d330d34f12e625bf2bec693c40db2c2cd704bb9",
    "message": "8245335: [TESTBUG] DeterministicDump.java fails with release JVM\n\nReviewed-by: stuefe, dholmes, jiefu",
    "date": "2020-05-21T22:56:27Z",
    "url": "https://github.com/openjdk/jdk/commit/7d330d34f12e625bf2bec693c40db2c2cd704bb9",
    "details": {
      "sha": "eaa5477d1e915919c9e4c6fb1bc7133060248fa8",
      "filename": "test/hotspot/jtreg/runtime/cds/DeterministicDump.java",
      "status": "modified",
      "additions": 3,
      "deletions": 9,
      "changes": 12,
      "blob_url": "https://github.com/openjdk/jdk/blob/7d330d34f12e625bf2bec693c40db2c2cd704bb9/test%2Fhotspot%2Fjtreg%2Fruntime%2Fcds%2FDeterministicDump.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/7d330d34f12e625bf2bec693c40db2c2cd704bb9/test%2Fhotspot%2Fjtreg%2Fruntime%2Fcds%2FDeterministicDump.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fhotspot%2Fjtreg%2Fruntime%2Fcds%2FDeterministicDump.java?ref=7d330d34f12e625bf2bec693c40db2c2cd704bb9",
      "patch": "@@ -67,16 +67,10 @@ public static void doTest(boolean compressed) throws Exception {\n         String baseArchive2 = dump(baseArgs);\n         compare(baseArchive, baseArchive2);\n \n-\n-        // (2) This will cause GC to happen after we've allocated 1MB of metaspace objects\n-        // while processing the built-in SharedClassListFile.\n-        String withGCArchive = dump(baseArgs, \"-XX:MetaspaceSize=1M\");\n-        compare(baseArchive, withGCArchive);\n-\n-        // (3) This will cause archive to be relocated during dump time. We should\n-        //     still get the same bits. (This simulates relocation that happens when\n+        // (2) This will cause the archive to be relocated during dump time. We should\n+        //     still get the same bits. This simulates relocation that happens when\n         //     Address Space Layout Randomization prevents the archive space to\n-        //     be mapped at the default location)\n+        //     be mapped at the default location.\n         String relocatedArchive = dump(baseArgs, \"-XX:+UnlockDiagnosticVMOptions\", \"-XX:ArchiveRelocationMode=1\");\n         compare(baseArchive, relocatedArchive);\n     }",
      "parent_sha": "ea38873d305e23020ae61a7b520a6c61c7be4c8d"
    }
  },
  {
    "oid": "d24f9d4c132b441faa8f987ef788431fa463c891",
    "message": "8205966: [testbug] New Nestmates JDI test times out with Xcomp on sparc\n\nReviewed-by: mikael, sspitsyn",
    "date": "2018-07-09T00:00:46Z",
    "url": "https://github.com/openjdk/jdk/commit/d24f9d4c132b441faa8f987ef788431fa463c891",
    "details": {
      "sha": "b78414d27d67db520e7a311615bbe02375a2b018",
      "filename": "test/jdk/com/sun/jdi/RedefineNestmateAttr/TestNestmateAttr.java",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/openjdk/jdk/blob/d24f9d4c132b441faa8f987ef788431fa463c891/test%2Fjdk%2Fcom%2Fsun%2Fjdi%2FRedefineNestmateAttr%2FTestNestmateAttr.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/d24f9d4c132b441faa8f987ef788431fa463c891/test%2Fjdk%2Fcom%2Fsun%2Fjdi%2FRedefineNestmateAttr%2FTestNestmateAttr.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fjdk%2Fcom%2Fsun%2Fjdi%2FRedefineNestmateAttr%2FTestNestmateAttr.java?ref=d24f9d4c132b441faa8f987ef788431fa463c891",
      "patch": "@@ -189,12 +189,14 @@ public static void main(String[] args) throws Throwable {\n \n         }\n \n+        breakpoint();    // debugger runs to here before enabling events\n         allowRedefine(); // debugger stops us here to attempt redefinitions\n \n         System.out.println(\"Target executed okay\");\n     }\n \n-    public static void allowRedefine() { }\n+    static void allowRedefine() { }\n+    static void breakpoint() { }\n }\n \n public class TestNestmateAttr extends TestScaffold {\n@@ -226,7 +228,7 @@ public static void main(String[] args) throws Throwable {\n \n     public void runTests() throws Exception {\n         // Get Target into debuggable state\n-        BreakpointEvent bpe = startToMain(\"Target\");\n+        BreakpointEvent bpe = startTo(\"Target\", \"breakpoint\", \"()V\");\n         EventRequestManager erm = vm().eventRequestManager();\n         MethodEntryRequest mee = erm.createMethodEntryRequest();\n         mee.addClassFilter(\"Target\");",
      "parent_sha": "cb094826ec3ea587879cc9bd7e66c63743182471"
    }
  },
  {
    "oid": "d4d5856fd4228639e3ef5c723df7b75a6262ea5e",
    "message": "7016881: JSR 292: JDI: sun.jvm.hotspot.utilities.AssertionFailure: index out of bounds\n\nReviewed-by: kvn, twisti",
    "date": "2011-09-03T05:00:49Z",
    "url": "https://github.com/openjdk/jdk/commit/d4d5856fd4228639e3ef5c723df7b75a6262ea5e",
    "details": {
      "sha": "2c27e3dbc7655db77b3acf05ea81f1d056581a4d",
      "filename": "hotspot/agent/src/share/classes/sun/jvm/hotspot/interpreter/BytecodeLoadConstant.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/openjdk/jdk/blob/d4d5856fd4228639e3ef5c723df7b75a6262ea5e/hotspot%2Fagent%2Fsrc%2Fshare%2Fclasses%2Fsun%2Fjvm%2Fhotspot%2Finterpreter%2FBytecodeLoadConstant.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/d4d5856fd4228639e3ef5c723df7b75a6262ea5e/hotspot%2Fagent%2Fsrc%2Fshare%2Fclasses%2Fsun%2Fjvm%2Fhotspot%2Finterpreter%2FBytecodeLoadConstant.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/hotspot%2Fagent%2Fsrc%2Fshare%2Fclasses%2Fsun%2Fjvm%2Fhotspot%2Finterpreter%2FBytecodeLoadConstant.java?ref=d4d5856fd4228639e3ef5c723df7b75a6262ea5e",
      "patch": "@@ -90,7 +90,7 @@ public boolean isValid() {\n            jcode == Bytecodes._ldc2_w;\n     if (! codeOk) return false;\n \n-    ConstantTag ctag = method().getConstants().getTagAt(rawIndex());\n+    ConstantTag ctag = method().getConstants().getTagAt(poolIndex());\n     if (jcode == Bytecodes._ldc2_w) {\n        // has to be double or long\n        return (ctag.isDouble() || ctag.isLong()) ? true: false;",
      "parent_sha": "f7d7a6071a571edb13defa2c1d595989f714e77f"
    }
  },
  {
    "oid": "a98d595162f42f45f716e10d1ea14eb88ab4fbea",
    "message": "7184951: [macosx] Exception at java.awt.datatransfer on headless mode (only in GUI session)\n\nReviewed-by: art, anthony",
    "date": "2013-07-23T09:09:44Z",
    "url": "https://github.com/openjdk/jdk/commit/a98d595162f42f45f716e10d1ea14eb88ab4fbea",
    "details": {
      "sha": "b4f0f97823a6e2b06ee8b98cd2bff3f969b6ed0d",
      "filename": "jdk/src/macosx/classes/sun/lwawt/macosx/CDataTransferer.java",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/openjdk/jdk/blob/a98d595162f42f45f716e10d1ea14eb88ab4fbea/jdk%2Fsrc%2Fmacosx%2Fclasses%2Fsun%2Flwawt%2Fmacosx%2FCDataTransferer.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/a98d595162f42f45f716e10d1ea14eb88ab4fbea/jdk%2Fsrc%2Fmacosx%2Fclasses%2Fsun%2Flwawt%2Fmacosx%2FCDataTransferer.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Fsrc%2Fmacosx%2Fclasses%2Fsun%2Flwawt%2Fmacosx%2FCDataTransferer.java?ref=a98d595162f42f45f716e10d1ea14eb88ab4fbea",
      "patch": "@@ -182,7 +182,11 @@ synchronized protected Long getFormatForNativeAsLong(String str) {\n         Long format = predefinedClipboardNameMap.get(str);\n \n         if (format == null) {\n-            format = new Long(registerFormatWithPasteboard(str));\n+            if (java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment().isHeadlessInstance()) {\n+                // Do not try to access native system for the unknown format\n+                return -1L;\n+            }\n+            format = registerFormatWithPasteboard(str);\n             predefinedClipboardNameMap.put(str, format);\n             predefinedClipboardFormatMap.put(format, str);\n         }",
      "parent_sha": "54198bc15ed22eb4c7a323547a504974f052ac9b"
    }
  },
  {
    "oid": "894ffb098c80bfeb4209038c017d01dbf53fac0f",
    "message": "8282713: Invalid copyright notice in new test added by JDK-8275715\n\nReviewed-by: dholmes",
    "date": "2022-03-07T01:33:41Z",
    "url": "https://github.com/openjdk/jdk/commit/894ffb098c80bfeb4209038c017d01dbf53fac0f",
    "details": {
      "sha": "27d54af6a0be703f5b7f323045aa458bfaba7635",
      "filename": "test/jdk/sun/java2d/DirectX/MultiPaintEventTest/MultiPaintEventTest.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/openjdk/jdk/blob/894ffb098c80bfeb4209038c017d01dbf53fac0f/test%2Fjdk%2Fsun%2Fjava2d%2FDirectX%2FMultiPaintEventTest%2FMultiPaintEventTest.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/894ffb098c80bfeb4209038c017d01dbf53fac0f/test%2Fjdk%2Fsun%2Fjava2d%2FDirectX%2FMultiPaintEventTest%2FMultiPaintEventTest.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fjdk%2Fsun%2Fjava2d%2FDirectX%2FMultiPaintEventTest%2FMultiPaintEventTest.java?ref=894ffb098c80bfeb4209038c017d01dbf53fac0f",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2021 Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it",
      "parent_sha": "415bf44191632cd8dbcc158c0ff0992c0b61c3ba"
    }
  },
  {
    "oid": "7dc7184c10fc8f7a02113056da979a9846a14cd4",
    "message": "8282309: Operation before upper case conversion\n\nReviewed-by: valeriep, wetmore",
    "date": "2022-02-23T18:32:29Z",
    "url": "https://github.com/openjdk/jdk/commit/7dc7184c10fc8f7a02113056da979a9846a14cd4",
    "details": {
      "sha": "fffd4fa6707c4c08367e0dc30288bbe33de1cb60",
      "filename": "src/java.base/share/classes/sun/security/util/TlsChannelBinding.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/openjdk/jdk/blob/7dc7184c10fc8f7a02113056da979a9846a14cd4/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Futil%2FTlsChannelBinding.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/7dc7184c10fc8f7a02113056da979a9846a14cd4/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Futil%2FTlsChannelBinding.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Futil%2FTlsChannelBinding.java?ref=7dc7184c10fc8f7a02113056da979a9846a14cd4",
      "patch": "@@ -102,7 +102,7 @@ public static TlsChannelBinding create(X509Certificate serverCertificate) throws\n             final byte[] prefix =\n                 TlsChannelBindingType.TLS_SERVER_END_POINT.getName().concat(\":\").getBytes();\n             String hashAlg = serverCertificate.getSigAlgName().\n-                    replace(\"SHA\", \"SHA-\").toUpperCase(Locale.ENGLISH);\n+                    toUpperCase(Locale.ENGLISH).replace(\"SHA\", \"SHA-\");\n             int ind = hashAlg.indexOf(\"WITH\");\n             if (ind > 0) {\n                 hashAlg = hashAlg.substring(0, ind);",
      "parent_sha": "a020b6ba8f38fe85fb26972a51e4c1068408b1c1"
    }
  },
  {
    "oid": "9a18190a4f8e31801d1442d97f247f074a3fd5c0",
    "message": "8280048: Missing comma in copyright header\n\nReviewed-by: prr",
    "date": "2022-01-15T03:20:34Z",
    "url": "https://github.com/openjdk/jdk/commit/9a18190a4f8e31801d1442d97f247f074a3fd5c0",
    "details": {
      "sha": "8d218d9f18919d8e3f812b63ff79261b85056f9a",
      "filename": "test/jdk/java/awt/Graphics2D/CopyAreaOOB.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/openjdk/jdk/blob/9a18190a4f8e31801d1442d97f247f074a3fd5c0/test%2Fjdk%2Fjava%2Fawt%2FGraphics2D%2FCopyAreaOOB.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/9a18190a4f8e31801d1442d97f247f074a3fd5c0/test%2Fjdk%2Fjava%2Fawt%2FGraphics2D%2FCopyAreaOOB.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fjdk%2Fjava%2Fawt%2FGraphics2D%2FCopyAreaOOB.java?ref=9a18190a4f8e31801d1442d97f247f074a3fd5c0",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2015, 2021 Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it",
      "parent_sha": "22b7295e75d3bc7ba2c2cd7b871bb2bb5bf290eb"
    }
  },
  {
    "oid": "e269dc03ad05e5734e08ca44d05e2eff4bdbc5fc",
    "message": "8293681: ResponseAPDU getData() method javadoc\n\nReviewed-by: valeriep",
    "date": "2022-11-14T17:37:42Z",
    "url": "https://github.com/openjdk/jdk/commit/e269dc03ad05e5734e08ca44d05e2eff4bdbc5fc",
    "details": {
      "sha": "4c2a3091cf4739dd57b8bcc0c3f3bfe4f3122f04",
      "filename": "src/java.smartcardio/share/classes/javax/smartcardio/ResponseAPDU.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/openjdk/jdk/blob/e269dc03ad05e5734e08ca44d05e2eff4bdbc5fc/src%2Fjava.smartcardio%2Fshare%2Fclasses%2Fjavax%2Fsmartcardio%2FResponseAPDU.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/e269dc03ad05e5734e08ca44d05e2eff4bdbc5fc/src%2Fjava.smartcardio%2Fshare%2Fclasses%2Fjavax%2Fsmartcardio%2FResponseAPDU.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/src%2Fjava.smartcardio%2Fshare%2Fclasses%2Fjavax%2Fsmartcardio%2FResponseAPDU.java?ref=e269dc03ad05e5734e08ca44d05e2eff4bdbc5fc",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -87,7 +87,7 @@ public int getNr() {\n     }\n \n     /**\n-     * Returns a copy of the data bytes in the response body. If this APDU as\n+     * Returns a copy of the data bytes in the response body. If this APDU has\n      * no body, this method returns a byte array with a length of zero.\n      *\n      * @return a copy of the data bytes in the response body or the empty",
      "parent_sha": "8c472e481676ed0ef475c4989477d5714880c59e"
    }
  },
  {
    "oid": "c23d1de2f8b58e8e81a46b4f7099eb88cbb28f2d",
    "message": "8238376: test/jdk/java/nio/channels/DatagramChannel/Loopback.java failing on multi-homed systems\n\nReviewed-by: dfuchs",
    "date": "2020-02-10T12:57:31Z",
    "url": "https://github.com/openjdk/jdk/commit/c23d1de2f8b58e8e81a46b4f7099eb88cbb28f2d",
    "details": {
      "sha": "a61a4d0b1772129c6d39d44d4fb35054cce080ae",
      "filename": "test/jdk/java/nio/channels/DatagramChannel/Loopback.java",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/openjdk/jdk/blob/c23d1de2f8b58e8e81a46b4f7099eb88cbb28f2d/test%2Fjdk%2Fjava%2Fnio%2Fchannels%2FDatagramChannel%2FLoopback.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/c23d1de2f8b58e8e81a46b4f7099eb88cbb28f2d/test%2Fjdk%2Fjava%2Fnio%2Fchannels%2FDatagramChannel%2FLoopback.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fjdk%2Fjava%2Fnio%2Fchannels%2FDatagramChannel%2FLoopback.java?ref=c23d1de2f8b58e8e81a46b4f7099eb88cbb28f2d",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2019, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2020, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -45,7 +45,9 @@\n import java.nio.channels.Selector;\n import java.util.List;\n import java.util.stream.Collectors;\n-import static java.net.StandardProtocolFamily.*;\n+import static java.net.StandardProtocolFamily.INET;\n+import static java.net.StandardProtocolFamily.INET6;\n+import static java.net.StandardSocketOptions.IP_MULTICAST_IF;\n import static java.net.StandardSocketOptions.IP_MULTICAST_LOOP;\n \n import jdk.test.lib.NetworkConfiguration;\n@@ -106,6 +108,9 @@ static void test(ProtocolFamily family, InetAddress group, NetworkInterface ni)\n             System.out.format(\"join %s @ %s%n\", group.getHostAddress(), ni.getName());\n             dc.join(group, ni);\n \n+            System.out.format(\"set outgoing multicast interface to %s%n\", ni.getName());\n+            dc.setOption(IP_MULTICAST_IF, ni);\n+\n             // -- IP_MULTICAST_LOOP enabled --\n \n             assertTrue(dc.getOption(IP_MULTICAST_LOOP), \"IP_MULTICAST_LOOP not enabled\");",
      "parent_sha": "8c0fab8fbef5211decc9c5d15c5e33436ba19b69"
    }
  },
  {
    "oid": "7b940bac400c653977aa989b6b270f0b9d70c65e",
    "message": "7152183: TEST_BUG: java/lang/ProcessBuilder/Basic.java failing intermittently [sol]\n\nReviewed-by: alanb, martin, dholmes",
    "date": "2012-10-11T17:24:38Z",
    "url": "https://github.com/openjdk/jdk/commit/7b940bac400c653977aa989b6b270f0b9d70c65e",
    "details": {
      "sha": "feff054c67b8666c9d8cd16c370e8b48d5d80516",
      "filename": "jdk/test/java/lang/ProcessBuilder/Basic.java",
      "status": "modified",
      "additions": 37,
      "deletions": 8,
      "changes": 45,
      "blob_url": "https://github.com/openjdk/jdk/blob/7b940bac400c653977aa989b6b270f0b9d70c65e/jdk%2Ftest%2Fjava%2Flang%2FProcessBuilder%2FBasic.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/7b940bac400c653977aa989b6b270f0b9d70c65e/jdk%2Ftest%2Fjava%2Flang%2FProcessBuilder%2FBasic.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Ftest%2Fjava%2Flang%2FProcessBuilder%2FBasic.java?ref=7b940bac400c653977aa989b6b270f0b9d70c65e",
      "patch": "@@ -36,6 +36,7 @@\n import static java.lang.ProcessBuilder.Redirect.*;\n \n import java.io.*;\n+import java.lang.reflect.Field;\n import java.util.*;\n import java.util.concurrent.CountDownLatch;\n import java.util.concurrent.TimeUnit;\n@@ -1938,24 +1939,52 @@ public void doIt(Map<String,String> environ) {\n                 final byte[] bytes = new byte[10];\n                 final Process p = new ProcessBuilder(childArgs).start();\n                 final CountDownLatch latch = new CountDownLatch(1);\n+                final InputStream s;\n+                switch (action & 0x1) {\n+                    case 0: s = p.getInputStream(); break;\n+                    case 1: s = p.getErrorStream(); break;\n+                    default: throw new Error();\n+                }\n                 final Thread thread = new Thread() {\n                     public void run() {\n                         try {\n-                            latch.countDown();\n                             int r;\n-                            switch (action) {\n-                            case 0: r = p.getInputStream().read(); break;\n-                            case 1: r = p.getErrorStream().read(); break;\n-                            case 2: r = p.getInputStream().read(bytes); break;\n-                            case 3: r = p.getErrorStream().read(bytes); break;\n-                            default: throw new Error();\n+                            latch.countDown();\n+                            switch (action & 0x2) {\n+                                case 0: r = s.read(); break;\n+                                case 2: r = s.read(bytes); break;\n+                                default: throw new Error();\n                             }\n                             equal(-1, r);\n                         } catch (Throwable t) { unexpected(t); }}};\n \n                 thread.start();\n                 latch.await();\n-                Thread.sleep(10);\n+\n+                String os = System.getProperty(\"os.name\");\n+                if (os.equalsIgnoreCase(\"Solaris\") ||\n+                    os.equalsIgnoreCase(\"SunOS\"))\n+                {\n+                    final Object deferred;\n+                    Class<?> c = s.getClass();\n+                    if (c.getName().equals(\n+                        \"java.lang.UNIXProcess$DeferredCloseInputStream\"))\n+                    {\n+                        deferred = s;\n+                    } else {\n+                        Field deferredField = p.getClass().\n+                            getDeclaredField(\"stdout_inner_stream\");\n+                        deferredField.setAccessible(true);\n+                        deferred = deferredField.get(p);\n+                    }\n+                    Field useCountField = deferred.getClass().\n+                        getDeclaredField(\"useCount\");\n+                    useCountField.setAccessible(true);\n+\n+                    while (useCountField.getInt(deferred) <= 0) {\n+                        Thread.yield();\n+                    }\n+                }\n                 p.destroy();\n                 thread.join();\n             }",
      "parent_sha": "6e283062c6bf4d5b348fc47a7ee28be4a3617bc9"
    }
  },
  {
    "oid": "826ebc04a26a6f04680bb29cd4f2f6d6becf1516",
    "message": "7035495: javax.swing.ImageIcon spec should  be clarified\n\nReviewed-by: alexsch",
    "date": "2013-10-14T10:13:48Z",
    "url": "https://github.com/openjdk/jdk/commit/826ebc04a26a6f04680bb29cd4f2f6d6becf1516",
    "details": {
      "sha": "b744d5aa5c58818467f0fdb5734f312f88e96460",
      "filename": "jdk/src/share/classes/javax/swing/ImageIcon.java",
      "status": "modified",
      "additions": 13,
      "deletions": 1,
      "changes": 14,
      "blob_url": "https://github.com/openjdk/jdk/blob/826ebc04a26a6f04680bb29cd4f2f6d6becf1516/jdk%2Fsrc%2Fshare%2Fclasses%2Fjavax%2Fswing%2FImageIcon.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/826ebc04a26a6f04680bb29cd4f2f6d6becf1516/jdk%2Fsrc%2Fshare%2Fclasses%2Fjavax%2Fswing%2FImageIcon.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Fsrc%2Fshare%2Fclasses%2Fjavax%2Fswing%2FImageIcon.java?ref=826ebc04a26a6f04680bb29cd4f2f6d6becf1516",
      "patch": "@@ -80,8 +80,20 @@ public class ImageIcon implements Icon, Serializable, Accessible {\n     ImageObserver imageObserver;\n     String description = null;\n \n-    // Fields for twisted backward compatibility only. DO NOT USE.\n+    /**\n+     * Do not use this shared component, which is used to track image loading.\n+     * It is left for backward compatibility only.\n+     * @deprecated since 1.8\n+     */\n+    @Deprecated\n     protected final static Component component;\n+\n+    /**\n+     * Do not use this shared media tracker, which is used to load images.\n+     * It is left for backward compatibility only.\n+     * @deprecated since 1.8\n+     */\n+    @Deprecated\n     protected final static MediaTracker tracker;\n \n     static {",
      "parent_sha": "0498dd16c0a92021c1b44262c8326e4529c8acb8"
    }
  },
  {
    "oid": "dfc6e4b49e391de33ba95419384ab3aa1cd43418",
    "message": "8222519: ButtonDemoScreenshotTest fails randomly with \"still state to be reached\"\n\nReviewed-by: serb",
    "date": "2019-04-30T11:15:31Z",
    "url": "https://github.com/openjdk/jdk/commit/dfc6e4b49e391de33ba95419384ab3aa1cd43418",
    "details": {
      "sha": "4c9d52995f18f5e82788f13c234279a0ec19e4fd",
      "filename": "test/jdk/sanity/client/SwingSet/src/ButtonDemoScreenshotTest.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/openjdk/jdk/blob/dfc6e4b49e391de33ba95419384ab3aa1cd43418/test%2Fjdk%2Fsanity%2Fclient%2FSwingSet%2Fsrc%2FButtonDemoScreenshotTest.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/dfc6e4b49e391de33ba95419384ab3aa1cd43418/test%2Fjdk%2Fsanity%2Fclient%2FSwingSet%2Fsrc%2FButtonDemoScreenshotTest.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fjdk%2Fsanity%2Fclient%2FSwingSet%2Fsrc%2FButtonDemoScreenshotTest.java?ref=dfc6e4b49e391de33ba95419384ab3aa1cd43418",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2011, 2018, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2019, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -54,7 +54,7 @@\n  *          java.logging\n  * @build org.jemmy2ext.JemmyExt\n  * @build com.sun.swingset3.demos.button.ButtonDemo\n- * @run testng/timeout=600 ButtonDemoScreenshotTest\n+ * @run testng/othervm/timeout=600 -Dswing.disablevistaanimation=true ButtonDemoScreenshotTest\n  */\n @Listeners(GuiTestListener.class)\n public class ButtonDemoScreenshotTest {",
      "parent_sha": "d43616c60a3d90258212da433ba8c2d58ade243d"
    }
  },
  {
    "oid": "c994d9bc0e6bfa2a730f71be8fcafd708537a240",
    "message": "8005638: Less secure Authentication schemes should work when more secure schemes are not available\n\nReviewed-by: alanb",
    "date": "2013-01-04T11:34:17Z",
    "url": "https://github.com/openjdk/jdk/commit/c994d9bc0e6bfa2a730f71be8fcafd708537a240",
    "details": {
      "sha": "41f55998973d9f0d693a01db2cde60c150ab2d92",
      "filename": "jdk/src/share/classes/sun/net/www/protocol/http/AuthenticationHeader.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/openjdk/jdk/blob/c994d9bc0e6bfa2a730f71be8fcafd708537a240/jdk%2Fsrc%2Fshare%2Fclasses%2Fsun%2Fnet%2Fwww%2Fprotocol%2Fhttp%2FAuthenticationHeader.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/c994d9bc0e6bfa2a730f71be8fcafd708537a240/jdk%2Fsrc%2Fshare%2Fclasses%2Fsun%2Fnet%2Fwww%2Fprotocol%2Fhttp%2FAuthenticationHeader.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Fsrc%2Fshare%2Fclasses%2Fsun%2Fnet%2Fwww%2Fprotocol%2Fhttp%2FAuthenticationHeader.java?ref=c994d9bc0e6bfa2a730f71be8fcafd708537a240",
      "patch": "@@ -206,7 +206,8 @@ private void parse () {\n \n             if(v == null) {\n                 if ((v=schemes.get (\"digest\")) == null) {\n-                    if (((v=schemes.get(\"ntlm\"))==null)) {\n+                    if (!NTLMAuthenticationProxy.supported\n+                        || ((v=schemes.get(\"ntlm\"))==null)) {\n                         v = schemes.get (\"basic\");\n                     }\n                 }",
      "parent_sha": "6061c09cab10db4ba809a8e7d140188c9c382ce7"
    }
  },
  {
    "oid": "1a5f4b8fa27e2f9b0866409ae06b720871b736f9",
    "message": "8193525: Intermittent failures of TestModulePackages.java\n\nReviewed-by: darcy",
    "date": "2017-12-14T21:16:33Z",
    "url": "https://github.com/openjdk/jdk/commit/1a5f4b8fa27e2f9b0866409ae06b720871b736f9",
    "details": {
      "sha": "4ae83788053ad15a86ce78ea8c20709c1a580d51",
      "filename": "test/langtools/jdk/javadoc/doclet/testModules/TestModulePackages.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/openjdk/jdk/blob/1a5f4b8fa27e2f9b0866409ae06b720871b736f9/test%2Flangtools%2Fjdk%2Fjavadoc%2Fdoclet%2FtestModules%2FTestModulePackages.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/1a5f4b8fa27e2f9b0866409ae06b720871b736f9/test%2Flangtools%2Fjdk%2Fjavadoc%2Fdoclet%2FtestModules%2FTestModulePackages.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Flangtools%2Fjdk%2Fjavadoc%2Fdoclet%2FtestModules%2FTestModulePackages.java?ref=1a5f4b8fa27e2f9b0866409ae06b720871b736f9",
      "patch": "@@ -26,7 +26,9 @@\n  * @bug 8178070\n  * @summary Test packages table in module summary pages\n  * @library /tools/lib ../lib\n- * @modules jdk.javadoc/jdk.javadoc.internal.tool\n+ * @modules jdk.compiler/com.sun.tools.javac.api\n+ *          jdk.compiler/com.sun.tools.javac.main\n+ *          jdk.javadoc/jdk.javadoc.internal.tool\n  * @build toolbox.ModuleBuilder toolbox.ToolBox JavadocTester\n  * @run main TestModulePackages\n  */",
      "parent_sha": "b9ff3a75b791e28dd8c03482d1d0d996cee1b7ea"
    }
  },
  {
    "oid": "ea95e1ef2e707251f28c13b56e49a7c30d51706e",
    "message": "8201290: keytool importcert fails with CertificateParsingException if unknown certificate algorithms should be imported\n\nReviewed-by: mullan, xuelei",
    "date": "2018-08-10T09:07:44Z",
    "url": "https://github.com/openjdk/jdk/commit/ea95e1ef2e707251f28c13b56e49a7c30d51706e",
    "details": {
      "sha": "1732e5ecc6ce4a108b4e2f23ca8aacd0a411c830",
      "filename": "src/java.base/share/classes/sun/security/tools/keytool/Main.java",
      "status": "modified",
      "additions": 45,
      "deletions": 11,
      "changes": 56,
      "blob_url": "https://github.com/openjdk/jdk/blob/ea95e1ef2e707251f28c13b56e49a7c30d51706e/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Ftools%2Fkeytool%2FMain.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/ea95e1ef2e707251f28c13b56e49a7c30d51706e/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Ftools%2Fkeytool%2FMain.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Ftools%2Fkeytool%2FMain.java?ref=ea95e1ef2e707251f28c13b56e49a7c30d51706e",
      "patch": "@@ -34,6 +34,7 @@\n import java.security.KeyStoreException;\n import java.security.MessageDigest;\n import java.security.Key;\n+import java.security.NoSuchProviderException;\n import java.security.PublicKey;\n import java.security.PrivateKey;\n import java.security.Signature;\n@@ -159,7 +160,6 @@ public final class Main {\n     private boolean srcprotectedPath = false;\n     private boolean cacerts = false;\n     private boolean nowarn = false;\n-    private CertificateFactory cf = null;\n     private KeyStore caks = null; // \"cacerts\" keystore\n     private char[] srcstorePass = null;\n     private String srcstoretype = null;\n@@ -240,7 +240,9 @@ enum Command {\n             PROVIDERNAME, ADDPROVIDER, PROVIDERCLASS,\n             PROVIDERPATH, V, PROTECTED),\n         PRINTCERT(\"Prints.the.content.of.a.certificate\",\n-            RFC, FILEIN, SSLSERVER, JARFILE, V),\n+            RFC, FILEIN, SSLSERVER, JARFILE,\n+            PROVIDERNAME, ADDPROVIDER, PROVIDERCLASS,\n+            PROVIDERPATH, V),\n         PRINTCERTREQ(\"Prints.the.content.of.a.certificate.request\",\n             FILEIN, V),\n         PRINTCRL(\"Prints.the.content.of.a.CRL.file\",\n@@ -1067,12 +1069,6 @@ && isKeyStoreRelated(command)) {\n             }\n         }\n \n-        // Create a certificate factory\n-        if (command == PRINTCERT || command == IMPORTCERT\n-                || command == IDENTITYDB || command == PRINTCRL) {\n-            cf = CertificateFactory.getInstance(\"X509\");\n-        }\n-\n         // -trustcacerts can only be specified on -importcert.\n         // Reset it so that warnings on CA cert will remain for\n         // -printcert, etc.\n@@ -2596,7 +2592,7 @@ private void printCertFromStream(InputStream in, PrintStream out)\n     {\n         Collection<? extends Certificate> c = null;\n         try {\n-            c = cf.generateCertificates(in);\n+            c = generateCertificates(in);\n         } catch (CertificateException ce) {\n             throw new Exception(rb.getString(\"Failed.to.parse.input\"), ce);\n         }\n@@ -2628,6 +2624,44 @@ private void printCertFromStream(InputStream in, PrintStream out)\n         }\n     }\n \n+    private Collection<? extends Certificate> generateCertificates(InputStream in)\n+            throws CertificateException, IOException {\n+        byte[] data = in.readAllBytes();\n+        try {\n+            return CertificateFactory.getInstance(\"X.509\")\n+                    .generateCertificates(new ByteArrayInputStream(data));\n+        } catch (CertificateException e) {\n+            if (providerName != null) {\n+                try {\n+                    return CertificateFactory.getInstance(\"X.509\", providerName)\n+                            .generateCertificates(new ByteArrayInputStream(data));\n+                } catch (Exception e2) {\n+                    e.addSuppressed(e2);\n+                }\n+            }\n+            throw e;\n+        }\n+    }\n+\n+    private Certificate generateCertificate(InputStream in)\n+            throws CertificateException, IOException {\n+        byte[] data = in.readAllBytes();\n+        try {\n+            return CertificateFactory.getInstance(\"X.509\")\n+                    .generateCertificate(new ByteArrayInputStream(data));\n+        } catch (CertificateException e) {\n+            if (providerName != null) {\n+                try {\n+                    return CertificateFactory.getInstance(\"X.509\", providerName)\n+                            .generateCertificate(new ByteArrayInputStream(data));\n+                } catch (Exception e2) {\n+                    e.addSuppressed(e2);\n+                }\n+            }\n+            throw e;\n+        }\n+    }\n+\n     private static String oneInMany(String label, int i, int num) {\n         if (num == 1) {\n             return label;\n@@ -2922,7 +2956,7 @@ private boolean installReply(String alias, InputStream in)\n         }\n \n         // Read the certificates in the reply\n-        Collection<? extends Certificate> c = cf.generateCertificates(in);\n+        Collection<? extends Certificate> c = generateCertificates(in);\n         if (c.isEmpty()) {\n             throw new Exception(rb.getString(\"Reply.has.no.certificates\"));\n         }\n@@ -2969,7 +3003,7 @@ private boolean addTrustedCert(String alias, InputStream in)\n         // Read the certificate\n         X509Certificate cert = null;\n         try {\n-            cert = (X509Certificate)cf.generateCertificate(in);\n+            cert = (X509Certificate)generateCertificate(in);\n         } catch (ClassCastException | CertificateException ce) {\n             throw new Exception(rb.getString(\"Input.not.an.X.509.certificate\"));\n         }",
      "parent_sha": "4e2b4621162beb625d727dc1dc51c8e639e864da"
    }
  },
  {
    "oid": "d8b770b0cd7a1a52d39fd0f4407bd14e9232358a",
    "message": "8024261: xrender: improve performance of small fillRect operations\n\nReviewed-by: prr, bae",
    "date": "2013-09-05T07:50:42Z",
    "url": "https://github.com/openjdk/jdk/commit/d8b770b0cd7a1a52d39fd0f4407bd14e9232358a",
    "details": {
      "sha": "39b8642bb9d0e88f243f1f0bc60f523ced27eb22",
      "filename": "jdk/src/solaris/classes/sun/java2d/xr/XRCompositeManager.java",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/openjdk/jdk/blob/d8b770b0cd7a1a52d39fd0f4407bd14e9232358a/jdk%2Fsrc%2Fsolaris%2Fclasses%2Fsun%2Fjava2d%2Fxr%2FXRCompositeManager.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/d8b770b0cd7a1a52d39fd0f4407bd14e9232358a/jdk%2Fsrc%2Fsolaris%2Fclasses%2Fsun%2Fjava2d%2Fxr%2FXRCompositeManager.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Fsrc%2Fsolaris%2Fclasses%2Fsun%2Fjava2d%2Fxr%2FXRCompositeManager.java?ref=d8b770b0cd7a1a52d39fd0f4407bd14e9232358a",
      "patch": "@@ -285,7 +285,12 @@ public void XRRenderRectangles(XRSurfaceData dst, GrowableRectArray rects) {\n         if (xorEnabled) {\n             con.GCRectangles(dst.getXid(), dst.getGC(), rects);\n         } else {\n-            con.renderRectangles(dst.getPicture(), compRule, solidColor, rects);\n+            if (rects.getSize() == 1) {\n+                con.renderRectangle(dst.getPicture(), compRule, solidColor,\n+                        rects.getX(0), rects.getY(0), rects.getWidth(0), rects.getHeight(0));\n+            } else {\n+                con.renderRectangles(dst.getPicture(), compRule, solidColor, rects);\n+            }\n         }\n     }\n ",
      "parent_sha": "5159f55769cb383f4297b3553acb5d6a6e5a25ff"
    }
  },
  {
    "oid": "a06585af49979e34525c02cfeb6af8d3e5f54ea6",
    "message": "8244673: Add periods to SourceVersion.isName javadoc\n\nReviewed-by: jjg",
    "date": "2020-05-09T20:42:16Z",
    "url": "https://github.com/openjdk/jdk/commit/a06585af49979e34525c02cfeb6af8d3e5f54ea6",
    "details": {
      "sha": "aa7f31e3c682c067437f5d6a6a685a029f895194",
      "filename": "src/java.compiler/share/classes/javax/lang/model/SourceVersion.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/openjdk/jdk/blob/a06585af49979e34525c02cfeb6af8d3e5f54ea6/src%2Fjava.compiler%2Fshare%2Fclasses%2Fjavax%2Flang%2Fmodel%2FSourceVersion.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/a06585af49979e34525c02cfeb6af8d3e5f54ea6/src%2Fjava.compiler%2Fshare%2Fclasses%2Fjavax%2Flang%2Fmodel%2FSourceVersion.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/src%2Fjava.compiler%2Fshare%2Fclasses%2Fjavax%2Flang%2Fmodel%2FSourceVersion.java?ref=a06585af49979e34525c02cfeb6af8d3e5f54ea6",
      "patch": "@@ -325,7 +325,7 @@ public static boolean isIdentifier(CharSequence name) {\n      * literal in any segment.\n      *\n      * This method returns {@code true} for <i>restricted\n-     * keywords</i> and <i>restricted identifiers</i>\n+     * keywords</i> and <i>restricted identifiers</i>.\n      *\n      * @param name the string to check\n      * @return {@code true} if this string is a\n@@ -351,7 +351,7 @@ public static boolean isName(CharSequence name) {\n      * literal in any segment.\n      *\n      * This method returns {@code true} for <i>restricted\n-     * keywords</i> and <i>restricted identifiers</i>\n+     * keywords</i> and <i>restricted identifiers</i>.\n      *\n      * @param name the string to check\n      * @param version the version to use",
      "parent_sha": "d8510ea0c123f44adc7b5dbcf76ed7276b3e1285"
    }
  },
  {
    "oid": "1e8667e33466dc07f99c85ca24aaeff258c13c16",
    "message": "8176403: [TESTBUG] gc/arguments/TestSmallInitialHeapWithLargePageAndNUMA is referencing no longer existing group\n\nChanged to use correct test library path\n\nReviewed-by: dholmes, dcubed",
    "date": "2017-03-08T23:48:41Z",
    "url": "https://github.com/openjdk/jdk/commit/1e8667e33466dc07f99c85ca24aaeff258c13c16",
    "details": {
      "sha": "009d129897e17d2ce37f7115020ff5db067e7f4c",
      "filename": "hotspot/test/gc/arguments/TestSmallInitialHeapWithLargePageAndNUMA.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/openjdk/jdk/blob/1e8667e33466dc07f99c85ca24aaeff258c13c16/hotspot%2Ftest%2Fgc%2Farguments%2FTestSmallInitialHeapWithLargePageAndNUMA.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/1e8667e33466dc07f99c85ca24aaeff258c13c16/hotspot%2Ftest%2Fgc%2Farguments%2FTestSmallInitialHeapWithLargePageAndNUMA.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/hotspot%2Ftest%2Fgc%2Farguments%2FTestSmallInitialHeapWithLargePageAndNUMA.java?ref=1e8667e33466dc07f99c85ca24aaeff258c13c16",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2016, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2017, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -27,16 +27,16 @@\n  * @requires os.family == \"linux\"\n  * @requires vm.gc.Parallel\n  * @summary Check large pages and NUMA are working together via the output message.\n- * @library /testlibrary /test/lib /test/lib/share/classes\n+ * @library /test/lib\n  * @modules java.base/jdk.internal.misc\n  * @modules java.management/sun.management\n  * @build TestSmallInitialHeapWithLargePageAndNUMA\n  * @run main ClassFileInstaller sun.hotspot.WhiteBox\n  * @run main/othervm -Xbootclasspath/a:. -XX:+UseHugeTLBFS -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI TestSmallInitialHeapWithLargePageAndNUMA\n */\n \n-import jdk.test.lib.ProcessTools;\n-import jdk.test.lib.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n import sun.hotspot.WhiteBox;\n \n public class TestSmallInitialHeapWithLargePageAndNUMA {",
      "parent_sha": "99a554c5ad5a5539e506ff9f8bbce19c1943a113"
    }
  },
  {
    "oid": "500a66b0d8a31f482597b26ca1e41aeb66738322",
    "message": "6955504: (str) String[Builder/Buffer].append(char[],int,int) throws OutOfMemoryError in b94\n\nLet arraycopy throw AIOOBE for invalid negative length\n\nReviewed-by: chegar, forax",
    "date": "2010-08-03T19:22:49Z",
    "url": "https://github.com/openjdk/jdk/commit/500a66b0d8a31f482597b26ca1e41aeb66738322",
    "details": {
      "sha": "46a14a0aa206b8814768681184cf9fc6fd4e18d1",
      "filename": "jdk/src/share/classes/java/lang/AbstractStringBuilder.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/openjdk/jdk/blob/500a66b0d8a31f482597b26ca1e41aeb66738322/jdk%2Fsrc%2Fshare%2Fclasses%2Fjava%2Flang%2FAbstractStringBuilder.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/500a66b0d8a31f482597b26ca1e41aeb66738322/jdk%2Fsrc%2Fshare%2Fclasses%2Fjava%2Flang%2FAbstractStringBuilder.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Fsrc%2Fshare%2Fclasses%2Fjava%2Flang%2FAbstractStringBuilder.java?ref=500a66b0d8a31f482597b26ca1e41aeb66738322",
      "patch": "@@ -470,7 +470,7 @@ public AbstractStringBuilder append(CharSequence s) {\n     public AbstractStringBuilder append(CharSequence s, int start, int end) {\n         if (s == null)\n             s = \"null\";\n-        if ((start < 0) || (end < 0) || (start > end) || (end > s.length()))\n+        if ((start < 0) || (start > end) || (end > s.length()))\n             throw new IndexOutOfBoundsException(\n                 \"start \" + start + \", end \" + end + \", s.length() \"\n                 + s.length());\n@@ -529,7 +529,8 @@ public AbstractStringBuilder append(char[] str) {\n      *         or {@code offset+len > str.length}\n      */\n     public AbstractStringBuilder append(char str[], int offset, int len) {\n-        ensureCapacityInternal(count + len);\n+        if (len > 0)                // let arraycopy report AIOOBE for len < 0\n+            ensureCapacityInternal(count + len);\n         System.arraycopy(str, offset, value, count, len);\n         count += len;\n         return this;",
      "parent_sha": "2bcf6f798fcd460a6df691bedc1d3abc8d403175"
    }
  },
  {
    "oid": "c6fff0de729cfe3a556e57f5ef4f0619fca3c9fa",
    "message": "8024876: [TEST_BUG] javax/xml/jaxp/parsers/8022548/XOMParserTest.java failed when testbase dir has read only permissions\n\nReviewed-by: chegar",
    "date": "2013-10-31T20:51:58Z",
    "url": "https://github.com/openjdk/jdk/commit/c6fff0de729cfe3a556e57f5ef4f0619fca3c9fa",
    "details": {
      "sha": "ba12d0ddc8638aeb2031dabb87a6793a7ae8cd70",
      "filename": "jdk/test/javax/xml/jaxp/parsers/8022548/XOMParserTest.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/openjdk/jdk/blob/c6fff0de729cfe3a556e57f5ef4f0619fca3c9fa/jdk%2Ftest%2Fjavax%2Fxml%2Fjaxp%2Fparsers%2F8022548%2FXOMParserTest.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/c6fff0de729cfe3a556e57f5ef4f0619fca3c9fa/jdk%2Ftest%2Fjavax%2Fxml%2Fjaxp%2Fparsers%2F8022548%2FXOMParserTest.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Ftest%2Fjavax%2Fxml%2Fjaxp%2Fparsers%2F8022548%2FXOMParserTest.java?ref=c6fff0de729cfe3a556e57f5ef4f0619fca3c9fa",
      "patch": "@@ -65,7 +65,7 @@ public final void testTransform() {\n \n             String inFilename = filePath + \"/JDK8022548.xml\";\n             String xslFilename = filePath + \"/JDK8022548.xsl\";\n-            String outFilename = filePath + \"/JDK8022548.out\";\n+            String outFilename = \"JDK8022548.out\";\n \n             StringWriter sw = new StringWriter();\n             // Create transformer factory",
      "parent_sha": "6c3fabc3420988b873c8ee34a6baac8116796fba"
    }
  },
  {
    "oid": "55b1ffa690c8cafe8d8974c5fee5e98efa2918c8",
    "message": "8078661: [SunPKCS11] Fails to cast into RSAPrivateCrtKey after RSA KeyPair Generation\n\nChanged to check all components instead of only the public exponent for RSA CRT key determination\n\nReviewed-by: vinnie",
    "date": "2016-08-19T23:24:23Z",
    "url": "https://github.com/openjdk/jdk/commit/55b1ffa690c8cafe8d8974c5fee5e98efa2918c8",
    "details": {
      "sha": "7800737fabe61c52016c9e1d58bb6bce2d20e1fc",
      "filename": "jdk/src/jdk.crypto.pkcs11/share/classes/sun/security/pkcs11/P11Key.java",
      "status": "modified",
      "additions": 34,
      "deletions": 27,
      "changes": 61,
      "blob_url": "https://github.com/openjdk/jdk/blob/55b1ffa690c8cafe8d8974c5fee5e98efa2918c8/jdk%2Fsrc%2Fjdk.crypto.pkcs11%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FP11Key.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/55b1ffa690c8cafe8d8974c5fee5e98efa2918c8/jdk%2Fsrc%2Fjdk.crypto.pkcs11%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FP11Key.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Fsrc%2Fjdk.crypto.pkcs11%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FP11Key.java?ref=55b1ffa690c8cafe8d8974c5fee5e98efa2918c8",
      "patch": "@@ -340,25 +340,33 @@ static PrivateKey privateKey(Session session, long keyID, String algorithm,\n         } else {\n             switch (algorithm) {\n                 case \"RSA\":\n-                    // XXX better test for RSA CRT keys (single getAttributes() call)\n-                    // we need to determine whether this is a CRT key\n-                    // see if we can obtain the public exponent\n-                    // this should also be readable for sensitive/extractable keys\n+                    // In order to decide if this is RSA CRT key, we first query\n+                    // and see if all extra CRT attributes are available.\n                     CK_ATTRIBUTE[] attrs2 = new CK_ATTRIBUTE[] {\n                         new CK_ATTRIBUTE(CKA_PUBLIC_EXPONENT),\n+                        new CK_ATTRIBUTE(CKA_PRIME_1),\n+                        new CK_ATTRIBUTE(CKA_PRIME_2),\n+                        new CK_ATTRIBUTE(CKA_EXPONENT_1),\n+                        new CK_ATTRIBUTE(CKA_EXPONENT_2),\n+                        new CK_ATTRIBUTE(CKA_COEFFICIENT),\n                     };\n                     boolean crtKey;\n                     try {\n                         session.token.p11.C_GetAttributeValue\n                             (session.id(), keyID, attrs2);\n-                        crtKey = (attrs2[0].pValue instanceof byte[]);\n+                        crtKey = ((attrs2[0].pValue instanceof byte[]) &&\n+                                  (attrs2[1].pValue instanceof byte[]) &&\n+                                  (attrs2[2].pValue instanceof byte[]) &&\n+                                  (attrs2[3].pValue instanceof byte[]) &&\n+                                  (attrs2[4].pValue instanceof byte[]) &&\n+                                  (attrs2[5].pValue instanceof byte[])) ;\n                     } catch (PKCS11Exception e) {\n                         // ignore, assume not available\n                         crtKey = false;\n                     }\n                     if (crtKey) {\n                         return new P11RSAPrivateKey\n-                                (session, keyID, algorithm, keyLength, attributes);\n+                                (session, keyID, algorithm, keyLength, attributes, attrs2);\n                     } else {\n                         return new P11RSAPrivateNonCRTKey\n                                 (session, keyID, algorithm, keyLength, attributes);\n@@ -475,8 +483,24 @@ private static final class P11RSAPrivateKey extends P11Key\n         private BigInteger n, e, d, p, q, pe, qe, coeff;\n         private byte[] encoded;\n         P11RSAPrivateKey(Session session, long keyID, String algorithm,\n-                int keyLength, CK_ATTRIBUTE[] attributes) {\n-            super(PRIVATE, session, keyID, algorithm, keyLength, attributes);\n+                int keyLength, CK_ATTRIBUTE[] attrs, CK_ATTRIBUTE[] crtAttrs) {\n+            super(PRIVATE, session, keyID, algorithm, keyLength, attrs);\n+\n+            for (CK_ATTRIBUTE a : crtAttrs) {\n+                if (a.type == CKA_PUBLIC_EXPONENT) {\n+                    e = a.getBigInteger();\n+                } else if (a.type == CKA_PRIME_1) {\n+                    p = a.getBigInteger();\n+                } else if (a.type == CKA_PRIME_2) {\n+                    q = a.getBigInteger();\n+                } else if (a.type == CKA_EXPONENT_1) {\n+                    pe = a.getBigInteger();\n+                } else if (a.type == CKA_EXPONENT_2) {\n+                    qe = a.getBigInteger();\n+                } else if (a.type == CKA_COEFFICIENT) {\n+                    coeff = a.getBigInteger();\n+                }\n+            }\n         }\n         private synchronized void fetchValues() {\n             token.ensureValid();\n@@ -485,24 +509,13 @@ private synchronized void fetchValues() {\n             }\n             CK_ATTRIBUTE[] attributes = new CK_ATTRIBUTE[] {\n                 new CK_ATTRIBUTE(CKA_MODULUS),\n-                new CK_ATTRIBUTE(CKA_PUBLIC_EXPONENT),\n                 new CK_ATTRIBUTE(CKA_PRIVATE_EXPONENT),\n-                new CK_ATTRIBUTE(CKA_PRIME_1),\n-                new CK_ATTRIBUTE(CKA_PRIME_2),\n-                new CK_ATTRIBUTE(CKA_EXPONENT_1),\n-                new CK_ATTRIBUTE(CKA_EXPONENT_2),\n-                new CK_ATTRIBUTE(CKA_COEFFICIENT),\n             };\n             fetchAttributes(attributes);\n             n = attributes[0].getBigInteger();\n-            e = attributes[1].getBigInteger();\n-            d = attributes[2].getBigInteger();\n-            p = attributes[3].getBigInteger();\n-            q = attributes[4].getBigInteger();\n-            pe = attributes[5].getBigInteger();\n-            qe = attributes[6].getBigInteger();\n-            coeff = attributes[7].getBigInteger();\n+            d = attributes[1].getBigInteger();\n         }\n+\n         public String getFormat() {\n             token.ensureValid();\n             return \"PKCS#8\";\n@@ -529,31 +542,25 @@ public BigInteger getModulus() {\n             return n;\n         }\n         public BigInteger getPublicExponent() {\n-            fetchValues();\n             return e;\n         }\n         public BigInteger getPrivateExponent() {\n             fetchValues();\n             return d;\n         }\n         public BigInteger getPrimeP() {\n-            fetchValues();\n             return p;\n         }\n         public BigInteger getPrimeQ() {\n-            fetchValues();\n             return q;\n         }\n         public BigInteger getPrimeExponentP() {\n-            fetchValues();\n             return pe;\n         }\n         public BigInteger getPrimeExponentQ() {\n-            fetchValues();\n             return qe;\n         }\n         public BigInteger getCrtCoefficient() {\n-            fetchValues();\n             return coeff;\n         }\n     }",
      "parent_sha": "17e5e3f34be1e18a9d378ff5a07878102a8aec31"
    }
  },
  {
    "oid": "33be168ccb7c6d033fce9cbe541f4c118811aa46",
    "message": "8027860: [TEST_BUG] File not closed in javax/xml/jaxp/parsers/8022548/XOMParserTest.java\n\nReviewed-by: alanb",
    "date": "2013-11-05T19:18:20Z",
    "url": "https://github.com/openjdk/jdk/commit/33be168ccb7c6d033fce9cbe541f4c118811aa46",
    "details": {
      "sha": "15915d04912c721f4546bb25853737951313f340",
      "filename": "jdk/test/javax/xml/jaxp/parsers/8022548/XOMParserTest.java",
      "status": "modified",
      "additions": 12,
      "deletions": 14,
      "changes": 26,
      "blob_url": "https://github.com/openjdk/jdk/blob/33be168ccb7c6d033fce9cbe541f4c118811aa46/jdk%2Ftest%2Fjavax%2Fxml%2Fjaxp%2Fparsers%2F8022548%2FXOMParserTest.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/33be168ccb7c6d033fce9cbe541f4c118811aa46/jdk%2Ftest%2Fjavax%2Fxml%2Fjaxp%2Fparsers%2F8022548%2FXOMParserTest.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Ftest%2Fjavax%2Fxml%2Fjaxp%2Fparsers%2F8022548%2FXOMParserTest.java?ref=33be168ccb7c6d033fce9cbe541f4c118811aa46",
      "patch": "@@ -22,7 +22,8 @@\n  */\n \n /**\n- * @test @bug 8022548\n+ * @test\n+ * @bug 8022548\n  * @summary test that a parser can use DTDConfiguration\n  * @run main XOMParserTest\n  */\n@@ -60,30 +61,27 @@ public static void main(String[] args) {\n     }\n \n     public final void testTransform() {\n+        String inFilename = filePath + \"/JDK8022548.xml\";\n+        String xslFilename = filePath + \"/JDK8022548.xsl\";\n+        String outFilename = \"JDK8022548.out\";\n \n-        try {\n+        try (InputStream xslInput = new FileInputStream(xslFilename);\n+             InputStream xmlInput = new FileInputStream(inFilename);\n+             OutputStream out = new FileOutputStream(outFilename);\n+        ) {\n \n-            String inFilename = filePath + \"/JDK8022548.xml\";\n-            String xslFilename = filePath + \"/JDK8022548.xsl\";\n-            String outFilename = \"JDK8022548.out\";\n \n             StringWriter sw = new StringWriter();\n             // Create transformer factory\n             TransformerFactory factory = TransformerFactory.newInstance();\n-            // set the translet name\n-//            factory.setAttribute(\"translet-name\", \"myTranslet\");\n-\n-            // set the destination directory\n-//            factory.setAttribute(\"destination-directory\", \"c:\\\\temp\");\n-//            factory.setAttribute(\"generate-translet\", Boolean.TRUE);\n \n             // Use the factory to create a template containing the xsl file\n-            Templates template = factory.newTemplates(new StreamSource(new FileInputStream(xslFilename)));\n+            Templates template = factory.newTemplates(new StreamSource(xslInput));\n             // Use the template to create a transformer\n             Transformer xformer = template.newTransformer();\n             // Prepare the input and output files\n-            Source source = new StreamSource(new FileInputStream(inFilename));\n-            Result result = new StreamResult(new FileOutputStream(outFilename));\n+            Source source = new StreamSource(xmlInput);\n+            Result result = new StreamResult(outFilename);\n             //Result result = new StreamResult(sw);\n             // Apply the xsl file to the source file and write the result to the output file\n             xformer.transform(source, result);",
      "parent_sha": "fe6f3e2439db3d75d114c98cf661e8ecb32824fc"
    }
  },
  {
    "oid": "6c4d705c91a70b5de50b17c2f05123859f107e95",
    "message": "8003851: MethodHandleNatives dependency on java.sql.DriverManager\n\nReviewed-by: alanb, dholmes",
    "date": "2012-11-28T18:49:15Z",
    "url": "https://github.com/openjdk/jdk/commit/6c4d705c91a70b5de50b17c2f05123859f107e95",
    "details": {
      "sha": "fcc928a327d874e86ce575da71745df1eebaf47b",
      "filename": "jdk/src/share/classes/java/lang/invoke/MethodHandleNatives.java",
      "status": "modified",
      "additions": 11,
      "deletions": 1,
      "changes": 12,
      "blob_url": "https://github.com/openjdk/jdk/blob/6c4d705c91a70b5de50b17c2f05123859f107e95/jdk%2Fsrc%2Fshare%2Fclasses%2Fjava%2Flang%2Finvoke%2FMethodHandleNatives.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/6c4d705c91a70b5de50b17c2f05123859f107e95/jdk%2Fsrc%2Fshare%2Fclasses%2Fjava%2Flang%2Finvoke%2FMethodHandleNatives.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Fsrc%2Fshare%2Fclasses%2Fjava%2Flang%2Finvoke%2FMethodHandleNatives.java?ref=6c4d705c91a70b5de50b17c2f05123859f107e95",
      "patch": "@@ -448,7 +448,7 @@ static boolean isCallerSensitive(MemberName mem) {\n         case \"getDriver\":\n         case \"getDrivers\":\n         case \"deregisterDriver\":\n-            return defc == java.sql.DriverManager.class;\n+            return defc == getClass(\"java.sql.DriverManager\");\n         case \"newUpdater\":\n             if (defc == java.util.concurrent.atomic.AtomicIntegerFieldUpdater.class)  return true;\n             if (defc == java.util.concurrent.atomic.AtomicLongFieldUpdater.class)  return true;\n@@ -482,4 +482,14 @@ static boolean isCallerSensitive(MemberName mem) {\n         }\n         return false;\n     }\n+\n+    // avoid static dependency to a class in other modules\n+    private static Class<?> getClass(String cn) {\n+        try {\n+            return Class.forName(cn, false,\n+                                 MethodHandleNatives.class.getClassLoader());\n+        } catch (ClassNotFoundException e) {\n+            throw new InternalError(e);\n+        }\n+    }\n }",
      "parent_sha": "996befafc2c66dba08c246abb91e1f51db0e1731"
    }
  },
  {
    "oid": "cf91e8dbcae747cde160347c4256dd5319aa8283",
    "message": "7067288: compiler regression test Test7052494 timeouts with client VM\n\nTest is modified to reduce number of iterations in test5() and test6().\n\nReviewed-by: never, iveresov",
    "date": "2011-07-14T22:39:40Z",
    "url": "https://github.com/openjdk/jdk/commit/cf91e8dbcae747cde160347c4256dd5319aa8283",
    "details": {
      "sha": "37f453d4aa1fbb6a5f9876b28d9d0315bd1f68dd",
      "filename": "hotspot/test/compiler/7052494/Test7052494.java",
      "status": "modified",
      "additions": 21,
      "deletions": 8,
      "changes": 29,
      "blob_url": "https://github.com/openjdk/jdk/blob/cf91e8dbcae747cde160347c4256dd5319aa8283/hotspot%2Ftest%2Fcompiler%2F7052494%2FTest7052494.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/cf91e8dbcae747cde160347c4256dd5319aa8283/hotspot%2Ftest%2Fcompiler%2F7052494%2FTest7052494.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/hotspot%2Ftest%2Fcompiler%2F7052494%2FTest7052494.java?ref=cf91e8dbcae747cde160347c4256dd5319aa8283",
      "patch": "@@ -70,18 +70,24 @@ static void test4(int i, int limit, int arr[]) {\n   }\n \n   // Empty loop rolls through MAXINT if i > 0\n+\n+  static final int limit5 = Integer.MIN_VALUE + 10000;\n+\n   static int test5(int i) {\n     int result = 0;\n-    while (i++ != 0) {\n+    while (i++ != limit5) {\n       result = i*2;\n     }\n     return result;\n   }\n \n   // Empty loop rolls through MININT if i < 0\n+\n+  static final int limit6 = Integer.MAX_VALUE - 10000;\n+\n   static int test6(int i) {\n     int result = 0;\n-    while (i-- != 0) {\n+    while (i-- != limit6) {\n       result = i*2;\n     }\n     return result;\n@@ -92,6 +98,7 @@ public static void main(String [] args) {\n     int[] arr = new int[8];\n     int[] ar3 = { 0, 0, 4, 6, 8, 10, 0, 0 };\n     int[] ar4 = { 0, 0, 0, -10, -8, -6, -4, 0 };\n+    System.out.println(\"test1\");\n     for (int i = 0; i < 11000; i++) {\n       int k = test1(1, 10);\n       if (k != 10) {\n@@ -100,6 +107,7 @@ public static void main(String [] args) {\n         break;\n       }\n     }\n+    System.out.println(\"test2\");\n     for (int i = 0; i < 11000; i++) {\n       int k = test2(-1, -10);\n       if (k != -10) {\n@@ -108,6 +116,7 @@ public static void main(String [] args) {\n         break;\n       }\n     }\n+    System.out.println(\"test3\");\n     for (int i = 0; i < 11000; i++) {\n       java.util.Arrays.fill(arr, 0);\n       test3(1, 10, arr);\n@@ -124,6 +133,7 @@ public static void main(String [] args) {\n         break;\n       }\n     }\n+    System.out.println(\"test4\");\n     for (int i = 0; i < 11000; i++) {\n       java.util.Arrays.fill(arr, 0);\n       test4(-1, -10, arr);\n@@ -140,22 +150,25 @@ public static void main(String [] args) {\n         break;\n       }\n     }\n+    System.out.println(\"test5\");\n     for (int i = 0; i < 11000; i++) {\n-      int k = test5(1);\n-      if (k != 0) {\n-        System.out.println(\"FAILED: \" + k + \" != 0\");\n+      int k = test5(limit6);\n+      if (k != limit5*2) {\n+        System.out.println(\"FAILED: \" + k + \" != \" + limit5*2);\n         failed = true;\n         break;\n       }\n     }\n+    System.out.println(\"test6\");\n     for (int i = 0; i < 11000; i++) {\n-      int k = test6(-1);\n-      if (k != 0) {\n-        System.out.println(\"FAILED: \" + k + \" != 0\");\n+      int k = test6(limit5);\n+      if (k != limit6*2) {\n+        System.out.println(\"FAILED: \" + k + \" != \" + limit6*2);\n         failed = true;\n         break;\n       }\n     }\n+    System.out.println(\"finish\");\n     if (failed)\n       System.exit(97);\n   }",
      "parent_sha": "fcc8abec1ef55112a42f83ba2c890ca79b20bda7"
    }
  },
  {
    "oid": "a9912bb300b708ee6c850b03e393e1a9ad71fe9a",
    "message": "8205540: test/hotspot/jtreg/vmTestbase/nsk/jdb/trace/trace001/trace001.java fails with Debuggee did not exit after 15 <cont> commands\n\nScreen usage/initialization of TerminatingThreadLocal with a non-null check on Thread.threadLocals field\n\nReviewed-by: dholmes, alanb",
    "date": "2018-06-24T08:41:51Z",
    "url": "https://github.com/openjdk/jdk/commit/a9912bb300b708ee6c850b03e393e1a9ad71fe9a",
    "details": {
      "sha": "aad0f4eae0718a1b49bc0ff0688fced05a87ab7b",
      "filename": "src/java.base/share/classes/java/lang/Thread.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/openjdk/jdk/blob/a9912bb300b708ee6c850b03e393e1a9ad71fe9a/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2FThread.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/a9912bb300b708ee6c850b03e393e1a9ad71fe9a/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2FThread.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2FThread.java?ref=a9912bb300b708ee6c850b03e393e1a9ad71fe9a",
      "patch": "@@ -840,7 +840,7 @@ public void run() {\n      * a chance to clean up before it actually exits.\n      */\n     private void exit() {\n-        if (TerminatingThreadLocal.REGISTRY.isPresent()) {\n+        if (threadLocals != null && TerminatingThreadLocal.REGISTRY.isPresent()) {\n             TerminatingThreadLocal.threadTerminated();\n         }\n         if (group != null) {",
      "parent_sha": "e9fc42d7915713fe6ade316887eabd144b4cb0f1"
    }
  },
  {
    "oid": "886c516b5b3cc2f2d7939956fc87b3fa16305583",
    "message": "6853617: race condition in java.awt.Font.getAttributes() (private method)\n\nReviewed-by: igor, jgodinez",
    "date": "2009-06-22T21:10:09Z",
    "url": "https://github.com/openjdk/jdk/commit/886c516b5b3cc2f2d7939956fc87b3fa16305583",
    "details": {
      "sha": "97773143415bc33abdcffc38b770d4e0fd18a94d",
      "filename": "jdk/src/share/classes/java/awt/Font.java",
      "status": "modified",
      "additions": 7,
      "deletions": 6,
      "changes": 13,
      "blob_url": "https://github.com/openjdk/jdk/blob/886c516b5b3cc2f2d7939956fc87b3fa16305583/jdk%2Fsrc%2Fshare%2Fclasses%2Fjava%2Fawt%2FFont.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/886c516b5b3cc2f2d7939956fc87b3fa16305583/jdk%2Fsrc%2Fshare%2Fclasses%2Fjava%2Fawt%2FFont.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Fsrc%2Fshare%2Fclasses%2Fjava%2Fawt%2FFont.java?ref=886c516b5b3cc2f2d7939956fc87b3fa16305583",
      "patch": "@@ -445,18 +445,19 @@ final FontPeer getPeer_NoClientCode() {\n      */\n     private AttributeValues getAttributeValues() {\n         if (values == null) {\n-            values = new AttributeValues();\n-            values.setFamily(name);\n-            values.setSize(pointSize); // expects the float value.\n+            AttributeValues valuesTmp = new AttributeValues();\n+            valuesTmp.setFamily(name);\n+            valuesTmp.setSize(pointSize); // expects the float value.\n \n             if ((style & BOLD) != 0) {\n-                values.setWeight(2); // WEIGHT_BOLD\n+                valuesTmp.setWeight(2); // WEIGHT_BOLD\n             }\n \n             if ((style & ITALIC) != 0) {\n-                values.setPosture(.2f); // POSTURE_OBLIQUE\n+                valuesTmp.setPosture(.2f); // POSTURE_OBLIQUE\n             }\n-            values.defineAll(PRIMARY_MASK); // for streaming compatibility\n+            valuesTmp.defineAll(PRIMARY_MASK); // for streaming compatibility\n+            values = valuesTmp;\n         }\n \n         return values;",
      "parent_sha": "cb5399d38041d316f661518fabca9e8b936d60a0"
    }
  },
  {
    "oid": "cd9fb366a56aac92e84b52efd7203927586b6ef1",
    "message": "8219378: Ensure ReflectionFactory.langReflectAccess is initialized correctly\n\nReviewed-by: rriggs, alanb, mchung",
    "date": "2019-02-19T16:13:05Z",
    "url": "https://github.com/openjdk/jdk/commit/cd9fb366a56aac92e84b52efd7203927586b6ef1",
    "details": {
      "sha": "4e1806d12e1e33d91739a6fa278cfc53b65c7cd3",
      "filename": "src/java.base/share/classes/jdk/internal/reflect/ReflectionFactory.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/openjdk/jdk/blob/cd9fb366a56aac92e84b52efd7203927586b6ef1/src%2Fjava.base%2Fshare%2Fclasses%2Fjdk%2Finternal%2Freflect%2FReflectionFactory.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/cd9fb366a56aac92e84b52efd7203927586b6ef1/src%2Fjava.base%2Fshare%2Fclasses%2Fjdk%2Finternal%2Freflect%2FReflectionFactory.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fjdk%2Finternal%2Freflect%2FReflectionFactory.java?ref=cd9fb366a56aac92e84b52efd7203927586b6ef1",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2001, 2018, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2019, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -175,7 +175,7 @@ public void setLangReflectAccess(LangReflectAccess access) {\n     public FieldAccessor newFieldAccessor(Field field, boolean override) {\n         checkInitted();\n \n-        Field root = langReflectAccess.getRoot(field);\n+        Field root = langReflectAccess().getRoot(field);\n         if (root != null) {\n             // FieldAccessor will use the root unless the modifiers have\n             // been overrridden\n@@ -197,7 +197,7 @@ public MethodAccessor newMethodAccessor(Method method) {\n         }\n \n         // use the root Method that will not cache caller class\n-        Method root = langReflectAccess.getRoot(method);\n+        Method root = langReflectAccess().getRoot(method);\n         if (root != null) {\n             method = root;\n         }\n@@ -233,7 +233,7 @@ public ConstructorAccessor newConstructorAccessor(Constructor<?> c) {\n         }\n \n         // use the root Constructor that will not cache caller class\n-        Constructor<?> root = langReflectAccess.getRoot(c);\n+        Constructor<?> root = langReflectAccess().getRoot(c);\n         if (root != null) {\n             c = root;\n         }",
      "parent_sha": "24ef3fd98f688a82a9e9e1dc2f32fec85f770a26"
    }
  },
  {
    "oid": "acbb57df0f75796467e38464dd8b46065c27f611",
    "message": "5109918: Wrong documentation for JSpinner.DateEditor constructor\n\nReviewed-by: alexsch, azvegint",
    "date": "2015-05-13T16:19:03Z",
    "url": "https://github.com/openjdk/jdk/commit/acbb57df0f75796467e38464dd8b46065c27f611",
    "details": {
      "sha": "42b1dc39b3b3db3edde04765261d1c451453dce7",
      "filename": "jdk/src/java.desktop/share/classes/javax/swing/JSpinner.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/openjdk/jdk/blob/acbb57df0f75796467e38464dd8b46065c27f611/jdk%2Fsrc%2Fjava.desktop%2Fshare%2Fclasses%2Fjavax%2Fswing%2FJSpinner.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/acbb57df0f75796467e38464dd8b46065c27f611/jdk%2Fsrc%2Fjava.desktop%2Fshare%2Fclasses%2Fjavax%2Fswing%2FJSpinner.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Fsrc%2Fjava.desktop%2Fshare%2Fclasses%2Fjavax%2Fswing%2FJSpinner.java?ref=acbb57df0f75796467e38464dd8b46065c27f611",
      "patch": "@@ -970,7 +970,7 @@ private static String getDefaultPattern(Locale loc) {\n          * and editing the value of a <code>SpinnerDateModel</code>\n          * with a <code>JFormattedTextField</code>.  <code>This</code>\n          * <code>DateEditor</code> becomes both a <code>ChangeListener</code>\n-         * on the spinners model and a <code>PropertyChangeListener</code>\n+         * on the spinner and a <code>PropertyChangeListener</code>\n          * on the new <code>JFormattedTextField</code>.\n          *\n          * @param spinner the spinner whose model <code>this</code> editor will monitor",
      "parent_sha": "619677d0dc21f949807c86bea80c69475ff7a914"
    }
  },
  {
    "oid": "0f0fda7abc68693d7d764b587bf5588b7cae74d1",
    "message": "8309542: compiler/jvmci/TestEnableJVMCIProduct.java fails with \"JVMCI compiler 'graal' specified by jvmci.Compiler not found\"\n\nReviewed-by: kvn, never",
    "date": "2023-06-06T16:12:37Z",
    "url": "https://github.com/openjdk/jdk/commit/0f0fda7abc68693d7d764b587bf5588b7cae74d1",
    "details": {
      "sha": "d299f4f6ac7784e8de010005349a995638264f63",
      "filename": "test/hotspot/jtreg/compiler/jvmci/TestEnableJVMCIProduct.java",
      "status": "modified",
      "additions": 7,
      "deletions": 4,
      "changes": 11,
      "blob_url": "https://github.com/openjdk/jdk/blob/0f0fda7abc68693d7d764b587bf5588b7cae74d1/test%2Fhotspot%2Fjtreg%2Fcompiler%2Fjvmci%2FTestEnableJVMCIProduct.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/0f0fda7abc68693d7d764b587bf5588b7cae74d1/test%2Fhotspot%2Fjtreg%2Fcompiler%2Fjvmci%2FTestEnableJVMCIProduct.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fhotspot%2Fjtreg%2Fcompiler%2Fjvmci%2FTestEnableJVMCIProduct.java?ref=0f0fda7abc68693d7d764b587bf5588b7cae74d1",
      "patch": "@@ -94,13 +94,16 @@ static void test(String explicitFlag, Expectation... expectations) throws Except\n             for (Expectation expectation : expectations) {\n                 output.stdoutShouldMatch(expectation.pattern);\n             }\n-            if (flag.equals(\"-XX:+UseGraalJIT\")) {\n-                output.shouldContain(\"jvmci.Compiler=graal\");\n-            }\n             if (output.getExitValue() != 0) {\n                 // This should only happen when JVMCI compilation is requested and the VM has no\n                 // JVMCI compiler (e.g. Graal is not included in the build)\n-                output.stdoutShouldMatch(\"No JVMCI compiler found\");\n+                if (flag.equals(\"-XX:+UseGraalJIT\")) {\n+                    output.shouldContain(\"JVMCI compiler 'graal' specified by jvmci.Compiler not found\");\n+                } else {\n+                    output.stdoutShouldMatch(\"No JVMCI compiler found\");\n+                }\n+            } else if (flag.equals(\"-XX:+UseGraalJIT\")) {\n+                output.shouldContain(\"jvmci.Compiler=graal\");\n             }\n         }\n     }",
      "parent_sha": "38cef2adbd956ac1e953ea7a7e7952fe093a9872"
    }
  },
  {
    "oid": "a7c0190230825e998bb534721ed3c22904efdbb4",
    "message": "8319238: JMX ThreadPoolAccTest.java is too verbose and should fail before timeout\n\nReviewed-by: sspitsyn",
    "date": "2023-11-07T10:15:35Z",
    "url": "https://github.com/openjdk/jdk/commit/a7c0190230825e998bb534721ed3c22904efdbb4",
    "details": {
      "sha": "8218a58b4109e98e5bed62b798a19e2f28958ed8",
      "filename": "test/jdk/javax/management/monitor/ThreadPoolAccTest.java",
      "status": "modified",
      "additions": 26,
      "deletions": 3,
      "changes": 29,
      "blob_url": "https://github.com/openjdk/jdk/blob/a7c0190230825e998bb534721ed3c22904efdbb4/test%2Fjdk%2Fjavax%2Fmanagement%2Fmonitor%2FThreadPoolAccTest.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/a7c0190230825e998bb534721ed3c22904efdbb4/test%2Fjdk%2Fjavax%2Fmanagement%2Fmonitor%2FThreadPoolAccTest.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fjdk%2Fjavax%2Fmanagement%2Fmonitor%2FThreadPoolAccTest.java?ref=a7c0190230825e998bb534721ed3c22904efdbb4",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2005, 2015, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -49,6 +49,8 @@\n \n public class ThreadPoolAccTest {\n \n+    public static final int MAX_TRIES = 30;\n+\n     // MBean class\n     public static class ObservedObject implements ObservedObjectMBean {\n         public volatile String principal;\n@@ -137,8 +139,18 @@ public Void run() {\n                 Subject.doAs(subject, action);\n             }\n \n-            while(!testPrincipals(monitored, monitorNames, monitor, principals));\n-\n+            sleep(500); // wait for getX method to be called, which calls setPrincipal\n+            boolean ok = false;\n+            for (int i = 0; i < MAX_TRIES; i++) {\n+                ok = testPrincipals(monitored, monitorNames, monitor, principals);\n+                if (ok) {\n+                    break;\n+                }\n+                sleep(1000);\n+            }\n+            if (!ok) {\n+                throw new Exception(\"Failed: testPrincipals fails repeatedly.\");\n+            }\n         } finally {\n             for (int i = 0; i < 6; i++)\n                 if (monitor[i] != null)\n@@ -151,6 +163,9 @@ private static boolean testPrincipals(ObservedObject[] monitored, ObjectName[] m\n         for (int i = 0; i < 6; i++) {\n             String principal =  monitored[i].principal;\n             String expected = principals[i / 3];\n+\n+            echo(\"testPrincipals: monitored: \" + monitored[i] + \" principal: \" + principal + \" expected: \" + expected);\n+\n             if (principal == null) {\n                 echo(\"Task not submitted \" + new Date() + \". RETRY\");\n                 return false;\n@@ -172,4 +187,12 @@ private static boolean testPrincipals(ObservedObject[] monitored, ObjectName[] m\n     private static void echo(String message) {\n         System.out.println(message);\n     }\n+\n+    public static void sleep(int ms) {\n+        try {\n+            Thread.currentThread().sleep(ms);\n+        } catch (InterruptedException ie) {\n+            // ignore\n+        }\n+   }\n }",
      "parent_sha": "9ac6ac86d32d2a9a52fade257adeedd103d6ff82"
    }
  },
  {
    "oid": "2ff8440c76bb090634ecf4e6faa523498fd1d9f3",
    "message": "8349344: Clarify documentation of Arena.ofConfined\n\nReviewed-by: jvernee, jpai, mcimadamore",
    "date": "2025-02-05T13:48:34Z",
    "url": "https://github.com/openjdk/jdk/commit/2ff8440c76bb090634ecf4e6faa523498fd1d9f3",
    "details": {
      "sha": "580de641143e136284a81ef60173764a1c5be499",
      "filename": "src/java.base/share/classes/java/lang/foreign/Arena.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/openjdk/jdk/blob/2ff8440c76bb090634ecf4e6faa523498fd1d9f3/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2Fforeign%2FArena.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/2ff8440c76bb090634ecf4e6faa523498fd1d9f3/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2Fforeign%2FArena.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2Fforeign%2FArena.java?ref=2ff8440c76bb090634ecf4e6faa523498fd1d9f3",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2022, 2024, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -246,9 +246,9 @@ class Holder {\n     }\n \n     /**\n-     * {@return a new confined arena} Segments allocated with the confined arena can be\n-     *          {@linkplain MemorySegment#isAccessibleBy(Thread) accessed} by the thread\n-     *          that created the arena, the arena's <em>owner thread</em>.\n+     * {@return a new confined arena} Segments allocated with the confined arena can\n+     *          only be {@linkplain MemorySegment#isAccessibleBy(Thread) accessed} by the\n+     *          thread that created the arena, the arena's <em>owner thread</em>.\n      * <p>\n      * Memory segments {@linkplain #allocate(long, long) allocated} by the returned arena\n      * are zero-initialized.",
      "parent_sha": "19399d271ef00f925232fbbe9087b5772f2fca01"
    }
  },
  {
    "oid": "ff97659a79401041136ddc3da3de3c13a8dd2f82",
    "message": "8071368: Use more concrete types for NamedFunction constants in the code\n\nReviewed-by: psandoz, vlivanov, mhaupt",
    "date": "2016-02-10T10:04:13Z",
    "url": "https://github.com/openjdk/jdk/commit/ff97659a79401041136ddc3da3de3c13a8dd2f82",
    "details": {
      "sha": "277cac28a4414998cd16768480b018e3a9374717",
      "filename": "jdk/src/java.base/share/classes/java/lang/invoke/Invokers.java",
      "status": "modified",
      "additions": 10,
      "deletions": 15,
      "changes": 25,
      "blob_url": "https://github.com/openjdk/jdk/blob/ff97659a79401041136ddc3da3de3c13a8dd2f82/jdk%2Fsrc%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2Finvoke%2FInvokers.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/ff97659a79401041136ddc3da3de3c13a8dd2f82/jdk%2Fsrc%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2Finvoke%2FInvokers.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Fsrc%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2Finvoke%2FInvokers.java?ref=ff97659a79401041136ddc3da3de3c13a8dd2f82",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2008, 2013, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2016, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -305,9 +305,7 @@ WrongMethodTypeException newWrongMethodTypeException(MethodType actual, MethodTy\n     /** Static definition of MethodHandle.invokeExact checking code. */\n     /*non-public*/ static\n     @ForceInline\n-    void checkExactType(Object mhObj, Object expectedObj) {\n-        MethodHandle mh = (MethodHandle) mhObj;\n-        MethodType expected = (MethodType) expectedObj;\n+    void checkExactType(MethodHandle mh, MethodType expected) {\n         MethodType actual = mh.type();\n         if (actual != expected)\n             throw newWrongMethodTypeException(expected, actual);\n@@ -319,9 +317,7 @@ void checkExactType(Object mhObj, Object expectedObj) {\n      */\n     /*non-public*/ static\n     @ForceInline\n-    Object checkGenericType(Object mhObj, Object expectedObj) {\n-        MethodHandle mh = (MethodHandle) mhObj;\n-        MethodType expected = (MethodType) expectedObj;\n+    MethodHandle checkGenericType(MethodHandle mh,  MethodType expected) {\n         return mh.asType(expected);\n         /* Maybe add more paths here.  Possible optimizations:\n          * for (R)MH.invoke(a*),\n@@ -390,14 +386,13 @@ private static LambdaForm callSiteForm(MethodType mtype, boolean skipCallSite) {\n     /** Static definition of MethodHandle.invokeGeneric checking code. */\n     /*non-public*/ static\n     @ForceInline\n-    Object getCallSiteTarget(Object site) {\n-        return ((CallSite)site).getTarget();\n+    MethodHandle getCallSiteTarget(CallSite site) {\n+        return site.getTarget();\n     }\n \n     /*non-public*/ static\n     @ForceInline\n-    void checkCustomized(Object o) {\n-        MethodHandle mh = (MethodHandle)o;\n+    void checkCustomized(MethodHandle mh) {\n         if (MethodHandleImpl.isCompileConstant(mh)) return;\n         if (mh.form.customized == null) {\n             maybeCustomize(mh);\n@@ -425,13 +420,13 @@ void maybeCustomize(MethodHandle mh) {\n         try {\n             NamedFunction nfs[] = {\n                 NF_checkExactType = new NamedFunction(Invokers.class\n-                        .getDeclaredMethod(\"checkExactType\", Object.class, Object.class)),\n+                        .getDeclaredMethod(\"checkExactType\", MethodHandle.class,  MethodType.class)),\n                 NF_checkGenericType = new NamedFunction(Invokers.class\n-                        .getDeclaredMethod(\"checkGenericType\", Object.class, Object.class)),\n+                        .getDeclaredMethod(\"checkGenericType\", MethodHandle.class,  MethodType.class)),\n                 NF_getCallSiteTarget = new NamedFunction(Invokers.class\n-                        .getDeclaredMethod(\"getCallSiteTarget\", Object.class)),\n+                        .getDeclaredMethod(\"getCallSiteTarget\", CallSite.class)),\n                 NF_checkCustomized = new NamedFunction(Invokers.class\n-                        .getDeclaredMethod(\"checkCustomized\", Object.class))\n+                        .getDeclaredMethod(\"checkCustomized\", MethodHandle.class))\n             };\n             // Each nf must be statically invocable or we get tied up in our bootstraps.\n             assert(InvokerBytecodeGenerator.isStaticallyInvocable(nfs));",
      "parent_sha": "3e45966cd3f8454720942f3a44754c2db52c137c"
    }
  },
  {
    "oid": "5ab0c516e142f180f6c2a3d7d288802c96b0a5c8",
    "message": "8184217: Redundant <p> tag before list\n\nReviewed-by: lancea",
    "date": "2017-07-24T20:54:57Z",
    "url": "https://github.com/openjdk/jdk/commit/5ab0c516e142f180f6c2a3d7d288802c96b0a5c8",
    "details": {
      "sha": "cbf31a0f069fb149292a86b6472ad4fc27bdce2e",
      "filename": "jdk/src/java.rmi/share/classes/module-info.java",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/openjdk/jdk/blob/5ab0c516e142f180f6c2a3d7d288802c96b0a5c8/jdk%2Fsrc%2Fjava.rmi%2Fshare%2Fclasses%2Fmodule-info.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/5ab0c516e142f180f6c2a3d7d288802c96b0a5c8/jdk%2Fsrc%2Fjava.rmi%2Fshare%2Fclasses%2Fmodule-info.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Fsrc%2Fjava.rmi%2Fshare%2Fclasses%2Fmodule-info.java?ref=5ab0c516e142f180f6c2a3d7d288802c96b0a5c8",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2014, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2017, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -31,7 +31,6 @@\n  * object registry, and the <em>{@index rmid rmid tool}</em> tool to start\n  * the activation system daemon.\n  *\n- * <p>\n  * <dl style=\"font-family:'DejaVu Sans', Arial, Helvetica, sans serif\">\n  * <dt class=\"simpleTagLabel\">Tool Guides:</dt>\n  * <dd> {@extLink rmiregistry_tool_reference rmiregistry},",
      "parent_sha": "657a610888bb0a1965c88dcad6ae313508c255f1"
    }
  },
  {
    "oid": "2ab87a9fb7168499f944a170c7ed155b1d8a6d1c",
    "message": "8150702: change in javadoc for parseObject for MessageFormat - JDK-8073211\n\nReviewed-by: okutsu, peytoia",
    "date": "2016-05-13T03:52:29Z",
    "url": "https://github.com/openjdk/jdk/commit/2ab87a9fb7168499f944a170c7ed155b1d8a6d1c",
    "details": {
      "sha": "134f84661afdb8d4673a3e02a1920d9635794bd3",
      "filename": "jdk/src/java.base/share/classes/java/text/MessageFormat.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/openjdk/jdk/blob/2ab87a9fb7168499f944a170c7ed155b1d8a6d1c/jdk%2Fsrc%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Ftext%2FMessageFormat.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/2ab87a9fb7168499f944a170c7ed155b1d8a6d1c/jdk%2Fsrc%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Ftext%2FMessageFormat.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Fsrc%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Ftext%2FMessageFormat.java?ref=2ab87a9fb7168499f944a170c7ed155b1d8a6d1c",
      "patch": "@@ -1068,7 +1068,7 @@ public Object[] parse(String source) throws ParseException {\n      *            index information as described above.\n      * @return An <code>Object</code> array parsed from the string. In case of\n      *         error, returns null.\n-     * @throws NullPointerException if {@code source} or {@code pos} is null.\n+     * @throws NullPointerException if {@code pos} is null.\n      */\n     public Object parseObject(String source, ParsePosition pos) {\n         return parse(source, pos);",
      "parent_sha": "21c525f41e99d8044a6ea83af845e7bb92707d3b"
    }
  },
  {
    "oid": "683eebde095fa16ec054cf5cb7a12972a1f4493c",
    "message": "8204576: (fs) java/nio/file/Files/CopyAndMove.java does not set isUnix = true on macOS\n\nReviewed-by: alanb",
    "date": "2018-06-08T14:58:19Z",
    "url": "https://github.com/openjdk/jdk/commit/683eebde095fa16ec054cf5cb7a12972a1f4493c",
    "details": {
      "sha": "1b7362fe93f2dd4c92b18f12e852df1dec8834ab",
      "filename": "test/jdk/java/nio/file/Files/CopyAndMove.java",
      "status": "modified",
      "additions": 15,
      "deletions": 24,
      "changes": 39,
      "blob_url": "https://github.com/openjdk/jdk/blob/683eebde095fa16ec054cf5cb7a12972a1f4493c/test%2Fjdk%2Fjava%2Fnio%2Ffile%2FFiles%2FCopyAndMove.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/683eebde095fa16ec054cf5cb7a12972a1f4493c/test%2Fjdk%2Fjava%2Fnio%2Ffile%2FFiles%2FCopyAndMove.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fjdk%2Fjava%2Fnio%2Ffile%2FFiles%2FCopyAndMove.java?ref=683eebde095fa16ec054cf5cb7a12972a1f4493c",
      "patch": "@@ -25,21 +25,22 @@\n  * @bug 4313887 6838333 6917021 7006126 6950237 8006645 8201407\n  * @summary Unit test for java.nio.file.Files copy and move methods (use -Dseed=X to set PRNG seed)\n  * @library .. /test/lib\n- * @build jdk.test.lib.RandomFactory\n+ * @build jdk.test.lib.Platform jdk.test.lib.RandomFactory\n  *        CopyAndMove PassThroughFileSystem\n  * @run main/othervm CopyAndMove\n  * @key randomness\n  */\n \n+import java.io.*;\n import java.nio.ByteBuffer;\n import java.nio.file.*;\n import static java.nio.file.Files.*;\n import static java.nio.file.StandardCopyOption.*;\n import static java.nio.file.LinkOption.*;\n import java.nio.file.attribute.*;\n-import java.io.*;\n import java.util.*;\n import java.util.concurrent.TimeUnit;\n+import jdk.test.lib.Platform;\n import jdk.test.lib.RandomFactory;\n \n public class CopyAndMove {\n@@ -169,8 +170,7 @@ static void moveAndVerify(Path source, Path target, CopyOption... options)\n         Map<String,ByteBuffer> namedAttributes = null;\n \n         // get file attributes of source file\n-        String os = System.getProperty(\"os.name\");\n-        if (os.startsWith(\"Windows\")) {\n+        if (Platform.isWindows()) {\n             dosAttributes = readAttributes(source, DosFileAttributes.class, NOFOLLOW_LINKS);\n             basicAttributes = dosAttributes;\n         } else {\n@@ -657,17 +657,14 @@ static void copyAndVerify(Path source, Path target, CopyOption... options)\n             if (source.getFileSystem().provider() == target.getFileSystem().provider()) {\n \n                 // check POSIX attributes are copied\n-                String os = System.getProperty(\"os.name\");\n-                if ((os.equals(\"SunOS\") || os.equals(\"Linux\")) &&\n-                    testPosixAttributes)\n-                {\n+                if (!Platform.isWindows() && testPosixAttributes) {\n                     checkPosixAttributes(\n                         readAttributes(source, PosixFileAttributes.class, linkOptions),\n                         readAttributes(target, PosixFileAttributes.class, linkOptions));\n                 }\n \n                 // check DOS attributes are copied\n-                if (os.startsWith(\"Windows\")) {\n+                if (Platform.isWindows()) {\n                     checkDosAttributes(\n                         readAttributes(source, DosFileAttributes.class, linkOptions),\n                         readAttributes(target, DosFileAttributes.class, linkOptions));\n@@ -925,9 +922,7 @@ static void testCopyFileToFile(Path dir1, Path dir2, boolean supportsLinks)\n         /**\n          * Test: Copy link to UNC (Windows only)\n          */\n-        if (supportsLinks &&\n-            System.getProperty(\"os.name\").startsWith(\"Windows\"))\n-        {\n+        if (supportsLinks && Platform.isWindows()) {\n             Path unc = Paths.get(\"\\\\\\\\rialto\\\\share\\\\file\");\n             link = dir1.resolve(\"link\");\n             createSymbolicLink(link, unc);\n@@ -1160,12 +1155,14 @@ static Path createSourceDirectory(Path dir) throws IOException {\n \n     // \"randomize\" the file attributes of the given file.\n     static void randomizeAttributes(Path file) throws IOException {\n-        String os = System.getProperty(\"os.name\");\n-        boolean isWindows = os.startsWith(\"Windows\");\n-        boolean isUnix = os.equals(\"SunOS\") || os.equals(\"Linux\");\n         boolean isDirectory = isDirectory(file, NOFOLLOW_LINKS);\n \n-        if (isUnix) {\n+        if (Platform.isWindows()) {\n+            DosFileAttributeView view =\n+                getFileAttributeView(file, DosFileAttributeView.class, NOFOLLOW_LINKS);\n+            // only set or unset the hidden attribute\n+            view.setHidden(heads());\n+        } else {\n             Set<PosixFilePermission> perms =\n                 getPosixFilePermissions(file, NOFOLLOW_LINKS);\n             PosixFilePermission[] toChange = {\n@@ -1186,18 +1183,12 @@ static void randomizeAttributes(Path file) throws IOException {\n             setPosixFilePermissions(file, perms);\n         }\n \n-        if (isWindows) {\n-            DosFileAttributeView view =\n-                getFileAttributeView(file, DosFileAttributeView.class, NOFOLLOW_LINKS);\n-            // only set or unset the hidden attribute\n-            view.setHidden(heads());\n-        }\n-\n         boolean addUserDefinedFileAttributes = heads() &&\n             getFileStore(file).supportsFileAttributeView(\"xattr\");\n \n         // remove this when copying a direcory copies its named streams\n-        if (isWindows && isDirectory) addUserDefinedFileAttributes = false;\n+        if (Platform.isWindows() && isDirectory)\n+            addUserDefinedFileAttributes = false;\n \n         if (addUserDefinedFileAttributes) {\n             UserDefinedFileAttributeView view =",
      "parent_sha": "8c75c07f8cb7a8231087682d87b7f1ded26cc66c"
    }
  },
  {
    "oid": "c125edce8827d2de229463659937f93d081cbfe3",
    "message": "7094995: Trailing daemon thread causes continuous GC in agentvm mode\n\nShutdown GcInducingThread once test (successfully) finishes\n\nReviewed-by: alanb, chegar, dholmes, darcy",
    "date": "2011-11-18T09:03:43Z",
    "url": "https://github.com/openjdk/jdk/commit/c125edce8827d2de229463659937f93d081cbfe3",
    "details": {
      "sha": "d1be7dc9cc697e5744cedacb8a8fc61cead0dd33",
      "filename": "jdk/test/java/util/zip/ZipFile/ClearStaleZipFileInputStreams.java",
      "status": "modified",
      "additions": 42,
      "deletions": 35,
      "changes": 77,
      "blob_url": "https://github.com/openjdk/jdk/blob/c125edce8827d2de229463659937f93d081cbfe3/jdk%2Ftest%2Fjava%2Futil%2Fzip%2FZipFile%2FClearStaleZipFileInputStreams.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/c125edce8827d2de229463659937f93d081cbfe3/jdk%2Ftest%2Fjava%2Futil%2Fzip%2FZipFile%2FClearStaleZipFileInputStreams.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Ftest%2Fjava%2Futil%2Fzip%2FZipFile%2FClearStaleZipFileInputStreams.java?ref=c125edce8827d2de229463659937f93d081cbfe3",
      "patch": "@@ -63,11 +63,9 @@ private static File createTestFile(int compression) throws Exception {\n             File.createTempFile(\"test-data\" + compression, \".zip\");\n         tempZipFile.deleteOnExit();\n \n-        ZipOutputStream zos =\n-            new ZipOutputStream(new FileOutputStream(tempZipFile));\n-        zos.setLevel(compression);\n-\n-        try {\n+        try (FileOutputStream fos = new FileOutputStream(tempZipFile);\n+                ZipOutputStream zos = new ZipOutputStream(fos)) {\n+            zos.setLevel(compression);\n             for (int i = 0; i < ZIP_ENTRY_NUM; i++) {\n                 String text = \"Entry\" + i;\n                 ZipEntry entry = new ZipEntry(text);\n@@ -78,33 +76,47 @@ private static File createTestFile(int compression) throws Exception {\n                     zos.closeEntry();\n                 }\n             }\n-        } finally {\n-            zos.close();\n         }\n \n         return tempZipFile;\n     }\n \n-    private static void startGcInducingThread(final int sleepMillis) {\n-        final Thread gcInducingThread = new Thread() {\n-            public void run() {\n-                while (true) {\n-                    System.gc();\n-                    try {\n-                        Thread.sleep(sleepMillis);\n-                    } catch (InterruptedException e) { }\n+    private static final class GcInducingThread extends Thread {\n+        private final int sleepMillis;\n+        private boolean keepRunning = true;\n+\n+        public GcInducingThread(final int sleepMillis) {\n+            this.sleepMillis = sleepMillis;\n+        }\n+\n+        public synchronized void run() {\n+            while (keepRunning) {\n+                System.gc();\n+                try {\n+                    wait(sleepMillis);\n+                } catch (InterruptedException e) {\n+                    System.out.println(\"GCing thread unexpectedly interrupted\");\n+                    return;\n                 }\n             }\n-        };\n+        }\n \n-        gcInducingThread.setDaemon(true);\n-        gcInducingThread.start();\n+        public synchronized void shutDown() {\n+            keepRunning = false;\n+            notifyAll();\n+        }\n     }\n \n     public static void main(String[] args) throws Exception {\n-        startGcInducingThread(500);\n-        runTest(ZipOutputStream.DEFLATED);\n-        runTest(ZipOutputStream.STORED);\n+        GcInducingThread gcThread = new GcInducingThread(500);\n+        gcThread.start();\n+        try {\n+            runTest(ZipOutputStream.DEFLATED);\n+            runTest(ZipOutputStream.STORED);\n+        } finally {\n+            gcThread.shutDown();\n+            gcThread.join();\n+        }\n     }\n \n     private static void runTest(int compression) throws Exception {\n@@ -113,21 +125,16 @@ private static void runTest(int compression) throws Exception {\n         System.out.println(\"Testing with a zip file with compression level = \"\n                 + compression);\n         File f = createTestFile(compression);\n-        try {\n-            ZipFile zf = new ZipFile(f);\n-            try {\n-                Set<Object> refSet = createTransientInputStreams(zf, rq);\n-\n-                System.out.println(\"Waiting for 'stale' input streams from ZipFile to be GC'd ...\");\n-                System.out.println(\"(The test will hang on failure)\");\n-                while (false == refSet.isEmpty()) {\n-                    refSet.remove(rq.remove());\n-                }\n-                System.out.println(\"Test PASSED.\");\n-                System.out.println();\n-            } finally {\n-                zf.close();\n+        try (ZipFile zf = new ZipFile(f)) {\n+            Set<Object> refSet = createTransientInputStreams(zf, rq);\n+\n+            System.out.println(\"Waiting for 'stale' input streams from ZipFile to be GC'd ...\");\n+            System.out.println(\"(The test will hang on failure)\");\n+            while (false == refSet.isEmpty()) {\n+                refSet.remove(rq.remove());\n             }\n+            System.out.println(\"Test PASSED.\");\n+            System.out.println();\n         } finally {\n             f.delete();\n         }",
      "parent_sha": "dfda4bf46acb119a858827121a0111adcd23151a"
    }
  },
  {
    "oid": "51c07ae53a07b7d715912d077d8b6273111a40d4",
    "message": "6604109: javax.print.PrintServiceLookup.lookupPrintServices fails SOMETIMES for Cups\n\nReviewed-by: bae, prr",
    "date": "2011-10-24T16:58:47Z",
    "url": "https://github.com/openjdk/jdk/commit/51c07ae53a07b7d715912d077d8b6273111a40d4",
    "details": {
      "sha": "e60765900b50f30c9fd16161b7f98784c359a581",
      "filename": "jdk/src/solaris/classes/sun/print/UnixPrintServiceLookup.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/openjdk/jdk/blob/51c07ae53a07b7d715912d077d8b6273111a40d4/jdk%2Fsrc%2Fsolaris%2Fclasses%2Fsun%2Fprint%2FUnixPrintServiceLookup.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/51c07ae53a07b7d715912d077d8b6273111a40d4/jdk%2Fsrc%2Fsolaris%2Fclasses%2Fsun%2Fprint%2FUnixPrintServiceLookup.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Fsrc%2Fsolaris%2Fclasses%2Fsun%2Fprint%2FUnixPrintServiceLookup.java?ref=51c07ae53a07b7d715912d077d8b6273111a40d4",
      "patch": "@@ -189,7 +189,7 @@ public synchronized PrintService[] getPrintServices() {\n         if (printServices == null) {\n             return new PrintService[0];\n         } else {\n-            return printServices;\n+            return (PrintService[])printServices.clone();\n         }\n     }\n ",
      "parent_sha": "8863ec439e47eea77a616aef9adfa9ede1c0c825"
    }
  },
  {
    "oid": "9714f829c98c7e3fab64a113c5e2ba8cefeb6395",
    "message": "8189993: Improve document portability\n\nReviewed-by: rriggs, lancea, dfuchs, skoivu",
    "date": "2018-01-18T06:24:46Z",
    "url": "https://github.com/openjdk/jdk/commit/9714f829c98c7e3fab64a113c5e2ba8cefeb6395",
    "details": {
      "sha": "27086ee5bedb5f9b58e1b05ecaf01b2802ef226f",
      "filename": "src/java.xml/share/classes/com/sun/org/apache/xerces/internal/dom/NamedNodeMapImpl.java",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/openjdk/jdk/blob/9714f829c98c7e3fab64a113c5e2ba8cefeb6395/src%2Fjava.xml%2Fshare%2Fclasses%2Fcom%2Fsun%2Forg%2Fapache%2Fxerces%2Finternal%2Fdom%2FNamedNodeMapImpl.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/9714f829c98c7e3fab64a113c5e2ba8cefeb6395/src%2Fjava.xml%2Fshare%2Fclasses%2Fcom%2Fsun%2Forg%2Fapache%2Fxerces%2Finternal%2Fdom%2FNamedNodeMapImpl.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/src%2Fjava.xml%2Fshare%2Fclasses%2Fcom%2Fsun%2Forg%2Fapache%2Fxerces%2Finternal%2Fdom%2FNamedNodeMapImpl.java?ref=9714f829c98c7e3fab64a113c5e2ba8cefeb6395",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2017, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2018, Oracle and/or its affiliates. All rights reserved.\n  */\n /*\n  * Licensed to the Apache Software Foundation (ASF) under one or more\n@@ -56,7 +56,7 @@\n  * @xerces.internal\n  *\n  * @since  PR-DOM-Level-1-19980818.\n- * @LastModified: Oct 2017\n+ * @LastModified: Jan 2018\n  */\n public class NamedNodeMapImpl\n     implements NamedNodeMap, Serializable {\n@@ -595,12 +595,14 @@ public void removeAll (){\n         }\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     private void readObject(ObjectInputStream in)\n         throws IOException, ClassNotFoundException {\n         in.defaultReadObject();\n         if (nodes != null) {\n             // nodes are written as a Vector for compatibility.\n-            nodes = new ArrayList<>(nodes);\n+            // cast to Vector is required\n+            nodes = new ArrayList<>((Vector<Node>)nodes);\n         }\n     }\n ",
      "parent_sha": "ad392f53eef2a68e8c1026c5a8a565652d517ed9"
    }
  },
  {
    "oid": "b4b2fecb42d9f14d73e8d79a9e59dee4d697f9cf",
    "message": "8311081: KeytoolReaderP12Test.java fail on localized Windows platform\n\nReviewed-by: lancea, jpai, weijun",
    "date": "2023-08-28T20:36:32Z",
    "url": "https://github.com/openjdk/jdk/commit/b4b2fecb42d9f14d73e8d79a9e59dee4d697f9cf",
    "details": {
      "sha": "22131390d060a86efeea1014ef54fca435228bb9",
      "filename": "test/jdk/java/security/KeyStore/PKCS12/Utils.java",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/openjdk/jdk/blob/b4b2fecb42d9f14d73e8d79a9e59dee4d697f9cf/test%2Fjdk%2Fjava%2Fsecurity%2FKeyStore%2FPKCS12%2FUtils.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/b4b2fecb42d9f14d73e8d79a9e59dee4d697f9cf/test%2Fjdk%2Fjava%2Fsecurity%2FKeyStore%2FPKCS12%2FUtils.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fjdk%2Fjava%2Fsecurity%2FKeyStore%2FPKCS12%2FUtils.java?ref=b4b2fecb42d9f14d73e8d79a9e59dee4d697f9cf",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2012, 2018, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -59,11 +59,14 @@ public static OutputAnalyzer executeKeytoolCommand(String[] command) {\n \n     public static OutputAnalyzer executeKeytoolCommand(String[] command,\n             int exitCode) {\n-        String[] keytoolCmd = new String[command.length + 1];\n+        String[] keytoolCmd = new String[command.length + 3];\n         OutputAnalyzer output = null;\n         try {\n             keytoolCmd[0] = JDKToolFinder.getJDKTool(KEYTOOL);\n-            System.arraycopy(command, 0, keytoolCmd, 1, command.length);\n+            // Ensure the keytool process is always ran under English locale\n+            keytoolCmd[1] = \"-J-Duser.language=en\";\n+            keytoolCmd[2] = \"-J-Duser.country=US\";\n+            System.arraycopy(command, 0, keytoolCmd, 3, command.length);\n             output = ProcessTools.executeCommand(keytoolCmd);\n             output.shouldHaveExitValue(exitCode);\n             out.println(\"Executed keytool command sucessfully:\"",
      "parent_sha": "31e26814db5d5ad5018fb6ed2e8160e8a01938ab"
    }
  },
  {
    "oid": "9a97b54211dff8d67f4e8119b1ca8679ab389e9e",
    "message": "8222144: BuiltinClassLoader should create the CodeSource for jrt URLs lazily\n\nReviewed-by: alanb",
    "date": "2019-04-09T09:40:01Z",
    "url": "https://github.com/openjdk/jdk/commit/9a97b54211dff8d67f4e8119b1ca8679ab389e9e",
    "details": {
      "sha": "76f60d06447b058176b98a9e04b0f4921486ebaf",
      "filename": "src/java.base/share/classes/jdk/internal/loader/BuiltinClassLoader.java",
      "status": "modified",
      "additions": 27,
      "deletions": 6,
      "changes": 33,
      "blob_url": "https://github.com/openjdk/jdk/blob/9a97b54211dff8d67f4e8119b1ca8679ab389e9e/src%2Fjava.base%2Fshare%2Fclasses%2Fjdk%2Finternal%2Floader%2FBuiltinClassLoader.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/9a97b54211dff8d67f4e8119b1ca8679ab389e9e/src%2Fjava.base%2Fshare%2Fclasses%2Fjdk%2Finternal%2Floader%2FBuiltinClassLoader.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fjdk%2Finternal%2Floader%2FBuiltinClassLoader.java?ref=9a97b54211dff8d67f4e8119b1ca8679ab389e9e",
      "patch": "@@ -64,6 +64,7 @@\n import jdk.internal.misc.VM;\n import jdk.internal.module.ModulePatcher.PatchedModuleReader;\n import jdk.internal.module.Resources;\n+import jdk.internal.vm.annotation.Stable;\n \n \n /**\n@@ -117,14 +118,18 @@ public class BuiltinClassLoader\n     private static class LoadedModule {\n         private final BuiltinClassLoader loader;\n         private final ModuleReference mref;\n-        private final URL codeSourceURL;          // may be null\n+        private final URI uri;                      // may be null\n+        private @Stable URL codeSourceURL;          // may be null\n \n         LoadedModule(BuiltinClassLoader loader, ModuleReference mref) {\n             URL url = null;\n-            if (mref.location().isPresent()) {\n-                try {\n-                    url = mref.location().get().toURL();\n-                } catch (MalformedURLException | IllegalArgumentException e) { }\n+            this.uri = mref.location().orElse(null);\n+\n+            // for non-jrt schemes we need to resolve the codeSourceURL\n+            // eagerly during bootstrap since the handler might be\n+            // overridden\n+            if (uri != null && !\"jrt\".equals(uri.getScheme())) {\n+                url = createURL(uri);\n             }\n             this.loader = loader;\n             this.mref = mref;\n@@ -134,7 +139,23 @@ private static class LoadedModule {\n         BuiltinClassLoader loader() { return loader; }\n         ModuleReference mref() { return mref; }\n         String name() { return mref.descriptor().name(); }\n-        URL codeSourceURL() { return codeSourceURL; }\n+\n+        URL codeSourceURL() {\n+            URL url = codeSourceURL;\n+            if (url == null && uri != null) {\n+                codeSourceURL = url = createURL(uri);\n+            }\n+            return url;\n+        }\n+\n+        private URL createURL(URI uri) {\n+            URL url = null;\n+            try {\n+                url = uri.toURL();\n+            } catch (MalformedURLException | IllegalArgumentException e) {\n+            }\n+            return url;\n+        }\n     }\n \n ",
      "parent_sha": "8f556345e1265d2d6084b7ce973b112c591eb55a"
    }
  },
  {
    "oid": "b3e118a15e773fe1196b37cbd9dfe068213591b0",
    "message": "8179930: jdk.test.lib.artifacts.ArtifactResolver::resolve should return Map instead of HashMap\n\nReviewed-by: mseledtsov, gtriantafill, vlivanov",
    "date": "2017-05-11T23:35:01Z",
    "url": "https://github.com/openjdk/jdk/commit/b3e118a15e773fe1196b37cbd9dfe068213591b0",
    "details": {
      "sha": "8595b145665d31764897d89aee11c85ee40e4caa",
      "filename": "test/lib/jdk/test/lib/artifacts/ArtifactResolver.java",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/openjdk/jdk/blob/b3e118a15e773fe1196b37cbd9dfe068213591b0/test%2Flib%2Fjdk%2Ftest%2Flib%2Fartifacts%2FArtifactResolver.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/b3e118a15e773fe1196b37cbd9dfe068213591b0/test%2Flib%2Fjdk%2Ftest%2Flib%2Fartifacts%2FArtifactResolver.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Flib%2Fjdk%2Ftest%2Flib%2Fartifacts%2FArtifactResolver.java?ref=b3e118a15e773fe1196b37cbd9dfe068213591b0",
      "patch": "@@ -26,9 +26,10 @@\n import java.io.FileNotFoundException;\n import java.nio.file.Path;\n import java.util.HashMap;\n+import java.util.Map;\n \n public class ArtifactResolver {\n-    public static HashMap<String, Path> resolve(Class klass) throws FileNotFoundException {\n+    public static Map<String, Path> resolve(Class<?> klass) throws FileNotFoundException {\n         ArtifactManager manager = new DefaultArtifactManager();\n         try {\n             String managerName = System.getProperty(\"jdk.test.lib.artifacts.artifactmanager\");\n@@ -41,12 +42,12 @@ public static HashMap<String, Path> resolve(Class klass) throws FileNotFoundExce\n             // If we end up here, we'll use the DefaultArtifactManager\n         }\n \n-        ArtifactContainer artifactContainer = (ArtifactContainer) klass.getAnnotation(ArtifactContainer.class);\n+        ArtifactContainer artifactContainer = klass.getAnnotation(ArtifactContainer.class);\n         HashMap<String, Path> locations = new HashMap<>();\n         Artifact[] artifacts;\n \n         if (artifactContainer == null) {\n-            artifacts = new Artifact[]{(Artifact) klass.getAnnotation(Artifact.class)};\n+            artifacts = new Artifact[]{klass.getAnnotation(Artifact.class)};\n         } else {\n             artifacts = artifactContainer.value();\n         }",
      "parent_sha": "3c9624aa8b14a54884d7753811886c23589a0879"
    }
  },
  {
    "oid": "c090f3f331a58277ad6d34e392ac3014863c85bb",
    "message": "8030192: TESTFAIL: java/util/logging/TestLoggerBundleSync.java failed with NPE\n\nThis is a test bug - loggers held in local variables can be arbitrarily gc'ed if that variable is no longer used. The fix makes sure that the loggers won't be arbitrarily gc'ed before the test is complete.\n\nReviewed-by: mchung",
    "date": "2013-12-19T13:53:10Z",
    "url": "https://github.com/openjdk/jdk/commit/c090f3f331a58277ad6d34e392ac3014863c85bb",
    "details": {
      "sha": "48933c9adcad62c28303030b1381f03f38f7aefc",
      "filename": "jdk/test/java/util/logging/TestLoggerBundleSync.java",
      "status": "modified",
      "additions": 31,
      "deletions": 1,
      "changes": 32,
      "blob_url": "https://github.com/openjdk/jdk/blob/c090f3f331a58277ad6d34e392ac3014863c85bb/jdk%2Ftest%2Fjava%2Futil%2Flogging%2FTestLoggerBundleSync.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/c090f3f331a58277ad6d34e392ac3014863c85bb/jdk%2Ftest%2Fjava%2Futil%2Flogging%2FTestLoggerBundleSync.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Ftest%2Fjava%2Futil%2Flogging%2FTestLoggerBundleSync.java?ref=c090f3f331a58277ad6d34e392ac3014863c85bb",
      "patch": "@@ -190,8 +190,10 @@ final static class GetRB extends Thread {\n         final static class MyHandler extends Handler {\n             volatile ResourceBundle rb;\n             volatile String rbName;\n+            volatile int count = 0;\n             @Override\n             public synchronized void publish(LogRecord record) {\n+                count++;\n                 rb = record.getResourceBundle();\n                 rbName = record.getResourceBundleName();\n             }\n@@ -227,23 +229,51 @@ public void run() {\n                         Logger ll = Logger.getLogger(l.getName()+\".bie.bye\");\n                         ResourceBundle hrb;\n                         String hrbName;\n+                        if (handler.getLevel() != Level.FINEST) {\n+                            throw new RuntimeException(\"Handler level is not finest: \"\n+                                    + handler.getLevel());\n+                        }\n+                        final int countBefore = handler.count;\n                         ll.setLevel(Level.FINEST);\n                         ll.addHandler(handler);\n                         ll.fine(\"dummy\");\n                         ll.removeHandler(handler);\n+                        final int countAfter = handler.count;\n+                        if (countBefore == countAfter) {\n+                            throw new RuntimeException(\"Handler not called for \"\n+                                    + ll.getName() + \"(\"+ countAfter +\")\");\n+                        }\n                         hrb = handler.rb;\n                         hrbName = handler.rbName;\n                         if (name != null) {\n+                            // if name is not null, then it implies that it\n+                            // won't change, since setResourceBundle() cannot\n+                            // replace a non null name.\n+                            // Since we never set the resource bundle on 'll',\n+                            // then ll must inherit its resource bundle [name]\n+                            // from l - and therefor we should find it in\n+                            // handler.rb/handler.rbName\n                             if (!name.equals(hrbName)) {\n                                 throw new RuntimeException(\"Unexpected bundle name: \"\n-                                        +hrb.getBaseBundleName());\n+                                        +hrbName);\n                             }\n+                            // here we know that hrbName is not null so hrb\n+                            // should not be null either.\n                             if (!name.equals(hrb.getBaseBundleName())) {\n                                 throw new RuntimeException(\"Unexpected bundle name: \"\n                                         +hrb.getBaseBundleName());\n                             }\n                         }\n \n+                        // Make sure to refer to 'l' explicitly in order to\n+                        // prevent eager garbage collecting before the end of\n+                        // the test (JDK-8030192)\n+                        if (!ll.getName().startsWith(l.getName())) {\n+                            throw new RuntimeException(\"Logger \" + ll.getName()\n+                                    + \"does not start with expected prefix \"\n+                                    + l.getName());\n+                        }\n+\n                         getRBcount.incrementAndGet();\n                         if (!goOn) break;\n                         Thread.sleep(1);",
      "parent_sha": "dc30d3e266937afeb1da9572428ff62c95679e02"
    }
  },
  {
    "oid": "afe543414f58a04832d4f07dea88881d64954a0b",
    "message": "8347163: Javadoc error in ConstantPoolBuilder after JDK-8342468\n\nReviewed-by: jpai, shade",
    "date": "2025-01-08T10:56:48Z",
    "url": "https://github.com/openjdk/jdk/commit/afe543414f58a04832d4f07dea88881d64954a0b",
    "details": {
      "sha": "260fc982dab07116202768bc026a041b8eee8267",
      "filename": "src/java.base/share/classes/java/lang/classfile/constantpool/ConstantPoolBuilder.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/openjdk/jdk/blob/afe543414f58a04832d4f07dea88881d64954a0b/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2Fclassfile%2Fconstantpool%2FConstantPoolBuilder.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/afe543414f58a04832d4f07dea88881d64954a0b/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2Fclassfile%2Fconstantpool%2FConstantPoolBuilder.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2Fclassfile%2Fconstantpool%2FConstantPoolBuilder.java?ref=afe543414f58a04832d4f07dea88881d64954a0b",
      "patch": "@@ -400,7 +400,7 @@ default MethodHandleEntry methodHandleEntry(DirectMethodHandleDesc descriptor) {\n      *\n      * @param refKind the reference kind of the method handle\n      * @param reference the {@code MemberRefEntry}\n-     * @see MethodHandleInfo##refKinds Reference kinds\n+     * @see MethodHandleInfo##refkinds Reference kinds\n      * @see MethodHandleEntry#kind() MethodHandleEntry::kind\n      * @see MethodHandleEntry#reference() MethodHandleEntry::reference\n      */",
      "parent_sha": "f696d9c521fa13969cb81381dc8586bcdccf67d9"
    }
  },
  {
    "oid": "3e7e25e084c0f137d4119fe95a5d8b196a0ebd3d",
    "message": "6460352: Reintroduce Scope.dble\n\nReviewed-by: mcimadamore, jjg",
    "date": "2010-10-28T17:17:47Z",
    "url": "https://github.com/openjdk/jdk/commit/3e7e25e084c0f137d4119fe95a5d8b196a0ebd3d",
    "details": {
      "sha": "72ffbac8916744f758dff1c56510a811ce1b8cfc",
      "filename": "langtools/src/share/classes/com/sun/tools/javac/code/Scope.java",
      "status": "modified",
      "additions": 82,
      "deletions": 39,
      "changes": 121,
      "blob_url": "https://github.com/openjdk/jdk/blob/3e7e25e084c0f137d4119fe95a5d8b196a0ebd3d/langtools%2Fsrc%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fcode%2FScope.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/3e7e25e084c0f137d4119fe95a5d8b196a0ebd3d/langtools%2Fsrc%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fcode%2FScope.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/langtools%2Fsrc%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fcode%2FScope.java?ref=3e7e25e084c0f137d4119fe95a5d8b196a0ebd3d",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1999, 2008, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2010, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -31,7 +31,8 @@\n /** A scope represents an area of visibility in a Java program. The\n  *  Scope class is a container for symbols which provides\n  *  efficient access to symbols given their names. Scopes are implemented\n- *  as hash tables. Scopes can be nested; the next field of a scope points\n+ *  as hash tables with \"open addressing\" and \"double hashing\".\n+ *  Scopes can be nested; the next field of a scope points\n  *  to its next outer scope. Nested scopes can share their hash tables.\n  *\n  *  <p><b>This is NOT part of any supported API.\n@@ -67,6 +68,7 @@ public class Scope {\n     public Entry elems;\n \n     /** The number of elements in this scope.\n+     * This includes deleted elements, whose value is the sentinel.\n      */\n     public int nelems = 0;\n \n@@ -109,7 +111,8 @@ public long val() {\n         }\n     }\n \n-    /** Every hash bucket is a list of Entry's which ends in sentinel.\n+    /** Use as a \"not-found\" result for lookup.\n+     * Also used to mark deleted entries in the table.\n      */\n     private static final Entry sentinel = new Entry(null, null, null, null);\n \n@@ -130,12 +133,15 @@ private Scope(Scope next, Symbol owner, Entry[] table, ScopeCounter scopeCounter\n         this.owner = owner;\n         this.table = table;\n         this.hashMask = table.length - 1;\n-        this.elems = null;\n-        this.nelems = 0;\n-        this.shared = 0;\n         this.scopeCounter = scopeCounter;\n     }\n \n+    /** Convenience constructor used for dup and dupUnshared. */\n+    private Scope(Scope next, Symbol owner, Entry[] table) {\n+        this(next, owner, table, next.scopeCounter);\n+        this.nelems = next.nelems;\n+    }\n+\n     /** Construct a new scope, within scope next, with given owner,\n      *  using a fresh table of length INITIAL_SIZE.\n      */\n@@ -145,7 +151,6 @@ public Scope(Symbol owner) {\n \n     protected Scope(Symbol owner, ScopeCounter scopeCounter) {\n         this(null, owner, new Entry[INITIAL_SIZE], scopeCounter);\n-        for (int i = 0; i < INITIAL_SIZE; i++) table[i] = sentinel;\n     }\n \n     /** Construct a fresh scope within this scope, with same owner,\n@@ -154,11 +159,7 @@ protected Scope(Symbol owner, ScopeCounter scopeCounter) {\n      *  of fresh tables.\n      */\n     public Scope dup() {\n-        Scope result = new Scope(this, this.owner, this.table, scopeCounter);\n-        shared++;\n-        // System.out.println(\"====> duping scope \" + this.hashCode() + \" owned by \" + this.owner + \" to \" + result.hashCode());\n-        // new Error().printStackTrace(System.out);\n-        return result;\n+        return dup(this.owner);\n     }\n \n     /** Construct a fresh scope within this scope, with new owner,\n@@ -167,7 +168,7 @@ public Scope dup() {\n      *  of fresh tables.\n      */\n     public Scope dup(Symbol newOwner) {\n-        Scope result = new Scope(this, newOwner, this.table, scopeCounter);\n+        Scope result = new Scope(this, newOwner, this.table);\n         shared++;\n         // System.out.println(\"====> duping scope \" + this.hashCode() + \" owned by \" + newOwner + \" to \" + result.hashCode());\n         // new Error().printStackTrace(System.out);\n@@ -179,7 +180,7 @@ public Scope dup(Symbol newOwner) {\n      *  the table of its outer scope.\n      */\n     public Scope dupUnshared() {\n-        return new Scope(this, this.owner, this.table.clone(), scopeCounter);\n+        return new Scope(this, this.owner, this.table.clone());\n     }\n \n     /** Remove all entries of this scope from its table, if shared\n@@ -189,14 +190,15 @@ public Scope leave() {\n         assert shared == 0;\n         if (table != next.table) return next;\n         while (elems != null) {\n-            int hash = elems.sym.name.hashCode() & hashMask;\n+            int hash = getIndex(elems.sym.name);\n             Entry e = table[hash];\n             assert e == elems : elems.sym;\n             table[hash] = elems.shadowed;\n             elems = elems.sibling;\n         }\n         assert next.shared > 0;\n         next.shared--;\n+        next.nelems = nelems;\n         // System.out.println(\"====> leaving scope \" + this.hashCode() + \" owned by \" + this.owner + \" to \" + next.hashCode());\n         // new Error().printStackTrace(System.out);\n         return next;\n@@ -215,19 +217,17 @@ private void dble() {\n                 s.hashMask = newtable.length - 1;\n             }\n         }\n-        for (int i = 0; i < newtable.length; i++) newtable[i] = sentinel;\n-        for (int i = 0; i < oldtable.length; i++) copy(oldtable[i]);\n-    }\n-\n-    /** Copy the given entry and all entries shadowed by it to table\n-     */\n-    private void copy(Entry e) {\n-        if (e.sym != null) {\n-            copy(e.shadowed);\n-            int hash = e.sym.name.hashCode() & hashMask;\n-            e.shadowed = table[hash];\n-            table[hash] = e;\n+        int n = 0;\n+        for (int i = oldtable.length; --i >= 0; ) {\n+            Entry e = oldtable[i];\n+            if (e != null && e != sentinel) {\n+                table[getIndex(e.sym.name)] = e;\n+                n++;\n+            }\n         }\n+        // We don't need to update nelems for shared inherited scopes,\n+        // since that gets handled by leave().\n+        nelems = n;\n     }\n \n     /** Enter symbol sym in this scope.\n@@ -248,13 +248,17 @@ public void enter(Symbol sym, Scope s) {\n      */\n     public void enter(Symbol sym, Scope s, Scope origin) {\n         assert shared == 0;\n-        // Temporarily disabled (bug 6460352):\n-        // if (nelems * 3 >= hashMask * 2) dble();\n-        int hash = sym.name.hashCode() & hashMask;\n-        Entry e = makeEntry(sym, table[hash], elems, s, origin);\n+        if (nelems * 3 >= hashMask * 2)\n+            dble();\n+        int hash = getIndex(sym.name);\n+        Entry old = table[hash];\n+        if (old == null) {\n+            old = sentinel;\n+            nelems++;\n+        }\n+        Entry e = makeEntry(sym, old, elems, s, origin);\n         table[hash] = e;\n         elems = e;\n-        nelems++;\n         scopeCounter.inc();\n     }\n \n@@ -268,15 +272,15 @@ Entry makeEntry(Symbol sym, Entry shadowed, Entry sibling, Scope scope, Scope or\n     public void remove(Symbol sym) {\n         assert shared == 0;\n         Entry e = lookup(sym.name);\n-        while (e.scope == this && e.sym != sym) e = e.next();\n         if (e.scope == null) return;\n \n         scopeCounter.inc();\n \n         // remove e from table and shadowed list;\n-        Entry te = table[sym.name.hashCode() & hashMask];\n+        int i = getIndex(sym.name);\n+        Entry te = table[i];\n         if (te == e)\n-            table[sym.name.hashCode() & hashMask] = e.shadowed;\n+            table[i] = e.shadowed;\n         else while (true) {\n             if (te.shadowed == e) {\n                 te.shadowed = e.shadowed;\n@@ -335,12 +339,50 @@ public Entry lookup(Name name) {\n         return lookup(name, noFilter);\n     }\n     public Entry lookup(Name name, Filter<Symbol> sf) {\n-        Entry e = table[name.hashCode() & hashMask];\n+        Entry e = table[getIndex(name)];\n+        if (e == null || e == sentinel)\n+            return sentinel;\n         while (e.scope != null && (e.sym.name != name || !sf.accepts(e.sym)))\n             e = e.shadowed;\n         return e;\n     }\n \n+    /*void dump (java.io.PrintStream out) {\n+        out.println(this);\n+        for (int l=0; l < table.length; l++) {\n+            Entry le = table[l];\n+            out.print(\"#\"+l+\": \");\n+            if (le==sentinel) out.println(\"sentinel\");\n+            else if(le == null) out.println(\"null\");\n+            else out.println(\"\"+le+\" s:\"+le.sym);\n+        }\n+    }*/\n+\n+    /** Look for slot in the table.\n+     *  We use open addressing with double hashing.\n+     */\n+    int getIndex (Name name) {\n+        int h = name.hashCode();\n+        int i = h & hashMask;\n+        // The expression below is always odd, so it is guaranteed\n+        // be be mutually prime with table.length, a power of 2.\n+        int x = hashMask - ((h + (h >> 16)) << 1);\n+        int d = -1; // Index of a deleted item.\n+        for (;;) {\n+            Entry e = table[i];\n+            if (e == null)\n+                return d >= 0 ? d : i;\n+            if (e == sentinel) {\n+                // We have to keep searching even if we see a deleted item.\n+                // However, remember the index in case we fail to find the name.\n+                if (d < 0)\n+                    d = i;\n+            } else if (e.sym.name == name)\n+                return i;\n+            i = (i + x) & hashMask;\n+        }\n+    }\n+\n     public Iterable<Symbol> getElements() {\n         return getElements(noFilter);\n     }\n@@ -470,10 +512,11 @@ Entry makeEntry(Symbol sym, Entry shadowed, Entry sibling, Scope scope, Scope or\n         }\n \n         public Entry lookup(Name name) {\n-            Entry e = table[name.hashCode() & hashMask];\n+            Entry e = table[getIndex(name)];\n+            if (e == null)\n+                return sentinel;\n             while (e.scope != null &&\n-                   (e.sym.name != name ||\n-                    /* Since an inner class will show up in package and\n+                   (/* Since an inner class will show up in package and\n                      * import scopes until its inner class attribute has\n                      * been processed, we have to weed it out here.  This\n                      * is done by comparing the owners of the entry's",
      "parent_sha": "efaaa59c32f72e13af65be5dd62eac548f24ed04"
    }
  },
  {
    "oid": "81f128b9031e2c04859d323378b64e3f2625bf20",
    "message": "8287154: java/nio/channels/FileChannel/LargeMapTest.java does not compile\n\nReviewed-by: alanb, jvernee",
    "date": "2022-05-23T10:19:12Z",
    "url": "https://github.com/openjdk/jdk/commit/81f128b9031e2c04859d323378b64e3f2625bf20",
    "details": {
      "sha": "984c81a7eb723138a47b4eb3b53636ed040d7b4e",
      "filename": "test/jdk/java/nio/channels/FileChannel/LargeMapTest.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/openjdk/jdk/blob/81f128b9031e2c04859d323378b64e3f2625bf20/test%2Fjdk%2Fjava%2Fnio%2Fchannels%2FFileChannel%2FLargeMapTest.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/81f128b9031e2c04859d323378b64e3f2625bf20/test%2Fjdk%2Fjava%2Fnio%2Fchannels%2FFileChannel%2FLargeMapTest.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fjdk%2Fjava%2Fnio%2Fchannels%2FFileChannel%2FLargeMapTest.java?ref=81f128b9031e2c04859d323378b64e3f2625bf20",
      "patch": "@@ -61,7 +61,7 @@ public static void main(String[] args) throws IOException {\n         ByteBuffer bb = ByteBuffer.allocateDirect(BUFSIZ);\n \n         try (FileChannel fc = FileChannel.open(p, READ, WRITE);) {\n-            MemorySegment mbb = MemorySegment.ofByteBuffer(bb);\n+            MemorySegment mbb = MemorySegment.ofBuffer(bb);\n             MemorySegment mappedMemorySegment =\n                 fc.map(FileChannel.MapMode.READ_WRITE, 0, p.toFile().length(),\n                        MemorySession.openImplicit());",
      "parent_sha": "7becf13e61ba2c43837e4b48775fdaf73bc1d79e"
    }
  },
  {
    "oid": "11e6f439e05ee677456155bf3294b1578e016835",
    "message": "8222491: jcmd can fail converting UTF8 output to strings\n\nReviewed-by: jcbeyler, clanger, dholmes",
    "date": "2019-04-15T13:41:02Z",
    "url": "https://github.com/openjdk/jdk/commit/11e6f439e05ee677456155bf3294b1578e016835",
    "details": {
      "sha": "68d038fc556ccc4ea33614d395e8375b43dc5fec",
      "filename": "src/jdk.jcmd/share/classes/sun/tools/jcmd/JCmd.java",
      "status": "modified",
      "additions": 7,
      "deletions": 5,
      "changes": 12,
      "blob_url": "https://github.com/openjdk/jdk/blob/11e6f439e05ee677456155bf3294b1578e016835/src%2Fjdk.jcmd%2Fshare%2Fclasses%2Fsun%2Ftools%2Fjcmd%2FJCmd.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/11e6f439e05ee677456155bf3294b1578e016835/src%2Fjdk.jcmd%2Fshare%2Fclasses%2Fsun%2Ftools%2Fjcmd%2FJCmd.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/src%2Fjdk.jcmd%2Fshare%2Fclasses%2Fsun%2Ftools%2Fjcmd%2FJCmd.java?ref=11e6f439e05ee677456155bf3294b1578e016835",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2011, 2018, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2019, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -26,6 +26,7 @@\n package sun.tools.jcmd;\n \n import java.io.InputStream;\n+import java.io.InputStreamReader;\n import java.io.IOException;\n import java.io.UnsupportedEncodingException;\n import java.util.List;\n@@ -121,15 +122,16 @@ private static void executeCommandForPid(String pid, String command)\n             if (line.trim().equals(\"stop\")) {\n                 break;\n             }\n-            try (InputStream in = hvm.executeJCmd(line);) {\n+            try (InputStream in = hvm.executeJCmd(line);\n+                 InputStreamReader isr = new InputStreamReader(in, \"UTF-8\")) {\n                 // read to EOF and just print output\n-                byte b[] = new byte[256];\n+                char c[] = new char[256];\n                 int n;\n                 boolean messagePrinted = false;\n                 do {\n-                    n = in.read(b);\n+                    n = isr.read(c);\n                     if (n > 0) {\n-                        String s = new String(b, 0, n, \"UTF-8\");\n+                        String s = new String(c, 0, n);\n                         System.out.print(s);\n                         messagePrinted = true;\n                     }",
      "parent_sha": "bdf5b6e337af8a38df0cd402a2f1e379d2f720e2"
    }
  },
  {
    "oid": "4c934b1e6a7b729569989e3d54d38aca1c81fb12",
    "message": "8154314: [TEST_BUG] java/awt/datatransfer/DragImage/MultiResolutionDragImageTest.java\n\nReviewed-by: ssadetsky, serb",
    "date": "2016-12-21T14:34:41Z",
    "url": "https://github.com/openjdk/jdk/commit/4c934b1e6a7b729569989e3d54d38aca1c81fb12",
    "details": {
      "sha": "23a2ea7c717f934ce1cbd6038b5a8f36d30a9e7f",
      "filename": "jdk/test/java/awt/datatransfer/DragImage/MultiResolutionDragImageTest.java",
      "status": "modified",
      "additions": 5,
      "deletions": 26,
      "changes": 31,
      "blob_url": "https://github.com/openjdk/jdk/blob/4c934b1e6a7b729569989e3d54d38aca1c81fb12/jdk%2Ftest%2Fjava%2Fawt%2Fdatatransfer%2FDragImage%2FMultiResolutionDragImageTest.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/4c934b1e6a7b729569989e3d54d38aca1c81fb12/jdk%2Ftest%2Fjava%2Fawt%2Fdatatransfer%2FDragImage%2FMultiResolutionDragImageTest.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Ftest%2Fjava%2Fawt%2Fdatatransfer%2FDragImage%2FMultiResolutionDragImageTest.java?ref=4c934b1e6a7b729569989e3d54d38aca1c81fb12",
      "patch": "@@ -22,7 +22,6 @@\n  */\n \n import sun.awt.image.MultiResolutionToolkitImage;\n-import sun.java2d.SunGraphics2D;\n \n import javax.swing.*;\n import java.awt.*;\n@@ -37,7 +36,6 @@\n  * @summary [macosx] Drag image of TransferHandler does not honor\n  * MultiResolutionImage\n  * @modules java.desktop/sun.awt.image\n- *          java.desktop/sun.java2d\n  * @run main MultiResolutionDragImageTest TEST_DRAG\n  */\n public class MultiResolutionDragImageTest {\n@@ -126,30 +124,11 @@ private static boolean similar(int n, int m){\n         return Math.abs(n - m) <= 50;\n     }\n \n-    private static float getScaleFactor() {\n-\n-        final Dialog dialog = new Dialog((Window) null);\n-        dialog.setSize(100, 100);\n-        dialog.setModal(true);\n-        final float[] scaleFactors = new float[1];\n-        Panel panel = new Panel() {\n-\n-            @Override\n-            public void paint(Graphics g) {\n-                float scaleFactor = 1;\n-                if (g instanceof SunGraphics2D) {\n-                    scaleFactor = ((SunGraphics2D) g).surfaceData.getDefaultScale();\n-                }\n-                scaleFactors[0] = scaleFactor;\n-                dialog.setVisible(false);\n-            }\n-        };\n-\n-        dialog.add(panel);\n-        dialog.setVisible(true);\n-        dialog.dispose();\n-\n-        return scaleFactors[0];\n+    static float getScaleFactor() {\n+        return (float) GraphicsEnvironment.\n+                getLocalGraphicsEnvironment().\n+                getDefaultScreenDevice().getDefaultConfiguration().\n+                getDefaultTransform().getScaleX();\n     }\n \n     private static Image createMultiResolutionImage() {",
      "parent_sha": "8b371aa02b2ab8b91cf0901b1e03262a9973eff1"
    }
  },
  {
    "oid": "16dcf15a14c8a767d21a314aa579862e37f4a697",
    "message": "8348263: C2 SuperWord: TestMemorySegment.java has failing IR rules with AlignVector after JDK-8343685\n\nReviewed-by: chagedorn, thartmann",
    "date": "2025-01-22T12:02:39Z",
    "url": "https://github.com/openjdk/jdk/commit/16dcf15a14c8a767d21a314aa579862e37f4a697",
    "details": {
      "sha": "bdba04d3b18d3ac606cf50cef51d555f4ac5fd39",
      "filename": "test/hotspot/jtreg/compiler/loopopts/superword/TestMemorySegment.java",
      "status": "modified",
      "additions": 49,
      "deletions": 16,
      "changes": 65,
      "blob_url": "https://github.com/openjdk/jdk/blob/16dcf15a14c8a767d21a314aa579862e37f4a697/test%2Fhotspot%2Fjtreg%2Fcompiler%2Floopopts%2Fsuperword%2FTestMemorySegment.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/16dcf15a14c8a767d21a314aa579862e37f4a697/test%2Fhotspot%2Fjtreg%2Fcompiler%2Floopopts%2Fsuperword%2FTestMemorySegment.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fhotspot%2Fjtreg%2Fcompiler%2Floopopts%2Fsuperword%2FTestMemorySegment.java?ref=16dcf15a14c8a767d21a314aa579862e37f4a697",
      "patch": "@@ -39,6 +39,14 @@\n  * @run driver compiler.loopopts.superword.TestMemorySegment ByteArray\n  */\n \n+/*\n+ * @test id=byte-array-AlignVector\n+ * @bug 8329273 8348263\n+ * @summary Test vectorization of loops over MemorySegment\n+ * @library /test/lib /\n+ * @run driver compiler.loopopts.superword.TestMemorySegment ByteArray AlignVector\n+ */\n+\n /*\n  * @test id=char-array\n  * @bug 8329273\n@@ -63,6 +71,14 @@\n  * @run driver compiler.loopopts.superword.TestMemorySegment IntArray\n  */\n \n+/*\n+ * @test id=int-array-AlignVector\n+ * @bug 8329273 8348263\n+ * @summary Test vectorization of loops over MemorySegment\n+ * @library /test/lib /\n+ * @run driver compiler.loopopts.superword.TestMemorySegment IntArray AlignVector\n+ */\n+\n /*\n  * @test id=long-array\n  * @bug 8329273\n@@ -71,6 +87,14 @@\n  * @run driver compiler.loopopts.superword.TestMemorySegment LongArray\n  */\n \n+/*\n+ * @test id=long-array-AlignVector\n+ * @bug 8329273 8348263\n+ * @summary Test vectorization of loops over MemorySegment\n+ * @library /test/lib /\n+ * @run driver compiler.loopopts.superword.TestMemorySegment LongArray AlignVector\n+ */\n+\n /*\n  * @test id=float-array\n  * @bug 8329273\n@@ -111,6 +135,14 @@\n  * @run driver compiler.loopopts.superword.TestMemorySegment Native\n  */\n \n+/*\n+ * @test id=native-AlignVector\n+ * @bug 8329273 8348263\n+ * @summary Test vectorization of loops over MemorySegment\n+ * @library /test/lib /\n+ * @run driver compiler.loopopts.superword.TestMemorySegment Native AlignVector\n+ */\n+\n // FAILS: mixed providers currently do not vectorize. Maybe there is some inlining issue.\n // /*\n //  * @test id=mixed-array\n@@ -140,6 +172,9 @@ public class TestMemorySegment {\n     public static void main(String[] args) {\n         TestFramework framework = new TestFramework(TestMemorySegmentImpl.class);\n         framework.addFlags(\"-DmemorySegmentProviderNameForTestVM=\" + args[0]);\n+        if (args.length > 1 && args[1].equals(\"AlignVector\")) {\n+            framework.addFlags(\"-XX:+AlignVector\");\n+        }\n         framework.setDefaultWarmup(100);\n         framework.start();\n     }\n@@ -556,6 +591,7 @@ static Object[] testIntLoop_longIndex_longInvar_sameAdr_int(MemorySegment a, lon\n                   IRNode.ADD_VI,        \"> 0\",\n                   IRNode.STORE_VECTOR,  \"> 0\"},\n         applyIfPlatform = {\"64-bit\", \"true\"},\n+        applyIf = {\"AlignVector\", \"false\"},\n         applyIfCPUFeatureOr = {\"sse4.1\", \"true\", \"asimd\", \"true\"})\n     static Object[] testIntLoop_longIndex_intInvar_int(MemorySegment a, int invar) {\n         for (int i = 0; i < (int)a.byteSize()/4; i++) {\n@@ -572,6 +608,7 @@ static Object[] testIntLoop_longIndex_intInvar_int(MemorySegment a, int invar) {\n                   IRNode.ADD_VI,        \"> 0\",\n                   IRNode.STORE_VECTOR,  \"> 0\"},\n         applyIfPlatform = {\"64-bit\", \"true\"},\n+        applyIf = {\"AlignVector\", \"false\"},\n         applyIfCPUFeatureOr = {\"sse4.1\", \"true\", \"asimd\", \"true\"})\n     static Object[] testIntLoop_longIndex_longInvar_int(MemorySegment a, long invar) {\n         for (int i = 0; i < (int)a.byteSize()/4; i++) {\n@@ -705,14 +742,12 @@ static Object[] testLongLoop_iv_int(MemorySegment a) {\n     }\n \n     @Test\n-    //@IR(counts = {IRNode.LOAD_VECTOR_I, \"> 0\",\n-    //              IRNode.ADD_VI,        \"> 0\",\n-    //              IRNode.STORE_VECTOR,  \"> 0\"},\n-    //    applyIfPlatform = {\"64-bit\", \"true\"},\n-    //    applyIf = {\"AlignVector\", \"false\"},\n-    //    applyIfCPUFeatureOr = {\"sse4.1\", \"true\", \"asimd\", \"true\"})\n-    // FAILS: for native memory. I think it is because of invariants, but need investigation.\n-    //        The long -> int loop conversion introduces extra invariants.\n+    @IR(counts = {IRNode.LOAD_VECTOR_I, \"> 0\",\n+                  IRNode.ADD_VI,        \"> 0\",\n+                  IRNode.STORE_VECTOR,  \"> 0\"},\n+        applyIfPlatform = {\"64-bit\", \"true\"},\n+        applyIf = {\"AlignVector\", \"false\"},\n+        applyIfCPUFeatureOr = {\"sse4.1\", \"true\", \"asimd\", \"true\"})\n     static Object[] testLongLoop_longIndex_intInvar_sameAdr_int(MemorySegment a, int invar) {\n         for (long i = 0; i < a.byteSize()/4; i++) {\n             long adr = 4L * (long)(i) + 4L * (long)(invar);\n@@ -723,14 +758,12 @@ static Object[] testLongLoop_longIndex_intInvar_sameAdr_int(MemorySegment a, int\n     }\n \n     @Test\n-    //@IR(counts = {IRNode.LOAD_VECTOR_I, \"> 0\",\n-    //              IRNode.ADD_VI,        \"> 0\",\n-    //              IRNode.STORE_VECTOR,  \"> 0\"},\n-    //    applyIfPlatform = {\"64-bit\", \"true\"},\n-    //    applyIf = {\"AlignVector\", \"false\"},\n-    //    applyIfCPUFeatureOr = {\"sse4.1\", \"true\", \"asimd\", \"true\"})\n-    // FAILS: for native memory. I think it is because of invariants, but need investigation.\n-    //        The long -> int loop conversion introduces extra invariants.\n+    @IR(counts = {IRNode.LOAD_VECTOR_I, \"> 0\",\n+                  IRNode.ADD_VI,        \"> 0\",\n+                  IRNode.STORE_VECTOR,  \"> 0\"},\n+        applyIfPlatform = {\"64-bit\", \"true\"},\n+        applyIf = {\"AlignVector\", \"false\"},\n+        applyIfCPUFeatureOr = {\"sse4.1\", \"true\", \"asimd\", \"true\"})\n     static Object[] testLongLoop_longIndex_longInvar_sameAdr_int(MemorySegment a, long invar) {\n         for (long i = 0; i < a.byteSize()/4; i++) {\n             long adr = 4L * (long)(i) + 4L * (long)(invar);",
      "parent_sha": "61873564a44d448feb2ae6e5dae93ab33a0aa719"
    }
  },
  {
    "oid": "c797c78253a8f3fca6fc665fe474b79332a65d4e",
    "message": "8032763: Remove use of sun.misc.Ref from hprof parser in testlibrary\n\nReviewed-by: jbachorik, alanb",
    "date": "2015-07-09T10:56:38Z",
    "url": "https://github.com/openjdk/jdk/commit/c797c78253a8f3fca6fc665fe474b79332a65d4e",
    "details": {
      "sha": "6150543b36b890f894223b32355e3c1004fc2b2b",
      "filename": "test/lib/share/classes/jdk/test/lib/hprof/model/Snapshot.java",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/openjdk/jdk/blob/c797c78253a8f3fca6fc665fe474b79332a65d4e/test%2Flib%2Fshare%2Fclasses%2Fjdk%2Ftest%2Flib%2Fhprof%2Fmodel%2FSnapshot.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/c797c78253a8f3fca6fc665fe474b79332a65d4e/test%2Flib%2Fshare%2Fclasses%2Fjdk%2Ftest%2Flib%2Fhprof%2Fmodel%2FSnapshot.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Flib%2Fshare%2Fclasses%2Fjdk%2Ftest%2Flib%2Fhprof%2Fmodel%2FSnapshot.java?ref=c797c78253a8f3fca6fc665fe474b79332a65d4e",
      "patch": "@@ -276,10 +276,8 @@ public void resolve(boolean calculateRefs) {\n         fakeClasses.clear();\n \n         weakReferenceClass = findClass(\"java.lang.ref.Reference\");\n-        if (weakReferenceClass == null)  {      // JDK 1.1.x\n-            weakReferenceClass = findClass(\"sun.misc.Ref\");\n-            referentFieldIndex = 0;\n-        } else {\n+        referentFieldIndex = 0;\n+        if (weakReferenceClass != null)  {\n             JavaField[] fields = weakReferenceClass.getFieldsForInstance();\n             for (int i = 0; i < fields.length; i++) {\n                 if (\"referent\".equals(fields[i].getName())) {",
      "parent_sha": "66ed0c65d3b5522adda4e6cc5524bd40a4a1306e"
    }
  },
  {
    "oid": "600b3e7e376996f4d7ea4b9c2c5a37a858a3782c",
    "message": "8134599: TEST_BUG: java/rmi/transport/closeServerSocket/CloseServerSocket.java fails intermittently with Address already in use\n\nReviewed-by: weijun, darcy, rriggs, coffeys",
    "date": "2019-10-17T05:34:06Z",
    "url": "https://github.com/openjdk/jdk/commit/600b3e7e376996f4d7ea4b9c2c5a37a858a3782c",
    "details": {
      "sha": "91cca0f317e22d4be677e6d3be0613b16a5c9260",
      "filename": "test/jdk/java/rmi/transport/closeServerSocket/CloseServerSocket.java",
      "status": "modified",
      "additions": 15,
      "deletions": 3,
      "changes": 18,
      "blob_url": "https://github.com/openjdk/jdk/blob/600b3e7e376996f4d7ea4b9c2c5a37a858a3782c/test%2Fjdk%2Fjava%2Frmi%2Ftransport%2FcloseServerSocket%2FCloseServerSocket.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/600b3e7e376996f4d7ea4b9c2c5a37a858a3782c/test%2Fjdk%2Fjava%2Frmi%2Ftransport%2FcloseServerSocket%2FCloseServerSocket.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fjdk%2Fjava%2Frmi%2Ftransport%2FcloseServerSocket%2FCloseServerSocket.java?ref=600b3e7e376996f4d7ea4b9c2c5a37a858a3782c",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2005, 2016, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2019, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -63,8 +63,19 @@ public static void main(String[] args) throws Exception {\n         verifyPortInUse(PORT);\n         UnicastRemoteObject.unexportObject(registry, true);\n         System.err.println(\"- unexported registry\");\n-        Thread.sleep(1000);        // work around BindException (bug?)\n-        verifyPortFree(PORT);\n+        int tries = (int)TestLibrary.getTimeoutFactor();\n+        tries = Math.max(tries, 1);\n+        while (tries-- > 0) {\n+            Thread.sleep(1000);\n+            try {\n+                verifyPortFree(PORT);\n+                break;\n+            } catch (IOException ignore) { }\n+        }\n+        if (tries < 0) {\n+            throw new RuntimeException(\"time out after tries: \" + tries);\n+        }\n+\n \n         /*\n          * The follow portion of this test is disabled temporarily\n@@ -101,6 +112,7 @@ private static void verifyPortFree(int port) throws IOException {\n     private static void verifyPortInUse(int port) throws IOException {\n         try {\n             verifyPortFree(port);\n+            throw new RuntimeException(\"port is not in use: \" + port);\n         } catch (BindException e) {\n             System.err.println(\"- port \" + port + \" is in use\");\n             return;",
      "parent_sha": "2a43248dba36f4ecda40cbba928f48536027f0cd"
    }
  },
  {
    "oid": "5f5f5e574d19d8b29bcee6ed38d3464593b5121d",
    "message": "8165955: TestFullGCCount test failed with CMS and -XX:+ExplicitGCInvokesConcurrent\n\nReviewed-by: dfazunen, tschatzl",
    "date": "2016-11-16T15:57:42Z",
    "url": "https://github.com/openjdk/jdk/commit/5f5f5e574d19d8b29bcee6ed38d3464593b5121d",
    "details": {
      "sha": "416b18a189d9c7e1ae90075068cbd916e58c30b6",
      "filename": "hotspot/test/gc/TestFullGCCount.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/openjdk/jdk/blob/5f5f5e574d19d8b29bcee6ed38d3464593b5121d/hotspot%2Ftest%2Fgc%2FTestFullGCCount.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/5f5f5e574d19d8b29bcee6ed38d3464593b5121d/hotspot%2Ftest%2Fgc%2FTestFullGCCount.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/hotspot%2Ftest%2Fgc%2FTestFullGCCount.java?ref=5f5f5e574d19d8b29bcee6ed38d3464593b5121d",
      "patch": "@@ -21,10 +21,11 @@\n  * questions.\n  */\n \n-/*\n+/**\n  * @test TestFullGCCount.java\n  * @bug 7072527\n  * @summary CMS: JMM GC counters overcount in some cases\n+ * @requires !(vm.gc.ConcMarkSweep & vm.opt.ExplicitGCInvokesConcurrent == true)\n  * @modules java.management\n  * @run main/othervm -Xlog:gc TestFullGCCount\n  */",
      "parent_sha": "7c690441e4ebc98a6311ecdecd832924d553a682"
    }
  },
  {
    "oid": "a4a6c1714def40480c6651dcf960ff2f41dbe7c6",
    "message": "8220382: Cleanup doclet instantiation\n\nReviewed-by: jjg",
    "date": "2019-04-17T07:13:41Z",
    "url": "https://github.com/openjdk/jdk/commit/a4a6c1714def40480c6651dcf960ff2f41dbe7c6",
    "details": {
      "sha": "043fbcf754fdca1f2e90746bdde00a593ee1df23",
      "filename": "src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/Start.java",
      "status": "modified",
      "additions": 55,
      "deletions": 67,
      "changes": 122,
      "blob_url": "https://github.com/openjdk/jdk/blob/a4a6c1714def40480c6651dcf960ff2f41dbe7c6/src%2Fjdk.javadoc%2Fshare%2Fclasses%2Fjdk%2Fjavadoc%2Finternal%2Ftool%2FStart.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/a4a6c1714def40480c6651dcf960ff2f41dbe7c6/src%2Fjdk.javadoc%2Fshare%2Fclasses%2Fjdk%2Fjavadoc%2Finternal%2Ftool%2FStart.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/src%2Fjdk.javadoc%2Fshare%2Fclasses%2Fjdk%2Fjavadoc%2Finternal%2Ftool%2FStart.java?ref=a4a6c1714def40480c6651dcf960ff2f41dbe7c6",
      "patch": "@@ -374,7 +374,7 @@ private Result begin(List<String> options, Iterable<? extends JavaFileObject> fi\n \n         // locale, doclet and maybe taglet, needs to be determined first\n         try {\n-            docletClass = preprocess(fileManager, options);\n+            doclet = preprocess(fileManager, options);\n         } catch (ToolException te) {\n             if (!te.result.isOK()) {\n                 if (te.message != null) {\n@@ -393,24 +393,6 @@ private Result begin(List<String> options, Iterable<? extends JavaFileObject> fi\n             dumpStack(t == null ? oe : t);\n             return oe.result;\n         }\n-        if (jdk.javadoc.doclet.Doclet.class.isAssignableFrom(docletClass)) {\n-            // no need to dispatch to old, safe to init now\n-            initMessager();\n-            messager.setLocale(locale);\n-            try {\n-                Object o = docletClass.getConstructor().newInstance();\n-                doclet = (Doclet) o;\n-            } catch (ReflectiveOperationException exc) {\n-                if (apiMode) {\n-                    throw new ClientCodeException(exc);\n-                }\n-                error(\"main.could_not_instantiate_class\", docletClass.getName());\n-                return ERROR;\n-            }\n-        } else {\n-            error(\"main.not_a_doclet\", docletClass.getName());\n-            return ERROR;\n-        }\n \n         Result result = OK;\n         try {\n@@ -649,7 +631,7 @@ int handleDocletOptions(int idx, List<String> args, boolean isToolOption)\n         return idx;\n     }\n \n-    private Class<?> preprocess(JavaFileManager jfm,\n+    private Doclet preprocess(JavaFileManager jfm,\n             List<String> argv) throws ToolException, OptionException {\n         // doclet specifying arguments\n         String userDocletPath = null;\n@@ -706,71 +688,77 @@ private Class<?> preprocess(JavaFileManager jfm,\n             }\n         }\n \n-        // Step 2: a doclet is provided, nothing more to do.\n-        if (docletClass != null) {\n-            return docletClass;\n-        }\n \n         // Step 3: doclet name specified ? if so find a ClassLoader,\n         // and load it.\n-        if (userDocletName != null) {\n-            ClassLoader cl = classLoader;\n-            if (cl == null) {\n-                if (!fileManager.hasLocation(DOCLET_PATH)) {\n-                    List<File> paths = new ArrayList<>();\n-                    if (userDocletPath != null) {\n-                        for (String pathname : userDocletPath.split(File.pathSeparator)) {\n-                            paths.add(new File(pathname));\n+        if(docletClass == null) {\n+            if (userDocletName != null) {\n+                ClassLoader cl = classLoader;\n+                if (cl == null) {\n+                    if (!fileManager.hasLocation(DOCLET_PATH)) {\n+                        List<File> paths = new ArrayList<>();\n+                        if (userDocletPath != null) {\n+                            for (String pathname : userDocletPath.split(File.pathSeparator)) {\n+                                paths.add(new File(pathname));\n+                            }\n+                        }\n+                        try {\n+                            ((StandardJavaFileManager)fileManager).setLocation(DOCLET_PATH, paths);\n+                        } catch (IOException ioe) {\n+                            if (apiMode) {\n+                                throw new IllegalArgumentException(\"Could not set location for \" +\n+                                        userDocletPath, ioe);\n+                            }\n+                            String text = messager.getText(\"main.doclet_could_not_set_location\",\n+                                    userDocletPath);\n+                            throw new ToolException(CMDERR, text, ioe);\n                         }\n                     }\n-                    try {\n-                        ((StandardJavaFileManager)fileManager).setLocation(DOCLET_PATH, paths);\n-                    } catch (IOException ioe) {\n+                    cl = fileManager.getClassLoader(DOCLET_PATH);\n+                    if (cl == null) {\n+                        // despite doclet specified on cmdline no classloader found!\n                         if (apiMode) {\n-                            throw new IllegalArgumentException(\"Could not set location for \" +\n-                                    userDocletPath, ioe);\n+                            throw new IllegalArgumentException(\"Could not obtain classloader to load \"\n+\n+                                    + userDocletPath);\n                         }\n-                        String text = messager.getText(\"main.doclet_could_not_set_location\",\n-                                userDocletPath);\n-                        throw new ToolException(CMDERR, text, ioe);\n+                        String text = messager.getText(\"main.doclet_no_classloader_found\",\n+                                userDocletName);\n+                        throw new ToolException(CMDERR, text);\n                     }\n                 }\n-                cl = fileManager.getClassLoader(DOCLET_PATH);\n-                if (cl == null) {\n-                    // despite doclet specified on cmdline no classloader found!\n-                    if (apiMode) {\n-                        throw new IllegalArgumentException(\"Could not obtain classloader to load \"\n-                                + userDocletPath);\n-                    }\n-                    String text = messager.getText(\"main.doclet_no_classloader_found\",\n-                            userDocletName);\n-                    throw new ToolException(CMDERR, text);\n-                }\n+                docletClass = loadDocletClass(userDocletName, cl);\n+            } else if (docletName != null){\n+                docletClass = loadDocletClass(docletName, getClass().getClassLoader());\n+            } else {\n+                docletClass = StdDoclet;\n             }\n+        }\n+\n+        if (jdk.javadoc.doclet.Doclet.class.isAssignableFrom(docletClass)) {\n+            // no need to dispatch to old, safe to init now\n+            initMessager();\n+            messager.setLocale(locale);\n             try {\n-                return cl.loadClass(userDocletName);\n-            } catch (ClassNotFoundException cnfe) {\n+                Object o = docletClass.getConstructor().newInstance();\n+                doclet = (Doclet) o;\n+            } catch (ReflectiveOperationException exc) {\n                 if (apiMode) {\n-                    throw new IllegalArgumentException(\"Cannot find doclet class \" + userDocletName,\n-                            cnfe);\n+                    throw new ClientCodeException(exc);\n                 }\n-                String text = messager.getText(\"main.doclet_class_not_found\", userDocletName);\n-                throw new ToolException(CMDERR, text, cnfe);\n+                String text = messager.getText(\"main.could_not_instantiate_class\", docletClass.getName());\n+                throw new ToolException(ERROR, text);\n             }\n+        } else {\n+            String text = messager.getText(\"main.not_a_doclet\", docletClass.getName());\n+            throw new ToolException(ERROR, text);\n         }\n-\n-        // Step 4: we have a doclet, try loading it\n-        if (docletName != null) {\n-            return loadDocletClass(docletName);\n-        }\n-\n-        // finally\n-        return StdDoclet;\n+        return doclet;\n     }\n \n-    private Class<?> loadDocletClass(String docletName) throws ToolException {\n+    private Class<?> loadDocletClass(String docletName, ClassLoader classLoader) throws ToolException {\n         try {\n-            return Class.forName(docletName, true, getClass().getClassLoader());\n+            return classLoader == null ? Class.forName(docletName) : classLoader.loadClass(docletName);\n         } catch (ClassNotFoundException cnfe) {\n             if (apiMode) {\n                 throw new IllegalArgumentException(\"Cannot find doclet class \" + docletName);",
      "parent_sha": "6493a50643830ba2aebb654ab19795132457b0d3"
    }
  },
  {
    "oid": "47307bdb89cd42a437b354402401cb4affa4bab7",
    "message": "6872011: Update printing processor to support JSR 308\n\nReviewed-by: jjg",
    "date": "2009-08-25T23:41:32Z",
    "url": "https://github.com/openjdk/jdk/commit/47307bdb89cd42a437b354402401cb4affa4bab7",
    "details": {
      "sha": "963f26020d3cc0aebe4342775518fe1e62b41840",
      "filename": "langtools/src/share/classes/com/sun/tools/javac/processing/PrintingProcessor.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/openjdk/jdk/blob/47307bdb89cd42a437b354402401cb4affa4bab7/langtools%2Fsrc%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fprocessing%2FPrintingProcessor.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/47307bdb89cd42a437b354402401cb4affa4bab7/langtools%2Fsrc%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fprocessing%2FPrintingProcessor.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/langtools%2Fsrc%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fprocessing%2FPrintingProcessor.java?ref=47307bdb89cd42a437b354402401cb4affa4bab7",
      "patch": "@@ -48,7 +48,8 @@\n  * deletion without notice.</b>\n  */\n @SupportedAnnotationTypes(\"*\")\n-@SupportedSourceVersion(SourceVersion.RELEASE_6)\n+// TODO: Change to version 7 based visitors when available\n+@SupportedSourceVersion(SourceVersion.RELEASE_7)\n public class PrintingProcessor extends AbstractProcessor {\n     PrintWriter writer;\n \n@@ -374,6 +375,7 @@ private void printFormalTypeParameters(Parameterizable e,\n                 for(TypeParameterElement tpe: typeParams) {\n                     if (!first)\n                         writer.print(\", \");\n+                    printAnnotationsInline(tpe);\n                     writer.print(tpe.toString());\n                     first = false;\n                 }",
      "parent_sha": "b91de4eb6a0f92c8e419510e7350dc6080059ab5"
    }
  },
  {
    "oid": "07d94668d2dca9e256570e3e1429d16d7ff89cc3",
    "message": "6909057: @see Arrays#hashCode missing particular method specification in j.u.Objects.hash\n\nReviewed-by: ksrini",
    "date": "2009-12-10T01:55:48Z",
    "url": "https://github.com/openjdk/jdk/commit/07d94668d2dca9e256570e3e1429d16d7ff89cc3",
    "details": {
      "sha": "8b009243eb938db4acc80b13424c009d09828b84",
      "filename": "jdk/src/share/classes/java/util/Objects.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/openjdk/jdk/blob/07d94668d2dca9e256570e3e1429d16d7ff89cc3/jdk%2Fsrc%2Fshare%2Fclasses%2Fjava%2Futil%2FObjects.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/07d94668d2dca9e256570e3e1429d16d7ff89cc3/jdk%2Fsrc%2Fshare%2Fclasses%2Fjava%2Futil%2FObjects.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Fsrc%2Fshare%2Fclasses%2Fjava%2Futil%2FObjects.java?ref=07d94668d2dca9e256570e3e1429d16d7ff89cc3",
      "patch": "@@ -119,7 +119,7 @@ public static int hashCode(Object o) {\n     *\n     * @param values the values to be hashed\n     * @return a hash value of the sequence of input values\n-    * @see Arrays#hashCode\n+    * @see Arrays#hashCode(Object[])\n     * @see List#hashCode\n     */\n     public static int hash(Object... values) {",
      "parent_sha": "8e1f9a0dd399f0fc81ea1b61eadb2097909206a5"
    }
  },
  {
    "oid": "c05fa375933253976ca5586022250f01019034ee",
    "message": "8132210: Reinforce JMX collector internals\n\nReviewed-by: jbachorik, ahgross",
    "date": "2015-09-08T06:34:35Z",
    "url": "https://github.com/openjdk/jdk/commit/c05fa375933253976ca5586022250f01019034ee",
    "details": {
      "sha": "fde7a0070dfd288bf333bd804088061b37c372d7",
      "filename": "jdk/src/jdk.management/share/classes/com/sun/management/internal/GarbageCollectorExtImpl.java",
      "status": "modified",
      "additions": 5,
      "deletions": 10,
      "changes": 15,
      "blob_url": "https://github.com/openjdk/jdk/blob/c05fa375933253976ca5586022250f01019034ee/jdk%2Fsrc%2Fjdk.management%2Fshare%2Fclasses%2Fcom%2Fsun%2Fmanagement%2Finternal%2FGarbageCollectorExtImpl.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/c05fa375933253976ca5586022250f01019034ee/jdk%2Fsrc%2Fjdk.management%2Fshare%2Fclasses%2Fcom%2Fsun%2Fmanagement%2Finternal%2FGarbageCollectorExtImpl.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Fsrc%2Fjdk.management%2Fshare%2Fclasses%2Fcom%2Fsun%2Fmanagement%2Finternal%2FGarbageCollectorExtImpl.java?ref=c05fa375933253976ca5586022250f01019034ee",
      "patch": "@@ -81,17 +81,12 @@ public GcInfo getLastGcInfo() {\n         GarbageCollectionNotificationInfo.GARBAGE_COLLECTION_NOTIFICATION\n     };\n \n-    private MBeanNotificationInfo[] notifInfo = null;\n     public MBeanNotificationInfo[] getNotificationInfo() {\n-        synchronized (this) {\n-            if (notifInfo == null) {\n-                 notifInfo = new MBeanNotificationInfo[1];\n-                 notifInfo[0] = new MBeanNotificationInfo(gcNotifTypes,\n-                                                          notifName,\n-                                                          \"GC Notification\");\n-            }\n-        }\n-        return notifInfo;\n+        return new MBeanNotificationInfo[]{\n+            new MBeanNotificationInfo(gcNotifTypes,\n+            notifName,\n+            \"GC Notification\")\n+        };\n     }\n \n     private static long seqNumber = 0;",
      "parent_sha": "3febcc8b758771cd37151fa4b7137d70c731536b"
    }
  },
  {
    "oid": "b54c4a33c69e16adf5b85b80b8deb4ded2ed074d",
    "message": "8299713: Test javax/swing/JTableHeader/6889007/bug6889007.java failed: Wrong type of cursor\n\nReviewed-by: serb, tr",
    "date": "2023-05-01T04:41:22Z",
    "url": "https://github.com/openjdk/jdk/commit/b54c4a33c69e16adf5b85b80b8deb4ded2ed074d",
    "details": {
      "sha": "cdceac1f9f2785872314607a0ce4c8577d8d18d9",
      "filename": "test/jdk/javax/swing/JTableHeader/6889007/bug6889007.java",
      "status": "modified",
      "additions": 59,
      "deletions": 24,
      "changes": 83,
      "blob_url": "https://github.com/openjdk/jdk/blob/b54c4a33c69e16adf5b85b80b8deb4ded2ed074d/test%2Fjdk%2Fjavax%2Fswing%2FJTableHeader%2F6889007%2Fbug6889007.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/b54c4a33c69e16adf5b85b80b8deb4ded2ed074d/test%2Fjdk%2Fjavax%2Fswing%2FJTableHeader%2F6889007%2Fbug6889007.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fjdk%2Fjavax%2Fswing%2FJTableHeader%2F6889007%2Fbug6889007.java?ref=b54c4a33c69e16adf5b85b80b8deb4ded2ed074d",
      "patch": "@@ -23,28 +23,42 @@\n \n /*\n    @test\n-  @key headful\n+   @key headful\n    @bug 6889007\n    @summary No resize cursor during hovering mouse over JTable\n-   @author Alexander Potochkin\n */\n \n-import javax.swing.*;\n+import java.awt.Cursor;\n+import java.awt.Dimension;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.Toolkit;\n+import java.awt.image.BufferedImage;\n+import javax.imageio.ImageIO;\n+import javax.swing.JFrame;\n import javax.swing.plaf.basic.BasicTableHeaderUI;\n import javax.swing.table.JTableHeader;\n-import java.awt.*;\n+import javax.swing.JTable;\n+import javax.swing.SwingUtilities;\n \n public class bug6889007 {\n \n+    static JFrame frame;\n+    static Robot robot;\n+    static volatile Point point;\n+    static volatile int width;\n+    static volatile int height;\n+\n     public static void main(String[] args) throws Exception {\n-        Robot robot = new Robot();\n-        robot.setAutoDelay(20);\n+        try {\n+            robot = new Robot();\n+            robot.setAutoDelay(100);\n \n-        final JFrame frame = new JFrame();\n-        frame.setUndecorated(true);\n+            SwingUtilities.invokeAndWait(() -> {\n+                frame = new JFrame();\n+                frame.setUndecorated(true);\n \n-        SwingUtilities.invokeAndWait(new Runnable() {\n-            public void run() {\n                 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n \n                 JTableHeader th = new JTableHeader();\n@@ -56,21 +70,33 @@ public void run() {\n                 frame.pack();\n                 frame.setLocationRelativeTo(null);\n                 frame.setVisible(true);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            SwingUtilities.invokeAndWait(() -> {\n+                point = frame.getLocationOnScreen();\n+                width = frame.getWidth();\n+                height = frame.getHeight();\n+            });\n+            int shift = 10;\n+            int x = point.x;\n+            int y = point.y + height/2;\n+            for(int i = -shift; i < width + 2*shift; i++) {\n+                robot.mouseMove(x++, y);\n+                robot.waitForIdle();\n             }\n-        });\n-        robot.waitForIdle();\n-        Point point = frame.getLocationOnScreen();\n-        int shift = 10;\n-        int x = point.x;\n-        int y = point.y + frame.getHeight()/2;\n-        for(int i = -shift; i < frame.getWidth() + 2*shift; i++) {\n-            robot.mouseMove(x++, y);\n-        }\n-        robot.waitForIdle();\n-        // 9 is a magic test number\n-        if (MyTableHeaderUI.getTestValue() != 9) {\n-            throw new RuntimeException(\"Unexpected test number \"\n-                    + MyTableHeaderUI.getTestValue());\n+            robot.waitForIdle();\n+            // 9 is a magic test number\n+            if (MyTableHeaderUI.getTestValue() != 9) {\n+                throw new RuntimeException(\"Unexpected test number \"\n+                        + MyTableHeaderUI.getTestValue());\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n         }\n         System.out.println(\"ok\");\n     }\n@@ -83,6 +109,15 @@ protected void rolloverColumnUpdated(int oldColumn, int newColumn) {\n             Cursor cursor = Cursor.getPredefinedCursor(Cursor.E_RESIZE_CURSOR);\n             if (oldColumn != -1 && newColumn != -1 &&\n                     header.getCursor() != cursor) {\n+                try {\n+                    Dimension screenSize =\n+                               Toolkit.getDefaultToolkit().getScreenSize();\n+                    Rectangle screen = new Rectangle(0, 0,\n+                                               (int) screenSize.getWidth(),\n+                                               (int) screenSize.getHeight());\n+                    BufferedImage img = robot.createScreenCapture(screen);\n+                    ImageIO.write(img, \"png\", new java.io.File(\"image.png\"));\n+                } catch (Exception e) {}\n                 throw new RuntimeException(\"Wrong type of cursor!\");\n             }\n         }",
      "parent_sha": "b3dbf28bc0614bee2f7137af95389134155c9511"
    }
  },
  {
    "oid": "4ea4d7c68444200ab38cbd76762c2f27848e264e",
    "message": "8336679: Add @implSpec for the default implementations in Process.waitFor()\n\nReviewed-by: bpb, jlu, liach",
    "date": "2024-07-24T16:48:34Z",
    "url": "https://github.com/openjdk/jdk/commit/4ea4d7c68444200ab38cbd76762c2f27848e264e",
    "details": {
      "sha": "af6753a236bb2d9aae9a9003c1bc1f9656fad497",
      "filename": "src/java.base/share/classes/java/lang/Process.java",
      "status": "modified",
      "additions": 14,
      "deletions": 8,
      "changes": 22,
      "blob_url": "https://github.com/openjdk/jdk/blob/4ea4d7c68444200ab38cbd76762c2f27848e264e/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2FProcess.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/4ea4d7c68444200ab38cbd76762c2f27848e264e/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2FProcess.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2FProcess.java?ref=4ea4d7c68444200ab38cbd76762c2f27848e264e",
      "patch": "@@ -442,10 +442,13 @@ public final BufferedWriter outputWriter(Charset charset) {\n      * terminated and the timeout value is less than, or equal to, zero, then\n      * this method returns immediately with the value {@code false}.\n      *\n-     * <p>The default implementation of this method polls the {@code exitValue}\n-     * to check if the process has terminated. Concrete implementations of this\n-     * class are strongly encouraged to override this method with a more\n-     * efficient implementation.\n+     * @implSpec\n+     * The default implementation of this method polls the {@code exitValue}\n+     * to check if the process has terminated.\n+     *\n+     * @implNote\n+     * Concrete implementations of this class are strongly encouraged to\n+     * override this method with a more efficient implementation.\n      *\n      * @param timeout the maximum time to wait\n      * @param unit the time unit of the {@code timeout} argument\n@@ -486,10 +489,13 @@ public boolean waitFor(long timeout, TimeUnit unit)\n      * terminated and the duration is not positive, then\n      * this method returns immediately with the value {@code false}.\n      *\n-     * <p>The default implementation of this method polls the {@code exitValue}\n-     * to check if the process has terminated. Concrete implementations of this\n-     * class are strongly encouraged to override this method with a more\n-     * efficient implementation.\n+     * @implSpec\n+     * The default implementation of this method polls the {@code exitValue}\n+     * to check if the process has terminated.\n+     *\n+     * @implNote\n+     * Concrete implementations of this class are strongly encouraged to\n+     * override this method with a more efficient implementation.\n      *\n      * @param duration the maximum duration to wait; if not positive,\n      *                this method returns immediately.",
      "parent_sha": "04e8cb8641bfdad717b368c087619905bccdf5e6"
    }
  },
  {
    "oid": "a80e3ed0ee72e396578df5bdfce82041780d8035",
    "message": "8033527: Fix raw type lint warning in sun.nio.ch\n\nReviewed-by: henryjen, mchung",
    "date": "2014-02-04T06:26:26Z",
    "url": "https://github.com/openjdk/jdk/commit/a80e3ed0ee72e396578df5bdfce82041780d8035",
    "details": {
      "sha": "fc5276c53c43f5a2813d5f329124c25901d63a81",
      "filename": "jdk/src/share/classes/sun/nio/ch/Reflect.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/openjdk/jdk/blob/a80e3ed0ee72e396578df5bdfce82041780d8035/jdk%2Fsrc%2Fshare%2Fclasses%2Fsun%2Fnio%2Fch%2FReflect.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/a80e3ed0ee72e396578df5bdfce82041780d8035/jdk%2Fsrc%2Fshare%2Fclasses%2Fsun%2Fnio%2Fch%2FReflect.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Fsrc%2Fshare%2Fclasses%2Fsun%2Fnio%2Fch%2FReflect.java?ref=a80e3ed0ee72e396578df5bdfce82041780d8035",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2000, 2011, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2014, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -75,7 +75,7 @@ static Object invoke(Constructor<?> c, Object[] args) {\n \n     static Method lookupMethod(String className,\n                                String methodName,\n-                               Class... paramTypes)\n+                               Class<?>... paramTypes)\n     {\n         try {\n             Class<?> cl = Class.forName(className);",
      "parent_sha": "c4f2b88d813409eff4a9a72358ccc260c429c29b"
    }
  },
  {
    "oid": "de9f3b6aac85edb39af67db887af78906e8d5da0",
    "message": "8296400: pointCrlIssuers might be null in DistributionPointFetcher::verifyURL\n\nReviewed-by: weijun",
    "date": "2023-03-10T14:10:41Z",
    "url": "https://github.com/openjdk/jdk/commit/de9f3b6aac85edb39af67db887af78906e8d5da0",
    "details": {
      "sha": "e2e3a1475ffc302a4816ed6a392c82c7e28072d5",
      "filename": "src/java.base/share/classes/sun/security/provider/certpath/DistributionPointFetcher.java",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/openjdk/jdk/blob/de9f3b6aac85edb39af67db887af78906e8d5da0/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fprovider%2Fcertpath%2FDistributionPointFetcher.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/de9f3b6aac85edb39af67db887af78906e8d5da0/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fprovider%2Fcertpath%2FDistributionPointFetcher.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fprovider%2Fcertpath%2FDistributionPointFetcher.java?ref=de9f3b6aac85edb39af67db887af78906e8d5da0",
      "patch": "@@ -430,7 +430,7 @@ static boolean verifyCRL(X509CertImpl certImpl, DistributionPoint point,\n                             debug.println(\"DP relativeName:\" + relativeName);\n                         }\n                         if (indirectCRL) {\n-                            if (pointCrlIssuers.size() != 1) {\n+                            if (pointCrlIssuers == null || pointCrlIssuers.size() != 1) {\n                                 // RFC 5280: there must be only 1 CRL issuer\n                                 // name when relativeName is present\n                                 if (debug != null) {\n@@ -439,6 +439,9 @@ static boolean verifyCRL(X509CertImpl certImpl, DistributionPoint point,\n                                 }\n                                 return false;\n                             }\n+                            // if pointCrlIssuers is not null, pointCrlIssuer\n+                            // will also be non-null or the code would have\n+                            // returned before now\n                             pointNames = getFullNames\n                                 (pointCrlIssuer, relativeName);\n                         } else {\n@@ -475,6 +478,9 @@ static boolean verifyCRL(X509CertImpl certImpl, DistributionPoint point,\n                     // verify that one of the names in the IDP matches one of\n                     // the names in the cRLIssuer of the cert's DP\n                     boolean match = false;\n+                    // the DP's fullName and relativeName fields are null\n+                    // which means pointCrlIssuers is non-null; the three\n+                    // cannot all be missing from a certificate.\n                     for (Iterator<GeneralName> t = pointCrlIssuers.iterator();\n                             !match && t.hasNext(); ) {\n                         GeneralNameInterface crlIssuerName = t.next().getName();",
      "parent_sha": "b9951dd63997b6330001311c925e171f4645a28b"
    }
  },
  {
    "oid": "7fb8379371e72df7829b3379bf9b5e40b9e08a24",
    "message": "8004068: Fix build problems caused by on-demand imports\n\nReviewed-by: jjg",
    "date": "2012-11-27T21:55:10Z",
    "url": "https://github.com/openjdk/jdk/commit/7fb8379371e72df7829b3379bf9b5e40b9e08a24",
    "details": {
      "sha": "1b91e85f74fa4f698068cacffe849277e62800d5",
      "filename": "langtools/src/share/classes/com/sun/tools/javac/code/Types.java",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/openjdk/jdk/blob/7fb8379371e72df7829b3379bf9b5e40b9e08a24/langtools%2Fsrc%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fcode%2FTypes.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/7fb8379371e72df7829b3379bf9b5e40b9e08a24/langtools%2Fsrc%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fcode%2FTypes.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/langtools%2Fsrc%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fcode%2FTypes.java?ref=7fb8379371e72df7829b3379bf9b5e40b9e08a24",
      "patch": "@@ -26,7 +26,13 @@\n package com.sun.tools.javac.code;\n \n import java.lang.ref.SoftReference;\n-import java.util.*;\n+import java.util.Comparator;\n+import java.util.HashSet;\n+import java.util.HashMap;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.WeakHashMap;\n \n import com.sun.tools.javac.code.Attribute.RetentionPolicy;\n import com.sun.tools.javac.code.Lint.LintCategory;",
      "parent_sha": "1d4cbc27ff4d531b023f33c50fe9214eac9fa45b"
    }
  },
  {
    "oid": "9f4cbe2ea9be896f2ccc18727bb0054698b96e1e",
    "message": "7016542: NLS: obsolete resources in MsgAppletViewer.java should be removed\n\nReviewed-by: igor",
    "date": "2011-03-05T22:10:16Z",
    "url": "https://github.com/openjdk/jdk/commit/9f4cbe2ea9be896f2ccc18727bb0054698b96e1e",
    "details": {
      "sha": "af1f3d5a60994b60ee67e9d9760de166c6efaff8",
      "filename": "jdk/src/share/classes/sun/applet/resources/MsgAppletViewer.java",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/openjdk/jdk/blob/9f4cbe2ea9be896f2ccc18727bb0054698b96e1e/jdk%2Fsrc%2Fshare%2Fclasses%2Fsun%2Fapplet%2Fresources%2FMsgAppletViewer.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/9f4cbe2ea9be896f2ccc18727bb0054698b96e1e/jdk%2Fsrc%2Fshare%2Fclasses%2Fsun%2Fapplet%2Fresources%2FMsgAppletViewer.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Fsrc%2Fshare%2Fclasses%2Fsun%2Fapplet%2Fresources%2FMsgAppletViewer.java?ref=9f4cbe2ea9be896f2ccc18727bb0054698b96e1e",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1996, 2010, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2011, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -103,7 +103,6 @@ public Object[][] getContents() {\n             {\"appletclassloader.fileexception\", \"{0} exception when loading: {1}\"},\n             {\"appletclassloader.filedeath\", \"{0} killed when loading: {1}\"},\n             {\"appletclassloader.fileerror\", \"{0} error when loading: {1}\"},\n-            {\"appletclassloader.findclass.verbose.findclass\", \"{0} find class {1}\"},\n             {\"appletclassloader.findclass.verbose.openstream\", \"Opening stream to: {0} to get {1}\"},\n             {\"appletclassloader.getresource.verbose.forname\", \"AppletClassLoader.getResource for name: {0}\"},\n             {\"appletclassloader.getresource.verbose.found\", \"Found resource: {0} as a system resource\"},",
      "parent_sha": "96741fdfe349ebf36fb4cf6e9d9e49147dd494bd"
    }
  },
  {
    "oid": "b7eb4e2ffd3bce12fd960ab8102bfaabf89e8865",
    "message": "8297306: Incorrect brackets in Javadoc for a constructor of IteratorSpliterator\n\nReviewed-by: alanb, iris, naoto",
    "date": "2023-01-10T01:53:48Z",
    "url": "https://github.com/openjdk/jdk/commit/b7eb4e2ffd3bce12fd960ab8102bfaabf89e8865",
    "details": {
      "sha": "48633e4caf046eb5484887fc92d6a17605231217",
      "filename": "src/java.base/share/classes/java/util/Spliterators.java",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/openjdk/jdk/blob/b7eb4e2ffd3bce12fd960ab8102bfaabf89e8865/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Futil%2FSpliterators.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/b7eb4e2ffd3bce12fd960ab8102bfaabf89e8865/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Futil%2FSpliterators.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Futil%2FSpliterators.java?ref=b7eb4e2ffd3bce12fd960ab8102bfaabf89e8865",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2013, 2022, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -399,8 +399,8 @@ private static void checkFromToBounds(int arrayLength, int origin, int fence) {\n \n     /**\n      * Creates a {@code Spliterator} using the given collection's\n-     * {@link java.util.Collection#iterator()} as the source of elements, and\n-     * reporting its {@link java.util.Collection#size()} as its initial size.\n+     * {@link java.util.Collection#iterator() iterator} as the source of elements, and\n+     * reporting its {@link java.util.Collection#size() size} as its initial size.\n      *\n      * <p>The spliterator is\n      * <em><a href=\"Spliterator.html#binding\">late-binding</a></em>, inherits\n@@ -1817,11 +1817,11 @@ static class IteratorSpliterator<T> implements Spliterator<T> {\n \n         /**\n          * Creates a spliterator using the given\n-         * collection's {@link java.util.Collection#iterator()) for traversal,\n-         * and reporting its {@link java.util.Collection#size()) as its initial\n+         * collection's {@link java.util.Collection#iterator() iterator} for traversal,\n+         * and reporting its {@link java.util.Collection#size() size} as its initial\n          * size.\n          *\n-         * @param c the collection\n+         * @param collection the collection\n          * @param characteristics properties of this spliterator's\n          *        source or elements.\n          */",
      "parent_sha": "a63866341ee8d169bdf88cf56f5d72168263fa81"
    }
  },
  {
    "oid": "a437ce839f749dab8c42611e0190ece5bea5d255",
    "message": "8268580: runtime/memory/LargePages/TestLargePagesFlags.java should be run in driver mode\n\nReviewed-by: dholmes",
    "date": "2021-06-11T05:05:23Z",
    "url": "https://github.com/openjdk/jdk/commit/a437ce839f749dab8c42611e0190ece5bea5d255",
    "details": {
      "sha": "3d70740c1c2a50ecb76fca1c870d18a98fdaccad",
      "filename": "test/hotspot/jtreg/runtime/memory/LargePages/TestLargePagesFlags.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/openjdk/jdk/blob/a437ce839f749dab8c42611e0190ece5bea5d255/test%2Fhotspot%2Fjtreg%2Fruntime%2Fmemory%2FLargePages%2FTestLargePagesFlags.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/a437ce839f749dab8c42611e0190ece5bea5d255/test%2Fhotspot%2Fjtreg%2Fruntime%2Fmemory%2FLargePages%2FTestLargePagesFlags.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fhotspot%2Fjtreg%2Fruntime%2Fmemory%2FLargePages%2FTestLargePagesFlags.java?ref=a437ce839f749dab8c42611e0190ece5bea5d255",
      "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2013, 2018, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -28,7 +28,7 @@\n  * @library /test/lib\n  * @modules java.base/jdk.internal.misc\n  *          java.management\n- * @run main TestLargePagesFlags\n+ * @run driver TestLargePagesFlags\n  */\n \n import jdk.test.lib.process.OutputAnalyzer;",
      "parent_sha": "bd9c2fa73b61d2461fc44b6056437aee294c9082"
    }
  },
  {
    "oid": "c4dfaa37a2f4b25378114d34be473c34894397cf",
    "message": "8026951: Fix for 8025988 breaks jdk build on windows\n\nReviewed-by: prr, jchen",
    "date": "2013-10-21T20:18:58Z",
    "url": "https://github.com/openjdk/jdk/commit/c4dfaa37a2f4b25378114d34be473c34894397cf",
    "details": {
      "sha": "ca5f8a74cd71bdfc069c31b04873d166e132cb95",
      "filename": "jdk/src/share/classes/sun/print/RasterPrinterJob.java",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/openjdk/jdk/blob/c4dfaa37a2f4b25378114d34be473c34894397cf/jdk%2Fsrc%2Fshare%2Fclasses%2Fsun%2Fprint%2FRasterPrinterJob.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/c4dfaa37a2f4b25378114d34be473c34894397cf/jdk%2Fsrc%2Fshare%2Fclasses%2Fsun%2Fprint%2FRasterPrinterJob.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/jdk%2Fsrc%2Fshare%2Fclasses%2Fsun%2Fprint%2FRasterPrinterJob.java?ref=c4dfaa37a2f4b25378114d34be473c34894397cf",
      "patch": "@@ -120,12 +120,12 @@ public abstract class RasterPrinterJob extends PrinterJob {\n     /**\n      * Pageable MAX pages\n      */\n-    private static final int MAX_UNKNOWN_PAGES = 9999;\n+    protected static final int MAX_UNKNOWN_PAGES = 9999;\n \n-    private static final int PD_ALLPAGES = 0x00000000;\n-    private static final int PD_SELECTION = 0x00000001;\n-    private static final int PD_PAGENUMS = 0x00000002;\n-    private static final int PD_NOSELECTION = 0x00000004;\n+    protected static final int PD_ALLPAGES = 0x00000000;\n+    protected static final int PD_SELECTION = 0x00000001;\n+    protected static final int PD_PAGENUMS = 0x00000002;\n+    protected static final int PD_NOSELECTION = 0x00000004;\n \n     /**\n      * Maximum amount of memory in bytes to use for the\n@@ -1780,7 +1780,7 @@ protected boolean isCollated() {\n             return mCollate;\n     }\n \n-    private final int getSelectAttrib() {\n+    protected final int getSelectAttrib() {\n         if (attributes != null) {\n             SunPageSelection pages =\n                 (SunPageSelection)attributes.get(SunPageSelection.class);\n@@ -1796,7 +1796,7 @@ private final int getSelectAttrib() {\n     }\n \n     //returns 1-based index for \"From\" page\n-    private final int getFromPageAttrib() {\n+    protected final int getFromPageAttrib() {\n         if (attributes != null) {\n             PageRanges pageRangesAttr =\n                 (PageRanges)attributes.get(PageRanges.class);\n@@ -1809,7 +1809,7 @@ private final int getFromPageAttrib() {\n     }\n \n     //returns 1-based index for \"To\" page\n-    private final int getToPageAttrib() {\n+    protected final int getToPageAttrib() {\n         if (attributes != null) {\n             PageRanges pageRangesAttr =\n                 (PageRanges)attributes.get(PageRanges.class);\n@@ -1821,7 +1821,7 @@ private final int getToPageAttrib() {\n         return getMaxPageAttrib();\n     }\n \n-    private final int getMinPageAttrib() {\n+    protected final int getMinPageAttrib() {\n         if (attributes != null) {\n             SunMinMaxPage s =\n                 (SunMinMaxPage)attributes.get(SunMinMaxPage.class);\n@@ -1832,7 +1832,7 @@ private final int getMinPageAttrib() {\n         return 1;\n     }\n \n-    private final int getMaxPageAttrib() {\n+    protected final int getMaxPageAttrib() {\n         if (attributes != null) {\n             SunMinMaxPage s =\n                 (SunMinMaxPage)attributes.get(SunMinMaxPage.class);",
      "parent_sha": "fbb6fe55430240e48597b96107add9b35ce725df"
    }
  },
  {
    "oid": "4f8f395e2bb692148e2b891198f28a579749dd6d",
    "message": "8343060: RISC-V: enable TestFloat16VectorConvChain for riscv\n\nReviewed-by: fyang",
    "date": "2024-10-25T14:28:01Z",
    "url": "https://github.com/openjdk/jdk/commit/4f8f395e2bb692148e2b891198f28a579749dd6d",
    "details": {
      "sha": "a2ff267f937aed08721f600af52b7a33bfd01765",
      "filename": "test/hotspot/jtreg/compiler/vectorization/TestFloat16VectorConvChain.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/openjdk/jdk/blob/4f8f395e2bb692148e2b891198f28a579749dd6d/test%2Fhotspot%2Fjtreg%2Fcompiler%2Fvectorization%2FTestFloat16VectorConvChain.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/4f8f395e2bb692148e2b891198f28a579749dd6d/test%2Fhotspot%2Fjtreg%2Fcompiler%2Fvectorization%2FTestFloat16VectorConvChain.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Fhotspot%2Fjtreg%2Fcompiler%2Fvectorization%2FTestFloat16VectorConvChain.java?ref=4f8f395e2bb692148e2b891198f28a579749dd6d",
      "patch": "@@ -25,7 +25,7 @@\n * @test\n * @summary Test Float16 vector conversion chain.\n * @requires (vm.cpu.features ~= \".*avx512vl.*\" | vm.cpu.features ~= \".*f16c.*\") | os.arch == \"aarch64\"\n-*           | (os.arch == \"riscv64\" & vm.cpu.features ~= \".*zfh.*\")\n+*           | (os.arch == \"riscv64\" & vm.cpu.features ~= \".*zvfh.*\")\n * @library /test/lib /\n * @run driver compiler.vectorization.TestFloat16VectorConvChain\n */\n@@ -40,7 +40,7 @@\n public class TestFloat16VectorConvChain {\n \n     @Test\n-    @IR(applyIfCPUFeatureOr = {\"f16c\", \"true\", \"avx512vl\", \"true\"}, counts = {IRNode.VECTOR_CAST_HF2F, IRNode.VECTOR_SIZE_ANY, \">= 1\", IRNode.VECTOR_CAST_F2HF, IRNode.VECTOR_SIZE_ANY, \" >= 1\"})\n+    @IR(applyIfCPUFeatureOr = {\"f16c\", \"true\", \"avx512vl\", \"true\", \"zvfh\", \"true\"}, counts = {IRNode.VECTOR_CAST_HF2F, IRNode.VECTOR_SIZE_ANY, \">= 1\", IRNode.VECTOR_CAST_F2HF, IRNode.VECTOR_SIZE_ANY, \" >= 1\"})\n     public static void test(short [] res, short [] src1, short [] src2) {\n         for (int i = 0; i < res.length; i++) {\n             res[i] = (short)Float.float16ToFloat(Float.floatToFloat16(Float.float16ToFloat(src1[i]) + Float.float16ToFloat(src2[i])));",
      "parent_sha": "a9eb50a2d8341b454c55c2f56446775c497ddde9"
    }
  },
  {
    "oid": "bcb804f07f290e70fe0e2a243f98aec7a3ec0497",
    "message": "8238710: LingeredApp doesn't log stdout/stderr if exits with non-zero code\n\nReviewed-by: cjplummer, sspitsyn",
    "date": "2020-02-13T21:43:09Z",
    "url": "https://github.com/openjdk/jdk/commit/bcb804f07f290e70fe0e2a243f98aec7a3ec0497",
    "details": {
      "sha": "2ad08bfd769a1dbc475309bdaf74035c0c3d1a35",
      "filename": "test/lib/jdk/test/lib/apps/LingeredApp.java",
      "status": "modified",
      "additions": 11,
      "deletions": 7,
      "changes": 18,
      "blob_url": "https://github.com/openjdk/jdk/blob/bcb804f07f290e70fe0e2a243f98aec7a3ec0497/test%2Flib%2Fjdk%2Ftest%2Flib%2Fapps%2FLingeredApp.java",
      "raw_url": "https://github.com/openjdk/jdk/raw/bcb804f07f290e70fe0e2a243f98aec7a3ec0497/test%2Flib%2Fjdk%2Ftest%2Flib%2Fapps%2FLingeredApp.java",
      "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test%2Flib%2Fjdk%2Ftest%2Flib%2Fapps%2FLingeredApp.java?ref=bcb804f07f290e70fe0e2a243f98aec7a3ec0497",
      "patch": "@@ -357,13 +357,15 @@ public void runApp(String[] vmArguments)\n     }\n \n     private void finishApp() {\n-        OutputBuffer output = getOutput();\n-        String msg =\n-            \" LingeredApp stdout: [\" + output.getStdout() + \"];\\n\" +\n-            \" LingeredApp stderr: [\" + output.getStderr() + \"]\\n\" +\n-            \" LingeredApp exitValue = \" + appProcess.exitValue();\n+        if (appProcess != null) {\n+            OutputBuffer output = getOutput();\n+            String msg =\n+                    \" LingeredApp stdout: [\" + output.getStdout() + \"];\\n\" +\n+                    \" LingeredApp stderr: [\" + output.getStderr() + \"]\\n\" +\n+                    \" LingeredApp exitValue = \" + appProcess.exitValue();\n \n-        System.err.println(msg);\n+            System.err.println(msg);\n+        }\n     }\n \n     /**\n@@ -377,12 +379,14 @@ public void stopApp() throws IOException {\n         // an exception before the LA actually starts\n         if (appProcess != null) {\n             waitAppTerminate();\n+\n+            finishApp();\n+\n             int exitcode = appProcess.exitValue();\n             if (exitcode != 0) {\n                 throw new IOException(\"LingeredApp terminated with non-zero exit code \" + exitcode);\n             }\n         }\n-        finishApp();\n     }\n \n     /**",
      "parent_sha": "b72e31b39f8fc67a367ccc679586a7d8861f6f22"
    }
  }
]