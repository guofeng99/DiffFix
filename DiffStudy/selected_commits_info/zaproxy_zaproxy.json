[
  {
    "oid": "c658e37e3a4a2cc9224a59c033b2bd6324405ded",
    "message": "AlertViewPanel: Remove instantiation of unused ZapTextArea",
    "date": "2015-05-05T02:26:11Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/c658e37e3a4a2cc9224a59c033b2bd6324405ded",
    "details": {
      "sha": "90c018e6441a943c013d668edc271c329ae10d0b",
      "filename": "src/org/zaproxy/zap/extension/alert/AlertViewPanel.java",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/c658e37e3a4a2cc9224a59c033b2bd6324405ded/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Falert%2FAlertViewPanel.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/c658e37e3a4a2cc9224a59c033b2bd6324405ded/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Falert%2FAlertViewPanel.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Falert%2FAlertViewPanel.java?ref=c658e37e3a4a2cc9224a59c033b2bd6324405ded",
      "patch": "@@ -143,8 +143,7 @@ private JScrollPane getAlertPane() {\n \t}\r\n \t\r\n \tprivate ZapTextArea createZapTextArea() {\r\n-\t\tZapTextArea ZapTextArea = new ZapTextArea();\r\n-\t\tZapTextArea = new ZapTextArea(3, 30);\r\n+\t\tZapTextArea ZapTextArea = new ZapTextArea(3, 30);\r\n \t\tZapTextArea.setLineWrap(true);\r\n \t\tZapTextArea.setWrapStyleWord(true);\r\n \t\tZapTextArea.setEditable(editable);\r",
      "parent_sha": "fad38cc6a5a931ebd33bb1e265793f929c2ed79d"
    }
  },
  {
    "oid": "5df9fb2b5135ac6bfc0d35004a0f43542ad67118",
    "message": "Change attack mode thread to daemon\n\nChange the thread used for the attack mode to be a daemon thread, to not\nprevent ZAP from terminating normally. For example, if the attack mode\nwas enabled while starting ZAP (in daemon mode) and ZAP was not able to\nbind to the address/port it would be kept running instead of\nterminating.",
    "date": "2016-11-07T16:27:59Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/5df9fb2b5135ac6bfc0d35004a0f43542ad67118",
    "details": {
      "sha": "7719ef37c680ad0951ae6c9ba503dc4d434c73fc",
      "filename": "src/org/zaproxy/zap/extension/ascan/AttackModeScanner.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/5df9fb2b5135ac6bfc0d35004a0f43542ad67118/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fascan%2FAttackModeScanner.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/5df9fb2b5135ac6bfc0d35004a0f43542ad67118/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fascan%2FAttackModeScanner.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fascan%2FAttackModeScanner.java?ref=5df9fb2b5135ac6bfc0d35004a0f43542ad67118",
      "patch": "@@ -89,8 +89,8 @@ public void start() {\n \t\t\tattackModeThread.shutdown();\n \t\t}\n \t\tattackModeThread = new AttackModeThread();\n-\t\tThread t = new Thread(attackModeThread);\n-\t\tt.setName(\"ZAP-AttackMode\");\n+\t\tThread t = new Thread(attackModeThread, \"ZAP-AttackMode\");\n+\t\tt.setDaemon(true);\n \t\tt.start();\n \t\t\n \t}",
      "parent_sha": "6fa4d8a54acc83769744ae6501c2e5800df499d3"
    }
  },
  {
    "oid": "03aa0a0e29c851a815c962eea36c06817ce637f5",
    "message": "Changed encoding for VariantURLPath sot hat it can manage correctly the space character (using the java.net.URI class)",
    "date": "2014-02-10T23:04:25Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/03aa0a0e29c851a815c962eea36c06817ce637f5",
    "details": {
      "sha": "df04209ca97854c21c9bf38aabccff8436a3ab96",
      "filename": "src/org/parosproxy/paros/core/scanner/VariantURLPath.java",
      "status": "modified",
      "additions": 16,
      "deletions": 6,
      "changes": 22,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/03aa0a0e29c851a815c962eea36c06817ce637f5/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fscanner%2FVariantURLPath.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/03aa0a0e29c851a815c962eea36c06817ce637f5/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fscanner%2FVariantURLPath.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fscanner%2FVariantURLPath.java?ref=03aa0a0e29c851a815c962eea36c06817ce637f5",
      "patch": "@@ -21,10 +21,10 @@\n \r\n import java.util.ArrayList;\r\n import java.util.List;\r\n-\r\n+import org.apache.commons.codec.DecoderException;\r\n+import org.apache.commons.codec.net.URLCodec;\r\n import org.apache.commons.httpclient.URI;\r\n import org.apache.commons.httpclient.URIException;\r\n-import org.apache.commons.httpclient.util.URIUtil;\r\n import org.apache.commons.lang.StringUtils;\r\n import org.apache.log4j.Logger;\r\n import org.parosproxy.paros.network.HttpMessage;\r\n@@ -115,9 +115,9 @@ public String setEscapedParameter(HttpMessage msg, NameValuePair originalPair, S\n     private String getEscapedValue(String value) {\r\n         if (value != null) {\r\n             try {\r\n-                return URIUtil.encodePath(value);\r\n+                return (new URI(null, null, value, null)).toString();\r\n                 \r\n-            } catch (URIException ex) {}         \r\n+            } catch (URIException ex) { }            \r\n         }\r\n         \r\n         return \"\";\r\n@@ -131,9 +131,9 @@ private String getEscapedValue(String value) {\n     private String getUnescapedValue(String value) {\r\n         if (value != null) {\r\n             try {\r\n-                return URIUtil.decode(value);\r\n+                return (new URLCodec()).decode(value);\r\n                 \r\n-            } catch (URIException ex) {}         \r\n+            } catch (DecoderException ex) {}         \r\n         }\r\n         \r\n         return \"\";\r\n@@ -175,4 +175,14 @@ private String setParameter(HttpMessage msg, NameValuePair originalPair, String\n         \r\n         return value;\r\n     }\r\n+    \r\n+    /*\r\n+    public static void main(String[] args) {\r\n+        VariantURLPath var = new VariantURLPath();\r\n+        String value = var.getEscapedValue(\"prova +codifica+ strana\");\r\n+        System.out.println(value);\r\n+        String res = var.getUnescapedValue(value);\r\n+        System.out.println(res);\r\n+    }\r\n+    */\r\n }\r",
      "parent_sha": "1bec15d7d0b92e918d33c9cd3b8e932299f44639"
    }
  },
  {
    "oid": "66894f19af2930adbf21d6756af115564d104d26",
    "message": "Fallback to bundled Messages file\n\nIf the resource is missing in the Messages from the file system use the\none bundled in the JAR to avoid missing messages/errors if the file\nsystem file is outdated (e.g. use of older Core Language Files add-on).\n\nSigned-off-by: thc202 <thc202@gmail.com>",
    "date": "2019-05-20T08:10:54Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/66894f19af2930adbf21d6756af115564d104d26",
    "details": {
      "sha": "e959296e742432c8cc650e6585faf63b955e52d0",
      "filename": "src/org/zaproxy/zap/utils/I18N.java",
      "status": "modified",
      "additions": 26,
      "deletions": 2,
      "changes": 28,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/66894f19af2930adbf21d6756af115564d104d26/src%2Forg%2Fzaproxy%2Fzap%2Futils%2FI18N.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/66894f19af2930adbf21d6756af115564d104d26/src%2Forg%2Fzaproxy%2Fzap%2Futils%2FI18N.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Futils%2FI18N.java?ref=66894f19af2930adbf21d6756af115564d104d26",
      "patch": "@@ -27,6 +27,14 @@ public class I18N {\n \t */\n \n     private ResourceBundle stdMessages = null;\n+    /**\n+     * Fallback resource bundle for when a resource is missing in the file system resource bundle.\n+     * <p>\n+     * It uses the resource bundled in the JAR.\n+     * \n+     * @see #loadBundledResourceBundle(ZapResourceBundleControl)\n+     */\n+    private ResourceBundle fallbackStdMessages;\n     private Locale locale = null;\n     private Map<String, ResourceBundle> addonMessages = new HashMap<>();\n \n@@ -148,7 +156,14 @@ private String getStringImpl(String key) {\n     \t\t\treturn bundle.getString(key);\n     \t\t}\n     \t}\n-    \treturn this.stdMessages.getString(key);\n+        try {\n+            return this.stdMessages.getString(key);\n+        } catch (MissingResourceException e) {\n+            if (fallbackStdMessages != null) {\n+                return fallbackStdMessages.getString(key);\n+            }\n+            throw e;\n+        }\n     }\n \n     /**\n@@ -200,8 +215,13 @@ public void setLocale (Locale locale) {\n         if (fsRb != null) {\n             this.stdMessages = fsRb;\n             logger.debug(\"Using file system Messages resource bundle.\");\n+            try {\n+                this.fallbackStdMessages = loadBundledResourceBundle(rbc);\n+            } catch (MissingResourceException e) {\n+                logger.warn(\"Failed to find bundled Messages resource bundle.\");\n+            }\n         } else {\n-            this.stdMessages = loadResourceBundle(\"org.zaproxy.zap.resources.\" + Constant.MESSAGES_PREFIX, rbc);\n+            this.stdMessages = loadBundledResourceBundle(rbc);\n             logger.debug(\"Using bundled Messages resource bundle.\");\n         }\n     }\n@@ -220,6 +240,10 @@ private ResourceBundle loadFsResourceBundle(ZapResourceBundleControl rbc) {\n         return null;\n     }\n \n+    private ResourceBundle loadBundledResourceBundle(ZapResourceBundleControl rbc) {\n+        return loadResourceBundle(\"org.zaproxy.zap.resources.\" + Constant.MESSAGES_PREFIX, rbc);\n+    }\n+\n     private ResourceBundle loadResourceBundle(String path, ZapResourceBundleControl rbc) {\n         return loadResourceBundle(path, getClass().getClassLoader(), rbc);\n     }",
      "parent_sha": "91a52cb1594acf8372db5ca0681c0da086c521ea"
    }
  },
  {
    "oid": "05e3b47090cf98958a194d4edaf87c975dd4004c",
    "message": "Issue 730 - MissingResourceException while selecting a disabled extension (from an add-on) in the \"Extensions\" options panel\n\n - Changed to load the extension's messages even if the extension is disabled since they are needed to show the extension's description (in the \"Options\" > \"Extensions\" panel);\n - Extracted a method that loads the messages, adds the extension and loads the help set.",
    "date": "2013-07-14T02:25:16Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/05e3b47090cf98958a194d4edaf87c975dd4004c",
    "details": {
      "sha": "1c8c77f89dd8f72f08f4af262afe6acd9267bc01",
      "filename": "src/org/zaproxy/zap/control/ExtensionFactory.java",
      "status": "modified",
      "additions": 21,
      "deletions": 9,
      "changes": 30,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/05e3b47090cf98958a194d4edaf87c975dd4004c/src%2Forg%2Fzaproxy%2Fzap%2Fcontrol%2FExtensionFactory.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/05e3b47090cf98958a194d4edaf87c975dd4004c/src%2Forg%2Fzaproxy%2Fzap%2Fcontrol%2FExtensionFactory.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fcontrol%2FExtensionFactory.java?ref=05e3b47090cf98958a194d4edaf87c975dd4004c",
      "patch": "@@ -120,23 +120,37 @@ public static synchronized void loadAllExtension(ExtensionLoader extensionLoader\n             \tExtension ext = mapOrderToExtension.get(order);\r\n             \tif (ext.isEnabled()) {\r\n             \t\tlog.debug(\"Ordered extension \" + order + \" \" + ext.getName());\r\n-            \t\textensionLoader.addExtension(ext);\r\n-            \t\tloadMessages(ext);\r\n-            \t\tintitializeHelpSet(ext);\r\n             \t}\r\n+            \tloadMessagesAndAddExtension(extensionLoader, ext);\r\n             }\r\n             // And then the unordered ones\r\n             for (Extension ext : unorderedExtensions) {\r\n             \tif (ext.isEnabled()) {\r\n             \t\tlog.debug(\"Unordered extension \" + ext.getName());\r\n-            \t\textensionLoader.addExtension(ext);\r\n-            \t\tloadMessages(ext);\r\n-            \t\tintitializeHelpSet(ext);\r\n             \t}\r\n+            \tloadMessagesAndAddExtension(extensionLoader, ext);\r\n             }\r\n         }\r\n     }\r\n \r\n+    /**\r\n+     * Loads the messages of the {@code extension} and, if enabled, adds it to the {@code extensionLoader} and loads the\r\n+     * extension's help set.\r\n+     * \r\n+     * @param extensionLoader the extension loader\r\n+     * @param extension the extension\r\n+     * @see #loadMessages(Extension)\r\n+     * @see ExtensionLoader#addExtension(Extension)\r\n+     * @see #intitializeHelpSet(Extension)\r\n+     */\r\n+    private static void loadMessagesAndAddExtension(ExtensionLoader extensionLoader, Extension extension) {\r\n+        loadMessages(extension);\r\n+        if (extension.isEnabled()) {\r\n+            extensionLoader.addExtension(extension);\r\n+            intitializeHelpSet(extension);\r\n+        }\r\n+    }\r\n+\r\n     public static synchronized List<Extension> loadAddOnExtensions(ExtensionLoader extensionLoader, Configuration config, AddOn addOn) {\r\n        \tList<Extension> listExts = getAddOnLoader().getImplementors(addOn, \"org.zaproxy.zap.extension\", Extension.class);\r\n \t\tlistExts.addAll(getAddOnLoader().getImplementors(addOn, \"org.parosproxy.paros.extension\", Extension.class));\r\n@@ -185,10 +199,8 @@ public static synchronized List<Extension> loadAddOnExtensions(ExtensionLoader e\n             for (Extension ext : listExts) {\r\n             \tif (ext.isEnabled()) {\r\n             \t\tlog.debug(\"Adding new extension \" + ext.getName());\r\n-            \t\textensionLoader.addExtension(ext);\r\n-            \t\tloadMessages(ext);\r\n-            \t\tintitializeHelpSet(ext);\r\n             \t}\r\n+            \tloadMessagesAndAddExtension(extensionLoader, ext);\r\n             }\r\n         }\r\n         return listExts;\r",
      "parent_sha": "45d1c9362aec2dd2f54f5458a7787ed8af0ab51a"
    }
  },
  {
    "oid": "600893c33994f36c75f84c0b5ed81cc506e47d2b",
    "message": "Set a name to all CFU related threads\n\nChange ExtensionAutoUpdate to set a name to one of the threads (last one\nthat didn't have a meaningful name) and change other to set the name\nwhen creating the thread instead of setting it.",
    "date": "2017-12-14T23:11:18Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/600893c33994f36c75f84c0b5ed81cc506e47d2b",
    "details": {
      "sha": "02e718017e63493724fa72e95c46da19913bf949",
      "filename": "src/org/zaproxy/zap/extension/autoupdate/ExtensionAutoUpdate.java",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/600893c33994f36c75f84c0b5ed81cc506e47d2b/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fautoupdate%2FExtensionAutoUpdate.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/600893c33994f36c75f84c0b5ed81cc506e47d2b/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fautoupdate%2FExtensionAutoUpdate.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fautoupdate%2FExtensionAutoUpdate.java?ref=600893c33994f36c75f84c0b5ed81cc506e47d2b",
      "patch": "@@ -420,7 +420,7 @@ private void downloadFile (URL url, File targetFile, long size, String hash) {\n \t\t\t\tthis.downloadProgressThread = null;\n \t\t\t}\n \t\t\tif (this.downloadProgressThread == null) {\n-\t\t\t\tthis.downloadProgressThread = new Thread() {\n+\t\t\t\tthis.downloadProgressThread = new Thread(\"ZAP-DownloadInstaller\") {\n \t\t\t\t\t@Override\n \t\t\t\t\tpublic void run() {\n \t\t\t\t\t\twhile (downloadManager.getCurrentDownloadCount() > 0) {\n@@ -933,13 +933,12 @@ protected AddOnCollection getLatestVersionInfo (final CheckForUpdateCallback cal\n     \tif (latestVersionInfo == null) {\n     \t\t\n     \t\tif (this.remoteCallThread == null || !this.remoteCallThread.isAlive()) {\n-    \t\t\tthis.remoteCallThread = new Thread() {\n+    \t\t\tthis.remoteCallThread = new Thread(\"ZAP-cfu\") {\n     \t\t\t\n \t    \t\t\t@Override\n \t    \t\t\tpublic void run() {\n \t    \t\t\t\t// Using a thread as the first call could timeout\n \t    \t\t\t\t// and we dont want the ui to hang in the meantime\n-\t    \t\t\t\tthis.setName(\"ZAP-cfu\");\n \t\t\t\t\t\tString shortUrl;\n \t\t\t\t\t\tString longUrl;\n \t\t\t\t\t\tif (Constant.isDevBuild()) {",
      "parent_sha": "e0758b011fc86077efa9a3c804e17f191c747a06"
    }
  },
  {
    "oid": "1fc795faecc175127389c2804d3797c62486e3ab",
    "message": "Do not start the next plugin if scan paused\n\nChange HostProcess to not start the following plugin while the scanner\nis paused, also, check if the scan is paused before starting the scan of\nnew message by the current plugin.",
    "date": "2017-06-16T08:55:48Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/1fc795faecc175127389c2804d3797c62486e3ab",
    "details": {
      "sha": "99427049d8e154bfb07d6b327ede13e8bf48c3f9",
      "filename": "src/org/parosproxy/paros/core/scanner/HostProcess.java",
      "status": "modified",
      "additions": 19,
      "deletions": 7,
      "changes": 26,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/1fc795faecc175127389c2804d3797c62486e3ab/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fscanner%2FHostProcess.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/1fc795faecc175127389c2804d3797c62486e3ab/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fscanner%2FHostProcess.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fscanner%2FHostProcess.java?ref=1fc795faecc175127389c2804d3797c62486e3ab",
      "patch": "@@ -70,6 +70,7 @@\n // ZAP: 2017/06/07 Scan just one node with AbstractHostPlugin (they apply to the whole host not individual messages).\r\n // ZAP: 2017/06/08 Collect messages to be scanned.\r\n // ZAP: 2017/06/15 Initialise the plugin factory immediately after starting the scan.\r\n+// ZAP: 2017/06/15 Do not start following plugin if the scanner is paused.\r\n \r\n package org.parosproxy.paros.core.scanner;\r\n \r\n@@ -271,6 +272,11 @@ public void run() {\n             Plugin plugin;\r\n             \r\n             while (!isStop() && pluginFactory.existPluginToRun()) {\r\n+                checkPause();\r\n+                if (isStop()) {\r\n+                    break;\r\n+                }\r\n+\r\n                 plugin = pluginFactory.nextPlugin();\r\n                 \r\n                 if (plugin != null) {\r\n@@ -330,6 +336,8 @@ private void processPlugin(final Plugin plugin) {\n                 + \" strength \" + plugin.getAttackStrength() + \" threshold \" + plugin.getAlertThreshold());\r\n         \r\n         if (plugin instanceof AbstractHostPlugin) {\r\n+            checkPause();\r\n+\r\n             if (messageIdToHostScan == -1 || isStop() || isSkipped(plugin) || !scanMessage(plugin, messageIdToHostScan)) {\r\n                 // Mark the plugin as completed if it was not run so the scan process can continue as expected.\r\n                 // The plugin might not be run, for example, if there was an error reading the message form DB.\r\n@@ -339,6 +347,8 @@ private void processPlugin(final Plugin plugin) {\n         } else if (plugin instanceof AbstractAppPlugin) {\r\n             try {\r\n                 for (int messageId : messagesIdsToAppScan) {\r\n+                    checkPause();\r\n+\r\n                     if (isStop() || isSkipped(plugin)) {\r\n                         return;\r\n                     }\r\n@@ -388,14 +398,10 @@ private void traverse(StructuralNode node, boolean incRelatedSiblings, TraverseA\n         \tfor (StructuralNode pNode : parentNodes) {\r\n \t        \tIterator<StructuralNode> iter = pNode.getChildIterator();\r\n \t        \twhile (iter.hasNext() && !isStop()) {\r\n-\t        \t\tStructuralNode child = iter.next();\r\n-\t                // ZAP: Implement pause and resume\r\n-\t                while (parentScanner.isPaused() && !isStop()) {\r\n-\t                    Util.sleep(500);\r\n-\t                }\r\n-\t\r\n+                    checkPause();\r\n+\r\n \t                try {\r\n-\t                    traverse(child, false, action);\r\n+\t                    traverse(iter.next(), false, action);\r\n \t                    \r\n \t                } catch (Exception e) {\r\n \t                    log.error(e.getMessage(), e);\r\n@@ -597,6 +603,12 @@ public boolean isStop() {\n     public boolean isPaused() {\r\n         return parentScanner.isPaused();\r\n     }\r\n+\r\n+    private void checkPause() {\r\n+        while (parentScanner.isPaused() && !isStop()) {\r\n+            Util.sleep(500);\r\n+        }\r\n+    }\r\n     \r\n     public int getPercentageComplete () {\r\n     \treturn this.percentage;\r",
      "parent_sha": "0f7d2a40fd9d8f7240f63f7fd4ee4383a3a30a3b"
    }
  },
  {
    "oid": "23ae9b22c8d086ee8c873ac044adf87f371c2f48",
    "message": "Delete all Alerts at once when deleting a SiteNode\n\nChange method Context.deleteNode to delete all alerts at once instead of\none at a time (which generates more change events/tasks).",
    "date": "2016-08-30T22:14:03Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/23ae9b22c8d086ee8c873ac044adf87f371c2f48",
    "details": {
      "sha": "02fd1ca7ef3a29c692ebe6870a02222119b90a8e",
      "filename": "src/org/zaproxy/zap/model/Context.java",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/23ae9b22c8d086ee8c873ac044adf87f371c2f48/src%2Forg%2Fzaproxy%2Fzap%2Fmodel%2FContext.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/23ae9b22c8d086ee8c873ac044adf87f371c2f48/src%2Forg%2Fzaproxy%2Fzap%2Fmodel%2FContext.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fmodel%2FContext.java?ref=23ae9b22c8d086ee8c873ac044adf87f371c2f48",
      "patch": "@@ -631,15 +631,11 @@ private void moveNode (SiteMap sitesTree, SiteNode sn) {\n \t\r\n \tprivate void deleteNode (SiteMap sitesTree, SiteNode sn) {\r\n \t\tlog.debug(\"Deleting node \" + sn.getHierarchicNodeName());\r\n-\t\tList<Alert> alerts = sn.getAlerts();\r\n-\t\tHistoryReference href = sn.getHistoryReference();\r\n+\t\tsn.deleteAlerts(sn.getAlerts());\r\n \t\t\r\n \t\t// Remove old one\r\n-\t\tfor (Alert alert : alerts) {\r\n-\t\t\tsn.deleteAlert(alert);\r\n-\t\t}\r\n \t\tsitesTree.removeNodeFromParent(sn);\r\n-\t\tsitesTree.removeHistoryReference(href.getHistoryId());\r\n+\t\tsitesTree.removeHistoryReference(sn.getHistoryReference().getHistoryId());\r\n \t}\r\n \t\r\n \t\r",
      "parent_sha": "7098ccd9de899678dc75be097598fb0180e3bc32"
    }
  },
  {
    "oid": "1321b9696d73b6e113193ad52b17af6db18fac8d",
    "message": "spelling: [API] timeout",
    "date": "2021-01-22T11:23:42Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/1321b9696d73b6e113193ad52b17af6db18fac8d",
    "details": {
      "sha": "060658544bc1b2b877bcb0466f100c693fe43917",
      "filename": "zap/src/main/java/org/parosproxy/paros/network/HttpStatusCode.java",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/1321b9696d73b6e113193ad52b17af6db18fac8d/zap%2Fsrc%2Fmain%2Fjava%2Forg%2Fparosproxy%2Fparos%2Fnetwork%2FHttpStatusCode.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/1321b9696d73b6e113193ad52b17af6db18fac8d/zap%2Fsrc%2Fmain%2Fjava%2Forg%2Fparosproxy%2Fparos%2Fnetwork%2FHttpStatusCode.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/zap%2Fsrc%2Fmain%2Fjava%2Forg%2Fparosproxy%2Fparos%2Fnetwork%2FHttpStatusCode.java?ref=1321b9696d73b6e113193ad52b17af6db18fac8d",
      "patch": "@@ -73,9 +73,12 @@ public final class HttpStatusCode {\n     public static final int NOT_IMPLEMENTED = 501;\n     public static final int BAD_GATEWAY = 502;\n     public static final int SERVICE_UNAVAILABLE = 503;\n-    public static final int GATEWAY_TIEMOUT = 504;\n+    public static final int GATEWAY_TIMEOUT = 504;\n     public static final int HTTP_VERSION_NOT_SUPPORTED = 505;\n \n+    /** @deprecated use {link #GATEWAY_TIMEOUT} */\n+    @Deprecated public static final int GATEWAY_TIEMOUT = 504;\n+\n     // ZAP: Added code array\n     public static final int[] CODES = {\n         CONTINUE,\n@@ -116,7 +119,7 @@ public final class HttpStatusCode {\n         NOT_IMPLEMENTED,\n         BAD_GATEWAY,\n         SERVICE_UNAVAILABLE,\n-        GATEWAY_TIEMOUT,\n+        GATEWAY_TIMEOUT,\n         HTTP_VERSION_NOT_SUPPORTED\n     };\n ",
      "parent_sha": "37d62bf89bd8f0de0e116866e7e0d3b35eec03c9"
    }
  },
  {
    "oid": "10351d87559ba765eba4ed3b861118665b881bc5",
    "message": "Catch any exceptions thrown when loading plugins to allow ZAP to still start",
    "date": "2013-01-25T10:04:11Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/10351d87559ba765eba4ed3b861118665b881bc5",
    "details": {
      "sha": "cd3c834bac99db150a7e83c99307eb4595033784",
      "filename": "src/org/parosproxy/paros/core/scanner/PluginFactory.java",
      "status": "modified",
      "additions": 25,
      "deletions": 20,
      "changes": 45,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/10351d87559ba765eba4ed3b861118665b881bc5/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fscanner%2FPluginFactory.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/10351d87559ba765eba4ed3b861118665b881bc5/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fscanner%2FPluginFactory.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fscanner%2FPluginFactory.java?ref=10351d87559ba765eba4ed3b861118665b881bc5",
      "patch": "@@ -26,6 +26,7 @@\n // ZAP: 2012/11/20 Issue 419: Restructure jar loading code\r\n // ZAP: 2013/01/16 Issue 453: Dynamic loading and unloading of add-ons\r\n // ZAP: 2013/01/19 Issue 460 Add support for a scan progress dialog\r\n+// ZAP: 2013/01/25 Catch any exceptions thrown when loading plugins to allow ZAP to still start\r\n \r\n package org.parosproxy.paros.core.scanner;\r\n \r\n@@ -143,26 +144,30 @@ else if (e1.getId() > e2.getId())\n             mapAllPlugin.clear();\r\n             for (int i=0; i<listTest.size(); i++) {\r\n                 // ZAP: Removed unnecessary cast.\r\n-                Plugin plugin = listTest.get(i);\r\n-                plugin.setConfig(config);\r\n-                plugin.createParamIfNotExist();\r\n-                if (!plugin.isVisible()) {\r\n-\t\t\t\t\tlog.info(\"Plugin \" + plugin.getName() + \" not visible\");\r\n-                    continue;\r\n-                }\r\n-                if (plugin.isDepreciated()) {\r\n-                \t// ZAP: ignore all depreciated plugins\r\n-\t\t\t\t\tlog.info(\"Plugin \" + plugin.getName() + \" depricated\");\r\n-                \tcontinue;\r\n-                }\r\n-                log.info(\"loaded plugin \" + plugin.getName());\r\n-                if (mapAllPlugin.get(Integer.valueOf(plugin.getId())) != null) {\r\n-                \tlog.error(\"Duplicate id \" + plugin.getName() + \" \" +\r\n-                \t\t\tmapAllPlugin.get(Integer.valueOf(plugin.getId())).getName());\r\n-                }\r\n-                // ZAP: Changed to use the method Integer.valueOf.\r\n-                mapAllPlugin.put(Integer.valueOf(plugin.getId()), plugin);\r\n-                mapAllPluginOrderCodeName.put(plugin.getCodeName(), plugin);\r\n+                try {\r\n+\t\t\t\t\tPlugin plugin = listTest.get(i);\r\n+\t\t\t\t\tplugin.setConfig(config);\r\n+\t\t\t\t\tplugin.createParamIfNotExist();\r\n+\t\t\t\t\tif (!plugin.isVisible()) {\r\n+\t\t\t\t\t\tlog.info(\"Plugin \" + plugin.getName() + \" not visible\");\r\n+\t\t\t\t\t    continue;\r\n+\t\t\t\t\t}\r\n+\t\t\t\t\tif (plugin.isDepreciated()) {\r\n+\t\t\t\t\t\t// ZAP: ignore all depreciated plugins\r\n+\t\t\t\t\t\tlog.info(\"Plugin \" + plugin.getName() + \" depricated\");\r\n+\t\t\t\t\t\tcontinue;\r\n+\t\t\t\t\t}\r\n+\t\t\t\t\tlog.info(\"loaded plugin \" + plugin.getName());\r\n+\t\t\t\t\tif (mapAllPlugin.get(Integer.valueOf(plugin.getId())) != null) {\r\n+\t\t\t\t\t\tlog.error(\"Duplicate id \" + plugin.getName() + \" \" +\r\n+\t\t\t\t\t\t\t\tmapAllPlugin.get(Integer.valueOf(plugin.getId())).getName());\r\n+\t\t\t\t\t}\r\n+\t\t\t\t\t// ZAP: Changed to use the method Integer.valueOf.\r\n+\t\t\t\t\tmapAllPlugin.put(Integer.valueOf(plugin.getId()), plugin);\r\n+\t\t\t\t\tmapAllPluginOrderCodeName.put(plugin.getCodeName(), plugin);\r\n+\t\t\t\t} catch (Exception e) {\r\n+\t\t\t\t\tlog.error(e.getMessage(), e);\r\n+\t\t\t\t}\r\n             }\r\n             Iterator<Plugin> iterator = mapAllPlugin.values().iterator();\r\n             while (iterator.hasNext()) {\r",
      "parent_sha": "413d9b024fdefae81433196d6117777cb17e3919"
    }
  },
  {
    "oid": "ad8fc7bed80ac9fc8b9a48c28ee1b9e912fd1dc4",
    "message": "Tweaked code to ensure log messages displayed on the EDT",
    "date": "2015-01-22T12:26:12Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/ad8fc7bed80ac9fc8b9a48c28ee1b9e912fd1dc4",
    "details": {
      "sha": "7710bfebc5ba061388da83de70dbfab41a387294",
      "filename": "src/org/zaproxy/zap/view/SplashScreen.java",
      "status": "modified",
      "additions": 19,
      "deletions": 15,
      "changes": 34,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/ad8fc7bed80ac9fc8b9a48c28ee1b9e912fd1dc4/src%2Forg%2Fzaproxy%2Fzap%2Fview%2FSplashScreen.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/ad8fc7bed80ac9fc8b9a48c28ee1b9e912fd1dc4/src%2Forg%2Fzaproxy%2Fzap%2Fview%2FSplashScreen.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fview%2FSplashScreen.java?ref=ad8fc7bed80ac9fc8b9a48c28ee1b9e912fd1dc4",
      "patch": "@@ -20,27 +20,28 @@\n package org.zaproxy.zap.view;\n \n import java.awt.Dimension;\n-import java.awt.EventQueue;\n import java.awt.Font;\n import java.awt.GridBagLayout;\n import java.awt.Image;\n import java.awt.Insets;\n import java.awt.Toolkit;\n-import java.lang.reflect.InvocationTargetException;\n import java.util.ArrayList;\n import java.util.Enumeration;\n import java.util.List;\n import java.util.Random;\n import java.util.ResourceBundle;\n import java.util.Stack;\n+\n import javax.swing.BorderFactory;\n import javax.swing.Box;\n import javax.swing.JFrame;\n import javax.swing.JLabel;\n import javax.swing.JProgressBar;\n import javax.swing.JScrollBar;\n import javax.swing.JScrollPane;\n+import javax.swing.SwingUtilities;\n import javax.swing.border.Border;\n+\n import org.apache.log4j.Level;\n import org.apache.log4j.Logger;\n import org.apache.log4j.WriterAppender;\n@@ -134,30 +135,33 @@ public void run() {\n                         Thread.sleep(100);\n                         \n                     } else {\n-                        EventQueue.invokeAndWait(new Runnable() {\n-                            @Override\n-                            public void run() {\n-                                if (!tipsLoaded && getTipsAndTricks() != null) {\n+                        if (!tipsLoaded && getTipsAndTricks() != null) {\n+                        \tSwingUtilities.invokeLater(new Runnable() {\n+\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\tpublic void run() {\n                                     displayRandomTip();\n-                                }\n-                                \n-                                while (!stack.isEmpty()) {\n-\n+\t\t\t\t\t\t\t\t}});\n+                        }\n+                        \n+                    \tSwingUtilities.invokeLater(new Runnable() {\n+\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\tpublic void run() {\n+\t\t\t\t\t\t\t\twhile (!stack.isEmpty()) {\n+\t\t\t\t\t\t\t\t\t// Need to double check as another thread could have grabved the message\n                                     getLogPanel().append(stack.pop());\n                                     JScrollBar vertical = getLogJScrollPane().getVerticalScrollBar();\n                                     vertical.setValue(vertical.getMaximum());\n-                                }\n-                            }\n-                        });\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t}});\n                     }\n                     \n                 } catch (InterruptedException e) {\n                     // New message to display\n-                    thread.interrupted();\n+                    Thread.interrupted();\n                 }\n             }\n         \n-        } catch (InvocationTargetException e) {\n+        } catch (Exception e) {\n             // Ignore\n         }\n ",
      "parent_sha": "ce0b19c6053d6c7c27d039a03b2b806f11e5c086"
    }
  },
  {
    "oid": "474db681656d440dd579c2991763c1388d2dcaae",
    "message": "Correct the javascript content-type",
    "date": "2012-03-20T21:51:14Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/474db681656d440dd579c2991763c1388d2dcaae",
    "details": {
      "sha": "a6089dfef174a24d7458b7471f983c4dce39d42b",
      "filename": "src/org/parosproxy/paros/network/HttpResponseHeader.java",
      "status": "modified",
      "additions": 1,
      "deletions": 8,
      "changes": 9,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/474db681656d440dd579c2991763c1388d2dcaae/src%2Forg%2Fparosproxy%2Fparos%2Fnetwork%2FHttpResponseHeader.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/474db681656d440dd579c2991763c1388d2dcaae/src%2Forg%2Fparosproxy%2Fparos%2Fnetwork%2FHttpResponseHeader.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fnetwork%2FHttpResponseHeader.java?ref=474db681656d440dd579c2991763c1388d2dcaae",
      "patch": "@@ -37,7 +37,7 @@ public class HttpResponseHeader extends HttpHeader {\n \tprivate static final String _CONTENT_TYPE_IMAGE = \"image\";\r\n \tprivate static final String _CONTENT_TYPE_TEXT = \"text\";\r\n \tprivate static final String _CONTENT_TYPE_HTML = \"html\";\r\n-\tprivate static final String _CONTENT_TYPE_JAVASCRIPT = \"text/javasript\";\r\n+\tprivate static final String _CONTENT_TYPE_JAVASCRIPT = \"javascript\";\r\n \t\r\n \t\r\n \tstatic final Pattern patternStatusLine\r\n@@ -159,9 +159,7 @@ public boolean isImage() {\n \t\t\t\treturn true;\r\n \t\t\t}\r\n \t\t}\r\n-\r\n \t\treturn false;\r\n-\r\n \t}\r\n \r\n \t@Override\r\n@@ -175,9 +173,7 @@ public boolean isText() {\n \t\t\t\treturn true;\r\n \t\t\t}\r\n \t\t}\r\n-\r\n \t\treturn false;\r\n-\r\n \t}\r\n \t\r\n \tpublic boolean isJavaScript() {\r\n@@ -188,9 +184,7 @@ public boolean isJavaScript() {\n \t\t\t\treturn true;\r\n \t\t\t}\r\n \t\t}\r\n-\r\n \t\treturn false;\r\n-\r\n \t}\r\n \r\n \tpublic static boolean isStatusLine(String data) {\r\n@@ -224,7 +218,6 @@ public TreeSet<HtmlParameter> getCookieParams() {\n \t\t\t\tset.add(new HtmlParameter(it.next()));\r\n \t\t\t}\r\n     \t}\r\n-    \t\r\n     \treturn set;\r\n \t}\r\n \r",
      "parent_sha": "e631ada447b72e7673674a3bcecbe8072384f117"
    }
  },
  {
    "oid": "d8a4642d742963fb0d4b6a42a34ef977911513a3",
    "message": "Issue 829 - JSONException while calling an API view without the required parameter(s)\n\nChanged to check if the parameter exists (instead of getting it).",
    "date": "2013-11-17T02:21:05Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/d8a4642d742963fb0d4b6a42a34ef977911513a3",
    "details": {
      "sha": "2c323e9f2cff202abd55ac69badf941c1793314f",
      "filename": "src/org/zaproxy/zap/extension/api/API.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/d8a4642d742963fb0d4b6a42a34ef977911513a3/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fapi%2FAPI.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/d8a4642d742963fb0d4b6a42a34ef977911513a3/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fapi%2FAPI.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fapi%2FAPI.java?ref=d8a4642d742963fb0d4b6a42a34ef977911513a3",
      "patch": "@@ -272,7 +272,7 @@ public boolean handleApiRequest (HttpRequestHeader requestHeader, HttpInputStrea\n \t\t\t\t\t\t\tList<String> mandatoryParams = view.getMandatoryParamNames();\n \t\t\t\t\t\t\tif (mandatoryParams != null) {\n \t\t\t\t\t\t\t\tfor (String param : mandatoryParams) {\n-\t\t\t\t\t\t\t\t\tif (params.getString(param) == null || params.getString(param).length() == 0) {\n+\t\t\t\t\t\t\t\t\tif (!params.has(param) || params.getString(param).length() == 0) {\n \t\t\t\t\t\t\t\t\t\tthrow new ApiException(ApiException.Type.MISSING_PARAMETER, param);\n \t\t\t\t\t\t\t\t\t}\n \t\t\t\t\t\t\t\t}",
      "parent_sha": "504fd4a7a5fe46edd72fe20a9dc7e5326f01eca1"
    }
  },
  {
    "oid": "e05b06aec1f128c4c4b00589698a2a9c83e45038",
    "message": "Correct migration of old in scope spider domains\n\nUse the correct variable when converting (to Pattern) the old domains\nalways in spider scope that use wildcard char '*'.",
    "date": "2017-01-13T22:57:28Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/e05b06aec1f128c4c4b00589698a2a9c83e45038",
    "details": {
      "sha": "e4b315e7faa4c14229ebf0a057d625f16cb90ab7",
      "filename": "src/org/zaproxy/zap/spider/SpiderParam.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/e05b06aec1f128c4c4b00589698a2a9c83e45038/src%2Forg%2Fzaproxy%2Fzap%2Fspider%2FSpiderParam.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/e05b06aec1f128c4c4b00589698a2a9c83e45038/src%2Forg%2Fzaproxy%2Fzap%2Fspider%2FSpiderParam.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fspider%2FSpiderParam.java?ref=e05b06aec1f128c4c4b00589698a2a9c83e45038",
      "patch": "@@ -349,7 +349,7 @@ private static List<DomainAlwaysInScopeMatcher> convertOldDomainsInScopeOption(S\n                 if (domain.contains(\"*\")) {\n                     domain = domain.replace(\".\", \"\\\\.\").replace(\"+\", \"\\\\+\").replace(\"*\", \".*?\");\n                     try {\n-                        Pattern pattern = Pattern.compile(name, Pattern.CASE_INSENSITIVE);\n+                        Pattern pattern = Pattern.compile(domain, Pattern.CASE_INSENSITIVE);\n                         domainsInScope.add(new DomainAlwaysInScopeMatcher(pattern));\n                     } catch (IllegalArgumentException e) {\n                         log.error(\"Failed to migrate a domain always in scope, name: \" + name, e);",
      "parent_sha": "18315a387ad5b6b677c739bb9fefd21d766f3678"
    }
  },
  {
    "oid": "aee7cade3e1f1592f30c034102a77d622620dada",
    "message": "Moved some action name constants to the same place as the others in the active scan API (cosmetic change).",
    "date": "2013-12-02T05:31:26Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/aee7cade3e1f1592f30c034102a77d622620dada",
    "details": {
      "sha": "003bcabf3fb1e9f453dc68e450e0e9fa140e479a",
      "filename": "src/org/zaproxy/zap/extension/ascan/ActiveScanAPI.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/aee7cade3e1f1592f30c034102a77d622620dada/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fascan%2FActiveScanAPI.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/aee7cade3e1f1592f30c034102a77d622620dada/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fascan%2FActiveScanAPI.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fascan%2FActiveScanAPI.java?ref=aee7cade3e1f1592f30c034102a77d622620dada",
      "patch": "@@ -59,12 +59,12 @@ public class ActiveScanAPI extends ApiImplementor implements ScannerListener {\n \tprivate static final String ACTION_CLEAR_EXCLUDED_FROM_SCAN = \"clearExcludedFromScan\";\r\n \tprivate static final String ACTION_ENABLE_ALL_SCANNERS = \"enableAllScanners\";\r\n \tprivate static final String ACTION_DISABLE_ALL_SCANNERS = \"disableAllScanners\";\r\n+\tprivate static final String ACTION_ENABLE_SCANNERS = \"enableScanners\";\r\n+\tprivate static final String ACTION_DISABLE_SCANNERS = \"disableScanners\";\r\n     \r\n \tprivate static final String VIEW_STATUS = \"status\";\r\n \tprivate static final String VIEW_EXCLUDED_FROM_SCAN = \"excludedFromScan\";\r\n \tprivate static final String VIEW_SCANNERS = \"scanners\";\r\n-\tprivate static final String ACTION_ENABLE_SCANNERS = \"enableScanners\";\r\n-\tprivate static final String ACTION_DISABLE_SCANNERS = \"disableScanners\";\r\n \r\n \tprivate static final String PARAM_URL = \"url\";\r\n \tprivate static final String PARAM_REGEX = \"regex\";\r",
      "parent_sha": "5ac224bd8eefcef58eb12e6679a17c6e02c83439"
    }
  },
  {
    "oid": "800f0dacd31505fb0f8a5000e6c1c826e96b6af2",
    "message": "Updated for 2.7.0",
    "date": "2017-11-27T12:04:25Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/800f0dacd31505fb0f8a5000e6c1c826e96b6af2",
    "details": {
      "sha": "940c52505405e6898c0eaaae4d2fdd08dca9960e",
      "filename": "src/org/zaproxy/zap/extension/autoupdate/ExtensionAutoUpdate.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/800f0dacd31505fb0f8a5000e6c1c826e96b6af2/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fautoupdate%2FExtensionAutoUpdate.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/800f0dacd31505fb0f8a5000e6c1c826e96b6af2/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fautoupdate%2FExtensionAutoUpdate.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fautoupdate%2FExtensionAutoUpdate.java?ref=800f0dacd31505fb0f8a5000e6c1c826e96b6af2",
      "patch": "@@ -98,8 +98,8 @@ public class ExtensionAutoUpdate extends ExtensionAdaptor implements CheckForUpd\n \t// The short URL means that the number of checkForUpdates can be tracked - see https://bitly.com/u/psiinon\n \t// Note that URLs must now use https (unless you change the code;)\n     \n-    private static final String ZAP_VERSIONS_REL_XML_SHORT = \"https://bit.ly/owaspzap-2-6-0\";\n-    private static final String ZAP_VERSIONS_REL_XML_FULL = \"https://raw.githubusercontent.com/zaproxy/zap-admin/master/ZapVersions-2.6.xml\";\n+    private static final String ZAP_VERSIONS_REL_XML_SHORT = \"https://bit.ly/owaspzap-2-7-0\";\n+    private static final String ZAP_VERSIONS_REL_XML_FULL = \"https://raw.githubusercontent.com/zaproxy/zap-admin/master/ZapVersions-2.7.xml\";\n     \n     private static final String ZAP_VERSIONS_DEV_XML_SHORT = \"https://bit.ly/owaspzap-dev\";\n     private static final String ZAP_VERSIONS_DEV_XML_FULL = \"https://raw.githubusercontent.com/zaproxy/zap-admin/master/ZapVersions-dev.xml\";",
      "parent_sha": "7edf261a08e253ca71e70729c38252748d0ea15d"
    }
  },
  {
    "oid": "8dec0474ea381f7d0a20694606574fa22a0abec6",
    "message": "Allow to set fields to DynamicFieldsPanel\n\nChange DynamicFieldsPanel to allow to set the fields after creating the\npanel allowing to dynamically change the fields shown (instead of\nrequire removing/creating/adding the panel each time the fields change).",
    "date": "2017-07-28T09:06:03Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/8dec0474ea381f7d0a20694606574fa22a0abec6",
    "details": {
      "sha": "d46d64477b46b57ab528bc04798d60335b50f394",
      "filename": "src/org/zaproxy/zap/view/DynamicFieldsPanel.java",
      "status": "modified",
      "additions": 46,
      "deletions": 6,
      "changes": 52,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/8dec0474ea381f7d0a20694606574fa22a0abec6/src%2Forg%2Fzaproxy%2Fzap%2Fview%2FDynamicFieldsPanel.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/8dec0474ea381f7d0a20694606574fa22a0abec6/src%2Forg%2Fzaproxy%2Fzap%2Fview%2FDynamicFieldsPanel.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fview%2FDynamicFieldsPanel.java?ref=8dec0474ea381f7d0a20694606574fa22a0abec6",
      "patch": "@@ -13,6 +13,8 @@\n \n public class DynamicFieldsPanel extends JPanel {\n \n+\tprivate static final String[] NO_FIELDS = new String[0];\n+\n \t/** The Constant serialVersionUID. */\n \tprivate static final long serialVersionUID = -1129326656062554952L;\n \n@@ -25,19 +27,55 @@ public class DynamicFieldsPanel extends JPanel {\n \tprivate Map<String, ZapTextField> textFields;\n \n \tpublic DynamicFieldsPanel(String[] requiredFields) {\n-\t\tthis(requiredFields, new String[0]);\n+\t\tthis(requiredFields, NO_FIELDS);\n \t}\n \n \tpublic DynamicFieldsPanel(String[] requiredFields, String[] optionalFields) {\n-\t\tsuper();\n+\t\tsuper(new GridBagLayout());\n+\n+\t\tsetFields(requiredFields, optionalFields);\n+\t}\n+\n+\t/**\n+\t * Sets the (required) fields that should be shown in the panel.\n+\t * <p>\n+\t * Any fields previously set are removed.\n+\t *\n+\t * @param requiredFields the required fields.\n+\t * @throws IllegalArgumentException if the given argument is {@code null}.\n+\t * @since TODO add version\n+\t * @see #setFields(String[], String[])\n+\t */\n+\tpublic void setFields(String[] requiredFields) {\n+\t\tsetFields(requiredFields, NO_FIELDS);\n+\t}\n+\n+\t/**\n+\t * Sets the required and optional fields that should be shown in the panel.\n+\t * <p>\n+\t * Any fields previously set are removed.\n+\t *\n+\t * @param requiredFields the required fields.\n+\t * @param optionalFields the optional fields.\n+\t * @throws IllegalArgumentException if the any of the arguments is {@code null}.\n+\t * @since TODO add version\n+\t * @see #setFields(String[])\n+\t */\n+\tpublic void setFields(String[] requiredFields, String[] optionalFields) {\n+\t\tif (requiredFields == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Parameter requiredFields must not be null.\");\n+\t\t}\n+\n+\t\tif (optionalFields == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Parameter optionalFields must not be null.\");\n+\t\t}\n+\n \t\tthis.requiredFields = requiredFields;\n \t\tthis.optionalFields = optionalFields;\n+\n \t\tthis.textFields = new HashMap<>(requiredFields.length + optionalFields.length);\n-\t\tinitialize();\n-\t}\n \n-\tprivate void initialize() {\n-\t\tthis.setLayout(new GridBagLayout());\n+\t\tremoveAll();\n \n \t\tint fieldIndex = 0;\n \t\tfor (String fieldName : requiredFields) {\n@@ -59,6 +97,8 @@ private void initialize() {\n \n \t\t\tfieldIndex++;\n \t\t}\n+\n+\t\tvalidate();\n \t}\n \n \t/**",
      "parent_sha": "f0092252459a8612f04ca8a8883da58a6ed4877d"
    }
  },
  {
    "oid": "8a373f9e1661439a974c2e7c65df725476be3c6f",
    "message": "Issue 1224 - \tDisplay Quality/Status in Scan Policy Dialogs (Small tweaks to ScannerUtils)",
    "date": "2014-06-26T12:14:51Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/8a373f9e1661439a974c2e7c65df725476be3c6f",
    "details": {
      "sha": "759a74c1b735ca789e7467c8b35650de9b210491",
      "filename": "src/org/zaproxy/zap/utils/ScannerUtils.java",
      "status": "modified",
      "additions": 10,
      "deletions": 9,
      "changes": 19,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/8a373f9e1661439a974c2e7c65df725476be3c6f/src%2Forg%2Fzaproxy%2Fzap%2Futils%2FScannerUtils.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/8a373f9e1661439a974c2e7c65df725476be3c6f/src%2Forg%2Fzaproxy%2Fzap%2Futils%2FScannerUtils.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Futils%2FScannerUtils.java?ref=8a373f9e1661439a974c2e7c65df725476be3c6f",
      "patch": "@@ -56,18 +56,19 @@ private ScannerUtils() {\n      * Gets the quality or status of the given scanner, using regular expressions\r\n      * on the scanner and package name values.\r\n      * @param scannerName the name of the scanner\r\n-     * @param scannerPackage the name of the scanner package\r\n+     * @param scanner the scanner for which quality is being identified\r\n      * @return quality \r\n      */\r\n-\tprivate static String getSpecificQuality(String scannerName, String scannerPackage) {\r\n+\tprivate static String getSpecificQuality(String scannerName, Object scanner) {\r\n \r\n+\t\tString scannerPackage=scanner.getClass().getCanonicalName();\r\n         String quality = \"\";\r\n         \r\n         if (BETA_REGEX.matcher(scannerPackage).matches())\r\n         \tquality = QUALITY_BETA;\r\n         else if (ALPHA_REGEX.matcher(scannerPackage).matches()) \r\n         \tquality = QUALITY_ALPHA;\r\n-        else if (SCRIPT_RULES_REGEX.matcher(scannerPackage).matches()) \r\n+        else if (SCRIPT_RULES_REGEX.matcher(scannerName).matches()) \r\n         \tquality = QUALITY_SCRIPT_RULES;\r\n         else  // We haven't matched yet so it must be Release\r\n         \tquality = QUALITY_RELEASE;\r\n@@ -81,23 +82,23 @@ else if (SCRIPT_RULES_REGEX.matcher(scannerPackage).matches())\n      * @return quality \r\n      */\r\n \tpublic static String getPluginQuality(PluginPassiveScanner scanner) {\r\n-        String scannerPackage = scanner.getClass().getCanonicalName();\r\n+//        String scannerPackage = scanner.getClass().getCanonicalName();\r\n         String scannerName = scanner.getName();\r\n         \r\n-        return (getSpecificQuality(scannerName, scannerPackage));\r\n+        return (getSpecificQuality(scannerName, scanner));\r\n         \r\n         }\r\n \t\r\n     /** \r\n      * Gets the quality or status of the given {@code scanner}.\r\n-     * @param the scanner we want to know the quality/status of\r\n+     * @param scanner the scanner we want to know the quality/status of\r\n      * @return quality \r\n      */\r\n \tpublic static String getPluginQuality(Plugin scanner) {\r\n-        String scannerPackage = scanner.getClass().getCanonicalName();\r\n-        String scannerName = scanner.getName().toLowerCase();\r\n+//        String scannerPackage = scanner.getClass().getCanonicalName();\r\n+        String scannerName = scanner.getName();\r\n         \r\n-        return (getSpecificQuality(scannerName, scannerPackage));\r\n+        return (getSpecificQuality(scannerName, scanner));\r\n         \r\n         }\r\n }\r",
      "parent_sha": "45b8c33bd7a4a3c9739031d5818bd2d6ca71edea"
    }
  },
  {
    "oid": "567f625602cfeaf700098d11c818262e31757059",
    "message": "Issue 698 - Passive Scanner API view \"recordsToScan\" returns -1 after finish scanning the messages\n\nChanged to take into account that the current scanned ID might be greater that the last ID.",
    "date": "2013-06-25T13:05:39Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/567f625602cfeaf700098d11c818262e31757059",
    "details": {
      "sha": "d37ba474edafb62a987a9313e00f7800bf1ececc",
      "filename": "src/org/zaproxy/zap/extension/pscan/PassiveScanThread.java",
      "status": "modified",
      "additions": 10,
      "deletions": 2,
      "changes": 12,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/567f625602cfeaf700098d11c818262e31757059/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fpscan%2FPassiveScanThread.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/567f625602cfeaf700098d11c818262e31757059/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fpscan%2FPassiveScanThread.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fpscan%2FPassiveScanThread.java?ref=567f625602cfeaf700098d11c818262e31757059",
      "patch": "@@ -59,6 +59,7 @@ public void run() {\n \t\thistoryTable = Database.getSingleton().getTableHistory();\n \t\t// Get the last id - in case we've just opened an existing session\n \t\tcurrentId = this.getLastHistoryId();\n+\t\tlastId = currentId;\n \t\t\n \t\twhile (!shutDown) {\n \t\t\ttry {\n@@ -135,7 +136,14 @@ private int getLastHistoryId() {\n \t}\n \t\n \tprotected int getRecordsToScan() {\n-\t\treturn this.getLastHistoryId() - currentId;\n+\t\treturn this.getLastHistoryId() - getLastScannedId();\n+\t}\n+\n+\tprivate int getLastScannedId() {\n+\t\tif (currentId > lastId) {\n+\t\t\treturn currentId - 1;\n+\t\t}\n+\t\treturn currentId;\n \t}\n \t\n \tprivate ExtensionHistory getExtensionHistory() {\n@@ -199,9 +207,9 @@ public void sessionChanged(Session session) {\n \t\t// Reset the currentId\n \t\thistoryTable = Database.getSingleton().getTableHistory();\n \t\thref = null;\n-\t\tlastId = -1;\n \t\t// Get the last id - in case we've just opened an existing session\n \t\tcurrentId = historyTable.lastIndex();\n+\t\tlastId = currentId;\n \t}\n \t\n \t@Override",
      "parent_sha": "6227f8db9c9aa5a1a20b8467239b6fea5edcca22"
    }
  },
  {
    "oid": "cc8c9b52deddc10c1641044e7c3f2af452cdb02f",
    "message": "Store WeakReference to HttpSessionsExtension.",
    "date": "2013-08-27T13:11:21Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/cc8c9b52deddc10c1641044e7c3f2af452cdb02f",
    "details": {
      "sha": "9af62c856311953b8cee28fe44c1475693ee18cd",
      "filename": "src/org/zaproxy/zap/userauth/session/CookieBasedSessionManagementMethodType.java",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/cc8c9b52deddc10c1641044e7c3f2af452cdb02f/src%2Forg%2Fzaproxy%2Fzap%2Fuserauth%2Fsession%2FCookieBasedSessionManagementMethodType.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/cc8c9b52deddc10c1641044e7c3f2af452cdb02f/src%2Forg%2Fzaproxy%2Fzap%2Fuserauth%2Fsession%2FCookieBasedSessionManagementMethodType.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fuserauth%2Fsession%2FCookieBasedSessionManagementMethodType.java?ref=cc8c9b52deddc10c1641044e7c3f2af452cdb02f",
      "patch": "@@ -1,5 +1,6 @@\n package org.zaproxy.zap.userauth.session;\n \n+import java.lang.ref.WeakReference;\n import java.net.HttpCookie;\n import java.util.Iterator;\n import java.util.List;\n@@ -36,7 +37,7 @@ public static class CookieBasedSessionManagementMethod implements SessionManagem\n \n \t\tprivate Context context;\n \n-\t\tprivate static ExtensionHttpSessions extHttpSessions;\n+\t\tprivate static WeakReference<ExtensionHttpSessions> extHttpSessions;\n \n \t\tpublic CookieBasedSessionManagementMethod(int contextId) {\n \t\t\tthis.contextId = contextId;\n@@ -92,13 +93,13 @@ public WebSession identifyMatchingWebSession(List<WebSession> sessions, HttpMess\n \t\t}\n \n \t\tprivate ExtensionHttpSessions getHttpSessionsExtension() {\n-\t\t\tif (extHttpSessions == null) {\n-\t\t\t\textHttpSessions = (ExtensionHttpSessions) Control.getSingleton().getExtensionLoader()\n-\t\t\t\t\t\t.getExtension(ExtensionHttpSessions.class);\n+\t\t\tif (extHttpSessions == null || extHttpSessions.get() == null) {\n+\t\t\t\textHttpSessions = new WeakReference<ExtensionHttpSessions>((ExtensionHttpSessions) Control\n+\t\t\t\t\t\t.getSingleton().getExtensionLoader().getExtension(ExtensionHttpSessions.class));\n \t\t\t\tif (extHttpSessions == null)\n \t\t\t\t\tlog.error(\"An error occured while loading the ExtensionHttpSessions.\");\n \t\t\t}\n-\t\t\treturn extHttpSessions;\n+\t\t\treturn extHttpSessions.get();\n \t\t}\n \n \t\tprivate Context getContext() {",
      "parent_sha": "17c15fc65081e07d47aeeebf698715cadb2a4568"
    }
  },
  {
    "oid": "e65672a88354ed1e42aaeba902492d3a03baa6ea",
    "message": "Added integration with fuzzdb 1.09",
    "date": "2012-02-12T13:04:33Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/e65672a88354ed1e42aaeba902492d3a03baa6ea",
    "details": {
      "sha": "797d4d65fd22f4e09afacaf707d365ef490ff796",
      "filename": "src/org/parosproxy/paros/Constant.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/e65672a88354ed1e42aaeba902492d3a03baa6ea/src%2Forg%2Fparosproxy%2Fparos%2FConstant.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/e65672a88354ed1e42aaeba902492d3a03baa6ea/src%2Forg%2Fparosproxy%2Fparos%2FConstant.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2FConstant.java?ref=e65672a88354ed1e42aaeba902492d3a03baa6ea",
      "patch": "@@ -139,7 +139,8 @@ public final class Constant {\n     public String DIRBUSTER_DIR = \"dirbuster\";\r\n     public String DIRBUSTER_CUSTOM_DIR = DIRBUSTER_DIR;\r\n \r\n-    public String FUZZER_CUSTOM_DIR = \"fuzzers\";\r\n+    public String FUZZER_DIR = \"fuzzers\";\r\n+    public String FUZZER_CUSTOM_DIR = FUZZER_DIR;\r\n \r\n \tpublic static URL OK_FLAG_IMAGE_URL = Constant.class.getResource(\"/resource/icon/10/072.png\"); \t\t// Green\r\n \tpublic static URL INFO_FLAG_IMAGE_URL = Constant.class.getResource(\"/resource/icon/10/073.png\"); \t// Blue\r",
      "parent_sha": "e964599c85b8cba884057b675142fc8335dd3ee7"
    }
  },
  {
    "oid": "6a7e640f6b41b09cc32216a2736a1e98213bfa50",
    "message": "Updated date in About box",
    "date": "2012-03-10T09:52:53Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/6a7e640f6b41b09cc32216a2736a1e98213bfa50",
    "details": {
      "sha": "f4b382738497306f0e3f4ee89f360ea2639b3027",
      "filename": "src/org/zaproxy/zap/view/AboutPanel.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/6a7e640f6b41b09cc32216a2736a1e98213bfa50/src%2Forg%2Fzaproxy%2Fzap%2Fview%2FAboutPanel.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/6a7e640f6b41b09cc32216a2736a1e98213bfa50/src%2Forg%2Fzaproxy%2Fzap%2Fview%2FAboutPanel.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fview%2FAboutPanel.java?ref=6a7e640f6b41b09cc32216a2736a1e98213bfa50",
      "patch": "@@ -41,7 +41,7 @@ public class AboutPanel extends JPanel {\n \tprivate static final long serialVersionUID = 1L;\r\n \tprivate static final String PRODUCT = Constant.PROGRAM_NAME;\r\n \tprivate static final String VERSION = \"Version \" + Constant.PROGRAM_VERSION;\r\n-\tprivate static final String COPYRIGHT = \"Copyright (C) 2010-2011 OWASP ZAP Attack Proxy Project\";\r\n+\tprivate static final String COPYRIGHT = \"Copyright (C) 2010-2012 OWASP ZAP Attack Proxy Project\";\r\n \tprivate static final String LICENSE_DETAIL = \"<html><body><p>This program is free software; \"\r\n \t\t+ \"you can redistribute it and/or modify it under the terms of the Apache License, \"\r\n \t\t+ \"Version 2.0.  This program is distributed in the hope that it will be useful, but \"\r",
      "parent_sha": "17e10bd55e209074bbb61b04e5ac85f232feddad"
    }
  },
  {
    "oid": "f3fec0bf67b4c710e6fabe4feb1ddaa3291768c9",
    "message": "Fix NullPointerException when running Kotlin scripts without view (#7317)\n\nSet the view into the ScriptEngine when not null.\r\n\r\nSigned-off-by: wapmon <wapmon@aol.com>",
    "date": "2022-06-06T05:23:20Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/f3fec0bf67b4c710e6fabe4feb1ddaa3291768c9",
    "details": {
      "sha": "182795dd44a05207537a67f1912eb7a34686a376",
      "filename": "zap/src/main/java/org/zaproxy/zap/extension/script/ExtensionScript.java",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/f3fec0bf67b4c710e6fabe4feb1ddaa3291768c9/zap%2Fsrc%2Fmain%2Fjava%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fscript%2FExtensionScript.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/f3fec0bf67b4c710e6fabe4feb1ddaa3291768c9/zap%2Fsrc%2Fmain%2Fjava%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fscript%2FExtensionScript.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/zap%2Fsrc%2Fmain%2Fjava%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fscript%2FExtensionScript.java?ref=f3fec0bf67b4c710e6fabe4feb1ddaa3291768c9",
      "patch": "@@ -1499,7 +1499,10 @@ private Invocable invokeScriptImpl(ScriptWrapper script) {\n \n         se.put(\"control\", Control.getSingleton());\n         se.put(\"model\", getModel());\n-        se.put(\"view\", getView());\n+\n+        if (hasView()) {\n+            se.put(\"view\", getView());\n+        }\n \n         reloadIfChangedOnDisk(script);\n         recordScriptCalledStats(script);",
      "parent_sha": "4ba5a7e594bf632825b40cdf14036e64696a9001"
    }
  },
  {
    "oid": "7e96fabc1a369cf95fbc5e7cdc3e228951a1592a",
    "message": "Required changes for  Issue 1066: \tAdd support for quickly setting Script Based Authentication from scripts UI",
    "date": "2014-03-05T15:55:28Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/7e96fabc1a369cf95fbc5e7cdc3e228951a1592a",
    "details": {
      "sha": "d26dd963d1b498a98b440457bbbc162669af52aa",
      "filename": "src/org/zaproxy/zap/authentication/ScriptBasedAuthenticationMethodType.java",
      "status": "modified",
      "additions": 61,
      "deletions": 1,
      "changes": 62,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/7e96fabc1a369cf95fbc5e7cdc3e228951a1592a/src%2Forg%2Fzaproxy%2Fzap%2Fauthentication%2FScriptBasedAuthenticationMethodType.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/7e96fabc1a369cf95fbc5e7cdc3e228951a1592a/src%2Forg%2Fzaproxy%2Fzap%2Fauthentication%2FScriptBasedAuthenticationMethodType.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fauthentication%2FScriptBasedAuthenticationMethodType.java?ref=7e96fabc1a369cf95fbc5e7cdc3e228951a1592a",
      "patch": "@@ -58,7 +58,7 @@\n \n public class ScriptBasedAuthenticationMethodType extends AuthenticationMethodType {\n \n-\tprivate static final int METHOD_IDENTIFIER = 4;\n+\tpublic static final int METHOD_IDENTIFIER = 4;\n \n \tprivate static final Logger log = Logger.getLogger(ScriptBasedAuthenticationMethodType.class);\n \n@@ -95,6 +95,66 @@ protected HttpSender getHttpSender() {\n \t\t\treturn httpSender;\n \t\t}\n \n+\t\t/**\n+\t\t * Load a script and fills in the method's filled according to the values specified by the\n+\t\t * script.\n+\t\t * \n+\t\t * If an error occurs while loading the script, an {@link IllegalArgumentException} is\n+\t\t * thrown.\n+\t\t * \n+\t\t * If the method already had a loaded script and a set of values for the parameters, it\n+\t\t * tries to provide new values for the new parameters if they match any previous parameter\n+\t\t * names.\n+\t\t * \n+\t\t * @param scriptW the script wrapper\n+\t\t */\n+\t\tpublic void loadScript(ScriptWrapper scriptW) throws IllegalArgumentException {\n+\t\t\ttry {\n+\t\t\t\tAuthenticationScript script = getScriptsExtension().getInterface(scriptW,\n+\t\t\t\t\t\tAuthenticationScript.class);\n+\n+\t\t\t\tif (script != null) {\n+\t\t\t\t\tString[] requiredParams = script.getRequiredParamsNames();\n+\t\t\t\t\tString[] optionalParams = script.getOptionalParamsNames();\n+\t\t\t\t\tthis.credentialsParamNames = script.getCredentialsParamsNames();\n+\t\t\t\t\tif (log.isDebugEnabled()) {\n+\t\t\t\t\t\tlog.debug(\"Loaded authentication script - required parameters: \"\n+\t\t\t\t\t\t\t\t+ Arrays.toString(requiredParams) + \" - optional parameters: \"\n+\t\t\t\t\t\t\t\t+ Arrays.toString(optionalParams));\n+\t\t\t\t\t}\n+\n+\t\t\t\t\t// If there's an already loaded script, make sure we save its values and _try_\n+\t\t\t\t\t// to use them\n+\t\t\t\t\tMap<String, String> oldValues = this.paramValues != null ? this.paramValues : Collections\n+\t\t\t\t\t\t\t.<String, String> emptyMap();\n+\t\t\t\t\tthis.paramValues = new HashMap<>(requiredParams.length + optionalParams.length);\n+\t\t\t\t\tfor (String param : requiredParams)\n+\t\t\t\t\t\tthis.paramValues.put(param, oldValues.get(param));\n+\t\t\t\t\tfor (String param : optionalParams)\n+\t\t\t\t\t\tthis.paramValues.put(param, oldValues.get(param));\n+\n+\t\t\t\t\tthis.script = scriptW;\n+\t\t\t\t\tlog.info(\"Successfully loaded new script for ScriptBasedAuthentication: \" + this);\n+\t\t\t\t\treturn;\n+\t\t\t\t} else {\n+\t\t\t\t\tlog.warn(\"The script \" + scriptW.getName()\n+\t\t\t\t\t\t\t+ \" does not properly implement the Authentication Script interface.\");\n+\t\t\t\t\tthrow new IllegalArgumentException(Constant.messages.getString(\n+\t\t\t\t\t\t\t\"authentication.method.script.dialog.error.text.interface\", scriptW.getName()));\n+\t\t\t\t}\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tlog.error(\"Error while loading authentication script\", e);\n+\t\t\t\tthrow new IllegalArgumentException(Constant.messages.getString(\n+\t\t\t\t\t\t\"authentication.method.script.dialog.error.text.loading\", e.getMessage()));\n+\t\t\t}\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic String toString() {\n+\t\t\treturn \"ScriptBasedAuthenticationMethod [script=\" + script + \", paramValues=\" + paramValues\n+\t\t\t\t\t+ \", credentialsParamNames=\" + Arrays.toString(credentialsParamNames) + \"]\";\n+\t\t}\n+\n \t\t@Override\n \t\tpublic boolean isConfigured() {\n \t\t\treturn true;",
      "parent_sha": "19f180ede07c03eb7f26e77989f1c054a173fd02"
    }
  },
  {
    "oid": "d92812800560e936415a1bcd06d1631d7d4a79de",
    "message": "Update CFU urls to github and bitly",
    "date": "2015-02-02T14:19:58Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/d92812800560e936415a1bcd06d1631d7d4a79de",
    "details": {
      "sha": "065732ab77680092b42b239d13c4142c51878365",
      "filename": "src/org/zaproxy/zap/extension/autoupdate/ExtensionAutoUpdate.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/d92812800560e936415a1bcd06d1631d7d4a79de/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fautoupdate%2FExtensionAutoUpdate.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/d92812800560e936415a1bcd06d1631d7d4a79de/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fautoupdate%2FExtensionAutoUpdate.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fautoupdate%2FExtensionAutoUpdate.java?ref=d92812800560e936415a1bcd06d1631d7d4a79de",
      "patch": "@@ -65,10 +65,10 @@\n \n public class ExtensionAutoUpdate extends ExtensionAdaptor implements CheckForUpdateCallback {\n \t\n-\t// The short URL means that the number of checkForUpdates can be tracked - see http://goo.gl/info/9aDT69\n+\t// The short URL means that the number of checkForUpdates can be tracked - see https://bitly.com/u/psiinon\n \t// Note that URLs must now use https (unless you change the code;)\n-    private static final String ZAP_VERSIONS_XML_SHORT = \"https://goo.gl/9aDT69\";\n-    private static final String ZAP_VERSIONS_XML_FULL = \"https://zaproxy.googlecode.com/svn/wiki/ZapVersions.xml\";\n+    private static final String ZAP_VERSIONS_XML_SHORT = \"https://bit.ly/owaspzap-dev\";\n+    private static final String ZAP_VERSIONS_XML_FULL = \"https://raw.githubusercontent.com/zaproxy/zap-admin/master/ZapVersions-dev.xml\";\n \n \t// URLs for use when testing locally ;)\n \t//private static final String ZAP_VERSIONS_XML_SHORT = \"https://localhost:8080/zapcfu/ZapVersions.xml\";",
      "parent_sha": "305b4f72366f996a1b248c4142b6f3df0aa91791"
    }
  },
  {
    "oid": "e9c79f35baf78ec449aefcba3d55b797f7c2cf41",
    "message": "Add support for spidering using Git metadata (Index file, versions 2,3,4)",
    "date": "2014-01-20T13:52:32Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/e9c79f35baf78ec449aefcba3d55b797f7c2cf41",
    "details": {
      "sha": "5a761fa6c8924830a9a06606302a275cc609f08c",
      "filename": "src/org/zaproxy/zap/extension/spider/OptionsSpiderPanel.java",
      "status": "modified",
      "additions": 26,
      "deletions": 1,
      "changes": 27,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/e9c79f35baf78ec449aefcba3d55b797f7c2cf41/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fspider%2FOptionsSpiderPanel.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/e9c79f35baf78ec449aefcba3d55b797f7c2cf41/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fspider%2FOptionsSpiderPanel.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fspider%2FOptionsSpiderPanel.java?ref=e9c79f35baf78ec449aefcba3d55b797f7c2cf41",
      "patch": "@@ -68,6 +68,7 @@ public class OptionsSpiderPanel extends AbstractParamPanel {\n \tprivate JCheckBox parseComments = null;\r\n \tprivate JCheckBox parseRobotsTxt = null;\r\n \tprivate JCheckBox parseSVNEntries = null;\r\n+\tprivate JCheckBox parseGit = null;\r\n \tprivate JCheckBox handleODataSpecificParameters = null;\r\n \r\n \tprivate JComboBox<HandleParametersOption> handleParameters = null;\r\n@@ -121,6 +122,7 @@ private JPanel getPanelSpider() {\n \t\t\tGridBagConstraints parseCommentsGridBag = new GridBagConstraints();\r\n \t\t\tGridBagConstraints parseRobotsTxtGridBag = new GridBagConstraints();\r\n \t\t\tGridBagConstraints parseSVNEntriesGridBag = new GridBagConstraints();\r\n+\t\t\tGridBagConstraints parseGitGridBag = new GridBagConstraints();\r\n \t\t\tGridBagConstraints handleODataSpecificParametersGridBag = new GridBagConstraints();\r\n \t\t\t\r\n \t\t\tGridBagConstraints handleParametersGridBag = new GridBagConstraints();\r\n@@ -227,8 +229,15 @@ private JPanel getPanelSpider() {\n \t\t\tparseSVNEntriesGridBag.anchor = GridBagConstraints.NORTHWEST;\r\n \t\t\tparseSVNEntriesGridBag.insets = new Insets(2, 2, 2, 2);\r\n \r\n+\t\t\tparseGitGridBag.gridx = 0;\r\n+\t\t\tparseGitGridBag.gridy = 14;\r\n+\t\t\tparseGitGridBag.weightx = 1.0;\r\n+\t\t\tparseGitGridBag.fill = GridBagConstraints.HORIZONTAL;\r\n+\t\t\tparseGitGridBag.anchor = GridBagConstraints.NORTHWEST;\r\n+\t\t\tparseGitGridBag.insets = new Insets(2, 2, 2, 2);\r\n+\r\n \t\t\thandleODataSpecificParametersGridBag.gridx = 0;\r\n-\t\t\thandleODataSpecificParametersGridBag.gridy = 14;\r\n+\t\t\thandleODataSpecificParametersGridBag.gridy = 15;\r\n \t\t\thandleODataSpecificParametersGridBag.weightx = 1.0;\r\n \t\t\thandleODataSpecificParametersGridBag.fill = GridBagConstraints.HORIZONTAL;\r\n \t\t\thandleODataSpecificParametersGridBag.anchor = GridBagConstraints.NORTHWEST;\r\n@@ -259,6 +268,7 @@ private JPanel getPanelSpider() {\n \t\t\tpanelSpider.add(getChkParseComments(), parseCommentsGridBag);\r\n \t\t\tpanelSpider.add(getChkParseRobotsTxt(), parseRobotsTxtGridBag);\r\n \t\t\tpanelSpider.add(getChkParseSVNEntries(), parseSVNEntriesGridBag);\r\n+\t\t\tpanelSpider.add(getChkParseGit(), parseGitGridBag);\r\n \t\t\tpanelSpider.add(handleParametersLabel, handleParametersLabelGridBag);\r\n \t\t\tpanelSpider.add(getComboHandleParameters(), handleParametersGridBag);\r\n \t\t\tpanelSpider.add(getHandleODataSpecificParameters(), handleODataSpecificParametersGridBag);\r\n@@ -281,6 +291,7 @@ public void initParam(Object obj) {\n \t\tgetChkParseComments().setSelected(param.isParseComments());\r\n \t\tgetChkParseRobotsTxt().setSelected(param.isParseRobotsTxt());\r\n \t\tgetChkParseSVNEntries().setSelected(param.isParseSVNEntries());\r\n+\t\tgetChkParseGit().setSelected(param.isParseGit());\r\n \t\tgetComboHandleParameters().setSelectedItem(param.getHandleParameters());\r\n \t\tgetHandleODataSpecificParameters().setSelected(param.isHandleODataParametersVisited());\r\n \r\n@@ -303,6 +314,7 @@ public void saveParam(Object obj) throws Exception {\n \t\tparam.setParseComments(getChkParseComments().isSelected());\r\n \t\tparam.setParseRobotsTxt(getChkParseRobotsTxt().isSelected());\r\n \t\tparam.setParseSVNEntries(getChkParseSVNEntries().isSelected());\r\n+\t\tparam.setParseGit(getChkParseGit().isSelected());\r\n \t\tparam.setHandleParameters((HandleParametersOption) getComboHandleParameters().getSelectedItem());\r\n \t\tparam.setHandleODataParametersVisited(getHandleODataSpecificParameters().isSelected());\r\n \t}\r\n@@ -451,6 +463,19 @@ private JCheckBox getChkParseSVNEntries() {\n \t\treturn parseSVNEntries;\r\n \t}\r\n \r\n+\t/**\r\n+\t * This method initializes the Parse \"Git\" checkbox.\r\n+\t * \r\n+\t * @return javax.swing.JCheckBox\r\n+\t */\r\n+\tprivate JCheckBox getChkParseGit() {\r\n+\t\tif (parseGit == null) {\r\n+\t\t\tparseGit = new JCheckBox();\r\n+\t\t\tparseGit.setText(Constant.messages.getString(\"spider.options.label.git\"));\r\n+\t\t}\r\n+\t\treturn parseGit;\r\n+\t}\r\n+\r\n \t/**\r\n \t * This method initializes the Handle OData-specific parameters checkbox.\r\n \t * \r",
      "parent_sha": "98978fafffad7b9538a5844c9df456c7815190f7"
    }
  },
  {
    "oid": "75d94411f14209db272dc05b4cd73ae2de9ce466",
    "message": "Fix tests failing in Windows\n\nChange SessionUtilsUnitTest to assert with effective paths instead of\nusing hardcoded ones, which would not match correctly in all OSs.",
    "date": "2016-09-15T20:22:11Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/75d94411f14209db272dc05b4cd73ae2de9ce466",
    "details": {
      "sha": "31920beb1d116ca8153b4b9d77ae202a6cef986d",
      "filename": "test/org/zaproxy/zap/model/SessionUtilsUnitTest.java",
      "status": "modified",
      "additions": 35,
      "deletions": 10,
      "changes": 45,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/75d94411f14209db272dc05b4cd73ae2de9ce466/test%2Forg%2Fzaproxy%2Fzap%2Fmodel%2FSessionUtilsUnitTest.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/75d94411f14209db272dc05b4cd73ae2de9ce466/test%2Forg%2Fzaproxy%2Fzap%2Fmodel%2FSessionUtilsUnitTest.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/test%2Forg%2Fzaproxy%2Fzap%2Fmodel%2FSessionUtilsUnitTest.java?ref=75d94411f14209db272dc05b4cd73ae2de9ce466",
      "patch": "@@ -1,8 +1,12 @@\n package org.zaproxy.zap.model;\r\n \r\n+import org.junit.Before;\r\n+import org.junit.Rule;\r\n import org.junit.Test;\r\n+import org.junit.rules.TemporaryFolder;\r\n import org.parosproxy.paros.Constant;\r\n \r\n+import java.io.IOException;\r\n import java.nio.file.Path;\r\n import java.nio.file.Paths;\r\n \r\n@@ -12,54 +16,75 @@\n \r\n public class SessionUtilsUnitTest {\r\n \r\n-    private static final String ZAP_HOME = \"/zap/\";\r\n-    private static final String ZAP_SESSION_DIR = ZAP_HOME + Constant.FOLDER_SESSION_DEFAULT;\r\n+    @Rule\r\n+    public TemporaryFolder tempFolder = new TemporaryFolder();\r\n+\r\n+    @Before\r\n+    public void setUp() throws Exception {\r\n+        tempFolder.create();\r\n+    }\r\n \r\n     @Test\r\n     public void shouldRetrieveExistingSessionFileFromAbsolutePath() throws Exception {\r\n         // Given\r\n-        String session = \"/test.session\";\r\n+        Path path = newFile(\"test.session\");\r\n+        String session = path.toString();\r\n         // When\r\n         Path sessionPath = SessionUtils.getSessionPath(session);\r\n         // Then\r\n-        assertThat(sessionPath, is(equalTo(Paths.get(\"/test.session\"))));\r\n+        assertThat(sessionPath, is(equalTo(path)));\r\n     }\r\n \r\n     @Test\r\n     public void shouldAppendSessionFiletypeAndRetrieveSessionFileFromAbsolutePath() throws Exception {\r\n         // Given\r\n-        String session = \"/test\";\r\n+        Path path = newFile(\"test.session\");\r\n+        String session = path.toString().replace(\".session$\", \"\");\r\n         // When\r\n         Path sessionPath = SessionUtils.getSessionPath(session);\r\n         // Then\r\n-        assertThat(sessionPath, is(equalTo(Paths.get(\"/test.session\"))));\r\n+        assertThat(sessionPath, is(equalTo(path)));\r\n     }\r\n \r\n     @Test\r\n     public void shouldRetrieveExistingSessionFileFromRelativePath() throws Exception {\r\n         // Given\r\n-        Constant.setZapHome(ZAP_HOME);\r\n+        String zapHome = createZapHome();\r\n         String session = \"test.session\";\r\n         // When\r\n         Path sessionPath = SessionUtils.getSessionPath(session);\r\n         // Then\r\n-        assertThat(sessionPath, is(equalTo(Paths.get(ZAP_SESSION_DIR, \"test.session\"))));\r\n+        assertThat(sessionPath, is(equalTo(pathWith(zapHome, Constant.FOLDER_SESSION_DEFAULT, \"test.session\"))));\r\n     }\r\n \r\n     @Test\r\n     public void shouldAppendSessionFiletypeAndRetrieveSessionFileFromRelativePath() throws Exception {\r\n         // Given\r\n-        Constant.setZapHome(ZAP_HOME);\r\n+        String zapHome = createZapHome();\r\n         String session = \"test\";\r\n         // When\r\n         Path sessionPath = SessionUtils.getSessionPath(session);\r\n         // Then\r\n-        assertThat(sessionPath, is(equalTo(Paths.get(ZAP_SESSION_DIR, \"test.session\"))));\r\n+        assertThat(sessionPath, is(equalTo(pathWith(zapHome, Constant.FOLDER_SESSION_DEFAULT, \"test.session\"))));\r\n     }\r\n \r\n     @Test(expected = NullPointerException.class)\r\n     public void shouldFailOnNullForSessionInput() throws Exception {\r\n         SessionUtils.getSessionPath(null);\r\n     }\r\n \r\n+    private Path newFile(String name) throws IOException {\r\n+        return tempFolder.newFile(name).toPath();\r\n+    }\r\n+\r\n+    private Path pathWith(String baseDir, String... paths) {\r\n+        return Paths.get(baseDir, paths);\r\n+    }\r\n+\r\n+    private String createZapHome() throws IOException {\r\n+        String zapHome = tempFolder.newFolder(\"zap\").toPath().toString();\r\n+        Constant.setZapHome(zapHome);\r\n+        return zapHome;\r\n+    }\r\n+\r\n }\n\\ No newline at end of file",
      "parent_sha": "6739bba5bc656ee345f17fe7c6c0fd56ca1c2aa2"
    }
  },
  {
    "oid": "64b01d301fd15714fe454f53dd5f4da236b3587f",
    "message": "Clear old contexts, always, when loading a session\n\nChange Session to remove all the contexts before refreshing the UI when\ndiscarding the contexts, otherwise the contexts tree would have the\ncontexts of the previous session if the loaded session had none.",
    "date": "2016-12-06T21:53:53Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/64b01d301fd15714fe454f53dd5f4da236b3587f",
    "details": {
      "sha": "4985068d9511bc8465ca470465675dad4ec50ade",
      "filename": "src/org/parosproxy/paros/model/Session.java",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/64b01d301fd15714fe454f53dd5f4da236b3587f/src%2Forg%2Fparosproxy%2Fparos%2Fmodel%2FSession.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/64b01d301fd15714fe454f53dd5f4da236b3587f/src%2Forg%2Fparosproxy%2Fparos%2Fmodel%2FSession.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fmodel%2FSession.java?ref=64b01d301fd15714fe454f53dd5f4da236b3587f",
      "patch": "@@ -65,6 +65,7 @@\n // ZAP: 2016/08/29 Issue 2736: Can't generate reports from saved Session data\r\n // ZAP: 2016/10/24 Delay addition of imported context until it's known that it has no errors\r\n // ZAP: 2016/10/26 Issue 1952: Do not allow Contexts with same name\r\n+// ZAP: 2016/12/06 Remove contexts before refreshing the UI when discarding the contexts\r\n \r\n package org.parosproxy.paros.model;\r\n \r\n@@ -171,10 +172,10 @@ protected Session(Model model) {\n \t}\r\n \t\r\n \tprivate void discardContexts() {\r\n-\t    if (View.isInitialised()) {\r\n-\t    \tView.getSingleton().discardContexts();\r\n-\t\t}\r\n \t    this.contexts.clear();\r\n+\t    if (View.isInitialised()) {\r\n+\t        View.getSingleton().discardContexts();\r\n+\t    }\r\n \t    for(OnContextsChangedListener l:contextsChangedListeners)\r\n \t    \tl.contextsChanged();\r\n \t    nextContextIndex = 1;\r",
      "parent_sha": "d2127d276c8644298bc8541a49b68d360267167c"
    }
  },
  {
    "oid": "c8585b45531d9f99f79054c3bc07462fd7e46514",
    "message": "Prevent raising alerts on temporary messages\n\nChange the type to a permanent one if the provided type is temporary.\nTemporary messages are deleted at some later point which, for example,\nwould break report generation as the expected message of the alert no\nlonger exists.\n\nSigned-off-by: thc202 <thc202@gmail.com>",
    "date": "2024-03-25T16:01:30Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/c8585b45531d9f99f79054c3bc07462fd7e46514",
    "details": {
      "sha": "fc93a98a0241a4dd7cc13eb072ce84b9de993b98",
      "filename": "zap/src/main/java/org/zaproxy/zap/extension/alert/ExtensionAlert.java",
      "status": "modified",
      "additions": 42,
      "deletions": 5,
      "changes": 47,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/c8585b45531d9f99f79054c3bc07462fd7e46514/zap%2Fsrc%2Fmain%2Fjava%2Forg%2Fzaproxy%2Fzap%2Fextension%2Falert%2FExtensionAlert.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/c8585b45531d9f99f79054c3bc07462fd7e46514/zap%2Fsrc%2Fmain%2Fjava%2Forg%2Fzaproxy%2Fzap%2Fextension%2Falert%2FExtensionAlert.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/zap%2Fsrc%2Fmain%2Fjava%2Forg%2Fzaproxy%2Fzap%2Fextension%2Falert%2FExtensionAlert.java?ref=c8585b45531d9f99f79054c3bc07462fd7e46514",
      "patch": "@@ -185,11 +185,20 @@ public void alertFound(Alert alert, HistoryReference ref) {\n                 ref = alert.getHistoryRef();\n             }\n             if (ref == null) {\n-                ref =\n-                        new HistoryReference(\n-                                getModel().getSession(),\n-                                HistoryReference.TYPE_SCANNER,\n-                                alert.getMessage());\n+                ref = createHistoryReference(HistoryReference.TYPE_SCANNER, alert.getMessage());\n+                alert.setHistoryRef(ref);\n+            } else if (HistoryReference.getTemporaryTypes().contains(ref.getHistoryType())) {\n+                int tempType = ref.getHistoryType();\n+                int permanentType = getPermanentType(tempType);\n+                if (LOGGER.isDebugEnabled()) {\n+                    LOGGER.debug(\n+                            \"Attempting to create an alert for temporary message {}, type will be changed to permanent: {}\",\n+                            tempType,\n+                            permanentType,\n+                            new Exception());\n+                }\n+\n+                ref = createHistoryReference(permanentType, alert.getMessage());\n                 alert.setHistoryRef(ref);\n             }\n \n@@ -250,6 +259,34 @@ private static boolean isInvalid(Alert alert) {\n         return false;\n     }\n \n+    private HistoryReference createHistoryReference(int historyType, HttpMessage message)\n+            throws HttpMalformedHeaderException, DatabaseException {\n+        return new HistoryReference(getModel().getSession(), historyType, message);\n+    }\n+\n+    private static int getPermanentType(int historyType) {\n+        switch (historyType) {\n+            case HistoryReference.TYPE_TEMPORARY:\n+                return HistoryReference.TYPE_ZAP_USER;\n+            case HistoryReference.TYPE_SCANNER_TEMPORARY:\n+                return HistoryReference.TYPE_SCANNER;\n+            case HistoryReference.TYPE_AUTHENTICATION:\n+                return HistoryReference.TYPE_ZAP_USER;\n+            case HistoryReference.TYPE_SPIDER_TASK:\n+                return HistoryReference.TYPE_SPIDER;\n+            case HistoryReference.TYPE_SEQUENCE_TEMPORARY:\n+                return HistoryReference.TYPE_ZAP_USER;\n+            case HistoryReference.TYPE_SPIDER_AJAX_TEMPORARY:\n+                return HistoryReference.TYPE_SPIDER_AJAX;\n+            case HistoryReference.TYPE_SPIDER_TEMPORARY:\n+                return HistoryReference.TYPE_SPIDER;\n+            case HistoryReference.TYPE_FUZZER_TEMPORARY:\n+                return HistoryReference.TYPE_FUZZER;\n+            default:\n+                return HistoryReference.TYPE_SCANNER;\n+        }\n+    }\n+\n     /*\n      * This method is intended for internal use only, and should only\n      * be called by other classes for unit testing.",
      "parent_sha": "780e947155356d1eb62b1596ccd3ca5bbfc20556"
    }
  },
  {
    "oid": "f4016a7266821b9e2806cff9f5ccdcc91d355fbe",
    "message": "Issue 970 - Body of DELETE requests should be sent/forward\n\nChanged ZapDeleteMethod to extend from EntityEnclosingMethod (instead of DeleteMethod) so the request body is forward and changed to return the name of the DELETE HTTP method.",
    "date": "2014-03-23T17:15:50Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/f4016a7266821b9e2806cff9f5ccdcc91d355fbe",
    "details": {
      "sha": "56c96d480c1b6193bf774ea3b6865d99b2886954",
      "filename": "src/org/zaproxy/zap/network/ZapDeleteMethod.java",
      "status": "modified",
      "additions": 13,
      "deletions": 1,
      "changes": 14,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/f4016a7266821b9e2806cff9f5ccdcc91d355fbe/src%2Forg%2Fzaproxy%2Fzap%2Fnetwork%2FZapDeleteMethod.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/f4016a7266821b9e2806cff9f5ccdcc91d355fbe/src%2Forg%2Fzaproxy%2Fzap%2Fnetwork%2FZapDeleteMethod.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fnetwork%2FZapDeleteMethod.java?ref=f4016a7266821b9e2806cff9f5ccdcc91d355fbe",
      "patch": "@@ -26,13 +26,14 @@\n import org.apache.commons.httpclient.HttpException;\n import org.apache.commons.httpclient.HttpState;\n import org.apache.commons.httpclient.methods.DeleteMethod;\n+import org.apache.commons.httpclient.methods.EntityEnclosingMethod;\n \n /**\n  * An HTTP DELETE method implementation that ignores malformed HTTP response header lines.\n  * \n  * @see DeleteMethod\n  */\n-public class ZapDeleteMethod extends DeleteMethod {\n+public class ZapDeleteMethod extends EntityEnclosingMethod {\n \n     public ZapDeleteMethod() {\n         super();\n@@ -42,6 +43,17 @@ public ZapDeleteMethod(String uri) {\n         super(uri);\n     }\n \n+    /**\n+     * Returns <tt>\"DELETE\"</tt>.\n+     * @return <tt>\"DELETE\"</tt>\n+     *\n+     * @since 2.0\n+     */\n+    @Override\n+    public String getName() {\n+        return \"DELETE\";\n+    }\n+\n     /**\n      * {@inheritDoc}\n      * ",
      "parent_sha": "3c9b4122fdee74e70447a2dd60833c875b838cf4"
    }
  },
  {
    "oid": "2284a013ee3e9bccc88977421329383ca8374fff",
    "message": "Prevent adding same add-on's `ResourceBundle`\n\nDo not add the `ResourceBundle` found through the extension if it's\nalready being provided by the add-on, which would lead to an error\nsaying it was duplicated.\n\nSigned-off-by: thc202 <thc202@gmail.com>",
    "date": "2024-07-05T19:51:00Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/2284a013ee3e9bccc88977421329383ca8374fff",
    "details": {
      "sha": "b50a820c20c5a39fed5a6fbdf06e6dcc4a756b76",
      "filename": "zap/src/main/java/org/zaproxy/zap/control/ExtensionFactory.java",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/2284a013ee3e9bccc88977421329383ca8374fff/zap%2Fsrc%2Fmain%2Fjava%2Forg%2Fzaproxy%2Fzap%2Fcontrol%2FExtensionFactory.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/2284a013ee3e9bccc88977421329383ca8374fff/zap%2Fsrc%2Fmain%2Fjava%2Forg%2Fzaproxy%2Fzap%2Fcontrol%2FExtensionFactory.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/zap%2Fsrc%2Fmain%2Fjava%2Forg%2Fzaproxy%2Fzap%2Fcontrol%2FExtensionFactory.java?ref=2284a013ee3e9bccc88977421329383ca8374fff",
      "patch": "@@ -28,6 +28,7 @@\n import java.util.List;\n import java.util.Map;\n import java.util.MissingResourceException;\n+import java.util.Objects;\n import java.util.ResourceBundle;\n import java.util.TreeMap;\n import java.util.Vector;\n@@ -314,7 +315,7 @@ private static void loadMessages(Extension ext) {\n         }\n \n         ResourceBundle msg = getExtensionResourceBundle(ext);\n-        if (msg != null) {\n+        if (msg != null && !isSameResourceBundle(msg, addOn.getResourceBundle())) {\n             ext.setMessages(msg);\n             extensionsWithMessages.put(ext, Boolean.TRUE);\n             Constant.messages.addMessageBundle(ext.getI18nPrefix(), ext.getMessages());\n@@ -325,6 +326,13 @@ private static void loadMessages(Extension ext) {\n         }\n     }\n \n+    private static boolean isSameResourceBundle(ResourceBundle rb1, ResourceBundle rb2) {\n+        if (rb1 == null || rb2 == null) {\n+            return false;\n+        }\n+        return Objects.equals(rb1.getBaseBundleName(), rb2.getBaseBundleName());\n+    }\n+\n     private static ResourceBundle getExtensionResourceBundle(Extension ext) {\n         Package extPackage = ext.getClass().getPackage();\n         String extensionPackage = extPackage != null ? extPackage.getName() + \".\" : \"\";",
      "parent_sha": "a95556c6b9922c497c338a27edc8d4e0a559a3a5"
    }
  },
  {
    "oid": "389595d3ef5d6b0e13f141f1efb92382fa733acb",
    "message": "Properly reset Database options panel\n\nChange DatabaseParam to use the default values (instead of current\nvalues) when parsing the configuration file, so that when the options\nare reset it uses the proper values.\nExtract constants for the default values and use base methods to read\nthe values.",
    "date": "2017-07-03T17:37:45Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/389595d3ef5d6b0e13f141f1efb92382fa733acb",
    "details": {
      "sha": "314b01801082934fb8d47aff1a7e7a99015a7c97",
      "filename": "src/org/parosproxy/paros/extension/option/DatabaseParam.java",
      "status": "modified",
      "additions": 20,
      "deletions": 14,
      "changes": 34,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/389595d3ef5d6b0e13f141f1efb92382fa733acb/src%2Forg%2Fparosproxy%2Fparos%2Fextension%2Foption%2FDatabaseParam.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/389595d3ef5d6b0e13f141f1efb92382fa733acb/src%2Forg%2Fparosproxy%2Fparos%2Fextension%2Foption%2FDatabaseParam.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fextension%2Foption%2FDatabaseParam.java?ref=389595d3ef5d6b0e13f141f1efb92382fa733acb",
      "patch": "@@ -76,6 +76,12 @@ public class DatabaseParam extends AbstractParam {\n      */\r\n     private static final String PARAM_RECOVERY_LOG_ENABLED = PARAM_BASE_KEY + \".recoverylog\";\r\n \r\n+    private static final boolean DEFAULT_COMPACT_DATABASE = false;\r\n+    private static final int DEFAULT_BODY_SIZE = 16777216;\r\n+    private static final int DEFAULT_NEW_SESSION_OPTION = NEW_SESSION_NOT_SPECIFIED;\r\n+    private static final boolean DEFAULT_NEW_SESSION_PROMPT = true;\r\n+    private static final boolean DEFAULT_RECOVERY_LOG_ENABLED = true;\r\n+\r\n     /**\r\n      * The compact option, whether the database should be compacted on exit.\r\n      * Default is {@code false}.\r\n@@ -86,14 +92,14 @@ public class DatabaseParam extends AbstractParam {\n     \r\n     /**\r\n      * The request body size in the history table.\r\n-     * Default is 16777216.\r\n+     * Default is {@value #DEFAULT_BODY_SIZE}.\r\n      * \r\n      */    \r\n     private int requestbodysize;\r\n \r\n     /**\r\n      * The response body size in the history table.\r\n-     * Default is 16777216.\r\n+     * Default is {@value #DEFAULT_BODY_SIZE}.\r\n      * \r\n      */    \r\n     private int responsebodysize;\r\n@@ -121,12 +127,12 @@ public class DatabaseParam extends AbstractParam {\n     public DatabaseParam() {\r\n         super();\r\n         \r\n-        compactDatabase = false;\r\n-        requestbodysize = 16777216;\r\n-\t\tresponsebodysize = 16777216;\r\n-\t\tnewSessionOption = NEW_SESSION_NOT_SPECIFIED;\r\n-\t\tnewSessionPrompt = true;\r\n-\t\trecoveryLogEnabled = true;\r\n+        compactDatabase = DEFAULT_COMPACT_DATABASE;\r\n+        requestbodysize = DEFAULT_BODY_SIZE;\r\n+\t\tresponsebodysize = DEFAULT_BODY_SIZE;\r\n+\t\tnewSessionOption = DEFAULT_NEW_SESSION_OPTION;\r\n+\t\tnewSessionPrompt = DEFAULT_NEW_SESSION_PROMPT;\r\n+\t\trecoveryLogEnabled = DEFAULT_RECOVERY_LOG_ENABLED;\r\n     }\r\n \r\n     /**\r\n@@ -143,12 +149,12 @@ public DatabaseParam() {\n      */\r\n     @Override\r\n     protected void parse() {\r\n-        compactDatabase = getConfig().getBoolean(PARAM_COMPACT_DATABASE, compactDatabase);\r\n-        requestbodysize = getConfig().getInt(PARAM_REQUEST_BODY_SIZE, requestbodysize);\r\n-        responsebodysize = getConfig().getInt(PARAM_RESPONSE_BODY_SIZE, responsebodysize);\r\n-\t\tnewSessionOption = getConfig().getInt(PARAM_NEW_SESSION_OPTION, newSessionOption);\r\n-\t\tnewSessionPrompt = getConfig().getBoolean(PARAM_NEW_SESSION_PROMPT, newSessionPrompt);\r\n-\t\trecoveryLogEnabled = getConfig().getBoolean(PARAM_RECOVERY_LOG_ENABLED, recoveryLogEnabled);\r\n+        compactDatabase = getBoolean(PARAM_COMPACT_DATABASE, DEFAULT_COMPACT_DATABASE);\r\n+        requestbodysize = getInt(PARAM_REQUEST_BODY_SIZE, DEFAULT_BODY_SIZE);\r\n+        responsebodysize = getInt(PARAM_RESPONSE_BODY_SIZE, DEFAULT_BODY_SIZE);\r\n+\t\tnewSessionOption = getInt(PARAM_NEW_SESSION_OPTION, DEFAULT_NEW_SESSION_OPTION);\r\n+\t\tnewSessionPrompt = getBoolean(PARAM_NEW_SESSION_PROMPT, DEFAULT_NEW_SESSION_PROMPT);\r\n+\t\trecoveryLogEnabled = getBoolean(PARAM_RECOVERY_LOG_ENABLED, DEFAULT_RECOVERY_LOG_ENABLED);\r\n     }\r\n \r\n     /**\r",
      "parent_sha": "a22f8087d0df531e97bcf654c39978a54e550512"
    }
  },
  {
    "oid": "3db6a3db2c49a26f23c76d4fae5fda2c2cffb5a4",
    "message": "Do not set/force headless AWT\n\nChange HeadlessBootstrap to not set/force headless AWT, to allow to run\nJxBrowser when ZAP is run in daemon mode.",
    "date": "2017-02-23T19:09:38Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/3db6a3db2c49a26f23c76d4fae5fda2c2cffb5a4",
    "details": {
      "sha": "2dc81cb78b21d53a95f3811bcf0786206fe2a009",
      "filename": "src/org/zaproxy/zap/HeadlessBootstrap.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/3db6a3db2c49a26f23c76d4fae5fda2c2cffb5a4/src%2Forg%2Fzaproxy%2Fzap%2FHeadlessBootstrap.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/3db6a3db2c49a26f23c76d4fae5fda2c2cffb5a4/src%2Forg%2Fzaproxy%2Fzap%2FHeadlessBootstrap.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2FHeadlessBootstrap.java?ref=3db6a3db2c49a26f23c76d4fae5fda2c2cffb5a4",
      "patch": "@@ -43,7 +43,9 @@ abstract class HeadlessBootstrap extends ZapBootstrap {\n     public HeadlessBootstrap(CommandLine args) {\n         super(args);\n \n-        System.setProperty(\"java.awt.headless\", \"true\");\n+        // XXX Do not force headless to allow to run JxBrowser in daemon mode,\n+        // at least until it can be run without a window/dialogue.\n+        // System.setProperty(\"java.awt.headless\", \"true\");\n     }\n \n     /**",
      "parent_sha": "959777ae8bc575a6a3fa78a06cf0c7e3d63b1129"
    }
  },
  {
    "oid": "45667b391de6d890d140ab6c2603a9389ff87249",
    "message": "Issue 975 - Inverse Search Fuzz Results Buggy\n\n - Changed to check both the response body and header when \"inverse\" searching.\n - Removed unncessary null checks.",
    "date": "2014-03-23T17:16:05Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/45667b391de6d890d140ab6c2603a9389ff87249",
    "details": {
      "sha": "5e444f6728fac3bb834b9f4128a885ed120bdccf",
      "filename": "src/org/zaproxy/zap/extension/fuzz/impl/http/HttpFuzzerContentPanel.java",
      "status": "modified",
      "additions": 25,
      "deletions": 29,
      "changes": 54,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/45667b391de6d890d140ab6c2603a9389ff87249/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Ffuzz%2Fimpl%2Fhttp%2FHttpFuzzerContentPanel.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/45667b391de6d890d140ab6c2603a9389ff87249/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Ffuzz%2Fimpl%2Fhttp%2FHttpFuzzerContentPanel.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Ffuzz%2Fimpl%2Fhttp%2FHttpFuzzerContentPanel.java?ref=45667b391de6d890d140ab6c2603a9389ff87249",
      "patch": "@@ -260,35 +260,31 @@ public List<SearchResult> searchResults(Pattern pattern, boolean inverse) {\n             HistoryReference historyReference = it.next().second;\r\n             try {\r\n                 HttpMessage msg = historyReference.getHttpMessage();\r\n-                if (msg != null) {\r\n-                \tif (msg.getRequestHeader() != null) {\r\n-\t                    matcher = pattern.matcher(msg.getResponseHeader().toString());\r\n-\t                    if (inverse) {\r\n-\t                        if (! matcher.find()) {\r\n-\t                            results.add(new SearchResult(msg, ExtensionSearch.Type.Fuzz, pattern.toString(), \"\"));\r\n-\t                        }\r\n-\t                    } else {\r\n-\t                        while (matcher.find()) {\r\n-\t                            results.add(\r\n-\t                                    new SearchResult(ExtensionSearch.Type.Fuzz, pattern.toString(), matcher.group(),\r\n-\t                                            new SearchMatch(msg, SearchMatch.Location.RESPONSE_HEAD, matcher.start(), matcher.end())));\r\n-\t                        }\r\n-\t                    }\r\n-                \t}\r\n-                \tif (msg.getRequestBody() != null) {\r\n-\t                    matcher = pattern.matcher(msg.getResponseBody().toString());\r\n-\t                    if (inverse) {\r\n-\t                        if (! matcher.find()) {\r\n-\t                            results.add(new SearchResult(msg, ExtensionSearch.Type.Fuzz, pattern.toString(), \"\"));\r\n-\t                        }\r\n-\t                    } else {\r\n-\t                        while (matcher.find()) {\r\n-\t                            results.add(\r\n-\t                                    new SearchResult(ExtensionSearch.Type.Fuzz, pattern.toString(), matcher.group(),\r\n-\t                                            new SearchMatch(msg, SearchMatch.Location.RESPONSE_BODY, matcher.start(), matcher.end())));\r\n-\t                        }\r\n-\t                    }\r\n-                \t}\r\n+                if (inverse) {\r\n+                    // Check for no matches in either Response Header or Body\r\n+                    if (!pattern.matcher(msg.getResponseHeader().toString()).find()\r\n+                            && !pattern.matcher(msg.getResponseBody().toString()).find()) {\r\n+                        results.add(new SearchResult(msg, ExtensionSearch.Type.Fuzz, pattern.toString(), \"\"));\r\n+                    }\r\n+                } else {\r\n+                    // Response header\r\n+                    matcher = pattern.matcher(msg.getResponseHeader().toString());\r\n+                    while (matcher.find()) {\r\n+                        results.add(new SearchResult(\r\n+                                ExtensionSearch.Type.Fuzz,\r\n+                                pattern.toString(),\r\n+                                matcher.group(),\r\n+                                new SearchMatch(msg, SearchMatch.Location.RESPONSE_HEAD, matcher.start(), matcher.end())));\r\n+                    }\r\n+                    // Response body\r\n+                    matcher = pattern.matcher(msg.getResponseBody().toString());\r\n+                    while (matcher.find()) {\r\n+                        results.add(new SearchResult(\r\n+                                ExtensionSearch.Type.Fuzz,\r\n+                                pattern.toString(),\r\n+                                matcher.group(),\r\n+                                new SearchMatch(msg, SearchMatch.Location.RESPONSE_BODY, matcher.start(), matcher.end())));\r\n+                    }\r\n                 }\r\n             } catch (HttpMalformedHeaderException e) {\r\n                 logger.error(e.getMessage(), e);\r",
      "parent_sha": "f4016a7266821b9e2806cff9f5ccdcc91d355fbe"
    }
  },
  {
    "oid": "84b72fbaf5da435f07d5495a8cff3cb110ea6fbe",
    "message": "Remove warning suppressions in KeyboardAPI\n\nChange KeyboardAPI.handleApiOther to remove warning suppressions, by\nsetting the type argument to the Comparator(s) being used.",
    "date": "2016-06-30T22:56:48Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/84b72fbaf5da435f07d5495a8cff3cb110ea6fbe",
    "details": {
      "sha": "81885d3e094a73f238f82aae943215f250b09881",
      "filename": "src/org/zaproxy/zap/extension/keyboard/KeyboardAPI.java",
      "status": "modified",
      "additions": 6,
      "deletions": 8,
      "changes": 14,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/84b72fbaf5da435f07d5495a8cff3cb110ea6fbe/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fkeyboard%2FKeyboardAPI.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/84b72fbaf5da435f07d5495a8cff3cb110ea6fbe/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fkeyboard%2FKeyboardAPI.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fkeyboard%2FKeyboardAPI.java?ref=84b72fbaf5da435f07d5495a8cff3cb110ea6fbe",
      "patch": "@@ -68,7 +68,6 @@ public URI getCheatSheetKeyURI() throws URIException, NullPointerException {\n \t\t\t\ttrue);\n \t}\n \n-\t@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n \t@Override\n \tpublic HttpMessage handleApiOther(HttpMessage msg, String name, JSONObject params) throws ApiException {\n \t\tif (OTHER_CHEETSHEET_ACTION_ORDER.equals(name) ||\n@@ -77,17 +76,16 @@ public HttpMessage handleApiOther(HttpMessage msg, String name, JSONObject param\n \t\t\tList<KeyboardShortcut> shortcuts = this.extension.getShortcuts();\n \t\t\t\n \t\t\tif (OTHER_CHEETSHEET_ACTION_ORDER.equals(name)) {\n-\t\t\t\tCollections.sort(shortcuts, new Comparator() {\n+\t\t\t\tCollections.sort(shortcuts, new Comparator<KeyboardShortcut>() {\n \t\t\t\t\t@Override\n-\t\t\t\t\tpublic int compare(Object o1, Object o2) {\n-\t\t\t\t\t\treturn ((KeyboardShortcut)o1).getName().compareTo(((KeyboardShortcut)o2).getName());\n+\t\t\t\t\tpublic int compare(KeyboardShortcut o1, KeyboardShortcut o2) {\n+\t\t\t\t\t\treturn o1.getName().compareTo(o2.getName());\n \t\t\t\t\t}});\n \t\t\t} else {\n-\t\t\t\tCollections.sort(shortcuts, new Comparator() {\n+\t\t\t\tCollections.sort(shortcuts, new Comparator<KeyboardShortcut>() {\n \t\t\t\t\t@Override\n-\t\t\t\t\tpublic int compare(Object o1, Object o2) {\n-\t\t\t\t\t\treturn ((KeyboardShortcut)o1).getKeyStrokeKeyCodeString().compareTo(\n-\t\t\t\t\t\t\t\t((KeyboardShortcut)o2).getKeyStrokeKeyCodeString());\n+\t\t\t\t\tpublic int compare(KeyboardShortcut o1, KeyboardShortcut o2) {\n+\t\t\t\t\t\treturn o1.getKeyStrokeKeyCodeString().compareTo(o2.getKeyStrokeKeyCodeString());\n \t\t\t\t\t}});\n \t\t\t}\n \t\t\t",
      "parent_sha": "b6b87041e8f999faf176d1dff7ab614e6f9ee1bd"
    }
  },
  {
    "oid": "9bfeadd12e4ab04ff5d3710cc741c438848eefd5",
    "message": "Show stack trace of exception on proxy errors\n\nAllow users to report the stack trace of the errors more easily, which\nis sometimes essential to know what the actual cause of the problem is.\nThe cause of the exception is shown first since it's more important.",
    "date": "2015-07-17T21:52:58Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/9bfeadd12e4ab04ff5d3710cc741c438848eefd5",
    "details": {
      "sha": "e1f26fa60a6a42fb020e6fc9b59bcab57c2fb83b",
      "filename": "src/org/parosproxy/paros/core/proxy/ProxyThread.java",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/9bfeadd12e4ab04ff5d3710cc741c438848eefd5/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fproxy%2FProxyThread.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/9bfeadd12e4ab04ff5d3710cc741c438848eefd5/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fproxy%2FProxyThread.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fproxy%2FProxyThread.java?ref=9bfeadd12e4ab04ff5d3710cc741c438848eefd5",
      "patch": "@@ -54,6 +54,7 @@\n // ZAP: 2014/05/01 Issue 1168: Add support for deflate encoded responses\r\n // ZAP: 2015/01/04 Issue 1334: ZAP does not handle API requests on reused connections\r\n // ZAP: 2015/02/24 Issue 1540: Allow proxy scripts to fake responses\r\n+// ZAP: 2015/07/17 Show stack trace of the exceptions on proxy errors\r\n \r\n package org.parosproxy.paros.core.proxy;\r\n \r\n@@ -74,6 +75,7 @@\n import java.util.zip.InflaterInputStream;\r\n \r\n import org.apache.commons.httpclient.HttpException;\r\n+import org.apache.commons.lang.exception.ExceptionUtils;\r\n import org.apache.log4j.Logger;\r\n import org.parosproxy.paros.db.RecordHistory;\r\n import org.parosproxy.paros.model.Model;\r\n@@ -272,7 +274,11 @@ private static void setErrorResponse(HttpMessage msg, String responseStatus, Exc\n                 .append(\" [\")\r\n                 .append(cause.getClass().getName())\r\n                 .append(\"]: \")\r\n-                .append(cause.getLocalizedMessage());\r\n+                .append(cause.getLocalizedMessage())\r\n+                .append(\"\\n\\nStack Trace:\\n\");\r\n+        for (String stackTraceFrame : ExceptionUtils.getRootCauseStackTrace(cause)) {\r\n+            strBuilder.append(stackTraceFrame).append('\\n');\r\n+        }\r\n \r\n         if (!HttpRequestHeader.HEAD.equals(msg.getRequestHeader().getMethod())) {\r\n             msg.setResponseBody(strBuilder.toString());\r",
      "parent_sha": "2c242ff9251f2f9e139c32e6ebf221830dd59e52"
    }
  },
  {
    "oid": "c94290b7d1340be0a8b3ab0a0827c827e48f7c33",
    "message": "Use empty String in query/post variant parameters\n\nChange class VariantAbstractQuery to use an empty String, when creating\nthe parameters, if the parameter does not have a name/value, keeping the\nold behaviour (some scanners do not handle parameters without value,\nleading to NullPointerException).\nBased on results from zapbot's WAVSEP scans.\n\nRelated to #2456 - Fix issues related to ParameterParser",
    "date": "2016-05-26T15:59:12Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/c94290b7d1340be0a8b3ab0a0827c827e48f7c33",
    "details": {
      "sha": "a8a42c6df21199565b8080cb3d784dec68eb616e",
      "filename": "src/org/parosproxy/paros/core/scanner/VariantAbstractQuery.java",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/c94290b7d1340be0a8b3ab0a0827c827e48f7c33/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fscanner%2FVariantAbstractQuery.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/c94290b7d1340be0a8b3ab0a0827c827e48f7c33/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fscanner%2FVariantAbstractQuery.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fscanner%2FVariantAbstractQuery.java?ref=c94290b7d1340be0a8b3ab0a0827c827e48f7c33",
      "patch": "@@ -28,6 +28,7 @@\n // ZAP: 2014/01/06 Issue 965: Support 'single page' apps and 'non standard' parameter separators\r\n // ZAP: 2014/02/08 Used the same constants used in ScanParam Target settings\r\n // ZAP: 2016/05/04 Changes to address issues related to ParameterParser\r\n+// ZAP: 2016/05/26 Use non-null String for names and values of parameters, scanners might not handle null names/values well\r\n \r\n package org.parosproxy.paros.core.scanner;\r\n \r\n@@ -119,11 +120,18 @@ protected void setParameters(int type, List<org.zaproxy.zap.model.NameValuePair>\n \r\n         int i = 0;\r\n         for (org.zaproxy.zap.model.NameValuePair parameter : parameters) {\r\n-            listParam.add(new NameValuePair(type, parameter.getName(), parameter.getValue(), i));\r\n+            listParam.add(new NameValuePair(type, nonNullString(parameter.getName()), nonNullString(parameter.getValue()), i));\r\n             i++;\r\n         }\r\n     }\r\n \r\n+    private static String nonNullString(String string) {\r\n+        if (string == null) {\r\n+            return \"\";\r\n+        }\r\n+        return string;\r\n+    }\r\n+\r\n     @Override\r\n     public List<NameValuePair> getParamList() {\r\n         return listParam;\r",
      "parent_sha": "66e547c480718c9a59b073d6f9b1bee6950005a5"
    }
  },
  {
    "oid": "189880628aa408331c9aafa0e24f436fc20b64e2",
    "message": "Changed to use 2.6 versions file",
    "date": "2017-03-08T16:56:38Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/189880628aa408331c9aafa0e24f436fc20b64e2",
    "details": {
      "sha": "a5b55dee244d2c0d5d253ffcdccc14674aeada8b",
      "filename": "src/org/zaproxy/zap/extension/autoupdate/ExtensionAutoUpdate.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/189880628aa408331c9aafa0e24f436fc20b64e2/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fautoupdate%2FExtensionAutoUpdate.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/189880628aa408331c9aafa0e24f436fc20b64e2/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fautoupdate%2FExtensionAutoUpdate.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fautoupdate%2FExtensionAutoUpdate.java?ref=189880628aa408331c9aafa0e24f436fc20b64e2",
      "patch": "@@ -98,8 +98,8 @@ public class ExtensionAutoUpdate extends ExtensionAdaptor implements CheckForUpd\n \t// The short URL means that the number of checkForUpdates can be tracked - see https://bitly.com/u/psiinon\n \t// Note that URLs must now use https (unless you change the code;)\n     \n-    private static final String ZAP_VERSIONS_REL_XML_SHORT = \"https://bit.ly/owaspzap-2-5-0\";\n-    private static final String ZAP_VERSIONS_REL_XML_FULL = \"https://raw.githubusercontent.com/zaproxy/zap-admin/master/ZapVersions-2.5.xml\";\n+    private static final String ZAP_VERSIONS_REL_XML_SHORT = \"https://bit.ly/owaspzap-2-6-0\";\n+    private static final String ZAP_VERSIONS_REL_XML_FULL = \"https://raw.githubusercontent.com/zaproxy/zap-admin/master/ZapVersions-2.6.xml\";\n     \n     private static final String ZAP_VERSIONS_DEV_XML_SHORT = \"https://bit.ly/owaspzap-dev\";\n     private static final String ZAP_VERSIONS_DEV_XML_FULL = \"https://raw.githubusercontent.com/zaproxy/zap-admin/master/ZapVersions-dev.xml\";",
      "parent_sha": "d6f2f7b0f674a4f372d33a396be7bd5bd58e60ca"
    }
  },
  {
    "oid": "f8606ca5be2e2ad6cc2f7d3d199dd4c3f3d3e5de",
    "message": "Do not attempt to load extension with errors\n\nAdd null check as the extension is null if there were errors loading\nit.\n\nSigned-off-by: thc202 <thc202@gmail.com>",
    "date": "2022-08-19T17:05:19Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/f8606ca5be2e2ad6cc2f7d3d199dd4c3f3d3e5de",
    "details": {
      "sha": "bf1d4e59b9ce59a415212e07a2270b954a95fa12",
      "filename": "zap/src/main/java/org/zaproxy/zap/control/AddOnLoader.java",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/f8606ca5be2e2ad6cc2f7d3d199dd4c3f3d3e5de/zap%2Fsrc%2Fmain%2Fjava%2Forg%2Fzaproxy%2Fzap%2Fcontrol%2FAddOnLoader.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/f8606ca5be2e2ad6cc2f7d3d199dd4c3f3d3e5de/zap%2Fsrc%2Fmain%2Fjava%2Forg%2Fzaproxy%2Fzap%2Fcontrol%2FAddOnLoader.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/zap%2Fsrc%2Fmain%2Fjava%2Forg%2Fzaproxy%2Fzap%2Fcontrol%2FAddOnLoader.java?ref=f8606ca5be2e2ad6cc2f7d3d199dd4c3f3d3e5de",
      "patch": "@@ -574,9 +574,11 @@ private void checkAndLoadDependentExtensions() {\n                         Extension ext =\n                                 loadAddOnExtension(\n                                         runningAddOn, extReqs.getClassname(), extAddOnClassLoader);\n-                        AddOnInstaller.installAddOnExtension(runningAddOn, ext);\n-                        runnableAddOns.get(runningAddOn).add(extReqs.getClassname());\n-                        changed = true;\n+                        if (ext != null) {\n+                            AddOnInstaller.installAddOnExtension(runningAddOn, ext);\n+                            runnableAddOns.get(runningAddOn).add(extReqs.getClassname());\n+                            changed = true;\n+                        }\n                     }\n                 }\n             }",
      "parent_sha": "8587632dc945542586baf498f638aed687d20527"
    }
  },
  {
    "oid": "82dee2b0c54e4336cfbc35a7fa2587c9522ae838",
    "message": "Fixed issue reported by FindBugs",
    "date": "2013-12-30T14:54:02Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/82dee2b0c54e4336cfbc35a7fa2587c9522ae838",
    "details": {
      "sha": "51840b2c45b73dd0f94ae54944dcded1076729cb",
      "filename": "src/org/zaproxy/zap/session/CookieBasedSessionManagementMethodType.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/82dee2b0c54e4336cfbc35a7fa2587c9522ae838/src%2Forg%2Fzaproxy%2Fzap%2Fsession%2FCookieBasedSessionManagementMethodType.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/82dee2b0c54e4336cfbc35a7fa2587c9522ae838/src%2Forg%2Fzaproxy%2Fzap%2Fsession%2FCookieBasedSessionManagementMethodType.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fsession%2FCookieBasedSessionManagementMethodType.java?ref=82dee2b0c54e4336cfbc35a7fa2587c9522ae838",
      "patch": "@@ -104,7 +104,7 @@ public void processMessageToMatchSession(HttpMessage message, WebSession session\n \t\t\twhile (it.hasNext()) {\n \t\t\t\tHttpCookie c = it.next();\n \t\t\t\tfor (Cookie sc : session.getHttpState().getCookies())\n-\t\t\t\t\tif (sc.getName().equals(c)) {\n+\t\t\t\t\tif (sc.getName().equals(c.getName())) {\n \t\t\t\t\t\tit.remove();\n \t\t\t\t\t\tbreak;\n \t\t\t\t\t}",
      "parent_sha": "e0963e9f41adfa9a8ca635670c68ff82af4aa339"
    }
  },
  {
    "oid": "a130fa9b32e0437f70e7ec1190f7d701402e01fe",
    "message": "Increased size at which large responses are not automatically loaded from 10,000 to 100,000 (thanks Ricardo;)",
    "date": "2012-07-11T10:04:34Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/a130fa9b32e0437f70e7ec1190f7d701402e01fe",
    "details": {
      "sha": "42b77e20b0eee9b0764271e61738ac6484901e42",
      "filename": "src/org/zaproxy/zap/extension/httppanel/view/largeresponse/ExtensionHttpPanelLargeResponseView.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/a130fa9b32e0437f70e7ec1190f7d701402e01fe/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fhttppanel%2Fview%2Flargeresponse%2FExtensionHttpPanelLargeResponseView.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/a130fa9b32e0437f70e7ec1190f7d701402e01fe/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fhttppanel%2Fview%2Flargeresponse%2FExtensionHttpPanelLargeResponseView.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fhttppanel%2Fview%2Flargeresponse%2FExtensionHttpPanelLargeResponseView.java?ref=a130fa9b32e0437f70e7ec1190f7d701402e01fe",
      "patch": "@@ -33,7 +33,7 @@\n public class ExtensionHttpPanelLargeResponseView extends ExtensionAdaptor {\r\n \t\r\n \tpublic static final String NAME = \"ExtensionHttpPanelLargeResponseView\";\r\n-\tpublic static final int MIN_CONTENT_LENGTH = 10000;\r\n+\tpublic static final int MIN_CONTENT_LENGTH = 100000;\r\n \t\r\n \tpublic ExtensionHttpPanelLargeResponseView() {\r\n \t\tsuper(NAME);\r",
      "parent_sha": "e2de2e268e5cbc058ec20445c9ac96548b60747d"
    }
  },
  {
    "oid": "5587cef3bfda61150a83070f94cae12e71b60298",
    "message": "Issue 864 - AScan API - Allow to enable/disable all the active scanners\n\nAdded API actions to the ActiveScanAPI that allows to enable/disable all active scanners.",
    "date": "2013-11-17T02:10:39Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/5587cef3bfda61150a83070f94cae12e71b60298",
    "details": {
      "sha": "2badbb9490eb479c4b11373c952bbfce3dc2f42f",
      "filename": "src/org/zaproxy/zap/extension/ascan/ActiveScanAPI.java",
      "status": "modified",
      "additions": 18,
      "deletions": 4,
      "changes": 22,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/5587cef3bfda61150a83070f94cae12e71b60298/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fascan%2FActiveScanAPI.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/5587cef3bfda61150a83070f94cae12e71b60298/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fascan%2FActiveScanAPI.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fascan%2FActiveScanAPI.java?ref=5587cef3bfda61150a83070f94cae12e71b60298",
      "patch": "@@ -57,6 +57,8 @@ public class ActiveScanAPI extends ApiImplementor implements ScannerListener {\n \r\n \tprivate static final String ACTION_EXCLUDE_FROM_SCAN = \"excludeFromScan\";\r\n \tprivate static final String ACTION_CLEAR_EXCLUDED_FROM_SCAN = \"clearExcludedFromScan\";\r\n+\tprivate static final String ACTION_ENABLE_ALL_SCANNERS = \"enableAllScanners\";\r\n+\tprivate static final String ACTION_DISABLE_ALL_SCANNERS = \"disableAllScanners\";\r\n     \r\n \tprivate static final String VIEW_STATUS = \"status\";\r\n \tprivate static final String VIEW_EXCLUDED_FROM_SCAN = \"excludedFromScan\";\r\n@@ -76,6 +78,8 @@ public ActiveScanAPI (ExtensionActiveScan extension) {\n         this.addApiAction(new ApiAction(ACTION_SCAN, new String[] {PARAM_URL}, new String[] {PARAM_RECURSE, PARAM_JUST_IN_SCOPE}));\r\n \t\tthis.addApiAction(new ApiAction(ACTION_CLEAR_EXCLUDED_FROM_SCAN));\r\n \t\tthis.addApiAction(new ApiAction(ACTION_EXCLUDE_FROM_SCAN, new String[] {PARAM_REGEX}));\r\n+\t\tthis.addApiAction(new ApiAction(ACTION_ENABLE_ALL_SCANNERS));\r\n+\t\tthis.addApiAction(new ApiAction(ACTION_DISABLE_ALL_SCANNERS));\r\n \r\n \t\tthis.addApiView(new ApiView(VIEW_STATUS));\r\n \t\tthis.addApiView(new ApiView(VIEW_EXCLUDED_FROM_SCAN));\r\n@@ -91,29 +95,39 @@ public String getPrefix() {\n \t@Override\r\n \tpublic ApiResponse handleApiAction(String name, JSONObject params) throws ApiException {\r\n \t\tlog.debug(\"handleApiAction \" + name + \" \" + params.toString());\r\n-\t\tif (ACTION_SCAN.equals(name)) {\r\n+\t\tswitch(name) {\r\n+\t\tcase ACTION_SCAN:\r\n \t\t\tString url = params.getString(PARAM_URL);\r\n \t\t\tif (url == null || url.length() == 0) {\r\n \t\t\t\tthrow new ApiException(ApiException.Type.MISSING_PARAMETER, PARAM_URL);\r\n \t\t\t}\r\n \t\t    scanURL(params.getString(PARAM_URL), this.getParam(params, PARAM_RECURSE, true), this.getParam(params, PARAM_JUST_IN_SCOPE, false));\r\n \r\n-\t\t} else if (ACTION_CLEAR_EXCLUDED_FROM_SCAN.equals(name)) {\r\n+            break;\r\n+\t\tcase ACTION_CLEAR_EXCLUDED_FROM_SCAN:\r\n \t\t\ttry {\r\n \t\t\t\tSession session = Model.getSingleton().getSession();\r\n \t\t\t\tsession.setExcludeFromScanRegexs(new ArrayList<String>());\r\n \t\t\t} catch (SQLException e) {\r\n \t\t\t\tthrow new ApiException(ApiException.Type.INTERNAL_ERROR, e.getMessage());\r\n \t\t\t}\r\n-\t\t} else if (ACTION_EXCLUDE_FROM_SCAN.equals(name)) {\r\n+            break;\r\n+\t\tcase ACTION_EXCLUDE_FROM_SCAN:\r\n \t\t\tString regex = params.getString(PARAM_REGEX);\r\n \t\t\ttry {\r\n \t\t\t\tSession session = Model.getSingleton().getSession();\r\n \t\t\t\tsession.addExcludeFromScanRegexs(regex);\r\n \t\t\t} catch (Exception e) {\r\n \t\t\t\tthrow new ApiException(ApiException.Type.BAD_FORMAT, PARAM_REGEX);\r\n \t\t\t}\r\n-\t\t} else {\r\n+\t\t\tbreak;\r\n+\t\tcase ACTION_ENABLE_ALL_SCANNERS:\r\n+\t\t\tPluginFactory.setAllPluginEnabled(true);\r\n+\t\t\tbreak;\r\n+\t\tcase ACTION_DISABLE_ALL_SCANNERS:\r\n+\t\t\tPluginFactory.setAllPluginEnabled(false);\r\n+\t\t\tbreak;\r\n+\t\tdefault:\r\n \t\t\tthrow new ApiException(ApiException.Type.BAD_ACTION);\r\n \t\t}\r\n \t\treturn ApiResponseElement.OK;\r",
      "parent_sha": "969e24f8fcfdd86848df70b20c52447fcf4592b0"
    }
  },
  {
    "oid": "0d252e287f7dbc909663776c21d713420fb6cecb",
    "message": "Support Direct Web Remoting (DWR) RPC/POST parameters",
    "date": "2014-06-26T13:07:35Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/0d252e287f7dbc909663776c21d713420fb6cecb",
    "details": {
      "sha": "a05c64f860aa17d94260f4b4b029c05fd1c8077d",
      "filename": "src/org/parosproxy/paros/core/scanner/ScannerParam.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/0d252e287f7dbc909663776c21d713420fb6cecb/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fscanner%2FScannerParam.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/0d252e287f7dbc909663776c21d713420fb6cecb/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fscanner%2FScannerParam.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fscanner%2FScannerParam.java?ref=0d252e287f7dbc909663776c21d713420fb6cecb",
      "patch": "@@ -82,12 +82,13 @@ public class ScannerParam extends AbstractParam {\n     public static final int RPC_JSON        = 1<<2;\r\n     public static final int RPC_GWT         = 1<<3;\r\n     public static final int RPC_ODATA       = 1<<4;\r\n+    public static final int RPC_DWR         = 1<<5;\r\n     public static final int RPC_CUSTOM      = 1<<7;\r\n     public static final int RPC_USERDEF     = 1<<8;\r\n     \r\n     // Defaults for initial configuration\r\n-    public static final int TARGET_INJECTABLE_DEFAULT = TARGET_QUERYSTRING | TARGET_POSTDATA;\r\n-    public static final int TARGET_ENABLED_RPC_DEFAULT = RPC_MULTIPART | RPC_XML | RPC_JSON | RPC_GWT | RPC_ODATA;\r\n+    public static final int TARGET_INJECTABLE_DEFAULT = TARGET_QUERYSTRING | TARGET_POSTDATA | TARGET_COOKIE | TARGET_HTTPHEADERS | TARGET_URLPATH;\r\n+    public static final int TARGET_ENABLED_RPC_DEFAULT = RPC_MULTIPART | RPC_XML | RPC_JSON | RPC_GWT | RPC_ODATA | RPC_DWR;\r\n         \r\n     // Internal variables\r\n     private int hostPerScan = 2;\r",
      "parent_sha": "a9a0f047cad10817a0276b35aeefdadb1bb008ac"
    }
  },
  {
    "oid": "76833a4d6b9eaa2402c64f593e8146033795fc4c",
    "message": "reverted testability attempt",
    "date": "2014-05-02T09:57:16Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/76833a4d6b9eaa2402c64f593e8146033795fc4c",
    "details": {
      "sha": "7213d3c67f575097f71f45721f996b8d7d764742",
      "filename": "src/org/parosproxy/paros/extension/ExtensionHookMenu.java",
      "status": "modified",
      "additions": 9,
      "deletions": 10,
      "changes": 19,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/76833a4d6b9eaa2402c64f593e8146033795fc4c/src%2Forg%2Fparosproxy%2Fparos%2Fextension%2FExtensionHookMenu.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/76833a4d6b9eaa2402c64f593e8146033795fc4c/src%2Forg%2Fparosproxy%2Fparos%2Fextension%2FExtensionHookMenu.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fextension%2FExtensionHookMenu.java?ref=76833a4d6b9eaa2402c64f593e8146033795fc4c",
      "patch": "@@ -25,7 +25,6 @@\n // and POPUP_MENU_SEPARATOR if there is a view.\r\n // ZAP: 2014/01/28 Issue 207: Support keyboard shortcuts\r\n // ZAP: 2014/05/02 Fixed method links in Javadocs\r\n-// ZAP: 2014/05/02 Made menu getter methods protected for ease of testing\r\n \r\n package org.parosproxy.paros.extension;\r\n \r\n@@ -70,27 +69,27 @@ public class ExtensionHookMenu {\n         }\r\n     }\r\n     \r\n-    protected List<JMenuItem> getNewMenus() {\r\n+    List<JMenuItem> getNewMenus() {\r\n         return newMenuList;\r\n     }\r\n \r\n-    protected List<JMenuItem> getFile() {\r\n+    List<JMenuItem> getFile() {\r\n         return fileMenuItemList;\r\n     }\r\n \r\n-    protected List<JMenuItem> getEdit() {\r\n+    List<JMenuItem> getEdit() {\r\n         return editMenuItemList;\r\n     }\r\n \r\n-    protected List<JMenuItem> getView() {\r\n+    List<JMenuItem> getView() {\r\n         return viewMenuItemList;\r\n     }\r\n \r\n-    protected List<JMenuItem> getAnalyse() {\r\n+    List<JMenuItem> getAnalyse() {\r\n         return analyseMenuItemList;\r\n     }\r\n \r\n-    protected List<JMenuItem> getTools() {\r\n+    List<JMenuItem> getTools() {\r\n         return toolsMenuItemList;\r\n     }\r\n     \r\n@@ -100,15 +99,15 @@ protected List<JMenuItem> getTools() {\n      * Get the plugin popup menu used for the whole workbench.\r\n      * @return\r\n      */\r\n-    protected List<JMenuItem> getPopupMenus() {\r\n+    List<JMenuItem> getPopupMenus() {\r\n         return popupMenuList;\r\n     }\r\n \r\n-    protected List<JMenuItem> getHelpMenus() {\r\n+    List<JMenuItem> getHelpMenus() {\r\n         return helpMenuList;\r\n     }\r\n \r\n-    protected List<JMenuItem> getReportMenus() {\r\n+    List<JMenuItem> getReportMenus() {\r\n         return reportMenuList;\r\n     }\r\n \r",
      "parent_sha": "2f94817b1b555300c951e4dc13c79c719aa80f6e"
    }
  },
  {
    "oid": "478f19ffa75b8c62285e542b73243ff27b050aeb",
    "message": "Restored a logger call, from debug to info.",
    "date": "2011-09-29T14:12:32Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/478f19ffa75b8c62285e542b73243ff27b050aeb",
    "details": {
      "sha": "4396e3b32a8781c59d1341e89841ab8a320abc77",
      "filename": "src/org/zaproxy/zap/extension/reveal/ExtensionReveal.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/478f19ffa75b8c62285e542b73243ff27b050aeb/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Freveal%2FExtensionReveal.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/478f19ffa75b8c62285e542b73243ff27b050aeb/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Freveal%2FExtensionReveal.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Freveal%2FExtensionReveal.java?ref=478f19ffa75b8c62285e542b73243ff27b050aeb",
      "patch": "@@ -130,7 +130,7 @@ public boolean onHttpResponseReceive(HttpMessage msg) {\n \t\t\t\t\t\t\t\t\t\tATT_READONLY.equalsIgnoreCase(att.getName()) ||\r\n \t\t\t\t\t\t\t\t\t\t(ATT_TYPE.equalsIgnoreCase(att.getName()) && \r\n \t\t\t\t\t\t\t\t\t\t\t\tTYPE_HIDDEN.equalsIgnoreCase(att.getValue()))) {\r\n-\t\t\t\t\t\t\t\t\t\tlogger.info(\"Removing \" + att.getName() + \": \" + response.substring(att.getBegin(), att.getEnd()));\r\n+\t\t\t\t\t\t\t\t\t\tlogger.debug(\"Removing \" + att.getName() + \": \" + response.substring(att.getBegin(), att.getEnd()));\r\n \t\t\t\t\t\t\t\t\t\toutputDocument.remove(att);\r\n \t\t\t\t\t\t\t\t\t\tchanged = true;\r\n \t\t\t\t\t\t\t\t\t}\r",
      "parent_sha": "b3603d2c2440161f0b5d5f560ef637c6ed31b592"
    }
  },
  {
    "oid": "a32cfb1477911499d8799c13c035b4cade4ac94e",
    "message": "Added OWASP homepage to About box.",
    "date": "2010-11-29T21:22:12Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/a32cfb1477911499d8799c13c035b4cade4ac94e",
    "details": {
      "sha": "7da9e51d6c2044a1114f6c0233a84cf94ffd550e",
      "filename": "src/org/zaproxy/zap/view/AboutPanel.java",
      "status": "modified",
      "additions": 40,
      "deletions": 31,
      "changes": 71,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/a32cfb1477911499d8799c13c035b4cade4ac94e/src%2Forg%2Fzaproxy%2Fzap%2Fview%2FAboutPanel.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/a32cfb1477911499d8799c13c035b4cade4ac94e/src%2Forg%2Fzaproxy%2Fzap%2Fview%2FAboutPanel.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fview%2FAboutPanel.java?ref=a32cfb1477911499d8799c13c035b4cade4ac94e",
      "patch": "@@ -61,6 +61,7 @@ public class AboutPanel extends JPanel {\n         + \"HSQLDB is licensed under BSD license.  JDIC is licensed by Sun Microsystems, Inc under the LGPL license.  \"\r\n         + \"The Copyrights of these softwares belong to their respective owners.\"\r\n         + \"</body></html>\";\r\n+\tprivate static final String HOMEPAGE = \"<html><body><p>http://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project</body></html>\";\r\n         \r\n \tprivate JLabel lblDisclaimer = null;\r\n     /**\r\n@@ -106,13 +107,13 @@ public AboutPanel(LayoutManager arg0, boolean arg1) {\n \t * @return void\r\n \t */\r\n \tprivate  void initialize() {\r\n+\t\tGridBagConstraints gridBagConstraints9 = new GridBagConstraints();\r\n \t\tGridBagConstraints gridBagConstraints8 = new GridBagConstraints();\r\n \t\tGridBagConstraints gridBagConstraints7 = new GridBagConstraints();\r\n \t\tGridBagConstraints gridBagConstraints6 = new GridBagConstraints();\r\n \t\tGridBagConstraints gridBagConstraints5 = new GridBagConstraints();\r\n \t\tGridBagConstraints gridBagConstraints4 = new GridBagConstraints();\r\n \t\tGridBagConstraints gridBagConstraints3 = new GridBagConstraints();\r\n-\t\tGridBagConstraints gridBagConstraints2 = new GridBagConstraints();\r\n \t\tGridBagConstraints gridBagConstraints1 = new GridBagConstraints();\r\n \t\tlblDisclaimer = new JLabel();\r\n \t\t//lblName = new JLabel();\r\n@@ -127,9 +128,9 @@ private  void initialize() {\n \t\tjavax.swing.JLabel lblCopyrightDetail = new JLabel();\r\n \r\n \t\tjavax.swing.JLabel lblLogo = new JLabel();\r\n+\t\tJLabel lblHomepage = new JLabel();\r\n \r\n \t\tthis.setLayout(new GridBagLayout());\r\n-\t\t// TODO get this right...\r\n \t\tthis.setPreferredSize(new java.awt.Dimension(420,450));\r\n \t\tthis.setBackground(java.awt.Color.white);\r\n \t\t//this.setSize(new java.awt.Dimension(0,0));\r\n@@ -138,9 +139,6 @@ private  void initialize() {\n \t\tlblLogo.setIcon(new ImageIcon(getClass().getResource(\"/resource/zap48x48.png\")));\r\n \t\tlblLogo.setName(\"lblLogo\");\r\n \t\tlblCopyrightDetail.setText(LICENSE_DETAIL);\r\n-\t\t// TODO get this looking right\r\n-\t\t//lblCopyrightDetail.setPreferredSize(new java.awt.Dimension(300,120));\r\n-\t\t//lblCopyrightDetail.setPreferredSize(new java.awt.Dimension(350,140));\r\n \t\tlblCopyrightDetail.setFont(new java.awt.Font(\"Default\", java.awt.Font.PLAIN, 11));\r\n \t\tlblCopyrightDetail.setName(\"lblCopyrightDetail\");\r\n \t\tlblCopyrightDetail.setBackground(java.awt.Color.white);\r\n@@ -150,9 +148,11 @@ private  void initialize() {\n \t\tlblVersion.setFont(new java.awt.Font(\"Default\", java.awt.Font.PLAIN, 18));\r\n \t\tlblVersion.setName(\"lblVersion\");\r\n \t\tlblVersion.setBackground(java.awt.Color.white);\r\n+\t\t\r\n+\t\tlblHomepage.setText(HOMEPAGE);\r\n+\t\tlblHomepage.setFont(new java.awt.Font(\"Default\", java.awt.Font.PLAIN, 12));\r\n+\t\t\r\n \t\tlblOtherCopyright.setText(OTHER_LICENSE);\r\n-\t\t// TODO get this looking right\r\n-\t\t//lblOtherCopyright.setPreferredSize(new java.awt.Dimension(300,80));\r\n \t\tlblOtherCopyright.setPreferredSize(new java.awt.Dimension(350,140));\r\n \t\tlblOtherCopyright.setName(\"lblOtherCopyright\");\r\n \t\tlblOtherCopyright.setFont(new java.awt.Font(\"Dialog\", java.awt.Font.PLAIN, 11));\r\n@@ -173,8 +173,6 @@ private  void initialize() {\n \t\t\t\t\"the security of your own web application or those you are authorized \" +\r\n \t\t\t\t\"to do so.  The authors of this product take no responsibility for any \" +\r\n \t\t\t\t\"problems in relation to running ZAP against any applications or machines.<p></body></html>\");\r\n-\t\t// TODO get this looking right\r\n-\t\t//lblDisclaimer.setPreferredSize(new java.awt.Dimension(300,60));\r\n \t\tlblDisclaimer.setPreferredSize(new java.awt.Dimension(350,70));\r\n \t\tlblDisclaimer.setName(\"lblDisclaimer\");\r\n \t\tlblDisclaimer.setFont(new java.awt.Font(\"Dialog\", java.awt.Font.PLAIN, 11));\r\n@@ -184,67 +182,78 @@ private  void initialize() {\n \t\tgridBagConstraints1.ipadx = 0;\r\n \t\tgridBagConstraints1.ipady = 0;\r\n \t\tgridBagConstraints1.gridheight = 2;\r\n-\t\tgridBagConstraints2.gridx = 1;\r\n-\t\tgridBagConstraints2.gridy = 0;\r\n-\t\tgridBagConstraints2.ipadx = 0;\r\n-\t\tgridBagConstraints2.ipady = 0;\r\n+\t\t\r\n \t\tgridBagConstraints3.gridx = 1;\r\n \t\tgridBagConstraints3.gridy = 0;\r\n \t\tgridBagConstraints3.ipadx = 0;\r\n \t\tgridBagConstraints3.ipady = 0;\r\n \t\tgridBagConstraints3.anchor = java.awt.GridBagConstraints.NORTHWEST;\r\n \t\tgridBagConstraints3.insets = new java.awt.Insets(2,2,2,2);\r\n+\t\t\r\n \t\tgridBagConstraints4.gridx = 1;\r\n \t\tgridBagConstraints4.gridy = 1;\r\n \t\tgridBagConstraints4.ipadx = 0;\r\n \t\tgridBagConstraints4.ipady = 0;\r\n \t\tgridBagConstraints4.anchor = java.awt.GridBagConstraints.NORTHWEST;\r\n \t\tgridBagConstraints4.insets = new java.awt.Insets(0,5,0,5);\r\n+\t\t\r\n \t\tgridBagConstraints5.gridx = 1;\r\n \t\tgridBagConstraints5.fill = java.awt.GridBagConstraints.HORIZONTAL;\r\n \t\tgridBagConstraints5.weightx = 1.0D;\r\n \t\tgridBagConstraints5.gridy = 3;\r\n \t\tgridBagConstraints5.ipadx = 0;\r\n \t\tgridBagConstraints5.ipady = 0;\r\n \t\tgridBagConstraints5.insets = new java.awt.Insets(2,5,2,5);\r\n+\t\t\r\n \t\tgridBagConstraints6.gridx = 0;\r\n-\t\tgridBagConstraints6.gridy = 5;\r\n-\t\tgridBagConstraints6.ipadx = 0;\r\n+\t\tgridBagConstraints6.gridy = 4;\r\n \t\tgridBagConstraints6.ipady = 0;\r\n-\t\tgridBagConstraints6.insets = new java.awt.Insets(2,5,2,5);\r\n-\t\tgridBagConstraints6.weightx = 1.0D;\r\n-\t\tgridBagConstraints6.gridwidth = 2;\r\n+\t\tgridBagConstraints6.ipadx = 0;\r\n \t\tgridBagConstraints6.anchor = java.awt.GridBagConstraints.NORTHWEST;\r\n \t\tgridBagConstraints6.fill = java.awt.GridBagConstraints.HORIZONTAL;\r\n+\t\tgridBagConstraints6.gridwidth = 2;\r\n+\r\n \t\tgridBagConstraints7.gridx = 0;\r\n-\t\tgridBagConstraints7.gridy = 6;\r\n+\t\tgridBagConstraints7.gridy = 5;\r\n \t\tgridBagConstraints7.ipadx = 0;\r\n \t\tgridBagConstraints7.ipady = 0;\r\n-\t\tgridBagConstraints7.fill = java.awt.GridBagConstraints.HORIZONTAL;\r\n \t\tgridBagConstraints7.anchor = java.awt.GridBagConstraints.NORTHWEST;\r\n-\t\tgridBagConstraints7.gridwidth = 2;\r\n+\t\tgridBagConstraints7.fill = java.awt.GridBagConstraints.HORIZONTAL;\r\n \t\tgridBagConstraints7.insets = new java.awt.Insets(2,5,2,5);\r\n+\t\tgridBagConstraints7.weightx = 1.0D;\r\n+\t\tgridBagConstraints7.gridwidth = 2;\r\n+\t\t\r\n \t\tgridBagConstraints8.gridx = 0;\r\n-\t\tgridBagConstraints8.gridy = 4;\r\n+\t\tgridBagConstraints8.gridy = 6;\r\n \t\tgridBagConstraints8.ipadx = 0;\r\n \t\tgridBagConstraints8.ipady = 0;\r\n-\t\tgridBagConstraints8.anchor = java.awt.GridBagConstraints.NORTHWEST;\r\n-\t\tgridBagConstraints8.fill = java.awt.GridBagConstraints.HORIZONTAL;\r\n \t\tgridBagConstraints8.insets = new java.awt.Insets(2,5,2,5);\r\n \t\tgridBagConstraints8.weightx = 1.0D;\r\n \t\tgridBagConstraints8.gridwidth = 2;\r\n+\t\tgridBagConstraints8.anchor = java.awt.GridBagConstraints.NORTHWEST;\r\n+\t\tgridBagConstraints8.fill = java.awt.GridBagConstraints.HORIZONTAL;\r\n+\t\t\r\n+\t\tgridBagConstraints9.gridx = 0;\r\n+\t\tgridBagConstraints9.gridy = 7;\r\n+\t\tgridBagConstraints9.ipadx = 0;\r\n+\t\tgridBagConstraints9.ipady = 0;\r\n+\t\tgridBagConstraints9.fill = java.awt.GridBagConstraints.HORIZONTAL;\r\n+\t\tgridBagConstraints9.anchor = java.awt.GridBagConstraints.NORTHWEST;\r\n+\t\tgridBagConstraints9.gridwidth = 2;\r\n+\t\tgridBagConstraints9.insets = new java.awt.Insets(2,5,2,5);\r\n+\t\t\r\n \t\tthis.add(lblProgramName, gridBagConstraints3);\r\n \t\t\tgridBagConstraints1.anchor = java.awt.GridBagConstraints.NORTHWEST;\r\n \t\t\tgridBagConstraints1.insets = new java.awt.Insets(5,15,5,15);\r\n-\t\t\tgridBagConstraints2.insets = new java.awt.Insets(3,5,5,10);\r\n-\t\t\tgridBagConstraints2.anchor = java.awt.GridBagConstraints.NORTHWEST;\r\n+\t\t\tgridBagConstraints6.insets = new java.awt.Insets(3,5,5,10);\r\n+\t\t\tgridBagConstraints6.anchor = java.awt.GridBagConstraints.NORTHWEST;\r\n \t\t\tgridBagConstraints5.anchor = java.awt.GridBagConstraints.NORTHWEST;\r\n \t\t\tthis.add(lblVersion, gridBagConstraints4);\r\n \t\t\tthis.add(lblLogo, gridBagConstraints1);\r\n-\t\t\t//this.add(lblName, gridBagConstraints2);\r\n \t\t\tthis.add(lblCopyright, gridBagConstraints5);\r\n-\t\t\tthis.add(lblDisclaimer, gridBagConstraints8);\r\n-\t\t\tthis.add(lblCopyrightDetail, gridBagConstraints6);\r\n-\t\t\tthis.add(lblOtherCopyright, gridBagConstraints7);\r\n+\t\t\tthis.add(lblHomepage, gridBagConstraints6);\r\n+\t\t\tthis.add(lblDisclaimer, gridBagConstraints7);\r\n+\t\t\tthis.add(lblCopyrightDetail, gridBagConstraints8);\r\n+\t\t\tthis.add(lblOtherCopyright, gridBagConstraints9);\r\n \t}\r\n-}  //  @jve:decl-index=0:visual-constraint=\"7,0\"\r\n+}\r",
      "parent_sha": "4156b55b28bb5e5024deda8cd8f01efec1285322"
    }
  },
  {
    "oid": "bb22dad453f4c74ac47951422985d8f4253c3ae9",
    "message": "Committed Issue 138\nThe method contract of InputStream.read() says, an -1 is the signal for EOF.\nThus we should quit this method.",
    "date": "2011-06-21T22:12:09Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/bb22dad453f4c74ac47951422985d8f4253c3ae9",
    "details": {
      "sha": "254026611d34c95ce98c74c1718941539212e471",
      "filename": "src/org/parosproxy/paros/network/HttpInputStream.java",
      "status": "modified",
      "additions": 2,
      "deletions": 9,
      "changes": 11,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/bb22dad453f4c74ac47951422985d8f4253c3ae9/src%2Forg%2Fparosproxy%2Fparos%2Fnetwork%2FHttpInputStream.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/bb22dad453f4c74ac47951422985d8f4253c3ae9/src%2Forg%2Fparosproxy%2Fparos%2Fnetwork%2FHttpInputStream.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fnetwork%2FHttpInputStream.java?ref=bb22dad453f4c74ac47951422985d8f4253c3ae9",
      "patch": "@@ -60,29 +60,22 @@ public synchronized String readHeader() throws IOException {\n \t\tString msg = \"\";\r\n         int\t\toneByte = -1;\r\n         boolean eoh = false;\r\n-        boolean neverReadOnce = true;\r\n         StringBuilder sb = new StringBuilder(200);\r\n         \r\n         do {\r\n             oneByte = super.read();\r\n         \t\r\n         \tif (oneByte == -1) {\r\n         \t\teoh = true;\r\n-        \t\tif (neverReadOnce) {\r\n-        \t\t\tHttpUtil.sleep(50);\r\n-        \t\t\tcontinue;\r\n-        \t\t}\r\n \t\t\t\tbreak;\r\n-        \t} else {\r\n-        \t\tneverReadOnce = false;\r\n         \t}\r\n             sb.append((char) oneByte);\r\n \r\n             if (((char) oneByte) == '\\n' && isHeaderEnd(sb)) {\r\n                 eoh = true;\r\n                 msg = sb.toString();\r\n             }\r\n-\t\t} while (!eoh || neverReadOnce);\r\n+\t\t} while (!eoh);\r\n \r\n         return msg;\r\n \r\n@@ -93,7 +86,7 @@ public synchronized String readHeader() throws IOException {\n \t * @param sb\r\n \t * @return true - if end of HTTP header.\r\n \t */\r\n-\tprivate static final boolean isHeaderEnd(final StringBuilder sb) {\r\n+\tprivate static final boolean isHeaderEnd(StringBuilder sb) {\r\n \t\tint len = sb.length();\r\n \t\tif (len > 2) {\r\n \t\t\tif (LF2.equals(sb.substring(len-2))) {\r",
      "parent_sha": "6848651638f86ef20cececc22c7ef91ea34795ca"
    }
  },
  {
    "oid": "a4437ede8378679dc387ce9ff8a88e4b4dba1c88",
    "message": "Remove extraneous 'this' qualifiers in SimpleEventBus\n\nSigned-off-by: Russell Howe <rhowe@siksai.co.uk>",
    "date": "2021-01-22T12:39:15Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/a4437ede8378679dc387ce9ff8a88e4b4dba1c88",
    "details": {
      "sha": "63805bb0003cdf076dfeaff2436ee8816a5f8167",
      "filename": "zap/src/main/java/org/zaproxy/zap/eventBus/SimpleEventBus.java",
      "status": "modified",
      "additions": 11,
      "deletions": 11,
      "changes": 22,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/a4437ede8378679dc387ce9ff8a88e4b4dba1c88/zap%2Fsrc%2Fmain%2Fjava%2Forg%2Fzaproxy%2Fzap%2FeventBus%2FSimpleEventBus.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/a4437ede8378679dc387ce9ff8a88e4b4dba1c88/zap%2Fsrc%2Fmain%2Fjava%2Forg%2Fzaproxy%2Fzap%2FeventBus%2FSimpleEventBus.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/zap%2Fsrc%2Fmain%2Fjava%2Forg%2Fzaproxy%2Fzap%2FeventBus%2FSimpleEventBus.java?ref=a4437ede8378679dc387ce9ff8a88e4b4dba1c88",
      "patch": "@@ -61,12 +61,12 @@ public void registerPublisher(EventPublisher publisher, String... eventTypes) {\n         }\n         regMgmtLock.lock();\n         try {\n-            if (this.nameToPublisher.get(publisher.getPublisherName()) != null) {\n+            if (nameToPublisher.get(publisher.getPublisherName()) != null) {\n                 throw new InvalidParameterException(\n                         \"Publisher with name \"\n                                 + publisher.getPublisherName()\n                                 + \" already registered by \"\n-                                + this.nameToPublisher\n+                                + nameToPublisher\n                                         .get(publisher.getPublisherName())\n                                         .getPublisher()\n                                         .getClass()\n@@ -88,7 +88,7 @@ public void registerPublisher(EventPublisher publisher, String... eventTypes) {\n                     });\n \n             regProd.addConsumers(consumers);\n-            this.nameToPublisher.put(publisher.getPublisherName(), regProd);\n+            nameToPublisher.put(publisher.getPublisherName(), regProd);\n         } finally {\n             regMgmtLock.unlock();\n         }\n@@ -115,7 +115,7 @@ public void unregisterPublisher(EventPublisher publisher) {\n \n     @Override\n     public void registerConsumer(EventConsumer consumer, String publisherName) {\n-        this.registerConsumer(consumer, publisherName, (String[]) null);\n+        registerConsumer(consumer, publisherName, (String[]) null);\n     }\n \n     @Override\n@@ -132,10 +132,10 @@ public void registerConsumer(\n                             + consumer.getClass().getCanonicalName()\n                             + \" for \"\n                             + publisherName);\n-            RegisteredPublisher publisher = this.nameToPublisher.get(publisherName);\n+            RegisteredPublisher publisher = nameToPublisher.get(publisherName);\n             if (publisher == null) {\n                 // Cache until the publisher registers\n-                this.danglingConsumers.add(\n+                danglingConsumers.add(\n                         new RegisteredConsumer(consumer, eventTypes, publisherName));\n             } else {\n                 publisher.addConsumer(consumer, eventTypes);\n@@ -165,7 +165,7 @@ public void unregisterConsumer(EventConsumer consumer) {\n     }\n \n     private void removeDanglingConsumer(EventConsumer consumer) {\n-        Iterator<RegisteredConsumer> iter = this.danglingConsumers.iterator();\n+        Iterator<RegisteredConsumer> iter = danglingConsumers.iterator();\n         while (iter.hasNext()) {\n             if (iter.next().getConsumer().equals(consumer)) {\n                 iter.remove();\n@@ -186,7 +186,7 @@ public void unregisterConsumer(EventConsumer consumer, String publisherName) {\n                             + consumer.getClass().getCanonicalName()\n                             + \" for \"\n                             + publisherName);\n-            RegisteredPublisher publisher = this.nameToPublisher.get(publisherName);\n+            RegisteredPublisher publisher = nameToPublisher.get(publisherName);\n             if (publisher != null) {\n                 publisher.removeConsumer(consumer);\n             } else {\n@@ -204,7 +204,7 @@ public void publishSyncEvent(EventPublisher publisher, Event event) {\n             throw new InvalidParameterException(\"Publisher must not be null\");\n         }\n \n-        RegisteredPublisher regPublisher = this.nameToPublisher.get(publisher.getPublisherName());\n+        RegisteredPublisher regPublisher = nameToPublisher.get(publisher.getPublisherName());\n         if (regPublisher == null) {\n             throw new InvalidParameterException(\n                     \"Publisher not registered: \" + publisher.getPublisherName());\n@@ -311,13 +311,13 @@ void addConsumers(List<RegisteredConsumer> consumers) {\n         }\n \n         void addConsumer(EventConsumer consumer, String[] eventTypes) {\n-            this.consumers.add(new RegisteredConsumer(consumer, eventTypes));\n+            consumers.add(new RegisteredConsumer(consumer, eventTypes));\n         }\n \n         void removeConsumer(EventConsumer consumer) {\n             for (RegisteredConsumer cons : consumers) {\n                 if (cons.getConsumer().equals(consumer)) {\n-                    this.consumers.remove(cons);\n+                    consumers.remove(cons);\n                     return;\n                 }\n             }",
      "parent_sha": "142683df3b2e17fee22b203de459760e29efc6f8"
    }
  },
  {
    "oid": "0e368f7868888bcf38a134488a9daeaeee84be4c",
    "message": "Use realm as domain for NTLM authentication\n\nChange HttpAuthenticationMethodType to use the realm as domain for NTLM\nauthentication, instead of using the hostname of the server. If an\ninvalid domain is provided it might lead to an authentication failure\n(which would most likely happen since the hostname is always set).",
    "date": "2017-11-20T22:18:16Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/0e368f7868888bcf38a134488a9daeaeee84be4c",
    "details": {
      "sha": "67a6f1dd3d9f3944094ecb12372a8ff7f9b06e2d",
      "filename": "src/org/zaproxy/zap/authentication/HttpAuthenticationMethodType.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/0e368f7868888bcf38a134488a9daeaeee84be4c/src%2Forg%2Fzaproxy%2Fzap%2Fauthentication%2FHttpAuthenticationMethodType.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/0e368f7868888bcf38a134488a9daeaeee84be4c/src%2Forg%2Fzaproxy%2Fzap%2Fauthentication%2FHttpAuthenticationMethodType.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fauthentication%2FHttpAuthenticationMethodType.java?ref=0e368f7868888bcf38a134488a9daeaeee84be4c",
      "patch": "@@ -124,7 +124,7 @@ public WebSession authenticate(SessionManagementMethod sessionManagementMethod,\n \t\t\t\t\t\t(this.realm == null || this.realm.isEmpty()) ? AuthScope.ANY_REALM : this.realm);\n \t\t\t\tstateCredentials = new NTCredentials(userCredentials.getUsername(),\n \t\t\t\t\t\tuserCredentials.getPassword(), InetAddress.getLocalHost().getCanonicalHostName(),\n-\t\t\t\t\t\tthis.hostname);\n+\t\t\t\t\t\tthis.realm);\n \t\t\t\tsession.getHttpState().setCredentials(stateAuthScope, stateCredentials);\n \t\t\t} catch (UnknownHostException e1) {\n \t\t\t\tlog.error(e1.getMessage(), e1);",
      "parent_sha": "b3e0fb5d3b6daa2a5157b92cab41ea7ded1876ea"
    }
  },
  {
    "oid": "afe4e5ba6906b5a2252c5a2ef51f61d228f0685a",
    "message": "Enhance Client Cert File Chooser\n\nThis is a minor enhancement to the client certificate file chooser,\nwhich set the filter for the file chooser to be directory, .p12 files,\nand now .pfx files.\n\n.pfx is a PKCS#12 archive.\n\nSee also: https://en.wikipedia.org/wiki/PKCS_12",
    "date": "2016-06-28T09:34:18Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/afe4e5ba6906b5a2252c5a2ef51f61d228f0685a",
    "details": {
      "sha": "0a24f3bb82dae708638ff433d604b6dc1be7c5c8",
      "filename": "src/org/parosproxy/paros/extension/option/OptionsCertificatePanel.java",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/afe4e5ba6906b5a2252c5a2ef51f61d228f0685a/src%2Forg%2Fparosproxy%2Fparos%2Fextension%2Foption%2FOptionsCertificatePanel.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/afe4e5ba6906b5a2252c5a2ef51f61d228f0685a/src%2Forg%2Fparosproxy%2Fparos%2Fextension%2Foption%2FOptionsCertificatePanel.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fextension%2Foption%2FOptionsCertificatePanel.java?ref=afe4e5ba6906b5a2252c5a2ef51f61d228f0685a",
      "patch": "@@ -25,6 +25,7 @@\n // ZAP: 2013/12/03 Issue 933: Automatically determine install dir\r\n // ZAP: 2014/03/23 Issue 412: Enable unsafe SSL/TLS renegotiation option not saved\r\n // ZAP: 2014/08/14 Issue 1184: Improve support for IBM JDK\r\n+// ZAP: 2016/06/28: File chooser for PKCS#12 files now also accepts .pfx files\r\n \r\n package org.parosproxy.paros.extension.option;\r\n \r\n@@ -770,12 +771,13 @@ private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-\n \t\t\t@Override\r\n \t\t\tpublic String getDescription()\r\n \t\t\t{\r\n-\t\t\t\treturn Constant.messages.getString(\"options.cert.label.client.cert\") + \" (*.p12)\";\r\n+\t\t\t\treturn Constant.messages.getString(\"options.cert.label.client.cert\") + \" (*.p12, *.pfx)\";\r\n \t\t\t}\r\n \t\t\t@Override\r\n \t\t\tpublic boolean accept(File f) {\r\n \t\t\t\treturn f.isDirectory() ||\r\n-\t\t\t\tf.getName().toLowerCase().endsWith( \".p12\" ) ;\r\n+\t\t\t\tf.getName().toLowerCase().endsWith( \".p12\" ) || \r\n+\t\t\t\tf.getName().toLowerCase().endsWith( \".pfx\" );\r\n \t\t\t}\r\n \t\t} );\r\n \r",
      "parent_sha": "3ce3f7a54614086d03b804519c4353b7184af689"
    }
  },
  {
    "oid": "7a82e07116c509cfbfb3b3a853eeb80b21e24cca",
    "message": "Changed the class MainPopupMenu to use the method PopupMenuUtils.isAtLeastOneChildComponentVisible(Component).",
    "date": "2014-03-23T16:54:06Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/7a82e07116c509cfbfb3b3a853eeb80b21e24cca",
    "details": {
      "sha": "1cb98257a53ca092a2ff20eda52a970e3a04f8f0",
      "filename": "src/org/parosproxy/paros/view/MainPopupMenu.java",
      "status": "modified",
      "additions": 3,
      "deletions": 11,
      "changes": 14,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/7a82e07116c509cfbfb3b3a853eeb80b21e24cca/src%2Forg%2Fparosproxy%2Fparos%2Fview%2FMainPopupMenu.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/7a82e07116c509cfbfb3b3a853eeb80b21e24cca/src%2Forg%2Fparosproxy%2Fparos%2Fview%2FMainPopupMenu.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fview%2FMainPopupMenu.java?ref=7a82e07116c509cfbfb3b3a853eeb80b21e24cca",
      "patch": "@@ -35,6 +35,7 @@\n // ZAP: 2013/11/16 Issue 901: Pop up menu \"succeed\" separator is not added when using sub-menu in MainPopupMenu\r\n // ZAP: 2013/11/16 Issue 900: IllegalArgumentException when invoking the main pop up menu with\r\n // menus or super menus with high menu index\r\n+// ZAP: 2014/03/23 Changed to use PopupMenuUtils.isAtLeastOneChildComponentVisible(Component).\r\n \r\n package org.parosproxy.paros.view;\r\n \r\n@@ -54,6 +55,7 @@\n import org.parosproxy.paros.extension.ExtensionPopupMenuItem;\r\n import org.zaproxy.zap.extension.ExtensionPopupMenu;\r\n import org.zaproxy.zap.extension.history.PopupMenuPurgeSites;\r\n+import org.zaproxy.zap.view.popup.PopupMenuUtils;\r\n \r\n public class MainPopupMenu extends JPopupMenu {\r\n \r\n@@ -132,20 +134,10 @@ public synchronized void show(Component invoker, int x, int y) {\n \t\t\t}\r\n \t\t}\r\n \r\n-\t\tif (isAtLeastOneChildComponentVisible()) {\r\n+\t\tif (PopupMenuUtils.isAtLeastOneChildComponentVisible(this)) {\r\n \t\t\tsuper.show(invoker, x, y);\r\n \t\t}\r\n \t}\r\n-\r\n-\tprivate boolean isAtLeastOneChildComponentVisible() {\r\n-\t\tfor (Component comp : getComponents()) {\r\n-\t\t\tif (comp.isVisible()) {\r\n-\t\t\t\treturn true;\r\n-\t\t\t}\r\n-\t\t}\r\n-\r\n-\t\treturn false;\r\n-\t}\r\n \t\r\n \tprivate void handleMenuItem(Component invoker, ExtensionPopupMenuItem menuItem) {\r\n \t\ttry {\r",
      "parent_sha": "31326128f541d84529fbdebcf7817daf30ddd50b"
    }
  },
  {
    "oid": "c44ed8191968dcc925b69d4bbb17ab6c7a0d23fa",
    "message": "Issue 767: HTTP Session API could be less strict",
    "date": "2013-08-14T16:31:59Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/c44ed8191968dcc925b69d4bbb17ab6c7a0d23fa",
    "details": {
      "sha": "003f41baf428986d1900f1c9e456d77fdda41284",
      "filename": "src/org/zaproxy/zap/extension/httpsessions/HttpSessionsAPI.java",
      "status": "modified",
      "additions": 38,
      "deletions": 20,
      "changes": 58,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/c44ed8191968dcc925b69d4bbb17ab6c7a0d23fa/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fhttpsessions%2FHttpSessionsAPI.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/c44ed8191968dcc925b69d4bbb17ab6c7a0d23fa/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fhttpsessions%2FHttpSessionsAPI.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fhttpsessions%2FHttpSessionsAPI.java?ref=c44ed8191968dcc925b69d4bbb17ab6c7a0d23fa",
      "patch": "@@ -132,7 +132,7 @@ public ApiResponse handleApiAction(String name, JSONObject params) throws ApiExc\n \t\tHttpSessionsSite site;\n \t\tswitch (name) {\n \t\tcase ACTION_CREATE_EMPTY_SESSION:\n-\t\t\tsite = extension.getHttpSessionsSite(params.getString(ACTION_PARAM_SITE), false);\n+\t\t\tsite = extension.getHttpSessionsSite(cleanSite(params.getString(ACTION_PARAM_SITE)), false);\n \t\t\tif (site == null) {\n \t\t\t\tthrow new ApiException(ApiException.Type.ILLEGAL_PARAMETER, ACTION_PARAM_SITE);\n \t\t\t}\n@@ -144,7 +144,7 @@ public ApiResponse handleApiAction(String name, JSONObject params) throws ApiExc\n \t\t\t}\n \t\t\treturn ApiResponseElement.OK;\n \t\tcase ACTION_REMOVE_SESSION:\n-\t\t\tsite = extension.getHttpSessionsSite(params.getString(ACTION_PARAM_SITE), false);\n+\t\t\tsite = extension.getHttpSessionsSite(cleanSite(params.getString(ACTION_PARAM_SITE)), false);\n \t\t\tif (site == null) {\n \t\t\t\tthrow new ApiException(ApiException.Type.ILLEGAL_PARAMETER, ACTION_PARAM_SITE);\n \t\t\t}\n@@ -155,7 +155,7 @@ public ApiResponse handleApiAction(String name, JSONObject params) throws ApiExc\n \t\t\tsite.removeHttpSession(sessionRS);\n \t\t\treturn ApiResponseElement.OK;\n \t\tcase ACTION_SET_ACTIVE_SESSION:\n-\t\t\tsite = extension.getHttpSessionsSite(params.getString(ACTION_PARAM_SITE), false);\n+\t\t\tsite = extension.getHttpSessionsSite(cleanSite(params.getString(ACTION_PARAM_SITE)), false);\n \t\t\tif (site == null) {\n \t\t\t\tthrow new ApiException(ApiException.Type.ILLEGAL_PARAMETER, ACTION_PARAM_SITE);\n \t\t\t}\n@@ -169,35 +169,36 @@ public ApiResponse handleApiAction(String name, JSONObject params) throws ApiExc\n \t\t\t// At this point, the given name does not match any session name\n \t\t\tthrow new ApiException(ApiException.Type.ILLEGAL_PARAMETER, ACTION_PARAM_SESSION);\n \t\tcase ACTION_UNSET_ACTIVE_SESSION:\n-\t\t\tsite = extension.getHttpSessionsSite(params.getString(ACTION_PARAM_SITE), false);\n+\t\t\tsite = extension.getHttpSessionsSite(cleanSite(params.getString(ACTION_PARAM_SITE)), false);\n \t\t\tif (site == null) {\n \t\t\t\tthrow new ApiException(ApiException.Type.ILLEGAL_PARAMETER, ACTION_PARAM_SITE);\n \t\t\t}\n \t\t\tsite.unsetActiveSession();\n \t\t\treturn ApiResponseElement.OK;\n \t\tcase ACTION_ADD_SESSION_TOKEN:\n-\t\t\textension.addHttpSessionToken(params.getString(ACTION_PARAM_SITE),\n+\t\t\textension.addHttpSessionToken(cleanSite(params.getString(ACTION_PARAM_SITE)),\n \t\t\t\t\tparams.getString(ACTION_PARAM_TOKEN_NAME));\n \t\t\treturn ApiResponseElement.OK;\n \t\tcase ACTION_REMOVE_SESSION_TOKEN:\n-\t\t\textension.removeHttpSessionToken(params.getString(ACTION_PARAM_SITE),\n+\t\t\textension.removeHttpSessionToken(cleanSite(params.getString(ACTION_PARAM_SITE)),\n \t\t\t\t\tparams.getString(ACTION_PARAM_TOKEN_NAME));\n \t\t\treturn ApiResponseElement.OK;\n \t\tcase ACTION_SET_SESSION_TOKEN:\n-\t\t\tsite = extension.getHttpSessionsSite(params.getString(ACTION_PARAM_SITE), false);\n+\t\t\tsite = extension.getHttpSessionsSite(cleanSite(params.getString(ACTION_PARAM_SITE)), false);\n \t\t\tif (site == null) {\n \t\t\t\tthrow new ApiException(ApiException.Type.ILLEGAL_PARAMETER, ACTION_PARAM_SITE);\n \t\t\t}\n \t\t\tHttpSession sessionSST = site.getHttpSession(params.getString(ACTION_PARAM_SESSION));\n \t\t\tif (sessionSST == null) {\n \t\t\t\tthrow new ApiException(ApiException.Type.ILLEGAL_PARAMETER, ACTION_PARAM_SESSION);\n \t\t\t}\n-\t\t\textension.addHttpSessionToken(params.getString(ACTION_PARAM_SITE), params.getString(ACTION_PARAM_TOKEN_NAME));\n+\t\t\textension.addHttpSessionToken(cleanSite(params.getString(ACTION_PARAM_SITE)), \n+\t\t\t\t\tparams.getString(ACTION_PARAM_TOKEN_NAME));\n \t\t\tsessionSST.setTokenValue(params.getString(ACTION_PARAM_TOKEN_NAME),\n \t\t\t\t\tparams.getString(ACTION_PARAM_TOKEN_VALUE));\n \t\t\treturn ApiResponseElement.OK;\n \t\tcase ACTION_RENAME_SESSION:\n-\t\t\tsite = extension.getHttpSessionsSite(params.getString(ACTION_PARAM_SITE), false);\n+\t\t\tsite = extension.getHttpSessionsSite(cleanSite(params.getString(ACTION_PARAM_SITE)), false);\n \t\t\tif (site == null) {\n \t\t\t\tthrow new ApiException(ApiException.Type.ILLEGAL_PARAMETER, ACTION_PARAM_SITE);\n \t\t\t}\n@@ -222,7 +223,7 @@ public ApiResponse handleApiView(String name, JSONObject params) throws ApiExcep\n \t\tswitch (name) {\n \t\tcase VIEW_SESSIONS:\n \t\t\t// Get existing sessions\n-\t\t\tsite = extension.getHttpSessionsSite(params.getString(ACTION_PARAM_SITE), false);\n+\t\t\tsite = extension.getHttpSessionsSite(cleanSite(params.getString(ACTION_PARAM_SITE)), false);\n \t\t\tif (site == null) {\n \t\t\t\tthrow new ApiException(ApiException.Type.ILLEGAL_PARAMETER, ACTION_PARAM_SITE);\n \t\t\t}\n@@ -233,17 +234,20 @@ public ApiResponse handleApiView(String name, JSONObject params) throws ApiExcep\n \t\t\tif (vsName == null || vsName.isEmpty()) {\n \t\t\t\tSet<HttpSession> sessions = site.getHttpSessions();\n \t\t\t\tif (log.isDebugEnabled()) {\n-\t\t\t\t\tlog.debug(\"API View for sessions for \" + params.getString(VIEW_PARAM_SITE) + \": \" + site);\n+\t\t\t\t\tlog.debug(\"API View for sessions for \" + cleanSite(params.getString(VIEW_PARAM_SITE)) + \": \" + site);\n \t\t\t\t}\n \n \t\t\t\t// Build the response\n \t\t\t\tfor (HttpSession session : sessions) {\n-\t\t\t\t\tApiResponseList sessionResult = new ApiResponseList(\"session\");\n-\t\t\t\t\tsessionResult.addItem(new ApiResponseElement(\"name\", session.getName()));\n-\t\t\t\t\tsessionResult.addItem(new ApiResponseSet(\"tokens\", session.getTokenValuesUnmodifiableMap()));\n-\t\t\t\t\tsessionResult.addItem(new ApiResponseElement(\"messages_matched\", Integer.toString(session\n-\t\t\t\t\t\t\t.getMessagesMatched())));\n-\t\t\t\t\tresponse.addItem(sessionResult);\n+\t\t\t\t\t// Dont include 'null' sessions\n+\t\t\t\t\tif (session.getTokenValuesUnmodifiableMap().size() > 0) {\n+\t\t\t\t\t\tApiResponseList sessionResult = new ApiResponseList(\"session\");\n+\t\t\t\t\t\tsessionResult.addItem(new ApiResponseElement(\"name\", session.getName()));\n+\t\t\t\t\t\tsessionResult.addItem(new ApiResponseSet(\"tokens\", session.getTokenValuesUnmodifiableMap()));\n+\t\t\t\t\t\tsessionResult.addItem(new ApiResponseElement(\"messages_matched\", Integer.toString(session\n+\t\t\t\t\t\t\t\t.getMessagesMatched())));\n+\t\t\t\t\t\tresponse.addItem(sessionResult);\n+\t\t\t\t\t}\n \t\t\t\t}\n \t\t\t} // If a session name was provided\n \t\t\telse {\n@@ -261,12 +265,12 @@ public ApiResponse handleApiView(String name, JSONObject params) throws ApiExcep\n \n \t\tcase VIEW_ACTIVE_SESSION:\n \t\t\t// Get existing sessions\n-\t\t\tsite = extension.getHttpSessionsSite(params.getString(ACTION_PARAM_SITE), false);\n+\t\t\tsite = extension.getHttpSessionsSite(cleanSite(params.getString(ACTION_PARAM_SITE)), false);\n \t\t\tif (site == null) {\n \t\t\t\tthrow new ApiException(ApiException.Type.ILLEGAL_PARAMETER, ACTION_PARAM_SITE);\n \t\t\t}\n \t\t\tif (log.isDebugEnabled()) {\n-\t\t\t\tlog.debug(\"API View for active session for \" + params.getString(VIEW_PARAM_SITE) + \": \" + site);\n+\t\t\t\tlog.debug(\"API View for active session for \" + cleanSite(params.getString(VIEW_PARAM_SITE)) + \": \" + site);\n \t\t\t}\n \n \t\t\tif (site.getActiveSession() != null) {\n@@ -276,7 +280,7 @@ public ApiResponse handleApiView(String name, JSONObject params) throws ApiExcep\n \t\t\t}\n \t\tcase VIEW_SESSION_TOKENS:\n \t\t\t// Get session tokens\n-\t\t\tSet<String> tokens = extension.getHttpSessionTokens(params.getString(VIEW_PARAM_SITE));\n+\t\t\tSet<String> tokens = extension.getHttpSessionTokens(cleanSite(params.getString(VIEW_PARAM_SITE)));\n \t\t\tApiResponseList responseST = new ApiResponseList(\"session_tokens\");\n \n \t\t\t// Build response list\n@@ -290,4 +294,18 @@ public ApiResponse handleApiView(String name, JSONObject params) throws ApiExcep\n \t\t\tthrow new ApiException(ApiException.Type.BAD_VIEW);\n \t\t}\n \t}\n+\t\n+\tprivate String cleanSite (String site) {\n+\t\t// Remove http(s)://\n+\t\tif (site.toLowerCase().startsWith(\"http://\")) {\n+\t\t\tsite = site.substring(7);\n+\t\t} else if (site.toLowerCase().startsWith(\"https://\")) {\n+\t\t\tsite = site.substring(8);\n+\t\t}\n+\t\t// Remove trailing chrs\n+\t\tif (site.indexOf(\"/\") > 0) {\n+\t\t\tsite = site.substring(0, site.indexOf(\"/\") - 1);\n+\t\t}\n+\t\treturn site;\n+\t}\n }",
      "parent_sha": "7b3a0a650abb7d5f6d0d8c9c8061c754c0a87c37"
    }
  },
  {
    "oid": "17be1d8514aaf757282e994d924b1d938888c17b",
    "message": "Issue 1224 - \tDisplay Quality/Status in Scan Policy Dialogs (Fix minor oversight)",
    "date": "2014-06-16T01:31:25Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/17be1d8514aaf757282e994d924b1d938888c17b",
    "details": {
      "sha": "cfc7911713b15a0120ddc4f95dfce4efaba54a96",
      "filename": "src/org/zaproxy/zap/utils/ScannerUtils.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/17be1d8514aaf757282e994d924b1d938888c17b/src%2Forg%2Fzaproxy%2Fzap%2Futils%2FScannerUtils.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/17be1d8514aaf757282e994d924b1d938888c17b/src%2Forg%2Fzaproxy%2Fzap%2Futils%2FScannerUtils.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Futils%2FScannerUtils.java?ref=17be1d8514aaf757282e994d924b1d938888c17b",
      "patch": "@@ -49,7 +49,7 @@ public final class ScannerUtils {\n     /** \r\n      * Default constructor \r\n      */\r\n-\tpublic ScannerUtils() {\r\n+\tprivate ScannerUtils() {\r\n \t\r\n \t}\r\n \t\r",
      "parent_sha": "d50545d91c3d5ea4e688587d0fd97a40e01903f5"
    }
  },
  {
    "oid": "23037d43a792e3055ba9b2538ddea0e8832e90a1",
    "message": "Issue 1383 - NullPointerException if an anti CSRF token does not have a value\n\nChanged the method ExtensionAntiCSRF.getTokensFromResponse(HttpMessage, Source) to skip input elements with no value.",
    "date": "2015-01-05T01:41:38Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/23037d43a792e3055ba9b2538ddea0e8832e90a1",
    "details": {
      "sha": "137098f7f5335679f1ac84bc3cfec4aa427d479b",
      "filename": "src/org/zaproxy/zap/extension/anticsrf/ExtensionAntiCSRF.java",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/23037d43a792e3055ba9b2538ddea0e8832e90a1/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fanticsrf%2FExtensionAntiCSRF.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/23037d43a792e3055ba9b2538ddea0e8832e90a1/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fanticsrf%2FExtensionAntiCSRF.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fanticsrf%2FExtensionAntiCSRF.java?ref=23037d43a792e3055ba9b2538ddea0e8832e90a1",
      "patch": "@@ -271,12 +271,17 @@ public List<AntiCsrfToken> getTokensFromResponse(HttpMessage msg, Source source)\n \t\t\t\t\t// Loop through all of the INPUT elements\n \t\t\t\t\tlog.debug(\"Found \" + inputElements.size() + \" inputs\");\n \t\t\t\t\tfor (Element inputElement : inputElements) {\n+\t\t\t\t\t\tString value = inputElement.getAttributeValue(\"VALUE\");\n+\t\t\t\t\t\tif (value == null) {\n+\t\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t\t}\n+\n \t\t\t\t\t\tString attId = inputElement.getAttributeValue(\"ID\");\n \t\t\t\t\t\tboolean found = false;\n \t\t\t\t\t\tif (attId != null) {\n \t\t\t\t\t\t\tfor (String tokenName : this.getAntiCsrfTokenNames()) {\n \t\t\t\t\t\t\t\tif (tokenName.equalsIgnoreCase(attId)) {\n-\t\t\t\t\t\t\t\t\tlist.add(new AntiCsrfToken(msg, attId, inputElement.getAttributeValue(\"VALUE\"), formIndex));\n+\t\t\t\t\t\t\t\t\tlist.add(new AntiCsrfToken(msg, attId, value, formIndex));\n \t\t\t\t\t\t\t\t\tfound = true;\n \t\t\t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\t\t\t}\n@@ -287,7 +292,7 @@ public List<AntiCsrfToken> getTokensFromResponse(HttpMessage msg, Source source)\n \t\t\t\t\t\t\tif (name != null) {\n \t\t\t\t\t\t\t\tfor (String tokenName : this.getAntiCsrfTokenNames()) {\n \t\t\t\t\t\t\t\t\tif (tokenName.equalsIgnoreCase(name)) {\n-\t\t\t\t\t\t\t\t\t\tlist.add(new AntiCsrfToken(msg, name, inputElement.getAttributeValue(\"VALUE\"), formIndex));\n+\t\t\t\t\t\t\t\t\t\tlist.add(new AntiCsrfToken(msg, name, value, formIndex));\n \t\t\t\t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\t\t\t\t}\n \t\t\t\t\t\t\t\t}",
      "parent_sha": "09837bb46de3d9a49580c16ffaad1db7dcb58bc6"
    }
  },
  {
    "oid": "a654bdf4ad78d9a72151a0824c106db661966fc4",
    "message": "Issue 1515 - Not all \"Zest\" components are unloaded during uninstallation\n\nUncomment the code that notifies ScriptUI of registration/removal of an\nengine. Remove \"Zest\" and \"Script Console\" add-ons, no longer\nup-to-date (and there's no space left for an update).\nUpdate 2.4.0 release help page with Issue 1515.",
    "date": "2015-02-03T12:16:53Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/a654bdf4ad78d9a72151a0824c106db661966fc4",
    "details": {
      "sha": "5ef806bf071fad1943597b0679cf0024a75cd0a8",
      "filename": "src/org/zaproxy/zap/extension/script/ExtensionScript.java",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/a654bdf4ad78d9a72151a0824c106db661966fc4/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fscript%2FExtensionScript.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/a654bdf4ad78d9a72151a0824c106db661966fc4/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fscript%2FExtensionScript.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fscript%2FExtensionScript.java?ref=a654bdf4ad78d9a72151a0824c106db661966fc4",
      "patch": "@@ -216,8 +216,7 @@ public void registerScriptEngineWrapper(ScriptEngineWrapper wrapper) {\n \t\tthis.loadTemplates(wrapper);\r\n \r\n \t\tif (scriptUI != null) {\r\n-\t\t\t// TODO uncomment once the \"Script Console\" implements the new method\r\n-\t\t\t// scriptUI.engineAdded(wrapper);\r\n+\t\t\tscriptUI.engineAdded(wrapper);\r\n \t\t}\r\n \t}\r\n \t\r\n@@ -324,8 +323,7 @@ public void removeScriptEngineWrapper(ScriptEngineWrapper wrapper) {\n \t\tlogger.debug(\"Removing script engine: \" + wrapper.getLanguageName() + \" : \" + wrapper.getEngineName());\r\n \t\tif (this.engineWrappers.remove(wrapper)) {\r\n \t\t\tif (scriptUI != null) {\r\n-\t\t\t\t// TODO uncomment once the \"Script Console\" implements the new method\r\n-\t\t\t\t// scriptUI.engineRemoved(wrapper);\r\n+\t\t\t\tscriptUI.engineRemoved(wrapper);\r\n \t\t\t}\r\n \r\n \t\t\tsetScriptEngineWrapper(getTreeModel().getScriptsNode(), wrapper, null);\r",
      "parent_sha": "119619bc0e88fb8b6af133d4d036c378425b3dfa"
    }
  },
  {
    "oid": "d5e0efcb41fdf00b8bcdbcc6097d81fb04c0a3d8",
    "message": "Use Math.max in HirshbergMatcher\n\nReplace custom max method with Math.max(int, int) calls.",
    "date": "2016-07-18T21:52:49Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/d5e0efcb41fdf00b8bcdbcc6097d81fb04c0a3d8",
    "details": {
      "sha": "33eca1741de83d513b3a3ba98767137dbd85ad2e",
      "filename": "src/org/zaproxy/zap/utils/HirshbergMatcher.java",
      "status": "modified",
      "additions": 2,
      "deletions": 12,
      "changes": 14,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/d5e0efcb41fdf00b8bcdbcc6097d81fb04c0a3d8/src%2Forg%2Fzaproxy%2Fzap%2Futils%2FHirshbergMatcher.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/d5e0efcb41fdf00b8bcdbcc6097d81fb04c0a3d8/src%2Forg%2Fzaproxy%2Fzap%2Futils%2FHirshbergMatcher.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Futils%2FHirshbergMatcher.java?ref=d5e0efcb41fdf00b8bcdbcc6097d81fb04c0a3d8",
      "patch": "@@ -69,7 +69,7 @@ private static int[] algB(int m, int n, String a, String b) {\n                 if (a.charAt(i - 1) == b.charAt(j - 1)) {\n                     k[1][j] = k[0][j - 1] + 1;\n                 } else {\n-                    k[1][j] = max(k[1][j - 1], k[0][j]);\n+                    k[1][j] = Math.max(k[1][j - 1], k[0][j]);\n                 }\n             }\n         }\n@@ -79,16 +79,6 @@ private static int[] algB(int m, int n, String a, String b) {\n \n     }\n \n-    /**\n-     * This method returns the maximum number between two numbers.\n-     * @param x\n-     * @param y\n-     * @return\n-     */\n-    private static int max(int x, int y) {\n-        return (x > y) ? x : y;\n-    }\n-\n     /**\n      * Algorithm C as described by Hirschberg\n      *\n@@ -205,6 +195,6 @@ public double getMatchRatio(String strA, String strB) {\n         }\n                 \n         //get the percentage match against the longer of the 2 strings\n-        return (double)getLCS(strA, strB).length() / max(strA.length(), strB.length());\n+        return (double)getLCS(strA, strB).length() / Math.max(strA.length(), strB.length());\n     }    \n }",
      "parent_sha": "aecb8fd146d1bdc13af8464e5d285625666c2225"
    }
  },
  {
    "oid": "58315baaed499b2507d9390fd26e0f42312d3f79",
    "message": "Do not save the cert when loading from config file\n\nChange DynSSLParam to not save the Root CA certificate when loading it\nfrom the configuration file. Also, use helper method to read the cert\nfrom the file.",
    "date": "2017-09-25T18:27:43Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/58315baaed499b2507d9390fd26e0f42312d3f79",
    "details": {
      "sha": "83787fbc7d2bc69f8936dd8586bdbb1b3cd7f9a3",
      "filename": "src/org/zaproxy/zap/extension/dynssl/DynSSLParam.java",
      "status": "modified",
      "additions": 12,
      "deletions": 11,
      "changes": 23,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/58315baaed499b2507d9390fd26e0f42312d3f79/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fdynssl%2FDynSSLParam.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/58315baaed499b2507d9390fd26e0f42312d3f79/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fdynssl%2FDynSSLParam.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fdynssl%2FDynSSLParam.java?ref=58315baaed499b2507d9390fd26e0f42312d3f79",
      "patch": "@@ -33,29 +33,30 @@ public class DynSSLParam extends AbstractParam {\n \r\n \tprivate KeyStore rootca = null;\r\n \r\n-\tprivate final Logger logger = Logger.getLogger(DynSSLParam.class);\r\n+\tprivate static final Logger logger = Logger.getLogger(DynSSLParam.class);\r\n \r\n \t@Override\r\n \tprotected void parse() {\r\n+\t\tString rootcastr = getString(PARAM_ROOT_CA, null);\r\n+\t\tif (rootcastr != null) {\r\n+\t\t\trootca = createKeyStore(rootcastr);\r\n+\t\t}\r\n+\t}\r\n+\r\n+\tprivate static KeyStore createKeyStore(String rootcastr) {\r\n \t\ttry {\r\n-\t\t\tString rootcastr = getConfig().getString(PARAM_ROOT_CA, null);\r\n-\t\t\tif (rootcastr != null) {\r\n-\t\t\t\tsetRootca(rootcastr);\r\n-\t\t\t}\r\n+\t\t\treturn SslCertificateUtils.string2Keystore(rootcastr);\r\n \t\t} catch (final Exception e) {\r\n-\t\t\tlogger.warn(\"Couldn't load Root CA parameter.\", e);\r\n+\t\t\tlogger.error(\"Couldn't create Root CA KeyStore from String: \" + rootcastr, e);\r\n \t\t}\r\n+\t\treturn null;\r\n \t}\r\n \r\n \t/**\r\n \t * @param rootca\r\n \t */\r\n \tpublic void setRootca(String rootca) {\r\n-\t\ttry {\r\n-\t\t\tsetRootca(SslCertificateUtils.string2Keystore(rootca));\r\n-\t\t} catch (final Exception e) {\r\n-\t\t\tlogger.error(\"Couldn't save Root CA parameter.\", e);\r\n-\t\t}\r\n+\t\tsetRootca(createKeyStore(rootca));\r\n \t}\r\n \r\n \tpublic KeyStore getRootca() {\r",
      "parent_sha": "18ebd8e79bb3f899ef01579262cae696a8333e99"
    }
  },
  {
    "oid": "3518b8c2c6b1f54fe8f23686c4fce3c8e7c976e1",
    "message": "Issue 1024 - \"Large Response\" view is shown even if a response body is not present\n\nChanged to always check the length of the body instead of relying on the \"Content-Length\" value.",
    "date": "2014-03-23T17:34:01Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/3518b8c2c6b1f54fe8f23686c4fce3c8e7c976e1",
    "details": {
      "sha": "664431c72b9928ab3c450b42b0ddf2143184a51c",
      "filename": "src/org/zaproxy/zap/extension/httppanel/view/largeresponse/LargeResponseUtil.java",
      "status": "modified",
      "additions": 2,
      "deletions": 7,
      "changes": 9,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/3518b8c2c6b1f54fe8f23686c4fce3c8e7c976e1/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fhttppanel%2Fview%2Flargeresponse%2FLargeResponseUtil.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/3518b8c2c6b1f54fe8f23686c4fce3c8e7c976e1/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fhttppanel%2Fview%2Flargeresponse%2FLargeResponseUtil.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fhttppanel%2Fview%2Flargeresponse%2FLargeResponseUtil.java?ref=3518b8c2c6b1f54fe8f23686c4fce3c8e7c976e1",
      "patch": "@@ -45,13 +45,8 @@ public static boolean isLargeResponse(Message aMessage) {\n             if (httpMessage.getResponseBody() == null) {\r\n                 return false;\r\n             }\r\n-            \r\n-            int contentLength = httpMessage.getResponseHeader().getContentLength();\r\n-            if (contentLength < 0) {\r\n-                contentLength = httpMessage.getResponseBody().length();\r\n-            }\r\n-            \r\n-            return contentLength > minContentLength;\r\n+\r\n+            return httpMessage.getResponseBody().length() > minContentLength;\r\n         }\r\n         \r\n         return false;\r",
      "parent_sha": "d0828b804eebc9c4f8a0fe777a1d5c2160c78769"
    }
  },
  {
    "oid": "4e2239eaf6432744ca758b8550b6e82e06c1a630",
    "message": "Prevent (potential) NPE in HostProcess\n\nReorder statements in HostProcess.scanSingleNode to prevent a potential\nNullPointerException when logging info about the node being scanned.",
    "date": "2016-09-20T22:39:00Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/4e2239eaf6432744ca758b8550b6e82e06c1a630",
    "details": {
      "sha": "c397df947533c1d19b62deb05fd4fb93808e412b",
      "filename": "src/org/parosproxy/paros/core/scanner/HostProcess.java",
      "status": "modified",
      "additions": 18,
      "deletions": 16,
      "changes": 34,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/4e2239eaf6432744ca758b8550b6e82e06c1a630/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fscanner%2FHostProcess.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/4e2239eaf6432744ca758b8550b6e82e06c1a630/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fscanner%2FHostProcess.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fscanner%2FHostProcess.java?ref=4e2239eaf6432744ca758b8550b6e82e06c1a630",
      "patch": "@@ -59,6 +59,7 @@\n // ZAP: 2016/06/29 Allow to specify and obtain the reason why a scanner was skipped\r\n // ZAP: 2016/07/12 Do not allow techSet to be null\r\n // ZAP: 2016/07/01 Issue 2647 Support a/pscan rule configuration \r\n+// ZAP: 2016/09/20 Reorder statements to prevent (potential) NullPointerException in scanSingleNode\r\n \r\n package org.parosproxy.paros.core.scanner;\r\n \r\n@@ -343,27 +344,26 @@ private boolean scanSingleNode(Plugin plugin, StructuralNode node) {\n         Thread thread;\r\n         Plugin test;\r\n         HttpMessage msg;\r\n-        \r\n-        log.debug(\"scanSingleNode node plugin=\" + plugin.getName() + \" node=\" + node.getName());\r\n \r\n         // do not poll for isStop here to allow every plugin to run but terminate immediately.\r\n         //if (isStop()) return;\r\n \r\n-        try {\r\n-            if (node == null || node.getHistoryReference() == null) {\r\n-                log.debug(\"scanSingleNode node or href null, returning: node=\" + node);\r\n-                return false;\r\n-            }\r\n-            \r\n-            if (HistoryReference.TYPE_SCANNER == node.getHistoryReference().getHistoryType()) {\r\n-                log.debug(\"Ignoring \\\"scanner\\\" type href\");\r\n-                return false;\r\n-            }\r\n+        if (node == null || node.getHistoryReference() == null) {\r\n+            log.debug(\"scanSingleNode node or href null, returning: node=\" + node);\r\n+            return false;\r\n+        }\r\n+        \r\n+        if (HistoryReference.TYPE_SCANNER == node.getHistoryReference().getHistoryType()) {\r\n+            log.debug(\"Ignoring \\\"scanner\\\" type href\");\r\n+            return false;\r\n+        }\r\n \r\n-            if (!nodeInScope(node.getName())) {\r\n-                log.debug(\"scanSingleNode node not in scope\");\r\n-                return false;\r\n-            }\r\n+        if (!nodeInScope(node.getName())) {\r\n+            log.debug(\"scanSingleNode node not in scope\");\r\n+            return false;\r\n+        }\r\n+\r\n+        try {\r\n             \r\n             msg = node.getHistoryReference().getHttpMessage();\r\n \r\n@@ -373,6 +373,8 @@ private boolean scanSingleNode(Plugin plugin, StructuralNode node) {\n                 return false;\r\n             }\r\n \r\n+            log.debug(\"scanSingleNode node plugin=\" + plugin.getName() + \" node=\" + node.getName());\r\n+\r\n             test = plugin.getClass().newInstance();\r\n             test.setConfig(plugin.getConfig());\r\n             if (this.ruleConfigParam != null) {\r",
      "parent_sha": "070484e75a705eec9db64a0354de6934f265096f"
    }
  },
  {
    "oid": "03194ffcf197fd45e9d180ce88de545fe00a7e4a",
    "message": "Correct install dir detection from ZAP JAR\n\nChange Constant class to convert the code source location to a file\nsystem path and check if it's a directory, if not (i.e. a JAR) get the\nparent directory. Otherwise it would use the JAR as the installation\ndir, failing to start or leading to errors as it attempts to read the\nfiles with the JAR in the path (e.g. \"/dir/zap.jar/db/zapdb.script\").",
    "date": "2018-06-13T12:19:59Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/03194ffcf197fd45e9d180ce88de545fe00a7e4a",
    "details": {
      "sha": "4486be22394d2f2be6c7de2f3eca24128f01db48",
      "filename": "src/org/parosproxy/paros/Constant.java",
      "status": "modified",
      "additions": 12,
      "deletions": 5,
      "changes": 17,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/03194ffcf197fd45e9d180ce88de545fe00a7e4a/src%2Forg%2Fparosproxy%2Fparos%2FConstant.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/03194ffcf197fd45e9d180ce88de545fe00a7e4a/src%2Forg%2Fparosproxy%2Fparos%2FConstant.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2FConstant.java?ref=03194ffcf197fd45e9d180ce88de545fe00a7e4a",
      "patch": "@@ -77,12 +77,14 @@\n // ZAP: 2018/02/14 Remove unnecessary boxing / unboxing\r\n // ZAP: 2018/03/16 Use equalsIgnoreCase (Issue 4327).\r\n // ZAP: 2018/04/16 Keep backup of malformed config file.\r\n+// ZAP: 2018/06/13 Correct install dir detection from JAR.\r\n \r\n package org.parosproxy.paros;\r\n \r\n import java.io.File;\r\n import java.io.IOException;\r\n import java.io.InputStream;\r\n+import java.net.URISyntaxException;\r\n import java.net.URL;\r\n import java.nio.file.FileSystems;\r\n import java.nio.file.Files;\r\n@@ -1056,14 +1058,19 @@ public static String getZapInstall () {\n     \t\tString path = \".\";\r\n     \t\tPath localDir = Paths.get(path);\r\n     \t\tif ( ! Files.isDirectory(localDir.resolve(\"db\")) || ! Files.isDirectory(localDir.resolve(\"lang\"))) {\r\n-    \t\t\tpath = ZAP.class.getProtectionDomain().getCodeSource().getLocation().getPath();\r\n+    \t\t\ttry {\r\n+    \t\t\t\tPath sourceLocation = Paths.get(ZAP.class.getProtectionDomain().getCodeSource().getLocation().toURI());\r\n+    \t\t\t\tif (!Files.isDirectory(sourceLocation)) {\r\n+    \t\t\t\t\tsourceLocation = sourceLocation.getParent();\r\n+    \t\t\t\t}\r\n+    \t\t\t\tpath = sourceLocation.toString();\r\n+    \t\t\t} catch (URISyntaxException e) {\r\n+    \t\t\t\tSystem.err.println(\"Failed to determine the ZAP installation dir: \" + e.getMessage());\r\n+    \t\t\t\tpath = localDir.toAbsolutePath().toString();\r\n+    \t\t\t}\r\n     \t\t\t// Loggers wont have been set up yet\r\n     \t\t\tSystem.out.println(\"Defaulting ZAP install dir to \" + path);\r\n             }\r\n-    \t\tif (path.startsWith(\"/\") && path.indexOf(\":\") > 0) {\r\n-    \t\t\t// This is likely to be a Windows path, remove to initial slash or it will fail\r\n-    \t\t\tpath = path.substring(1);\r\n-    \t\t}\r\n \r\n     \t\tzapInstall = getAbsolutePath(path);\r\n     \t}\r",
      "parent_sha": "d95018c314791ec9c5c440b409b7d737d4e5e1fc"
    }
  },
  {
    "oid": "0e520190d826b48fe2998ef2130dcedbf5621668",
    "message": "Fixed issue reported by Findbugs:\nC:/workspace_zaproxy/zaproxy/src/org/parosproxy/paros/core/scanner/plugin/TestClientAutocomplete.java:57 Invalid syntax for regular expression",
    "date": "2011-05-29T12:35:21Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/0e520190d826b48fe2998ef2130dcedbf5621668",
    "details": {
      "sha": "cfc79e66fb1f5e49b9e44885263089c38bdcfe07",
      "filename": "src/org/parosproxy/paros/core/scanner/plugin/TestClientAutocomplete.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/0e520190d826b48fe2998ef2130dcedbf5621668/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fscanner%2Fplugin%2FTestClientAutocomplete.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/0e520190d826b48fe2998ef2130dcedbf5621668/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fscanner%2Fplugin%2FTestClientAutocomplete.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fscanner%2Fplugin%2FTestClientAutocomplete.java?ref=0e520190d826b48fe2998ef2130dcedbf5621668",
      "patch": "@@ -52,9 +52,9 @@ public boolean isDepreciated() {\n     // check for autocomplete\r\n     public final static Pattern patternAutocomplete = Pattern.compile(\"AUTOCOMPLETE\\\\s*=[^>]*OFF[^>]*\", PATTERN_PARAM);\r\n \r\n-    // used reluctant quantifer to make sure the same form and input element is referred \r\n+    // used reluctant quantifier to make sure the same form and input element is referred \r\n     //public final static Pattern patternForm = Pattern.compile(\"(<FORM\\\\s*[^>]+\\\\s*>)(.*?)</FORM>\", PATTERN_PARAM| Pattern.DOTALL);\r\n-    public final static Pattern patternForm = Pattern.compile(\"(<FORM\\b[^>]*>(.*?)</FORM>\", PATTERN_PARAM| Pattern.DOTALL);\r\n+    public final static Pattern patternForm = Pattern.compile(\"(<FORM\\\\b[^>]*>(.*?)</FORM>\", PATTERN_PARAM| Pattern.DOTALL);\r\n     public final static Pattern patternInput = Pattern.compile(\"(<INPUT\\\\s*[^>]+type=[\\\"']?PASSWORD[\\\"']?[^>]+\\\\s*>)\", PATTERN_PARAM| Pattern.DOTALL);\r\n \r\n     \r",
      "parent_sha": "0ea2e9aecbb1e9756d3e6283da641837771fee9b"
    }
  },
  {
    "oid": "40b160790b4054b4a106b8b76ba3f0b95da1034a",
    "message": "Update NTLM engine implementation\n\nUpdate to latest version from upstream project HttpComponents Client\n(branch 4.6.x, commit f8a26dffded21be28e1c1ae73f12bb0f42ad29f2), to\nimprove interoperability with other servers.",
    "date": "2017-11-21T19:42:54Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/40b160790b4054b4a106b8b76ba3f0b95da1034a",
    "details": {
      "sha": "1debae2147aada61dd79a42af3ff5c03fcd61cb3",
      "filename": "src/org/zaproxy/zap/network/ZapNTLMEngineImpl.java",
      "status": "modified",
      "additions": 793,
      "deletions": 335,
      "changes": 1128,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/40b160790b4054b4a106b8b76ba3f0b95da1034a/src%2Forg%2Fzaproxy%2Fzap%2Fnetwork%2FZapNTLMEngineImpl.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/40b160790b4054b4a106b8b76ba3f0b95da1034a/src%2Forg%2Fzaproxy%2Fzap%2Fnetwork%2FZapNTLMEngineImpl.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fnetwork%2FZapNTLMEngineImpl.java?ref=40b160790b4054b4a106b8b76ba3f0b95da1034a",
      "patch": "@@ -26,119 +26,132 @@\n  */\n package org.zaproxy.zap.network;\n \n-import java.io.UnsupportedEncodingException;\n+import java.nio.charset.Charset;\n+import java.nio.charset.StandardCharsets;\n import java.security.Key;\n import java.security.MessageDigest;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.cert.Certificate;\n+import java.security.cert.CertificateEncodingException;\n import java.util.Arrays;\n import java.util.Locale;\n+import java.util.Random;\n \n import javax.crypto.Cipher;\n import javax.crypto.spec.SecretKeySpec;\n \n import org.apache.commons.codec.binary.Base64;\n import org.apache.commons.httpclient.auth.AuthenticationException;\n-import org.apache.http.util.EncodingUtils;\n \n /*\n- * The content of this class was copied from org.apache.http.impl.auth.NTLMEngine, HttpComponents Client trunk (revision\n- * 1501015).\n+ * The content of this class was copied from org.apache.http.impl.auth.NTLMEngineImpl, HttpComponents Client branch 4.6.x\n+ * (commit f8a26dffded21be28e1c1ae73f12bb0f42ad29f2).\n  * \n  * It was copied because ZAP depends (and uses) Commons HttpClient which is not compatible with, the newer version, \n  * HttpComponents Client.\n  * \n- * It's adapted to work with Commons HttpClient (Note: it's still dependent on class EncodingUtils from HttpComponents Core).\n+ * It's adapted to work with Commons HttpClient.\n  * Changes:\n  *  - Renamed the class to ZapNTLMEngineImpl to not clash with the name NTLMEngineImpl;\n  *  - Moved to \"org.zaproxy.zap.network\" (instead of keeping it in \"org.apache.http.impl.auth\");\n- *  - Replaced the exception org.apache.http.impl.auth.NTLMEngineExceptionNTLMException with \n+ *  - Replaced the exception org.apache.http.impl.auth.NTLMEngineException with \n  *    org.apache.commons.httpclient.auth.AuthenticationException;\n+ *  - Use StandardCharsets instead of org.apache.http.Consts;\n  *  - No longer implements org.apache.http.impl.auth.NTLMEngine (doesn't need to).\n  */\n /**\n  * Provides an implementation for NTLMv1, NTLMv2, and NTLM2 Session forms of the NTLM\n  * authentication protocol.\n- * \n+ *\n  * @since 4.1\n  */\n final class ZapNTLMEngineImpl {\n \n+    /** Unicode encoding */\n+    private static final Charset UNICODE_LITTLE_UNMARKED = Charset.forName(\"UnicodeLittleUnmarked\");\n+    /** Character encoding */\n+    private static final Charset DEFAULT_CHARSET = StandardCharsets.US_ASCII;\n+\n     // Flags we use; descriptions according to:\n     // http://davenport.sourceforge.net/ntlm.html\n     // and\n     // http://msdn.microsoft.com/en-us/library/cc236650%28v=prot.20%29.aspx\n-    protected static final int FLAG_REQUEST_UNICODE_ENCODING = 0x00000001;      // Unicode string encoding requested\n-    protected static final int FLAG_REQUEST_TARGET = 0x00000004;                      // Requests target field\n-    protected static final int FLAG_REQUEST_SIGN = 0x00000010;  // Requests all messages have a signature attached, in NEGOTIATE message.\n-    protected static final int FLAG_REQUEST_SEAL = 0x00000020;  // Request key exchange for message confidentiality in NEGOTIATE message.  MUST be used in conjunction with 56BIT.\n-    protected static final int FLAG_REQUEST_LAN_MANAGER_KEY = 0x00000080;    // Request Lan Manager key instead of user session key\n-    protected static final int FLAG_REQUEST_NTLMv1 = 0x00000200; // Request NTLMv1 security.  MUST be set in NEGOTIATE and CHALLENGE both\n-    protected static final int FLAG_DOMAIN_PRESENT = 0x00001000;        // Domain is present in message\n-    protected static final int FLAG_WORKSTATION_PRESENT = 0x00002000;   // Workstation is present in message\n-    protected static final int FLAG_REQUEST_ALWAYS_SIGN = 0x00008000;   // Requests a signature block on all messages.  Overridden by REQUEST_SIGN and REQUEST_SEAL.\n-    protected static final int FLAG_REQUEST_NTLM2_SESSION = 0x00080000; // From server in challenge, requesting NTLM2 session security\n-    protected static final int FLAG_REQUEST_VERSION = 0x02000000;       // Request protocol version\n-    protected static final int FLAG_TARGETINFO_PRESENT = 0x00800000;    // From server in challenge message, indicating targetinfo is present\n-    protected static final int FLAG_REQUEST_128BIT_KEY_EXCH = 0x20000000; // Request explicit 128-bit key exchange\n-    protected static final int FLAG_REQUEST_EXPLICIT_KEY_EXCH = 0x40000000;     // Request explicit key exchange\n-    protected static final int FLAG_REQUEST_56BIT_ENCRYPTION = 0x80000000;      // Must be used in conjunction with SEAL\n-\n+    // [MS-NLMP] section 2.2.2.5\n+    static final int FLAG_REQUEST_UNICODE_ENCODING = 0x00000001;      // Unicode string encoding requested\n+    static final int FLAG_REQUEST_OEM_ENCODING = 0x00000002;      // OEM string encoding requested\n+    static final int FLAG_REQUEST_TARGET = 0x00000004;                      // Requests target field\n+    static final int FLAG_REQUEST_SIGN = 0x00000010;  // Requests all messages have a signature attached, in NEGOTIATE message.\n+    static final int FLAG_REQUEST_SEAL = 0x00000020;  // Request key exchange for message confidentiality in NEGOTIATE message.  MUST be used in conjunction with 56BIT.\n+    static final int FLAG_REQUEST_LAN_MANAGER_KEY = 0x00000080;    // Request Lan Manager key instead of user session key\n+    static final int FLAG_REQUEST_NTLMv1 = 0x00000200; // Request NTLMv1 security.  MUST be set in NEGOTIATE and CHALLENGE both\n+    static final int FLAG_DOMAIN_PRESENT = 0x00001000;        // Domain is present in message\n+    static final int FLAG_WORKSTATION_PRESENT = 0x00002000;   // Workstation is present in message\n+    static final int FLAG_REQUEST_ALWAYS_SIGN = 0x00008000;   // Requests a signature block on all messages.  Overridden by REQUEST_SIGN and REQUEST_SEAL.\n+    static final int FLAG_REQUEST_NTLM2_SESSION = 0x00080000; // From server in challenge, requesting NTLM2 session security\n+    static final int FLAG_REQUEST_VERSION = 0x02000000;       // Request protocol version\n+    static final int FLAG_TARGETINFO_PRESENT = 0x00800000;    // From server in challenge message, indicating targetinfo is present\n+    static final int FLAG_REQUEST_128BIT_KEY_EXCH = 0x20000000; // Request explicit 128-bit key exchange\n+    static final int FLAG_REQUEST_EXPLICIT_KEY_EXCH = 0x40000000;     // Request explicit key exchange\n+    static final int FLAG_REQUEST_56BIT_ENCRYPTION = 0x80000000;      // Must be used in conjunction with SEAL\n+\n+    // Attribute-value identifiers (AvId)\n+    // according to [MS-NLMP] section 2.2.2.1\n+    static final int MSV_AV_EOL = 0x0000; // Indicates that this is the last AV_PAIR in the list.\n+    static final int MSV_AV_NB_COMPUTER_NAME = 0x0001; // The server's NetBIOS computer name.\n+    static final int MSV_AV_NB_DOMAIN_NAME = 0x0002; // The server's NetBIOS domain name.\n+    static final int MSV_AV_DNS_COMPUTER_NAME = 0x0003; // The fully qualified domain name (FQDN) of the computer.\n+    static final int MSV_AV_DNS_DOMAIN_NAME = 0x0004; // The FQDN of the domain.\n+    static final int MSV_AV_DNS_TREE_NAME = 0x0005; // The FQDN of the forest.\n+    static final int MSV_AV_FLAGS = 0x0006; // A 32-bit value indicating server or client configuration.\n+    static final int MSV_AV_TIMESTAMP = 0x0007; // server local time\n+    static final int MSV_AV_SINGLE_HOST = 0x0008; // A Single_Host_Data structure.\n+    static final int MSV_AV_TARGET_NAME = 0x0009; // The SPN of the target server.\n+    static final int MSV_AV_CHANNEL_BINDINGS = 0x000A; // A channel bindings hash.\n+\n+    static final int MSV_AV_FLAGS_ACCOUNT_AUTH_CONSTAINED = 0x00000001; // Indicates to the client that the account authentication is constrained.\n+    static final int MSV_AV_FLAGS_MIC = 0x00000002; // Indicates that the client is providing message integrity in the MIC field in the AUTHENTICATE_MESSAGE.\n+    static final int MSV_AV_FLAGS_UNTRUSTED_TARGET_SPN = 0x00000004; // Indicates that the client is providing a target SPN generated from an untrusted source.\n \n     /** Secure random generator */\n     private static final java.security.SecureRandom RND_GEN;\n     static {\n         java.security.SecureRandom rnd = null;\n         try {\n             rnd = java.security.SecureRandom.getInstance(\"SHA1PRNG\");\n-        } catch (Exception ignore) {\n+        } catch (final Exception ignore) {\n         }\n         RND_GEN = rnd;\n     }\n \n-    /** Character encoding */\n-    static final String DEFAULT_CHARSET = \"ASCII\";\n-\n-    /** The character set to use for encoding the credentials */\n-    private String credentialCharset = DEFAULT_CHARSET;\n-\n     /** The signature string as bytes in the default encoding */\n-    private static final byte[] SIGNATURE;\n-\n-    static {\n-        final byte[] bytesWithoutNull = EncodingUtils.getBytes(\"NTLMSSP\", \"ASCII\");\n-        SIGNATURE = new byte[bytesWithoutNull.length + 1];\n-        System.arraycopy(bytesWithoutNull, 0, SIGNATURE, 0, bytesWithoutNull.length);\n-        SIGNATURE[bytesWithoutNull.length] = (byte) 0x00;\n+    private static final byte[] SIGNATURE = getNullTerminatedAsciiString(\"NTLMSSP\");\n+\n+    // Key derivation magic strings for the SIGNKEY algorithm defined in\n+    // [MS-NLMP] section 3.4.5.2\n+    private static final byte[] SIGN_MAGIC_SERVER = getNullTerminatedAsciiString(\n+        \"session key to server-to-client signing key magic constant\");\n+    private static final byte[] SIGN_MAGIC_CLIENT = getNullTerminatedAsciiString(\n+        \"session key to client-to-server signing key magic constant\");\n+    private static final byte[] SEAL_MAGIC_SERVER = getNullTerminatedAsciiString(\n+        \"session key to server-to-client sealing key magic constant\");\n+    private static final byte[] SEAL_MAGIC_CLIENT = getNullTerminatedAsciiString(\n+        \"session key to client-to-server sealing key magic constant\");\n+\n+    // prefix for GSS API channel binding\n+    private static final byte[] MAGIC_TLS_SERVER_ENDPOINT = \"tls-server-end-point:\".getBytes(StandardCharsets.US_ASCII);\n+\n+    private static byte[] getNullTerminatedAsciiString( final String source )\n+    {\n+        final byte[] bytesWithoutNull = source.getBytes(StandardCharsets.US_ASCII);\n+        final byte[] target = new byte[bytesWithoutNull.length + 1];\n+        System.arraycopy(bytesWithoutNull, 0, target, 0, bytesWithoutNull.length);\n+        target[bytesWithoutNull.length] = (byte) 0x00;\n+        return target;\n     }\n \n-    /**\n-     * Returns the response for the given message.\n-     *\n-     * @param message\n-     *            the message that was received from the server.\n-     * @param username\n-     *            the username to authenticate with.\n-     * @param password\n-     *            the password to authenticate with.\n-     * @param host\n-     *            The host.\n-     * @param domain\n-     *            the NT domain to authenticate in.\n-     * @return The response.\n-     * @throws org.apache.commons.httpclient.auth.AuthenticationException\n-     *             If the messages cannot be retrieved.\n-     */\n-    final String getResponseFor(final String message, final String username, final String password,\n-            final String host, final String domain) throws AuthenticationException {\n+    private static final String TYPE_1_MESSAGE = new Type1Message().getResponse();\n \n-        final String response;\n-        if (message == null || message.trim().equals(\"\")) {\n-            response = getType1Message(host, domain);\n-        } else {\n-            final Type2Message t2m = new Type2Message(message);\n-            response = getType3Message(username, password, host, domain, t2m.getChallenge(), t2m\n-                    .getFlags(), t2m.getTarget(), t2m.getTargetInfo());\n-        }\n-        return response;\n+    ZapNTLMEngineImpl() {\n     }\n \n     /**\n@@ -152,8 +165,10 @@ final String getResponseFor(final String message, final String username, final S\n      *            The domain to authenticate with.\n      * @return String the message to add to the HTTP request header.\n      */\n-    String getType1Message(final String host, final String domain) throws AuthenticationException {\n-        return new Type1Message(domain, host).getResponse();\n+    static String getType1Message(final String host, final String domain) {\n+        // For compatibility reason do not include domain and host in type 1 message\n+        //return new Type1Message(domain, host).getResponse();\n+        return TYPE_1_MESSAGE;\n     }\n \n     /**\n@@ -176,99 +191,90 @@ String getType1Message(final String host, final String domain) throws Authentica\n      * @throws AuthenticationException\n      *             If {@encrypt(byte[],byte[])} fails.\n      */\n-    String getType3Message(final String user, final String password, final String host, final String domain,\n+    static String getType3Message(final String user, final String password, final String host, final String domain,\n             final byte[] nonce, final int type2Flags, final String target, final byte[] targetInformation)\n             throws AuthenticationException {\n         return new Type3Message(domain, host, user, password, nonce, type2Flags, target,\n                 targetInformation).getResponse();\n     }\n \n     /**\n-     * @return Returns the credentialCharset.\n-     */\n-    String getCredentialCharset() {\n-        return credentialCharset;\n-    }\n-\n-    /**\n-     * @param credentialCharset\n-     *            The credentialCharset to set.\n+     * Creates the type 3 message using the given server nonce. The type 3\n+     * message includes all the information for authentication, host, domain,\n+     * username and the result of encrypting the nonce sent by the server using\n+     * the user's password as the key.\n+     *\n+     * @param user\n+     *            The user name. This should not include the domain name.\n+     * @param password\n+     *            The password.\n+     * @param host\n+     *            The host that is originating the authentication request.\n+     * @param domain\n+     *            The domain to authenticate within.\n+     * @param nonce\n+     *            the 8 byte array the server sent.\n+     * @return The type 3 message.\n+     * @throws AuthenticationException\n+     *             If {@encrypt(byte[],byte[])} fails.\n      */\n-    void setCredentialCharset(final String credentialCharset) {\n-        this.credentialCharset = credentialCharset;\n-    }\n-\n-    /** Strip dot suffix from a name */\n-    private static String stripDotSuffix(final String value) {\n-        if (value == null) {\n-            return null;\n-        }\n-        final int index = value.indexOf(\".\");\n-        if (index != -1)\n-            return value.substring(0, index);\n-        return value;\n-    }\n-\n-    /** Convert host to standard form */\n-    private static String convertHost(final String host) {\n-        return stripDotSuffix(host);\n-    }\n-\n-    /** Convert domain to standard form */\n-    private static String convertDomain(final String domain) {\n-        return stripDotSuffix(domain);\n+    static String getType3Message(final String user, final String password, final String host, final String domain,\n+            final byte[] nonce, final int type2Flags, final String target, final byte[] targetInformation,\n+            final Certificate peerServerCertificate, final byte[] type1Message, final byte[] type2Message)\n+            throws AuthenticationException {\n+        return new Type3Message(domain, host, user, password, nonce, type2Flags, target,\n+                targetInformation, peerServerCertificate, type1Message, type2Message).getResponse();\n     }\n \n     private static int readULong(final byte[] src, final int index) throws AuthenticationException {\n-        if (src.length < index + 4)\n-            throw new AuthenticationException(\"NTLM authentication - buffer too small for DWORD\");\n+        if (src.length < index + 4) {\n+            return 0;\n+        }\n         return (src[index] & 0xff) | ((src[index + 1] & 0xff) << 8)\n                 | ((src[index + 2] & 0xff) << 16) | ((src[index + 3] & 0xff) << 24);\n     }\n \n     private static int readUShort(final byte[] src, final int index) throws AuthenticationException {\n-        if (src.length < index + 2)\n-            throw new AuthenticationException(\"NTLM authentication - buffer too small for WORD\");\n+        if (src.length < index + 2) {\n+            return 0;\n+        }\n         return (src[index] & 0xff) | ((src[index + 1] & 0xff) << 8);\n     }\n \n     private static byte[] readSecurityBuffer(final byte[] src, final int index) throws AuthenticationException {\n         final int length = readUShort(src, index);\n         final int offset = readULong(src, index + 4);\n-        if (src.length < offset + length)\n-            throw new AuthenticationException(\n-                    \"NTLM authentication - buffer too small for data item\");\n+        if (src.length < offset + length) {\n+            return new byte[length];\n+        }\n         final byte[] buffer = new byte[length];\n         System.arraycopy(src, offset, buffer, 0, length);\n         return buffer;\n     }\n \n     /** Calculate a challenge block */\n-    private static byte[] makeRandomChallenge() throws AuthenticationException {\n-        if (RND_GEN == null) {\n-            throw new AuthenticationException(\"Random generator not available\");\n-        }\n+    private static byte[] makeRandomChallenge(final Random random) throws AuthenticationException {\n         final byte[] rval = new byte[8];\n-        synchronized (RND_GEN) {\n-            RND_GEN.nextBytes(rval);\n+        synchronized (random) {\n+            random.nextBytes(rval);\n         }\n         return rval;\n     }\n \n     /** Calculate a 16-byte secondary key */\n-    private static byte[] makeSecondaryKey() throws AuthenticationException {\n-        if (RND_GEN == null) {\n-            throw new AuthenticationException(\"Random generator not available\");\n-        }\n+    private static byte[] makeSecondaryKey(final Random random) throws AuthenticationException {\n         final byte[] rval = new byte[16];\n-        synchronized (RND_GEN) {\n-            RND_GEN.nextBytes(rval);\n+        synchronized (random) {\n+            random.nextBytes(rval);\n         }\n         return rval;\n     }\n \n     protected static class CipherGen {\n \n+        protected final Random random;\n+        protected final long currentTime;\n+\n         protected final String domain;\n         protected final String user;\n         protected final String password;\n@@ -300,10 +306,25 @@ protected static class CipherGen {\n         protected byte[] ntlm2SessionResponseUserSessionKey = null;\n         protected byte[] lanManagerSessionKey = null;\n \n+        @Deprecated\n         public CipherGen(final String domain, final String user, final String password,\n             final byte[] challenge, final String target, final byte[] targetInformation,\n             final byte[] clientChallenge, final byte[] clientChallenge2,\n             final byte[] secondaryKey, final byte[] timestamp) {\n+            this(RND_GEN, System.currentTimeMillis(),\n+                domain, user, password, challenge, target, targetInformation,\n+                clientChallenge, clientChallenge2,\n+                secondaryKey, timestamp);\n+        }\n+\n+        public CipherGen(final Random random, final long currentTime,\n+            final String domain, final String user, final String password,\n+            final byte[] challenge, final String target, final byte[] targetInformation,\n+            final byte[] clientChallenge, final byte[] clientChallenge2,\n+            final byte[] secondaryKey, final byte[] timestamp) {\n+            this.random = random;\n+            this.currentTime = currentTime;\n+\n             this.domain = domain;\n             this.target = target;\n             this.user = user;\n@@ -316,87 +337,111 @@ public CipherGen(final String domain, final String user, final String password,\n             this.timestamp = timestamp;\n         }\n \n-        public CipherGen(final String domain, final String user, final String password,\n-            final byte[] challenge, final String target, final byte[] targetInformation) {\n-            this(domain, user, password, challenge, target, targetInformation, null, null, null, null);\n+        @Deprecated\n+        public CipherGen(final String domain,\n+            final String user,\n+            final String password,\n+            final byte[] challenge,\n+            final String target,\n+            final byte[] targetInformation) {\n+            this(RND_GEN, System.currentTimeMillis(), domain, user, password, challenge, target, targetInformation);\n+        }\n+\n+        public CipherGen(final Random random, final long currentTime,\n+            final String domain,\n+            final String user,\n+            final String password,\n+            final byte[] challenge,\n+            final String target,\n+            final byte[] targetInformation) {\n+            this(random, currentTime, domain, user, password, challenge, target, targetInformation, null, null, null, null);\n         }\n \n         /** Calculate and return client challenge */\n         public byte[] getClientChallenge()\n             throws AuthenticationException {\n-            if (clientChallenge == null)\n-                clientChallenge = makeRandomChallenge();\n+            if (clientChallenge == null) {\n+                clientChallenge = makeRandomChallenge(random);\n+            }\n             return clientChallenge;\n         }\n \n         /** Calculate and return second client challenge */\n         public byte[] getClientChallenge2()\n             throws AuthenticationException {\n-            if (clientChallenge2 == null)\n-                clientChallenge2 = makeRandomChallenge();\n+            if (clientChallenge2 == null) {\n+                clientChallenge2 = makeRandomChallenge(random);\n+            }\n             return clientChallenge2;\n         }\n \n         /** Calculate and return random secondary key */\n         public byte[] getSecondaryKey()\n             throws AuthenticationException {\n-            if (secondaryKey == null)\n-                secondaryKey = makeSecondaryKey();\n+            if (secondaryKey == null) {\n+                secondaryKey = makeSecondaryKey(random);\n+            }\n             return secondaryKey;\n         }\n \n         /** Calculate and return the LMHash */\n         public byte[] getLMHash()\n             throws AuthenticationException {\n-            if (lmHash == null)\n+            if (lmHash == null) {\n                 lmHash = lmHash(password);\n+            }\n             return lmHash;\n         }\n \n         /** Calculate and return the LMResponse */\n         public byte[] getLMResponse()\n             throws AuthenticationException {\n-            if (lmResponse == null)\n+            if (lmResponse == null) {\n                 lmResponse = lmResponse(getLMHash(),challenge);\n+            }\n             return lmResponse;\n         }\n \n         /** Calculate and return the NTLMHash */\n         public byte[] getNTLMHash()\n             throws AuthenticationException {\n-            if (ntlmHash == null)\n+            if (ntlmHash == null) {\n                 ntlmHash = ntlmHash(password);\n+            }\n             return ntlmHash;\n         }\n \n         /** Calculate and return the NTLMResponse */\n         public byte[] getNTLMResponse()\n             throws AuthenticationException {\n-            if (ntlmResponse == null)\n+            if (ntlmResponse == null) {\n                 ntlmResponse = lmResponse(getNTLMHash(),challenge);\n+            }\n             return ntlmResponse;\n         }\n \n         /** Calculate the LMv2 hash */\n         public byte[] getLMv2Hash()\n             throws AuthenticationException {\n-            if (lmv2Hash == null)\n+            if (lmv2Hash == null) {\n                 lmv2Hash = lmv2Hash(domain, user, getNTLMHash());\n+            }\n             return lmv2Hash;\n         }\n \n         /** Calculate the NTLMv2 hash */\n         public byte[] getNTLMv2Hash()\n             throws AuthenticationException {\n-            if (ntlmv2Hash == null)\n+            if (ntlmv2Hash == null) {\n                 ntlmv2Hash = ntlmv2Hash(domain, user, getNTLMHash());\n+            }\n             return ntlmv2Hash;\n         }\n \n         /** Calculate a timestamp */\n         public byte[] getTimestamp() {\n             if (timestamp == null) {\n-                long time = System.currentTimeMillis();\n+                long time = this.currentTime;\n                 time += 11644473600000l; // milliseconds from January 1, 1601 -> epoch.\n                 time *= 10000; // tenths of a microsecond.\n                 // convert to little-endian byte array.\n@@ -412,43 +457,47 @@ public byte[] getTimestamp() {\n         /** Calculate the NTLMv2Blob */\n         public byte[] getNTLMv2Blob()\n             throws AuthenticationException {\n-            if (ntlmv2Blob == null)\n+            if (ntlmv2Blob == null) {\n                 ntlmv2Blob = createBlob(getClientChallenge2(), targetInformation, getTimestamp());\n+            }\n             return ntlmv2Blob;\n         }\n \n         /** Calculate the NTLMv2Response */\n         public byte[] getNTLMv2Response()\n             throws AuthenticationException {\n-            if (ntlmv2Response == null)\n+            if (ntlmv2Response == null) {\n                 ntlmv2Response = lmv2Response(getNTLMv2Hash(),challenge,getNTLMv2Blob());\n+            }\n             return ntlmv2Response;\n         }\n \n         /** Calculate the LMv2Response */\n         public byte[] getLMv2Response()\n             throws AuthenticationException {\n-            if (lmv2Response == null)\n+            if (lmv2Response == null) {\n                 lmv2Response = lmv2Response(getLMv2Hash(),challenge,getClientChallenge());\n+            }\n             return lmv2Response;\n         }\n \n         /** Get NTLM2SessionResponse */\n         public byte[] getNTLM2SessionResponse()\n             throws AuthenticationException {\n-            if (ntlm2SessionResponse == null)\n+            if (ntlm2SessionResponse == null) {\n                 ntlm2SessionResponse = ntlm2SessionResponse(getNTLMHash(),challenge,getClientChallenge());\n+            }\n             return ntlm2SessionResponse;\n         }\n \n         /** Calculate and return LM2 session response */\n         public byte[] getLM2SessionResponse()\n             throws AuthenticationException {\n             if (lm2SessionResponse == null) {\n-                final byte[] clientChallenge = getClientChallenge();\n+                final byte[] clntChallenge = getClientChallenge();\n                 lm2SessionResponse = new byte[24];\n-                System.arraycopy(clientChallenge, 0, lm2SessionResponse, 0, clientChallenge.length);\n-                Arrays.fill(lm2SessionResponse, clientChallenge.length, lm2SessionResponse.length, (byte) 0x00);\n+                System.arraycopy(clntChallenge, 0, lm2SessionResponse, 0, clntChallenge.length);\n+                Arrays.fill(lm2SessionResponse, clntChallenge.length, lm2SessionResponse.length, (byte) 0x00);\n             }\n             return lm2SessionResponse;\n         }\n@@ -457,9 +506,8 @@ public byte[] getLM2SessionResponse()\n         public byte[] getLMUserSessionKey()\n             throws AuthenticationException {\n             if (lmUserSessionKey == null) {\n-                final byte[] lmHash = getLMHash();\n                 lmUserSessionKey = new byte[16];\n-                System.arraycopy(lmHash, 0, lmUserSessionKey, 0, 8);\n+                System.arraycopy(getLMHash(), 0, lmUserSessionKey, 0, 8);\n                 Arrays.fill(lmUserSessionKey, 8, 16, (byte) 0x00);\n             }\n             return lmUserSessionKey;\n@@ -469,9 +517,8 @@ public byte[] getLMUserSessionKey()\n         public byte[] getNTLMUserSessionKey()\n             throws AuthenticationException {\n             if (ntlmUserSessionKey == null) {\n-                final byte[] ntlmHash = getNTLMHash();\n                 final MD4 md4 = new MD4();\n-                md4.update(ntlmHash);\n+                md4.update(getNTLMHash());\n                 ntlmUserSessionKey = md4.getOutput();\n             }\n             return ntlmUserSessionKey;\n@@ -493,12 +540,11 @@ public byte[] getNTLMv2UserSessionKey()\n         public byte[] getNTLM2SessionResponseUserSessionKey()\n             throws AuthenticationException {\n             if (ntlm2SessionResponseUserSessionKey == null) {\n-                final byte[] ntlmUserSessionKey = getNTLMUserSessionKey();\n                 final byte[] ntlm2SessionResponseNonce = getLM2SessionResponse();\n                 final byte[] sessionNonce = new byte[challenge.length + ntlm2SessionResponseNonce.length];\n                 System.arraycopy(challenge, 0, sessionNonce, 0, challenge.length);\n                 System.arraycopy(ntlm2SessionResponseNonce, 0, sessionNonce, challenge.length, ntlm2SessionResponseNonce.length);\n-                ntlm2SessionResponseUserSessionKey = hmacMD5(sessionNonce,ntlmUserSessionKey);\n+                ntlm2SessionResponseUserSessionKey = hmacMD5(sessionNonce,getNTLMUserSessionKey());\n             }\n             return ntlm2SessionResponseUserSessionKey;\n         }\n@@ -507,16 +553,14 @@ public byte[] getNTLM2SessionResponseUserSessionKey()\n         public byte[] getLanManagerSessionKey()\n             throws AuthenticationException {\n             if (lanManagerSessionKey == null) {\n-                final byte[] lmHash = getLMHash();\n-                final byte[] lmResponse = getLMResponse();\n                 try {\n                     final byte[] keyBytes = new byte[14];\n-                    System.arraycopy(lmHash, 0, keyBytes, 0, 8);\n+                    System.arraycopy(getLMHash(), 0, keyBytes, 0, 8);\n                     Arrays.fill(keyBytes, 8, keyBytes.length, (byte)0xbd);\n                     final Key lowKey = createDESKey(keyBytes, 0);\n                     final Key highKey = createDESKey(keyBytes, 7);\n                     final byte[] truncatedResponse = new byte[8];\n-                    System.arraycopy(lmResponse, 0, truncatedResponse, 0, truncatedResponse.length);\n+                    System.arraycopy(getLMResponse(), 0, truncatedResponse, 0, truncatedResponse.length);\n                     Cipher des = Cipher.getInstance(\"DES/ECB/NoPadding\");\n                     des.init(Cipher.ENCRYPT_MODE, lowKey);\n                     final byte[] lowPart = des.doFinal(truncatedResponse);\n@@ -526,7 +570,7 @@ public byte[] getLanManagerSessionKey()\n                     lanManagerSessionKey = new byte[16];\n                     System.arraycopy(lowPart, 0, lanManagerSessionKey, 0, lowPart.length);\n                     System.arraycopy(highPart, 0, lanManagerSessionKey, lowPart.length, highPart.length);\n-                } catch (Exception e) {\n+                } catch (final Exception e) {\n                     throw new AuthenticationException(e.getMessage(), e);\n                 }\n             }\n@@ -549,7 +593,7 @@ static byte[] RC4(final byte[] value, final byte[] key)\n             final Cipher rc4 = Cipher.getInstance(\"RC4\");\n             rc4.init(Cipher.ENCRYPT_MODE, new SecretKeySpec(key, \"RC4\"));\n             return rc4.doFinal(value);\n-        } catch (Exception e) {\n+        } catch (final Exception e) {\n             throw new AuthenticationException(e.getMessage(), e);\n         }\n     }\n@@ -565,30 +609,18 @@ static byte[] RC4(final byte[] value, final byte[] key)\n     static byte[] ntlm2SessionResponse(final byte[] ntlmHash, final byte[] challenge,\n             final byte[] clientChallenge) throws AuthenticationException {\n         try {\n-            // Look up MD5 algorithm (was necessary on jdk 1.4.2)\n-            // This used to be needed, but java 1.5.0_07 includes the MD5\n-            // algorithm (finally)\n-            // Class x = Class.forName(\"gnu.crypto.hash.MD5\");\n-            // Method updateMethod = x.getMethod(\"update\",new\n-            // Class[]{byte[].class});\n-            // Method digestMethod = x.getMethod(\"digest\",new Class[0]);\n-            // Object mdInstance = x.newInstance();\n-            // updateMethod.invoke(mdInstance,new Object[]{challenge});\n-            // updateMethod.invoke(mdInstance,new Object[]{clientChallenge});\n-            // byte[] digest = (byte[])digestMethod.invoke(mdInstance,new\n-            // Object[0]);\n-\n-            final MessageDigest md5 = MessageDigest.getInstance(\"MD5\");\n+            final MessageDigest md5 = getMD5();\n             md5.update(challenge);\n             md5.update(clientChallenge);\n             final byte[] digest = md5.digest();\n \n             final byte[] sessionHash = new byte[8];\n             System.arraycopy(digest, 0, sessionHash, 0, 8);\n             return lmResponse(ntlmHash, sessionHash);\n-        } catch (Exception e) {\n-            if (e instanceof AuthenticationException)\n+        } catch (final Exception e) {\n+            if (e instanceof AuthenticationException) {\n                 throw (AuthenticationException) e;\n+            }\n             throw new AuthenticationException(e.getMessage(), e);\n         }\n     }\n@@ -604,13 +636,13 @@ static byte[] ntlm2SessionResponse(final byte[] ntlmHash, final byte[] challenge\n      */\n     private static byte[] lmHash(final String password) throws AuthenticationException {\n         try {\n-            final byte[] oemPassword = password.toUpperCase(Locale.US).getBytes(\"US-ASCII\");\n+            final byte[] oemPassword = password.toUpperCase(Locale.ROOT).getBytes(StandardCharsets.US_ASCII);\n             final int length = Math.min(oemPassword.length, 14);\n             final byte[] keyBytes = new byte[14];\n             System.arraycopy(oemPassword, 0, keyBytes, 0, length);\n             final Key lowKey = createDESKey(keyBytes, 0);\n             final Key highKey = createDESKey(keyBytes, 7);\n-            final byte[] magicConstant = \"KGS!@#$%\".getBytes(\"US-ASCII\");\n+            final byte[] magicConstant = \"KGS!@#$%\".getBytes(StandardCharsets.US_ASCII);\n             final Cipher des = Cipher.getInstance(\"DES/ECB/NoPadding\");\n             des.init(Cipher.ENCRYPT_MODE, lowKey);\n             final byte[] lowHash = des.doFinal(magicConstant);\n@@ -620,7 +652,7 @@ private static byte[] lmHash(final String password) throws AuthenticationExcepti\n             System.arraycopy(lowHash, 0, lmHash, 0, 8);\n             System.arraycopy(highHash, 0, lmHash, 8, 8);\n             return lmHash;\n-        } catch (Exception e) {\n+        } catch (final Exception e) {\n             throw new AuthenticationException(e.getMessage(), e);\n         }\n     }\n@@ -635,14 +667,13 @@ private static byte[] lmHash(final String password) throws AuthenticationExcepti\n      *         the NTLM Response and the NTLMv2 and LMv2 Hashes.\n      */\n     private static byte[] ntlmHash(final String password) throws AuthenticationException {\n-        try {\n-            final byte[] unicodePassword = password.getBytes(\"UnicodeLittleUnmarked\");\n-            final MD4 md4 = new MD4();\n-            md4.update(unicodePassword);\n-            return md4.getOutput();\n-        } catch (UnsupportedEncodingException e) {\n-            throw new AuthenticationException(\"Unicode not supported: \" + e.getMessage(), e);\n+        if (UNICODE_LITTLE_UNMARKED == null) {\n+            throw new AuthenticationException(\"Unicode not supported\");\n         }\n+        final byte[] unicodePassword = password.getBytes(UNICODE_LITTLE_UNMARKED);\n+        final MD4 md4 = new MD4();\n+        md4.update(unicodePassword);\n+        return md4.getOutput();\n     }\n \n     /**\n@@ -653,17 +684,16 @@ private static byte[] ntlmHash(final String password) throws AuthenticationExcep\n      */\n     private static byte[] lmv2Hash(final String domain, final String user, final byte[] ntlmHash)\n             throws AuthenticationException {\n-        try {\n-            final HMACMD5 hmacMD5 = new HMACMD5(ntlmHash);\n-            // Upper case username, upper case domain!\n-            hmacMD5.update(user.toUpperCase(Locale.US).getBytes(\"UnicodeLittleUnmarked\"));\n-            if (domain != null) {\n-                hmacMD5.update(domain.toUpperCase(Locale.US).getBytes(\"UnicodeLittleUnmarked\"));\n-            }\n-            return hmacMD5.getOutput();\n-        } catch (UnsupportedEncodingException e) {\n-            throw new AuthenticationException(\"Unicode not supported! \" + e.getMessage(), e);\n+        if (UNICODE_LITTLE_UNMARKED == null) {\n+            throw new AuthenticationException(\"Unicode not supported\");\n         }\n+        final HMACMD5 hmacMD5 = new HMACMD5(ntlmHash);\n+        // Upper case username, upper case domain!\n+        hmacMD5.update(user.toUpperCase(Locale.ROOT).getBytes(UNICODE_LITTLE_UNMARKED));\n+        if (domain != null) {\n+            hmacMD5.update(domain.toUpperCase(Locale.ROOT).getBytes(UNICODE_LITTLE_UNMARKED));\n+        }\n+        return hmacMD5.getOutput();\n     }\n \n     /**\n@@ -674,17 +704,16 @@ private static byte[] lmv2Hash(final String domain, final String user, final byt\n      */\n     private static byte[] ntlmv2Hash(final String domain, final String user, final byte[] ntlmHash)\n             throws AuthenticationException {\n-        try {\n-            final HMACMD5 hmacMD5 = new HMACMD5(ntlmHash);\n-            // Upper case username, mixed case target!!\n-            hmacMD5.update(user.toUpperCase(Locale.US).getBytes(\"UnicodeLittleUnmarked\"));\n-            if (domain != null) {\n-                hmacMD5.update(domain.getBytes(\"UnicodeLittleUnmarked\"));\n-            }\n-            return hmacMD5.getOutput();\n-        } catch (UnsupportedEncodingException e) {\n-            throw new AuthenticationException(\"Unicode not supported! \" + e.getMessage(), e);\n+        if (UNICODE_LITTLE_UNMARKED == null) {\n+            throw new AuthenticationException(\"Unicode not supported\");\n+        }\n+        final HMACMD5 hmacMD5 = new HMACMD5(ntlmHash);\n+        // Upper case username, mixed case target!!\n+        hmacMD5.update(user.toUpperCase(Locale.ROOT).getBytes(UNICODE_LITTLE_UNMARKED));\n+        if (domain != null) {\n+            hmacMD5.update(domain.getBytes(UNICODE_LITTLE_UNMARKED));\n         }\n+        return hmacMD5.getOutput();\n     }\n \n     /**\n@@ -716,7 +745,7 @@ private static byte[] lmResponse(final byte[] hash, final byte[] challenge) thro\n             System.arraycopy(middleResponse, 0, lmResponse, 8, 8);\n             System.arraycopy(highResponse, 0, lmResponse, 16, 8);\n             return lmResponse;\n-        } catch (Exception e) {\n+        } catch (final Exception e) {\n             throw new AuthenticationException(e.getMessage(), e);\n         }\n     }\n@@ -747,6 +776,191 @@ private static byte[] lmv2Response(final byte[] hash, final byte[] challenge, fi\n         return lmv2Response;\n     }\n \n+    static enum Mode\n+    {\n+        CLIENT, SERVER;\n+    }\n+\n+    static class Handle\n+    {\n+        final private byte[] exportedSessionKey;\n+        private byte[] signingKey;\n+        private byte[] sealingKey;\n+        private final Cipher rc4;\n+        final Mode mode;\n+        final private boolean isConnection;\n+        int sequenceNumber = 0;\n+\n+\n+        Handle( final byte[] exportedSessionKey, final Mode mode, final boolean isConnection )\n+            throws AuthenticationException\n+        {\n+            this.exportedSessionKey = exportedSessionKey;\n+            this.isConnection = isConnection;\n+            this.mode = mode;\n+            try\n+            {\n+                final MessageDigest signMd5 = getMD5();\n+                final MessageDigest sealMd5 = getMD5();\n+                signMd5.update( exportedSessionKey );\n+                sealMd5.update( exportedSessionKey );\n+                if ( mode == Mode.CLIENT )\n+                {\n+                    signMd5.update( SIGN_MAGIC_CLIENT );\n+                    sealMd5.update( SEAL_MAGIC_CLIENT );\n+                }\n+                else\n+                {\n+                    signMd5.update( SIGN_MAGIC_SERVER );\n+                    sealMd5.update( SEAL_MAGIC_SERVER );\n+                }\n+                signingKey = signMd5.digest();\n+                sealingKey = sealMd5.digest();\n+            }\n+            catch ( final Exception e )\n+            {\n+                throw new AuthenticationException( e.getMessage(), e );\n+            }\n+            rc4 = initCipher();\n+        }\n+\n+        public byte[] getSigningKey()\n+        {\n+            return signingKey;\n+        }\n+\n+\n+        public byte[] getSealingKey()\n+        {\n+            return sealingKey;\n+        }\n+\n+        private Cipher initCipher() throws AuthenticationException\n+        {\n+            final Cipher cipher;\n+            try\n+            {\n+                cipher = Cipher.getInstance( \"RC4\" );\n+                if ( mode == Mode.CLIENT )\n+                {\n+                    cipher.init( Cipher.ENCRYPT_MODE, new SecretKeySpec( sealingKey, \"RC4\" ) );\n+                }\n+                else\n+                {\n+                    cipher.init( Cipher.DECRYPT_MODE, new SecretKeySpec( sealingKey, \"RC4\" ) );\n+                }\n+            }\n+            catch ( final Exception e )\n+            {\n+                throw new AuthenticationException( e.getMessage(), e );\n+            }\n+            return cipher;\n+        }\n+\n+\n+        private void advanceMessageSequence() throws AuthenticationException\n+        {\n+            if ( !isConnection )\n+            {\n+                final MessageDigest sealMd5 = getMD5();\n+                sealMd5.update( sealingKey );\n+                final byte[] seqNumBytes = new byte[4];\n+                writeULong( seqNumBytes, sequenceNumber, 0 );\n+                sealMd5.update( seqNumBytes );\n+                sealingKey = sealMd5.digest();\n+                initCipher();\n+            }\n+            sequenceNumber++;\n+        }\n+\n+        private byte[] encrypt( final byte[] data ) throws AuthenticationException\n+        {\n+            return rc4.update( data );\n+        }\n+\n+        private byte[] decrypt( final byte[] data ) throws AuthenticationException\n+        {\n+            return rc4.update( data );\n+        }\n+\n+        private byte[] computeSignature( final byte[] message ) throws AuthenticationException\n+        {\n+            final byte[] sig = new byte[16];\n+\n+            // version\n+            sig[0] = 0x01;\n+            sig[1] = 0x00;\n+            sig[2] = 0x00;\n+            sig[3] = 0x00;\n+\n+            // HMAC (first 8 bytes)\n+            final HMACMD5 hmacMD5 = new HMACMD5( signingKey );\n+            hmacMD5.update( encodeLong( sequenceNumber ) );\n+            hmacMD5.update( message );\n+            final byte[] hmac = hmacMD5.getOutput();\n+            final byte[] trimmedHmac = new byte[8];\n+            System.arraycopy( hmac, 0, trimmedHmac, 0, 8 );\n+            final byte[] encryptedHmac = encrypt( trimmedHmac );\n+            System.arraycopy( encryptedHmac, 0, sig, 4, 8 );\n+\n+            // sequence number\n+            encodeLong( sig, 12, sequenceNumber );\n+\n+            return sig;\n+        }\n+\n+        private boolean validateSignature( final byte[] signature, final byte message[] ) throws AuthenticationException\n+        {\n+            final byte[] computedSignature = computeSignature( message );\n+            //            log.info( \"SSSSS validateSignature(\"+seqNumber+\")\\n\"\n+            //                + \"  received: \" + DebugUtil.dump( signature ) + \"\\n\"\n+            //                + \"  computed: \" + DebugUtil.dump( computedSignature ) );\n+            return Arrays.equals( signature, computedSignature );\n+        }\n+\n+        public byte[] signAndEncryptMessage( final byte[] cleartextMessage ) throws AuthenticationException\n+        {\n+            final byte[] encryptedMessage = encrypt( cleartextMessage );\n+            final byte[] signature = computeSignature( cleartextMessage );\n+            final byte[] outMessage = new byte[signature.length + encryptedMessage.length];\n+            System.arraycopy( signature, 0, outMessage, 0, signature.length );\n+            System.arraycopy( encryptedMessage, 0, outMessage, signature.length, encryptedMessage.length );\n+            advanceMessageSequence();\n+            return outMessage;\n+        }\n+\n+        public byte[] decryptAndVerifySignedMessage( final byte[] inMessage ) throws AuthenticationException\n+        {\n+            final byte[] signature = new byte[16];\n+            System.arraycopy( inMessage, 0, signature, 0, signature.length );\n+            final byte[] encryptedMessage = new byte[inMessage.length - 16];\n+            System.arraycopy( inMessage, 16, encryptedMessage, 0, encryptedMessage.length );\n+            final byte[] cleartextMessage = decrypt( encryptedMessage );\n+            if ( !validateSignature( signature, cleartextMessage ) )\n+            {\n+                throw new AuthenticationException( \"Wrong signature\" );\n+            }\n+            advanceMessageSequence();\n+            return cleartextMessage;\n+        }\n+\n+    }\n+\n+    private static byte[] encodeLong( final int value )\n+    {\n+        final byte[] enc = new byte[4];\n+        encodeLong( enc, 0, value );\n+        return enc;\n+    }\n+\n+    private static void encodeLong( final byte[] buf, final int offset, final int value )\n+    {\n+        buf[offset + 0] = ( byte ) ( value & 0xff );\n+        buf[offset + 1] = ( byte ) ( value >> 8 & 0xff );\n+        buf[offset + 2] = ( byte ) ( value >> 16 & 0xff );\n+        buf[offset + 3] = ( byte ) ( value >> 24 & 0xff );\n+    }\n+\n     /**\n      * Creates the NTLMv2 blob from the given target information block and\n      * client challenge.\n@@ -830,38 +1044,84 @@ private static void oddParity(final byte[] bytes) {\n         }\n     }\n \n+    /**\n+     * Find the character set based on the flags.\n+     * @param flags is the flags.\n+     * @return the character set.\n+     */\n+    private static Charset getCharset(final int flags) throws AuthenticationException\n+    {\n+        if ((flags & FLAG_REQUEST_UNICODE_ENCODING) == 0) {\n+            return DEFAULT_CHARSET;\n+        } else {\n+            if (UNICODE_LITTLE_UNMARKED == null) {\n+                throw new AuthenticationException( \"Unicode not supported\" );\n+            }\n+            return UNICODE_LITTLE_UNMARKED;\n+        }\n+    }\n+\n+    /** Strip dot suffix from a name */\n+    private static String stripDotSuffix(final String value) {\n+        if (value == null) {\n+            return null;\n+        }\n+        final int index = value.indexOf(\".\");\n+        if (index != -1) {\n+            return value.substring(0, index);\n+        }\n+        return value;\n+    }\n+\n+    /** Convert host to standard form */\n+    private static String convertHost(final String host) {\n+        return stripDotSuffix(host);\n+    }\n+\n+    /** Convert domain to standard form */\n+    private static String convertDomain(final String domain) {\n+        return stripDotSuffix(domain);\n+    }\n+\n     /** NTLM message generation, base class */\n     static class NTLMMessage {\n         /** The current response */\n-        private byte[] messageContents = null;\n+        protected byte[] messageContents = null;\n \n         /** The current output position */\n-        private int currentOutputPosition = 0;\n+        protected int currentOutputPosition = 0;\n \n         /** Constructor to use when message contents are not yet known */\n         NTLMMessage() {\n         }\n \n-        /** Constructor to use when message contents are known */\n+        /** Constructor taking a string */\n         NTLMMessage(final String messageBody, final int expectedType) throws AuthenticationException {\n-            messageContents = Base64.decodeBase64(EncodingUtils.getBytes(messageBody,\n-                    DEFAULT_CHARSET));\n+            this(Base64.decodeBase64(messageBody.getBytes(DEFAULT_CHARSET)), expectedType);\n+        }\n+\n+        /** Constructor to use when message bytes are known */\n+        NTLMMessage(final byte[] message, final int expectedType) throws AuthenticationException {\n+            messageContents = message;\n             // Look for NTLM message\n-            if (messageContents.length < SIGNATURE.length)\n+            if (messageContents.length < SIGNATURE.length) {\n                 throw new AuthenticationException(\"NTLM message decoding error - packet too short\");\n+            }\n             int i = 0;\n             while (i < SIGNATURE.length) {\n-                if (messageContents[i] != SIGNATURE[i])\n+                if (messageContents[i] != SIGNATURE[i]) {\n                     throw new AuthenticationException(\n                             \"NTLM message expected - instead got unrecognized bytes\");\n+                }\n                 i++;\n             }\n \n             // Check to be sure there's a type 2 message indicator next\n             final int type = readULong(SIGNATURE.length);\n-            if (type != expectedType)\n+            if (type != expectedType) {\n                 throw new AuthenticationException(\"NTLM type \" + Integer.toString(expectedType)\n                         + \" message expected - instead got type \" + Integer.toString(type));\n+            }\n \n             currentOutputPosition = messageContents.length;\n         }\n@@ -881,15 +1141,17 @@ protected int getMessageLength() {\n \n         /** Read a byte from a position within the message buffer */\n         protected byte readByte(final int position) throws AuthenticationException {\n-            if (messageContents.length < position + 1)\n+            if (messageContents.length < position + 1) {\n                 throw new AuthenticationException(\"NTLM: Message too short\");\n+            }\n             return messageContents[position];\n         }\n \n         /** Read a bunch of bytes from a position in the message buffer */\n         protected void readBytes(final byte[] buffer, final int position) throws AuthenticationException {\n-            if (messageContents.length < position + buffer.length)\n+            if (messageContents.length < position + buffer.length) {\n                 throw new AuthenticationException(\"NTLM: Message too short\");\n+            }\n             System.arraycopy(messageContents, position, buffer, 0, buffer.length);\n         }\n \n@@ -912,7 +1174,7 @@ protected byte[] readSecurityBuffer(final int position) throws AuthenticationExc\n          * Prepares the object to create a response of the given length.\n          *\n          * @param maxlength\n-         *            the maximum length of the response to prepare, not\n+         *            the maximum length of the response to prepare,\n          *            including the type and the signature (which this method\n          *            adds).\n          */\n@@ -970,91 +1232,124 @@ protected void addULong(final int value) {\n          *\n          * @return The response as above.\n          */\n-        String getResponse() {\n+        public String getResponse() {\n+            return new String(Base64.encodeBase64(getBytes()), StandardCharsets.US_ASCII);\n+        }\n+\n+        public byte[] getBytes() {\n+            if (messageContents == null) {\n+                buildMessage();\n+            }\n             final byte[] resp;\n-            if (messageContents.length > currentOutputPosition) {\n+            if ( messageContents.length > currentOutputPosition ) {\n                 final byte[] tmp = new byte[currentOutputPosition];\n-                System.arraycopy(messageContents, 0, tmp, 0, currentOutputPosition);\n-                resp = tmp;\n-            } else {\n-                resp = messageContents;\n+                System.arraycopy( messageContents, 0, tmp, 0, currentOutputPosition );\n+                messageContents = tmp;\n             }\n-            return EncodingUtils.getAsciiString(Base64.encodeBase64(resp));\n+            return messageContents;\n         }\n \n+        protected void buildMessage() {\n+            throw new RuntimeException(\"Message builder not implemented for \"+getClass().getName());\n+        }\n     }\n \n     /** Type 1 message assembly class */\n     static class Type1Message extends NTLMMessage {\n-        protected byte[] hostBytes;\n-        protected byte[] domainBytes;\n \n-        /** Constructor. Include the arguments the message will need */\n+        private final byte[] hostBytes;\n+        private final byte[] domainBytes;\n+        private final int flags;\n+\n         Type1Message(final String domain, final String host) throws AuthenticationException {\n+            this(domain, host, null);\n+        }\n+\n+        Type1Message(final String domain, final String host, final Integer flags) throws AuthenticationException {\n             super();\n-            try {\n-                // Strip off domain name from the host!\n-                final String unqualifiedHost = convertHost(host);\n-                // Use only the base domain name!\n-                final String unqualifiedDomain = convertDomain(domain);\n-\n-                hostBytes = unqualifiedHost != null? unqualifiedHost.getBytes(\"ASCII\") : null;\n-                domainBytes = unqualifiedDomain != null ? unqualifiedDomain\n-                        .toUpperCase(Locale.US).getBytes(\"ASCII\") : null;\n-            } catch (UnsupportedEncodingException e) {\n-                throw new AuthenticationException(\"Unicode unsupported: \" + e.getMessage(), e);\n-            }\n+            this.flags = ((flags == null)?getDefaultFlags():flags);\n+\n+            // Strip off domain name from the host!\n+            final String unqualifiedHost = convertHost(host);\n+            // Use only the base domain name!\n+            final String unqualifiedDomain = convertDomain(domain);\n+\n+            hostBytes = unqualifiedHost != null ?\n+                    unqualifiedHost.getBytes(UNICODE_LITTLE_UNMARKED) : null;\n+            domainBytes = unqualifiedDomain != null ?\n+                    unqualifiedDomain.toUpperCase(Locale.ROOT).getBytes(UNICODE_LITTLE_UNMARKED) : null;\n+        }\n+\n+        Type1Message() {\n+            super();\n+            hostBytes = null;\n+            domainBytes = null;\n+            flags = getDefaultFlags();\n+        }\n+\n+        private int getDefaultFlags() {\n+            return\n+                //FLAG_WORKSTATION_PRESENT |\n+                //FLAG_DOMAIN_PRESENT |\n+\n+                // Required flags\n+                //FLAG_REQUEST_LAN_MANAGER_KEY |\n+                FLAG_REQUEST_NTLMv1 |\n+                FLAG_REQUEST_NTLM2_SESSION |\n+\n+                // Protocol version request\n+                FLAG_REQUEST_VERSION |\n+\n+                // Recommended privacy settings\n+                FLAG_REQUEST_ALWAYS_SIGN |\n+                //FLAG_REQUEST_SEAL |\n+                //FLAG_REQUEST_SIGN |\n+\n+                // These must be set according to documentation, based on use of SEAL above\n+                FLAG_REQUEST_128BIT_KEY_EXCH |\n+                FLAG_REQUEST_56BIT_ENCRYPTION |\n+                //FLAG_REQUEST_EXPLICIT_KEY_EXCH |\n+\n+                FLAG_REQUEST_UNICODE_ENCODING;\n+\n         }\n \n         /**\n          * Getting the response involves building the message before returning\n          * it\n          */\n         @Override\n-        String getResponse() {\n+        protected void buildMessage() {\n+            int domainBytesLength = 0;\n+            if ( domainBytes != null ) {\n+                domainBytesLength = domainBytes.length;\n+            }\n+            int hostBytesLength = 0;\n+            if ( hostBytes != null ) {\n+                hostBytesLength = hostBytes.length;\n+            }\n+\n             // Now, build the message. Calculate its length first, including\n             // signature or type.\n-            final int finalLength = 32 + 8 /*+ hostBytes.length + domainBytes.length */;\n+            final int finalLength = 32 + 8 + hostBytesLength + domainBytesLength;\n \n             // Set up the response. This will initialize the signature, message\n             // type, and flags.\n             prepareResponse(finalLength, 1);\n \n             // Flags. These are the complete set of flags we support.\n-            addULong(\n-                    //FLAG_WORKSTATION_PRESENT |\n-                    //FLAG_DOMAIN_PRESENT |\n-\n-                    // Required flags\n-                    //FLAG_REQUEST_LAN_MANAGER_KEY |\n-                    FLAG_REQUEST_NTLMv1 |\n-                    FLAG_REQUEST_NTLM2_SESSION |\n-\n-                    // Protocol version request\n-                    FLAG_REQUEST_VERSION |\n-\n-                    // Recommended privacy settings\n-                    FLAG_REQUEST_ALWAYS_SIGN |\n-                    //FLAG_REQUEST_SEAL |\n-                    //FLAG_REQUEST_SIGN |\n-\n-                    // These must be set according to documentation, based on use of SEAL above\n-                    FLAG_REQUEST_128BIT_KEY_EXCH |\n-                    FLAG_REQUEST_56BIT_ENCRYPTION |\n-                    //FLAG_REQUEST_EXPLICIT_KEY_EXCH |\n-\n-                    FLAG_REQUEST_UNICODE_ENCODING);\n+            addULong(flags);\n \n             // Domain length (two times).\n-            addUShort(/*domainBytes.length*/0);\n-            addUShort(/*domainBytes.length*/0);\n+            addUShort(domainBytesLength);\n+            addUShort(domainBytesLength);\n \n             // Domain offset.\n-            addULong(/*hostBytes.length +*/ 32 + 8);\n+            addULong(hostBytesLength + 32 + 8);\n \n             // Host length (two times).\n-            addUShort(/*hostBytes.length*/0);\n-            addUShort(/*hostBytes.length*/0);\n+            addUShort(hostBytesLength);\n+            addUShort(hostBytesLength);\n \n             // Host offset (always 32 + 8).\n             addULong(32 + 8);\n@@ -1066,27 +1361,30 @@ String getResponse() {\n             // NTLM revision\n             addUShort(0x0f00);\n \n-\n             // Host (workstation) String.\n-            //addBytes(hostBytes);\n-\n+            if (hostBytes != null) {\n+                addBytes(hostBytes);\n+            }\n             // Domain String.\n-            //addBytes(domainBytes);\n-\n-\n-            return super.getResponse();\n+            if (domainBytes != null) {\n+                addBytes(domainBytes);\n+            }\n         }\n \n     }\n \n     /** Type 2 message class */\n     static class Type2Message extends NTLMMessage {\n-        protected byte[] challenge;\n+        protected final byte[] challenge;\n         protected String target;\n         protected byte[] targetInfo;\n-        protected int flags;\n+        protected final int flags;\n+\n+        Type2Message(final String messageBody) throws AuthenticationException {\n+            this(Base64.decodeBase64(messageBody.getBytes(DEFAULT_CHARSET)));\n+        }\n \n-        Type2Message(final String message) throws AuthenticationException {\n+        Type2Message(final byte[] message) throws AuthenticationException {\n             super(message, 2);\n \n             // Type 2 message is laid out as follows:\n@@ -1109,11 +1407,6 @@ static class Type2Message extends NTLMMessage {\n \n             flags = readULong(20);\n \n-            if ((flags & FLAG_REQUEST_UNICODE_ENCODING) == 0)\n-                throw new AuthenticationException(\n-                        \"NTLM type 2 message has flags that make no sense: \"\n-                                + Integer.toString(flags));\n-\n             // Do the target!\n             target = null;\n             // The TARGET_DESIRED flag is said to not have understood semantics\n@@ -1122,11 +1415,7 @@ static class Type2Message extends NTLMMessage {\n             if (getMessageLength() >= 12 + 8) {\n                 final byte[] bytes = readSecurityBuffer(12);\n                 if (bytes.length != 0) {\n-                    try {\n-                        target = new String(bytes, \"UnicodeLittleUnmarked\");\n-                    } catch (UnsupportedEncodingException e) {\n-                        throw new AuthenticationException(e.getMessage(), e);\n-                    }\n+                    target = new String(bytes, getCharset(flags));\n                 }\n             }\n \n@@ -1165,32 +1454,113 @@ int getFlags() {\n \n     /** Type 3 message assembly class */\n     static class Type3Message extends NTLMMessage {\n+        // For mic computation\n+        protected final byte[] type1Message;\n+        protected final byte[] type2Message;\n         // Response flags from the type2 message\n-        protected int type2Flags;\n+        protected final int type2Flags;\n \n-        protected byte[] domainBytes;\n-        protected byte[] hostBytes;\n-        protected byte[] userBytes;\n+        protected final byte[] domainBytes;\n+        protected final byte[] hostBytes;\n+        protected final byte[] userBytes;\n \n         protected byte[] lmResp;\n         protected byte[] ntResp;\n-        protected byte[] sessionKey;\n+        protected final byte[] sessionKey;\n+        protected final byte[] exportedSessionKey;\n+\n+        protected final boolean computeMic;\n+\n+        /** More primitive constructor: don't include cert or previous messages.\n+        */\n+        Type3Message(final String domain,\n+            final String host,\n+            final String user,\n+            final String password,\n+            final byte[] nonce,\n+            final int type2Flags,\n+            final String target,\n+            final byte[] targetInformation)\n+            throws AuthenticationException {\n+            this(domain, host, user, password, nonce, type2Flags, target, targetInformation, null, null, null);\n+        }\n+\n+        /** More primitive constructor: don't include cert or previous messages.\n+        */\n+        Type3Message(final Random random, final long currentTime,\n+            final String domain,\n+            final String host,\n+            final String user,\n+            final String password,\n+            final byte[] nonce,\n+            final int type2Flags,\n+            final String target,\n+            final byte[] targetInformation)\n+            throws AuthenticationException {\n+            this(random, currentTime, domain, host, user, password, nonce, type2Flags, target, targetInformation, null, null, null);\n+        }\n \n+        /** Constructor. Pass the arguments we will need */\n+        Type3Message(final String domain,\n+            final String host,\n+            final String user,\n+            final String password,\n+            final byte[] nonce,\n+            final int type2Flags,\n+            final String target,\n+            final byte[] targetInformation,\n+            final Certificate peerServerCertificate,\n+            final byte[] type1Message,\n+            final byte[] type2Message)\n+            throws AuthenticationException {\n+            this(RND_GEN, System.currentTimeMillis(), domain, host, user, password, nonce, type2Flags, target, targetInformation, peerServerCertificate, type1Message, type2Message);\n+        }\n \n         /** Constructor. Pass the arguments we will need */\n-        Type3Message(final String domain, final String host, final String user, final String password, final byte[] nonce,\n-                final int type2Flags, final String target, final byte[] targetInformation)\n-                throws AuthenticationException {\n+        Type3Message(final Random random, final long currentTime,\n+            final String domain,\n+            final String host,\n+            final String user,\n+            final String password,\n+            final byte[] nonce,\n+            final int type2Flags,\n+            final String target,\n+            final byte[] targetInformation,\n+            final Certificate peerServerCertificate,\n+            final byte[] type1Message,\n+            final byte[] type2Message)\n+            throws AuthenticationException {\n+\n+            if (random == null) {\n+                throw new AuthenticationException(\"Random generator not available\");\n+            }\n+\n             // Save the flags\n             this.type2Flags = type2Flags;\n+            this.type1Message = type1Message;\n+            this.type2Message = type2Message;\n \n             // Strip off domain name from the host!\n             final String unqualifiedHost = convertHost(host);\n             // Use only the base domain name!\n             final String unqualifiedDomain = convertDomain(domain);\n \n-            // Create a cipher generator class.  Use domain BEFORE it gets modified!\n-            final CipherGen gen = new CipherGen(unqualifiedDomain, user, password, nonce, target, targetInformation);\n+            byte[] responseTargetInformation = targetInformation;\n+            if (peerServerCertificate != null) {\n+                responseTargetInformation = addGssMicAvsToTargetInfo(targetInformation, peerServerCertificate);\n+                computeMic = true;\n+            } else {\n+                computeMic = false;\n+            }\n+\n+             // Create a cipher generator class.  Use domain BEFORE it gets modified!\n+            final CipherGen gen = new CipherGen(random, currentTime,\n+                unqualifiedDomain,\n+                user,\n+                password,\n+                nonce,\n+                target,\n+                responseTargetInformation);\n \n             // Use the new code to calculate the responses, including v2 if that\n             // seems warranted.\n@@ -1203,77 +1573,93 @@ static class Type3Message extends NTLMMessage {\n                     // NTLMv2\n                     ntResp = gen.getNTLMv2Response();\n                     lmResp = gen.getLMv2Response();\n-                    if ((type2Flags & FLAG_REQUEST_LAN_MANAGER_KEY) != 0)\n+                    if ((type2Flags & FLAG_REQUEST_LAN_MANAGER_KEY) != 0) {\n                         userSessionKey = gen.getLanManagerSessionKey();\n-                    else\n+                    } else {\n                         userSessionKey = gen.getNTLMv2UserSessionKey();\n+                    }\n                 } else {\n                     // NTLMv1\n                     if ((type2Flags & FLAG_REQUEST_NTLM2_SESSION) != 0) {\n                         // NTLM2 session stuff is requested\n                         ntResp = gen.getNTLM2SessionResponse();\n                         lmResp = gen.getLM2SessionResponse();\n-                        if ((type2Flags & FLAG_REQUEST_LAN_MANAGER_KEY) != 0)\n+                        if ((type2Flags & FLAG_REQUEST_LAN_MANAGER_KEY) != 0) {\n                             userSessionKey = gen.getLanManagerSessionKey();\n-                        else\n+                        } else {\n                             userSessionKey = gen.getNTLM2SessionResponseUserSessionKey();\n+                        }\n                     } else {\n                         ntResp = gen.getNTLMResponse();\n                         lmResp = gen.getLMResponse();\n-                        if ((type2Flags & FLAG_REQUEST_LAN_MANAGER_KEY) != 0)\n+                        if ((type2Flags & FLAG_REQUEST_LAN_MANAGER_KEY) != 0) {\n                             userSessionKey = gen.getLanManagerSessionKey();\n-                        else\n+                        } else {\n                             userSessionKey = gen.getNTLMUserSessionKey();\n+                        }\n                     }\n                 }\n-            } catch (AuthenticationException e) {\n+            } catch (final AuthenticationException e) {\n                 // This likely means we couldn't find the MD4 hash algorithm -\n                 // fail back to just using LM\n                 ntResp = new byte[0];\n                 lmResp = gen.getLMResponse();\n-                if ((type2Flags & FLAG_REQUEST_LAN_MANAGER_KEY) != 0)\n+                if ((type2Flags & FLAG_REQUEST_LAN_MANAGER_KEY) != 0) {\n                     userSessionKey = gen.getLanManagerSessionKey();\n-                else\n+                } else {\n                     userSessionKey = gen.getLMUserSessionKey();\n+                }\n             }\n \n             if ((type2Flags & FLAG_REQUEST_SIGN) != 0) {\n-                if ((type2Flags & FLAG_REQUEST_EXPLICIT_KEY_EXCH) != 0)\n-                    sessionKey = RC4(gen.getSecondaryKey(), userSessionKey);\n-                else\n+                if ((type2Flags & FLAG_REQUEST_EXPLICIT_KEY_EXCH) != 0) {\n+                    exportedSessionKey = gen.getSecondaryKey();\n+                    sessionKey = RC4(exportedSessionKey, userSessionKey);\n+                } else {\n                     sessionKey = userSessionKey;\n+                    exportedSessionKey = sessionKey;\n+                }\n             } else {\n+                if (computeMic) {\n+                    throw new AuthenticationException(\"Cannot sign/seal: no exported session key\");\n+                }\n                 sessionKey = null;\n+                exportedSessionKey = null;\n             }\n+            final Charset charset = getCharset(type2Flags);\n+            hostBytes = unqualifiedHost != null ? unqualifiedHost.getBytes(charset) : null;\n+             domainBytes = unqualifiedDomain != null ? unqualifiedDomain\n+                .toUpperCase(Locale.ROOT).getBytes(charset) : null;\n+            userBytes = user.getBytes(charset);\n+        }\n \n-            try {\n-                hostBytes = unqualifiedHost != null ? unqualifiedHost\n-                        .getBytes(\"UnicodeLittleUnmarked\") : null;\n-                domainBytes = unqualifiedDomain != null ? unqualifiedDomain\n-                        .toUpperCase(Locale.US).getBytes(\"UnicodeLittleUnmarked\") : null;\n-                userBytes = user.getBytes(\"UnicodeLittleUnmarked\");\n-            } catch (UnsupportedEncodingException e) {\n-                throw new AuthenticationException(\"Unicode not supported: \" + e.getMessage(), e);\n-            }\n+        public byte[] getEncryptedRandomSessionKey() {\n+            return sessionKey;\n+        }\n+\n+        public byte[] getExportedSessionKey() {\n+            return exportedSessionKey;\n         }\n \n         /** Assemble the response */\n         @Override\n-        String getResponse() {\n+        protected void buildMessage() {\n             final int ntRespLen = ntResp.length;\n             final int lmRespLen = lmResp.length;\n \n             final int domainLen = domainBytes != null ? domainBytes.length : 0;\n             final int hostLen = hostBytes != null ? hostBytes.length: 0;\n             final int userLen = userBytes.length;\n             final int sessionKeyLen;\n-            if (sessionKey != null)\n+            if (sessionKey != null) {\n                 sessionKeyLen = sessionKey.length;\n-            else\n+            } else {\n                 sessionKeyLen = 0;\n+            }\n \n             // Calculate the layout within the packet\n-            final int lmRespOffset = 72;  // allocate space for the version\n+            final int lmRespOffset = 72 + // allocate space for the version\n+                ( computeMic ? 16 : 0 ); // and MIC\n             final int ntRespOffset = lmRespOffset + lmRespLen;\n             final int domainOffset = ntRespOffset + ntRespLen;\n             final int userOffset = domainOffset + domainLen;\n@@ -1328,6 +1714,7 @@ String getResponse() {\n \n             // Flags.\n             addULong(\n+                    /*\n                     //FLAG_WORKSTATION_PRESENT |\n                     //FLAG_DOMAIN_PRESENT |\n \n@@ -1352,6 +1739,8 @@ String getResponse() {\n                     (type2Flags & FLAG_TARGETINFO_PRESENT) |\n                     (type2Flags & FLAG_REQUEST_UNICODE_ENCODING) |\n                     (type2Flags & FLAG_REQUEST_TARGET)\n+                        */\n+                type2Flags\n             );\n \n             // Version\n@@ -1361,17 +1750,85 @@ String getResponse() {\n             // NTLM revision\n             addUShort(0x0f00);\n \n+            int micPosition = -1;\n+            if ( computeMic ) {\n+                micPosition = currentOutputPosition;\n+                currentOutputPosition += 16;\n+            }\n+\n             // Add the actual data\n             addBytes(lmResp);\n             addBytes(ntResp);\n             addBytes(domainBytes);\n             addBytes(userBytes);\n             addBytes(hostBytes);\n-            if (sessionKey != null)\n+            if (sessionKey != null) {\n                 addBytes(sessionKey);\n+            }\n+\n+            // Write the mic back into its slot in the message\n \n-            return super.getResponse();\n+            if (computeMic) {\n+                // Computation of message integrity code (MIC) as specified in [MS-NLMP] section 3.2.5.1.2.\n+                final HMACMD5 hmacMD5 = new HMACMD5( exportedSessionKey );\n+                hmacMD5.update( type1Message );\n+                hmacMD5.update( type2Message );\n+                hmacMD5.update( messageContents );\n+                final byte[] mic = hmacMD5.getOutput();\n+                System.arraycopy( mic, 0, messageContents, micPosition, mic.length );\n+            }\n         }\n+\n+        /**\n+         * Add GSS channel binding hash and MIC flag to the targetInfo.\n+         * Looks like this is needed if we want to use exported session key for GSS wrapping.\n+         */\n+        private byte[] addGssMicAvsToTargetInfo( final byte[] originalTargetInfo,\n+            final Certificate peerServerCertificate ) throws AuthenticationException\n+        {\n+            final byte[] newTargetInfo = new byte[originalTargetInfo.length + 8 + 20];\n+            final int appendLength = originalTargetInfo.length - 4; // last tag is MSV_AV_EOL, do not copy that\n+            System.arraycopy( originalTargetInfo, 0, newTargetInfo, 0, appendLength );\n+            writeUShort( newTargetInfo, MSV_AV_FLAGS, appendLength );\n+            writeUShort( newTargetInfo, 4, appendLength + 2 );\n+            writeULong( newTargetInfo, MSV_AV_FLAGS_MIC, appendLength + 4 );\n+            writeUShort( newTargetInfo, MSV_AV_CHANNEL_BINDINGS, appendLength + 8 );\n+            writeUShort( newTargetInfo, 16, appendLength + 10 );\n+\n+            final byte[] channelBindingsHash;\n+            try\n+            {\n+                final byte[] certBytes = peerServerCertificate.getEncoded();\n+                final MessageDigest sha256 = MessageDigest.getInstance( \"SHA-256\" );\n+                final byte[] certHashBytes = sha256.digest( certBytes );\n+                final byte[] channelBindingStruct = new byte[16 + 4 + MAGIC_TLS_SERVER_ENDPOINT.length\n+                    + certHashBytes.length];\n+                writeULong( channelBindingStruct, 0x00000035, 16 );\n+                System.arraycopy( MAGIC_TLS_SERVER_ENDPOINT, 0, channelBindingStruct, 20,\n+                    MAGIC_TLS_SERVER_ENDPOINT.length );\n+                System.arraycopy( certHashBytes, 0, channelBindingStruct, 20 + MAGIC_TLS_SERVER_ENDPOINT.length,\n+                    certHashBytes.length );\n+                final MessageDigest md5 = getMD5();\n+                channelBindingsHash = md5.digest( channelBindingStruct );\n+            }\n+            catch ( final CertificateEncodingException e )\n+            {\n+                throw new AuthenticationException( e.getMessage(), e );\n+            }\n+            catch ( final NoSuchAlgorithmException e )\n+            {\n+                throw new AuthenticationException( e.getMessage(), e );\n+            }\n+\n+            System.arraycopy( channelBindingsHash, 0, newTargetInfo, appendLength + 12, 16 );\n+            return newTargetInfo;\n+         }\n+\n+    }\n+\n+    static void writeUShort(final byte[] buffer, final int value, final int offset) {\n+        buffer[offset] = ( byte ) ( value & 0xff );\n+        buffer[offset + 1] = ( byte ) ( value >> 8 & 0xff );\n     }\n \n     static void writeULong(final byte[] buffer, final int value, final int offset) {\n@@ -1397,6 +1854,14 @@ static int rotintlft(final int val, final int numbits) {\n         return ((val << numbits) | (val >>> (32 - numbits)));\n     }\n \n+    static MessageDigest getMD5() {\n+        try {\n+            return MessageDigest.getInstance(\"MD5\");\n+        } catch (final NoSuchAlgorithmException ex) {\n+            throw new RuntimeException(\"MD5 message digest doesn't seem to exist - fatal error: \"+ex.getMessage(), ex);\n+        }\n+    }\n+\n     /**\n      * Cryptography support - MD4. The following class was based loosely on the\n      * RFC and on code found at http://www.cs.umd.edu/~harry/jotp/src/md.java.\n@@ -1410,7 +1875,7 @@ static class MD4 {\n         protected int C = 0x98badcfe;\n         protected int D = 0x10325476;\n         protected long count = 0L;\n-        protected byte[] dataBuffer = new byte[64];\n+        protected final byte[] dataBuffer = new byte[64];\n \n         MD4() {\n         }\n@@ -1569,20 +2034,13 @@ protected void round3(final int[] d) {\n      * resources by Karl Wright\n      */\n     static class HMACMD5 {\n-        protected byte[] ipad;\n-        protected byte[] opad;\n-        protected MessageDigest md5;\n+        protected final byte[] ipad;\n+        protected final byte[] opad;\n+        protected final MessageDigest md5;\n \n-        HMACMD5(final byte[] input) throws AuthenticationException {\n+        HMACMD5(final byte[] input) {\n             byte[] key = input;\n-            try {\n-                md5 = MessageDigest.getInstance(\"MD5\");\n-            } catch (Exception ex) {\n-                // Umm, the algorithm doesn't exist - throw an\n-                // AuthenticationException!\n-                throw new AuthenticationException(\n-                        \"Error getting md5 message digest implementation: \" + ex.getMessage(), ex);\n-            }\n+            md5 = getMD5();\n \n             // Initialize the pad buffers with the key\n             ipad = new byte[64];\n@@ -1607,7 +2065,7 @@ static class HMACMD5 {\n                 i++;\n             }\n \n-            // Very important: update the digest with the ipad buffer\n+            // Very important: processChallenge the digest with the ipad buffer\n             md5.reset();\n             md5.update(ipad);\n ",
      "parent_sha": "65f3b70e5e8964ad2ff4920f3b6f0da07d96c6c3"
    }
  },
  {
    "oid": "074555ffb628fa77a275969f8039043c0a0c933e",
    "message": "Refresh History tab after saving session\n\nChange ExtensionHistory to also refresh the History tab after changing\nthe session (sessionChanged) to ensure the History tab contains the\nexpected content after saving the session. (Also, preventing double\nrefresh when opening a session, sessionScopeChanged is called before\nsessionChanged.)\n\nFix #3207 - History tab cleared when session persisted",
    "date": "2017-11-16T15:00:58Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/074555ffb628fa77a275969f8039043c0a0c933e",
    "details": {
      "sha": "1842cfbb496ece78b5fab1d76d859ebd691e1156",
      "filename": "src/org/parosproxy/paros/extension/history/ExtensionHistory.java",
      "status": "modified",
      "additions": 21,
      "deletions": 1,
      "changes": 22,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/074555ffb628fa77a275969f8039043c0a0c933e/src%2Forg%2Fparosproxy%2Fparos%2Fextension%2Fhistory%2FExtensionHistory.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/074555ffb628fa77a275969f8039043c0a0c933e/src%2Forg%2Fparosproxy%2Fparos%2Fextension%2Fhistory%2FExtensionHistory.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fextension%2Fhistory%2FExtensionHistory.java?ref=074555ffb628fa77a275969f8039043c0a0c933e",
      "patch": "@@ -80,6 +80,7 @@\n // ZAP: 2017/06/13 Handle notification of notes set and deprecate/remove code no longer needed.\r\n // ZAP: 2017/10/20 Move methods to delete history entries (Issue 3626).\r\n // ZAP: 2017/11/06 Added (un)registerProxy (Issue 3983)\r\n+// ZAP: 2017/11/16 Update the table on sessionChanged (Issue 3207).\r\n \r\n package org.parosproxy.paros.extension.history;\r\n \r\n@@ -165,6 +166,15 @@ public class ExtensionHistory extends ExtensionAdaptor implements SessionChanged\n \t@SuppressWarnings(\"unchecked\")\r\n \tprivate Map<Integer, HistoryReference> historyIdToRef = Collections.synchronizedMap(new ReferenceMap());\r\n \r\n+\t/**\r\n+\t * Flag that indicates whether or not the session is changing. To prevent updating the table more than once when opening a\r\n+\t * session.\r\n+\t * \r\n+\t * @see #sessionAboutToChange(Session)\r\n+\t * @see #sessionScopeChanged(Session)\r\n+\t * @see #sessionChanged(Session)\r\n+\t */\r\n+\tprivate boolean sessionChanging;\r\n     \r\n \tprivate Logger logger = Logger.getLogger(ExtensionHistory.class);\r\n \r\n@@ -266,7 +276,8 @@ public void hook(ExtensionHook extensionHook) {\n \t\r\n \t@Override\r\n \tpublic void sessionChanged(final Session session)  {\r\n-\t\t// Actual work done in sessionScopeChanged\r\n+\t\tsessionChanging = false;\r\n+\t\tsessionChanged();\r\n \t}\r\n \t\r\n \tprivate ProxyListenerLog getProxyListenerLog() {\r\n@@ -735,6 +746,8 @@ public void showInHistory(HistoryReference href) {\n \t\r\n \t@Override\r\n \tpublic void sessionAboutToChange(final Session session) {\r\n+\t\tsessionChanging = true;\r\n+\r\n \t\tif (getView() == null || EventQueue.isDispatchThread()) {\r\n \t\t\thistoryTableModel.clear();\r\n \t\t\thistoryIdToRef.clear();\r\n@@ -843,6 +856,13 @@ void updateLinkWithSitesTreeBaseUri(String baseUri) {\n \r\n \t@Override\r\n \tpublic void sessionScopeChanged(Session session) {\r\n+\t\tif (sessionChanging) {\r\n+\t\t\treturn;\r\n+\t\t}\r\n+\t\tsessionChanged();\r\n+\t}\r\n+\r\n+\tprivate void sessionChanged() {\r\n \t\tif (getView() != null) {\r\n \t\t\tsearchHistory(getFilterPlusDialog().getFilter());\r\n \t\t} else {\r",
      "parent_sha": "2173b265d66b1cf0376aed242eec3b31c44c11f9"
    }
  },
  {
    "oid": "18e54486400708692648447accb52c0fd93f3674",
    "message": "Making SimpleExample work\n\n- changing optional parameter values from empty string to null (so they are not added to the map)\n- removing response status check, since exception is raised in ApiResponseFactory\n- using scan ID for checking active scanner progress",
    "date": "2016-04-12T11:16:38Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/18e54486400708692648447accb52c0fd93f3674",
    "details": {
      "sha": "90357b2633e8e2b7c6ad8178b758ff50c9cd49e4",
      "filename": "src/org/zaproxy/clientapi/core/SimpleExample.java",
      "status": "modified",
      "additions": 6,
      "deletions": 8,
      "changes": 14,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/18e54486400708692648447accb52c0fd93f3674/src%2Forg%2Fzaproxy%2Fclientapi%2Fcore%2FSimpleExample.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/18e54486400708692648447accb52c0fd93f3674/src%2Forg%2Fzaproxy%2Fclientapi%2Fcore%2FSimpleExample.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fclientapi%2Fcore%2FSimpleExample.java?ref=18e54486400708692648447accb52c0fd93f3674",
      "patch": "@@ -41,7 +41,7 @@ public static void main(String[] args) {\n \t\t\t\r\n \t\t\t// Start spidering the target\r\n \t\t\tSystem.out.println(\"Spider : \" + target);\r\n-\t\t\tApiResponse resp = api.spider.scan(apikey, target, \"\", \"\", \"\");\r\n+\t\t\tApiResponse resp = api.spider.scan(apikey, target, null, null, null);\r\n \t\t\tString scanid;\r\n \t\t\tint progress;\r\n \t\t\t\r\n@@ -63,17 +63,15 @@ public static void main(String[] args) {\n \t\t\tThread.sleep(2000);\r\n \r\n \t\t\tSystem.out.println(\"Active scan : \" + target);\r\n-\t\t\tresp = api.ascan.scan(apikey, target, \"True\", \"False\", \"\", \"\", \"\");\r\n-\t\t\t\r\n-\t\t\tif (! \"OK\".equals(((ApiResponseElement)resp).getValue())) {\r\n-\t\t\t\tSystem.out.println(\"Failed to Active Scan target : \" + resp.toString(0));\r\n-\t\t\t\treturn;\r\n-\t\t\t}\r\n+\t\t\tresp = api.ascan.scan(apikey, target, \"True\", \"False\", null, null, null);\r\n+\r\n+\t\t\t// The scan now returns a scan id to support concurrent scanning\r\n+\t\t\tscanid = ((ApiResponseElement)resp).getValue();\r\n \t\t\t\r\n \t\t\t// Poll the status until it completes\r\n \t\t\twhile (true) {\r\n \t\t\t\tThread.sleep(5000);\r\n-\t\t\t\tprogress = Integer.parseInt(((ApiResponseElement)api.ascan.status(\"\")).getValue());\r\n+\t\t\t\tprogress = Integer.parseInt(((ApiResponseElement)api.ascan.status(scanid)).getValue());\r\n \t\t\t\tSystem.out.println(\"Active Scan progress : \" + progress + \"%\");\r\n \t\t\t\tif (progress >= 100) {\r\n \t\t\t\t\tbreak;\r",
      "parent_sha": "31af8a58c80b1aaf68398c50e91641f833d89d40"
    }
  },
  {
    "oid": "20068827aecf8e1b1dd175b4b04ae7fbc93ef91e",
    "message": "Issue 517 - Add-ons are added to \"main\" class loader when installed\n\nChanged to not add the add-on to the \"main\" class loader.",
    "date": "2013-02-14T03:49:33Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/20068827aecf8e1b1dd175b4b04ae7fbc93ef91e",
    "details": {
      "sha": "70e1cd0124476fe8c5323fc43297856f1ee44add",
      "filename": "src/org/zaproxy/zap/control/AddOnLoader.java",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/20068827aecf8e1b1dd175b4b04ae7fbc93ef91e/src%2Forg%2Fzaproxy%2Fzap%2Fcontrol%2FAddOnLoader.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/20068827aecf8e1b1dd175b4b04ae7fbc93ef91e/src%2Forg%2Fzaproxy%2Fzap%2Fcontrol%2FAddOnLoader.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fcontrol%2FAddOnLoader.java?ref=20068827aecf8e1b1dd175b4b04ae7fbc93ef91e",
      "patch": "@@ -175,9 +175,7 @@ public void addAddon(AddOn ao) {\n     \t\t\t\t\" Version=\" + Constant.PROGRAM_VERSION);\r\n     \t}\r\n     \tif (this.aoc.addAddOn(ao)) {\r\n-            try {\r\n                 addAddOnFile(ao);\r\n-            \tthis.addURL(ao.getFile().toURI().toURL());\r\n             \t\r\n             \tif (this.blockList.contains(ao.getId())) {\r\n             \t\t// Explicitly being added back, so remove from the block list\r\n@@ -228,12 +226,13 @@ public void addAddon(AddOn ao) {\n \t    \t\t\tList<String> fileNames = ao.getFiles();\r\n \r\n \t    \t\t\tif (fileNames != null && fileNames != null) {\r\n+\t    \t\t\t\tURLClassLoader addOnClassLoader = this.addOnLoaders.get(ao.getId());\r\n \t    \t\t\t\tfor (String name : fileNames) {\r\n \t\t\t\t\t\t\tFile outfile = null;\r\n \t    \t\t\t\t\tlogger.debug(\"Install file: \" + name);\r\n \t    \t\t\t\t\ttry {\r\n \t\t\t\t\t\t\t\toutfile = new File(Constant.getZapHome(), name);\r\n-\t\t\t\t\t\t\t\tInputStream in = ExtensionFactory.getAddOnLoader().getResourceAsStream(name);\r\n+\t\t\t\t\t\t\t\tInputStream in = addOnClassLoader.getResourceAsStream(name);\r\n \t\t\t\t\t\t\t\tif ( ! outfile.getParentFile().exists() && !outfile.getParentFile().mkdirs()) {\r\n \t\t    \t\t\t\t\t\tlogger.error(\"Failed to create directories for: \" + outfile.getAbsolutePath());\r\n \t\t\t\t\t\t\t\t\tcontinue;\r\n@@ -255,9 +254,6 @@ public void addAddon(AddOn ao) {\n \r\n         \t\t}\r\n \r\n-\t\t\t} catch (MalformedURLException e) {\r\n-\t    \t\tlogger.error(e.getMessage(), e);\r\n-\t\t\t}\r\n     \t}\r\n     }\r\n     \r",
      "parent_sha": "f8851f403ca71ba3b5f6f07a592f37e950c63fdd"
    }
  },
  {
    "oid": "2351f4cee9d4f142ef43f10949dfaeb403f904e7",
    "message": "Corrected another structure table defn",
    "date": "2015-10-19T12:31:52Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/2351f4cee9d4f142ef43f10949dfaeb403f904e7",
    "details": {
      "sha": "71464db38a374f0b06cd1546719e9d6e3c592975",
      "filename": "src/org/parosproxy/paros/db/paros/ParosTableStructure.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/2351f4cee9d4f142ef43f10949dfaeb403f904e7/src%2Forg%2Fparosproxy%2Fparos%2Fdb%2Fparos%2FParosTableStructure.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/2351f4cee9d4f142ef43f10949dfaeb403f904e7/src%2Forg%2Fparosproxy%2Fparos%2Fdb%2Fparos%2FParosTableStructure.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fdb%2Fparos%2FParosTableStructure.java?ref=2351f4cee9d4f142ef43f10949dfaeb403f904e7",
      "patch": "@@ -77,7 +77,7 @@ protected void reconnect(Connection conn) throws DatabaseException {\n \r\n \t\t\tpsFind\t= conn.prepareStatement(\"SELECT * FROM STRUCTURE WHERE SESSIONID = ? AND NAMEHASH = ? AND METHOD = ?\");\r\n \r\n-\t\t\tpsInsert = conn.prepareStatement(\"INSERT INTO STRUCTURE (SESSIONID, PARENTID, HISTORYID, NAME, NAMEHASH, URL) VALUES (?, ?, ?, ?, ?, ?)\");\r\n+\t\t\tpsInsert = conn.prepareStatement(\"INSERT INTO STRUCTURE (SESSIONID, PARENTID, HISTORYID, NAME, NAMEHASH, URL, METHOD) VALUES (?, ?, ?, ?, ?, ?, ?)\");\r\n \t\t\tpsGetIdLastInsert = conn.prepareCall(\"CALL IDENTITY();\");\r\n \r\n \t\t\tpsGetChildren = conn.prepareStatement(\"SELECT * FROM STRUCTURE WHERE SESSIONID = ? AND PARENTID = ?\");\r",
      "parent_sha": "56d2849606b49ae40205cb6c585422448221ffc4"
    }
  },
  {
    "oid": "9d3987a8fe6e61d50cc726533993b99fb8c5c06a",
    "message": "Issue 1092 - SearchThread - Do not get the IDs of discarded messages\n\nChanged the SearchThread to only get the IDs of the required types (TYPE_PROXIED, TYPE_ZAP_USER andTYPE_SPIDER).",
    "date": "2014-03-23T17:42:52Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/9d3987a8fe6e61d50cc726533993b99fb8c5c06a",
    "details": {
      "sha": "250687cd607d6ce427531a05733b4d0c3ee38f15",
      "filename": "src/org/zaproxy/zap/extension/search/SearchThread.java",
      "status": "modified",
      "additions": 4,
      "deletions": 9,
      "changes": 13,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/9d3987a8fe6e61d50cc726533993b99fb8c5c06a/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fsearch%2FSearchThread.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/9d3987a8fe6e61d50cc726533993b99fb8c5c06a/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fsearch%2FSearchThread.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fsearch%2FSearchThread.java?ref=9d3987a8fe6e61d50cc726533993b99fb8c5c06a",
      "patch": "@@ -26,7 +26,6 @@\n \n import org.apache.log4j.Logger;\n import org.parosproxy.paros.control.Control;\n-import org.parosproxy.paros.db.RecordHistory;\n import org.parosproxy.paros.model.HistoryReference;\n import org.parosproxy.paros.model.Model;\n import org.parosproxy.paros.model.Session;\n@@ -112,22 +111,19 @@ private void search() {\n         \t\treturn;\n         \t}\n \n-\t\t\tList<Integer> list = Model.getSingleton().getDb().getTableHistory().getHistoryIds(session.getSessionId());\n+\t\t\tList<Integer> list = Model.getSingleton().getDb().getTableHistory().getHistoryIdsOfHistType(session.getSessionId(),\n+\t\t\t\t\t\t\tHistoryReference.TYPE_PROXIED, HistoryReference.TYPE_ZAP_USER, HistoryReference.TYPE_SPIDER);\n \t\t\tint last = list.size();\n \t\t\tint currentRecordId = 0;\n \t\t\tfor (int index=0;index < last;index++){\n \t\t\t\tif (stopSearch) {\n \t\t\t\t\tbreak;\n \t\t\t\t}\n-\t\t\t    int v = list.get(index).intValue();\n+\t\t\t    int historyId = list.get(index).intValue();\n \t\t\t    try {\n-\t\t\t    \tRecordHistory hr = Model.getSingleton().getDb().getTableHistory().read(v);\n-\t\t\t        if (hr.getHistoryType() == HistoryReference.TYPE_PROXIED || \n-\t\t\t                hr.getHistoryType() == HistoryReference.TYPE_ZAP_USER || \n-\t\t\t        \t\thr.getHistoryType() == HistoryReference.TYPE_SPIDER) {\n \t\t\t            currentRecordId = index;\n \t\t\t        \t// Create the href to ensure the msg is set up correctly\n-\t\t\t        \tHistoryReference href = new HistoryReference(hr.getHistoryId());\n+\t\t\t        \tHistoryReference href = new HistoryReference(historyId);\n \t\t\t        \tHttpMessage message = href.getHttpMessage();\n \t\t\t        \tif (searchJustInScope && ! session.isInScope(message.getRequestHeader().getURI().toString())) {\n \t\t\t        \t\t// Not in scope, so ignore\n@@ -249,7 +245,6 @@ private void search() {\n \t\t\t\t\t            }\n \t\t\t\t            }\n \t\t\t\t        }\n-\t\t\t        }\n \t\t\t        \n \t\t\t    } catch (HttpMalformedHeaderException e1) {\n \t\t\t        log.error(e1.getMessage(), e1);",
      "parent_sha": "348a9b73d05f34ec760f5eaea5862c1ca95842da"
    }
  },
  {
    "oid": "5122eddabd0b5c89f2d868b5172d4b5220117d7f",
    "message": "Moved highlighter to extensions",
    "date": "2012-03-13T20:32:14Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/5122eddabd0b5c89f2d868b5172d4b5220117d7f",
    "details": {
      "sha": "b2c0da6b755c4ad80ab7ab47facf0576f572c3e2",
      "filename": "src/org/parosproxy/paros/model/OptionsParam.java",
      "status": "modified",
      "additions": 1,
      "deletions": 20,
      "changes": 21,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/5122eddabd0b5c89f2d868b5172d4b5220117d7f/src%2Forg%2Fparosproxy%2Fparos%2Fmodel%2FOptionsParam.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/5122eddabd0b5c89f2d868b5172d4b5220117d7f/src%2Forg%2Fparosproxy%2Fparos%2Fmodel%2FOptionsParam.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fmodel%2FOptionsParam.java?ref=5122eddabd0b5c89f2d868b5172d4b5220117d7f",
      "patch": "@@ -30,7 +30,6 @@\n import org.apache.commons.configuration.ConfigurationException;\r\n import org.parosproxy.paros.common.AbstractParam;\r\n import org.parosproxy.paros.core.proxy.ProxyParam;\r\n-import org.parosproxy.paros.extension.option.OptionsHighlight;\r\n import org.parosproxy.paros.extension.option.OptionsParamCertificate;\r\n import org.parosproxy.paros.extension.option.OptionsParamView;\r\n import org.parosproxy.paros.network.ConnectionParam;\r\n@@ -68,7 +67,6 @@ public class OptionsParam extends AbstractParam {\n \tprivate BruteForceParam bruteForceParam = new BruteForceParam();\r\n \tprivate OptionsParamExperimentalSliSupport experimentalFeatuesParam = new OptionsParamExperimentalSliSupport();\r\n \tprivate SessionParam sessionParam = new SessionParam();\r\n-\tprivate OptionsHighlight optionsHighlight = new OptionsHighlight();\r\n \r\n \tprivate Vector<AbstractParam> paramSetList = new Vector<AbstractParam>();\r\n \tprivate boolean gui = true;\r\n@@ -139,24 +137,8 @@ public void setCertificateParam(OptionsParamCertificate certificateParam) {\n     public OptionsParamCertificate getCertificateParam() {\r\n         return certificateParam;\r\n     }\r\n-\r\n-    \r\n-    /**\r\n-     * @param certificateParam The certificateParam to set.\r\n-     */\r\n-    public void setOptionsHighlight(OptionsHighlight optionsHighlight) {\r\n-        this.optionsHighlight = optionsHighlight;\r\n-    }\r\n-    \r\n-    /**\r\n-     * @return Returns the highlightParam.\r\n-     */\r\n-    public OptionsHighlight getOptionsHighlight() {\r\n-        return optionsHighlight;\r\n-    }\r\n-\r\n     \r\n-    public void addParamSet(AbstractParam paramSet) {\r\n+     public void addParamSet(AbstractParam paramSet) {\r\n         paramSetList.add(paramSet);\r\n \t    paramSet.load(getConfig());\r\n     }\r\n@@ -194,7 +176,6 @@ protected void parse() {\n \t\tgetBruteForceParam().load(getConfig());\r\n \t\tgetExperimentalFeaturesParam().load(getConfig());\r\n \t\tgetSessionParam().load(getConfig());\r\n-\t\tgetOptionsHighlight().load(getConfig());\r\n \t\t\r\n \t\tString userDir = null;\r\n \t\ttry {\r",
      "parent_sha": "911f6ca5c83aabba647b508d6bc5c55ba5f65dd0"
    }
  },
  {
    "oid": "d9613e099168c543451fc4efbb6c8813960619e4",
    "message": "Changed ConnectionParam to keep trying loading other authentication credentials even if one is wrong.",
    "date": "2014-03-23T16:54:44Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/d9613e099168c543451fc4efbb6c8813960619e4",
    "details": {
      "sha": "17039165854ab5f44d019b161a8f249dbb2c7a59",
      "filename": "src/org/parosproxy/paros/network/ConnectionParam.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/d9613e099168c543451fc4efbb6c8813960619e4/src%2Forg%2Fparosproxy%2Fparos%2Fnetwork%2FConnectionParam.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/d9613e099168c543451fc4efbb6c8813960619e4/src%2Forg%2Fparosproxy%2Fparos%2Fnetwork%2FConnectionParam.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fnetwork%2FConnectionParam.java?ref=d9613e099168c543451fc4efbb6c8813960619e4",
      "patch": "@@ -360,7 +360,7 @@ private void parseAuthentication() {\n                 \r\n                 String host = sub.getString(AUTH_HOST_NAME_KEY, \"\");\r\n                 if (\"\".equals(host)) {\r\n-                    break;\r\n+                    continue;\r\n                 }\r\n                 \r\n                 HostAuthentication auth = new HostAuthentication(\r",
      "parent_sha": "a399883e14fbaa8dca3f496077fa3a78da18bca5"
    }
  },
  {
    "oid": "cde40d60db55ec7edc699a98a119b33920c21f92",
    "message": "Fix NPE when removing scripts with unsaved script\n\nChange ExtensionScript to check if the script was already saved (that\nis, has a non-null File) before checking if the script is saved on the\ndirectory whose scripts are being removed.",
    "date": "2018-03-22T22:57:11Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/cde40d60db55ec7edc699a98a119b33920c21f92",
    "details": {
      "sha": "12a261b9758a8dfc3740cb22a226be1602174be5",
      "filename": "src/org/zaproxy/zap/extension/script/ExtensionScript.java",
      "status": "modified",
      "additions": 16,
      "deletions": 2,
      "changes": 18,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/cde40d60db55ec7edc699a98a119b33920c21f92/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fscript%2FExtensionScript.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/cde40d60db55ec7edc699a98a119b33920c21f92/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fscript%2FExtensionScript.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fscript%2FExtensionScript.java?ref=cde40d60db55ec7edc699a98a119b33920c21f92",
      "patch": "@@ -851,13 +851,13 @@ public int removeScriptsFromDir (File dir) {\n \t\t\t\t// Loop through all of the known scripts and templates \r\n \t\t\t\t// removing any from this directory\r\n \t\t\t\tfor (ScriptWrapper sw : this.getScripts(type)) {\r\n-\t\t\t\t\tif (sw.getFile().getParentFile().equals(locDir)) {\r\n+\t\t\t\t\tif (isSavedInDir(sw, locDir)) {\r\n \t\t\t\t\t\tthis.removeScript(sw);\r\n \t\t\t\t\t\tremovedScripts++;\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t\tfor (ScriptWrapper sw : this.getTemplates(type)) {\r\n-\t\t\t\t\tif (sw.getFile().getParentFile().equals(locDir)) {\r\n+\t\t\t\t\tif (isSavedInDir(sw, locDir)) {\r\n \t\t\t\t\t\tthis.removeTemplate(sw);\r\n \t\t\t\t\t\tremovedScripts++;\r\n \t\t\t\t\t}\r\n@@ -867,6 +867,20 @@ public int removeScriptsFromDir (File dir) {\n \t\treturn removedScripts;\r\n \t}\r\n \t\r\n+\t/**\r\n+\t * Tells whether or not the given script is saved in the given directory.\r\n+\t *\r\n+\t * @param scriptWrapper the script to check.\r\n+\t * @param directory the directory where to check.\r\n+\t * @return {@code true} if the script is saved in the given directory, {@code false} otherwise.\r\n+\t */\r\n+\tprivate static boolean isSavedInDir(ScriptWrapper scriptWrapper, File directory) {\r\n+\t\tFile file = scriptWrapper.getFile();\r\n+\t\tif (file == null) {\r\n+\t\t\treturn false;\r\n+\t\t}\r\n+\t\treturn file.getParentFile().equals(directory);\r\n+\t}\r\n \r\n \tpublic int getScriptCount(File dir) {\r\n \t\tint scripts = 0;\r",
      "parent_sha": "1f444a3887d984019ffcf7d8cc6ba22217f0877b"
    }
  },
  {
    "oid": "eb74a7aab633722358fc4f15a0d487ac269a581c",
    "message": "Issue 1132:\tHttpSender ignores the \"Send single cookie request header\"\noption",
    "date": "2014-03-29T15:06:14Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/eb74a7aab633722358fc4f15a0d487ac269a581c",
    "details": {
      "sha": "a30f6bbb2652307a3b2e37ee13e3ca471d9c96f2",
      "filename": "src/org/parosproxy/paros/network/HttpSender.java",
      "status": "modified",
      "additions": 9,
      "deletions": 5,
      "changes": 14,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/eb74a7aab633722358fc4f15a0d487ac269a581c/src%2Forg%2Fparosproxy%2Fparos%2Fnetwork%2FHttpSender.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/eb74a7aab633722358fc4f15a0d487ac269a581c/src%2Forg%2Fparosproxy%2Fparos%2Fnetwork%2FHttpSender.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fnetwork%2FHttpSender.java?ref=eb74a7aab633722358fc4f15a0d487ac269a581c",
      "patch": "@@ -45,6 +45,7 @@\n // ZAP: 2014/03/23 Issue 412: Enable unsafe SSL/TLS renegotiation option not saved\r\n // ZAP: 2014/03/23 Issue 416: Normalise how multiple related options are managed throughout ZAP\r\n // and enhance the usability of some options\r\n+// ZAP: 2014/03/29 Issue 1132: \tHttpSender ignores the \"Send single cookie request header\" option\r\n \r\n package org.parosproxy.paros.network;\r\n \r\n@@ -137,6 +138,14 @@ public HttpSender(ConnectionParam connectionParam, boolean allowState, int initi\n \r\n \t\tclient = createHttpClient();\r\n \t\tclientViaProxy = createHttpClientViaProxy();\r\n+\t\t\r\n+\t\t// Set how cookie headers are sent no matter of the \"allowState\", in case a state is forced by\r\n+\t\t// other extensions (e.g. Authentication)\r\n+\t\tfinal boolean singleCookieRequestHeader = param.isSingleCookieRequestHeader();\r\n+\t\tclient.getParams().setBooleanParameter(HttpMethodParams.SINGLE_COOKIE_HEADER,\r\n+\t\t\t\tsingleCookieRequestHeader);\r\n+\t\tclientViaProxy.getParams().setBooleanParameter(HttpMethodParams.SINGLE_COOKIE_HEADER,\r\n+\t\t\t\tsingleCookieRequestHeader);\r\n \r\n \t\tif (this.allowState) {\r\n \t\t\tcheckState();\r\n@@ -155,11 +164,6 @@ private void checkState() {\n \t\t\tclientViaProxy.setState(param.getHttpState());\r\n \t\t\tclient.getParams().setCookiePolicy(CookiePolicy.BROWSER_COMPATIBILITY);\r\n \t\t\tclientViaProxy.getParams().setCookiePolicy(CookiePolicy.BROWSER_COMPATIBILITY);\r\n-\t\t\tfinal boolean singleCookieRequestHeader = param.isSingleCookieRequestHeader();\r\n-\t\t\tclient.getParams().setBooleanParameter(HttpMethodParams.SINGLE_COOKIE_HEADER,\r\n-\t\t\t\t\tsingleCookieRequestHeader);\r\n-\t\t\tclientViaProxy.getParams().setBooleanParameter(HttpMethodParams.SINGLE_COOKIE_HEADER,\r\n-\t\t\t\t\tsingleCookieRequestHeader);\r\n \t\t} else {\r\n \t\t\tclient.getParams().setCookiePolicy(CookiePolicy.IGNORE_COOKIES);\r\n \t\t\tclientViaProxy.getParams().setCookiePolicy(CookiePolicy.IGNORE_COOKIES);\r",
      "parent_sha": "bfc4cf3909805e874bdfaedad7deec8d51afde3a"
    }
  },
  {
    "oid": "37555de8d7c03c265170146a318094d774fbcedf",
    "message": "A couple of refactorings and changes to User to accommodate tests.",
    "date": "2013-09-21T22:33:05Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/37555de8d7c03c265170146a318094d774fbcedf",
    "details": {
      "sha": "7a35f035f9c204ab319697d95ba07a861e26cb1a",
      "filename": "src/org/zaproxy/zap/users/User.java",
      "status": "modified",
      "additions": 103,
      "deletions": 32,
      "changes": 135,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/37555de8d7c03c265170146a318094d774fbcedf/src%2Forg%2Fzaproxy%2Fzap%2Fusers%2FUser.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/37555de8d7c03c265170146a318094d774fbcedf/src%2Forg%2Fzaproxy%2Fzap%2Fusers%2FUser.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fusers%2FUser.java?ref=37555de8d7c03c265170146a318094d774fbcedf",
      "patch": "@@ -35,13 +35,16 @@\n import org.zaproxy.zap.session.WebSession;\n import org.zaproxy.zap.utils.Enableable;\n \n+// TODO: Auto-generated Javadoc\n /**\n  * ZAP representation of a web application user.\n  */\n public class User extends Enableable {\n \n+\t/** The Constant log. */\n \tprivate static final Logger log = Logger.getLogger(User.class);\n \n+\t/** The id source. */\n \tprivate static int ID_SOURCE = 0;\n \n \t/** The Constant FIELD_SEPARATOR used for separating Users's field during serialization. */\n@@ -64,6 +67,7 @@ public class User extends Enableable {\n \t/** The authenticated session. */\n \tprivate WebSession authenticatedSession;\n \n+\t/** The user http state. */\n \tprivate HttpState userHttpState;\n \n \t/** The authentication credentials that can be used for configuring the user. */\n@@ -72,21 +76,37 @@ public class User extends Enableable {\n \t/** The extension auth. */\n \tprivate static ExtensionAuthentication extensionAuth;\n \n+\t/** The last successful auth time. */\n \tprivate long lastSuccessfulAuthTime;\n \n \t/** The context. */\n \tprivate Context context;\n \n+\t/**\n+\t * Instantiates a new user.\n+\t * \n+\t * @param contextId the context id\n+\t * @param name the name\n+\t */\n \tpublic User(int contextId, String name) {\n \t\tsuper();\n \t\tthis.id = ID_SOURCE++;\n \t\tthis.contextId = contextId;\n \t\tthis.name = name;\n \t}\n \n+\t/**\n+\t * Instantiates a new user.\n+\t * \n+\t * @param contextId the context id\n+\t * @param name the name\n+\t * @param id the id\n+\t */\n \tpublic User(int contextId, String name, int id) {\n \t\tsuper();\n \t\tthis.id = id;\n+\t\tif (this.id >= ID_SOURCE)\n+\t\t\tID_SOURCE = this.id + 1;\n \t\tthis.contextId = contextId;\n \t\tthis.name = name;\n \t}\n@@ -109,6 +129,11 @@ public int getContextId() {\n \t\treturn contextId;\n \t}\n \n+\t/*\n+\t * (non-Javadoc)\n+\t * \n+\t * @see java.lang.Object#toString()\n+\t */\n \t@Override\n \tpublic String toString() {\n \t\treturn \"User [id=\" + id + \", name=\" + name + \", contextId=\" + contextId + \", enabled=\" + isEnabled()\n@@ -120,7 +145,7 @@ public String toString() {\n \t * \n \t * @return the context\n \t */\n-\tprivate Context getContext() {\n+\tprotected Context getContext() {\n \t\tif (context == null) {\n \t\t\tcontext = Model.getSingleton().getSession().getContext(this.contextId);\n \t\t}\n@@ -146,9 +171,9 @@ public void processMessageToMatchUser(HttpMessage message) {\n \t\t// If the user is not yet authenticated, authenticate now\n \t\t// Make sure there are no simultaneous authentications for the same user\n \t\tsynchronized (this) {\n-\t\t\tif (!this.hasAuthenticatedSession()) {\n+\t\t\tif (this.requiresAuthentication()) {\n \t\t\t\tthis.authenticate();\n-\t\t\t\tif (!this.hasAuthenticatedSession()) {\n+\t\t\t\tif (!this.requiresAuthentication()) {\n \t\t\t\t\tlog.info(\"Authentication failed for user: \" + name);\n \t\t\t\t\treturn;\n \t\t\t\t}\n@@ -159,6 +184,11 @@ public void processMessageToMatchUser(HttpMessage message) {\n \t\tgetContext().getSessionManagementMethod().processMessageToMatchSession(message, authenticatedSession);\n \t}\n \n+\t/**\n+\t * Gets the user http state.\n+\t * \n+\t * @return the user http state\n+\t */\n \tpublic HttpState getUserHttpState() {\n \t\tif (userHttpState == null) {\n \t\t\t// TODO: Make sure this gets copied on duplicate\n@@ -187,25 +217,48 @@ public void setAuthenticationCredentials(AuthenticationCredentials authenticatio\n \t}\n \n \t/**\n-\t * Checks if the user has a corresponding authenticated session\n+\t * Checks if an authentication is needed and will be performed at the next call to\n+\t * {@link #processMessageToMatchUser(HttpMessage)}.\n \t * \n-\t * @return true, if is authenticated\n+\t * @return true, if requires authentication\n \t */\n-\tpublic boolean hasAuthenticatedSession() {\n-\t\treturn authenticatedSession != null;\n+\tpublic boolean requiresAuthentication() {\n+\t\treturn authenticatedSession == null;\n \t}\n \n \t/**\n \t * Resets the existing authenticated session, causing subsequent calls to\n \t * {@link #processMessageToMatchUser(HttpMessage)} to reauthenticate.\n+\t * \n+\t * @param unauthenticatedMessage the unauthenticated message\n+\t * \n \t */\n \tpublic void queueAuthentication(HttpMessage unauthenticatedMessage) {\n \t\tsynchronized (this) {\n-\t\t\tif (unauthenticatedMessage.getTimeSentMillis() >= lastSuccessfulAuthTime)\n+\t\t\tif (unauthenticatedMessage.getTimeSentMillis() >= getLastSuccessfulAuthTime())\n \t\t\t\tauthenticatedSession = null;\n \t\t}\n \t}\n \n+\t/**\n+\t * Sets the authenticated session.\n+\t * \n+\t * @param session the new authenticated session\n+\t */\n+\tprotected void setAuthenticatedSession(WebSession session) {\n+\t\t// NOTE: Used in testing\n+\t\tthis.authenticatedSession = session;\n+\t}\n+\t\n+\t/**\n+\t * Gets the last successful auth time.\n+\t *\n+\t * @param lastSuccessfulAuthTime the new last successful auth time\n+\t */\n+\tprotected long getLastSuccessfulAuthTime() {\n+\t\treturn lastSuccessfulAuthTime;\n+\t}\n+\n \t/**\n \t * Checks if the response received by the Http Message corresponds to this user.\n \t * \n@@ -276,6 +329,18 @@ public static String encode(User user) {\n \t * @return the user\n \t */\n \tpublic static User decode(String encodedString) {\n+\t\t// Added proxy call to help in testing\n+\t\treturn decode(encodedString, User.getAuthenticationExtension());\n+\t}\n+\n+\t/**\n+\t * Helper method for decoding an user from an encoded string. See {@link #decode(String)}.\n+\t * \n+\t * @param encodedString the encoded string\n+\t * @param authenticationExtension the authentication extension\n+\t * @return the user\n+\t */\n+\tprotected static User decode(String encodedString, ExtensionAuthentication authenticationExtension) {\n \t\tString[] pieces = encodedString.split(FIELD_SEPARATOR);\n \t\tUser user = null;\n \t\ttry {\n@@ -286,12 +351,13 @@ public static User decode(String encodedString) {\n \t\t\tboolean enabled = pieces[2].equals(\"true\");\n \t\t\tString name = new String(Base64.decodeBase64(pieces[3]));\n \t\t\tint authTypeId = Integer.parseInt(pieces[4]);\n-\t\t\tAuthenticationCredentials cred = getAuthenticationExtension()\n+\t\t\tuser = new User(contextId, name, id);\n+\t\t\tuser.setEnabled(enabled);\n+\n+\t\t\tAuthenticationCredentials cred = authenticationExtension\n \t\t\t\t\t.getAuthenticationMethodTypeForIdentifier(authTypeId).createAuthenticationCredentials();\n \t\t\tcred.decode(pieces[5]);\n-\t\t\tuser = new User(contextId, name, id);\n \t\t\tuser.setAuthenticationCredentials(cred);\n-\t\t\tuser.setEnabled(enabled);\n \t\t} catch (Exception ex) {\n \t\t\tlog.error(\"An error occured while decoding user from: \" + encodedString, ex);\n \t\t\treturn null;\n@@ -301,28 +367,33 @@ public static User decode(String encodedString) {\n \t\treturn user;\n \t}\n \n-\t@Override\n-\tpublic int hashCode() {\n-\t\tfinal int prime = 31;\n-\t\tint result = super.hashCode();\n-\t\tresult = prime * result + id;\n-\t\treturn result;\n-\t}\n-\n-\t@Override\n-\tpublic boolean equals(Object obj) {\n-\t\tif (this == obj)\n-\t\t\treturn true;\n-\t\tif (!super.equals(obj))\n-\t\t\treturn false;\n-\t\tif (getClass() != obj.getClass())\n-\t\t\treturn false;\n-\t\tUser other = (User) obj;\n-\t\tif (id != other.id)\n-\t\t\treturn false;\n-\t\treturn true;\n-\t}\n+\t// @Override\n+\t// public int hashCode() {\n+\t// final int prime = 31;\n+\t// int result = super.hashCode();\n+\t// result = prime * result + id;\n+\t// return result;\n+\t// }\n+\n+\t// @Override\n+\t// public boolean equals(Object obj) {\n+\t// if (this == obj)\n+\t// return true;\n+\t// if (!super.equals(obj))\n+\t// return false;\n+\t// if (getClass() != obj.getClass())\n+\t// return false;\n+\t// User other = (User) obj;\n+\t// if (id != other.id)\n+\t// return false;\n+\t// return true;\n+\t// }\n \n+\t/**\n+\t * Sets the name.\n+\t * \n+\t * @param name the new name\n+\t */\n \tpublic void setName(String name) {\n \t\tthis.name = name;\n \t}",
      "parent_sha": "4f901b30ad8adb02a638ce2cd6c10d4d76381662"
    }
  },
  {
    "oid": "64037bd903932caec976c1bbdd80e88219e3e6ca",
    "message": "Correct enabled state of Input Vectors check boxes\n\nChange OptionsVariantPanel to not enable the check boxes of Enable\nScript Input Vectors, Add URL Query Parameter, and All Requests if all\nits requirements are not met, for example, if the ExtensionScript is not\nenabled or the corresponding parent options are not enabled/selected.",
    "date": "2018-09-28T21:54:15Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/64037bd903932caec976c1bbdd80e88219e3e6ca",
    "details": {
      "sha": "74e44eab6da15340d8c99bc34f991875d5f937cd",
      "filename": "src/org/zaproxy/zap/extension/ascan/OptionsVariantPanel.java",
      "status": "modified",
      "additions": 22,
      "deletions": 7,
      "changes": 29,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/64037bd903932caec976c1bbdd80e88219e3e6ca/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fascan%2FOptionsVariantPanel.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/64037bd903932caec976c1bbdd80e88219e3e6ca/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fascan%2FOptionsVariantPanel.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fascan%2FOptionsVariantPanel.java?ref=64037bd903932caec976c1bbdd80e88219e3e6ca",
      "patch": "@@ -50,6 +50,16 @@\n public class OptionsVariantPanel extends AbstractParamPanel {\r\n \r\n     private static final long serialVersionUID = 1L;\r\n+\r\n+    /**\r\n+     * Flag that indicates whether or not the {@code ExtensionScript} is enabled.\r\n+     * <p>\r\n+     * Lazily initialised.\r\n+     * \r\n+     * @see #isExtensionScriptEnabled()\r\n+     */\r\n+    private static Boolean extensionScriptEnabled;\r\n+\r\n     private JPanel panelVariant = null;\r\n     \r\n     // Checkbox for Target definitions\r\n@@ -202,12 +212,12 @@ public void initParam(ScannerParam param) {\n         int targets = param.getTargetParamsInjectable();\r\n         this.getChkInjectableQueryString().setSelected((targets & ScannerParam.TARGET_QUERYSTRING) != 0);\r\n         this.getChkAddQueryParam().setSelected(param.isAddQueryParam());\r\n-        this.getChkAddQueryParam().setEnabled(getChkInjectableQueryString().isSelected());\r\n+        this.getChkAddQueryParam().setEnabled(getChkInjectableQueryString().isEnabled() && getChkInjectableQueryString().isSelected());\r\n         this.getChkInjectableUrlPath().setSelected((targets & ScannerParam.TARGET_URLPATH) != 0);\r\n         this.getChkInjectablePostData().setSelected((targets & ScannerParam.TARGET_POSTDATA) != 0);\r\n         this.getChkInjectableHeaders().setSelected((targets & ScannerParam.TARGET_HTTPHEADERS) != 0);\r\n         this.getChkInjectableHeadersAllRequests().setSelected(param.isScanHeadersAllRequests());\r\n-        this.getChkInjectableHeadersAllRequests().setEnabled(getChkInjectableHeaders().isSelected());\r\n+        this.getChkInjectableHeadersAllRequests().setEnabled(getChkInjectableHeaders().isEnabled() && getChkInjectableHeaders().isSelected());\r\n         this.getChkInjectableCookie().setSelected((targets & ScannerParam.TARGET_COOKIE) != 0);\r\n \r\n         int rpcEnabled = param.getTargetParamsEnabledRPC();\r\n@@ -218,9 +228,6 @@ public void initParam(ScannerParam param) {\n         this.getChkRPCoData().setSelected((rpcEnabled & ScannerParam.RPC_ODATA) != 0);\r\n         this.getChkRPCDWR().setSelected((rpcEnabled & ScannerParam.RPC_DWR) != 0);\r\n         this.getChkRPCCustom().setSelected((rpcEnabled & ScannerParam.RPC_CUSTOM) != 0);\r\n-        \r\n-        ExtensionScript extension = Control.getSingleton().getExtensionLoader().getExtension(ExtensionScript.class);\r\n-        this.getChkRPCCustom().setEnabled((extension != null));\r\n \r\n         this.getExcludedParameterModel().setTokens(param.getExcludedParamList());\r\n     }\r\n@@ -308,7 +315,7 @@ public void saveParam(ScannerParam param) {\n     public void setAllInjectableAndRPC(boolean enabled) {\r\n         \r\n         this.getChkInjectableQueryString().setEnabled(enabled);\r\n-        this.getChkAddQueryParam().setEnabled(enabled);\r\n+        this.getChkAddQueryParam().setEnabled(enabled && getChkInjectableQueryString().isSelected());\r\n         this.getChkInjectableUrlPath().setEnabled(enabled);\r\n         this.getChkInjectablePostData().setEnabled(enabled);\r\n         this.getChkInjectableHeaders().setEnabled(enabled);\r\n@@ -321,7 +328,7 @@ public void setAllInjectableAndRPC(boolean enabled) {\n         this.getChkRPCGWT().setEnabled(enabled);\r\n         this.getChkRPCoData().setEnabled(enabled);\r\n         this.getChkRPCDWR().setEnabled(enabled);\r\n-        this.getChkRPCCustom().setEnabled(enabled);\r\n+        this.getChkRPCCustom().setEnabled(enabled && isExtensionScriptEnabled());\r\n     }\r\n     \r\n     /**\r\n@@ -464,10 +471,18 @@ private JCheckBox getChkRPCCustom() {\n         if (chkRPCCustom == null) {\r\n             chkRPCCustom = new JCheckBox();\r\n             chkRPCCustom.setText(Constant.messages.getString(\"variant.options.rpc.custom.label\"));\r\n+            chkRPCCustom.setEnabled(isExtensionScriptEnabled());\r\n         }\r\n         return chkRPCCustom;\r\n     }\r\n \r\n+    private static boolean isExtensionScriptEnabled() {\r\n+        if (extensionScriptEnabled == null) {\r\n+            extensionScriptEnabled = Control.getSingleton().getExtensionLoader().getExtension(ExtensionScript.class) != null;\r\n+        }\r\n+        return extensionScriptEnabled;\r\n+    }\r\n+\r\n     private static class ExcludedParameterPanel extends AbstractMultipleOptionsBaseTablePanel<ScannerParamFilter> {\r\n \r\n         private static final long serialVersionUID = 1L;\r",
      "parent_sha": "ad1a3a59bfc0acc01f9cca6639e5932e25a38195"
    }
  },
  {
    "oid": "d7e8fd70cb581caeba83b0f1d017de8f6681c61b",
    "message": "Correctly check for add-on updates on dep calc\n\nChange AddOnDependencyChecker to correct the check for newer versions of\nan add-on when calculating the dependencies (also, transitive) of the\nadd-on that's being installed or updated.",
    "date": "2017-05-29T21:07:52Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/d7e8fd70cb581caeba83b0f1d017de8f6681c61b",
    "details": {
      "sha": "ce431b71bbbf040047d828ce6c4c4a79af70dece",
      "filename": "src/org/zaproxy/zap/extension/autoupdate/AddOnDependencyChecker.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/d7e8fd70cb581caeba83b0f1d017de8f6681c61b/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fautoupdate%2FAddOnDependencyChecker.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/d7e8fd70cb581caeba83b0f1d017de8f6681c61b/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fautoupdate%2FAddOnDependencyChecker.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fautoupdate%2FAddOnDependencyChecker.java?ref=d7e8fd70cb581caeba83b0f1d017de8f6681c61b",
      "patch": "@@ -129,7 +129,7 @@ private boolean addDependencies(\n                 if (AddOn.InstallationStatus.AVAILABLE == availableAddOns.getAddOn(dep.getId()).getInstallationStatus()) {\n                     installs.add(dep);\n                 }\n-            } else if (!addOn.dependsOn(installed)) {\n+            } else if (dep.isUpdateTo(installed)) {\n                 if (AddOn.InstallationStatus.AVAILABLE == availableAddOns.getAddOn(dep.getId()).getInstallationStatus()) {\n                     oldVersions.add(installed);\n                     newVersions.add(dep);",
      "parent_sha": "16b2d1e04f18b98b1e9a00bd137a9e2ccbc0cdd3"
    }
  },
  {
    "oid": "30eb6ebfba3cb7565e66cdf90e45d5c34ea1ff05",
    "message": "Set installation status to marketplace add-ons\n\nChange ExtensionAutoUpdate to set the installation status to add-ons of\nmarketplace, otherwise they might be incorrectly identified as available\nto install when they are already installed (they were previously being\nmarked as installed only after being installed from the marketplace).",
    "date": "2017-05-29T21:08:12Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/30eb6ebfba3cb7565e66cdf90e45d5c34ea1ff05",
    "details": {
      "sha": "332c7ce02bb04a5897db27b0296b604a2d6a348b",
      "filename": "src/org/zaproxy/zap/extension/autoupdate/ExtensionAutoUpdate.java",
      "status": "modified",
      "additions": 11,
      "deletions": 3,
      "changes": 14,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/30eb6ebfba3cb7565e66cdf90e45d5c34ea1ff05/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fautoupdate%2FExtensionAutoUpdate.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/30eb6ebfba3cb7565e66cdf90e45d5c34ea1ff05/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fautoupdate%2FExtensionAutoUpdate.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fautoupdate%2FExtensionAutoUpdate.java?ref=30eb6ebfba3cb7565e66cdf90e45d5c34ea1ff05",
      "patch": "@@ -985,9 +985,17 @@ public void run() {\n \t\t\t\t\t\t\t\tlogger.debug(\"Failed to access \" + longUrl, e2);\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n-\t\t\t    \t\tif (callback != null && latestVersionInfo != null) {\n-\t\t\t\t\t\t\tlogger.debug(\"Calling callback with  \" + latestVersionInfo);\n-\t\t\t    \t\t\tcallback.gotLatestData(latestVersionInfo);\n+\t\t\t\t\t\tif (latestVersionInfo != null) {\n+\t\t\t\t\t\t\tfor (AddOn addOn : latestVersionInfo.getAddOns()) {\n+\t\t\t\t\t\t\t\tAddOn localAddOn = localVersionInfo.getAddOn(addOn.getId());\n+\t\t\t\t\t\t\t\tif (localAddOn != null && !addOn.isUpdateTo(localAddOn)) {\n+\t\t\t\t\t\t\t\t\taddOn.setInstallationStatus(localAddOn.getInstallationStatus());\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tif (callback != null) {\n+\t\t\t\t\t\t\t\tlogger.debug(\"Calling callback with  \" + latestVersionInfo);\n+\t\t\t\t\t\t\t\tcallback.gotLatestData(latestVersionInfo);\n+\t\t\t\t\t\t\t}\n \t\t\t    \t\t}\n \t\t\t\t\t\tlogger.debug(\"Done\");\n \t    \t\t\t}",
      "parent_sha": "16b2d1e04f18b98b1e9a00bd137a9e2ccbc0cdd3"
    }
  },
  {
    "oid": "82e34240915cc0c7c5e0b70f6455084eb5f81f1d",
    "message": "ScanProgressDialog - Set fewer elements with hardcoded colors/attributes\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>",
    "date": "2020-10-28T15:26:09Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/82e34240915cc0c7c5e0b70f6455084eb5f81f1d",
    "details": {
      "sha": "cc3233bb29115ae7d9b9f5164aad71ceaa25f5a4",
      "filename": "zap/src/main/java/org/zaproxy/zap/extension/ascan/ScanProgressDialog.java",
      "status": "modified",
      "additions": 14,
      "deletions": 33,
      "changes": 47,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/82e34240915cc0c7c5e0b70f6455084eb5f81f1d/zap%2Fsrc%2Fmain%2Fjava%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fascan%2FScanProgressDialog.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/82e34240915cc0c7c5e0b70f6455084eb5f81f1d/zap%2Fsrc%2Fmain%2Fjava%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fascan%2FScanProgressDialog.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/zap%2Fsrc%2Fmain%2Fjava%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fascan%2FScanProgressDialog.java?ref=82e34240915cc0c7c5e0b70f6455084eb5f81f1d",
      "patch": "@@ -36,20 +36,16 @@\n import java.awt.event.WindowEvent;\n import java.util.ArrayList;\n import java.util.List;\n-import javax.swing.Box;\n import javax.swing.JButton;\n import javax.swing.JComboBox;\n-import javax.swing.JComponent;\n import javax.swing.JLabel;\n import javax.swing.JPanel;\n import javax.swing.JProgressBar;\n import javax.swing.JScrollPane;\n import javax.swing.JTabbedPane;\n import javax.swing.JTable;\n-import javax.swing.LookAndFeel;\n import javax.swing.SwingUtilities;\n import javax.swing.table.DefaultTableCellRenderer;\n-import javax.swing.table.TableCellRenderer;\n import javax.swing.table.TableModel;\n import org.apache.log4j.Logger;\n import org.jdesktop.swingx.plaf.basic.core.BasicTransferable;\n@@ -84,11 +80,6 @@ public class ScanProgressDialog extends AbstractDialog {\n     private static final long serialVersionUID = 1L;\n     private static Logger log = Logger.getLogger(ScanProgressDialog.class);\n \n-    private transient Color JTABLE_ALTERNATE_BACKGROUND =\n-            (Color)\n-                    LookAndFeel.getDesktopPropertyValue(\n-                            \"Table.alternateRowColor\", new Color(0xf2f2f2));\n-\n     private ExtensionActiveScan extension;\n     private JScrollPane jScrollPane;\n     private JTable table;\n@@ -533,7 +524,9 @@ public void actionPerformed(ActionEvent e) {\n     }\n \n     /** Custom Renderer for the progress bar plugin column */\n-    private class ScanProgressBarRenderer implements TableCellRenderer {\n+    private static class ScanProgressBarRenderer extends DefaultTableCellRenderer {\n+\n+        private static final long serialVersionUID = 1L;\n \n         @Override\n         public Component getTableCellRendererComponent(\n@@ -543,29 +536,23 @@ public Component getTableCellRendererComponent(\n                 boolean hasFocus,\n                 int row,\n                 int column) {\n-            JComponent result;\n             if (value != null) {\n                 ScanProgressItem item = (ScanProgressItem) value;\n                 JProgressBar bar = new JProgressBar();\n                 bar.setMaximum(100);\n \n                 bar.setValue(item.getProgressPercentage());\n-                result = bar;\n-\n-            } else {\n-                result = (JComponent) Box.createGlue();\n+                return bar;\n             }\n-\n-            // Set all general configurations\n-            result.setOpaque(true);\n-            result.setBackground(JTABLE_ALTERNATE_BACKGROUND);\n-\n-            return result;\n+            return super.getTableCellRendererComponent(\n+                    table, value, isSelected, hasFocus, row, column);\n         }\n     }\n \n     /** Custom Renderer for the actions column (skipping) */\n-    private class ScanProgressActionRenderer implements TableCellRenderer {\n+    private class ScanProgressActionRenderer extends DefaultTableCellRenderer {\n+\n+        private static final long serialVersionUID = 1L;\n \n         @Override\n         public Component getTableCellRendererComponent(\n@@ -575,7 +562,7 @@ public Component getTableCellRendererComponent(\n                 boolean hasFocus,\n                 int row,\n                 int column) {\n-            JComponent result;\n+            super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);\n             if (value != null) {\n                 ScanProgressActionIcon action = (ScanProgressActionIcon) value;\n                 if (action == model.getFocusedAction()) {\n@@ -585,17 +572,11 @@ public Component getTableCellRendererComponent(\n                     action.setNormal();\n                 }\n \n-                result = action;\n-\n-            } else {\n-                result = (JComponent) Box.createGlue();\n+                action.setOpaque(true);\n+                action.setBackground(getBackground());\n+                return action;\n             }\n-\n-            // Set all general configurations\n-            result.setOpaque(true);\n-            result.setBackground(JTABLE_ALTERNATE_BACKGROUND);\n-\n-            return result;\n+            return this;\n         }\n     }\n ",
      "parent_sha": "9ede365caca56bc15b7b88b941e36e8711373e0b"
    }
  },
  {
    "oid": "ac5325b82b6a91f5ff7b5ba601cfdc5ab79385ec",
    "message": "Added way to enable/disable the Config button in the Summary and Config\nPanel.",
    "date": "2013-08-05T18:07:23Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/ac5325b82b6a91f5ff7b5ba601cfdc5ab79385ec",
    "details": {
      "sha": "355ff95830fce4f544f949d99cbfac0d229e08af",
      "filename": "src/org/zaproxy/zap/view/SummaryAndConfigPanel.java",
      "status": "modified",
      "additions": 11,
      "deletions": 1,
      "changes": 12,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/ac5325b82b6a91f5ff7b5ba601cfdc5ab79385ec/src%2Forg%2Fzaproxy%2Fzap%2Fview%2FSummaryAndConfigPanel.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/ac5325b82b6a91f5ff7b5ba601cfdc5ab79385ec/src%2Forg%2Fzaproxy%2Fzap%2Fview%2FSummaryAndConfigPanel.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fview%2FSummaryAndConfigPanel.java?ref=ac5325b82b6a91f5ff7b5ba601cfdc5ab79385ec",
      "patch": "@@ -44,6 +44,8 @@ public class SummaryAndConfigPanel extends JPanel {\n \t/** The summary title text. */\n \tprivate String summaryTitleText;\n \n+\tprivate JButton configButton;\n+\n \t/**\n \t * Instantiates a new summary and config panel.\n \t * \n@@ -58,7 +60,7 @@ public SummaryAndConfigPanel(String summaryTitleText, String configButtonText,\n \n \t\tthis.summaryTitleText = summaryTitleText;\n \n-\t\tJButton configButton = new JButton(configButtonText);\n+\t\tconfigButton = new JButton(configButtonText);\n \t\tconfigButton.setIcon(new ImageIcon(ContextAuthenticationPanel.class\n \t\t\t\t.getResource(\"/resource/icon/16/041.png\")));\n \t\tconfigButton.addActionListener(configButtonActionListener);\n@@ -80,4 +82,12 @@ public void setSummaryContent(String content) {\n \t\tsummaryArea.setText(\"<html><b>\" + summaryTitleText + \"</b><br/>\" + content + \"</html>\");\n \t}\n \n+\t/**\n+\t * Sets whether the config button is enabled.\n+\t *\n+\t * @param enabled true, if enabled\n+\t */\n+\tpublic void setConfigButtonEnabled(boolean enabled) {\n+\t\tthis.configButton.setEnabled(enabled);\n+\t}\n }",
      "parent_sha": "851599ae99ed6730d53e53bc39dcfd5c5784dc6c"
    }
  },
  {
    "oid": "9ae4906f5d8d04935466a56497bbaa2026c9c5ae",
    "message": "Added other supported DBMS technologies to the general Tech list",
    "date": "2015-04-20T14:57:19Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/9ae4906f5d8d04935466a56497bbaa2026c9c5ae",
    "details": {
      "sha": "778dee036e85bc224c8441642b9ddc4783b28968",
      "filename": "src/org/zaproxy/zap/model/Tech.java",
      "status": "modified",
      "additions": 94,
      "deletions": 76,
      "changes": 170,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/9ae4906f5d8d04935466a56497bbaa2026c9c5ae/src%2Forg%2Fzaproxy%2Fzap%2Fmodel%2FTech.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/9ae4906f5d8d04935466a56497bbaa2026c9c5ae/src%2Forg%2Fzaproxy%2Fzap%2Fmodel%2FTech.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fmodel%2FTech.java?ref=9ae4906f5d8d04935466a56497bbaa2026c9c5ae",
      "patch": "@@ -21,84 +21,102 @@\n \r\n public class Tech implements Comparable<Tech> {\r\n \r\n-\t// Tech hierarchy inspired by this article: http://java.dzone.com/articles/enum-tricks-hierarchical-data\r\n-\t// even though I've gone with a class instead on an enum;)\r\n+    // Tech hierarchy inspired by this article: http://java.dzone.com/articles/enum-tricks-hierarchical-data\r\n+    // even though I've gone with a class instead on an enum;)\r\n+    public static final Tech Db = new Tech(\"Db\");\r\n+    public static final Tech MySQL = new Tech(Db, \"MySQL\");\r\n+    public static final Tech PostgreSQL = new Tech(Db, \"PostgreSQL\");\r\n+    public static final Tech MsSQL = new Tech(Db, \"Microsoft SQL Server\");\r\n+    public static final Tech Oracle = new Tech(Db, \"Oracle\");\r\n+    public static final Tech SQLite = new Tech(Db, \"SQLite\");\r\n+    public static final Tech Access = new Tech(Db, \"Microsoft Access\");\r\n+    public static final Tech Firebird = new Tech(Db, \"Firebird\");\r\n+    public static final Tech MaxDB = new Tech(Db, \"SAP MaxDB\");\r\n+    public static final Tech Sybase = new Tech(Db, \"Sybase\");\r\n+    public static final Tech Db2 = new Tech(Db, \"IBM DB2\");\r\n+    public static final Tech HypersonicSQL = new Tech(Db, \"HypersonicSQL\");\r\n \r\n-\tpublic static final Tech Db = new Tech(\"Db\");\r\n-\tpublic static final Tech HypersonicSQL = new Tech(Db, \"HypersonicSQL\");\r\n-\tpublic static final Tech Oracle = new Tech(Db, \"Oracle\");\r\n-\tpublic static final Tech PostgreSQL = new Tech(Db, \"PostgreSQL\");\r\n-\tpublic static final Tech MsSQL = new Tech(Db, \"MsSQL\");\r\n-\tpublic static final Tech MySQL = new Tech(Db, \"MySQL\");\r\n-\t\r\n-\tpublic static final Tech OS = new Tech(\"OS\");\r\n-\tpublic static final Tech Linux = new Tech(OS, \"Linux\");\r\n-\tpublic static final Tech MacOS = new Tech(OS, \"MacOS\");\r\n-\tpublic static final Tech Windows = new Tech(OS, \"Windows\");\r\n+    public static final Tech OS = new Tech(\"OS\");\r\n+    public static final Tech Linux = new Tech(OS, \"Linux\");\r\n+    public static final Tech MacOS = new Tech(OS, \"MacOS\");\r\n+    public static final Tech Windows = new Tech(OS, \"Windows\");\r\n \r\n-\tpublic static final Tech WS = new Tech(\"WS\");\r\n-\tpublic static final Tech Apache = new Tech(WS, \"Apache\");\r\n-\tpublic static final Tech IIS = new Tech(WS, \"IIS\");\r\n-\tpublic static final Tech Tomcat = new Tech(WS, \"Tomcat\");\r\n-\t\r\n-\tpublic static final Tech[] builtInTech = {\r\n-\t\t\t\t\t\t\t\t\tDb, HypersonicSQL, Oracle, PostgreSQL, MsSQL, MySQL,\r\n-\t\t\t\t\t\t\t\t\tOS, Linux, MacOS, Windows,\r\n-\t\t\t\t\t\t\t\t\tWS, Apache, IIS, Tomcat};\r\n+    public static final Tech WS = new Tech(\"WS\");\r\n+    public static final Tech Apache = new Tech(WS, \"Apache\");\r\n+    public static final Tech IIS = new Tech(WS, \"IIS\");\r\n+    public static final Tech Tomcat = new Tech(WS, \"Tomcat\");\r\n \r\n-\tpublic static final Tech[] builtInTopLevelTech = {Db, OS, WS};\r\n+    public static final Tech[] builtInTech = {\r\n+        Db, MySQL, PostgreSQL, MsSQL, Oracle, SQLite, Access, Firebird, MaxDB, Sybase, Db2, HypersonicSQL, \r\n+        OS, Linux, MacOS, Windows,\r\n+        WS, Apache, IIS, Tomcat};\r\n \r\n-\tprivate Tech parent = null;\r\n-\tprivate String name = null;\r\n-\t\r\n-\tpublic Tech(String name) {\r\n-\t\tif (name.indexOf(\".\") > 0) {\r\n-\t\t\tthis.name = name.substring(name.lastIndexOf(\".\") + 1);\r\n-\t\t\tthis.parent = new Tech(name.substring(0, name.lastIndexOf(\".\")));\r\n-\t\t} else {\r\n-\t\t\tthis.name = name;\r\n-\t\t}\r\n-\t}\r\n-\tpublic Tech(Tech parent, String name) {\r\n-\t\tthis.parent = parent;\r\n-\t\tthis.name = name;\r\n-\t}\r\n-\t@Override\r\n-\tpublic String toString() {\r\n-\t\tif (parent == null) {\r\n-\t\t\treturn this.name;\r\n-\t\t} else {\r\n-\t\t\treturn parent.toString() + \".\" + this.name;\r\n-\t\t}\r\n-\t}\r\n-\tpublic boolean equals (Tech tech) {\r\n-\t\tif (tech == null) {\r\n-\t\t\treturn false;\r\n-\t\t}\r\n-\t\treturn this.toString().equals(tech.toString());\r\n-\t}\r\n-\tpublic boolean is(Tech other) {\r\n-\t    if (other == null) {\r\n-\t        return false;\r\n-\t    }\r\n-\t    for (Tech t = this;  t != null;  t = t.parent) {\r\n-\t        if (other == t) {\r\n-\t            return true;\r\n-\t        }\r\n-\t    }\r\n-\t    return false;\r\n-\t}\r\n-\tpublic Tech getParent() {\r\n-\t\treturn parent;\r\n-\t}\r\n-\tpublic String getName() {\r\n-\t\treturn name;\r\n-\t}\r\n-\t@Override\r\n-\tpublic int compareTo(Tech o) {\r\n-\t\tif (o == null) {\r\n-\t\t\treturn -1;\r\n-\t\t}\r\n-\t\treturn this.toString().compareTo(o.toString());\r\n-\t}\r\n+    public static final Tech[] builtInTopLevelTech = {Db, OS, WS};\r\n+\r\n+    private Tech parent = null;\r\n+    private String name = null;\r\n+\r\n+    public Tech(String name) {\r\n+        if (name.indexOf(\".\") > 0) {\r\n+            this.name = name.substring(name.lastIndexOf(\".\") + 1);\r\n+            this.parent = new Tech(name.substring(0, name.lastIndexOf(\".\")));\r\n+            \r\n+        } else {\r\n+            this.name = name;\r\n+        }\r\n+    }\r\n+\r\n+    public Tech(Tech parent, String name) {\r\n+        this.parent = parent;\r\n+        this.name = name;\r\n+    }\r\n+\r\n+    @Override\r\n+    public String toString() {\r\n+        if (parent == null) {\r\n+            return this.name;\r\n+            \r\n+        } else {\r\n+            return parent.toString() + \".\" + this.name;\r\n+        }\r\n+    }\r\n+\r\n+    public boolean equals(Tech tech) {\r\n+        if (tech == null) {\r\n+            return false;\r\n+        }\r\n+        \r\n+        return this.toString().equals(tech.toString());\r\n+    }\r\n+\r\n+    public boolean is(Tech other) {\r\n+        if (other == null) {\r\n+            return false;\r\n+        }\r\n+        \r\n+        for (Tech t = this; t != null; t = t.parent) {\r\n+            if (other == t) {\r\n+                return true;\r\n+            }\r\n+        }\r\n+        \r\n+        return false;\r\n+    }\r\n+\r\n+    public Tech getParent() {\r\n+        return parent;\r\n+    }\r\n+\r\n+    public String getName() {\r\n+        return name;\r\n+    }\r\n+\r\n+    @Override\r\n+    public int compareTo(Tech o) {\r\n+        if (o == null) {\r\n+            return -1;\r\n+        }\r\n+        \r\n+        return this.toString().compareTo(o.toString());\r\n+    }\r\n }\r",
      "parent_sha": "ad0c33f258be7722dacb8366d96f1c74b595f016"
    }
  },
  {
    "oid": "d2a84ef0af24c0f47773b8b81d05dcc6c5e84f1b",
    "message": "Only load passive scan rules of installed add-ons\n\nCheck that the add-ons are actually installed before attempting to load\ntheir scan rules.\n\nSigned-off-by: thc202 <thc202@gmail.com>",
    "date": "2024-04-22T07:11:08Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/d2a84ef0af24c0f47773b8b81d05dcc6c5e84f1b",
    "details": {
      "sha": "b658d6e143bb8d44e4270a6f015b4d08acc3d5e6",
      "filename": "zap/src/main/java/org/zaproxy/zap/extension/pscan/ExtensionPassiveScan.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/d2a84ef0af24c0f47773b8b81d05dcc6c5e84f1b/zap%2Fsrc%2Fmain%2Fjava%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fpscan%2FExtensionPassiveScan.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/d2a84ef0af24c0f47773b8b81d05dcc6c5e84f1b/zap%2Fsrc%2Fmain%2Fjava%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fpscan%2FExtensionPassiveScan.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/zap%2Fsrc%2Fmain%2Fjava%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fpscan%2FExtensionPassiveScan.java?ref=d2a84ef0af24c0f47773b8b81d05dcc6c5e84f1b",
      "patch": "@@ -50,6 +50,7 @@\n import org.parosproxy.paros.model.Session;\n import org.parosproxy.paros.network.HttpMessage;\n import org.zaproxy.zap.control.AddOn;\n+import org.zaproxy.zap.control.AddOn.InstallationStatus;\n import org.zaproxy.zap.control.ExtensionFactory;\n import org.zaproxy.zap.extension.AddOnInstallationStatusListener;\n import org.zaproxy.zap.extension.alert.ExtensionAlert;\n@@ -140,9 +141,8 @@ public void hook(ExtensionHook extensionHook) {\n \n     @Override\n     public void postInit() {\n-        ExtensionFactory.getAddOnLoader()\n-                .getAddOnCollection()\n-                .getAddOns()\n+        ExtensionFactory.getAddOnLoader().getAddOnCollection().getAddOns().stream()\n+                .filter(addOn -> addOn.getInstallationStatus() == InstallationStatus.INSTALLED)\n                 .forEach(this::loadScanRules);\n     }\n ",
      "parent_sha": "381c3e49ee8398cd8d5c8ca9b225706f98fd81d2"
    }
  },
  {
    "oid": "f758e3bccf1fc7e452271823be62765415bb460d",
    "message": "Added a condition to ensure we are using IE",
    "date": "2012-03-01T21:49:38Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/f758e3bccf1fc7e452271823be62765415bb460d",
    "details": {
      "sha": "2c838c465d59092425955824f2af5596977810e5",
      "filename": "src/org/zaproxy/zap/extension/pscan/scanner/HeaderXssProtectionScanner.java",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/f758e3bccf1fc7e452271823be62765415bb460d/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fpscan%2Fscanner%2FHeaderXssProtectionScanner.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/f758e3bccf1fc7e452271823be62765415bb460d/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fpscan%2Fscanner%2FHeaderXssProtectionScanner.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fpscan%2Fscanner%2FHeaderXssProtectionScanner.java?ref=f758e3bccf1fc7e452271823be62765415bb460d",
      "patch": "@@ -20,7 +20,7 @@\n import java.util.Vector;\r\n \r\n import net.htmlparser.jericho.Source;\r\n-\r\n+import org.parosproxy.paros.network.HttpUserAgent;\r\n import org.parosproxy.paros.core.scanner.Alert;\r\n import org.parosproxy.paros.network.HttpHeader;\r\n import org.parosproxy.paros.network.HttpMessage;\r\n@@ -44,10 +44,10 @@ public void scanHttpRequestSend(HttpMessage msg, int id) {\n \r\n \t@Override\r\n \tpublic void scanHttpResponseReceive(HttpMessage msg, int id, Source source) {\r\n-\t\t\tif (msg.getResponseBody().length() > 0 && msg.getResponseHeader().isText()){\r\n-\t\t\t\tVector<String> xssHeaderProtection = msg.getResponseHeader().getHeaders(HttpHeader.X_XSS_PROTECTION);\r\n-\t\t\t\tif (xssHeaderProtection != null) {\r\n-\t\t\t\t\tfor (String xssHeaderProtectionParam : xssHeaderProtection) {\r\n+\t\tif (msg.getResponseBody().length() > 0 && msg.getResponseHeader().isText() && HttpUserAgent.InternetExplorer.equals(HttpUserAgent.getBrowser(msg.getRequestHeader().getHeader(HttpHeader.USER_AGENT)))){\r\n+\t\t\tVector<String> xssHeaderProtection = msg.getResponseHeader().getHeaders(HttpHeader.X_XSS_PROTECTION);\r\n+\t\t\tif (xssHeaderProtection != null) {\r\n+\t\t\t\tfor (String xssHeaderProtectionParam : xssHeaderProtection) {\r\n \t\t\t\t\tif (xssHeaderProtectionParam.toLowerCase().indexOf(\"1\") < 0) {\r\n \t\t\t\t\t\tthis.raiseAlert(msg, id, xssHeaderProtectionParam);\r\n \t\t\t\t\t}\r",
      "parent_sha": "e793f3b5d70d7866f94feed82043c19857afb66d"
    }
  },
  {
    "oid": "cdd8ae95b4bfd9f63f0c5287860485946f622f67",
    "message": "Minor update in org.parosproxy.paros.model.SiteMap for issue 533 \"Default ports 80 and 443 are appended to sites in site tree\": using StringBuilder instead of simple string concatenation\nhttps://code.google.com/p/zaproxy/issues/detail?id=533",
    "date": "2013-03-05T12:47:29Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/cdd8ae95b4bfd9f63f0c5287860485946f622f67",
    "details": {
      "sha": "9ead14657b336a32ee2c84ae24fbdaaa557064ea",
      "filename": "src/org/parosproxy/paros/model/SiteMap.java",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/cdd8ae95b4bfd9f63f0c5287860485946f622f67/src%2Forg%2Fparosproxy%2Fparos%2Fmodel%2FSiteMap.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/cdd8ae95b4bfd9f63f0c5287860485946f622f67/src%2Forg%2Fparosproxy%2Fparos%2Fmodel%2FSiteMap.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fmodel%2FSiteMap.java?ref=cdd8ae95b4bfd9f63f0c5287860485946f622f67",
      "patch": "@@ -588,16 +588,18 @@ public SiteNode getSiteNode (int href) {\n     \r\n     // returns a representation of the host name in the site map\r\n \tprivate String getHostName(URI uri) throws URIException {\r\n+\t\tStringBuilder host = new StringBuilder(); \t\t\t\t\r\n+\t\t\r\n \t\tString scheme = uri.getScheme();\r\n-\t\tString host = scheme + \"://\" + uri.getHost();       \r\n-\t\tint port = uri.getPort();\r\n+\t\thost.append(scheme).append(\"://\").append(uri.getHost());\r\n \t\t\r\n+\t\tint port = uri.getPort();\t\t\r\n \t\tif (port != -1 &&\r\n \t\t\t\t((port == 80 && !\"http\".equals(scheme)) ||\r\n \t\t\t\t(port == 443 && !\"https\".equals(scheme)))) {\r\n-\t\t\thost = host + \":\" + port;\r\n+\t\t\thost.append(\":\").append(port);\r\n \t\t}\r\n \t\t\r\n-\t\treturn host;\r\n+\t\treturn host.toString();\r\n \t}    \r\n }\r",
      "parent_sha": "c005540cc6d12f22a2f44c10416df26b9611c02d"
    }
  },
  {
    "oid": "1fef25f98a872d0b968737cfb6fdf0ef5abdf173",
    "message": "Delay initialisation of keyboard mappings\n\nChange ExtensionKeyboard to initialise the keyboard mappings in postInit\n(instead of optionsLoaded) to ensure other extensions are already loaded\nand its menus added, otherwise the menus of unordered extensions or with\nlater order would not be properly registered and the shortcuts would not\nbe configurable, for example:\nERROR ExtensionKeyboard  - No mapping found for keyboard shortcut:\n - fuzz.menu.tools.fuzz\n - replacer.topmenu.tools.shortcut\n - help.menu.guide\n\nRemove the order from the extension, it's no longer needed.",
    "date": "2018-07-24T00:43:58Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/1fef25f98a872d0b968737cfb6fdf0ef5abdf173",
    "details": {
      "sha": "d5786503e5e3cff62d1053481eab6882f4d8cac4",
      "filename": "src/org/zaproxy/zap/extension/keyboard/ExtensionKeyboard.java",
      "status": "modified",
      "additions": 2,
      "deletions": 8,
      "changes": 10,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/1fef25f98a872d0b968737cfb6fdf0ef5abdf173/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fkeyboard%2FExtensionKeyboard.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/1fef25f98a872d0b968737cfb6fdf0ef5abdf173/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fkeyboard%2FExtensionKeyboard.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fkeyboard%2FExtensionKeyboard.java?ref=1fef25f98a872d0b968737cfb6fdf0ef5abdf173",
      "patch": "@@ -48,13 +48,7 @@ public class ExtensionKeyboard extends ExtensionAdaptor {\n \tprivate KeyboardAPI api = null;\r\n \r\n \tpublic ExtensionKeyboard() {\r\n-\t\tsuper();\r\n-\t\tinitialize();\r\n-\t}\r\n-\r\n-\tprivate void initialize() {\r\n-        this.setName(NAME);\r\n-        this.setOrder(2000);\t// Really want this to be added late on\r\n+\t\tsuper(NAME);\r\n \t}\r\n \r\n \t@Override\r\n@@ -83,7 +77,7 @@ protected KeyboardParam getKeyboardParam() {\n \t}\r\n \r\n \t@Override\r\n-\tpublic void optionsLoaded() {\r\n+\tpublic void postInit() {\r\n \t\tif (View.isInitialised()) {\r\n \t\t\tlogger.info(\"Initializing keyboard shortcuts\");\r\n \t\t\tinitAllMenuItems(View.getSingleton().getMainFrame().getMainMenuBar().getMenuFile());\r",
      "parent_sha": "dff82342dca9d5a24920a8ec3c4c805f3e4c7676"
    }
  },
  {
    "oid": "90bc0f3ea657891577619bc6366bdc93e02f540a",
    "message": "Issue 901 - Pop up menu \"succeed\" separator is not added when using sub-menu in MainPopupMenu\n\nChanged to add a separator instead of the menu item.",
    "date": "2013-11-17T02:23:17Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/90bc0f3ea657891577619bc6366bdc93e02f540a",
    "details": {
      "sha": "69ee8e86e8b55dbbedf5b119c3adae032cdec6c7",
      "filename": "src/org/parosproxy/paros/view/MainPopupMenu.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/90bc0f3ea657891577619bc6366bdc93e02f540a/src%2Forg%2Fparosproxy%2Fparos%2Fview%2FMainPopupMenu.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/90bc0f3ea657891577619bc6366bdc93e02f540a/src%2Forg%2Fparosproxy%2Fparos%2Fview%2FMainPopupMenu.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fview%2FMainPopupMenu.java?ref=90bc0f3ea657891577619bc6366bdc93e02f540a",
      "patch": "@@ -32,6 +32,7 @@\n // ZAP: 2013/04/14 Issue 592: Do not show the main pop up menu if it doesn't have visible pop up menu items\r\n // ZAP: 2013/04/14 Issue 598: Replace/update \"old\" pop up menu items\r\n // ZAP: 2013/11/16 Issue 878: ExtensionPopupMenuItem#getMenuIndex() as no effect in MainPopupMenu\r\n+// ZAP: 2013/11/16 Issue 901: Pop up menu \"succeed\" separator is not added when using sub-menu in MainPopupMenu\r\n \r\n package org.parosproxy.paros.view;\r\n \r\n@@ -163,7 +164,7 @@ private void handleMenuItem(Component invoker, ExtensionPopupMenuItem menuItem)\n \t            \t\t\tsuperMenu.setEnabled(true);\r\n \t            \t\t}\r\n \t            \t\tif (menuItem.succeedWithSeparator()) {\r\n-\t            \t\t\tsuperMenu.add(menuItem);\r\n+\t            \t\t\tsuperMenu.addSeparator();\r\n \t            \t\t}\r\n \t            \t\t\r\n \t            \t} else {\r",
      "parent_sha": "00c270bf70b809a0e32a401bec0ade302f731006"
    }
  },
  {
    "oid": "d5839d5793f5a41c5601a923d4a14f20680cdf68",
    "message": "Log correct address/port when stopping alt proxy\n\nChange ExtensionProxies to log the key of the proxy being shutdown,\ninstead of using the ParamProxy which does not contain the correct data.\n\nFix #4039 - MultiProxy Logging Discrepancy",
    "date": "2017-11-16T22:36:19Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/d5839d5793f5a41c5601a923d4a14f20680cdf68",
    "details": {
      "sha": "04c9d8b999d11247ffec343811fc49866348732e",
      "filename": "src/org/zaproxy/zap/extension/proxies/ExtensionProxies.java",
      "status": "modified",
      "additions": 5,
      "deletions": 7,
      "changes": 12,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/d5839d5793f5a41c5601a923d4a14f20680cdf68/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fproxies%2FExtensionProxies.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/d5839d5793f5a41c5601a923d4a14f20680cdf68/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fproxies%2FExtensionProxies.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fproxies%2FExtensionProxies.java?ref=d5839d5793f5a41c5601a923d4a14f20680cdf68",
      "patch": "@@ -88,7 +88,7 @@ public void stop() {\n         super.stop();\n         // Stop all of the running servers\n         for (Entry<String, ProxyServer> entry : proxyServers.entrySet()) {\n-            stopProxyServer(entry.getValue());\n+            stopProxyServer(entry.getKey(), entry.getValue());\n         }\n         proxyServers.clear();\n     }\n@@ -121,7 +121,7 @@ private void restartProxies() {\n         }\n         // Any proxies left have been removed\n         for (Entry<String, ProxyServer> entry : currentProxies.entrySet()) {\n-            stopProxyServer(entry.getValue());\n+            stopProxyServer(entry.getKey(), entry.getValue());\n         }\n     }\n \n@@ -148,10 +148,8 @@ private ProxyServer startProxyServer(String address, int port) {\n         return proxyServer;\n     }\n \n-    private void stopProxyServer(ProxyServer proxyServer) {\n-        log.info(\n-                \"Stopping alt proxy server: \" + proxyServer.getProxyParam().getProxyIp() + \":\"\n-                        + proxyServer.getProxyParam().getProxyPort());\n+    private void stopProxyServer(String proxyKey, ProxyServer proxyServer) {\n+        log.info(\"Stopping alt proxy server: \" + proxyKey);\n         Control.getSingleton().getExtensionLoader().getExtension(ExtensionHistory.class).unregisterProxy(proxyServer);\n         proxyServer.stopServer();\n     }\n@@ -189,7 +187,7 @@ public void removeProxy(String address, int port) {\n         if (proxyServer == null) {\n             throw new IllegalArgumentException(\"Proxy not found: \" + key);\n         }\n-        this.stopProxyServer(proxyServer);\n+        this.stopProxyServer(key, proxyServer);\n         this.getParam().removeProxy(address, port);\n     }\n ",
      "parent_sha": "2173b265d66b1cf0376aed242eec3b31c44c11f9"
    }
  },
  {
    "oid": "e4a53329e1d5165c02c6ccef38423e6e5e587e89",
    "message": "Changed to only log errors about potential GUI threads adding to the site map to only occur in dev mode.",
    "date": "2014-03-06T13:50:08Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/e4a53329e1d5165c02c6ccef38423e6e5e587e89",
    "details": {
      "sha": "bf7011405d0273f23529ecb788a4710bc4b3bbca",
      "filename": "src/org/parosproxy/paros/model/SiteMap.java",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/e4a53329e1d5165c02c6ccef38423e6e5e587e89/src%2Forg%2Fparosproxy%2Fparos%2Fmodel%2FSiteMap.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/e4a53329e1d5165c02c6ccef38423e6e5e587e89/src%2Forg%2Fparosproxy%2Fparos%2Fmodel%2FSiteMap.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fmodel%2FSiteMap.java?ref=e4a53329e1d5165c02c6ccef38423e6e5e587e89",
      "patch": "@@ -260,9 +260,11 @@ public synchronized SiteNode addPath(HistoryReference ref) {\n      * @return \r\n      */\r\n     public SiteNode addPath(HistoryReference ref, HttpMessage msg) {\r\n-    \tif (! SwingUtilities.isEventDispatchThread() &&\r\n-    \t\t\t! Thread.currentThread().getName().startsWith(\"ZAP\")) {\r\n-    \t\t// Log an error but carry on anyway\r\n+    \tif (Constant.isDevBuild() && ! SwingUtilities.isEventDispatchThread() &&\r\n+    \t\t\t! Thread.currentThread().getName().startsWith(\"ZAP\") &&\r\n+    \t\t\t! Thread.currentThread().getName().startsWith(\"DirBuster\")) {\r\n+    \t\t// In developer mode log an error if we're no on the EDT or other known thread but carry on anyway\r\n+    \t\t// Adding to the site tree on GUI ('initial') threads causes problems\r\n     \t\tlog.error(\"SiteMap.addPath not on EDT \" + Thread.currentThread().getName(), new Exception());\r\n     \t}\r\n         \r",
      "parent_sha": "caae7a7d1dde6707184f5cd0fe2cc5bac7383d42"
    }
  },
  {
    "oid": "f53d5bdb892d268eae26a300bc965cc59ac2d5ca",
    "message": "Issue 3879 - Auto Set Active Imported Certificate\n\nAutomatically activate the first client cert imported.\n\nFixes zaproxy/zaproxy#3879",
    "date": "2017-12-13T13:35:33Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/f53d5bdb892d268eae26a300bc965cc59ac2d5ca",
    "details": {
      "sha": "31077ad6a76e3c8ce5ebfa5dc04c85d54520a132",
      "filename": "src/org/parosproxy/paros/extension/option/OptionsCertificatePanel.java",
      "status": "modified",
      "additions": 18,
      "deletions": 7,
      "changes": 25,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/f53d5bdb892d268eae26a300bc965cc59ac2d5ca/src%2Forg%2Fparosproxy%2Fparos%2Fextension%2Foption%2FOptionsCertificatePanel.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/f53d5bdb892d268eae26a300bc965cc59ac2d5ca/src%2Forg%2Fparosproxy%2Fparos%2Fextension%2Foption%2FOptionsCertificatePanel.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fextension%2Foption%2FOptionsCertificatePanel.java?ref=f53d5bdb892d268eae26a300bc965cc59ac2d5ca",
      "patch": "@@ -31,6 +31,7 @@\n // ZAP: 2017/08/16 Tidy up usage of CertificateView.\r\n // ZAP: 2017/08/16 Show error message if failed to activate the certificate.\r\n // ZAP: 2017/08/17 Reduce code duplication when showing cert/keystore errors\r\n+// ZAP: 2017/12/12 Use first alias by default (Issue 3879).\r\n \r\n package org.parosproxy.paros.extension.option;\r\n \r\n@@ -637,7 +638,7 @@ private void addPkcs11ButtonActionPerformed(java.awt.event.ActionEvent evt) {//G\n \t\t\tretry = true;\r\n \r\n \t\t\tcertificatejTabbedPane.setSelectedIndex(0);\r\n-\t\t\tselectFirstAliasOfKeyStore(ksIndex);\r\n+\t\t\tactivateFirstOnlyAliasOfKeyStore(ksIndex);\r\n \r\n \t\t\tdriverComboBox.setSelectedIndex(-1);\r\n \t\t\tpkcs11PasswordField.setText(\"\");\r\n@@ -709,17 +710,26 @@ private void addPkcs11ButtonActionPerformed(java.awt.event.ActionEvent evt) {//G\n \r\n \t}//GEN-LAST:event_addPkcs11ButtonActionPerformed\r\n \r\n-\tprivate void selectFirstAliasOfKeyStore(int ksIndex) {\r\n+\tprivate void activateFirstOnlyAliasOfKeyStore(int ksIndex) {\r\n \t\tif (ksIndex < 0 || ksIndex >= keyStoreList.getModel().getSize()) {\r\n \t\t\treturn;\r\n \t\t}\r\n \r\n \t\tkeyStoreList.setSelectedIndex(ksIndex);\r\n \t\tif (aliasTable.getRowCount() != 0) {\r\n \t\t\taliasTable.setRowSelectionInterval(0, 0);\r\n+\r\n+\t\t\tif (aliasTable.getRowCount() == 1 && !isCertActive()) {\r\n+\t\t\t\tsetActiveAction();\r\n+\t\t\t}\r\n \t\t}\r\n \t}\r\n \r\n+\tprivate boolean isCertActive() {\r\n+\t\tString currentKey = contextManager.getDefaultKey();\r\n+\t\treturn currentKey != null && !currentKey.isEmpty();\r\n+\t}\r\n+\r\n \tprivate void showErrorMessageSunPkcs11ProviderNotAvailable() {\r\n \t\tfinal String sunReference = Constant.messages.getString(\"options.cert.error.pkcs11notavailable.sun.hyperlink\");\r\n \t\tfinal String ibmReference = Constant.messages.getString(\"options.cert.error.pkcs11notavailable.ibm.hyperlink\");\r\n@@ -793,7 +803,7 @@ private void addPkcs12ButtonActionPerformed(java.awt.event.ActionEvent evt) {//G\n \r\n \r\n \t\tcertificatejTabbedPane.setSelectedIndex(0);\r\n-\t\tselectFirstAliasOfKeyStore(ksIndex);\r\n+\t\tactivateFirstOnlyAliasOfKeyStore(ksIndex);\r\n \r\n \t\tfileTextField.setText(\"\");\r\n \t\tpkcs12PasswordField.setText(\"\");\r\n@@ -849,6 +859,10 @@ private void showCertificate(Certificate cert) {\n \t}\r\n \t\r\n \tprivate void setActiveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setActiveButtonActionPerformed\r\n+\t\tsetActiveAction();\r\n+\t}//GEN-LAST:event_setActiveButtonActionPerformed\r\n+\t\r\n+\tprivate void setActiveAction() {\r\n \t\tint ks = keyStoreList.getSelectedIndex();\r\n \t\tint alias = aliasTable.getSelectedRow();\r\n \t\tif (ks > -1 && alias>-1) {\r\n@@ -887,10 +901,7 @@ private void setActiveButtonActionPerformed(java.awt.event.ActionEvent evt) {//G\n \t\t\t}\r\n \t\t\tcertificateTextField.setText(contextManager.getDefaultKey());\r\n \t\t}\r\n-\r\n-\r\n-\r\n-\t}//GEN-LAST:event_setActiveButtonActionPerformed\r\n+\t}\r\n \r\n \tpublic String getPassword() {\r\n \t\tJPasswordField askPasswordField = new JPasswordField();\r",
      "parent_sha": "3df15180705f8d1c27c3f61ea5070ebfb798b619"
    }
  },
  {
    "oid": "2ff1f938af6d708bae35d643617d6672fbede82a",
    "message": "spider: change Spider tab to allow to auto-scroll on new entries\n\nChange class SpiderPanel to use ZapTable (instead of JXTable) as it\nsupports auto-scrolling on new values (it's enabled by default).\nRemove now redundant call that sets the column control visible.\nReplace the use of a custom MouseAdapter to show the context menu with\nSwing built-in support of context menus (allows to be invoked with mouse\nand keyboard, where supported, moreover ZapTable's implementation makes\nsure that the entries are automatically selected on context menu\ninvocation with mouse).\nFix #1593 - Auto-scroll in Spider tab",
    "date": "2015-09-01T21:35:25Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/2ff1f938af6d708bae35d643617d6672fbede82a",
    "details": {
      "sha": "5f0b31d3be1d1e173be2a4ef35c9450a82536986",
      "filename": "src/org/zaproxy/zap/extension/spider/SpiderPanel.java",
      "status": "modified",
      "additions": 11,
      "deletions": 24,
      "changes": 35,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/2ff1f938af6d708bae35d643617d6672fbede82a/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fspider%2FSpiderPanel.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/2ff1f938af6d708bae35d643617d6672fbede82a/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fspider%2FSpiderPanel.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fspider%2FSpiderPanel.java?ref=2ff1f938af6d708bae35d643617d6672fbede82a",
      "patch": "@@ -18,6 +18,7 @@\n \r\n package org.zaproxy.zap.extension.spider;\r\n \r\n+import java.awt.Component;\r\n import java.awt.Event;\r\n import java.awt.EventQueue;\r\n import java.awt.Insets;\r\n@@ -30,6 +31,7 @@\n import javax.swing.ImageIcon;\r\n import javax.swing.JButton;\r\n import javax.swing.JLabel;\r\n+import javax.swing.JPopupMenu;\r\n import javax.swing.JScrollPane;\r\n import javax.swing.JToolBar;\r\n import javax.swing.KeyStroke;\r\n@@ -42,6 +44,7 @@\n import org.zaproxy.zap.model.ScanListenner2;\r\n import org.zaproxy.zap.spider.SpiderParam;\r\n import org.zaproxy.zap.view.ScanPanel2;\r\n+import org.zaproxy.zap.view.ZapTable;\r\n \r\n /**\r\n  * The Class SpiderPanel implements the Panel that is shown to the users when selecting the Spider Scan Tab.\r\n@@ -62,7 +65,7 @@ public class SpiderPanel extends ScanPanel2<SpiderScan, ScanController<SpiderSca\n \tprivate JButton scanButton = null;\r\n \r\n \t/** The results table. */\r\n-\tprivate JXTable resultsTable;\r\n+\tprivate ZapTable resultsTable;\r\n \r\n \t/** The results pane. */\r\n \tprivate JScrollPane workPane;\r\n@@ -130,40 +133,24 @@ private void setScanResultsTableColumnSizes() {\n \tprivate JXTable getScanResultsTable() {\r\n \t\tif (resultsTable == null) {\r\n \t\t\t// Create the table with a default, empty TableModel and the proper settings\r\n-\t\t\tresultsTable = new JXTable(EMPTY_RESULTS_MODEL);\r\n+\t\t\tresultsTable = new ZapTable(EMPTY_RESULTS_MODEL);\r\n \t\t\tresultsTable.setColumnSelectionAllowed(false);\r\n \t\t\tresultsTable.setCellSelectionEnabled(false);\r\n \t\t\tresultsTable.setRowSelectionAllowed(true);\r\n \t\t\tresultsTable.setAutoCreateRowSorter(true);\r\n-\t\t\tresultsTable.setColumnControlVisible(true);\r\n \r\n \t\t\tthis.setScanResultsTableColumnSizes();\r\n \r\n \t\t\tresultsTable.setName(PANEL_NAME);\r\n \t\t\tresultsTable.setDoubleBuffered(true);\r\n \t\t\tresultsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);\r\n-\t\t\t// Add hack to force row selection on right click\r\n-\t\t\tresultsTable.addMouseListener(new java.awt.event.MouseAdapter() {\r\n-\t\t\t\t@Override\r\n-\t\t\t\tpublic void mousePressed(java.awt.event.MouseEvent e) {\r\n-\t\t\t\t\tshowPopupMenuIfTriggered(e);\r\n-\t\t\t\t}\r\n+\t\t\tresultsTable.setComponentPopupMenu(new JPopupMenu() {\r\n+\r\n+\t\t\t\tprivate static final long serialVersionUID = 6608291059686282641L;\r\n+\r\n \t\t\t\t@Override\r\n-\t\t\t\tpublic void mouseReleased(java.awt.event.MouseEvent e) {\r\n-\t\t\t\t\tshowPopupMenuIfTriggered(e);\r\n-\t\t\t\t}\r\n-\t\t\t\tprivate void showPopupMenuIfTriggered(java.awt.event.MouseEvent e) {\r\n-\t\t\t\t\tif (e.isPopupTrigger()) {\r\n-\t\t\t\t\t\t// Select table item\r\n-\t\t\t\t\t\tint row = resultsTable.rowAtPoint(e.getPoint());\r\n-\t\t\t\t\t\tif (row < 0 || !resultsTable.getSelectionModel().isSelectedIndex(row)) {\r\n-\t\t\t\t\t\t\tresultsTable.getSelectionModel().clearSelection();\r\n-\t\t\t\t\t\t\tif (row >= 0) {\r\n-\t\t\t\t\t\t\t\tresultsTable.getSelectionModel().setSelectionInterval(row, row);\r\n-\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t}\r\n-\t\t\t\t\t\tView.getSingleton().getPopupMenu().show(e.getComponent(), e.getX(), e.getY());\r\n-\t\t\t\t\t}\r\n+\t\t\t\tpublic void show(Component invoker, int x, int y) {\r\n+\t\t\t\t\tView.getSingleton().getPopupMenu().show(invoker, x, y);\r\n \t\t\t\t}\r\n \t\t\t});\r\n \t\t}\r",
      "parent_sha": "6506ac1ac88da124b1b0607929ed7a05a7c7d471"
    }
  },
  {
    "oid": "215cbda430ef3bd2152bc28d44eafdff0440bf5a",
    "message": "Add saved scripts of registered script type\n\nChange `ExtensionScript` to add the scripts previously saved when a\nscript type is registered, otherwise it would not show the respective\nscripts when an add-on is installed/updated.\nTweak existing `addScript` calls to not save the scripts if already\nsaved.\n\nSigned-off-by: thc202 <thc202@gmail.com>",
    "date": "2019-07-22T12:56:34Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/215cbda430ef3bd2152bc28d44eafdff0440bf5a",
    "details": {
      "sha": "9c3c993daa96d8dfae6e9a9a01b11e9c2986e1e0",
      "filename": "zap/src/main/java/org/zaproxy/zap/extension/script/ExtensionScript.java",
      "status": "modified",
      "additions": 41,
      "deletions": 10,
      "changes": 51,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/215cbda430ef3bd2152bc28d44eafdff0440bf5a/zap%2Fsrc%2Fmain%2Fjava%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fscript%2FExtensionScript.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/215cbda430ef3bd2152bc28d44eafdff0440bf5a/zap%2Fsrc%2Fmain%2Fjava%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fscript%2FExtensionScript.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/zap%2Fsrc%2Fmain%2Fjava%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fscript%2FExtensionScript.java?ref=215cbda430ef3bd2152bc28d44eafdff0440bf5a",
      "patch": "@@ -131,18 +131,18 @@ public class ExtensionScript extends ExtensionAdaptor implements CommandLineList\n     private static final Logger logger = Logger.getLogger(ExtensionScript.class);\n \n     /**\n-     * Flag that indicates if the script templates should be loaded when a new script type is\n+     * Flag that indicates if the scripts/templates should be loaded when a new script type is\n      * registered.\n      *\n-     * <p>This is to prevent loading templates of already installed scripts (ones that are\n-     * registered during ZAP initialisation) twice, while allowing to load the templates of scripts\n-     * registered after initialisation (e.g. from installed add-ons).\n+     * <p>This is to prevent loading scripts/templates of already installed scripts (ones that are\n+     * registered during ZAP initialisation) twice, while allowing to load the scripts/templates of\n+     * script types registered after initialisation (e.g. from installed add-ons).\n      *\n      * @since 2.4.0\n      * @see #registerScriptType(ScriptType)\n      * @see #optionsLoaded()\n      */\n-    private boolean shouldLoadTemplatesOnScriptTypeRegistration;\n+    private boolean shouldLoadScriptsOnScriptTypeRegistration;\n \n     /**\n      * The directories added to the extension, to automatically add and remove its scripts.\n@@ -522,7 +522,7 @@ public ScriptTreeModel getTreeModel() {\n     /**\n      * Registers a new type of script.\n      *\n-     * <p>The script is added to the tree of scripts and its templates loaded, if any.\n+     * <p>The script is added to the tree of scripts and its scripts/templates loaded, if any.\n      *\n      * @param type the new type of script\n      * @throws InvalidParameterException if a script type with same name is already registered\n@@ -535,7 +535,8 @@ public void registerScriptType(ScriptType type) {\n         this.typeMap.put(type.getName(), type);\n         this.getTreeModel().addType(type);\n \n-        if (shouldLoadTemplatesOnScriptTypeRegistration) {\n+        if (shouldLoadScriptsOnScriptTypeRegistration) {\n+            addScripts(type);\n             loadScriptTemplates(type);\n         }\n \n@@ -546,6 +547,32 @@ public void registerScriptType(ScriptType type) {\n         }\n     }\n \n+    /**\n+     * Adds the (saved) scripts of the given script type.\n+     *\n+     * @param type the type of the script.\n+     * @see ScriptParam#getScripts()\n+     */\n+    private void addScripts(ScriptType type) {\n+        for (ScriptWrapper script : this.getScriptParam().getScripts()) {\n+            if (!type.getName().equals(script.getTypeName())) {\n+                continue;\n+            }\n+\n+            try {\n+                loadScript(script);\n+                addScript(script, false, false);\n+            } catch (MalformedInputException e) {\n+                logger.warn(\n+                        \"Failed to add script \\\"\"\n+                                + script.getName()\n+                                + \"\\\", contains invalid character sequence (UTF-8).\");\n+            } catch (InvalidParameterException | IOException e) {\n+                logger.error(\"Failed to add script: \" + script.getName(), e);\n+            }\n+        }\n+    }\n+\n     /**\n      * Removes the given script type.\n      *\n@@ -658,6 +685,10 @@ public ScriptNode addScript(ScriptWrapper script) {\n     }\n \n     public ScriptNode addScript(ScriptWrapper script, boolean display) {\n+        return addScript(script, display, true);\n+    }\n+\n+    private ScriptNode addScript(ScriptWrapper script, boolean display, boolean save) {\n         if (script == null) {\n             return null;\n         }\n@@ -670,7 +701,7 @@ public ScriptNode addScript(ScriptWrapper script, boolean display) {\n                 logScriptEventListenerException(listener, script, e);\n             }\n         }\n-        if (script.isLoadOnStart() && script.getFile() != null) {\n+        if (save && script.isLoadOnStart() && script.getFile() != null) {\n             this.getScriptParam().addScript(script);\n             this.getScriptParam().saveScripts();\n         }\n@@ -780,7 +811,7 @@ public void postInit() {\n             try {\n                 this.loadScript(script);\n                 if (script.getType() != null) {\n-                    this.addScript(script, false);\n+                    this.addScript(script, false, false);\n                 } else {\n                     logger.warn(\n                             \"Failed to add script \\\"\"\n@@ -831,7 +862,7 @@ public void postInit() {\n             int numAdded = addScriptsFromDir(dir);\n             logger.debug(\"Added \" + numAdded + \" scripts from dir: \" + dir.getAbsolutePath());\n         }\n-        shouldLoadTemplatesOnScriptTypeRegistration = true;\n+        shouldLoadScriptsOnScriptTypeRegistration = true;\n \n         Path defaultScriptsDir = Paths.get(Constant.getZapHome(), SCRIPTS_DIR, SCRIPTS_DIR);\n         for (ScriptType scriptType : typeMap.values()) {",
      "parent_sha": "39ecb2fd4b26d1014a014729e0b17f4a2f4d585d"
    }
  },
  {
    "oid": "7bd2d9893baa455e997716b5b5d59d3c4f7752bf",
    "message": "Reset PluginFactory in HostProcess\n\nTweak HostProcess, call reset method instead of existPluginToRun (the\nlatter calls the former but does other unnecessary things), easier to\nread/understand the code.",
    "date": "2017-07-12T22:09:32Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/7bd2d9893baa455e997716b5b5d59d3c4f7752bf",
    "details": {
      "sha": "9a2c43a66ddfbcd914ccc423b317d187d60adcc8",
      "filename": "src/org/parosproxy/paros/core/scanner/HostProcess.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/7bd2d9893baa455e997716b5b5d59d3c4f7752bf/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fscanner%2FHostProcess.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/7bd2d9893baa455e997716b5b5d59d3c4f7752bf/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fscanner%2FHostProcess.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fscanner%2FHostProcess.java?ref=7bd2d9893baa455e997716b5b5d59d3c4f7752bf",
      "patch": "@@ -72,6 +72,7 @@\n // ZAP: 2017/06/15 Initialise the plugin factory immediately after starting the scan.\r\n // ZAP: 2017/06/15 Do not start following plugin if the scanner is paused.\r\n // ZAP: 2017/06/20 Log number of alerts raised by each scanner.\r\n+// ZAP: 2017/07/12 Tweak the method used when initialising the PluginFactory.\r\n \r\n package org.parosproxy.paros.core.scanner;\r\n \r\n@@ -251,7 +252,7 @@ public void run() {\n             hostProcessStartTime = System.currentTimeMillis();\r\n \r\n             // Initialise plugin factory to report the state of the plugins ASAP.\r\n-            pluginFactory.existPluginToRun();\r\n+            pluginFactory.reset();\r\n \r\n             for (StructuralNode startNode : startNodes) {\r\n                 traverse(startNode, true, node -> {\r",
      "parent_sha": "f5c69861ce5f4878716dc6b3c6b8b5918e6472dd"
    }
  },
  {
    "oid": "ed1707f7cdcd47cea85e51f95ac4455fb13fad26",
    "message": "Bug fix: Changed the method compareTo to compare the fields correctly with each other.",
    "date": "2012-01-23T14:30:01Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/ed1707f7cdcd47cea85e51f95ac4455fb13fad26",
    "details": {
      "sha": "899015727894ad1f8cd62a087677cc43e18d10a9",
      "filename": "src/org/parosproxy/paros/core/scanner/Alert.java",
      "status": "modified",
      "additions": 7,
      "deletions": 4,
      "changes": 11,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/ed1707f7cdcd47cea85e51f95ac4455fb13fad26/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fscanner%2FAlert.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/ed1707f7cdcd47cea85e51f95ac4455fb13fad26/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fscanner%2FAlert.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fcore%2Fscanner%2FAlert.java?ref=ed1707f7cdcd47cea85e51f95ac4455fb13fad26",
      "patch": "@@ -20,6 +20,8 @@\n */\r\n // ZAP: 2011/12/04 Support deleting alerts\r\n // ZAP: 2012/01/02 Separate param and attack\r\n+// ZAP: 2012/01/23 Changed the method compareTo to compare the fields \r\n+//                 correctly with each other.\r\n \r\n package org.parosproxy.paros.core.scanner;\r\n \r\n@@ -182,7 +184,6 @@ public void setMessage(HttpMessage message) {\n \t\r\n \tpublic int compareTo(Object o2) throws ClassCastException {\r\n \t\tAlert alert2 = (Alert) o2;\r\n-\t\tint result = 0;\r\n \t\t\r\n \t\tif (risk < alert2.risk) {\r\n \t\t\treturn -1;\r\n@@ -196,17 +197,19 @@ public int compareTo(Object o2) throws ClassCastException {\n \t\t\treturn 1;\r\n \t\t}\r\n \t\t\r\n-\t\tresult = alert.compareToIgnoreCase(alert2.alert);\r\n+\t\tint result = alert.compareToIgnoreCase(alert2.alert);\r\n \t\tif (result != 0) {\r\n \t\t\treturn result;\r\n \t\t}\r\n \t\t\r\n-\t\tresult = alert.compareToIgnoreCase(alert2.uri);\r\n+\t\t// ZAP: changed to compare the field uri with alert2.uri\r\n+\t\tresult = uri.compareToIgnoreCase(alert2.uri);\r\n \t\tif (result != 0) {\r\n \t\t\treturn result;\r\n \t\t}\r\n \t\t\r\n-\t\tresult = alert.compareToIgnoreCase(alert2.param);\r\n+\t\t// ZAP: changed to compare the field param with alert2.param\r\n+\t\tresult = param.compareToIgnoreCase(alert2.param);\r\n \t\tif (result != 0) {\r\n \t\t\treturn result;\r\n \t\t}\r",
      "parent_sha": "fe96fad378cdc40b1ba53400bb87fb3f74557951"
    }
  },
  {
    "oid": "dac0e1e1b038a9854ab8ea7e9bea44e1b2b9191d",
    "message": "Fix issues with proper identification of http sessions for contexts due\nto existing port.",
    "date": "2013-07-30T10:43:58Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/dac0e1e1b038a9854ab8ea7e9bea44e1b2b9191d",
    "details": {
      "sha": "e1d0a4dab3b318768c507e74821ee3f36d251469",
      "filename": "src/org/zaproxy/zap/extension/httpsessions/ExtensionHttpSessions.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/dac0e1e1b038a9854ab8ea7e9bea44e1b2b9191d/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fhttpsessions%2FExtensionHttpSessions.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/dac0e1e1b038a9854ab8ea7e9bea44e1b2b9191d/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fhttpsessions%2FExtensionHttpSessions.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fhttpsessions%2FExtensionHttpSessions.java?ref=dac0e1e1b038a9854ab8ea7e9bea44e1b2b9191d",
      "patch": "@@ -502,7 +502,7 @@ public List<HttpSession> getHttpSessionsForContext(Context context) {\n \n \t\tfor (Entry<String, HttpSessionsSite> e : this.sessions.entrySet()) {\n \t\t\tString siteName = e.getKey();\n-\t\t\tsiteName = siteName.substring(0, siteName.lastIndexOf(\":\"));\n+//\t\t\tsiteName = siteName.substring(0, siteName.lastIndexOf(\":\"));\n \t\t\tsiteName = \"http://\" + siteName;\n \t\t\tlog.debug(siteName);\n \t\t\tif (context.isInContext(siteName))",
      "parent_sha": "fb53889e91a53726fd4930435fb4725cf156825d"
    }
  },
  {
    "oid": "808f1350f21acd3f448aa28078de0ce3b6a62d92",
    "message": "Fixed issue reported by FindBugs",
    "date": "2013-12-30T14:58:03Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/808f1350f21acd3f448aa28078de0ce3b6a62d92",
    "details": {
      "sha": "96da73ae9c46c4810c92e6b803f9e4d407e60b35",
      "filename": "src/org/zaproxy/zap/control/AddOnLoader.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/808f1350f21acd3f448aa28078de0ce3b6a62d92/src%2Forg%2Fzaproxy%2Fzap%2Fcontrol%2FAddOnLoader.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/808f1350f21acd3f448aa28078de0ce3b6a62d92/src%2Forg%2Fzaproxy%2Fzap%2Fcontrol%2FAddOnLoader.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fcontrol%2FAddOnLoader.java?ref=808f1350f21acd3f448aa28078de0ce3b6a62d92",
      "patch": "@@ -266,7 +266,7 @@ public void addAddon(AddOn ao) {\n     private void loadFiles(AddOn ao, boolean overwrite) {\r\n \t\tList<String> fileNames = ao.getFiles();\r\n \r\n-\t\tif (fileNames != null && fileNames != null) {\r\n+\t\tif (fileNames != null) {\r\n \t\t    AddOnClassLoader addOnClassLoader = this.addOnLoaders.get(ao.getId());\r\n \t\t\tfor (String name : fileNames) {\r\n \t\t\t\tFile outfile = null;\r\n@@ -353,7 +353,7 @@ public boolean removeAddOn(AddOn ao, boolean upgrading) {\n \t\t\t\r\n \t\t\t// Files\r\n \t\t\tList<String> fileNames = ao.getFiles();\r\n-\t\t\tif (fileNames != null && fileNames != null) {\r\n+\t\t\tif (fileNames != null) {\r\n \t\t\t\tFile file = null;\r\n \t\t\t\tfor (String name : fileNames) {\r\n \t\t\t\t\tFile parent = null;\r",
      "parent_sha": "82dee2b0c54e4336cfbc35a7fa2587c9522ae838"
    }
  },
  {
    "oid": "dc482299287670a15d7d381511b71ede0ae42fa6",
    "message": "Tidy up, removed the instance variable AlertPanel#rootTreePath, used to cache the root tree node path to expand it, since it's fast to recreate the path moreover it prevented the root tree node from being GC'ed sooner.",
    "date": "2014-06-16T19:13:56Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/dc482299287670a15d7d381511b71ede0ae42fa6",
    "details": {
      "sha": "6d326577708440cb3b087f151b4a7b12481289fe",
      "filename": "src/org/zaproxy/zap/extension/alert/AlertPanel.java",
      "status": "modified",
      "additions": 2,
      "deletions": 8,
      "changes": 10,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/dc482299287670a15d7d381511b71ede0ae42fa6/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Falert%2FAlertPanel.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/dc482299287670a15d7d381511b71ede0ae42fa6/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Falert%2FAlertPanel.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Falert%2FAlertPanel.java?ref=dc482299287670a15d7d381511b71ede0ae42fa6",
      "patch": "@@ -75,7 +75,6 @@ public class AlertPanel extends AbstractPanel {\n \t\r\n \tprivate ViewDelegate view = null;\r\n \tprivate JTree treeAlert = null;\r\n-\tprivate TreePath rootTreePath = null;\t\r\n \t\r\n \tprivate JScrollPane paneScroll = null;\r\n \r\n@@ -544,20 +543,15 @@ private ViewDelegate getView() {\n \r\n     \r\n \tpublic void expandRoot() {\r\n-        TreeNode root = (TreeNode) getTreeAlert().getModel().getRoot();\r\n-        if (rootTreePath == null || root != rootTreePath.getPathComponent(0)) {\r\n-            rootTreePath = new TreePath(root);\r\n-        }\r\n-\t    \r\n \t\tif (EventQueue.isDispatchThread()) {\r\n-\t\t    getTreeAlert().expandPath(rootTreePath);\r\n+\t\t    getTreeAlert().expandPath(new TreePath(getTreeAlert().getModel().getRoot()));\r\n \t\t    return;\r\n \t\t}\r\n \t\ttry {\r\n \t\t\tEventQueue.invokeLater(new Runnable() {\r\n \t\t\t\t@Override\r\n \t\t\t\tpublic void run() {\r\n-\t\t\t\t    getTreeAlert().expandPath(rootTreePath);\r\n+\t\t\t\t    expandRoot();\r\n \t\t\t\t}\r\n \t\t\t});\r\n \t\t} catch (Exception e) {\r",
      "parent_sha": "17be1d8514aaf757282e994d924b1d938888c17b"
    }
  },
  {
    "oid": "86893fff8fe2f39ddace0049541a9f795ea54e67",
    "message": "Bugfix Issue 216 - Exception when an URI doesn't have the path component",
    "date": "2011-11-03T13:50:05Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/86893fff8fe2f39ddace0049541a9f795ea54e67",
    "details": {
      "sha": "57b48d6c4da62b8b93ea3d6dfee0e456ed897111",
      "filename": "src/org/parosproxy/paros/network/HttpRequestHeader.java",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/86893fff8fe2f39ddace0049541a9f795ea54e67/src%2Forg%2Fparosproxy%2Fparos%2Fnetwork%2FHttpRequestHeader.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/86893fff8fe2f39ddace0049541a9f795ea54e67/src%2Forg%2Fparosproxy%2Fparos%2Fnetwork%2FHttpRequestHeader.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fnetwork%2FHttpRequestHeader.java?ref=86893fff8fe2f39ddace0049541a9f795ea54e67",
      "patch": "@@ -361,7 +361,10 @@ public int getHostPort() {\n \t */\r\n \tpublic boolean isImage() {\r\n \t\ttry {\r\n-\t\t\treturn (patternImage.matcher(getURI().getPath()).find());\r\n+\t\t\tfinal String path = getURI().getPath();\r\n+\t\t\tif(path != null) {\r\n+\t\t\t\treturn (patternImage.matcher(path).find());\r\n+\t\t\t}\r\n \t\t} catch (URIException e) {\r\n \t\t\te.printStackTrace();\r\n \t\t}\r",
      "parent_sha": "e95ebb8d20ec90705786f6c50e2af0f84a15a9e4"
    }
  },
  {
    "oid": "34783a0b125c6c96f8cb020b5518e4f9c7e8524e",
    "message": "Log the loaded add-ons sorted alphabetically\n\nChange ExtensionFactory to log the loaded add-ons sorted alphabetically,\neasier to read.",
    "date": "2017-04-26T22:54:27Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/34783a0b125c6c96f8cb020b5518e4f9c7e8524e",
    "details": {
      "sha": "2ca658fa8dc586e701da2520e1743cd76309d697",
      "filename": "src/org/zaproxy/zap/control/ExtensionFactory.java",
      "status": "modified",
      "additions": 11,
      "deletions": 1,
      "changes": 12,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/34783a0b125c6c96f8cb020b5518e4f9c7e8524e/src%2Forg%2Fzaproxy%2Fzap%2Fcontrol%2FExtensionFactory.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/34783a0b125c6c96f8cb020b5518e4f9c7e8524e/src%2Forg%2Fzaproxy%2Fzap%2Fcontrol%2FExtensionFactory.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fcontrol%2FExtensionFactory.java?ref=34783a0b125c6c96f8cb020b5518e4f9c7e8524e",
      "patch": "@@ -23,6 +23,8 @@\n import java.io.InputStream;\r\n import java.net.URL;\r\n import java.util.ArrayList;\r\n+import java.util.Collections;\r\n+import java.util.Comparator;\r\n import java.util.Enumeration;\r\n import java.util.Iterator;\r\n import java.util.List;\r\n@@ -71,7 +73,15 @@ private static AddOnLoader getAddOnLoader(List<File> extraDirs) {\n             \tdirs [2+i] = extraDirs.get(i);\r\n         \t}\r\n             addOnLoader = new AddOnLoader(dirs);\r\n-            log.info(\"Installed add-ons: \" + addOnLoader.getAddOnCollection().getInstalledAddOns());\r\n+            List<AddOn> sortedAddOns = new ArrayList<>(addOnLoader.getAddOnCollection().getInstalledAddOns());\r\n+            Collections.sort(sortedAddOns, new Comparator<AddOn>() {\r\n+\r\n+                @Override\r\n+                public int compare(AddOn addOn, AddOn otherAddOn) {\r\n+                    return addOn.getId().compareTo(otherAddOn.getId());\r\n+                }\r\n+            });\r\n+            log.info(\"Installed add-ons: \" + sortedAddOns);\r\n         } else {\r\n         \tlog.error(\"AddOnLoader initialised without additional directories\");\r\n         }\r",
      "parent_sha": "003a4b9afd753cc4b59e6be7ee62e3895d50db8d"
    }
  },
  {
    "oid": "27ea4e082711f8f0a830fb80935251decdc8843d",
    "message": "Removed 'work in progress' message from generated wiki API pages",
    "date": "2013-03-08T13:04:20Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/27ea4e082711f8f0a830fb80935251decdc8843d",
    "details": {
      "sha": "91fbe87546725ec041c7f7861f0be4eec285c989",
      "filename": "src/org/zaproxy/zap/extension/api/WikiAPIGenerator.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/27ea4e082711f8f0a830fb80935251decdc8843d/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fapi%2FWikiAPIGenerator.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/27ea4e082711f8f0a830fb80935251decdc8843d/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fapi%2FWikiAPIGenerator.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fextension%2Fapi%2FWikiAPIGenerator.java?ref=27ea4e082711f8f0a830fb80935251decdc8843d",
      "patch": "@@ -31,7 +31,7 @@ public class WikiAPIGenerator {\n \t * Note that this currently only generates English wiki pages, although the API itself can be internationalized\n \t */\n \tprivate String base = \"ApiGen_\";\n-\tprivate String title = \"= ZAP 2.0.0 API (work in progress) =\\n\";\n+\tprivate String title = \"= ZAP 2.0.0 API =\\n\";\n \tprivate File dir = new File(\"../zaproxy-wiki\"); \n \tprivate int methods = 0;\n ",
      "parent_sha": "4a4195258e34cf51bb9a9246632d8fc02af6355f"
    }
  },
  {
    "oid": "9a83c2f69387111cc1d122ab913ec1db96bc1be3",
    "message": "Fixed Issue 91\nAdded some logging code",
    "date": "2011-05-29T11:37:43Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/9a83c2f69387111cc1d122ab913ec1db96bc1be3",
    "details": {
      "sha": "c971d2e72cc2bc0fcc35fae7e7143287694f6fd4",
      "filename": "src/org/parosproxy/paros/extension/option/OptionsCertificatePanel.java",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/9a83c2f69387111cc1d122ab913ec1db96bc1be3/src%2Forg%2Fparosproxy%2Fparos%2Fextension%2Foption%2FOptionsCertificatePanel.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/9a83c2f69387111cc1d122ab913ec1db96bc1be3/src%2Forg%2Fparosproxy%2Fparos%2Fextension%2Foption%2FOptionsCertificatePanel.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fextension%2Foption%2FOptionsCertificatePanel.java?ref=9a83c2f69387111cc1d122ab913ec1db96bc1be3",
      "patch": "@@ -39,6 +39,8 @@\n import javax.swing.JPasswordField;\r\n import javax.swing.filechooser.FileFilter;\r\n \r\n+import org.apache.commons.logging.Log;\r\n+import org.apache.commons.logging.LogFactory;\r\n import org.parosproxy.paros.Constant;\r\n import org.parosproxy.paros.model.Model;\r\n import org.parosproxy.paros.model.OptionsParam;\r\n@@ -95,7 +97,9 @@ public class OptionsCertificatePanel extends AbstractParamPanel implements Obser\n \tprivate DefaultListModel keyStoreListModel;\r\n \tprivate AliasTableModel aliasTableModel;\r\n \tprivate DriverConfiguration driverConfig;\r\n-\r\n+\t\r\n+\tprivate final Log logger = LogFactory.getLog(OptionsCertificatePanel.class);\r\n+\t\r\n \tpublic OptionsCertificatePanel() {\r\n \t\tsuper();\r\n \t\tinitialize();\r\n@@ -504,9 +508,9 @@ private void showActiveCertificateButtonActionPerformed(java.awt.event.ActionEve\n \t}//GEN-LAST:event_showActiveCertificateButtonActionPerformed\r\n \r\n \tprivate void addPkcs11ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPkcs11ButtonActionPerformed\r\n-\r\n+\t\tString name = null;\r\n \t\ttry {\r\n-\t\t\tString name = driverConfig.getNames().get(driverComboBox.getSelectedIndex());;\r\n+\t\t\tname = driverConfig.getNames().get(driverComboBox.getSelectedIndex());;\r\n \t\t\tif (name.equals(\"\")) {\r\n \t\t\t\treturn;\r\n \t\t\t}\r\n@@ -541,7 +545,7 @@ private void addPkcs11ButtonActionPerformed(java.awt.event.ActionEvent evt) {//G\n \t\t\t\t\tConstant.messages.getString(\"options.cert.error\"),\r\n \t\t\t\t\tConstant.messages.getString(\"options.cert.error.password\")}, \r\n \t\t\t\t\tConstant.messages.getString(\"options.cert.label.client.cert\"), JOptionPane.ERROR_MESSAGE);\r\n-\t\t\te.printStackTrace();\r\n+\t\t\tlogger.warn(\"Couldn't add key from \"+name, e);\r\n \t\t\treturn;\r\n \t\t}\r\n \r",
      "parent_sha": "3786f2603c916a3c39d0265953071fe70b856ffc"
    }
  },
  {
    "oid": "9087a184e327ffd77e733f031c834655ed6530f8",
    "message": "Detach Sites tree model when loading the session\n\nChange Session class to set a temporary SiteMap tree model into the\nSites tree just before starting to load the session to reduce the number\nof (unnecessary) events that the view (EDT) has to process (which tend\nto be a high number, when many alerts are added to each site node). The\nSiteMap that contains the loaded data is set into the Sites tree after\nthe loading has finished.\nThe change, slightly, reduces the time it takes to load a session.",
    "date": "2016-08-25T22:05:07Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/9087a184e327ffd77e733f031c834655ed6530f8",
    "details": {
      "sha": "80ad76060f1d329fa41e9544195b74cf9fc6aee8",
      "filename": "src/org/parosproxy/paros/model/Session.java",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/9087a184e327ffd77e733f031c834655ed6530f8/src%2Forg%2Fparosproxy%2Fparos%2Fmodel%2FSession.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/9087a184e327ffd77e733f031c834655ed6530f8/src%2Forg%2Fparosproxy%2Fparos%2Fmodel%2FSession.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fparosproxy%2Fparos%2Fmodel%2FSession.java?ref=9087a184e327ffd77e733f031c834655ed6530f8",
      "patch": "@@ -61,6 +61,7 @@\n // ZAP: 2016/05/24 Call Database.discardSession(long) in Session.discard()\r\n // ZAP: 2016/06/10 Do not clean up the database if the current session does not require it\r\n // ZAP: 2016/07/05 Issue 2218: Persisted Sessions don't save unconfigured Default Context\r\n+// ZAP: 2016/08/25 Detach sites tree model when loading the session\r\n \r\n package org.parosproxy.paros.model;\r\n \r\n@@ -284,6 +285,11 @@ protected void open(String fileName) throws DatabaseException, IOException, Exce\n \t\t\r\n \t\t//historyList.removeAllElements();\r\n \r\n+\t\tif (View.isInitialised()) {\r\n+\t\t\t// Detach the siteTree model from the Sites tree, to reduce notification changes to the UI while loading\r\n+\t\t\tView.getSingleton().getSiteTreePanel().getTreeSite().setModel(new SiteMap(null, null));\r\n+\t\t}\r\n+\r\n     \tif (! Constant.isLowMemoryOptionSet()) {\r\n \t\t\tSiteNode newRoot = new SiteNode(siteTree, -1, Constant.messages.getString(\"tab.sites\"));\r\n \t\t\tsiteTree.setRoot(newRoot);\r\n@@ -461,7 +467,7 @@ public void run() {\n \t\t}\r\n \t\t\r\n \t\tif (View.isInitialised()) {\r\n-\t\t    // ZAP: expand root\r\n+\t\t    View.getSingleton().getSiteTreePanel().getTreeSite().setModel(siteTree);\r\n \t\t    View.getSingleton().getSiteTreePanel().expandRoot();\r\n \t\t}\r\n \t    this.refreshScope();\r",
      "parent_sha": "8388433d0bc63efd6758970bc9425cd353b7877b"
    }
  },
  {
    "oid": "ed7f903fb5cab03cb3fa49c528ef89d3682108aa",
    "message": "Refresh main tool bar after removing components\n\nValidate and repaint the tool bar after removing the components to\nensure the UI is updated immediately (and not left showing the removed\ncomponent more time than it should).",
    "date": "2018-10-10T14:10:10Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/ed7f903fb5cab03cb3fa49c528ef89d3682108aa",
    "details": {
      "sha": "b3ac31a1439f05e6fc319c8d380d2f2d7b3310b0",
      "filename": "src/org/zaproxy/zap/view/MainToolbarPanel.java",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/ed7f903fb5cab03cb3fa49c528ef89d3682108aa/src%2Forg%2Fzaproxy%2Fzap%2Fview%2FMainToolbarPanel.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/ed7f903fb5cab03cb3fa49c528ef89d3682108aa/src%2Forg%2Fzaproxy%2Fzap%2Fview%2FMainToolbarPanel.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fview%2FMainToolbarPanel.java?ref=ed7f903fb5cab03cb3fa49c528ef89d3682108aa",
      "patch": "@@ -161,6 +161,8 @@ public void removeToolBarComponent(Component component) {\n \t\tvalidateComponentNonNull(component);\n \n \t\tgetToolbar().remove(component);\n+\t\tgetToolbar().validate();\n+\t\tgetToolbar().repaint();\n \t}\n \t\n \tpublic void addButton (JButton button) {\n@@ -169,7 +171,7 @@ public void addButton (JButton button) {\n \t}\n \n \tpublic void removeButton(JButton button) {\n-\t\tgetToolbar().remove(button);\n+\t\tremoveToolBarComponent(button);\n \t}\n \n \tpublic void addButton(JToggleButton button) {\n@@ -178,7 +180,7 @@ public void addButton(JToggleButton button) {\n \t}\n \n \tpublic void removeButton(JToggleButton button) {\n-\t\tgetToolbar().remove(button);\n+\t\tremoveToolBarComponent(button);\n \t}\n \n \tpublic void addSeparator() {\n@@ -190,7 +192,7 @@ public void addSeparator(JToolBar.Separator separator) {\n \t}\n \n \tpublic void removeSeparator(JToolBar.Separator separator) {\n-\t\tgetToolbar().remove(separator);\n+\t\tremoveToolBarComponent(separator);\n \t}\n \t\n \tprivate JComboBox<String> getModeSelect() {",
      "parent_sha": "250320521a7a20bef8881119bde4928b9941426e"
    }
  },
  {
    "oid": "f8a5e331c37308b039907e6bfebe6e246dc137d2",
    "message": "PopupMenuHttpMessageContainer: remove dependency on fuzzer classes\n\nThe usage of fuzzer classes was replaced with a hard-coded name which\nthe HTTP fuzzer panels must use.",
    "date": "2015-04-13T05:46:56Z",
    "url": "https://github.com/zaproxy/zaproxy/commit/f8a5e331c37308b039907e6bfebe6e246dc137d2",
    "details": {
      "sha": "00fc3b7e83c8878283ec60f0af9cc1962c06f059",
      "filename": "src/org/zaproxy/zap/view/popup/PopupMenuHttpMessageContainer.java",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/zaproxy/zaproxy/blob/f8a5e331c37308b039907e6bfebe6e246dc137d2/src%2Forg%2Fzaproxy%2Fzap%2Fview%2Fpopup%2FPopupMenuHttpMessageContainer.java",
      "raw_url": "https://github.com/zaproxy/zaproxy/raw/f8a5e331c37308b039907e6bfebe6e246dc137d2/src%2Forg%2Fzaproxy%2Fzap%2Fview%2Fpopup%2FPopupMenuHttpMessageContainer.java",
      "contents_url": "https://api.github.com/repos/zaproxy/zaproxy/contents/src%2Forg%2Fzaproxy%2Fzap%2Fview%2Fpopup%2FPopupMenuHttpMessageContainer.java?ref=f8a5e331c37308b039907e6bfebe6e246dc137d2",
      "patch": "@@ -27,7 +27,6 @@\n import org.parosproxy.paros.control.Control.Mode;\n import org.parosproxy.paros.network.HttpMessage;\n import org.zaproxy.zap.extension.ascan.ActiveScanPanel;\n-import org.zaproxy.zap.extension.fuzz.impl.http.HttpFuzzerContentPanel;\n import org.zaproxy.zap.extension.search.SearchPanel;\n import org.zaproxy.zap.view.popup.PopupMenuUtils;\n import org.zaproxy.zap.view.messagecontainer.MessageContainer;\n@@ -354,7 +353,7 @@ protected final static Invoker getInvoker(HttpMessageContainer httpMessageContai\n         case ActiveScanPanel.MESSAGE_CONTAINER_NAME:\n             invoker = Invoker.ACTIVE_SCANNER_PANEL;\n             break;\n-        case HttpFuzzerContentPanel.PANEL_NAME:\n+        case \"HttpFuzzerResultsContentPanel\":\n             invoker = Invoker.FUZZER_PANEL;\n             break;\n         case \"ForcedBrowseMessageContainer\":",
      "parent_sha": "46679644e710c31be29beefd6f9c0217e2756546"
    }
  }
]