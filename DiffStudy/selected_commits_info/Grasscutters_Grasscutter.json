[
  {
    "oid": "542a3cfc9b70fd09785f1ef2edb0556a1431e0fe",
    "message": "fix scence block loading bug",
    "date": "2022-05-06T20:43:42Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/542a3cfc9b70fd09785f1ef2edb0556a1431e0fe",
    "details": {
      "sha": "5f6a1b7e6122b6eb431b8e32f58d9afededf1b65",
      "filename": "src/main/java/emu/grasscutter/scripts/SceneScriptManager.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/542a3cfc9b70fd09785f1ef2edb0556a1431e0fe/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fscripts%2FSceneScriptManager.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/542a3cfc9b70fd09785f1ef2edb0556a1431e0fe/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fscripts%2FSceneScriptManager.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fscripts%2FSceneScriptManager.java?ref=542a3cfc9b70fd09785f1ef2edb0556a1431e0fe",
      "patch": "@@ -166,7 +166,7 @@ private void init() {\n \t\t\tList<SceneBlock> blocks = ScriptLoader.getSerializer().toList(SceneBlock.class, bindings.get(\"block_rects\"));\n \t\t\t\n \t\t\tfor (int i = 0; i < blocks.size(); i++) {\n-\t\t\t\tSceneBlock block = blocks.get(0);\n+\t\t\t\tSceneBlock block = blocks.get(i);\n \t\t\t\tblock.id = blockIds.get(i);\n \t\t\t\t\n \t\t\t\tloadBlockFromScript(block);",
      "parent_sha": "afa3747fad91c277339a0224f81fb1daa31b94d3"
    }
  },
  {
    "oid": "84d02370df14103f24e01b87392271555a8b2668",
    "message": "Change logging level on item use from info to debug",
    "date": "2022-10-17T08:51:14Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/84d02370df14103f24e01b87392271555a8b2668",
    "details": {
      "sha": "db7a4ce9c7798b20551787b8b952bce2566482ef",
      "filename": "src/main/java/emu/grasscutter/game/systems/InventorySystem.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/84d02370df14103f24e01b87392271555a8b2668/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fsystems%2FInventorySystem.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/84d02370df14103f24e01b87392271555a8b2668/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fsystems%2FInventorySystem.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fsystems%2FInventorySystem.java?ref=84d02370df14103f24e01b87392271555a8b2668",
      "patch": "@@ -734,7 +734,7 @@ public void destroyMaterial(Player player, List<MaterialInfo> list) {\n \n     // Uses an item from the player's inventory.\n     public synchronized GameItem useItem(Player player, long targetGuid, long itemGuid, int count, int optionId, boolean isEnterMpDungeonTeam) {\n-        Grasscutter.getLogger().info(\"Attempting to use item from inventory\");\n+        Grasscutter.getLogger().debug(\"Attempting to use item from inventory\");\n         Avatar target = player.getAvatars().getAvatarByGuid(targetGuid);\n         GameItem item = player.getInventory().getItemByGuid(itemGuid);\n         if (item == null) return null;\n@@ -748,10 +748,10 @@ public synchronized GameItem useItem(Player player, long targetGuid, long itemGu\n             var actions = itemData.getItemUseActions();\n             if (actions != null)\n                 actions.forEach(use -> use.postUseItem(params));\n-            Grasscutter.getLogger().info(\"Item use succeeded!\");\n+            Grasscutter.getLogger().debug(\"Item use succeeded!\");\n             return item;\n         } else {\n-            Grasscutter.getLogger().info(\"Item use failed!\");\n+            Grasscutter.getLogger().debug(\"Item use failed!\");\n             return null;\n         }\n     }\n@@ -791,7 +791,7 @@ public synchronized boolean useItemDirect(ItemData itemData, UseItemParams param\n \n         // Use\n         var actions = itemData.getItemUseActions();\n-        Grasscutter.getLogger().info(\"Using - actions - {}\", actions);\n+        Grasscutter.getLogger().debug(\"Using - actions - {}\", actions);\n         if (actions == null) return true;  // Maybe returning false would be more appropriate?\n         return actions.stream()\n                 .map(use -> use.useItem(params))",
      "parent_sha": "cf67c44f22335890ca4cd39825ab9ca70aab5460"
    }
  },
  {
    "oid": "b5940da36b705c34bf3b093d05346bbd7143b592",
    "message": "Remove stale item handling code",
    "date": "2022-10-18T07:27:49Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/b5940da36b705c34bf3b093d05346bbd7143b592",
    "details": {
      "sha": "38fb268eb56f7e08301de4853c03c6344f343284",
      "filename": "src/main/java/emu/grasscutter/game/inventory/Inventory.java",
      "status": "modified",
      "additions": 2,
      "deletions": 29,
      "changes": 31,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/b5940da36b705c34bf3b093d05346bbd7143b592/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Finventory%2FInventory.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/b5940da36b705c34bf3b093d05346bbd7143b592/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Finventory%2FInventory.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Finventory%2FInventory.java?ref=b5940da36b705c34bf3b093d05346bbd7143b592",
      "patch": "@@ -1,11 +1,8 @@\n package emu.grasscutter.game.inventory;\n \n-import emu.grasscutter.GameConstants;\n+import emu.grasscutter.Grasscutter;\n import emu.grasscutter.data.GameData;\n import emu.grasscutter.data.common.ItemParamData;\n-import emu.grasscutter.data.excels.AvatarCostumeData;\n-import emu.grasscutter.data.excels.AvatarData;\n-import emu.grasscutter.data.excels.AvatarFlycloakData;\n import emu.grasscutter.data.excels.ItemData;\n import emu.grasscutter.database.DatabaseHelper;\n import emu.grasscutter.game.avatar.Avatar;\n@@ -206,34 +203,10 @@ private synchronized GameItem putItem(GameItem item) {\n             default:\n                 switch (item.getItemData().getMaterialType()) {\n                     case MATERIAL_AVATAR:\n-                        // Get avatar id\n-                        int avatarId = (item.getItemId() % 1000) + 10000000;\n-                        // Dont let people give themselves extra main characters\n-                        if (avatarId == GameConstants.MAIN_CHARACTER_MALE || avatarId == GameConstants.MAIN_CHARACTER_FEMALE) {\n-                            return null;\n-                        }\n-                        // Add avatar\n-                        AvatarData avatarData = GameData.getAvatarDataMap().get(avatarId);\n-                        if (avatarData != null && !this.player.getAvatars().hasAvatar(avatarId)) {\n-                            this.player.addAvatar(new Avatar(avatarData));\n-                        }\n-                        return null;\n                     case MATERIAL_FLYCLOAK:\n-                        AvatarFlycloakData flycloakData = GameData.getAvatarFlycloakDataMap().get(item.getItemId());\n-                        if (flycloakData != null && !this.player.getFlyCloakList().contains(item.getItemId())) {\n-                            this.player.addFlycloak(item.getItemId());\n-                        }\n-                        return null;\n                     case MATERIAL_COSTUME:\n-                        AvatarCostumeData costumeData = GameData.getAvatarCostumeDataItemIdMap().get(item.getItemId());\n-                        if (costumeData != null && !this.player.getCostumeList().contains(costumeData.getId())) {\n-                            this.player.addCostume(costumeData.getId());\n-                        }\n-                        return null;\n                     case MATERIAL_NAMECARD:\n-                        if (!this.player.getNameCardList().contains(item.getItemId())) {\n-                            this.player.addNameCard(item.getItemId());\n-                        }\n+                        Grasscutter.getLogger().warn(\"Attempted to add a \"+item.getItemData().getMaterialType().name()+\" to inventory, but item definition lacks isUseOnGain. This indicates a Resources error.\");\n                         return null;\n                     default:\n                         if (tab == null) {",
      "parent_sha": "aacf013c065db9b2daa14be83e475a66dab9be0a"
    }
  },
  {
    "oid": "b05a5f85f625de524af1be56133430de62ac84b9",
    "message": "fix permission command",
    "date": "2022-05-15T04:06:57Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/b05a5f85f625de524af1be56133430de62ac84b9",
    "details": {
      "sha": "436e98f4bf5cb4ed1b2ade15a346b9f481227e63",
      "filename": "src/main/java/emu/grasscutter/command/commands/PermissionCommand.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/b05a5f85f625de524af1be56133430de62ac84b9/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FPermissionCommand.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/b05a5f85f625de524af1be56133430de62ac84b9/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FPermissionCommand.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FPermissionCommand.java?ref=b05a5f85f625de524af1be56133430de62ac84b9",
      "patch": "@@ -10,7 +10,7 @@\n \n import static emu.grasscutter.utils.Language.translate;\n \n-@Command(label = \"permission\", usage = \"permission <add|remove> <permission>\", permission = \"*\", description = \"commands.permission.description\")\n+@Command(label = \"permission\", usage = \"permission <add|remove> <permission>\", permission = \"permission\", description = \"commands.permission.description\")\n public final class PermissionCommand implements CommandHandler {\n \n     @Override",
      "parent_sha": "3a216bf1bb8f0b9bf255d9a047dc34a0f1859c2a"
    }
  },
  {
    "oid": "15dca5a04ddbc3720da465ecb96159af61421c3b",
    "message": "GiveCommand: fix edge case with unspaced multiple args (#539)\n\nCo-authored-by: AnimeGitB <AnimeGitB@bigblueball.in>",
    "date": "2022-05-05T13:23:48Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/15dca5a04ddbc3720da465ecb96159af61421c3b",
    "details": {
      "sha": "f3f2adc17fdd474c2b2c88e80bc21d3dedc0f160",
      "filename": "src/main/java/emu/grasscutter/command/commands/GiveCommand.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/15dca5a04ddbc3720da465ecb96159af61421c3b/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FGiveCommand.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/15dca5a04ddbc3720da465ecb96159af61421c3b/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FGiveCommand.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FGiveCommand.java?ref=15dca5a04ddbc3720da465ecb96159af61421c3b",
      "patch": "@@ -20,7 +20,7 @@\n public final class GiveCommand implements CommandHandler {\n     Pattern lvlRegex = Pattern.compile(\"l(?:vl?)?(\\\\d+)\");  // Java is a joke of a proglang that doesn't have raw string literals\n     Pattern refineRegex = Pattern.compile(\"r(\\\\d+)\");\n-    Pattern amountRegex = Pattern.compile(\"((?<=x)\\\\d+|\\\\d+(?=x))\");\n+    Pattern amountRegex = Pattern.compile(\"((?<=x)\\\\d+|\\\\d+(?=x)(?!x\\\\d))\");\n \n     private int matchIntOrNeg(Pattern pattern, String arg) {\n         Matcher match = pattern.matcher(arg);",
      "parent_sha": "e693612ed1558647b3f75a0560ebbbf887eebd51"
    }
  },
  {
    "oid": "0e3a80407ef24dbcf9b0fe6e5ca5f61eef800e3f",
    "message": "Added missing isGiftMail section to GetAllMailRsp",
    "date": "2022-04-27T13:11:57Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/0e3a80407ef24dbcf9b0fe6e5ca5f61eef800e3f",
    "details": {
      "sha": "59af30f4209803451f78d463059c174004272c83",
      "filename": "src/main/java/emu/grasscutter/server/packet/send/PacketGetAllMailRsp.java",
      "status": "modified",
      "additions": 5,
      "deletions": 23,
      "changes": 28,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/0e3a80407ef24dbcf9b0fe6e5ca5f61eef800e3f/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fpacket%2Fsend%2FPacketGetAllMailRsp.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/0e3a80407ef24dbcf9b0fe6e5ca5f61eef800e3f/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fpacket%2Fsend%2FPacketGetAllMailRsp.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fpacket%2Fsend%2FPacketGetAllMailRsp.java?ref=0e3a80407ef24dbcf9b0fe6e5ca5f61eef800e3f",
      "patch": "@@ -14,32 +14,23 @@\n \n import java.time.Instant;\n import java.util.ArrayList;\n-import java.util.Base64;\n import java.util.List;\n \n public class PacketGetAllMailRsp extends BasePacket {\n \n     public PacketGetAllMailRsp(Player player, boolean isGiftMail) {\n         super(PacketOpcodes.GetAllMailRsp);\n+        GetAllMailRsp.Builder proto = GetAllMailRsp.newBuilder();\n \n         if (isGiftMail) {\n-            // TODO: Gift Mail\n-            // Make sure to send the stupid empty packet\n-            Base64.Decoder decoder = Base64.getDecoder();\n-            byte[] rsp = decoder.decode(\"IAE=\");\n-            try {\n-                GetAllMailRsp var = GetAllMailRsp.parseFrom(rsp);\n-                this.setData(var.toBuilder().build());\n-            } catch (Exception e) {\n-            }\n-\n+            proto.setIsGiftMail(true);\n         } else {\n+            proto.setIsGiftMail(false);\n+\n             if (player.getAllMail().size() != 0) { // Make sure the player has mail\n-                GetAllMailRsp.Builder proto = GetAllMailRsp.newBuilder();\n                 List<MailData> mailDataList = new ArrayList<MailData>();\n \n                 for (Mail message : player.getAllMail()) {\n-\n                     if(message.stateValue == 1) { // Make sure it isn't a gift\n                         if (message.expireTime > (int) Instant.now().getEpochSecond()) { // Make sure the message isn't expired (The game won't show expired mail, but I don't want to send unnecessary information).\n                             if(mailDataList.size() <= 1000) { // Make sure that there isn't over 1000 messages in the mailbox. (idk what will happen if there is but the game probably won't like it.)\n@@ -79,17 +70,8 @@ public PacketGetAllMailRsp(Player player, boolean isGiftMail) {\n \n                 proto.addAllMailList(mailDataList);\n                 proto.setIsTruncated(mailDataList.size() <= 1000 ? false : true); // When enabled this will send a notification to the user telling them their inbox is full and they should delete old messages when opening the mailbox.\n-\n-                this.setData(proto.build());\n-            } else {\n-                // Make sure to send the stupid empty packet\n-                Base64.Decoder decoder = Base64.getDecoder();\n-                byte[] rsp = decoder.decode(\"IAE=\");\n-                try {\n-                    GetAllMailRsp var = GetAllMailRsp.parseFrom(rsp);\n-                    this.setData(var.toBuilder().build());\n-                } catch (Exception e) {}\n             }\n         }\n+        this.setData(proto.build());\n     }\n }",
      "parent_sha": "d1fc8c1faae78f03f0bc94f40b702b49807e539d"
    }
  },
  {
    "oid": "cb15a5dec90f46d697c8441a7a48a671db3f31c6",
    "message": "Deregister scenes if no one is in them instead of deregistering when no entities are in them",
    "date": "2022-04-29T10:09:17Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/cb15a5dec90f46d697c8441a7a48a671db3f31c6",
    "details": {
      "sha": "e886d135b356c48278668dffd8c6cf44ae6b12e3",
      "filename": "src/main/java/emu/grasscutter/game/world/Scene.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/cb15a5dec90f46d697c8441a7a48a671db3f31c6/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fworld%2FScene.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/cb15a5dec90f46d697c8441a7a48a671db3f31c6/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fworld%2FScene.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fworld%2FScene.java?ref=cb15a5dec90f46d697c8441a7a48a671db3f31c6",
      "patch": "@@ -225,7 +225,7 @@ public synchronized void removePlayer(Player player) {\n \t\t}\n \t\t\n \t\t// Deregister scene if not in use\n-\t\tif (this.getEntities().size() <= 0 && !this.dontDestroyWhenEmpty()) {\n+\t\tif (this.getPlayerCount() <= 0 && !this.dontDestroyWhenEmpty()) {\n \t\t\tthis.getWorld().deregisterScene(this);\n \t\t}\n \t}",
      "parent_sha": "ffc1f801e6cab1bd470aa9c674532f108362c8ed"
    }
  },
  {
    "oid": "d6fa05915f5d4ad570f6e76dccd5150e7ebf6f43",
    "message": "Monsters should drop items in world (#373)\n\n* Monsters should drop items in world\r\n\r\nfix the typo introduced in https://github.com/Grasscutters/Grasscutter/pull/366/commits/f1934c3a47d6c7ef888581bcf7f361d063154215\r\n\r\n* Determine whether in dungeon scene",
    "date": "2022-04-30T11:18:09Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/d6fa05915f5d4ad570f6e76dccd5150e7ebf6f43",
    "details": {
      "sha": "440ec73160b5ecdc256bf45591940f409a429129",
      "filename": "src/main/java/emu/grasscutter/game/world/Scene.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/d6fa05915f5d4ad570f6e76dccd5150e7ebf6f43/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fworld%2FScene.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/d6fa05915f5d4ad570f6e76dccd5150e7ebf6f43/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fworld%2FScene.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fworld%2FScene.java?ref=d6fa05915f5d4ad570f6e76dccd5150e7ebf6f43",
      "patch": "@@ -375,7 +375,7 @@ public void killEntity(GameEntity target, int attackerId) {\n \t\tthis.broadcastPacket(new PacketLifeStateChangeNotify(attackerId, target, LifeState.LIFE_DEAD));\n \n \t\t// Reward drop\n-\t\tif (target instanceof EntityMonster && this.getSceneType() != SceneType.SCENE_WORLD) {\n+\t\tif (target instanceof EntityMonster && this.getSceneType() != SceneType.SCENE_DUNGEON) {\n \t\t\tgetWorld().getServer().getDropManager().callDrop((EntityMonster) target);\n \t\t}\n ",
      "parent_sha": "7b991d7b4e8a6e765bb9e10ae28b8e27211397e5"
    }
  },
  {
    "oid": "ac3ccf93f34c9051cdae7938a148b0da497d2dd2",
    "message": "Little fix",
    "date": "2023-06-04T04:27:15Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/ac3ccf93f34c9051cdae7938a148b0da497d2dd2",
    "details": {
      "sha": "d999106a670defbb7f6e01e774bb71e380e807f8",
      "filename": "src/main/java/emu/grasscutter/data/binout/AbilityModifier.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/ac3ccf93f34c9051cdae7938a148b0da497d2dd2/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fdata%2Fbinout%2FAbilityModifier.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/ac3ccf93f34c9051cdae7938a148b0da497d2dd2/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fdata%2Fbinout%2FAbilityModifier.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fdata%2Fbinout%2FAbilityModifier.java?ref=ac3ccf93f34c9051cdae7938a148b0da497d2dd2",
      "patch": "@@ -329,7 +329,7 @@ public enum Type {\n \n         public int dropType;\n         public DynamicFloat baseEnergy;\n-        public DynamicFloat ratio;\n+        public DynamicFloat ratio = DynamicFloat.ONE;\n         public int configID;\n \n         public int param1;",
      "parent_sha": "01677090700ae4246d0e971b6226ce48e28aa27a"
    }
  },
  {
    "oid": "d11413c0170ef6b2d4fa258ca7e7714f560320d1",
    "message": "Add dispatch server log prefix\n\nSigned-off-by: Jaida Wu <mlgmxyysd@meowcat.org>",
    "date": "2022-04-21T16:02:02Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/d11413c0170ef6b2d4fa258ca7e7714f560320d1",
    "details": {
      "sha": "5b46f9def9624602ed4ef0b62b7dc9ed1ef9fa21",
      "filename": "src/main/java/emu/grasscutter/server/dispatch/DispatchServer.java",
      "status": "modified",
      "additions": 17,
      "deletions": 17,
      "changes": 34,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/d11413c0170ef6b2d4fa258ca7e7714f560320d1/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fdispatch%2FDispatchServer.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/d11413c0170ef6b2d4fa258ca7e7714f560320d1/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fdispatch%2FDispatchServer.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fdispatch%2FDispatchServer.java?ref=d11413c0170ef6b2d4fa258ca7e7714f560320d1",
      "patch": "@@ -67,14 +67,14 @@ public void loadQueries() {\n \t\tif (file.exists()) {\n \t\t\tquery_region_list = new String(FileUtils.read(file));\n \t\t} else {\n-\t\t\tGrasscutter.getLogger().warn(\"query_region_list not found! Using default region list.\");\n+\t\t\tGrasscutter.getLogger().warn(\"[Dispatch] query_region_list not found! Using default region list.\");\n \t\t}\n \n \t\tfile = new File(Grasscutter.getConfig().DATA_FOLDER + \"query_cur_region.txt\");\n \t\tif (file.exists()) {\n \t\t\tquery_cur_region = new String(FileUtils.read(file));\n \t\t} else {\n-\t\t\tGrasscutter.getLogger().warn(\"query_cur_region not found! Using default current region.\");\n+\t\t\tGrasscutter.getLogger().warn(\"[Dispatch] query_cur_region not found! Using default current region.\");\n \t\t}\n \t}\n \n@@ -120,7 +120,7 @@ private void initRegion() {\n \t\t\tthis.regionCurrentBase64 = Base64.getEncoder().encodeToString(parsedRegionQuery.toByteString().toByteArray());\n \t\t\tthis.currRegion = parsedRegionQuery;\n \t\t} catch (Exception e) {\n-\t\t\tGrasscutter.getLogger().error(\"Error while initializing region info!\", e);\n+\t\t\tGrasscutter.getLogger().error(\"[Dispatch] Error while initializing region info!\", e);\n \t\t}\n \t}\n \n@@ -142,7 +142,7 @@ public void start() throws Exception {\n \t\t\t\thttpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n \t\t\t\tserver = httpsServer;\n \t\t\t} catch (Exception e) {\n-\t\t\t\tGrasscutter.getLogger().error(\"No SSL cert found! Falling back to HTTP server.\");\n+\t\t\t\tGrasscutter.getLogger().warn(\"[Dispatch] No SSL cert found! Falling back to HTTP server.\");\n \t\t\t\tGrasscutter.getConfig().UseSSL = false;\n \t\t\t\tserver = HttpServer.create(getAddress(), 0);\n \t\t\t}\n@@ -155,13 +155,13 @@ public void start() throws Exception {\n \t\t// Dispatch\n \t\tserver.createContext(\"/query_region_list\", t -> {\n \t\t\t// Log\n-\t\t\tGrasscutter.getLogger().info(String.format(\"Client %s request: query_region_list\", t.getRemoteAddress()));\n+\t\t\tGrasscutter.getLogger().info(String.format(\"[Dispatch] Client %s request: query_region_list\", t.getRemoteAddress()));\n \n \t\t\tresponseHTML(t, regionListBase64);\n \t\t});\n \t\tserver.createContext(\"/query_cur_region\", t -> {\n \t\t\t// Log\n-\t\t\tGrasscutter.getLogger().info(String.format(\"Client %s request: query_cur_region\", t.getRemoteAddress()));\n+\t\t\tGrasscutter.getLogger().info(String.format(\"[Dispatch] Client %s request: query_cur_region\", t.getRemoteAddress()));\n \t\t\t// Create a response form the request query parameters\n \t\t\tURI uri = t.getRequestURI();\n \t\t\tString response = \"CAESGE5vdCBGb3VuZCB2ZXJzaW9uIGNvbmZpZw==\";\n@@ -186,7 +186,7 @@ public void start() throws Exception {\n \t\t\t}\n \t\t\tLoginResultJson responseData = new LoginResultJson();\n \n-\t\t\tGrasscutter.getLogger().info(String.format(\"Client %s is trying to log in\", t.getRemoteAddress()));\n+\t\t\tGrasscutter.getLogger().info(String.format(\"[Dispatch] Client %s is trying to log in\", t.getRemoteAddress()));\n \n \t\t\t// Login\n \t\t\tAccount account = DatabaseHelper.getAccountByName(requestData.account);\n@@ -204,18 +204,18 @@ public void start() throws Exception {\n \t\t\t\t\t\tresponseData.data.account.token = account.generateSessionKey();\n \t\t\t\t\t\tresponseData.data.account.email = account.getEmail();\n \n-\t\t\t\t\t\tGrasscutter.getLogger().info(String.format(\"Client %s failed to log in: Account %s created\", t.getRemoteAddress(), responseData.data.account.uid));\n+\t\t\t\t\t\tGrasscutter.getLogger().info(String.format(\"[Dispatch] Client %s failed to log in: Account %s created\", t.getRemoteAddress(), responseData.data.account.uid));\n \t\t\t\t\t} else {\n \t\t\t\t\t\tresponseData.retcode = -201;\n \t\t\t\t\t\tresponseData.message = \"Username not found, create failed.\";\n \n-\t\t\t\t\t\tGrasscutter.getLogger().info(String.format(\"Client %s failed to log in: Account create failed\", t.getRemoteAddress()));\n+\t\t\t\t\t\tGrasscutter.getLogger().info(String.format(\"[Dispatch] Client %s failed to log in: Account create failed\", t.getRemoteAddress()));\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tresponseData.retcode = -201;\n \t\t\t\t\tresponseData.message = \"Username not found.\";\n \n-\t\t\t\t\tGrasscutter.getLogger().info(String.format(\"Client %s failed to log in: Account no found\", t.getRemoteAddress()));\n+\t\t\t\t\tGrasscutter.getLogger().info(String.format(\"[Dispatch] Client %s failed to log in: Account no found\", t.getRemoteAddress()));\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\t// Account was found, log the player in\n@@ -224,7 +224,7 @@ public void start() throws Exception {\n \t\t\t\tresponseData.data.account.token = account.generateSessionKey();\n \t\t\t\tresponseData.data.account.email = account.getEmail();\n \n-\t\t\t\tGrasscutter.getLogger().info(String.format(\"Client %s logged in as %s\", t.getRemoteAddress(), responseData.data.account.uid));\n+\t\t\t\tGrasscutter.getLogger().info(String.format(\"[Dispatch] Client %s logged in as %s\", t.getRemoteAddress(), responseData.data.account.uid));\n \t\t\t}\n \n \t\t\tresponseJSON(t, responseData);\n@@ -244,7 +244,7 @@ public void start() throws Exception {\n \t\t\t\treturn;\n \t\t\t}\n \t\t\tLoginResultJson responseData = new LoginResultJson();\n-\t\t\tGrasscutter.getLogger().info(String.format(\"Client %s is trying to log in via token\", t.getRemoteAddress()));\n+\t\t\tGrasscutter.getLogger().info(String.format(\"[Dispatch] Client %s is trying to log in via token\", t.getRemoteAddress()));\n \n \t\t\t// Login\n \t\t\tAccount account = DatabaseHelper.getAccountById(requestData.uid);\n@@ -254,14 +254,14 @@ public void start() throws Exception {\n \t\t\t\tresponseData.retcode = -111;\n \t\t\t\tresponseData.message = \"Game account cache information error\";\n \n-\t\t\t\tGrasscutter.getLogger().info(String.format(\"Client %s failed to log in via token\", t.getRemoteAddress()));\n+\t\t\t\tGrasscutter.getLogger().info(String.format(\"[Dispatch] Client %s failed to log in via token\", t.getRemoteAddress()));\n \t\t\t} else {\n \t\t\t\tresponseData.message = \"OK\";\n \t\t\t\tresponseData.data.account.uid = requestData.uid;\n \t\t\t\tresponseData.data.account.token = requestData.token;\n \t\t\t\tresponseData.data.account.email = account.getEmail();\n \n-\t\t\t\tGrasscutter.getLogger().info(String.format(\"Client %s logged in via token as %s\", t.getRemoteAddress(), responseData.data.account.uid));\n+\t\t\t\tGrasscutter.getLogger().info(String.format(\"[Dispatch] Client %s logged in via token as %s\", t.getRemoteAddress(), responseData.data.account.uid));\n \t\t\t}\n \n \t\t\tresponseJSON(t, responseData);\n@@ -290,14 +290,14 @@ public void start() throws Exception {\n \t\t\t\tresponseData.retcode = -201;\n \t\t\t\tresponseData.message = \"Wrong session key.\";\n \n-\t\t\t\tGrasscutter.getLogger().info(String.format(\"Client %s failed to exchange combo token\", t.getRemoteAddress()));\n+\t\t\t\tGrasscutter.getLogger().info(String.format(\"[Dispatch] Client %s failed to exchange combo token\", t.getRemoteAddress()));\n \t\t\t} else {\n \t\t\t\tresponseData.message = \"OK\";\n \t\t\t\tresponseData.data.open_id = loginData.uid;\n \t\t\t\tresponseData.data.combo_id = \"157795300\";\n \t\t\t\tresponseData.data.combo_token = account.generateLoginToken();\n \n-\t\t\t\tGrasscutter.getLogger().info(String.format(\"Client %s succeed to exchange combo token\", t.getRemoteAddress()));\n+\t\t\t\tGrasscutter.getLogger().info(String.format(\"[Dispatch] Client %s succeed to exchange combo token\", t.getRemoteAddress()));\n \t\t\t}\n \n \t\t\tresponseJSON(t, responseData);\n@@ -382,7 +382,7 @@ public void start() throws Exception {\n \t\tserver.createContext(\"/gacha\", t -> responseHTML(t, \"<!doctype html><html lang=\\\"en\\\"><head><title>Gacha</title></head><body></body></html>\"));\n \t\t// Start server\n \t\tserver.start();\n-\t\tGrasscutter.getLogger().info(\"Dispatch server started on port \" + getAddress().getPort());\n+\t\tGrasscutter.getLogger().info(\"[Dispatch] Dispatch server started on port \" + getAddress().getPort());\n \t}\n \n \tprivate void responseJSON(HttpExchange t, Object data) throws IOException {",
      "parent_sha": "1143886b091a3ee88708da9f2176315b1f1239d3"
    }
  },
  {
    "oid": "dde5a609fb1cda85931d84eb1052a40d35d285d8",
    "message": "GameServerPacketHandler need to be added a registration interface for plugin developers",
    "date": "2022-05-01T17:02:57Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/dde5a609fb1cda85931d84eb1052a40d35d285d8",
    "details": {
      "sha": "dbead5240f4f38bb0cbd6d6d8798a62e89986bd3",
      "filename": "src/main/java/emu/grasscutter/server/game/GameServerPacketHandler.java",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/dde5a609fb1cda85931d84eb1052a40d35d285d8/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fgame%2FGameServerPacketHandler.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/dde5a609fb1cda85931d84eb1052a40d35d285d8/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fgame%2FGameServerPacketHandler.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fgame%2FGameServerPacketHandler.java?ref=dde5a609fb1cda85931d84eb1052a40d35d285d8",
      "patch": "@@ -22,7 +22,11 @@ public GameServerPacketHandler(Class<? extends PacketHandler> handlerClass) {\n \t\t\n \t\tthis.registerHandlers(handlerClass);\n \t}\n-\t\n+\n+\tpublic void registerPacketHandler(int opcode, PacketHandler handler) {\n+\t\tthis.handlers.put(opcode, handler);\n+\t}\n+\n \tpublic void registerHandlers(Class<? extends PacketHandler> handlerClass) {\n \t\tReflections reflections = new Reflections(\"emu.grasscutter.server.packet\");\n \t\tSet<?> handlerClasses = reflections.getSubTypesOf(handlerClass);",
      "parent_sha": "677aa2d2c4be26e4617621b06693dfcdf42de8a1"
    }
  },
  {
    "oid": "4870871b2cb8e1c673319e689744c957e75fd077",
    "message": "Move rewind data logger call to `debug`",
    "date": "2023-06-01T18:27:38Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/4870871b2cb8e1c673319e689744c957e75fd077",
    "details": {
      "sha": "2814b09ea2daf1a1d46c667b4f62336ef8859f11",
      "filename": "src/main/java/emu/grasscutter/game/quest/GameMainQuest.java",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/4870871b2cb8e1c673319e689744c957e75fd077/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fquest%2FGameMainQuest.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/4870871b2cb8e1c673319e689744c957e75fd077/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fquest%2FGameMainQuest.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fquest%2FGameMainQuest.java?ref=4870871b2cb8e1c673319e689744c957e75fd077",
      "patch": "@@ -16,11 +16,12 @@\n import emu.grasscutter.net.proto.ParentQuestOuterClass.ParentQuest;\n import emu.grasscutter.server.packet.send.*;\n import emu.grasscutter.utils.ConversionUtils;\n-import java.util.*;\n-import java.util.stream.Collectors;\n import lombok.*;\n import org.bson.types.ObjectId;\n \n+import java.util.*;\n+import java.util.stream.Collectors;\n+\n @Entity(value = \"quests\", useDiscriminator = false)\n public class GameMainQuest {\n     @Id private ObjectId id;\n@@ -314,7 +315,7 @@ public boolean hasRewindPosition(int subId, List<Position> posAndRot) {\n                 0, new Position(avatarPosPos.get(0), avatarPosPos.get(1), avatarPosPos.get(2))); // position\n         posAndRot.add(\n                 1, new Position(avatarPosRot.get(0), avatarPosRot.get(1), avatarPosRot.get(2))); // rotation\n-        Grasscutter.getLogger().info(\"Succesfully loaded rewind data for subQuest {}\", subId);\n+        Grasscutter.getLogger().debug(\"Successfully loaded rewind data for quest {}.\", subId);\n         return true;\n     }\n ",
      "parent_sha": "2c7c8bf4fd94daf800ef42addf26014e86fc5e3b"
    }
  },
  {
    "oid": "c728b9f5fe5196fe6daff6975d63717d83e550f6",
    "message": "Attempt to fix `!givechar`",
    "date": "2022-04-19T14:31:24Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/c728b9f5fe5196fe6daff6975d63717d83e550f6",
    "details": {
      "sha": "b6401740d669a2a2ea0276acd384e783064b658b",
      "filename": "src/main/java/emu/grasscutter/commands/PlayerCommands.java",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/c728b9f5fe5196fe6daff6975d63717d83e550f6/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommands%2FPlayerCommands.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/c728b9f5fe5196fe6daff6975d63717d83e550f6/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommands%2FPlayerCommands.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommands%2FPlayerCommands.java?ref=c728b9f5fe5196fe6daff6975d63717d83e550f6",
      "patch": "@@ -186,12 +186,12 @@ public void execute(GenshinPlayer player, List<String> args) {\n     }\n \n     @Command(label = \"givechar\", aliases = {\"givec\"}, \n-            usage = \"Usage: givechar <player|avatarId> [avatarId] [level]\")\n+            usage = \"Usage: givechar <player|avatarId> [level|avatarId] [level]\")\n     public static class GiveCharCommand implements CommandHandler {\n         @Override public void execute(GenshinPlayer player, List<String> args) {\n             int target, avatarId, level = 1, ascension = 1;\n \n-            if(args.size() < 2) {\n+            if(args.size() < 1) {\n                 CommandHandler.sendMessage(player, \"Usage: givechar <player> <avatarId> [level]\");\n                 return;\n             }\n@@ -204,7 +204,8 @@ public static class GiveCharCommand implements CommandHandler {\n                     try {\n                         target = Integer.parseInt(args.get(0));\n                         if(Grasscutter.getGameServer().getPlayerByUid(target) == null) {\n-                            target = player.getUid(); level = Integer.parseInt(args.get(1));\n+                            target = player.getUid(); \n+                            level = Integer.parseInt(args.get(1));\n                             avatarId = Integer.parseInt(args.get(0));\n                         } else {\n                             avatarId = Integer.parseInt(args.get(1));",
      "parent_sha": "69cb03f4d4c4b03c03fc327bdb649ce4580608f4"
    }
  },
  {
    "oid": "ddc082fc9722da6ceeb805519441d5a0bfb4b24a",
    "message": "Everything triggers regions (#2271)\n\n* Everything triggers regions\r\n\r\n* hotfix",
    "date": "2023-07-23T03:17:33Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/ddc082fc9722da6ceeb805519441d5a0bfb4b24a",
    "details": {
      "sha": "8d897306f9b7058f5729b668e1fb062296298166",
      "filename": "src/main/java/emu/grasscutter/scripts/SceneScriptManager.java",
      "status": "modified",
      "additions": 13,
      "deletions": 20,
      "changes": 33,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/ddc082fc9722da6ceeb805519441d5a0bfb4b24a/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fscripts%2FSceneScriptManager.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/ddc082fc9722da6ceeb805519441d5a0bfb4b24a/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fscripts%2FSceneScriptManager.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fscripts%2FSceneScriptManager.java?ref=ddc082fc9722da6ceeb805519441d5a0bfb4b24a",
      "patch": "@@ -10,7 +10,7 @@\n import emu.grasscutter.database.DatabaseHelper;\n import emu.grasscutter.game.entity.*;\n import emu.grasscutter.game.entity.gadget.platform.BaseRoute;\n-import emu.grasscutter.game.props.EntityType;\n+import emu.grasscutter.game.props.EntityIdType;\n import emu.grasscutter.game.quest.*;\n import emu.grasscutter.game.world.*;\n import emu.grasscutter.net.proto.VisionTypeOuterClass;\n@@ -634,27 +634,24 @@ public void checkRegions() {\n             var entities =\n                     getScene().getEntities().values().stream()\n                             .filter(\n-                                    e ->\n-                                            e.getEntityType() == EntityType.Avatar\n-                                                    && region.getMetaRegion().contains(e.getPosition()))\n+                                    e -> \n+                                            region.getMetaRegion().contains(e.getPosition()))\n                             .toList();\n-            entities.forEach(region::addEntity);\n \n-            var targetId = 0;\n-            if (entities.size() > 0) {\n-                targetId = entities.get(0).getId();\n-            }\n+            var entitiesIds = entities.stream().map(GameEntity::getId).toList();\n+            var enterEntities = entitiesIds.stream().filter(e -> !region.getEntities().contains(e)).toList();\n+            var leaveEntities = region.getEntities().stream().filter(e -> !entitiesIds.contains(e)).toList();\n+\n+            entities.forEach(region::addEntity);\n \n-            if (region.entityHasEntered()) {\n+            for (var targetId : enterEntities){\n                 Grasscutter.getLogger()\n                         .trace(\"Call EVENT_ENTER_REGION_{}\", region.getMetaRegion().config_id);\n                 this.callEvent(\n                         new ScriptArgs(region.getGroupId(), EventType.EVENT_ENTER_REGION, region.getConfigId())\n-                                .setEventSource(EntityType.Avatar.getValue())\n+                                .setEventSource(EntityIdType.toEntityType(targetId>>24).getValue())\n                                 .setSourceEntityId(region.getId())\n                                 .setTargetEntityId(targetId));\n-\n-                region.resetNewEntities();\n             }\n \n             for (var entityId : region.getEntities()) {\n@@ -664,14 +661,12 @@ public void checkRegions() {\n                 }\n             }\n \n-            if (region.entityHasLeft()) {\n+            for (var targetId : leaveEntities) {\n                 this.callEvent(\n                         new ScriptArgs(region.getGroupId(), EventType.EVENT_LEAVE_REGION, region.getConfigId())\n-                                .setEventSource(EntityType.Avatar.getValue())\n+                                .setEventSource(EntityIdType.toEntityType(targetId>>24).getValue())\n                                 .setSourceEntityId(region.getId())\n-                                .setTargetEntityId(region.getFirstEntityId()));\n-\n-                region.resetNewEntities();\n+                                .setTargetEntityId(targetId));\n             }\n         }\n     }\n@@ -899,15 +894,13 @@ private void callTrigger(SceneTrigger trigger, ScriptArgs params) {\n                             .toList()\n                             .get(0);\n             this.getScene().getPlayers().forEach(p -> p.onEnterRegion(region.getMetaRegion()));\n-            this.deregisterRegion(region.getMetaRegion());\n         } else if (trigger.getEvent() == EventType.EVENT_LEAVE_REGION) {\n             var region =\n                     this.regions.values().stream()\n                             .filter(p -> p.getConfigId() == params.param1)\n                             .toList()\n                             .get(0);\n             this.getScene().getPlayers().forEach(p -> p.onLeaveRegion(region.getMetaRegion()));\n-            this.deregisterRegion(region.getMetaRegion());\n         }\n \n         if (trigger.getEvent() == EVENT_TIMER_EVENT) {",
      "parent_sha": "0b806e21cf08014c3572dc4e903258cc3b56f545"
    }
  },
  {
    "oid": "da06982d5d4598b843442cdaa2630123bb5e40d3",
    "message": "3.0 Opcodes",
    "date": "2022-08-24T02:04:26Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/da06982d5d4598b843442cdaa2630123bb5e40d3",
    "details": {
      "sha": "69c4b37c0b32d967bd3f34a299a83ab3213ee2d1",
      "filename": "src/main/java/emu/grasscutter/net/packet/PacketOpcodes.java",
      "status": "modified",
      "additions": 74,
      "deletions": 4,
      "changes": 78,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/da06982d5d4598b843442cdaa2630123bb5e40d3/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fnet%2Fpacket%2FPacketOpcodes.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/da06982d5d4598b843442cdaa2630123bb5e40d3/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fnet%2Fpacket%2FPacketOpcodes.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fnet%2Fpacket%2FPacketOpcodes.java?ref=da06982d5d4598b843442cdaa2630123bb5e40d3",
      "patch": "@@ -1,10 +1,11 @@\n+\n package emu.grasscutter.net.packet;\n \n public class PacketOpcodes {\n-  // Empty\n-    public static final int  NONE = 0;\n+    // Empty\n+    public static final int NONE = 0;\n \n-  // Opcodes\n+    // Opcodes\n     public static final int AbilityChangeNotify = 1131;\n     public static final int AbilityInvocationFailNotify = 1107;\n     public static final int AbilityInvocationFixedNotify = 1172;\n@@ -1774,6 +1775,76 @@ public class PacketOpcodes {\n     public static final int Unk2800_OFIHDGFMDGB = 171;\n     public static final int Unk2800_OMGNOBICOCD = 843;\n     public static final int Unk2800_OOKIPFHPJMG = 21054;\n+    public static final int Unk3000_ACNMEFGKHKO = 4622;\n+    public static final int Unk3000_AFMFIPPDAJE = 4576;\n+    public static final int Unk3000_AGDEGMCKIAF = 20702;\n+    public static final int Unk3000_BMLKKNEINNF = 1481;\n+    public static final int Unk3000_CMKEPEDFOKE = 22391;\n+    public static final int Unk3000_CNDHIGKNELM = 6173;\n+    public static final int Unk3000_CPCMICDDBCH = 20011;\n+    public static final int Unk3000_DCAHJINNNDM = 23107;\n+    public static final int Unk3000_DCLAGIJJEHB = 402;\n+    public static final int Unk3000_DFIIBIGPHGE = 1731;\n+    public static final int Unk3000_DHEOMDCCMMC = 429;\n+    public static final int Unk3000_DHOFMKPKFMF = 1749;\n+    public static final int Unk3000_DJNBNBMIECP = 5588;\n+    public static final int Unk3000_DLCDJPKNGBD = 185;\n+    public static final int Unk3000_DPEJONKFONL = 21750;\n+    public static final int Unk3000_EBNMMLENEII = 24857;\n+    public static final int Unk3000_EDGJEBLODLF = 416;\n+    public static final int Unk3000_EHJALCDEBKK = 23381;\n+    public static final int Unk3000_EMGMOECAJDK = 6092;\n+    public static final int Unk3000_EOLNDBMGCBP = 4473;\n+    public static final int Unk3000_EPHGPACBEHL = 1497;\n+    public static final int Unk3000_FAPNAHAEPBF = 21880;\n+    public static final int Unk3000_FIPHHGCJIMO = 23678;\n+    public static final int Unk3000_FPDBJJJLKEP = 6103;\n+    public static final int Unk3000_GCBMILHPIKA = 4659;\n+    public static final int Unk3000_GDMEIKLAMIB = 3295;\n+    public static final int Unk3000_GMLAHHCDKOI = 841;\n+    public static final int Unk3000_GNLFOLGMEPN = 21208;\n+    public static final int Unk3000_HBIPKOBMGGD = 5995;\n+    public static final int Unk3000_HIJKNFBBCFC = 23948;\n+    public static final int Unk3000_HPFGNOIGNAG = 21961;\n+    public static final int Unk3000_IBMFJMGHCNC = 6060;\n+    public static final int Unk3000_IBNIGBFIEEF = 1735;\n+    public static final int Unk3000_IGCECHKNKOO = 21804;\n+    public static final int Unk3000_IMLAPBGLBFF = 1687;\n+    public static final int Unk3000_IPAKLDNKDAO = 6275;\n+    public static final int Unk3000_JDCOHPBDPED = 125;\n+    public static final int Unk3000_JIEPEGAHDNH = 24152;\n+    public static final int Unk3000_JIMGCFDPFCK = 20754;\n+    public static final int Unk3000_KEJGDDMMBLP = 6376;\n+    public static final int Unk3000_KGDKKLOOIPG = 457;\n+    public static final int Unk3000_KHFMBKILMMD = 24081;\n+    public static final int Unk3000_KIDDGDPKBEN = 1729;\n+    public static final int Unk3000_KJNIKBPKAED = 461;\n+    public static final int Unk3000_KKHPGFINACH = 24602;\n+    public static final int Unk3000_KOKEHAPLNHF = 6190;\n+    public static final int Unk3000_LAIAGAPKPLB = 3113;\n+    public static final int Unk3000_LHEMAMBKEKI = 6107;\n+    public static final int Unk3000_LJIMEHHNHJA = 3152;\n+    public static final int Unk3000_LLBCFCDMCID = 24312;\n+    public static final int Unk3000_MEFJDDHIAOK = 6135;\n+    public static final int Unk3000_MFCAIADEPGJ = 6198;\n+    public static final int Unk3000_MFHOOFLHNPH = 419;\n+    public static final int Unk3000_MOIPPIJMIJC = 3323;\n+    public static final int Unk3000_NBGBGODDBMP = 6121;\n+    public static final int Unk3000_NHPPMHHJPMJ = 20005;\n+    public static final int Unk3000_NJNPNJDFEOL = 6112;\n+    public static final int Unk3000_NMEJCJFJPHM = 24923;\n+    public static final int Unk3000_NMENEAHJGKE = 6172;\n+    public static final int Unk3000_NNPCGEAHNHM = 6268;\n+    public static final int Unk3000_NOMEJNJKGGL = 3345;\n+    public static final int Unk3000_NPPMPMGBBLM = 6368;\n+    public static final int Unk3000_ODGMCFAFADH = 5907;\n+    public static final int Unk3000_PCGBDJJOIHH = 3475;\n+    public static final int Unk3000_PDNJDOBPEKA = 22882;\n+    public static final int Unk3000_PHCPMFMFOMO = 23864;\n+    public static final int Unk3000_PILFPILPMFO = 3336;\n+    public static final int Unk3000_PJLAPMPPIAG = 20681;\n+    public static final int Unk3000_PNIEIHDLIDN = 2207;\n+    public static final int Unk3000_PPDLLPNMJMK = 500;\n     public static final int UnlockAvatarTalentReq = 1072;\n     public static final int UnlockAvatarTalentRsp = 1098;\n     public static final int UnlockCoopChapterReq = 1970;\n@@ -1853,5 +1924,4 @@ public class PacketOpcodes {\n     public static final int WorldRoutineChangeNotify = 3507;\n     public static final int WorldRoutineTypeCloseNotify = 3502;\n     public static final int WorldRoutineTypeRefreshNotify = 3525;\n-\n }",
      "parent_sha": "e8e3fcbc9c9f93e4f7fe99cd963542925cba5314"
    }
  },
  {
    "oid": "2369f92cb4a0a2fc7fbcdc1acda40e3b3c02b2a8",
    "message": "Fix command issue",
    "date": "2022-04-26T04:39:05Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/2369f92cb4a0a2fc7fbcdc1acda40e3b3c02b2a8",
    "details": {
      "sha": "3db73eb1b91666b8d038ae69a38c009908b140a0",
      "filename": "src/main/java/emu/grasscutter/Grasscutter.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/2369f92cb4a0a2fc7fbcdc1acda40e3b3c02b2a8/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2FGrasscutter.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/2369f92cb4a0a2fc7fbcdc1acda40e3b3c02b2a8/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2FGrasscutter.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2FGrasscutter.java?ref=2369f92cb4a0a2fc7fbcdc1acda40e3b3c02b2a8",
      "patch": "@@ -36,7 +36,7 @@ public final class Grasscutter {\n \tprivate static GameServer gameServer;\n \tprivate static PluginManager pluginManager;\n \t\n-\tpublic static final Reflections reflector = new Reflections();\n+\tpublic static final Reflections reflector = new Reflections(\"emu.grasscutter\");\n \t\n \tstatic {\n \t\t// Declare logback configuration.",
      "parent_sha": "03988414ce4071a1b338686d6ccd3b3ff2bbb6d3"
    }
  },
  {
    "oid": "ab5131e9fdbd16fa4a7dee93a0c2cf90e103c778",
    "message": "Respect FrontHTTPS when creating URI for gacha record",
    "date": "2022-05-07T21:54:15Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/ab5131e9fdbd16fa4a7dee93a0c2cf90e103c778",
    "details": {
      "sha": "b48cb089857a66514d7122b47088810968b68e13",
      "filename": "src/main/java/emu/grasscutter/game/gacha/GachaBanner.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/ab5131e9fdbd16fa4a7dee93a0c2cf90e103c778/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fgacha%2FGachaBanner.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/ab5131e9fdbd16fa4a7dee93a0c2cf90e103c778/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fgacha%2FGachaBanner.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fgacha%2FGachaBanner.java?ref=ab5131e9fdbd16fa4a7dee93a0c2cf90e103c778",
      "patch": "@@ -96,7 +96,7 @@ public GachaInfo toProto() {\n \t\treturn toProto(\"\");\n \t}\n \tpublic GachaInfo toProto(String sessionKey) {\n-\t\tString record = \"https://\"\n+\t\tString record = \"http\" + (Grasscutter.getConfig().getDispatchOptions().FrontHTTPS ? \"s\" : \"\") + \"://\"\n \t\t\t\t\t\t+ (Grasscutter.getConfig().getDispatchOptions().PublicIp.isEmpty() ? \n \t\t\t\t\t\t\tGrasscutter.getConfig().getDispatchOptions().Ip : \n \t\t\t\t\t\t\tGrasscutter.getConfig().getDispatchOptions().PublicIp)",
      "parent_sha": "747d6e91f6505dfe4797afc58dbc8a3efd7971d4"
    }
  },
  {
    "oid": "d3ac090daac95b97247ab68d1b6b10b1eef7c4c4",
    "message": "Fix crash and revise route\n\n* Fix another point which will trigger iOS client to crash\n* Revise `compareProtocolVersion` route to handle all method",
    "date": "2022-05-01T06:03:47Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/d3ac090daac95b97247ab68d1b6b10b1eef7c4c4",
    "details": {
      "sha": "5ef8f7a892fb137ba54a8a39170822816dc97a30",
      "filename": "src/main/java/emu/grasscutter/server/dispatch/DispatchServer.java",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/d3ac090daac95b97247ab68d1b6b10b1eef7c4c4/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fdispatch%2FDispatchServer.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/d3ac090daac95b97247ab68d1b6b10b1eef7c4c4/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fdispatch%2FDispatchServer.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fdispatch%2FDispatchServer.java?ref=d3ac090daac95b97247ab68d1b6b10b1eef7c4c4",
      "patch": "@@ -319,6 +319,9 @@ public void start() throws Exception {\n \t\t\t\t\t\tresponseData.data.account.uid = account.getId();\n \t\t\t\t\t\tresponseData.data.account.token = account.generateSessionKey();\n \t\t\t\t\t\tresponseData.data.account.email = account.getEmail();\n+\t\t\t\t\t\tif (responseData.data.account.email == null) {\n+\t\t\t\t\t\t\tresponseData.data.account.email = \"\";\n+\t\t\t\t\t\t}\n \n \t\t\t\t\t\tGrasscutter.getLogger()\n \t\t\t\t\t\t\t\t.info(String.format(\"[Dispatch] Client %s failed to log in: Account %s created\",\n@@ -442,7 +445,8 @@ public void start() throws Exception {\n \t\t// hk4e-sdk-os.hoyoverse.com\n \t\thttpServer.get(\"/hk4e_global/mdk/agreement/api/getAgreementInfos\", new DispatchHttpJsonHandler(\"{\\\"retcode\\\":0,\\\"message\\\":\\\"OK\\\",\\\"data\\\":{\\\"marketing_agreements\\\":[]}}\"));\n \t\t// hk4e-sdk-os.hoyoverse.com\n-\t\thttpServer.get(\"/hk4e_global/combo/granter/api/compareProtocolVersion\", new DispatchHttpJsonHandler(\"{\\\"retcode\\\":0,\\\"message\\\":\\\"OK\\\",\\\"data\\\":{\\\"modified\\\":true,\\\"protocol\\\":{\\\"id\\\":0,\\\"app_id\\\":4,\\\"language\\\":\\\"en\\\",\\\"user_proto\\\":\\\"\\\",\\\"priv_proto\\\":\\\"\\\",\\\"major\\\":7,\\\"minimum\\\":0,\\\"create_time\\\":\\\"0\\\",\\\"teenager_proto\\\":\\\"\\\",\\\"third_proto\\\":\\\"\\\"}}}\"));\n+\t\t// this could be either GET or POST based on the observation of different clients\n+\t\thttpServer.all(\"/hk4e_global/combo/granter/api/compareProtocolVersion\", new DispatchHttpJsonHandler(\"{\\\"retcode\\\":0,\\\"message\\\":\\\"OK\\\",\\\"data\\\":{\\\"modified\\\":true,\\\"protocol\\\":{\\\"id\\\":0,\\\"app_id\\\":4,\\\"language\\\":\\\"en\\\",\\\"user_proto\\\":\\\"\\\",\\\"priv_proto\\\":\\\"\\\",\\\"major\\\":7,\\\"minimum\\\":0,\\\"create_time\\\":\\\"0\\\",\\\"teenager_proto\\\":\\\"\\\",\\\"third_proto\\\":\\\"\\\"}}}\"));\n \n \t\t// Game data\n \t\t// hk4e-api-os.hoyoverse.com",
      "parent_sha": "10bfb6976d689f67b33318879873c03db8779fbb"
    }
  },
  {
    "oid": "dc26f9e232b086ce2045a83615cccc97d86950d9",
    "message": "Add plugin data folders",
    "date": "2022-04-29T02:01:40Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/dc26f9e232b086ce2045a83615cccc97d86950d9",
    "details": {
      "sha": "97fc5fd770cdf235039093dba577f11c2bf0cf0e",
      "filename": "src/main/java/emu/grasscutter/plugin/Plugin.java",
      "status": "modified",
      "additions": 23,
      "deletions": 5,
      "changes": 28,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/dc26f9e232b086ce2045a83615cccc97d86950d9/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fplugin%2FPlugin.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/dc26f9e232b086ce2045a83615cccc97d86950d9/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fplugin%2FPlugin.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fplugin%2FPlugin.java?ref=dc26f9e232b086ce2045a83615cccc97d86950d9",
      "patch": "@@ -4,6 +4,7 @@\n import emu.grasscutter.plugin.api.ServerHook;\n import emu.grasscutter.server.game.GameServer;\n \n+import java.io.File;\n import java.io.InputStream;\n import java.net.URLClassLoader;\n \n@@ -15,6 +16,7 @@ public abstract class Plugin {\n     \n     private PluginIdentifier identifier;\n     private URLClassLoader classLoader;\n+    private File dataFolder;\n \n     /**\n      * This method is reflected into.\n@@ -23,11 +25,19 @@ public abstract class Plugin {\n      * @param identifier The plugin's identifier.\n      */\n     private void initializePlugin(PluginIdentifier identifier, URLClassLoader classLoader) {\n-        if(this.identifier == null)\n-            this.identifier = identifier;\n-        if(this.classLoader == null)\n-            this.classLoader = classLoader;\n-        else Grasscutter.getLogger().warn(this.identifier.name + \" had a reinitialization attempt.\");\n+        if(this.identifier != null) {\n+            Grasscutter.getLogger().warn(this.identifier.name + \" had a reinitialization attempt.\");\n+            return;\n+        }\n+        \n+        this.identifier = identifier;\n+        this.classLoader = classLoader;\n+        this.dataFolder = new File(Grasscutter.getConfig().PLUGINS_FOLDER, identifier.name);\n+        \n+        if(!this.dataFolder.exists() && !this.dataFolder.mkdirs()) {\n+            Grasscutter.getLogger().warn(\"Failed to create plugin data folder for \" + this.identifier.name);\n+            return;\n+        }\n     }\n \n     /**\n@@ -76,6 +86,14 @@ public final InputStream getResource(String resourceName) {\n         return this.classLoader.getResourceAsStream(resourceName);\n     }\n \n+    /**\n+     * Returns a directory where plugins can store data files.\n+     * @return A directory on the file system.\n+     */\n+    public final File getDataFolder() {\n+        return this.dataFolder;\n+    }\n+\n     /**\n      * Returns the server hook.\n      * @return A server hook singleton.",
      "parent_sha": "91a2a55ed973f71ad62951faf72569ee456bba5c"
    }
  },
  {
    "oid": "a0067b664eaf5d38342e757915dd4e87b4ce7bbe",
    "message": "Add JSON-related methods to `Utils.java`",
    "date": "2022-05-13T15:38:54Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/a0067b664eaf5d38342e757915dd4e87b4ce7bbe",
    "details": {
      "sha": "1fe026bd8c975df1d54df7f9cf1cc0fe92bcd92f",
      "filename": "src/main/java/emu/grasscutter/utils/Utils.java",
      "status": "modified",
      "additions": 34,
      "deletions": 5,
      "changes": 39,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/a0067b664eaf5d38342e757915dd4e87b4ce7bbe/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Futils%2FUtils.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/a0067b664eaf5d38342e757915dd4e87b4ce7bbe/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Futils%2FUtils.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Futils%2FUtils.java?ref=a0067b664eaf5d38342e757915dd4e87b4ce7bbe",
      "patch": "@@ -6,10 +6,7 @@\n import java.nio.file.StandardCopyOption;\n import java.time.*;\n import java.time.temporal.TemporalAdjusters;\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.Random;\n-import java.util.Locale;\n+import java.util.*;\n \n import emu.grasscutter.Grasscutter;\n import io.netty.buffer.ByteBuf;\n@@ -308,10 +305,42 @@ public static Map<String, Object> switchPropertiesUpperLowerCase(Map<String, Obj\n \t}\n \n \t/**\n-\t * get language code from Locale\n+\t * Gets the language code from a given locale.\n+\t * @param locale A locale.\n+\t * @return A string in the format of 'XX-XX'.\n \t */\n     public static String getLanguageCode(Locale locale) {\n         return String.format(\"%s-%s\", locale.getLanguage(), locale.getCountry());\n     }\n \n+\t/**\n+\t * Base64 encodes a given byte array.\n+\t * @param toEncode An array of bytes.\n+\t * @return A base64 encoded string.\n+\t */\n+\tpublic static String base64Encode(byte[] toEncode) {\n+\t\treturn Base64.getEncoder().encodeToString(toEncode);\n+\t}\n+\n+\t/**\n+\t * Base64 decodes a given string.\n+\t * @param toDecode A base64 encoded string.\n+\t * @return An array of bytes.\n+\t */\n+\tpublic static byte[] base64Decode(String toDecode) {\n+\t\treturn Base64.getDecoder().decode(toDecode);\n+\t}\n+\n+\t/**\n+\t * Safely JSON decodes a given string.\n+\t * @param jsonData The JSON-encoded data.\n+\t * @return JSON decoded data, or null if an exception occurred.\n+\t */\n+\tpublic static <T> T jsonDecode(String jsonData, Class<T> classType) {\n+\t\ttry {\n+\t\t\treturn Grasscutter.getGsonFactory().fromJson(jsonData, classType);\n+\t\t} catch (Exception ignored) {\n+\t\t\treturn null;\n+\t\t}\n+\t}\n }",
      "parent_sha": "39f23a0c47e97eb11c7a431d337178b0ee713949"
    }
  },
  {
    "oid": "5d49323c37935401e8ce021026afbce6d860d5b2",
    "message": "my poor, poor, language system (Formatting refactor)",
    "date": "2022-05-11T00:00:47Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/5d49323c37935401e8ce021026afbce6d860d5b2",
    "details": {
      "sha": "7c3426384c39d8530359ad4446857a8f8014f8c9",
      "filename": "src/main/java/emu/grasscutter/utils/Language.java",
      "status": "modified",
      "additions": 25,
      "deletions": 24,
      "changes": 49,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/5d49323c37935401e8ce021026afbce6d860d5b2/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Futils%2FLanguage.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/5d49323c37935401e8ce021026afbce6d860d5b2/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Futils%2FLanguage.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Futils%2FLanguage.java?ref=5d49323c37935401e8ce021026afbce6d860d5b2",
      "patch": "@@ -3,7 +3,6 @@\n import com.google.gson.JsonElement;\n import com.google.gson.JsonObject;\n import emu.grasscutter.Grasscutter;\n-import emu.grasscutter.game.Account;\n import emu.grasscutter.game.player.Player;\n \n import javax.annotation.Nullable;\n@@ -12,10 +11,11 @@\n import java.util.Map;\n \n public final class Language {\n+    private static final Map<String, Language> cachedLanguages = new ConcurrentHashMap<>();\n+    \n     private final JsonObject languageData;\n     private final String languageCode;\n     private final Map<String, String> cachedTranslations = new ConcurrentHashMap<>();\n-    private static final Map<String, Language> cachedLanguages = new ConcurrentHashMap<>();\n \n     /**\n      * Creates a language instance from a code.\n@@ -28,16 +28,14 @@ public static Language getLanguage(String langCode) {\n         }\n \n         var fallbackLanguageCode = Utils.getLanguageCode(Grasscutter.getConfig().DefaultLanguage);\n-        var descripter = getLanguageFileStreamDescripter(langCode, fallbackLanguageCode);\n-        var actualLanguageCode = descripter.getLanguageCode();\n+        var description = getLanguageFileStreamDescripter(langCode, fallbackLanguageCode);\n+        var actualLanguageCode = description.getLanguageCode();\n \n-        Language languageInst = null;\n-\n-        if (descripter.getLanguageFile() != null) {\n-            languageInst = new Language(descripter);\n+        Language languageInst;\n+        if (description.getLanguageFile() != null) {\n+            languageInst = new Language(description);\n             cachedLanguages.put(actualLanguageCode, languageInst);\n-        }\n-        else {\n+        } else {\n             languageInst = cachedLanguages.get(actualLanguageCode);\n             cachedLanguages.put(langCode, languageInst);\n         }\n@@ -95,56 +93,59 @@ public String getLanguageCode() {\n     /**\n      * Reads a file and creates a language instance.\n      */\n-    private Language(InternalLanguageFileStreamDescripter descripter) {\n+    private Language(LanguageStreamDescription description) {\n         @Nullable JsonObject languageData = null;\n-        languageCode = descripter.getLanguageCode();\n+        languageCode = description.getLanguageCode();\n         \n         try {\n-            languageData = Grasscutter.getGsonFactory().fromJson(Utils.readFromInputStream(descripter.getLanguageFile()), JsonObject.class);\n+            languageData = Grasscutter.getGsonFactory().fromJson(Utils.readFromInputStream(description.getLanguageFile()), JsonObject.class);\n         } catch (Exception exception) {\n-            Grasscutter.getLogger().warn(\"Failed to load language file: \" + descripter.getLanguageCode(), exception);\n+            Grasscutter.getLogger().warn(\"Failed to load language file: \" + description.getLanguageCode(), exception);\n         }\n         \n         this.languageData = languageData;\n     }\n \n     /**\n-     * create a InternalLanguageFileStreamDescripter\n+     * create a LanguageStreamDescription\n      * @param languageCode The name of the language code.\n      * @param fallbackLanguageCode The name of the fallback language code.\n      */\n-    private static InternalLanguageFileStreamDescripter getLanguageFileStreamDescripter(String languageCode, String fallbackLanguageCode) {\n+    private static LanguageStreamDescription getLanguageFileStreamDescripter(String languageCode, String fallbackLanguageCode) {\n         var fileName = languageCode + \".json\";\n         var fallback = fallbackLanguageCode + \".json\";\n \n         String actualLanguageCode = languageCode;\n         if (cachedLanguages.containsKey(actualLanguageCode)) {\n-            return new InternalLanguageFileStreamDescripter(actualLanguageCode, null);\n+            return new LanguageStreamDescription(actualLanguageCode, null);\n         }\n+        \n         InputStream file = Grasscutter.class.getResourceAsStream(\"/languages/\" + fileName);\n \n         if (file == null) { // Provided fallback language.\n             actualLanguageCode = fallbackLanguageCode;\n             if (cachedLanguages.containsKey(actualLanguageCode)) {\n-                return new InternalLanguageFileStreamDescripter(actualLanguageCode, null);\n+                return new LanguageStreamDescription(actualLanguageCode, null);\n             }\n+            \n             file = Grasscutter.class.getResourceAsStream(\"/languages/\" + fallback);\n             Grasscutter.getLogger().warn(\"Failed to load language file: \" + fileName + \", falling back to: \" + fallback);\n         }\n \n         if(file == null) { // Fallback the fallback language.\n             actualLanguageCode = \"en-US\";\n             if (cachedLanguages.containsKey(actualLanguageCode)) {\n-                return new InternalLanguageFileStreamDescripter(actualLanguageCode, null);\n+                return new LanguageStreamDescription(actualLanguageCode, null);\n             }\n+            \n             file = Grasscutter.class.getResourceAsStream(\"/languages/en-US.json\");\n             Grasscutter.getLogger().warn(\"Failed to load language file: \" + fallback + \", falling back to: en-US.json\");\n         }\n \n         if(file == null)\n             throw new RuntimeException(\"Unable to load the primary, fallback, and 'en-US' language files.\");\n \n-        return new InternalLanguageFileStreamDescripter(actualLanguageCode, file);\n+        return new LanguageStreamDescription(actualLanguageCode, file);\n     }\n \n     /**\n@@ -180,11 +181,11 @@ public String get(String key) {\n         this.cachedTranslations.put(key, result); return result;\n     }\n \n-    private static class InternalLanguageFileStreamDescripter {\n-        private String languageCode;\n-        private InputStream languageFile;\n+    private static class LanguageStreamDescription {\n+        private final String languageCode;\n+        private final InputStream languageFile;\n \n-        public InternalLanguageFileStreamDescripter(String languageCode, InputStream languageFile) {\n+        public LanguageStreamDescription(String languageCode, InputStream languageFile) {\n             this.languageCode = languageCode;\n             this.languageFile = languageFile;\n         }",
      "parent_sha": "a26afe7d47a1eaae75d8d1e23145a7f361498cc4"
    }
  },
  {
    "oid": "e8b34b6179a80de1ecc8b179f324c0ccf02324b6",
    "message": "comments del",
    "date": "2022-04-26T23:14:02Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/e8b34b6179a80de1ecc8b179f324c0ccf02324b6",
    "details": {
      "sha": "8dbf20a6992f6762fc523c3bdbf15a97237599d7",
      "filename": "src/main/java/emu/grasscutter/task/Task.java",
      "status": "modified",
      "additions": 2,
      "deletions": 11,
      "changes": 13,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/e8b34b6179a80de1ecc8b179f324c0ccf02324b6/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Ftask%2FTask.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/e8b34b6179a80de1ecc8b179f324c0ccf02324b6/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Ftask%2FTask.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Ftask%2FTask.java?ref=e8b34b6179a80de1ecc8b179f324c0ccf02324b6",
      "patch": "@@ -6,17 +6,8 @@\n \r\n /*\r\n * So what is cron expression?\r\n-* Check this: https://en.wikipedia.org/wiki/Cron\r\n-# \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 minute (0 - 59)\r\n-# \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 hour (0 - 23)\r\n-# \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 day of the month (1 - 31)\r\n-# \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 month (1 - 12)\r\n-# \u2502 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 day of the week (0 - 6) (Sunday to Saturday;\r\n-# \u2502 \u2502 \u2502 \u2502 \u2502                                   7 is also Sunday on some systems)\r\n-# \u2502 \u2502 \u2502 \u2502 \u2502\r\n-# \u2502 \u2502 \u2502 \u2502 \u2502\r\n-# * * * * *\r\n-* */\r\n+* second minute hour day month week year\r\n+*/\r\n @Retention(RetentionPolicy.RUNTIME)\r\n public @interface Task {\r\n     String taskName() default \"NO_NAME\";\r",
      "parent_sha": "ac796675f20f1d86e6f2554deb812352e9ab2d2f"
    }
  },
  {
    "oid": "18ef5ee7de12a0a02818ab0621f6328aad49df5c",
    "message": "fix the dynamic group loading",
    "date": "2022-05-15T19:40:36Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/18ef5ee7de12a0a02818ab0621f6328aad49df5c",
    "details": {
      "sha": "1c382fc74dbcd4a39c00b95c475d7fd84718ab29",
      "filename": "src/main/java/emu/grasscutter/game/world/Scene.java",
      "status": "modified",
      "additions": 28,
      "deletions": 10,
      "changes": 38,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/18ef5ee7de12a0a02818ab0621f6328aad49df5c/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fworld%2FScene.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/18ef5ee7de12a0a02818ab0621f6328aad49df5c/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fworld%2FScene.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fworld%2FScene.java?ref=18ef5ee7de12a0a02818ab0621f6328aad49df5c",
      "patch": "@@ -519,10 +519,15 @@ public void checkBlocks() {\n \t\t\tif (!this.getLoadedBlocks().contains(block)) {\n \t\t\t\tthis.onLoadBlock(block, this.getPlayers());\n \t\t\t\tthis.getLoadedBlocks().add(block);\n+\t\t\t}else{\n+\t\t\t\t// dynamic load the groups for players in a loaded block\n+\t\t\t\tvar toLoad = this.getPlayers().stream()\n+\t\t\t\t\t\t.filter(p -> block.contains(p.getPos()))\n+\t\t\t\t\t\t.map(p -> playerMeetGroups(p, block))\n+\t\t\t\t\t\t.flatMap(Collection::stream)\n+\t\t\t\t\t\t.toList();\n+\t\t\t\tonLoadGroup(toLoad);\n \t\t\t}\n-\t\t\tthis.getPlayers().stream()\n-\t\t\t\t\t.filter(p -> block.contains(p.getPos()))\n-\t\t\t\t\t.forEach(p -> playerMeetGroups(p, block));\n \t\t}\n \n \t}\n@@ -539,7 +544,6 @@ public List<SceneGroup> playerMeetGroups(Player player, SceneBlock block){\n \t\t\treturn List.of();\n \t\t}\n \n-\t\tGrasscutter.getLogger().info(\"Scene {} Block {} loaded {} group(s)\", this.getId(), block.id, groups.size());\n \t\treturn groups;\n \t}\n \tpublic void onLoadBlock(SceneBlock block, List<Player> players) {\n@@ -548,36 +552,50 @@ public void onLoadBlock(SceneBlock block, List<Player> players) {\n \n \t\t// the groups form here is not added in current scene\n \t\tvar groups = players.stream()\n+\t\t\t\t.filter(player -> block.contains(player.getPos()))\n \t\t\t\t.map(p -> playerMeetGroups(p, block))\n \t\t\t\t.flatMap(Collection::stream)\n \t\t\t\t.toList();\n \n+\t\tonLoadGroup(groups);\n+\t\tGrasscutter.getLogger().info(\"Scene {} Block {} loaded.\", this.getId(), block.id);\n+\t}\n+\n+\tpublic void onLoadGroup(List<SceneGroup> groups){\n+\t\tif(groups == null || groups.isEmpty()){\n+\t\t\treturn;\n+\t\t}\n \t\tfor (SceneGroup group : groups) {\n \t\t\t// We load the script files for the groups here\n \t\t\tthis.getScriptManager().loadGroupFromScript(group);\n \t\t}\n-\t\t\n+\n \t\t// Spawn gadgets AFTER triggers are added\n \t\t// TODO\n+\t\tvar entities = new ArrayList<GameEntity>();\n \t\tfor (SceneGroup group : groups) {\n \t\t\tif (group.init_config == null) {\n \t\t\t\tcontinue;\n \t\t\t}\n-\t\t\t\n+\n \t\t\tint suite = group.init_config.suite;\n-\t\t\t\n+\n \t\t\tif (suite == 0) {\n \t\t\t\tcontinue;\n \t\t\t}\n \n \t\t\tdo {\n \t\t\t\tvar suiteData = group.getSuiteByIndex(suite);\n-\t\t\t\tgetScriptManager().spawnGadgetsInGroup(group,suiteData);\n-\t\t\t\tgetScriptManager().spawnMonstersInGroup(group, suiteData);\n+\t\t\t\tentities.addAll(suiteData.sceneGadgets.stream()\n+\t\t\t\t\t\t.map(g -> scriptManager.createGadgets(group.id, group.block_id, g)).toList());\n+\t\t\t\tentities.addAll(suiteData.sceneMonsters.stream()\n+\t\t\t\t\t\t.map(mob -> scriptManager.createMonster(group.id, group.block_id, mob)).toList());\n \t\t\t\tsuite++;\n \t\t\t} while (suite < group.init_config.end_suite);\n \t\t}\n-\t\tGrasscutter.getLogger().info(\"Scene {} Block {} loaded.\", this.getId(), block.id);\n+\n+\t\tscriptManager.meetEntities(entities);\n+\t\tGrasscutter.getLogger().info(\"Scene {} loaded {} group(s)\", this.getId(), groups.size());\n \t}\n \t\n \tpublic void onUnloadBlock(SceneBlock block) {",
      "parent_sha": "6dc30e4defd133cb71bbf26a8d487beac250b2f3"
    }
  },
  {
    "oid": "12da46b5eecf72b08e46f6afd600b45244645de5",
    "message": "Re-order troubleshooting info",
    "date": "2023-09-02T00:29:25Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/12da46b5eecf72b08e46f6afd600b45244645de5",
    "details": {
      "sha": "cc13f0a701301e35345613b76d3fc88c675d9e3d",
      "filename": "src/main/java/emu/grasscutter/command/commands/InfoCommand.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/12da46b5eecf72b08e46f6afd600b45244645de5/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FInfoCommand.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/12da46b5eecf72b08e46f6afd600b45244645de5/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FInfoCommand.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FInfoCommand.java?ref=12da46b5eecf72b08e46f6afd600b45244645de5",
      "patch": "@@ -50,8 +50,8 @@ public void execute(Player sender, Player targetPlayer, List<String> args) {\n             Player Count: %d\n             Questing Enabled: %s\n             Scripts Enabled: %s\n-            Operating System: %s\n             Using Fast Require: %s\n+            Operating System: %s\n             Resource Information: %s\n \n             discord.gg/T5vZU6UyeG\"\"\"",
      "parent_sha": "6fc4859f31afbc3b840f2c607e90c9d42cb0e967"
    }
  },
  {
    "oid": "a7b9b1f92342fbb315570a65300aff86e4034439",
    "message": "Update Config.java",
    "date": "2022-05-05T05:57:06Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/a7b9b1f92342fbb315570a65300aff86e4034439",
    "details": {
      "sha": "dd24ac8a08a112bddae54f78e960336bffcbab72",
      "filename": "src/main/java/emu/grasscutter/Config.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/a7b9b1f92342fbb315570a65300aff86e4034439/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2FConfig.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/a7b9b1f92342fbb315570a65300aff86e4034439/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2FConfig.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2FConfig.java?ref=a7b9b1f92342fbb315570a65300aff86e4034439",
      "patch": "@@ -1,5 +1,6 @@\n package emu.grasscutter;\n \n+import java.util.Locale;\n import emu.grasscutter.Grasscutter.ServerDebugMode;\n import emu.grasscutter.Grasscutter.ServerRunMode;\n import emu.grasscutter.game.mail.Mail;\n@@ -22,7 +23,7 @@ public final class Config {\n \tpublic ServerRunMode RunMode = ServerRunMode.HYBRID; // HYBRID, DISPATCH_ONLY, GAME_ONLY\n \tpublic GameServerOptions GameServer = new GameServerOptions();\n \tpublic DispatchServerOptions DispatchServer = new DispatchServerOptions();\n-\tpublic String Language = \"en_us\";\n+\tpublic Locale LocaleLanguage = Locale.getDefault();\n \n \tpublic Boolean OpenStamina = true;\n \tpublic GameServerOptions getGameServerOptions() {\n@@ -57,7 +58,7 @@ public static class RegionInfo {\n \t\t\tpublic int Port = 22102;\n \t\t}\n \t}\n-\t\n+\n \tpublic static class GameServerOptions {\n \t\tpublic String Name = \"Test\";\n \t\tpublic String Ip = \"0.0.0.0\";",
      "parent_sha": "08c01ab15d02f714685371fb913d6c943dd205ca"
    }
  },
  {
    "oid": "a2cdec02af1afba6853fe5df1c3f51714f1b4951",
    "message": "Make missing languages not throw warnings",
    "date": "2022-08-09T11:57:44Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/a2cdec02af1afba6853fe5df1c3f51714f1b4951",
    "details": {
      "sha": "27ae4ee5dba19ee2a6a08078dce5796d3f2b0fab",
      "filename": "src/main/java/emu/grasscutter/utils/Language.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/a2cdec02af1afba6853fe5df1c3f51714f1b4951/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Futils%2FLanguage.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/a2cdec02af1afba6853fe5df1c3f51714f1b4951/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Futils%2FLanguage.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Futils%2FLanguage.java?ref=a2cdec02af1afba6853fe5df1c3f51714f1b4951",
      "patch": "@@ -105,7 +105,7 @@ public static String translate(Player player, String key, Object... args) {\n         }\n \n         var langCode = Utils.getLanguageCode(player.getAccount().getLocale());\n-        String translated = Grasscutter.getLanguage(langCode).get(key);\n+        String translated = getLanguage(langCode).get(key);\n \n         try {\n             return translated.formatted(args);\n@@ -210,7 +210,7 @@ public String get(String key) {\n         }\n \n         if (!isValueFound && !languageCode.equals(\"en-US\")) {\n-            var englishValue = Grasscutter.getLanguage(\"en-US\").get(key);\n+            var englishValue = getLanguage(\"en-US\").get(key);\n             if (!englishValue.contains(valueNotFoundPattern)) {\n                 result += \"\\nhere is english version:\\n\" + englishValue;\n             }\n@@ -240,7 +240,7 @@ public InputStream getLanguageFile() {\n     private static final int TEXTMAP_CACHE_VERSION = 0x9CCACE02;\n     @EqualsAndHashCode public static class TextStrings implements Serializable {\n         public static final String[] ARR_LANGUAGES = {\"EN\", \"CHS\", \"CHT\", \"JP\", \"KR\", \"DE\", \"ES\", \"FR\", \"ID\", \"PT\", \"RU\", \"TH\", \"VI\"};\n-        public static final String[] ARR_GC_LANGUAGES = {\"en-US\", \"zh-CN\", \"zh-TW\", \"ja-JP\", \"ko-KR\", \"DE\", \"es-ES\", \"fr-FR\", \"ID\", \"PT\", \"ru-RU\", \"TH\", \"VI\"};\n+        public static final String[] ARR_GC_LANGUAGES = {\"en-US\", \"zh-CN\", \"zh-TW\", \"en-US\", \"ko-KR\", \"en-US\", \"es-ES\", \"fr-FR\", \"en-US\", \"en-US\", \"ru-RU\", \"en-US\", \"en-US\"};  // TODO: Update the placeholder en-US entries if we ever add GC translations for the missing client languages\n         public static final int NUM_LANGUAGES = ARR_LANGUAGES.length;\n         public static final List<String> LIST_LANGUAGES = Arrays.asList(ARR_LANGUAGES);\n         public static final Object2IntMap<String> MAP_LANGUAGES =  // Map \"EN\": 0, \"CHS\": 1, ..., \"VI\": 12",
      "parent_sha": "9c66ba137f9f4eb40265943a60094f8d76dddba0"
    }
  },
  {
    "oid": "c164b25f90aef9ace97eb5b04c9f3588706a2b5a",
    "message": "fix(database helper): fix player uid issues",
    "date": "2022-05-28T11:28:36Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/c164b25f90aef9ace97eb5b04c9f3588706a2b5a",
    "details": {
      "sha": "466cedc6b29de9d724b4c39a72d1bb32c00873db",
      "filename": "src/main/java/emu/grasscutter/database/DatabaseHelper.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/c164b25f90aef9ace97eb5b04c9f3588706a2b5a/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fdatabase%2FDatabaseHelper.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/c164b25f90aef9ace97eb5b04c9f3588706a2b5a/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fdatabase%2FDatabaseHelper.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fdatabase%2FDatabaseHelper.java?ref=c164b25f90aef9ace97eb5b04c9f3588706a2b5a",
      "patch": "@@ -97,7 +97,7 @@ public static Account getAccountById(String uid) {\n \t}\n \n \tpublic static Account getAccountByPlayerId(int playerId) {\n-\t\treturn DatabaseManager.getGameDatastore().find(Account.class).filter(Filters.eq(\"playerId\", playerId)).first();\n+\t\treturn DatabaseManager.getGameDatastore().find(Account.class).filter(Filters.eq(\"reservedPlayerId\", playerId)).first();\n \t}\n \n \tpublic static void deleteAccount(Account target) {",
      "parent_sha": "9af10859bbe6c3543c503c2e8c6c8c32052732c3"
    }
  },
  {
    "oid": "7792c5c73fe9c163ae2dfcb265648d302319d22b",
    "message": "Fix counter",
    "date": "2022-04-23T22:10:26Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/7792c5c73fe9c163ae2dfcb265648d302319d22b",
    "details": {
      "sha": "6df2ca9f043673a5435a66b941183bb265c5814f",
      "filename": "src/main/java/emu/grasscutter/database/DatabaseManager.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/7792c5c73fe9c163ae2dfcb265648d302319d22b/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fdatabase%2FDatabaseManager.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/7792c5c73fe9c163ae2dfcb265648d302319d22b/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fdatabase%2FDatabaseManager.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fdatabase%2FDatabaseManager.java?ref=7792c5c73fe9c163ae2dfcb265648d302319d22b",
      "patch": "@@ -101,7 +101,7 @@ public static void initialize() {\n \t}\n \n \tpublic static synchronized int getNextId(Class<?> c) {\n-\t\tDatabaseCounter counter = getDatastore().find(DatabaseCounter.class).filter(Filters.eq(\"_id\", c.getName())).first();\n+\t\tDatabaseCounter counter = getDatastore().find(DatabaseCounter.class).filter(Filters.eq(\"_id\", c.getSimpleName())).first();\n \t\tif (counter == null) {\n \t\t\tcounter = new DatabaseCounter(c.getSimpleName());\n \t\t}",
      "parent_sha": "cf84877937023f7aac0d1f8e409d206ed06b3bc5"
    }
  },
  {
    "oid": "7137f5b7158b18c5b56231c847dfaf6640b27c8d",
    "message": "totally not me forgetting how this works",
    "date": "2022-04-20T04:15:37Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/7137f5b7158b18c5b56231c847dfaf6640b27c8d",
    "details": {
      "sha": "5d7d1110b3b15daa6c508bce51745c994b4947a0",
      "filename": "src/main/java/emu/grasscutter/commands/CommandMap.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/7137f5b7158b18c5b56231c847dfaf6640b27c8d/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommands%2FCommandMap.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/7137f5b7158b18c5b56231c847dfaf6640b27c8d/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommands%2FCommandMap.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommands%2FCommandMap.java?ref=7137f5b7158b18c5b56231c847dfaf6640b27c8d",
      "patch": "@@ -113,7 +113,7 @@ public void invoke(GenshinPlayer player, String rawMessage) {\n         if(player != null) {\n             String permissionNode = this.annotations.get(label).permission();\n             Account account = player.getAccount();\n-            if(!permissionNode.equals(\"*\") && !account.hasPermission(permissionNode)) {\n+            if(!permissionNode.isEmpty() && !account.hasPermission(permissionNode)) {\n                 CommandHandler.sendMessage(player, \"You do not have permission to run this command.\"); return;\n             }\n         }",
      "parent_sha": "107f6b9a44d6bd6769095fe72861f9e2b470c239"
    }
  },
  {
    "oid": "f74ca6e9a036c0a99ce2508a4cc9054e84f1d9fc",
    "message": "getAwakenMaterial Add",
    "date": "2022-04-19T10:55:32Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/f74ca6e9a036c0a99ce2508a4cc9054e84f1d9fc",
    "details": {
      "sha": "25be666e7e8c12fe1865aa6f3c51a928df2ff46f",
      "filename": "src/main/java/emu/grasscutter/data/def/ItemData.java",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/f74ca6e9a036c0a99ce2508a4cc9054e84f1d9fc/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fdata%2Fdef%2FItemData.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/f74ca6e9a036c0a99ce2508a4cc9054e84f1d9fc/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fdata%2Fdef%2FItemData.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fdata%2Fdef%2FItemData.java?ref=f74ca6e9a036c0a99ce2508a4cc9054e84f1d9fc",
      "patch": "@@ -48,6 +48,7 @@ public class ItemData extends GenshinResource {\n     private int WeaponBaseExp;\n     private int StoryId;\n     private int AvatarPromoteId;\n+    private int AwakenMaterial;\n     private int[] AwakenCosts;\n     private int[] SkillAffix;\n     private WeaponProperty[] WeaponProp;\n@@ -160,6 +161,10 @@ public int getWeaponBaseExp() {\n \t\treturn WeaponBaseExp;\n \t}\n \t\n+\tpublic int getAwakenMaterial() {\n+        \treturn AwakenMaterial;\n+    \t}\n+\t\n \tpublic int[] getAwakenCosts() {\n \t\treturn AwakenCosts;\n \t}\n@@ -250,4 +255,4 @@ public void onLoad() {\n \t\t}\n         \n     }\n-}\n\\ No newline at end of file\n+}",
      "parent_sha": "2d2013dfee453b396fe984251657039aae7a4491"
    }
  },
  {
    "oid": "57e363725134ca02df03db40e24f5c6185e48e96",
    "message": "Add promoteLevel and count",
    "date": "2022-04-23T14:11:45Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/57e363725134ca02df03db40e24f5c6185e48e96",
    "details": {
      "sha": "2ecdac1f5eaf67c19220684898654c0f350144d2",
      "filename": "src/main/java/emu/grasscutter/command/commands/GiveCommand.java",
      "status": "modified",
      "additions": 62,
      "deletions": 18,
      "changes": 80,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/57e363725134ca02df03db40e24f5c6185e48e96/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FGiveCommand.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/57e363725134ca02df03db40e24f5c6185e48e96/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FGiveCommand.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FGiveCommand.java?ref=57e363725134ca02df03db40e24f5c6185e48e96",
      "patch": "@@ -13,16 +13,15 @@\n import java.util.LinkedList;\n import java.util.List;\n \n-@Command(label = \"give\", usage = \"give [player] <itemId|itemName> [amount]\",\n-        description = \"Gives an item to you or the specified player\", aliases = {\"g\", \"item\", \"giveitem\"}, permission = \"player.give\")\n+@Command(label = \"give\", usage = \"give [player] <itemId|itemName> [amount] [level]\", description = \"Gives an item to you or the specified player\", aliases = {\n+        \"g\", \"item\", \"giveitem\" }, permission = \"player.give\")\n public final class GiveCommand implements CommandHandler {\n \n     @Override\n     public void execute(GenshinPlayer sender, List<String> args) {\n-        int target, item, amount = 1;\n-\n+        int target, item, lvl, amount = 1;\n         if (sender == null && args.size() < 2) {\n-            CommandHandler.sendMessage(null, \"Usage: give <player> <itemId|itemName> [amount]\");\n+            CommandHandler.sendMessage(null, \"Usage: give <player> <itemId|itemName> [amount] [level]\");\n             return;\n         }\n \n@@ -34,6 +33,7 @@ public void execute(GenshinPlayer sender, List<String> args) {\n                 try {\n                     item = Integer.parseInt(args.get(0));\n                     target = sender.getUid();\n+                    lvl = 1;\n                 } catch (NumberFormatException ignored) {\n                     // TODO: Parse from item name using GM Handbook.\n                     CommandHandler.sendMessage(sender, \"Invalid item id.\");\n@@ -43,6 +43,7 @@ public void execute(GenshinPlayer sender, List<String> args) {\n             case 2: // <itemId|itemName> [amount] | [player] <itemId|itemName>\n                 try {\n                     target = Integer.parseInt(args.get(0));\n+                    lvl = 1;\n \n                     if (Grasscutter.getGameServer().getPlayerByUid(target) == null && sender != null) {\n                         target = sender.getUid();\n@@ -57,17 +58,39 @@ public void execute(GenshinPlayer sender, List<String> args) {\n                     return;\n                 }\n                 break;\n-            case 3: // [player] <itemId|itemName> [amount]\n+            case 3: // [player] <itemId|itemName> [amount] | <itemId|itemName> [amount] [level]\n+                try {\n+                    target = Integer.parseInt(args.get(0));\n+\n+                    if (Grasscutter.getGameServer().getPlayerByUid(target) == null && sender != null) {\n+                        target = sender.getUid();\n+                        item = Integer.parseInt(args.get(0));\n+                        amount = Integer.parseInt(args.get(1));\n+                        lvl = Integer.parseInt(args.get(2));\n+                    } else {\n+                        item = Integer.parseInt(args.get(1));\n+                        amount = Integer.parseInt(args.get(2));\n+                        lvl = 1;\n+                    }\n+\n+                } catch (NumberFormatException ignored) {\n+                    // TODO: Parse from item name using GM Handbook.\n+                    CommandHandler.sendMessage(sender, \"Invalid item or player ID.\");\n+                    return;\n+                }\n+                break;\n+            case 4: // [player] <itemId|itemName> [amount] [level]\n                 try {\n                     target = Integer.parseInt(args.get(0));\n \n                     if (Grasscutter.getGameServer().getPlayerByUid(target) == null) {\n                         CommandHandler.sendMessage(sender, \"Invalid player ID.\");\n                         return;\n+                    } else {\n+                        item = Integer.parseInt(args.get(1));\n+                        amount = Integer.parseInt(args.get(2));\n+                        lvl = Integer.parseInt(args.get(3));\n                     }\n-\n-                    item = Integer.parseInt(args.get(1));\n-                    amount = Integer.parseInt(args.get(2));\n                 } catch (NumberFormatException ignored) {\n                     // TODO: Parse from item name using GM Handbook.\n                     CommandHandler.sendMessage(sender, \"Invalid item or player ID.\");\n@@ -89,18 +112,40 @@ public void execute(GenshinPlayer sender, List<String> args) {\n             return;\n         }\n \n-        this.item(targetPlayer, itemData, amount);\n+        this.item(targetPlayer, itemData, amount, lvl);\n \n-        if (!itemData.isEquip()) CommandHandler.sendMessage(sender, String.format(\"Given %s of %s to %s.\", amount, item, target));\n-        else CommandHandler.sendMessage(sender, String.format(\"Given %s with level %s to %s\", item, amount, target));\n+        if (!itemData.isEquip())\n+            CommandHandler.sendMessage(sender, String.format(\"Given %s of %s to %s.\", amount, item, target));\n+        else\n+            CommandHandler.sendMessage(sender,\n+                    String.format(\"Given %s with level %s %s times to %s\", item, lvl, amount, target));\n     }\n \n-    private void item(GenshinPlayer player, ItemData itemData, int amount) {\n+    private void item(GenshinPlayer player, ItemData itemData, int amount, int lvl) {\n         if (itemData.isEquip()) {\n-            GenshinItem item = new GenshinItem(itemData);\n-            item.setLevel(amount);\n-            player.getInventory().addItem(item);\n-            player.sendPacket(new PacketItemAddHintNotify(item, ActionReason.SubfieldDrop));\n+            List<GenshinItem> items = new LinkedList<>();\n+            for (int i = 0; i < amount; i++) {\n+                GenshinItem item = new GenshinItem(itemData);\n+                item.setCount(amount);\n+                item.setLevel(lvl);\n+                item.setPromoteLevel(0);\n+                if (lvl > 20) { // 20/40\n+                    item.setPromoteLevel(1);\n+                } else if (lvl > 40) { // 40/50\n+                    item.setPromoteLevel(2);\n+                } else if (lvl > 50) { // 50/60\n+                    item.setPromoteLevel(3);\n+                } else if (lvl > 60) { // 60/70\n+                    item.setPromoteLevel(4);\n+                } else if (lvl > 70) { // 70/80\n+                    item.setPromoteLevel(5);\n+                } else if (lvl > 80) { // 80/90\n+                    item.setPromoteLevel(6);\n+                }\n+                items.add(item);\n+            }\n+            player.getInventory().addItems(items);\n+            player.sendPacket(new PacketItemAddHintNotify(items, ActionReason.SubfieldDrop));\n         } else {\n             GenshinItem genshinItem = new GenshinItem(itemData);\n             genshinItem.setCount(amount);\n@@ -109,4 +154,3 @@ private void item(GenshinPlayer player, ItemData itemData, int amount) {\n         }\n     }\n }\n-",
      "parent_sha": "a52eaf9bbcaccdc794085e4f65e694a63c5cd048"
    }
  },
  {
    "oid": "656cb79b06de8141db983c50e063593348865cd8",
    "message": "Fix offline account deletion (fixes #1716)",
    "date": "2022-08-27T11:41:18Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/656cb79b06de8141db983c50e063593348865cd8",
    "details": {
      "sha": "2592063a487165a3b4f8e85603e432765a51f7c7",
      "filename": "src/main/java/emu/grasscutter/database/DatabaseHelper.java",
      "status": "modified",
      "additions": 16,
      "deletions": 12,
      "changes": 28,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/656cb79b06de8141db983c50e063593348865cd8/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fdatabase%2FDatabaseHelper.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/656cb79b06de8141db983c50e063593348865cd8/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fdatabase%2FDatabaseHelper.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fdatabase%2FDatabaseHelper.java?ref=656cb79b06de8141db983c50e063593348865cd8",
      "patch": "@@ -116,7 +116,7 @@ public static boolean checkIfAccountExists(int reservedUid) {\n \t\treturn DatabaseManager.getAccountDatastore().find(Account.class).filter(Filters.eq(\"reservedPlayerId\", reservedUid)).count() > 0;\n \t}\n \n-\tpublic static void deleteAccount(Account target) {\n+\tpublic static synchronized void deleteAccount(Account target) {\n \t\t// To delete an account, we need to also delete all the other documents in the database that reference the account.\n \t\t// This should optimally be wrapped inside a transaction, to make sure an error thrown mid-way does not leave the\n \t\t// database in an inconsistent state, but unfortunately Mongo only supports that when we have a replica set ...\n@@ -126,25 +126,29 @@ public static void deleteAccount(Account target) {\n         // Close session first\n         if (player != null) {\n             player.getSession().close();\n+        } else {\n+            player = getPlayerByAccount(target);\n+            if (player == null) return;\n         }\n+        int uid = player.getUid();\n         // Delete data from collections\n-        DatabaseManager.getGameDatabase().getCollection(\"activities\").deleteMany(eq(\"uid\",player.getUid()));\n-        DatabaseManager.getGameDatabase().getCollection(\"homes\").deleteMany(eq(\"ownerUid\",player.getUid()));\n-        DatabaseManager.getGameDatabase().getCollection(\"mail\").deleteMany(eq(\"ownerUid\", player.getUid()));\n-        DatabaseManager.getGameDatabase().getCollection(\"avatars\").deleteMany(eq(\"ownerId\", player.getUid()));\n-        DatabaseManager.getGameDatabase().getCollection(\"gachas\").deleteMany(eq(\"ownerId\", player.getUid()));\n-        DatabaseManager.getGameDatabase().getCollection(\"items\").deleteMany(eq(\"ownerId\", player.getUid()));\n-        DatabaseManager.getGameDatabase().getCollection(\"quests\").deleteMany(eq(\"ownerUid\", player.getUid()));\n-        DatabaseManager.getGameDatabase().getCollection(\"battlepass\").deleteMany(eq(\"ownerUid\", player.getUid()));\n+        DatabaseManager.getGameDatabase().getCollection(\"activities\").deleteMany(eq(\"uid\", uid));\n+        DatabaseManager.getGameDatabase().getCollection(\"homes\").deleteMany(eq(\"ownerUid\", uid));\n+        DatabaseManager.getGameDatabase().getCollection(\"mail\").deleteMany(eq(\"ownerUid\", uid));\n+        DatabaseManager.getGameDatabase().getCollection(\"avatars\").deleteMany(eq(\"ownerId\", uid));\n+        DatabaseManager.getGameDatabase().getCollection(\"gachas\").deleteMany(eq(\"ownerId\", uid));\n+        DatabaseManager.getGameDatabase().getCollection(\"items\").deleteMany(eq(\"ownerId\", uid));\n+        DatabaseManager.getGameDatabase().getCollection(\"quests\").deleteMany(eq(\"ownerUid\", uid));\n+        DatabaseManager.getGameDatabase().getCollection(\"battlepass\").deleteMany(eq(\"ownerUid\", uid));\n \n         // Delete friendships.\n         // Here, we need to make sure to not only delete the deleted account's friendships,\n         // but also all friendship entries for that account's friends.\n-        DatabaseManager.getGameDatabase().getCollection(\"friendships\").deleteMany(eq(\"ownerId\", player.getUid()));\n-        DatabaseManager.getGameDatabase().getCollection(\"friendships\").deleteMany(eq(\"friendId\", player.getUid()));\n+        DatabaseManager.getGameDatabase().getCollection(\"friendships\").deleteMany(eq(\"ownerId\", uid));\n+        DatabaseManager.getGameDatabase().getCollection(\"friendships\").deleteMany(eq(\"friendId\", uid));\n \n         // Delete the player last.\n-        DatabaseManager.getGameDatastore().find(Player.class).filter(Filters.eq(\"id\", player.getUid())).delete();\n+        DatabaseManager.getGameDatastore().find(Player.class).filter(Filters.eq(\"id\", uid)).delete();\n \n         // Finally, delete the account itself.\n         DatabaseManager.getAccountDatastore().find(Account.class).filter(Filters.eq(\"id\", target.getId())).delete();",
      "parent_sha": "1a801192da8a7d1ffe8d3853a12f25337f4dcaf7"
    }
  },
  {
    "oid": "964e73f0f6e384717a5ed009d9d7c446d1134f6f",
    "message": "small nullpointer fix in EntityGadget, in case meta gadget is not set",
    "date": "2022-07-26T14:09:52Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/964e73f0f6e384717a5ed009d9d7c446d1134f6f",
    "details": {
      "sha": "7e68ad2bf2ec2032660e8fdc4c2e80e643e31e27",
      "filename": "src/main/java/emu/grasscutter/game/entity/EntityGadget.java",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/964e73f0f6e384717a5ed009d9d7c446d1134f6f/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fentity%2FEntityGadget.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/964e73f0f6e384717a5ed009d9d7c446d1134f6f/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fentity%2FEntityGadget.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fentity%2FEntityGadget.java?ref=964e73f0f6e384717a5ed009d9d7c446d1134f6f",
      "patch": "@@ -219,9 +219,12 @@ public SceneEntityInfo toProto() {\n                 .setConfigId(this.getConfigId())\n                 .setGadgetState(this.getState())\n                 .setIsEnableInteract(true)\n-                .setDraftId(this.metaGadget.draft_id)\n                 .setAuthorityPeerId(this.getScene().getWorld().getHostPeerId());\n \n+        if(this.metaGadget != null) {\n+            gadgetInfo.setDraftId(this.metaGadget.draft_id);\n+        }\n+\n         if (this.getContent() != null) {\n             this.getContent().onBuildProto(gadgetInfo);\n         }",
      "parent_sha": "bb8ae4c44372490d9ced42f44360388018187392"
    }
  },
  {
    "oid": "18721758ccb94a13a90d41e69610d8858234c2d4",
    "message": "Fix Aqua Simulacra & Fading Twilight not given by GiveAll command",
    "date": "2022-05-31T03:06:25Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/18721758ccb94a13a90d41e69610d8858234c2d4",
    "details": {
      "sha": "12c8526a5b974faa8a657dda1c273997651f19a1",
      "filename": "src/main/java/emu/grasscutter/command/commands/GiveAllCommand.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/18721758ccb94a13a90d41e69610d8858234c2d4/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FGiveAllCommand.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/18721758ccb94a13a90d41e69610d8858234c2d4/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FGiveAllCommand.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FGiveAllCommand.java?ref=18721758ccb94a13a90d41e69610d8858234c2d4",
      "patch": "@@ -155,7 +155,7 @@ public boolean check(int value) {\n     private static final Integer[] testItemsIds = new Integer[] {\n             210, 211, 314, 315, 317, 1005, 1007, 1105, 1107, 1201, 1202,10366,\n             101212, 11411, 11506, 11507, 11508, 12505, 12506, 12508, 12509, 13503,\n-            13506, 14411, 14503, 14505, 14508, 15411, 15504, 15505, 15506, 15508,\n+            13506, 14411, 14503, 14505, 14508, 15504, 15505, 15506,\n             20001, 10002, 10003, 10004, 10005, 10006, 10008,100231,100232,100431,\n             101689,105001,105004, 106000,106001,108000,110000\n     };",
      "parent_sha": "2e167d2d7877500021101542f17fe8c1dab23ec4"
    }
  },
  {
    "oid": "186c6bcf895dceed08be6e0cd46f8345f3a99ba0",
    "message": "fix World level not in 0-8",
    "date": "2022-05-02T09:26:11Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/186c6bcf895dceed08be6e0cd46f8345f3a99ba0",
    "details": {
      "sha": "2feb6f64a0e4226f6ecb23988af95801b490a737",
      "filename": "src/main/java/emu/grasscutter/command/commands/SetWorldLevelCommand.java",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/186c6bcf895dceed08be6e0cd46f8345f3a99ba0/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FSetWorldLevelCommand.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/186c6bcf895dceed08be6e0cd46f8345f3a99ba0/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FSetWorldLevelCommand.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FSetWorldLevelCommand.java?ref=186c6bcf895dceed08be6e0cd46f8345f3a99ba0",
      "patch": "@@ -3,7 +3,6 @@\n import emu.grasscutter.command.Command;\n import emu.grasscutter.command.CommandHandler;\n import emu.grasscutter.game.player.Player;\n-import emu.grasscutter.game.props.PlayerProperty;\n \n import java.util.List;\n \n@@ -26,6 +25,10 @@ public void execute(Player sender, List<String> args) {\n \n         try {\n             int level = Integer.parseInt(args.get(0));\n+            if (level > 8 || level < 0) {\n+                sender.dropMessage(\"World level must be between 0-8\");\n+                return;\n+            }\n \n             // Set in both world and player props\n             sender.getWorld().setWorldLevel(level);",
      "parent_sha": "fba26d2da93577131d7df4f3a58958a3fd3d4cda"
    }
  },
  {
    "oid": "35962542affd5cafeded486c56b40be815714f9b",
    "message": "Fix oversight on EnumTypeAdapterFactory",
    "date": "2022-11-23T15:06:58Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/35962542affd5cafeded486c56b40be815714f9b",
    "details": {
      "sha": "20d2b243a1f75bb4069397f14f435a20870e8961",
      "filename": "src/main/java/emu/grasscutter/utils/JsonAdapters.java",
      "status": "modified",
      "additions": 22,
      "deletions": 27,
      "changes": 49,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/35962542affd5cafeded486c56b40be815714f9b/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Futils%2FJsonAdapters.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/35962542affd5cafeded486c56b40be815714f9b/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Futils%2FJsonAdapters.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Futils%2FJsonAdapters.java?ref=35962542affd5cafeded486c56b40be815714f9b",
      "patch": "@@ -71,37 +71,32 @@ public IntList read(JsonReader reader) throws IOException {\n     static class EnumTypeAdapterFactory implements TypeAdapterFactory {\n         @SuppressWarnings(\"unchecked\")\n         public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {\n-            Class<T> rawType = (Class<T>) type.getRawType();\n-            if (!rawType.isEnum()) return null;\n+            Class<T> enumClass = (Class<T>) type.getRawType();\n+            if (!enumClass.isEnum()) return null;\n+            \n+            // Make mappings of (string) names to enum constants\n+            val map = new HashMap<String, T>();\n+            val enumConstants = enumClass.getEnumConstants();\n+            for (val constant : enumConstants)\n+                map.put(constant.toString(), constant);\n \n-            Field id = null;\n+            // If the enum also has a numeric value, map those to the constants too\n             // System.out.println(\"Looking for enum value field\");\n-            for (Field f : rawType.getDeclaredFields()) {\n-                id = switch (f.getName()) {\n-                    case \"value\", \"id\" -> f;\n-                    default -> null;\n-                };\n-                if (id != null) break;\n-            }\n-            if (id == null) {\n-                // System.out.println(\"Not found\");\n-                return null;\n-            }\n-            // System.out.println(\"Enum value field found - \" + id.getName());\n-\n-            val map = new HashMap<String, T>();\n-            boolean acc = id.isAccessible();\n-            id.setAccessible(true);\n-            try {\n-                for (T constant : rawType.getEnumConstants()) {\n-                    map.put(constant.toString(), constant);\n-                    map.put(String.valueOf(id.getInt(constant)), constant);\n+            for (Field f : enumClass.getDeclaredFields()) {\n+                if (switch (f.getName()) {case \"value\", \"id\" -> true; default -> false;}) {\n+                    // System.out.println(\"Enum value field found - \" + f.getName());\n+                    boolean acc = f.isAccessible();\n+                    f.setAccessible(true);\n+                    try {\n+                        for (val constant : enumConstants)\n+                            map.put(String.valueOf(f.getInt(constant)), constant);\n+                    } catch (IllegalAccessException e) {\n+                        // System.out.println(\"Failed to access enum id field.\");\n+                    }\n+                    f.setAccessible(acc);\n+                    break;\n                 }\n-            } catch (IllegalAccessException e) {\n-                // System.out.println(\"Failed to access enum id field.\");\n-                return null;\n             }\n-            id.setAccessible(acc);\n \n             return new TypeAdapter<T>() {\n                 public T read(JsonReader reader) throws IOException {",
      "parent_sha": "0b5329514b1b5e9879e1c9a66eca80f15c152ade"
    }
  },
  {
    "oid": "0ea3edb73b1b540b17d1cda7dafe470c8196d067",
    "message": "Fix concurrency related error while spawning monsters",
    "date": "2022-04-25T21:27:54Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/0ea3edb73b1b540b17d1cda7dafe470c8196d067",
    "details": {
      "sha": "431134b5f040f1f8c28971071e3156b04c41b5e4",
      "filename": "src/main/java/emu/grasscutter/game/GenshinScene.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/0ea3edb73b1b540b17d1cda7dafe470c8196d067/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2FGenshinScene.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/0ea3edb73b1b540b17d1cda7dafe470c8196d067/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2FGenshinScene.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2FGenshinScene.java?ref=0ea3edb73b1b540b17d1cda7dafe470c8196d067",
      "patch": "@@ -144,7 +144,7 @@ public boolean isInScene(GenshinEntity entity) {\n \t\treturn this.entities.containsKey(entity.getId());\n \t}\n \t\n-\tpublic void addPlayer(GenshinPlayer player) {\n+\tpublic synchronized void addPlayer(GenshinPlayer player) {\n \t\t// Check if player already in\n \t\tif (getPlayers().contains(player)) {\n \t\t\treturn;\n@@ -163,7 +163,7 @@ public void addPlayer(GenshinPlayer player) {\n \t\tthis.setupPlayerAvatars(player);\n \t}\n \t\n-\tpublic void removePlayer(GenshinPlayer player) {\n+\tpublic synchronized void removePlayer(GenshinPlayer player) {\n \t\t// Remove player from scene\n \t\tgetPlayers().remove(player);\n \t\tplayer.setScene(null);\n@@ -367,7 +367,6 @@ public void checkSpawns() {\n \t\t\t\tentity.setSpawnEntry(entry);\n \t\t\t\t\n \t\t\t\ttoAdd.add(entity);\n-\t\t\t\tthis.addEntityDirectly(entity);\n \t\t\t\t\n \t\t\t\t// Add to spawned list\n \t\t\t\tthis.getSpawnedEntities().add(entry);\n@@ -377,14 +376,15 @@ public void checkSpawns() {\n \t\tfor (GenshinEntity entity : this.getEntities().values()) {\n \t\t\tif (entity.getSpawnEntry() != null && !visible.contains(entity.getSpawnEntry())) {\n \t\t\t\ttoRemove.add(entity);\n-\t\t\t\tthis.removeEntityDirectly(entity);\n \t\t\t}\n \t\t}\n \t\t\n \t\tif (toAdd.size() > 0) {\n+\t\t\ttoAdd.stream().forEach(this::addEntityDirectly);\n \t\t\tthis.broadcastPacket(new PacketSceneEntityAppearNotify(toAdd, VisionType.VisionBorn));\n \t\t}\n \t\tif (toRemove.size() > 0) {\n+\t\t\ttoRemove.stream().forEach(this::removeEntityDirectly);\n \t\t\tthis.broadcastPacket(new PacketSceneEntityDisappearNotify(toRemove, VisionType.VisionRemove));\n \t\t}\n \t}",
      "parent_sha": "5f4afc8ee90e557e250ab5a50cc3dee174fe2a0c"
    }
  },
  {
    "oid": "123fc263ba75b877a453fd610e61d5e7ed1c0bd6",
    "message": "cache fetters",
    "date": "2022-04-22T02:39:25Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/123fc263ba75b877a453fd610e61d5e7ed1c0bd6",
    "details": {
      "sha": "7e14b1b46cc34802b0dc4e9f69dffdc884c5c593",
      "filename": "src/main/java/emu/grasscutter/data/GenshinData.java",
      "status": "modified",
      "additions": 12,
      "deletions": 8,
      "changes": 20,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/123fc263ba75b877a453fd610e61d5e7ed1c0bd6/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fdata%2FGenshinData.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/123fc263ba75b877a453fd610e61d5e7ed1c0bd6/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fdata%2FGenshinData.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fdata%2FGenshinData.java?ref=123fc263ba75b877a453fd610e61d5e7ed1c0bd6",
      "patch": "@@ -57,6 +57,9 @@ public class GenshinData {\n \t\n \tprivate static final Int2ObjectMap<SceneData> sceneDataMap = new Int2ObjectLinkedOpenHashMap<>();\n \tprivate static final Int2ObjectMap<FetterData> fetterDataMap = new Int2ObjectOpenHashMap<>();\n+\n+\t// Cache\n+\tprivate static Map<Integer, List<Integer>> fetters = new HashMap<>();\n \t\n \tpublic static Int2ObjectMap<?> getMapByResourceDef(Class<?> resourceDefinition) {\n \t\tInt2ObjectMap<?> map = null;\n@@ -226,14 +229,15 @@ public static Int2ObjectMap<SceneData> getSceneDataMap() {\n \t}\n \n \tpublic static Map<Integer, List<Integer>> getFetterDataEntries() {\n-\t\t// Can I do this?\n-\t\tMap<Integer, List<Integer>> fetters = new HashMap<>();\n-\t\tfetterDataMap.forEach((k, v) -> {\n-\t\t\tif (!fetters.containsKey(v.getAvatarId())) {\n-\t\t\t\tfetters.put(v.getAvatarId(), new ArrayList<>());\n-\t\t\t}\n-\t\t\tfetters.get(v.getAvatarId()).add(k);\n-\t\t});\n+\t\tif (fetters.isEmpty()) {\n+\t\t\tfetterDataMap.forEach((k, v) -> {\n+\t\t\t\tif (!fetters.containsKey(v.getAvatarId())) {\n+\t\t\t\t\tfetters.put(v.getAvatarId(), new ArrayList<>());\n+\t\t\t\t}\n+\t\t\t\tfetters.get(v.getAvatarId()).add(k);\n+\t\t\t});\n+\t\t}\n+\n \t\treturn fetters;\n \t}\n }",
      "parent_sha": "376c668dd9e66af525bb9dfcbf49bedcacb2e662"
    }
  },
  {
    "oid": "ae31e4fd985ddff40d939ceba9fdc709c2e22657",
    "message": "Weapons/artifacts should not have a count of more than 1",
    "date": "2022-05-04T06:24:18Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/ae31e4fd985ddff40d939ceba9fdc709c2e22657",
    "details": {
      "sha": "14d1ae203778b41ab94b87637a76574d9984fd1a",
      "filename": "src/main/java/emu/grasscutter/game/inventory/Inventory.java",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/ae31e4fd985ddff40d939ceba9fdc709c2e22657/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Finventory%2FInventory.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/ae31e4fd985ddff40d939ceba9fdc709c2e22657/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Finventory%2FInventory.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Finventory%2FInventory.java?ref=ae31e4fd985ddff40d939ceba9fdc709c2e22657",
      "patch": "@@ -164,6 +164,9 @@ private synchronized GameItem putItem(GameItem item) {\n \t\t\tif (tab.getSize() >= tab.getMaxCapacity()) {\n \t\t\t\treturn null;\n \t\t\t}\n+\t\t\t// Duplicates cause problems\n+\t\t\titem.setCount(Math.max(item.getCount(), 1));\n+\t\t\t// Adds to inventory\n \t\t\tputItem(item, tab);\n \t\t} else if (type == ItemType.ITEM_VIRTUAL) {\n \t\t\t// Handle\n@@ -288,7 +291,11 @@ public synchronized boolean removeItem(GameItem item, int count) {\n \t\t\treturn false;\n \t\t}\n \t\t\n-\t\titem.setCount(item.getCount() - count);\n+\t\tif (item.getItemData().isEquip()) {\n+\t\t\titem.setCount(0);\n+\t\t} else {\n+\t\t\titem.setCount(item.getCount() - count);\n+\t\t}\n \t\t\n \t\tif (item.getCount() <= 0) {\n \t\t\t// Remove from inventory tab too",
      "parent_sha": "de75b56d6c61dcc288422c1b9c2896d9884e0206"
    }
  },
  {
    "oid": "2ad6f5934b89afc78d3f9d0c36d961027b9b1387",
    "message": "Add @Transient for temporary team",
    "date": "2022-05-06T07:12:33Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/2ad6f5934b89afc78d3f9d0c36d961027b9b1387",
    "details": {
      "sha": "16e8942ad4d3d3e0f1773ec1303d07ba60bf3411",
      "filename": "src/main/java/emu/grasscutter/game/player/TeamManager.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/2ad6f5934b89afc78d3f9d0c36d961027b9b1387/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fplayer%2FTeamManager.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/2ad6f5934b89afc78d3f9d0c36d961027b9b1387/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fplayer%2FTeamManager.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fplayer%2FTeamManager.java?ref=2ad6f5934b89afc78d3f9d0c36d961027b9b1387",
      "patch": "@@ -54,11 +54,11 @@ public class TeamManager {\n \t@Transient private final IntSet teamResonances;\n \t@Transient private final IntSet teamResonancesConfig;\n \n-\tprivate int useTemporarilyTeamIndex = -1;\n+\t@Transient private int useTemporarilyTeamIndex = -1;\n \t/**\n \t * Temporary Team for tower\n \t */\n-\tprivate List<TeamInfo> temporaryTeam;\n+\t@Transient private List<TeamInfo> temporaryTeam;\n \n \tpublic TeamManager() {\n \t\tthis.mpTeam = new TeamInfo();",
      "parent_sha": "c912b8d85710293961d1bc6ecb542237a7a6dac3"
    }
  },
  {
    "oid": "f6ce7e349d1ff2f3ce4d75d925005040105ff85c",
    "message": "Add `shutdown` alias to StopCommand",
    "date": "2022-10-03T15:03:01Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/f6ce7e349d1ff2f3ce4d75d925005040105ff85c",
    "details": {
      "sha": "905af307d0b81772978ac2dbf077cf43bbb8d37f",
      "filename": "src/main/java/emu/grasscutter/command/commands/StopCommand.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/f6ce7e349d1ff2f3ce4d75d925005040105ff85c/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FStopCommand.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/f6ce7e349d1ff2f3ce4d75d925005040105ff85c/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FStopCommand.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FStopCommand.java?ref=f6ce7e349d1ff2f3ce4d75d925005040105ff85c",
      "patch": "@@ -9,7 +9,7 @@\n \n import static emu.grasscutter.utils.Language.translate;\n \n-@Command(label = \"stop\", permission = \"server.stop\", targetRequirement = Command.TargetRequirement.NONE)\n+@Command(label = \"stop\", aliases = {\"shutdown\"}, permission = \"server.stop\", targetRequirement = Command.TargetRequirement.NONE)\n public final class StopCommand implements CommandHandler {\n \n     @Override",
      "parent_sha": "960318651c4f0c6cfb1f4da35b92182cd3e6f41e"
    }
  },
  {
    "oid": "0b9cab5ad5a6d42806eb1800fa35138fdddd092b",
    "message": "Don't need full Java stacktrace on Lua errors",
    "date": "2022-10-07T12:36:26Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/0b9cab5ad5a6d42806eb1800fa35138fdddd092b",
    "details": {
      "sha": "84e3e784ce7eb5fbb3846978380e050f8b69ff9a",
      "filename": "src/main/java/emu/grasscutter/scripts/ScriptLoader.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/0b9cab5ad5a6d42806eb1800fa35138fdddd092b/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fscripts%2FScriptLoader.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/0b9cab5ad5a6d42806eb1800fa35138fdddd092b/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fscripts%2FScriptLoader.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fscripts%2FScriptLoader.java?ref=0b9cab5ad5a6d42806eb1800fa35138fdddd092b",
      "patch": "@@ -131,7 +131,7 @@ public static CompiledScript getScript(String path) {\n             scriptsCache.put(path, new SoftReference<>(script));\n             return script;\n         } catch (Exception e) {\n-            Grasscutter.getLogger().error(\"Loading script {} failed!\", path, e);\n+            Grasscutter.getLogger().error(\"Loading script {} failed! - {}\", path, e.getLocalizedMessage());\n             return null;\n         }\n     }",
      "parent_sha": "dd6e1bb8a32a41f939daa7754ae07ca5297d90e2"
    }
  },
  {
    "oid": "30d093f3480784c51d0cf98752d3a66feb8b58b5",
    "message": "Update ScriptLib.java (#2227)",
    "date": "2023-06-24T04:37:13Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/30d093f3480784c51d0cf98752d3a66feb8b58b5",
    "details": {
      "sha": "e6f9b3921f8765dae49deb13d3fbb12ed7646f1d",
      "filename": "src/main/java/emu/grasscutter/scripts/ScriptLib.java",
      "status": "modified",
      "additions": 8,
      "deletions": 3,
      "changes": 11,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/30d093f3480784c51d0cf98752d3a66feb8b58b5/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fscripts%2FScriptLib.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/30d093f3480784c51d0cf98752d3a66feb8b58b5/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fscripts%2FScriptLib.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fscripts%2FScriptLib.java?ref=30d093f3480784c51d0cf98752d3a66feb8b58b5",
      "patch": "@@ -823,17 +823,17 @@ public int GetChannellerSlabLoopDungeonLimitTime(){\n         //TODO implement\n         return 0;\n     }\n-    public int IsPlayerAllAvatarDie(int sceneUid){\n+    public boolean IsPlayerAllAvatarDie(int sceneUid){\n         logger.warn(\"[LUA] Call unimplemented IsPlayerAllAvatarDie {}\", sceneUid);\n         var playerEntities = getSceneScriptManager().getScene().getEntities().values().stream().filter(e -> e.getEntityType() == EntityType.Avatar).toList();\n         for (GameEntity p : playerEntities){\n             var player = (EntityAvatar)p;\n             if(player.isAlive()){\n-                return 0;\n+                return false;\n             }\n         }\n         //TODO check\n-        return 1;\n+        return true;\n     }\n \n     public int sendShowCommonTipsToClient(String title, String content, int closeTime) {\n@@ -869,6 +869,11 @@ public int AttachChildChallenge(int var1, int var2, int var3, int[] var4, LuaTab\n         //TODO implement var6 object has int success, int fail, bool fail_on_wipe\n         return 0;\n     }\n+    public int StopChallenge(int var1, int var2){\n+        logger.warn(\"[LUA] Call unimplemented StopChallenge with {} {}\", var1, var2);\n+        //TODO implement\n+        return 0;\n+    }\n     public int CreateEffigyChallengeMonster(int var1, int[] var2){\n         logger.warn(\"[LUA] Call unimplemented CreateEffigyChallengeMonster with {} {}\", var1, var2);\n         //TODO implement",
      "parent_sha": "9fd5f7665c6baee5db37fd66982fd7cbb214969a"
    }
  },
  {
    "oid": "79d646d35803bf510e969cb4eef08105de0d90c9",
    "message": "Remove last catch and init another variable as placeholder",
    "date": "2022-04-24T02:50:22Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/79d646d35803bf510e969cb4eef08105de0d90c9",
    "details": {
      "sha": "2d36b224e7d1e64a15c5ec6a2f6dbb7e2443f170",
      "filename": "src/main/java/emu/grasscutter/server/dispatch/DispatchServer.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/79d646d35803bf510e969cb4eef08105de0d90c9/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fdispatch%2FDispatchServer.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/79d646d35803bf510e969cb4eef08105de0d90c9/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fdispatch%2FDispatchServer.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fdispatch%2FDispatchServer.java?ref=79d646d35803bf510e969cb4eef08105de0d90c9",
      "patch": "@@ -177,23 +177,23 @@ public void start() throws Exception {\n \t\t\tSSLContext sslContext = SSLContext.getInstance(\"TLS\");\n \t\t\ttry (FileInputStream fis = new FileInputStream(Grasscutter.getConfig().getDispatchOptions().KeystorePath)) {\n \t\t\t\tchar[] keystorePassword = Grasscutter.getConfig().getDispatchOptions().KeystorePassword.toCharArray();\n-\n+\t\t\t\tKeyManagerFactory _kmf;\n \t\t\t\ttry {\n \t\t\t\t\tKeyStore ks = KeyStore.getInstance(\"PKCS12\");\n \t\t\t\t\tks.load(fis, keystorePassword);\n \t\t\t\t\tKeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n+\t\t\t\t\t_kmf = kmf;\n \t\t\t\t\tkmf.init(ks, keystorePassword);\n \t\t\t\t} catch (Exception e) {\n \t\t\t\t\tGrasscutter.getLogger().warn(\"[Dispatch] Unable to load keystore. Using default keystore password...\");\n \t\t\t\t\tKeyStore ks = KeyStore.getInstance(\"PKCS12\");\n \t\t\t\t\tks.load(fis, \"123456\".toCharArray());\n \t\t\t\t\tKeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n \t\t\t\t\tkmf.init(ks, \"123456\".toCharArray());\n-\t\t\t\t} catch (Exception e) {\n-\t\t\t\t\tGrasscutter.getLogger().warn(\"[Dispatch] Error while loading keystore!\");\n+\t\t\t\t\t_kmf = kmf;\n \t\t\t\t}\n \t\t\t\t\n-\t\t\t\tsslContext.init(kmf.getKeyManagers(), null, null);\n+\t\t\t\tsslContext.init(_kmf.getKeyManagers(), null, null);\n \t\t\t\t\n \t\t\t\thttpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n \t\t\t\tserver = httpsServer;",
      "parent_sha": "bed31812522881038b115eff36ae759d41bc2a83"
    }
  },
  {
    "oid": "541c38b74c56a2dce60bf3549c35f685a3c89f2d",
    "message": "Avoid disconnection notification",
    "date": "2022-06-26T09:34:45Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/541c38b74c56a2dce60bf3549c35f685a3c89f2d",
    "details": {
      "sha": "4f578021a39810aac3137ceaee1e04d8b805a67c",
      "filename": "src/main/java/emu/grasscutter/server/packet/recv/HandlerPlayerForceExitReq.java",
      "status": "modified",
      "additions": 12,
      "deletions": 1,
      "changes": 13,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/541c38b74c56a2dce60bf3549c35f685a3c89f2d/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fpacket%2Frecv%2FHandlerPlayerForceExitReq.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/541c38b74c56a2dce60bf3549c35f685a3c89f2d/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fpacket%2Frecv%2FHandlerPlayerForceExitReq.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fpacket%2Frecv%2FHandlerPlayerForceExitReq.java?ref=541c38b74c56a2dce60bf3549c35f685a3c89f2d",
      "patch": "@@ -12,6 +12,17 @@ public class HandlerPlayerForceExitReq extends PacketHandler {\n \tpublic void handle(GameSession session, byte[] header, byte[] payload) throws Exception {\n \t\t// Client should auto disconnect right now\n \t\tsession.send(new BasePacket(PacketOpcodes.PlayerForceExitRsp));\n-\t\tsession.close();\n+\t\tnew Thread(){\n+\t\t\t@Override\n+\t\t\tpublic void run() {\n+\t\t\t\ttry {\n+\t\t\t\t\tThread.sleep(1000);// disconnect after 1 seconds\n+\t\t\t\t} catch (InterruptedException e) {\n+\t\t\t\t\te.printStackTrace();\n+\t\t\t\t}\n+\t\t\t\tsession.close();\n+\t\t\t\tsuper.run();\n+\t\t\t}\n+\t\t}.start();\n \t}\n }",
      "parent_sha": "b5fd8c1acd26263f26307f91300f23836a8ba3b5"
    }
  },
  {
    "oid": "813970945b0a695d9763d209cd56e06bb8a654f1",
    "message": "Fix `BargainRecord`",
    "date": "2023-08-19T01:13:10Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/813970945b0a695d9763d209cd56e06bb8a654f1",
    "details": {
      "sha": "0bd5d4978f8b92997c229bbc8cbbecd3fe4ed350",
      "filename": "src/main/java/emu/grasscutter/game/quest/BargainRecord.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/813970945b0a695d9763d209cd56e06bb8a654f1/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fquest%2FBargainRecord.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/813970945b0a695d9763d209cd56e06bb8a654f1/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fquest%2FBargainRecord.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fquest%2FBargainRecord.java?ref=813970945b0a695d9763d209cd56e06bb8a654f1",
      "patch": "@@ -102,8 +102,8 @@ public BargainSnapshot toSnapshot() {\n         return BargainSnapshot.newBuilder()\n             .setBargainId(this.getBargainId())\n             .setCurMood(this.getCurrentMood())\n-            .setPJHMEHGELGC(this.getExpectedPrice())\n-            .setHADMOPEJFIC(this.getLowestPrice())\n+            .setBALOPACHCDB(this.getExpectedPrice())\n+            .setIOCNPJJNHLD(this.getLowestPrice())\n             .build();\n     }\n }",
      "parent_sha": "e3738ea68ea2e8c4f98e620050906b9664b94603"
    }
  },
  {
    "oid": "a26afe7d47a1eaae75d8d1e23145a7f361498cc4",
    "message": "Fix language switching prompt and save",
    "date": "2022-05-10T20:36:57Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/a26afe7d47a1eaae75d8d1e23145a7f361498cc4",
    "details": {
      "sha": "5966c61670c697436fe246416ff9f2617f0ba122",
      "filename": "src/main/java/emu/grasscutter/command/commands/LanguageCommand.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/a26afe7d47a1eaae75d8d1e23145a7f361498cc4/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FLanguageCommand.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/a26afe7d47a1eaae75d8d1e23145a7f361498cc4/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FLanguageCommand.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FLanguageCommand.java?ref=a26afe7d47a1eaae75d8d1e23145a7f361498cc4",
      "patch": "@@ -35,8 +35,9 @@ public void execute(Player sender, Player targetPlayer, List<String> args) {\n         if (sender != null) {\r\n             var locale = Locale.forLanguageTag(langCode);\r\n             actualLangCode = Utils.getLanguageCode(locale);\r\n-            sender.getAccount().setLocale(locale);\r\n-            return;\r\n+            var account = sender.getAccount();\r\n+            account.setLocale(locale);\r\n+            account.save();\r\n         }\r\n         else {\r\n             var languageInst = Grasscutter.getLanguage(langCode);\r",
      "parent_sha": "f92e839ad14a537e3604b84b3939258638cb990e"
    }
  },
  {
    "oid": "f3061a366e6774e87328fb5d67e63aba25cdca4a",
    "message": "gave up, Pass class as argument to constructor",
    "date": "2022-04-27T00:54:56Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/f3061a366e6774e87328fb5d67e63aba25cdca4a",
    "details": {
      "sha": "6611b758c0fd1071b00545fe01c69fa2df07a002",
      "filename": "src/main/java/emu/grasscutter/server/event/EventHandler.java",
      "status": "modified",
      "additions": 2,
      "deletions": 5,
      "changes": 7,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/f3061a366e6774e87328fb5d67e63aba25cdca4a/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fevent%2FEventHandler.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/f3061a366e6774e87328fb5d67e63aba25cdca4a/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fevent%2FEventHandler.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fevent%2FEventHandler.java?ref=f3061a366e6774e87328fb5d67e63aba25cdca4a",
      "patch": "@@ -3,17 +3,14 @@\n import emu.grasscutter.Grasscutter;\n import emu.grasscutter.utils.EventConsumer;\n \n-import java.lang.reflect.ParameterizedType;\n-\n public final class EventHandler<T extends Event> {\n     private final Class<T> eventClass;\n     private EventConsumer<T> listener;\n     private HandlerPriority priority;\n     private boolean handleCanceled;\n     \n-    @SuppressWarnings(\"unchecked\")\n-    public EventHandler() {\n-        this.eventClass = (Class<T>) ((ParameterizedType) (getClass().getGenericSuperclass())).getActualTypeArguments()[0];\n+    public EventHandler(Class<T> eventClass) {\n+        this.eventClass = eventClass;\n     }\n \n     /**",
      "parent_sha": "ae6a6abcd1ca0588bfcb6b493eec349b114ca5b1"
    }
  },
  {
    "oid": "0f1341512c2e354db1a2712fe07e64db21c00cea",
    "message": "Reset first tick on new skill",
    "date": "2022-05-10T12:21:29Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/0f1341512c2e354db1a2712fe07e64db21c00cea",
    "details": {
      "sha": "8737d975538c260897e02a61abb982662d1822e2",
      "filename": "src/main/java/emu/grasscutter/game/managers/StaminaManager/StaminaManager.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/0f1341512c2e354db1a2712fe07e64db21c00cea/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fmanagers%2FStaminaManager%2FStaminaManager.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/0f1341512c2e354db1a2712fe07e64db21c00cea/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fmanagers%2FStaminaManager%2FStaminaManager.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fmanagers%2FStaminaManager%2FStaminaManager.java?ref=0f1341512c2e354db1a2712fe07e64db21c00cea",
      "patch": "@@ -127,6 +127,7 @@ public StaminaManager(Player player) {\n     // Accessors\r\n \r\n     public void setSkillCast(int skillId, int skillCasterId) {\r\n+        lastSkillFirstTick = true;\r\n         lastSkillId = skillId;\r\n         lastSkillCasterId = skillCasterId;\r\n     }\r\n@@ -460,10 +461,10 @@ private Consumption getFightConsumption(int skillCasting) {\n         }};\r\n         if (talentMovementConsumptions.containsKey(skillCasting)) {\r\n             if (lastSkillFirstTick) {\r\n-                consumption = talentMovementConsumptions.get(skillCasting).get(1);\r\n+                consumption = talentMovementConsumptions.get(skillCasting).get(0);\r\n             } else {\r\n                 lastSkillFirstTick = false;\r\n-                consumption = talentMovementConsumptions.get(skillCasting).get(0);\r\n+                consumption = talentMovementConsumptions.get(skillCasting).get(1);\r\n             }\r\n         }\r\n         // TODO: Claymore avatar charged attack\r",
      "parent_sha": "e9f7b0dfb3e72bb53b00516caa21069a29903169"
    }
  },
  {
    "oid": "ab1341f0d952a89dcacd66fb4a78ad74a524cc72",
    "message": "Make sure offFieldPenalty does not go below 0.1",
    "date": "2022-05-22T19:55:55Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/ab1341f0d952a89dcacd66fb4a78ad74a524cc72",
    "details": {
      "sha": "862a01c357edbd40ab74f9054601c9f6f0a120bd",
      "filename": "src/main/java/emu/grasscutter/game/managers/EnergyManager.java",
      "status": "modified",
      "additions": 9,
      "deletions": 3,
      "changes": 12,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/ab1341f0d952a89dcacd66fb4a78ad74a524cc72/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fmanagers%2FEnergyManager.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/ab1341f0d952a89dcacd66fb4a78ad74a524cc72/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fmanagers%2FEnergyManager.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fmanagers%2FEnergyManager.java?ref=ab1341f0d952a89dcacd66fb4a78ad74a524cc72",
      "patch": "@@ -150,10 +150,16 @@ public void handlePickupElemBall(GameItem elemBall) {\n \t\t\t// On-field vs off-field multiplier.\n \t\t\t// The on-field character gets no penalty.\n \t\t\t// Off-field characters get a penalty depending on the team size, as follows:\n-\t\t\t//\t  - 4 character team: 0.6\n-\t\t\t//\t  - 3 character team: 0.7\n \t\t\t//    - 2 character team: 0.8\n-\t\t\tfloat offFieldPenalty = (this.player.getTeamManager().getCurrentCharacterIndex() == i) ? 1.0f : 1.0f - this.player.getTeamManager().getActiveTeam().size() * 0.1f;\n+\t\t\t//\t  - 3 character team: 0.7\n+\t\t\t//\t  - 4 character team: 0.6\n+\t\t\t//\t  - etc.\n+\t\t\t// We set a lower bound of 0.1 here, to avoid gaining no or negative energy.\n+\t\t\tfloat offFieldPenalty =\n+\t\t\t\t(this.player.getTeamManager().getCurrentCharacterIndex() == i)\n+\t\t\t\t? 1.0f\n+\t\t\t\t: 1.0f - this.player.getTeamManager().getActiveTeam().size() * 0.1f;\n+\t\t\toffFieldPenalty = Math.max(offFieldPenalty, 0.1f);\n \n \t\t\t// Same element/neutral bonus.\n \t\t\t// Same-element characters get a bonus of *3, while different-element characters get no bonus at all.",
      "parent_sha": "88781fdd82e5673d8e4751b54aef5ca3ec60f182"
    }
  },
  {
    "oid": "0e6ac4a8276a20e634431092f27b8d92f9517bbf",
    "message": "Update default config to match the one in Koko-boya/Grasscutter_Resources",
    "date": "2022-05-31T09:07:18Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/0e6ac4a8276a20e634431092f27b8d92f9517bbf",
    "details": {
      "sha": "a61f5f42e16e23b0ea76a6a5a3cbd848049d5077",
      "filename": "src/main/java/emu/grasscutter/utils/ConfigContainer.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/0e6ac4a8276a20e634431092f27b8d92f9517bbf/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Futils%2FConfigContainer.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/0e6ac4a8276a20e634431092f27b8d92f9517bbf/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Futils%2FConfigContainer.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Futils%2FConfigContainer.java?ref=0e6ac4a8276a20e634431092f27b8d92f9517bbf",
      "patch": "@@ -84,7 +84,7 @@ public static class Structure {\n         public String resources = \"./resources/\";\n         public String data = \"./data/\";\n         public String packets = \"./packets/\";\n-        public String scripts = \"./resources/scripts/\";\n+        public String scripts = \"./resources/Scripts/\";\n         public String plugins = \"./plugins/\";\n \n         // UNUSED (potentially added later?)",
      "parent_sha": "aaf77770205f950e8adb15b43c3aaa435c7b7237"
    }
  },
  {
    "oid": "76098cdb7142a875bc586f6d731488eb072564ff",
    "message": "remove useless items",
    "date": "2022-04-29T06:13:09Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/76098cdb7142a875bc586f6d731488eb072564ff",
    "details": {
      "sha": "94f28dbbcfa048204c05a076535880a0b13876c6",
      "filename": "src/main/java/emu/grasscutter/command/commands/GiveAllCommand.java",
      "status": "modified",
      "additions": 23,
      "deletions": 12,
      "changes": 35,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/76098cdb7142a875bc586f6d731488eb072564ff/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FGiveAllCommand.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/76098cdb7142a875bc586f6d731488eb072564ff/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FGiveAllCommand.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FGiveAllCommand.java?ref=76098cdb7142a875bc586f6d731488eb072564ff",
      "patch": "@@ -5,6 +5,8 @@\n import emu.grasscutter.command.CommandHandler;\n import emu.grasscutter.data.GameData;\n import emu.grasscutter.data.def.AvatarData;\n+import emu.grasscutter.data.def.AvatarSkillData;\n+import emu.grasscutter.data.def.AvatarSkillDepotData;\n import emu.grasscutter.data.def.ItemData;\n import emu.grasscutter.game.avatar.Avatar;\n import emu.grasscutter.game.inventory.GameItem;\n@@ -83,9 +85,6 @@ public void giveAllItems(Player player, int amount) {\n             Avatar avatar = new Avatar(avatarData);\n             avatar.setLevel(90);\n             avatar.setPromoteLevel(6);\n-            for (int i = 1; i <= 6; ++i) {\n-                avatar.getTalentIdList().add((avatar.getAvatarId() - 10000000) * 10 + i);\n-            }\n             // This will handle stats and talents\n             avatar.recalcStats();\n             player.addAvatar(avatar);\n@@ -98,7 +97,7 @@ public void giveAllItems(Player player, int amount) {\n             if (isTestItem(itemdata.getId())) continue;\n \n             if (itemdata.isEquip()) {\n-                for (int i = 0; i < 10; ++i) {\n+                for (int i = 0; i < 5; ++i) {\n                     GameItem item = new GameItem(itemdata);\n                     if (itemdata.getItemType() == ItemType.ITEM_WEAPON) {\n                         item.setLevel(90);\n@@ -114,7 +113,7 @@ public void giveAllItems(Player player, int amount) {\n                 itemList.add(item);\n             }\n         }\n-        int packetNum = 20;\n+        int packetNum = 10;\n         int itemLength = itemList.size();\n         int number = itemLength / packetNum;\n         int remainder = itemLength % packetNum;\n@@ -171,15 +170,27 @@ public boolean check(int value) {\n     private static final Range[] testItemRanges = new Range[] {\n             new Range(106, 139),\n             new Range(1000, 1099),\n-            new Range(2001, 2008),\n-            new Range(2017, 2029),\n-          //  new Range(108001, 108387) //food\n+            new Range(2001, 3022),\n+            new Range(23300, 23340),\n+            new Range(23383, 23385),\n+            new Range(78310, 78554),\n+            new Range(99310, 99554),\n+            new Range(100001, 100187),\n+            new Range(100210, 100214),\n+            new Range(100303, 100398),\n+            new Range(100414, 100425),\n+            new Range(100454, 103008),\n+            new Range(109000, 109492),\n+            new Range(115001, 118004),\n+            new Range(141001, 141072),\n+            new Range(220050, 221016),\n     };\n     private static final Integer[] testItemsIds = new Integer[] {\n-            210, 211, 314, 315, 317, 1005, 1007, 1105, 1107, 1201, 1202, 2800,\n-            100001, 100002, 100244, 100305, 100312, 100313, 101212, 11411, 11506, 11507, 11508, 12505,\n-            12506, 12508, 12509, 13503, 13506, 14411, 14503, 14505, 14508, 15411, 15504, 15505,\n-            15506, 15508, 20001, 10002, 10003, 10004, 10005, 10006, 10008 //9\n+            210, 211, 314, 315, 317, 1005, 1007, 1105, 1107, 1201, 1202,10366,\n+            101212, 11411, 11506, 11507, 11508, 12505, 12506, 12508, 12509, 13503,\n+            13506, 14411, 14503, 14505, 14508, 15411, 15504, 15505, 15506, 15508,\n+            20001, 10002, 10003, 10004, 10005, 10006, 10008,100231,100232,100431,\n+            101689,105001,105004, 106000,106001,108000,110000\n     };\n \n     private static final Collection<Integer> testItemsList = Arrays.asList(testItemsIds);",
      "parent_sha": "b28f65f147ce3d560ee19c9f4b96b6d73790ef8d"
    }
  },
  {
    "oid": "416ef561017f3c3b9d13b67d74d7b05fd3147af0",
    "message": "Bump down the plugin API version\n\nnothing major was *removed*, meaning all existing v2 plugins should still work",
    "date": "2023-09-02T23:05:30Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/416ef561017f3c3b9d13b67d74d7b05fd3147af0",
    "details": {
      "sha": "717bce10e60e2a7971571dd6006d2a753684164b",
      "filename": "src/main/java/emu/grasscutter/plugin/PluginManager.java",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/416ef561017f3c3b9d13b67d74d7b05fd3147af0/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fplugin%2FPluginManager.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/416ef561017f3c3b9d13b67d74d7b05fd3147af0/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fplugin%2FPluginManager.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fplugin%2FPluginManager.java?ref=416ef561017f3c3b9d13b67d74d7b05fd3147af0",
      "patch": "@@ -1,17 +1,18 @@\n package emu.grasscutter.plugin;\n \n-import static emu.grasscutter.utils.lang.Language.translate;\n-\n import emu.grasscutter.Grasscutter;\n import emu.grasscutter.server.event.*;\n import emu.grasscutter.utils.*;\n+import lombok.*;\n+\n+import javax.annotation.Nullable;\n import java.io.*;\n import java.lang.reflect.Method;\n import java.net.*;\n import java.util.*;\n import java.util.jar.*;\n-import javax.annotation.Nullable;\n-import lombok.*;\n+\n+import static emu.grasscutter.utils.lang.Language.translate;\n \n /** Manages the server's plugins and the event system. */\n public final class PluginManager {\n@@ -20,7 +21,7 @@ public final class PluginManager {\n      * A 'breaking change' is something which changes the existing logic of the API.\n      */\n     @SuppressWarnings(\"FieldCanBeLocal\")\n-    public static int API_VERSION = 3;\n+    public static int API_VERSION = 2;\n \n     /* All loaded plugins. */\n     private final Map<String, Plugin> plugins = new LinkedHashMap<>();",
      "parent_sha": "ed0e89074bc934438be0bbafa81711d6886c4db0"
    }
  },
  {
    "oid": "eb54dcec0ea15e15b67df5aeb0d06e7a4ccc3cff",
    "message": "Update FileUtils.java\n\nfix: Error when checking files & always checking \"/default/data\" instead of folder",
    "date": "2022-05-20T12:49:28Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/eb54dcec0ea15e15b67df5aeb0d06e7a4ccc3cff",
    "details": {
      "sha": "61ed6b44304cf63ea20baa2fe6e8bc2a676884b4",
      "filename": "src/main/java/emu/grasscutter/utils/FileUtils.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/eb54dcec0ea15e15b67df5aeb0d06e7a4ccc3cff/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Futils%2FFileUtils.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/eb54dcec0ea15e15b67df5aeb0d06e7a4ccc3cff/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Futils%2FFileUtils.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Futils%2FFileUtils.java?ref=eb54dcec0ea15e15b67df5aeb0d06e7a4ccc3cff",
      "patch": "@@ -97,7 +97,7 @@ public static List<Path> getPathsFromResource(String folder) throws URISyntaxExc\n \t\t\t}\n \t\t} catch (Exception e) {\n \t\t\t// Eclipse puts resources in its bin folder\n-\t\t\tFile f = new File(jarPath + \"defaults/data/\");\n+\t\t\tFile f = new File(System.getProperty(\"user.dir\") + folder);\n \t\t\t\n \t\t\tif (!f.exists() || f.listFiles().length == 0) {\n \t\t\t\treturn null;",
      "parent_sha": "92f1a93ba2c58d9b102ddb07690a9825669104de"
    }
  },
  {
    "oid": "7d1a7b501b8740318d3fe8bcfe09f31467b5e6db",
    "message": "Added \"s\" alias to SpawnCommand (closes #1840)",
    "date": "2022-10-24T00:02:10Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/7d1a7b501b8740318d3fe8bcfe09f31467b5e6db",
    "details": {
      "sha": "ee8d0e6db8f9f14f551d0a375cd5742ed0b7abb8",
      "filename": "src/main/java/emu/grasscutter/command/commands/SpawnCommand.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/7d1a7b501b8740318d3fe8bcfe09f31467b5e6db/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FSpawnCommand.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/7d1a7b501b8740318d3fe8bcfe09f31467b5e6db/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FSpawnCommand.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FSpawnCommand.java?ref=7d1a7b501b8740318d3fe8bcfe09f31467b5e6db",
      "patch": "@@ -25,7 +25,7 @@\n \n @Command(\n     label = \"spawn\",\n-    aliases = {\"drop\"},\n+    aliases = {\"drop\", \"s\"},\n     usage = {\n         \"<itemId> [x<amount>] [blk<blockId>] [grp<groupId>] [cfg<configId>] <x> <y> <z>\",\n         \"<gadgetId> [x<amount>] [state<state>] [maxhp<maxhp>] [hp<hp>(0 for infinite)] [atk<atk>] [def<def>] [blk<blockId>] [grp<groupId>] [cfg<configId>] <x> <y> <z>\",",
      "parent_sha": "8b520b388312080e232cd1031cbe32f831a5228c"
    }
  },
  {
    "oid": "fb05a3711dac4eeb9488bc6ab2791a71c69972ae",
    "message": "Update CNLanguage.java",
    "date": "2022-05-05T05:57:33Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/fb05a3711dac4eeb9488bc6ab2791a71c69972ae",
    "details": {
      "sha": "7bd4ee510e47576fab7cfdcfdfc5a24e58cf36da",
      "filename": "src/main/java/emu/grasscutter/languages/CNLanguage.java",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/fb05a3711dac4eeb9488bc6ab2791a71c69972ae/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Flanguages%2FCNLanguage.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/fb05a3711dac4eeb9488bc6ab2791a71c69972ae/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Flanguages%2FCNLanguage.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Flanguages%2FCNLanguage.java?ref=fb05a3711dac4eeb9488bc6ab2791a71c69972ae",
      "patch": "@@ -18,7 +18,7 @@ public final class CNLanguage {\n     public String Not_load_keystore = \"[Dispatch] \u65e0\u6cd5\u52a0\u8f7d\u8bc1\u4e66\uff0c\u6b63\u5728\u5c1d\u8bd5\u9ed8\u8ba4\u5bc6\u7801...\";\n     public String Use_default_keystore = \"[Dispatch] \u6210\u529f\u4f7f\u7528\u9ed8\u8ba4\u5bc6\u7801\u52a0\u8f7d\u8bc1\u4e66. \u8bf7\u8003\u8651\u5c06config.json\u4e2d\u7684KeystorePassword\u9879\u6539\u4e3a123456.\";\n     public String Load_keystore_error = \"[Dispatch] \u52a0\u8f7d\u8bc1\u4e66\u65f6\u51fa\u73b0\u9519\u8bef!\";\n-    public String Not_find_ssl_cert = \"[Dispatch] \u672a\u627e\u5230SSL\u8bc1\u4e66\uff0c\u6b63\u5728\u56de\u6eda\u81f3\u57fa\u672cHTTP\u3002\";\n+    public String Not_find_ssl_cert = \"[Dispatch] \u672a\u627e\u5230SSL\u8bc1\u4e66\uff0c\u6b63\u5728\u56de\u6eda\u81f3HTTP\u6a21\u5f0f\u3002\";\n     public String Welcome = \"\u6b22\u8fce\u4f7f\u7528Grasscutter\";\n     public String Potential_unhandled_request = \"[Dispatch] \u6f5c\u5728\u7684\u672a\u5904\u7406\u8bf7\u6c42: {method} {url}\";\n     public String Client_login_token = \"[Dispatch] \u5ba2\u6237\u7aef {ip} \u6b63\u5728\u5c1d\u8bd5\u4f7f\u7528token\u767b\u5f55...\";\n@@ -128,9 +128,8 @@ public final class CNLanguage {\n     public String Give_given_with_level_and_refinement = \"\u5df2\u5c06 {amount} \u4e2a\u7b49\u7ea7\u4e3a {lvl}, \u7cbe\u70bc {refinement} \u7684 {item} \u7ed9\u4e88 {target}.\";\n     public String Give_given_level = \"\u5df2\u5c06 {amount} \u4e2a\u7b49\u7ea7\u4e3a {lvl} \u7684 {item} \u7ed9\u4e0e {target}.\";\n \n-\n     // GodMode\n-    public String Godmode_status = \"\u73b0\u5df2\u4e3a {name} {status} \u65e0\u654c\u6a21\u5f0f \";\n+    public String Godmode_status = \"\u8bbe\u7f6e {name} \u7684\u65e0\u654c\u6a21\u5f0f\u4e3a {status}  \";\n \n     // Heal\n     public String Heal_message = \"\u6240\u6709\u89d2\u8272\u5df2\u88ab\u6cbb\u7597\u3002\";\n@@ -185,14 +184,14 @@ public final class CNLanguage {\n     public String SendMail_Please_use = \"\u8bf7\u4f7f\u7528 `/sendmail {args}`\";\n     public String SendMail_set_title = \"\u90ae\u4ef6\u6807\u9898\u5df2\u8bbe\u4e3a '{title}'.\\n\u4f7f\u7528 '/sendmail <\u90ae\u4ef6\u6b63\u6587>' \u4ee5\u7ee7\u7eed.\";\n     public String SendMail_set_contents = \"\u90ae\u4ef6\u7684\u6b63\u6587\u5982\u4e0b:\\n '{contents}'\\n\u4f7f\u7528 '/sendmail <\u53d1\u9001\u8005\u7f72\u540d>' \u4ee5\u7ee7\u7eed.\";\n-\tpublic String SendMail_set_message_sender = \"\u90ae\u4ef6\u7684\u53d1\u9001\u8005\u5df2\u8bbe\u4e3a '{send}'.\\n\u4f7f\u7528 '/sendmail <\u7269\u54c1Id|\u7269\u54c1\u540d|finish(\u7ed3\u675f\u7f16\u8f91\u5e76\u53d1\u9001)> [\u6570\u91cf] [\u7b49\u7ea7]\";\n+    public String SendMail_set_message_sender = \"\u90ae\u4ef6\u7684\u53d1\u9001\u8005\u5df2\u8bbe\u4e3a '{send}'.\\n\u4f7f\u7528 '/sendmail <\u7269\u54c1Id|\u7269\u54c1\u540d|finish(\u7ed3\u675f\u7f16\u8f91\u5e76\u53d1\u9001)> [\u6570\u91cf] [\u7b49\u7ea7]\";\n     public String SendMail_send = \"\u5df2\u5c06 {amount} \u4e2a {item} (\u7b49\u7ea7 {lvl}) \u4f5c\u4e3a\u90ae\u4ef6\u9644\u4ef6.\\n\u4f60\u53ef\u4ee5\u7ee7\u7eed\u6dfb\u52a0\u9644\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 `/sendmail finish` \u6765\u505c\u6b62\u7f16\u8f91\u5e76\u53d1\u9001\u90ae\u4ef6.\";\n     public String SendMail_invalid_arguments_please_use = \"\u65e0\u6548\u7684\u53c2\u6570 \\n \u8bf7\u4f7f\u7528 `/sendmail {args}`\";\n     public String SendMail_title = \"<\u6807\u9898>\";\n     public String SendMail_message = \"<\u6b63\u6587>\";\n     public String SendMail_sender = \"<\u53d1\u9001\u8005>\";\n     public String SendMail_arguments = \"<\u7269\u54c1Id|\u7269\u54c1\u540d|finish(\u7ed3\u675f\u7f16\u8f91\u5e76\u53d1\u9001)> [\u6570\u91cf] [\u7b49\u7ea7]\";\n-\tpublic String SendMail_error = \"\u9519\u8bef:\u65e0\u6548\u7684\u7f16\u5199\u9636\u6bb5 {stage}. \u9700\u8981stacktrace\u8bf7\u770b\u670d\u52a1\u5668\u547d\u4ee4\u884c.\";\n+    public String SendMail_error = \"\u9519\u8bef:\u65e0\u6548\u7684\u7f16\u5199\u9636\u6bb5 {stage}. \u9700\u8981stacktrace\u8bf7\u770b\u670d\u52a1\u5668\u547d\u4ee4\u884c.\";\n \n     // SendMessage\n     public String SendMessage_usage = \"\u7528\u6cd5: sendmessage <\u73a9\u5bb6\u540d> <\u6d88\u606f>\";",
      "parent_sha": "a7b9b1f92342fbb315570a65300aff86e4034439"
    }
  },
  {
    "oid": "9cac0953faec1ceeae68bf451c3a07b6bd9788b8",
    "message": "Add alternate val name (#2245)",
    "date": "2023-07-03T11:01:50Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/9cac0953faec1ceeae68bf451c3a07b6bd9788b8",
    "details": {
      "sha": "eb70657267551032eac7eff803d33430be3d6977",
      "filename": "src/main/java/emu/grasscutter/data/excels/ItemData.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/9cac0953faec1ceeae68bf451c3a07b6bd9788b8/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fdata%2Fexcels%2FItemData.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/9cac0953faec1ceeae68bf451c3a07b6bd9788b8/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fdata%2Fexcels%2FItemData.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fdata%2Fexcels%2FItemData.java?ref=9cac0953faec1ceeae68bf451c3a07b6bd9788b8",
      "patch": "@@ -89,7 +89,7 @@ public class ItemData extends GameResource {\n \n     @SerializedName(\n             value = \"roomSceneId\",\n-            alternate = {\"BMEPAMCNABE\", \"DANFGGLKLNO\", \"JFDLJGDFIGL\", \"OHIANNAEEAK\", \"MFGACDIOHGF\"})\n+            alternate = {\"BMEPAMCNABE\", \"DANFGGLKLNO\", \"JFDLJGDFIGL\", \"OHIANNAEEAK\", \"MFGACDIOHGF\", \"roomSceneID\"})\n     private int roomSceneId;\n \n     // Custom",
      "parent_sha": "8c2d00fcd330277c26f6e08d51f5a2afc155a8d6"
    }
  },
  {
    "oid": "6c8999875933741927a880deb9952cc3df8bb913",
    "message": "Fix KillSelf",
    "date": "2023-06-11T20:24:42Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/6c8999875933741927a880deb9952cc3df8bb913",
    "details": {
      "sha": "40096df1d77d6d595a4aa1f940e418acf74afe92",
      "filename": "src/main/java/emu/grasscutter/game/ability/actions/ActionKillSelf.java",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/6c8999875933741927a880deb9952cc3df8bb913/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fability%2Factions%2FActionKillSelf.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/6c8999875933741927a880deb9952cc3df8bb913/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fability%2Factions%2FActionKillSelf.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fability%2Factions%2FActionKillSelf.java?ref=6c8999875933741927a880deb9952cc3df8bb913",
      "patch": "@@ -1,6 +1,7 @@\n package emu.grasscutter.game.ability.actions;\n \n import com.google.protobuf.ByteString;\n+import emu.grasscutter.Grasscutter;\n import emu.grasscutter.data.binout.AbilityModifier.AbilityModifierAction;\n import emu.grasscutter.game.ability.Ability;\n import emu.grasscutter.game.entity.GameEntity;\n@@ -10,9 +11,14 @@ public final class ActionKillSelf extends AbilityActionHandler {\n     @Override\n     public boolean execute(\n             Ability ability, AbilityModifierAction action, ByteString abilityData, GameEntity target) {\n-        GameEntity owner = ability.getOwner();\n-        owner.getScene().killEntity(owner);\n+        // KillSelf should not have a target field, so target it's the actual entity to be applied.\n+        // TODO: Check if this is always true.\n+        if (target == null) {\n+            Grasscutter.getLogger().warn(\"Tried killing null target\");\n+            return false;\n+        }\n \n+        target.getScene().killEntity(target);\n         return true;\n     }\n }",
      "parent_sha": "3cc5e6b4e80f8c6a2b10abcd073f28c93eb57270"
    }
  },
  {
    "oid": "8870675dcdeb634060368baac6b0154b005d1bf0",
    "message": "Remove dead entities on scene tick",
    "date": "2023-06-03T01:41:10Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/8870675dcdeb634060368baac6b0154b005d1bf0",
    "details": {
      "sha": "32252780d5ec64d061a8eddb678ea254966b84ec",
      "filename": "src/main/java/emu/grasscutter/game/world/Scene.java",
      "status": "modified",
      "additions": 13,
      "deletions": 5,
      "changes": 18,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/8870675dcdeb634060368baac6b0154b005d1bf0/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fworld%2FScene.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/8870675dcdeb634060368baac6b0154b005d1bf0/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fworld%2FScene.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fworld%2FScene.java?ref=8870675dcdeb634060368baac6b0154b005d1bf0",
      "patch": "@@ -22,8 +22,8 @@\n import emu.grasscutter.game.quest.QuestGroupSuite;\n import emu.grasscutter.game.world.data.TeleportProperties;\n import emu.grasscutter.net.packet.BasePacket;\n-import emu.grasscutter.net.proto.*;\n import emu.grasscutter.net.proto.AttackResultOuterClass.AttackResult;\n+import emu.grasscutter.net.proto.*;\n import emu.grasscutter.net.proto.VisionTypeOuterClass.VisionType;\n import emu.grasscutter.scripts.*;\n import emu.grasscutter.scripts.constants.EventType;\n@@ -33,11 +33,12 @@\n import emu.grasscutter.server.packet.send.*;\n import emu.grasscutter.utils.objects.KahnsSort;\n import it.unimi.dsi.fastutil.ints.Int2ObjectMap;\n+import lombok.*;\n+\n+import javax.annotation.Nullable;\n import java.util.*;\n import java.util.concurrent.*;\n import java.util.stream.Collectors;\n-import javax.annotation.Nullable;\n-import lombok.*;\n \n public final class Scene {\n     @Getter private final World world;\n@@ -540,11 +541,18 @@ public void onTick() {\n         }\n \n         var sceneTime = getSceneTimeSeconds();\n-        getEntities().forEach((eid, e) -> e.onTick(sceneTime));\n+\n+        var entities = Map.copyOf(this.getEntities());\n+        entities.forEach(\n+                (eid, e) -> {\n+                    if (!e.isAlive()) {\n+                        this.getEntities().remove(eid);\n+                    } else e.onTick(sceneTime);\n+                });\n \n         blossomManager.onTick();\n \n-        checkNpcGroup();\n+        this.checkNpcGroup();\n \n         this.finishLoading();\n         this.checkPlayerRespawn();",
      "parent_sha": "43fa6efec95b03f3a6e417d35ce5424f965eb99e"
    }
  },
  {
    "oid": "f5cdedcc88d906d45c8d19c4209c3f565c7d230a",
    "message": "Fix logic error in remove command",
    "date": "2022-05-15T08:17:26Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/f5cdedcc88d906d45c8d19c4209c3f565c7d230a",
    "details": {
      "sha": "f39b6da24e9e7a391fc047d3f50dd6d40b669293",
      "filename": "src/main/java/emu/grasscutter/command/commands/RemoveCommand.java",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/f5cdedcc88d906d45c8d19c4209c3f565c7d230a/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FRemoveCommand.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/f5cdedcc88d906d45c8d19c4209c3f565c7d230a/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FRemoveCommand.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FRemoveCommand.java?ref=f5cdedcc88d906d45c8d19c4209c3f565c7d230a",
      "patch": "@@ -8,7 +8,6 @@\n \n import java.util.ArrayList;\n import java.util.Collections;\n-import java.util.Comparator;\n import java.util.List;\n \n import static emu.grasscutter.utils.Language.translate;\n@@ -28,15 +27,17 @@ public void execute(Player sender, Player targetPlayer, List<String> args) {\n         for (String arg : args) {\n             try {\n                 int avatarIndex = Integer.parseInt(arg);\n-                avatarIndexList.add(avatarIndex);\n+                if (!avatarIndexList.contains(avatarIndex)) {\n+                    avatarIndexList.add(avatarIndex);\n+                }\n             } catch (Exception ignored) {\n                 ignored.printStackTrace();\n                 CommandHandler.sendMessage(sender, translate(\"commands.remove.invalid_index\"));\n                 return;\n             }\n         }\n \n-        Collections.reverse(avatarIndexList);\n+        Collections.sort(avatarIndexList, Collections.reverseOrder());\n \n         for (int i = 0; i < avatarIndexList.size(); i++) {\n             if (avatarIndexList.get(i) > targetPlayer.getTeamManager().getCurrentTeamInfo().getAvatars().size() || avatarIndexList.get(i) <= 0) {",
      "parent_sha": "efd7467a710fbe56542117f8c4f4bf3921c2fc62"
    }
  },
  {
    "oid": "3d52964112ee2cd0c60a171dce036da88aa2fab1",
    "message": "Fix equip swapping",
    "date": "2022-05-04T08:45:41Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/3d52964112ee2cd0c60a171dce036da88aa2fab1",
    "details": {
      "sha": "b0bfb08010429e7079821105e877bf0c04801fb2",
      "filename": "src/main/java/emu/grasscutter/game/avatar/Avatar.java",
      "status": "modified",
      "additions": 19,
      "deletions": 2,
      "changes": 21,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/3d52964112ee2cd0c60a171dce036da88aa2fab1/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Favatar%2FAvatar.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/3d52964112ee2cd0c60a171dce036da88aa2fab1/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Favatar%2FAvatar.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Favatar%2FAvatar.java?ref=3d52964112ee2cd0c60a171dce036da88aa2fab1",
      "patch": "@@ -401,15 +401,32 @@ public int getBornTime() {\n \t}\n \t\n \tpublic boolean equipItem(GameItem item, boolean shouldRecalc) {\n+\t\t// Sanity check equip type\n \t\tEquipType itemEquipType = item.getItemData().getEquipType();\n \t\tif (itemEquipType == EquipType.EQUIP_NONE) {\n \t\t\treturn false;\n \t\t}\n-\t\t\n-\t\tif (getEquips().containsKey(itemEquipType.getValue())) {\n+\n+\t\t// Check if other avatars have this item equipped\n+\t\tAvatar otherAvatar = getPlayer().getAvatars().getAvatarById(item.getEquipCharacter());\n+\t\tif (otherAvatar != null) {\n+\t\t\t// Unequip other avatar's item\n+\t\t\tif (otherAvatar.unequipItem(item.getItemData().getEquipType())) {\n+\t\t\t\tgetPlayer().sendPacket(new PacketAvatarEquipChangeNotify(otherAvatar, item.getItemData().getEquipType()));\n+\t\t\t} \n+\t\t\t// Swap with other avatar\n+\t\t\tif (getEquips().containsKey(itemEquipType.getValue())) {\n+\t\t\t\tGameItem toSwap = this.getEquipBySlot(itemEquipType);\n+\t\t\t\totherAvatar.equipItem(toSwap, false);\n+\t\t\t}\n+\t\t\t// Recalc\n+\t\t\totherAvatar.recalcStats();\n+\t\t} else if (getEquips().containsKey(itemEquipType.getValue())) {\n+\t\t\t// Unequip item in current slot if it exists\n \t\t\tunequipItem(itemEquipType);\n \t\t}\n \t\t\n+\t\t// Set equip\n \t\tgetEquips().put(itemEquipType.getValue(), item);\n \t\t\n \t\tif (itemEquipType == EquipType.EQUIP_WEAPON && getPlayer().getWorld() != null) {",
      "parent_sha": "787f3fd45e83146beca0a544e8c16d9677ce1a4b"
    }
  },
  {
    "oid": "ae2ab20b5b247ae6af7eaca0fed6ffe7332146e6",
    "message": "add support for 3.8 teapot binout files (scene 2005, 2204) (#2265)",
    "date": "2023-07-23T03:17:02Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/ae2ab20b5b247ae6af7eaca0fed6ffe7332146e6",
    "details": {
      "sha": "050a2d8a93f88420ccf51a2304cc58631a0b15e9",
      "filename": "src/main/java/emu/grasscutter/data/binout/HomeworldDefaultSaveData.java",
      "status": "modified",
      "additions": 12,
      "deletions": 12,
      "changes": 24,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/ae2ab20b5b247ae6af7eaca0fed6ffe7332146e6/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fdata%2Fbinout%2FHomeworldDefaultSaveData.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/ae2ab20b5b247ae6af7eaca0fed6ffe7332146e6/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fdata%2Fbinout%2FHomeworldDefaultSaveData.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fdata%2Fbinout%2FHomeworldDefaultSaveData.java?ref=ae2ab20b5b247ae6af7eaca0fed6ffe7332146e6",
      "patch": "@@ -11,49 +11,49 @@\n @FieldDefaults(level = AccessLevel.PRIVATE)\n public class HomeworldDefaultSaveData {\n \n-    @SerializedName(value = \"KFHBFNPDJBE\", alternate = \"PKACPHDGGEI\")\n+    @SerializedName(value = \"KFHBFNPDJBE\", alternate = {\"PKACPHDGGEI\", \"AKOLOBLHDFK\"})\n     List<HomeBlock> homeBlockLists;\n \n-    @SerializedName(value = \"IJNPADKGNKE\", alternate = \"MINCKHBNING\")\n+    @SerializedName(value = \"IJNPADKGNKE\", alternate = {\"MINCKHBNING\", \"MBICDPDEKDM\"})\n     Position bornPos;\n \n-    @SerializedName(\"IPIIGEMFLHK\")\n+    @SerializedName(value = \"IPIIGEMFLHK\", alternate = {\"EJJIOJKFKCO\"})\n     Position bornRot;\n \n-    @SerializedName(\"HHOLBNPIHEM\")\n+    @SerializedName(value = \"HHOLBNPIHEM\", alternate = {\"CJAKHCIFHNP\"})\n     Position djinPos;\n \n-    @SerializedName(\"KNHCJKHCOAN\")\n+    @SerializedName(value = \"KNHCJKHCOAN\", alternate = {\"AMDNOHPGKMI\"})\n     HomeFurniture mainhouse;\n \n-    @SerializedName(\"NIHOJFEKFPG\")\n+    @SerializedName(value = \"NIHOJFEKFPG\", alternate = {\"BHCPEAOPIDC\"})\n     List<HomeFurniture> doorLists;\n \n-    @SerializedName(\"EPGELGEFJFK\")\n+    @SerializedName(value = \"EPGELGEFJFK\", alternate = {\"AABEPENIFLN\"})\n     List<HomeFurniture> stairLists;\n \n     @Data\n     @FieldDefaults(level = AccessLevel.PRIVATE)\n     public static class HomeBlock {\n \n-        @SerializedName(value = \"FGIJCELCGFI\", alternate = \"PGDPDIDJEEL\")\n+        @SerializedName(value = \"FGIJCELCGFI\", alternate = {\"PGDPDIDJEEL\", \"ANICBLBOBKD\"})\n         int blockId;\n \n-        @SerializedName(\"BEAPOFELABD\")\n+        @SerializedName(value = \"BEAPOFELABD\", alternate = {\"NCIMIKKFLOH\"})\n         List<HomeFurniture> furnitures;\n \n-        @SerializedName(\"MLIODLGDFHJ\")\n+        @SerializedName(value = \"MLIODLGDFHJ\", alternate = {\"GJGNLIINBGB\"})\n         List<HomeFurniture> persistentFurnitures;\n     }\n \n     @Data\n     @FieldDefaults(level = AccessLevel.PRIVATE)\n     public static class HomeFurniture {\n \n-        @SerializedName(value = \"ENHNGKJBJAB\", alternate = \"KMAAJJHPNBA\")\n+        @SerializedName(value = \"ENHNGKJBJAB\", alternate = {\"KMAAJJHPNBA\", \"FFLCGFGGGND\"})\n         int id;\n \n-        @SerializedName(value = \"NGIEEIOLPPO\", alternate = \"JFKAHNCPDME\")\n+        @SerializedName(value = \"NGIEEIOLPPO\", alternate = {\"JFKAHNCPDME\", \"BPCGGBKIAMG\"})\n         Position pos;\n         // @SerializedName(value = \"HEOCEHKEBFM\", alternate = \"LKCKOOGFDBM\")\n         Position rot;",
      "parent_sha": "27d495742d9652f80b3a60c15f5814fa8e9b9237"
    }
  },
  {
    "oid": "c26bf08d909f4b4bac398fe691862bdd93746fcf",
    "message": "fix indentation",
    "date": "2022-05-26T04:10:10Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/c26bf08d909f4b4bac398fe691862bdd93746fcf",
    "details": {
      "sha": "5bdb803faee7ebdf8ed764bf0e38584cf0010a62",
      "filename": "src/main/java/emu/grasscutter/game/managers/EnergyManager/EnergyManager.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/c26bf08d909f4b4bac398fe691862bdd93746fcf/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fmanagers%2FEnergyManager%2FEnergyManager.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/c26bf08d909f4b4bac398fe691862bdd93746fcf/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fmanagers%2FEnergyManager%2FEnergyManager.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fmanagers%2FEnergyManager%2FEnergyManager.java?ref=c26bf08d909f4b4bac398fe691862bdd93746fcf",
      "patch": "@@ -52,7 +52,7 @@ public Player getPlayer() {\n \tpublic static void initialize() {\n \t\t// Read the data we need for monster energy drops.\n \t\ttry (Reader fileReader = new InputStreamReader(DataLoader.load(\"EnergyDrop.json\"))) {\n-            List<EnergyDropEntry> energyDropList = Grasscutter.getGsonFactory().fromJson(fileReader, TypeToken.getParameterized(Collection.class, EnergyDropEntry.class).getType());\n+\t\t\tList<EnergyDropEntry> energyDropList = Grasscutter.getGsonFactory().fromJson(fileReader, TypeToken.getParameterized(Collection.class, EnergyDropEntry.class).getType());\n \n \t\t\tfor (EnergyDropEntry entry : energyDropList) {\n \t\t\t\tenergyDropData.put(entry.getDropId(), entry.getDropList());\n@@ -66,7 +66,7 @@ public static void initialize() {\n \n \t\t// Read the data for particle generation from skills\n \t\ttry (Reader fileReader = new InputStreamReader(DataLoader.load(\"SkillParticleGeneration.json\"))) {\n-            List<SkillParticleGenerationEntry> skillParticleGenerationList = Grasscutter.getGsonFactory().fromJson(fileReader, TypeToken.getParameterized(Collection.class, SkillParticleGenerationEntry.class).getType());\n+\t\t\tList<SkillParticleGenerationEntry> skillParticleGenerationList = Grasscutter.getGsonFactory().fromJson(fileReader, TypeToken.getParameterized(Collection.class, SkillParticleGenerationEntry.class).getType());\n \n \t\t\tfor (SkillParticleGenerationEntry entry : skillParticleGenerationList) {\n \t\t\t\tskillParticleGenerationData.put(entry.getAvatarId(), entry.getAmountList());",
      "parent_sha": "95bc65588289a35c1d8a38a9b98e4fb996ad4895"
    }
  },
  {
    "oid": "5811556630ce8cfb925d15809b40895e265b96fb",
    "message": "don't take effect if energyUsage is false",
    "date": "2022-05-24T21:43:02Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/5811556630ce8cfb925d15809b40895e265b96fb",
    "details": {
      "sha": "96a7b84786dba4c25b3d2c6443e8b47a676ee92e",
      "filename": "src/main/java/emu/grasscutter/game/avatar/Avatar.java",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/5811556630ce8cfb925d15809b40895e265b96fb/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Favatar%2FAvatar.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/5811556630ce8cfb925d15809b40895e265b96fb/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Favatar%2FAvatar.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Favatar%2FAvatar.java?ref=5811556630ce8cfb925d15809b40895e265b96fb",
      "patch": "@@ -360,7 +360,9 @@ public void setCurrentHp(float currentHp) {\n \t}\n \n \tpublic void setCurrentEnergy() {\n-\t\tthis.setCurrentEnergy(this.currentEnergy);\n+\t\tif (GAME_OPTIONS.energyUsage) {\n+\t\t\tthis.setCurrentEnergy(this.currentEnergy);\n+\t\t}\n \t}\n \t\n \tpublic void setCurrentEnergy(float currentEnergy) {\n@@ -378,9 +380,11 @@ public void setCurrentEnergy(float currentEnergy) {\n \t}\n \n \tpublic void setCurrentEnergy(FightProperty curEnergyProp, float currentEnergy) {\n-\t\tthis.setFightProperty(curEnergyProp, currentEnergy);\n-\t\tthis.currentEnergy = currentEnergy;\n-\t\tthis.save();\n+\t\tif (GAME_OPTIONS.energyUsage) {\n+\t\t\tthis.setFightProperty(curEnergyProp, currentEnergy);\n+\t\t\tthis.currentEnergy = currentEnergy;\n+\t\t\tthis.save();\n+\t\t}\n \t}\n \n \tpublic Int2FloatOpenHashMap getFightProperties() {",
      "parent_sha": "af381dcf427f17a475e0fdc2a9b80ddad0735015"
    }
  },
  {
    "oid": "e8bfdc3c0124da744684dc6a68660d9b1a5c394c",
    "message": "Send system hint when a player joins/leaves a world in multiplayer",
    "date": "2023-06-03T01:41:47Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/e8bfdc3c0124da744684dc6a68660d9b1a5c394c",
    "details": {
      "sha": "59e884d2e01656ba6fa737a88f7bac833c29ca89",
      "filename": "src/main/java/emu/grasscutter/game/world/World.java",
      "status": "modified",
      "additions": 23,
      "deletions": 17,
      "changes": 40,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/e8bfdc3c0124da744684dc6a68660d9b1a5c394c/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fworld%2FWorld.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/e8bfdc3c0124da744684dc6a68660d9b1a5c394c/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fworld%2FWorld.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fworld%2FWorld.java?ref=e8bfdc3c0124da744684dc6a68660d9b1a5c394c",
      "patch": "@@ -1,38 +1,30 @@\n package emu.grasscutter.game.world;\n \n-import static emu.grasscutter.server.event.player.PlayerTeleportEvent.TeleportType.SCRIPT;\n-\n import emu.grasscutter.data.GameData;\n import emu.grasscutter.data.excels.dungeon.DungeonData;\n-import emu.grasscutter.game.entity.EntityTeam;\n-import emu.grasscutter.game.entity.EntityWorld;\n+import emu.grasscutter.game.entity.*;\n import emu.grasscutter.game.player.Player;\n import emu.grasscutter.game.player.Player.SceneLoadState;\n-import emu.grasscutter.game.props.EnterReason;\n-import emu.grasscutter.game.props.EntityIdType;\n-import emu.grasscutter.game.props.PlayerProperty;\n-import emu.grasscutter.game.props.SceneType;\n+import emu.grasscutter.game.props.*;\n import emu.grasscutter.game.quest.enums.QuestContent;\n import emu.grasscutter.game.world.data.TeleportProperties;\n import emu.grasscutter.net.packet.BasePacket;\n+import emu.grasscutter.net.proto.ChatInfoOuterClass.ChatInfo.SystemHint;\n import emu.grasscutter.net.proto.EnterTypeOuterClass.EnterType;\n import emu.grasscutter.scripts.data.SceneConfig;\n import emu.grasscutter.server.event.player.PlayerTeleportEvent;\n import emu.grasscutter.server.event.player.PlayerTeleportEvent.TeleportType;\n import emu.grasscutter.server.game.GameServer;\n import emu.grasscutter.server.packet.send.*;\n import emu.grasscutter.utils.ConversionUtils;\n-import it.unimi.dsi.fastutil.ints.Int2ObjectMap;\n-import it.unimi.dsi.fastutil.ints.Int2ObjectMaps;\n-import it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap;\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.Iterator;\n-import java.util.List;\n-import lombok.Getter;\n-import lombok.val;\n+import it.unimi.dsi.fastutil.ints.*;\n+import lombok.*;\n import org.jetbrains.annotations.NotNull;\n \n+import java.util.*;\n+\n+import static emu.grasscutter.server.event.player.PlayerTeleportEvent.TeleportType.SCRIPT;\n+\n public class World implements Iterable<Player> {\n     @Getter private final GameServer server;\n     @Getter private final Player host;\n@@ -164,6 +156,14 @@ public synchronized void addPlayer(Player player) {\n                             player.getTeamManager().getCurrentSinglePlayerTeamInfo(),\n                             player.getTeamManager().getMaxTeamSize());\n             player.getTeamManager().setCurrentCharacterIndex(0);\n+\n+            if (player != this.getHost()) {\n+                this.broadcastPacket(new PacketPlayerChatNotify(\n+                    player, 0,\n+                    SystemHint.newBuilder()\n+                        .setType(1).build()\n+                ));\n+            }\n         }\n \n         // Add to scene\n@@ -217,6 +217,12 @@ public synchronized void removePlayer(Player player) {\n                                 victim.getSceneId(),\n                                 victim.getPosition()));\n             }\n+        } else {\n+            this.broadcastPacket(new PacketPlayerChatNotify(\n+                player, 0,\n+                SystemHint.newBuilder()\n+                    .setType(2).build()\n+            ));\n         }\n     }\n ",
      "parent_sha": "8870675dcdeb634060368baac6b0154b005d1bf0"
    }
  },
  {
    "oid": "54856147ef4750ef76277663f3c84555809ff6d9",
    "message": "Listens to all addresses by default\n\nSigned-off-by: Jaida Wu <mlgmxyysd@meowcat.org>",
    "date": "2022-04-21T16:02:03Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/54856147ef4750ef76277663f3c84555809ff6d9",
    "details": {
      "sha": "0b011e57648b208a80ce98c4f11e6ae3648ebb52",
      "filename": "src/main/java/emu/grasscutter/Config.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/54856147ef4750ef76277663f3c84555809ff6d9/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2FConfig.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/54856147ef4750ef76277663f3c84555809ff6d9/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2FConfig.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2FConfig.java?ref=54856147ef4750ef76277663f3c84555809ff6d9",
      "patch": "@@ -1,16 +1,16 @@\n package emu.grasscutter;\n \n public final class Config {\n-\tpublic String DispatchServerIp = \"127.0.0.1\";\n-\tpublic String DispatchServerPublicIp = \"\";\n+\tpublic String DispatchServerIp = \"0.0.0.0\";\n+\tpublic String DispatchServerPublicIp = \"127.0.0.1\";\n \tpublic int DispatchServerPort = 443;\n \tpublic String DispatchServerKeystorePath = \"./keystore.p12\";\n \tpublic String DispatchServerKeystorePassword = \"\";\n \tpublic Boolean UseSSL = true;\n \t\n \tpublic String GameServerName = \"Test\";\n-\tpublic String GameServerIp = \"127.0.0.1\";\n-\tpublic String GameServerPublicIp = \"\";\n+\tpublic String GameServerIp = \"0.0.0.0\";\n+\tpublic String GameServerPublicIp = \"127.0.0.1\";\n \tpublic int GameServerPort = 22102;\n \n \tpublic String DatabaseUrl = \"mongodb://localhost:27017\";",
      "parent_sha": "d11413c0170ef6b2d4fa258ca7e7714f560320d1"
    }
  },
  {
    "oid": "6d678557ff0dcfa27b536fb8c146b9ecf0fadf18",
    "message": "fix/runningAndDashingStamina",
    "date": "2022-05-06T23:11:51Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/6d678557ff0dcfa27b536fb8c146b9ecf0fadf18",
    "details": {
      "sha": "18958f3556df5fbe282eedb4a0d10211465c65a4",
      "filename": "src/main/java/emu/grasscutter/game/managers/MovementManager/MovementManager.java",
      "status": "modified",
      "additions": 9,
      "deletions": 8,
      "changes": 17,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/6d678557ff0dcfa27b536fb8c146b9ecf0fadf18/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fmanagers%2FMovementManager%2FMovementManager.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/6d678557ff0dcfa27b536fb8c146b9ecf0fadf18/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fmanagers%2FMovementManager%2FMovementManager.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fmanagers%2FMovementManager%2FMovementManager.java?ref=6d678557ff0dcfa27b536fb8c146b9ecf0fadf18",
      "patch": "@@ -268,7 +268,7 @@ public void run() {\n             if (Grasscutter.getConfig().OpenStamina) {\r\n                 boolean moving = isPlayerMoving();\r\n                 if (moving || (getCurrentStamina() < getMaximumStamina())) {\r\n-                    Grasscutter.getLogger().debug(\"Player moving: \" + moving + \", stamina full: \" + (getCurrentStamina() >= getMaximumStamina()) + \", recalculate stamina\");\r\n+                    // Grasscutter.getLogger().debug(\"Player moving: \" + moving + \", stamina full: \" + (getCurrentStamina() >= getMaximumStamina()) + \", recalculate stamina\");\r\n                     Consumption consumption = Consumption.None;\r\n \r\n                     // TODO: refactor these conditions.\r\n@@ -306,14 +306,16 @@ public void run() {\n                     } else if (MotionStatesCategorized.get(\"RUN\").contains(currentState)) {\r\n                         // RUN, DASH and WALK\r\n                         // DASH\r\n-                        if (currentState == MotionState.MOTION_DASH) {\r\n-                            if (previousState == MotionState.MOTION_DASH) {\r\n+                        if (currentState == MotionState.MOTION_DASH_BEFORE_SHAKE) {\r\n+                            consumption = Consumption.DASH;\r\n+                            if (previousState == MotionState.MOTION_DASH_BEFORE_SHAKE) {\r\n+                                // only charge once\r\n                                 consumption = Consumption.SPRINT;\r\n-                            } else {\r\n-                                // cost more to start dashing\r\n-                                consumption = Consumption.DASH;\r\n                             }\r\n                         }\r\n+                        if (currentState == MotionState.MOTION_DASH) {\r\n+                            consumption = Consumption.SPRINT;\r\n+                        }\r\n                         // RUN\r\n                         if (currentState == MotionState.MOTION_RUN) {\r\n                             consumption = Consumption.RUN;\r\n@@ -347,14 +349,13 @@ public void run() {\n                             staminaRecoverDelay = 0;\r\n                         }\r\n                         if (consumption.amount > 0) {\r\n-                            if (staminaRecoverDelay < 5) {\r\n+                            if (staminaRecoverDelay < 10) {\r\n                                 staminaRecoverDelay++;\r\n                                 consumption = Consumption.None;\r\n                             }\r\n                         }\r\n                         int newStamina = updateStamina(cachedSession, consumption.amount);\r\n                         cachedSession.send(new PacketPlayerPropNotify(player, PlayerProperty.PROP_CUR_PERSIST_STAMINA));\r\n-\r\n                         Grasscutter.getLogger().debug(player.getProperty(PlayerProperty.PROP_CUR_PERSIST_STAMINA) + \"/\" + player.getProperty(PlayerProperty.PROP_MAX_STAMINA) + \"\\t\" + currentState + \"\\t\" + \"isMoving: \" + isPlayerMoving() + \"\\t\" + consumption + \"(\" + consumption.amount + \")\");\r\n                     }\r\n                 }\r",
      "parent_sha": "58cb60299caa414e7e8c605f44e12261ac5e508f"
    }
  },
  {
    "oid": "f7b8d9b45fd82c00716420fd276bca47a36eff73",
    "message": "Removed debug message and fixed NullPtrException (#434)\n\n* Removed a debug message from Auth Handler changes\r\n\r\nKill me\r\n\r\n* Also forgot to use the getter :/",
    "date": "2022-05-02T10:47:29Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/f7b8d9b45fd82c00716420fd276bca47a36eff73",
    "details": {
      "sha": "be6e5f9a1b2d5e5d819de0f12a9513f75f7d253a",
      "filename": "src/main/java/emu/grasscutter/server/dispatch/DispatchServer.java",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/f7b8d9b45fd82c00716420fd276bca47a36eff73/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fdispatch%2FDispatchServer.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/f7b8d9b45fd82c00716420fd276bca47a36eff73/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fdispatch%2FDispatchServer.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fdispatch%2FDispatchServer.java?ref=f7b8d9b45fd82c00716420fd276bca47a36eff73",
      "patch": "@@ -309,7 +309,7 @@ public void start() throws Exception {\n \t\t\t}\n \t\t\tGrasscutter.getLogger().info(String.format(\"[Dispatch] Client %s is trying to log in\", req.ip()));\n \n-\t\t\tres.send(authHandler.handleGameLogin(req, requestData));\n+\t\t\tres.send(this.getAuthHandler().handleGameLogin(req, requestData));\n \t\t});\n \n \t\t// Login via token\n@@ -491,8 +491,6 @@ public AuthenticationHandler getAuthHandler() {\n \t\tif(authHandler == null) {\n \t\t\treturn new DefaultAuthenticationHandler();\n \t\t}\n-\t\tGrasscutter.getLogger().info(authHandler.getClass().getName());\n-\n \t\treturn authHandler;\n \t}\n ",
      "parent_sha": "a10261331304ae1b2f6431c6b8b5bcb5b95bd2ec"
    }
  },
  {
    "oid": "3cc1139aa1c7bb82c06d2fa63080e22fde07f801",
    "message": "Add `/setstats mhp` to set Max HP (#407)\n\n* Fixed `/setstats hp` without changing the max hp.\r\n\r\nThe Max HP should be modified.\r\n\r\n* Add `/setstats mhp` to set Max HP",
    "date": "2022-05-01T18:22:29Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/3cc1139aa1c7bb82c06d2fa63080e22fde07f801",
    "details": {
      "sha": "0ca3f07ce9ea66cce0d62bc57d8a5d663d7bc88f",
      "filename": "src/main/java/emu/grasscutter/command/commands/SetStatsCommand.java",
      "status": "modified",
      "additions": 13,
      "deletions": 1,
      "changes": 14,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/3cc1139aa1c7bb82c06d2fa63080e22fde07f801/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FSetStatsCommand.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/3cc1139aa1c7bb82c06d2fa63080e22fde07f801/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FSetStatsCommand.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FSetStatsCommand.java?ref=3cc1139aa1c7bb82c06d2fa63080e22fde07f801",
      "patch": "@@ -28,9 +28,21 @@ public void execute(Player sender, List<String> args) {\n         String stat = args.get(0);\r\n         switch (stat) {\r\n             default:\r\n-                CommandHandler.sendMessage(sender, \"Usage: /setstats|stats <hp | def | atk | em | er | crate | cdmg> <value> for basic stats\");\r\n+                CommandHandler.sendMessage(sender, \"Usage: /setstats|stats <hp | mhp | def | atk | em | er | crate | cdmg> <value> for basic stats\");\r\n                 CommandHandler.sendMessage(sender, \"Usage: /stats <epyro | ecryo | ehydro | egeo | edend | eelec | ephys> <amount> for elemental bonus\");\r\n                 return;\r\n+            case \"mhp\":\r\n+                try {\r\n+                    int health = Integer.parseInt(args.get(1));\r\n+                    EntityAvatar entity = sender.getTeamManager().getCurrentAvatarEntity();\r\n+                    entity.setFightProperty(FightProperty.FIGHT_PROP_MAX_HP, health);\r\n+                    entity.getWorld().broadcastPacket(new PacketEntityFightPropUpdateNotify(entity, FightProperty.FIGHT_PROP_MAX_HP));\r\n+                    CommandHandler.sendMessage(sender, \"MAX HP set to \" + health + \".\");\r\n+                } catch (NumberFormatException ignored) {\r\n+                    CommandHandler.sendMessage(sender, \"Invalid Max HP value.\");\r\n+                    return;\r\n+                }\r\n+                break;\r\n             case \"hp\":\r\n                 try {\r\n                     int health = Integer.parseInt(args.get(1));\r",
      "parent_sha": "4adc983832cd2b60a3ab8e02aa53ee5390cc0ac1"
    }
  },
  {
    "oid": "26e1341ce9ba53f23ef837fda6f019ab8a16942d",
    "message": "Out of my madness and suffering I have achieved the impossible. I almost lost all hope and was about to end it all. However, it worked out in the end and now we have gacha reloading.",
    "date": "2022-04-20T09:14:07Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/26e1341ce9ba53f23ef837fda6f019ab8a16942d",
    "details": {
      "sha": "eb1cba3792fdce6dda75e28005ac6f4c6c9f529b",
      "filename": "src/main/java/emu/grasscutter/game/gacha/GachaManager.java",
      "status": "modified",
      "additions": 19,
      "deletions": 7,
      "changes": 26,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/26e1341ce9ba53f23ef837fda6f019ab8a16942d/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fgacha%2FGachaManager.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/26e1341ce9ba53f23ef837fda6f019ab8a16942d/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fgacha%2FGachaManager.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fgacha%2FGachaManager.java?ref=26e1341ce9ba53f23ef837fda6f019ab8a16942d",
      "patch": "@@ -10,6 +10,7 @@\n \n import com.google.gson.reflect.TypeToken;\n \n+import com.sun.nio.file.SensitivityWatchEventModifier;\n import emu.grasscutter.Grasscutter;\n import emu.grasscutter.data.GenshinData;\n import emu.grasscutter.data.def.ItemData;\n@@ -31,14 +32,11 @@\n import it.unimi.dsi.fastutil.ints.IntList;\n import org.greenrobot.eventbus.Subscribe;\n \n-import static java.nio.file.StandardWatchEventKinds.ENTRY_MODIFY;\n-\n public class GachaManager {\n \tprivate final GameServer server;\n \tprivate final Int2ObjectMap<GachaBanner> gachaBanners;\n \tprivate GetGachaInfoRsp cachedProto;\n \tWatchService watchService;\n-\tWatchKey watchKey;\n \n \tprivate int[] yellowAvatars = new int[] {1003, 1016, 1042, 1035, 1041};\n \tprivate int[] yellowWeapons = new int[] {11501, 11502, 12501, 12502, 13502, 13505, 14501, 14502, 15501, 15502};\n@@ -74,9 +72,16 @@ public int getRandom(int[] array) {\n \t\n \tpublic synchronized void load() {\n \t\ttry (FileReader fileReader = new FileReader(Grasscutter.getConfig().DATA_FOLDER + \"Banners.json\")) {\n+\t\t\tgetGachaBanners().clear();\n \t\t\tList<GachaBanner> banners = Grasscutter.getGsonFactory().fromJson(fileReader, TypeToken.getParameterized(Collection.class, GachaBanner.class).getType());\n-\t\t\tfor (GachaBanner banner : banners) {\n-\t\t\t\tgetGachaBanners().put(banner.getGachaType(), banner);\n+\t\t\tif(banners.size() > 0) {\n+\t\t\t\tfor (GachaBanner banner : banners) {\n+\t\t\t\t\tgetGachaBanners().put(banner.getGachaType(), banner);\n+\t\t\t\t}\n+\t\t\t\tGrasscutter.getLogger().info(\"Banners successfully loaded.\");\n+\t\t\t\tthis.cachedProto = createProto();\n+\t\t\t} else {\n+\t\t\t\tGrasscutter.getLogger().error(\"Unable to load banners. Banners size is 0.\");\n \t\t\t}\n \t\t} catch (Exception e) {\n \t\t\t// TODO Auto-generated catch block\n@@ -281,8 +286,7 @@ private synchronized void startWatcher(GameServer server) {\n \t\t\ttry {\n \t\t\t\tthis.watchService = FileSystems.getDefault().newWatchService();\n \t\t\t\tPath path = new File(Grasscutter.getConfig().DATA_FOLDER).toPath();\n-\t\t\t\tpath.register(watchService, ENTRY_MODIFY);\n-\t\t\t\twatchKey = watchService.take();\n+\t\t\t\tpath.register(watchService, new WatchEvent.Kind[]{StandardWatchEventKinds.ENTRY_MODIFY}, SensitivityWatchEventModifier.HIGH);\n \n \t\t\t\tserver.OnGameServerTick.register(this);\n \t\t\t} catch (Exception e) {\n@@ -298,13 +302,21 @@ private synchronized void startWatcher(GameServer server) {\n \tpublic synchronized void watchBannerJson(GameServerTickEvent tickEvent) {\n \t\tif(Grasscutter.getConfig().getServerOptions().WatchGacha) {\n \t\t\ttry {\n+\t\t\t\tWatchKey watchKey = watchService.take();\n+\n \t\t\t\tfor (WatchEvent<?> event : watchKey.pollEvents()) {\n \t\t\t\t\tfinal Path changed = (Path) event.context();\n \t\t\t\t\tif (changed.endsWith(\"Banners.json\")) {\n \t\t\t\t\t\tGrasscutter.getLogger().info(\"Change detected with banners.json. Reloading gacha config\");\n \t\t\t\t\t\tthis.load();\n \t\t\t\t\t}\n \t\t\t\t}\n+\n+\t\t\t\tboolean valid = watchKey.reset();\n+\t\t\t\tif (!valid) {\n+\t\t\t\t\tGrasscutter.getLogger().error(\"Unable to reset Gacha Manager Watch Key. Auto-reload of banners.json will no longer work.\");\n+\t\t\t\t\treturn;\n+\t\t\t\t}\n \t\t\t} catch (Exception e) {\n \t\t\t\te.printStackTrace();\n \t\t\t}",
      "parent_sha": "28a070f19abd1bc71127e0588e9446297fc4a72d"
    }
  },
  {
    "oid": "3ec411b11ab33e7e5f6514c6263e229bdcc106fe",
    "message": "Bump config version.",
    "date": "2022-08-14T15:00:29Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/3ec411b11ab33e7e5f6514c6263e229bdcc106fe",
    "details": {
      "sha": "6a52027b6acddf89e0a169c9d887d2508992f518",
      "filename": "src/main/java/emu/grasscutter/config/ConfigContainer.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/3ec411b11ab33e7e5f6514c6263e229bdcc106fe/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fconfig%2FConfigContainer.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/3ec411b11ab33e7e5f6514c6263e229bdcc106fe/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fconfig%2FConfigContainer.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fconfig%2FConfigContainer.java?ref=3ec411b11ab33e7e5f6514c6263e229bdcc106fe",
      "patch": "@@ -18,7 +18,7 @@\n  */\n public class ConfigContainer {\n     private static int version() {\n-        return 3;\n+        return 4;\n     }\n \n     /**",
      "parent_sha": "3bd00fcb079440b0a35d4833c6b5a30f533e21c9"
    }
  },
  {
    "oid": "6d6e6a041df049f168b0c9fece8337aa821ae037",
    "message": "Format code [skip actions]",
    "date": "2023-06-04T05:01:54Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/6d6e6a041df049f168b0c9fece8337aa821ae037",
    "details": {
      "sha": "9aef4c3963143f5bd2f48586b9829581503453be",
      "filename": "src/main/java/emu/grasscutter/game/ability/actions/ActionGenerateElemBall.java",
      "status": "modified",
      "additions": 36,
      "deletions": 21,
      "changes": 57,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/6d6e6a041df049f168b0c9fece8337aa821ae037/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fability%2Factions%2FActionGenerateElemBall.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/6d6e6a041df049f168b0c9fece8337aa821ae037/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fability%2Factions%2FActionGenerateElemBall.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fability%2Factions%2FActionGenerateElemBall.java?ref=6d6e6a041df049f168b0c9fece8337aa821ae037",
      "patch": "@@ -2,7 +2,6 @@\n \n import com.google.protobuf.ByteString;\n import com.google.protobuf.InvalidProtocolBufferException;\n-\n import emu.grasscutter.Grasscutter;\n import emu.grasscutter.data.GameData;\n import emu.grasscutter.data.binout.AbilityModifier.AbilityModifierAction;\n@@ -12,13 +11,14 @@\n import emu.grasscutter.game.entity.EntityItem;\n import emu.grasscutter.game.entity.GameEntity;\n import emu.grasscutter.game.props.SceneType;\n-import emu.grasscutter.net.proto.AbilityActionGenerateElemBallOuterClass.AbilityActionGenerateElemBall;\n import emu.grasscutter.game.world.Position;\n+import emu.grasscutter.net.proto.AbilityActionGenerateElemBallOuterClass.AbilityActionGenerateElemBall;\n \n @AbilityAction(AbilityModifierAction.Type.GenerateElemBall)\n public final class ActionGenerateElemBall extends AbilityActionHandler {\n     @Override\n-    public boolean execute(Ability ability, AbilityModifierAction action, ByteString abilityData, GameEntity target) {\n+    public boolean execute(\n+            Ability ability, AbilityModifierAction action, ByteString abilityData, GameEntity target) {\n         GameEntity owner = ability.getOwner();\n \n         AbilityActionGenerateElemBall generateElemBall;\n@@ -28,54 +28,69 @@ public boolean execute(Ability ability, AbilityModifierAction action, ByteString\n             return false;\n         }\n \n-        //Check if we should allow elem ball generation\n-        if(action.dropType == 0x0) {\n+        // Check if we should allow elem ball generation\n+        if (action.dropType == 0x0) {\n             String levelEntityConfig = owner.getScene().getSceneData().getLevelEntityConfig();\n             ConfigLevelEntity config = GameData.getConfigLevelEntityDataMap().get(levelEntityConfig);\n-            if(config != null && config.getDropElemControlType() != null && config.getDropElemControlType().compareTo(\"None\") == 0) {\n+            if (config != null\n+                    && config.getDropElemControlType() != null\n+                    && config.getDropElemControlType().compareTo(\"None\") == 0) {\n                 Grasscutter.getLogger().warn(\"This level config don't allow element balls\");\n                 return true;\n             }\n-        } else if(action.dropType == 0x1) {\n-            if(owner.getScene().getSceneData().getSceneType() != SceneType.SCENE_WORLD) {\n+        } else if (action.dropType == 0x1) {\n+            if (owner.getScene().getSceneData().getSceneType() != SceneType.SCENE_WORLD) {\n                 Grasscutter.getLogger().warn(\"This level config only allows element balls on big world\");\n                 return true;\n             }\n-        } //Else the drop is forced\n+        } // Else the drop is forced\n \n         var energy = action.baseEnergy.get(ability) * action.ratio.get(ability);\n-        if(energy <= 0.0) return true;\n+        if (energy <= 0.0) return true;\n \n         var itemData = GameData.getItemDataMap().get(action.configID);\n-        if(itemData == null) {\n+        if (itemData == null) {\n             Grasscutter.getLogger().warn(\"configID {} not found\", action.configID);\n             return false;\n         }\n \n-        if(itemData.getItemUse() == null || itemData.getItemUse().isEmpty()) {\n+        if (itemData.getItemUse() == null || itemData.getItemUse().isEmpty()) {\n             Grasscutter.getLogger().warn(\"Item {} has no item use array\", action.configID);\n             return true;\n         }\n \n         var itemUse = itemData.getItemUse().get(0);\n         double requiredEnergy;\n-        switch(itemUse.getUseOp()) {\n-            case ITEM_USE_ADD_ELEM_ENERGY: requiredEnergy = Integer.parseInt(itemUse.getUseParam()[1]); break;\n-            case ITEM_USE_ADD_ALL_ENERGY: requiredEnergy = Integer.parseInt(itemUse.getUseParam()[0]); break;\n+        switch (itemUse.getUseOp()) {\n+            case ITEM_USE_ADD_ELEM_ENERGY:\n+                requiredEnergy = Integer.parseInt(itemUse.getUseParam()[1]);\n+                break;\n+            case ITEM_USE_ADD_ALL_ENERGY:\n+                requiredEnergy = Integer.parseInt(itemUse.getUseParam()[0]);\n+                break;\n             default:\n                 Grasscutter.getLogger().warn(\"UseOp not implemented\", itemUse.getUseOp());\n                 return false;\n         }\n \n-        var amountGenerated = (int)Math.ceil(energy / requiredEnergy);\n-        if(amountGenerated >= 21) {\n-            Grasscutter.getLogger().warn(\"Attempt to generate more than 20 element balls {}\", amountGenerated);\n+        var amountGenerated = (int) Math.ceil(energy / requiredEnergy);\n+        if (amountGenerated >= 21) {\n+            Grasscutter.getLogger()\n+                    .warn(\"Attempt to generate more than 20 element balls {}\", amountGenerated);\n             return false;\n         }\n \n-        Grasscutter.getLogger().debug(\"Generating {} of {} element balls\", amountGenerated, action.configID);\n-        for(int i = 0; i < amountGenerated; i++) {\n-            EntityItem energyBall = new EntityItem(owner.getScene(), (owner instanceof EntityAvatar avatar) ? avatar.getPlayer() : null, itemData, new Position(generateElemBall.getPos()), new Position(generateElemBall.getRot()), 1);\n+        Grasscutter.getLogger()\n+                .debug(\"Generating {} of {} element balls\", amountGenerated, action.configID);\n+        for (int i = 0; i < amountGenerated; i++) {\n+            EntityItem energyBall =\n+                    new EntityItem(\n+                            owner.getScene(),\n+                            (owner instanceof EntityAvatar avatar) ? avatar.getPlayer() : null,\n+                            itemData,\n+                            new Position(generateElemBall.getPos()),\n+                            new Position(generateElemBall.getRot()),\n+                            1);\n             owner.getScene().addEntity(energyBall);\n         }\n ",
      "parent_sha": "b09c0d48bf1e812145f6c015104e5a69e6787935"
    }
  },
  {
    "oid": "0992fc11b4093229e70803a61767010358b99b86",
    "message": "Add keystore password",
    "date": "2022-04-23T03:53:37Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/0992fc11b4093229e70803a61767010358b99b86",
    "details": {
      "sha": "980102957a65fd98f20b05ce4a3a67995f8213ef",
      "filename": "src/main/java/emu/grasscutter/Config.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/0992fc11b4093229e70803a61767010358b99b86/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2FConfig.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/0992fc11b4093229e70803a61767010358b99b86/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2FConfig.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2FConfig.java?ref=0992fc11b4093229e70803a61767010358b99b86",
      "patch": "@@ -29,7 +29,7 @@ public static class DispatchServerOptions {\n \t\tpublic int Port = 443;\n \t\tpublic int PublicPort = 0;\n \t\tpublic String KeystorePath = \"./keystore.p12\";\n-\t\tpublic String KeystorePassword = \"\";\n+\t\tpublic String KeystorePassword = \"123456\";\n \t\tpublic Boolean UseSSL = true;\n \t\tpublic Boolean FrontHTTPS = true;\n ",
      "parent_sha": "b98860c48087520c2a62154ba417da3defc89607"
    }
  },
  {
    "oid": "2f5ae6c784a9cf79ff922a15b4eed5e798b8c5f6",
    "message": "GodMode command supports playerId",
    "date": "2022-04-24T03:40:10Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/2f5ae6c784a9cf79ff922a15b4eed5e798b8c5f6",
    "details": {
      "sha": "0b4139ac1c0ed7b7b00261db8401f4a0e37eff66",
      "filename": "src/main/java/emu/grasscutter/command/commands/GodModeCommand.java",
      "status": "modified",
      "additions": 25,
      "deletions": 2,
      "changes": 27,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/2f5ae6c784a9cf79ff922a15b4eed5e798b8c5f6/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FGodModeCommand.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/2f5ae6c784a9cf79ff922a15b4eed5e798b8c5f6/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FGodModeCommand.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FGodModeCommand.java?ref=2f5ae6c784a9cf79ff922a15b4eed5e798b8c5f6",
      "patch": "@@ -1,5 +1,6 @@\n package emu.grasscutter.command.commands;\n \n+import emu.grasscutter.Grasscutter;\n import emu.grasscutter.command.Command;\n import emu.grasscutter.command.CommandHandler;\n import emu.grasscutter.game.GenshinPlayer;\n@@ -16,7 +17,29 @@ public void execute(GenshinPlayer sender, List<String> args) {\n             CommandHandler.sendMessage(null, \"Run this command in-game.\");\n             return; // TODO: toggle player's godmode statue from console or other players\n         }\n-        sender.setGodmode(!sender.inGodmode());\n-        sender.dropMessage(\"Godmode is now \" + (sender.inGodmode() ? \"enabled\" : \"disabled\") + \".\");\n+\n+        int target;\n+        if (args.size() == 1) {\n+            try {\n+                target = Integer.parseInt(args.get(0));\n+                if (Grasscutter.getGameServer().getPlayerByUid(target) == null) {\n+                    target = sender.getUid();\n+                }\n+            } catch (NumberFormatException e) {\n+                CommandHandler.sendMessage(sender, \"Invalid player id.\");\n+                return;\n+            }\n+        } else {\n+            target = sender.getUid();\n+        }\n+        GenshinPlayer targetPlayer = Grasscutter.getGameServer().getPlayerByUid(target);\n+        if (targetPlayer == null) {\n+            CommandHandler.sendMessage(sender, \"Player not found.\");\n+            return;\n+        }\n+\n+        targetPlayer.setGodmode(!targetPlayer.inGodmode());\n+        sender.dropMessage(\"Godmode is now \" + (targetPlayer.inGodmode() ? \"enabled\" : \"disabled\") +\n+                \"for \" + targetPlayer.getNickname() + \" .\");\n     }\n }",
      "parent_sha": "f536da0c774b0de6c0764a89b809e9e599ca2cc9"
    }
  },
  {
    "oid": "3c0d85621e2286e2204ae5a23730bd752e35e821",
    "message": "Fix InRouting on dispatch server",
    "date": "2022-05-11T14:35:52Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/3c0d85621e2286e2204ae5a23730bd752e35e821",
    "details": {
      "sha": "4e09f8881bfc71f45edf6f65d03b92f0ae6eb524",
      "filename": "src/main/java/emu/grasscutter/server/dispatch/DispatchServer.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/3c0d85621e2286e2204ae5a23730bd752e35e821/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fdispatch%2FDispatchServer.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/3c0d85621e2286e2204ae5a23730bd752e35e821/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fdispatch%2FDispatchServer.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fdispatch%2FDispatchServer.java?ref=3c0d85621e2286e2204ae5a23730bd752e35e821",
      "patch": "@@ -117,7 +117,7 @@ private void initRegion() {\n \t\t\t\t\t\t.setTitle(DISPATCH_INFO.defaultName)\n \t\t\t\t\t\t.setType(\"DEV_PUBLIC\")\n \t\t\t\t\t\t.setDispatchUrl(\n-\t\t\t\t\t\t\t\t\"http\" + (DISPATCH_ENCRYPTION.useEncryption ? \"s\" : \"\") + \"://\"\n+\t\t\t\t\t\t\t\t\"http\" + (DISPATCH_ENCRYPTION.useInRouting ? \"s\" : \"\") + \"://\"\n \t\t\t\t\t\t\t\t\t\t+ lr(DISPATCH_INFO.accessAddress, DISPATCH_INFO.bindAddress) + \":\"\n \t\t\t\t\t\t\t\t\t\t+ lr(DISPATCH_INFO.accessPort, DISPATCH_INFO.bindPort)\n \t\t\t\t\t\t\t\t\t\t+ \"/query_cur_region/\" + defaultServerName)\n@@ -150,7 +150,7 @@ private void initRegion() {\n \t\t\t\t\t\t.setTitle(regionInfo.Title)\n \t\t\t\t\t\t.setType(\"DEV_PUBLIC\")\n \t\t\t\t\t\t.setDispatchUrl(\n-\t\t\t\t\t\t\t\t\"http\" + (DISPATCH_ENCRYPTION.useEncryption ? \"s\" : \"\") + \"://\"\n+\t\t\t\t\t\t\t\t\"http\" + (DISPATCH_ENCRYPTION.useInRouting ? \"s\" : \"\") + \"://\"\n \t\t\t\t\t\t\t\t\t\t+ lr(DISPATCH_INFO.accessAddress, DISPATCH_INFO.bindAddress) + \":\" \n \t\t\t\t\t\t\t\t\t\t+ lr(DISPATCH_INFO.accessPort, DISPATCH_INFO.bindPort) \n \t\t\t\t\t\t\t\t\t\t+ \"/query_cur_region/\" + regionInfo.Name)",
      "parent_sha": "e3fd2eaa1770dff595eae315291519395010b42f"
    }
  },
  {
    "oid": "5eeea84f8e5175c7e1d3ee1d08f924f021bc93cc",
    "message": "Corrected format",
    "date": "2022-04-24T14:46:43Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/5eeea84f8e5175c7e1d3ee1d08f924f021bc93cc",
    "details": {
      "sha": "a0edc5cdc8b8a42f0b85c7a1aa7e05918fcd43ad",
      "filename": "src/main/java/emu/grasscutter/command/Command.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/5eeea84f8e5175c7e1d3ee1d08f924f021bc93cc/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2FCommand.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/5eeea84f8e5175c7e1d3ee1d08f924f021bc93cc/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2FCommand.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2FCommand.java?ref=5eeea84f8e5175c7e1d3ee1d08f924f021bc93cc",
      "patch": "@@ -15,5 +15,5 @@\n \n     String permission() default \"\";\n \n-    boolean threading() default  false;\n+    boolean threading() default false;\n }",
      "parent_sha": "885e2d078ce909d28adc3280ad0eb021c4ccc6c9"
    }
  },
  {
    "oid": "c96a1907da93fcd20dfc838c81b81829ebb5c616",
    "message": "fix dungeon",
    "date": "2022-08-26T01:57:52Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/c96a1907da93fcd20dfc838c81b81829ebb5c616",
    "details": {
      "sha": "36164676b7019280223aa2c04ecbe9942892170a",
      "filename": "src/main/java/emu/grasscutter/game/entity/gadget/GadgetWorktop.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/c96a1907da93fcd20dfc838c81b81829ebb5c616/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fentity%2Fgadget%2FGadgetWorktop.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/c96a1907da93fcd20dfc838c81b81829ebb5c616/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fentity%2Fgadget%2FGadgetWorktop.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fentity%2Fgadget%2FGadgetWorktop.java?ref=c96a1907da93fcd20dfc838c81b81829ebb5c616",
      "patch": "@@ -58,7 +58,9 @@ public void setOnSelectWorktopOptionEvent(WorktopWorktopOptionHandler handler) {\n         this.handler = handler;\n     }\n     public boolean onSelectWorktopOption(SelectWorktopOptionReq req) {\n-        this.handler.onSelectWorktopOption(this,req.getOptionId());\n+        if (this.handler != null) {\n+            this.handler.onSelectWorktopOption(this, req.getOptionId());\n+        }\n         return false;\n     }\n ",
      "parent_sha": "eb42cc9c9eb299109daaaab646b7cdf589fd9d01"
    }
  },
  {
    "oid": "66b17cad266bff4b2329c6760efe65efdd9c2a3a",
    "message": "little fix",
    "date": "2022-05-09T16:14:50Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/66b17cad266bff4b2329c6760efe65efdd9c2a3a",
    "details": {
      "sha": "57d4735ba20815f9091bd61f789ff1cc1ff23987",
      "filename": "src/main/java/emu/grasscutter/scripts/service/ScriptMonsterTideService.java",
      "status": "modified",
      "additions": 5,
      "deletions": 7,
      "changes": 12,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/66b17cad266bff4b2329c6760efe65efdd9c2a3a/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fscripts%2Fservice%2FScriptMonsterTideService.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/66b17cad266bff4b2329c6760efe65efdd9c2a3a/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fscripts%2Fservice%2FScriptMonsterTideService.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fscripts%2Fservice%2FScriptMonsterTideService.java?ref=66b17cad266bff4b2329c6760efe65efdd9c2a3a",
      "patch": "@@ -60,28 +60,26 @@ public SceneMonster getNextMonster(){\n         return currentGroup.monsters.values().stream().findFirst().orElse(null);\n     }\n \n-    public class OnMonsterDead implements ScriptMonsterListener{\n+    public class OnMonsterDead implements ScriptMonsterListener {\n         @Override\n         public void onNotify(EntityMonster sceneMonster) {\n-            if(monsterSceneLimit <= 0){\n+            if (monsterSceneLimit <= 0) {\n                 return;\n             }\n-            if(monsterAlive.decrementAndGet() >= monsterSceneLimit) {\n+            if (monsterAlive.decrementAndGet() >= monsterSceneLimit) {\n                 // maybe not happen\n                 return;\n             }\n             monsterKillCount.incrementAndGet();\n-            if(monsterTideCount.get() > 0){\n+            if (monsterTideCount.get() > 0) {\n                 // add more\n                 sceneScriptManager.getScriptMonsterSpawnService().spawnMonster(currentGroup.id, getNextMonster());\n             }\n             // spawn the last turn of monsters\n             // fix the 5-2\n             sceneScriptManager.callEvent(EventType.EVENT_MONSTER_TIDE_DIE, new ScriptArgs(monsterKillCount.get()));\n         }\n-        // spawn the last turn of monsters\n-        // fix the 5-2\n-        this.sceneScriptManager.callEvent(EventType.EVENT_MONSTER_TIDE_DIE, new ScriptArgs(this.monsterKillCount.get()));\n+\n     }\n \n     public void unload(){",
      "parent_sha": "2e69a4d8f7ddd7131fd2cb5d6c41e70d10119c9e"
    }
  },
  {
    "oid": "d19bc12761f4146518880d69a1f56ca034a26aff",
    "message": "Update Grasscutter.java\n\nwhy do i have to fix stable",
    "date": "2022-04-27T09:33:36Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/d19bc12761f4146518880d69a1f56ca034a26aff",
    "details": {
      "sha": "ad1107e8e648d980a99949050073434c9ffed2a8",
      "filename": "src/main/java/emu/grasscutter/Grasscutter.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/d19bc12761f4146518880d69a1f56ca034a26aff/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2FGrasscutter.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/d19bc12761f4146518880d69a1f56ca034a26aff/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2FGrasscutter.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2FGrasscutter.java?ref=d19bc12761f4146518880d69a1f56ca034a26aff",
      "patch": "@@ -34,7 +34,7 @@ public final class Grasscutter {\n \tprivate static DispatchServer dispatchServer;\n \tprivate static GameServer gameServer;\n \t\n-\tpublic static final Reflections reflector = new Reflections();\n+\tpublic static final Reflections reflector = new Reflections(\"emu.grasscutter\");\n \t\n \tstatic {\n \t\t// Declare logback configuration.",
      "parent_sha": "edc15cdebf094d9030b017fad09ee547013d56a9"
    }
  },
  {
    "oid": "3c5f3d415706f2473ade5f84ca36576d5b2e4e21",
    "message": "remove test avatar",
    "date": "2022-04-26T08:35:06Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/3c5f3d415706f2473ade5f84ca36576d5b2e4e21",
    "details": {
      "sha": "47ac084057173b666f0067f3c63d5f57b41d8069",
      "filename": "src/main/java/emu/grasscutter/command/commands/GiveAllCommand.java",
      "status": "modified",
      "additions": 111,
      "deletions": 30,
      "changes": 141,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/3c5f3d415706f2473ade5f84ca36576d5b2e4e21/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FGiveAllCommand.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/3c5f3d415706f2473ade5f84ca36576d5b2e4e21/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FGiveAllCommand.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FGiveAllCommand.java?ref=3c5f3d415706f2473ade5f84ca36576d5b2e4e21",
      "patch": "@@ -14,20 +14,22 @@\n import java.util.*;\n \n @Command(label = \"giveall\", usage = \"giveall [player] <amount>\",\n-        description = \"Gives all items\", aliases = {\"givea\"}, permission = \"player.giveall\",threading = true)\n+        description = \"Gives all items\", aliases = {\"givea\"}, permission = \"player.giveall\", threading = true)\n public class GiveAllCommand implements CommandHandler {\n+\n     @Override\n     public void execute(GenshinPlayer sender, List<String> args) {\n-        int target,amount=99999;\n+        int target, amount = 99999;\n \n-        if(sender == null){\n-            CommandHandler.sendMessage(null, \"Run this command in-game\");\n-            return;\n-        }\n         switch (args.size()) {\n-            default: // *no args*\n+            case 0: // *no args*\n+                if (sender == null) {\n+                    CommandHandler.sendMessage(null, \"This usage can only be run in-game\");\n+                    return;\n+                }\n                 target = sender.getUid();\n                 break;\n+\n             case 1: // [player]\n                 try {\n                     target = Integer.parseInt(args.get(0));\n@@ -40,6 +42,7 @@ public void execute(GenshinPlayer sender, List<String> args) {\n                     return;\n                 }\n                 break;\n+\n             case 2: // [player] [amount]\n                 try {\n                     target = Integer.parseInt(args.get(0));\n@@ -49,11 +52,15 @@ public void execute(GenshinPlayer sender, List<String> args) {\n                     } else {\n                         amount = Integer.parseInt(args.get(1));\n                     }\n-                 } catch (NumberFormatException ignored) {\n+                } catch (NumberFormatException ignored) {\n                     CommandHandler.sendMessage(sender, \"Invalid amount or player ID.\");\n                     return;\n                 }\n                 break;\n+\n+            default: // invalid\n+                CommandHandler.sendMessage(null, \"Usage: giveall [player] <amount>\");\n+                return;\n         }\n \n         GenshinPlayer targetPlayer = Grasscutter.getGameServer().getPlayerByUid(target);\n@@ -62,47 +69,121 @@ public void execute(GenshinPlayer sender, List<String> args) {\n             return;\n         }\n \n-        this.GetAllItem(targetPlayer,amount);\n-        CommandHandler.sendMessage(sender, \"Done! or Getting all items done\");\n+        this.giveAllItems(targetPlayer, amount);\n+        CommandHandler.sendMessage(sender, \"Giving all items done\");\n     }\n \n-    public void GetAllItem(GenshinPlayer player, int amount){\n-        CommandHandler.sendMessage(player, \"Getting all item....\");\n+    public void giveAllItems(GenshinPlayer player, int amount) {\n+        CommandHandler.sendMessage(player, \"Giving all items...\");\n+\n+        for (AvatarData avatarData: GenshinData.getAvatarDataMap().values()) {\n+            //Exclude test avatar\n+            if (isTestAvatar(avatarData.getId())) continue;\n+\n+            GenshinAvatar avatar = new GenshinAvatar(avatarData);\n+            avatar.setLevel(90);\n+            avatar.setPromoteLevel(6);\n+            for (int i = 1; i <= 6; ++i) {\n+                avatar.getTalentIdList().add((avatar.getAvatarId() - 10000000) * 10 + i);\n+            }\n+            // This will handle stats and talents\n+            avatar.recalcStats();\n+            player.addAvatar(avatar);\n+        }\n \n-        Collection<GenshinItem> genshinItemList =new LinkedList<>();\n+        //some test items\n+        List<GenshinItem> genshinItemList = new ArrayList<>();\n         for (ItemData itemdata: GenshinData.getItemDataMap().values()) {\n-            if(itemdata.getId() > 1000 && itemdata.getId() <= 1099)continue;//is avatar\n+            //Exclude test item\n+            if (isTestItem(itemdata.getId())) continue;\n+\n             if (itemdata.isEquip()) {\n-                for (int i = 0; i < 20; i++) {\n+                for (int i = 0; i < 10; ++i) {\n                     GenshinItem genshinItem = new GenshinItem(itemdata);\n-                    if(itemdata.getItemType() == ItemType.ITEM_WEAPON){\n+                    if (itemdata.getItemType() == ItemType.ITEM_WEAPON) {\n                         genshinItem.setLevel(90);\n                         genshinItem.setPromoteLevel(6);\n+                        genshinItem.setRefinement(4);\n                     }\n                     genshinItemList.add(genshinItem);\n                 }\n-            } else {\n+            }\n+            else {\n                 GenshinItem genshinItem = new GenshinItem(itemdata);\n                 genshinItem.setCount(amount);\n                 genshinItemList.add(genshinItem);\n             }\n         }\n-        player.getInventory().addItems(genshinItemList);\n+        int packetNum = 20;\n+        int itemLength = genshinItemList.size();\n+        int number = itemLength / packetNum;\n+        int remainder = itemLength % packetNum;\n+        int offset = 0;\n+        for (int i = 0; i < packetNum; ++i) {\n+            if (remainder > 0) {\n+                player.getInventory().addItems(genshinItemList.subList(i * number + offset, (i + 1) * number + offset + 1));\n+                --remainder;\n+                ++offset;\n+            }\n+            else {\n+                player.getInventory().addItems(genshinItemList.subList(i * number + offset, (i + 1) * number + offset));\n+            }\n+        }\n+    }\n \n-        for(AvatarData avatarData:GenshinData.getAvatarDataMap().values()) {\n-            if(avatarData.getId() == 10000001 || avatarData.getId() >= 10000099)continue;\n-            // Calculate ascension level.\n-            int ascension = (int) Math.ceil(90 / 10f) - 3;\n-            GenshinAvatar avatar = new GenshinAvatar(avatarData);\n-            avatar.setLevel(90);\n-            avatar.setPromoteLevel(ascension);\n-            for (int i = 1;i<=6;i++){\n-                avatar.getTalentIdList().add((avatar.getAvatarId()-10000000)*10+i);//(10000058-10000000)*10+i\n+    public boolean isTestAvatar(int avatarId) {\n+        return avatarId < 10000002 || avatarId >= 11000000;\n+    }\n+\n+    public boolean isTestItem(int itemId) {\n+        for (Range range: testItemRanges) {\n+            if (range.check(itemId)) {\n+                return true;\n             }\n-            // This will handle stats and talents\n-            avatar.recalcStats();\n-            player.addAvatar(avatar);\n+        }\n+\n+        if (testItemsList.contains(itemId)) {\n+            return true;\n+        }\n+\n+        return false;\n+    }\n+\n+    static class Range {\n+        private int min;\n+        private int max;\n+\n+        public Range(int min, int max) {\n+            if(min > max){\n+                min ^= max;\n+                max ^= min;\n+                min ^= max;\n+            }\n+            this.min = min;\n+            this.max = max;\n+        }\n+\n+        public boolean check(int value) {\n+            return value >= this.min && value <= this.max;\n         }\n     }\n \n+    private static final Range[] testItemRanges = new Range[] {\n+            new Range(106, 139),\n+            new Range(1000, 1099),\n+            new Range(2001, 2008),\n+            new Range(2017, 2029),\n+          //  new Range(108001, 108387) //food\n+    };\n+\n+    private static final Integer[] testItemsIds = new Integer[] {\n+            210, 211, 314, 315, 317, 1005, 1007, 1105, 1107, 1201, 1202, 2800,\n+            100001, 100002, 100244, 100305, 100312, 100313, 101212, 11411, 11506, 11507, 11508, 12505,\n+            12506, 12508, 12509, 13503, 13506, 14411, 14503, 14505, 14508, 15411, 15504, 15505,\n+            15506, 15508, 20001, 10002, 10003, 10004, 10005, 10006, 10008 //9\n+    };\n+\n+    private static final Collection<Integer> testItemsList = Arrays.asList(testItemsIds);\n+\n }\n+",
      "parent_sha": "c6bd1fa5d41eba91bb3cf17e4d57531b852b5e20"
    }
  },
  {
    "oid": "376c668dd9e66af525bb9dfcbf49bedcacb2e662",
    "message": "no more NullPointerException pls",
    "date": "2022-04-22T00:30:02Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/376c668dd9e66af525bb9dfcbf49bedcacb2e662",
    "details": {
      "sha": "6906d38966f709db0c474fca65cb8782b957bad7",
      "filename": "src/main/java/emu/grasscutter/game/avatar/GenshinAvatar.java",
      "status": "modified",
      "additions": 8,
      "deletions": 6,
      "changes": 14,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/376c668dd9e66af525bb9dfcbf49bedcacb2e662/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Favatar%2FGenshinAvatar.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/376c668dd9e66af525bb9dfcbf49bedcacb2e662/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Favatar%2FGenshinAvatar.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Favatar%2FGenshinAvatar.java?ref=376c668dd9e66af525bb9dfcbf49bedcacb2e662",
      "patch": "@@ -705,12 +705,14 @@ public AvatarInfo toProto() {\n \t\t\t\t.setExpLevel(10)\n \t\t\t\t.setExpNumber(6325); // Highest Level\n \t\t\n-\t\tfor (int i = 0; i < this.getFetterList().size(); i++) {\n-\t\t\tavatarFetter.addFetterList(\n-\t\t\t\tFetterData.newBuilder()\n-\t\t\t\t\t.setFetterId(this.getFetterList().get(i))\n-\t\t\t\t\t.setFetterState(FetterState.FINISH.getValue())\n-\t\t\t);\n+\t\tif (this.getFetterList() != null) {\n+\t\t\tfor (int i = 0; i < this.getFetterList().size(); i++) {\n+\t\t\t\tavatarFetter.addFetterList(\n+\t\t\t\t\tFetterData.newBuilder()\n+\t\t\t\t\t\t.setFetterId(this.getFetterList().get(i))\n+\t\t\t\t\t\t.setFetterState(FetterState.FINISH.getValue())\n+\t\t\t\t);\n+\t\t\t}\n \t\t}\n \n \t\tAvatarInfo.Builder avatarInfo = AvatarInfo.newBuilder()",
      "parent_sha": "2350f0ebe2f55d6f44a6591f4809008d2354391b"
    }
  },
  {
    "oid": "4ab12f418ed7fc10cd1343f7a0484349b3f9ee8f",
    "message": "add description and permission to setstats command",
    "date": "2022-04-21T03:43:31Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/4ab12f418ed7fc10cd1343f7a0484349b3f9ee8f",
    "details": {
      "sha": "e9c4254b62fd6a312b9b360244fdda8124b26a0a",
      "filename": "src/main/java/emu/grasscutter/command/commands/SetStatsCommand.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/4ab12f418ed7fc10cd1343f7a0484349b3f9ee8f/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FSetStatsCommand.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/4ab12f418ed7fc10cd1343f7a0484349b3f9ee8f/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FSetStatsCommand.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FSetStatsCommand.java?ref=4ab12f418ed7fc10cd1343f7a0484349b3f9ee8f",
      "patch": "@@ -10,7 +10,7 @@\n import java.util.List;\r\n \r\n @Command(label = \"setstats\", usage = \"setstats|stats <stat> <value>\",\r\n-        aliases = {\"stats\"})\r\n+        description = \"Set fight property for the specific player\", aliases = {\"stats\"}, permission = \"player.setstats\")\r\n public final class SetStatsCommand implements CommandHandler {\r\n \r\n     @Override\r",
      "parent_sha": "1be01b5263f876388e6c62254baaf83636404f06"
    }
  },
  {
    "oid": "1ed0511cd70fdaf0fb718422943f59f5df551534",
    "message": "Update Tools.java",
    "date": "2022-05-07T01:25:35Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/1ed0511cd70fdaf0fb718422943f59f5df551534",
    "details": {
      "sha": "a2bee91f05b8cad40d32826695e60867c237ac21",
      "filename": "src/main/java/emu/grasscutter/tools/Tools.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/1ed0511cd70fdaf0fb718422943f59f5df551534/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Ftools%2FTools.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/1ed0511cd70fdaf0fb718422943f59f5df551534/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Ftools%2FTools.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Ftools%2FTools.java?ref=1ed0511cd70fdaf0fb718422943f59f5df551534",
      "patch": "@@ -80,7 +80,7 @@ public static String getLanguageOption() throws Exception {\n \t\tif (groupedLangCount > 0) {\n \t\t\tSystem.out.println(groupedLangList);\n \t\t}\n-\t\tSystem.out.print(\"\\nYour choice:[EN]\");\n+\t\tSystem.out.print(\"\\nYour choice:[EN] \");\n \n \t\tinput = new BufferedReader(new InputStreamReader(System.in)).readLine();\n \t\tif (availableLangList.contains(input.toLowerCase())) {",
      "parent_sha": "1ee9cc80bbe4b1d8996e0e78fe2a26b07c429e71"
    }
  },
  {
    "oid": "ec2bfffdd131cace2fe59ac44db4b1b8ad8ceb72",
    "message": "Format code [skip actions]",
    "date": "2023-09-18T01:03:10Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/ec2bfffdd131cace2fe59ac44db4b1b8ad8ceb72",
    "details": {
      "sha": "2f1a1d98e82fa9d21886d02700dd15a16f34350c",
      "filename": "src/main/java/emu/grasscutter/game/world/World.java",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/ec2bfffdd131cace2fe59ac44db4b1b8ad8ceb72/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fworld%2FWorld.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/ec2bfffdd131cace2fe59ac44db4b1b8ad8ceb72/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fworld%2FWorld.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fworld%2FWorld.java?ref=ec2bfffdd131cace2fe59ac44db4b1b8ad8ceb72",
      "patch": "@@ -385,7 +385,7 @@ public boolean transferPlayerToScene(Player player, TeleportProperties teleportP\n \n         // Call player teleport event.\n         PlayerTeleportEvent event =\n-            new PlayerTeleportEvent(player, teleportProperties, player.getPosition());\n+                new PlayerTeleportEvent(player, teleportProperties, player.getPosition());\n         // Call event and check if it was canceled.\n         event.call();\n         if (event.isCanceled()) {\n@@ -443,7 +443,6 @@ public boolean transferPlayerToScene(Player player, TeleportProperties teleportP\n             }\n         }\n \n-\n         // Set player position and rotation\n         if (teleportProperties.getTeleportTo() != null) {\n             player.getPosition().set(teleportProperties.getTeleportTo());\n@@ -461,7 +460,7 @@ public boolean transferPlayerToScene(Player player, TeleportProperties teleportP\n         player.sendPacket(new PacketPlayerEnterSceneNotify(player, teleportProperties));\n \n         if (teleportProperties.getTeleportType() != TeleportType.INTERNAL\n-            && teleportProperties.getTeleportType() != SCRIPT) {\n+                && teleportProperties.getTeleportType() != SCRIPT) {\n             player.getQuestManager().queueEvent(QuestContent.QUEST_CONTENT_ANY_MANUAL_TRANSPORT);\n         }\n ",
      "parent_sha": "7f5059cb8f7721d19022e860c8fcea22dff482ef"
    }
  },
  {
    "oid": "443cc8fc4b0f704d5423a7ecccb8764adf3fcb49",
    "message": "Make the UI behave.",
    "date": "2022-06-08T12:43:38Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/443cc8fc4b0f704d5423a7ecccb8764adf3fcb49",
    "details": {
      "sha": "7209c35097d1d95b93f416e0afd1af610cc55988",
      "filename": "src/main/java/emu/grasscutter/game/managers/ForgingManager/ForgingManager.java",
      "status": "modified",
      "additions": 10,
      "deletions": 4,
      "changes": 14,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/443cc8fc4b0f704d5423a7ecccb8764adf3fcb49/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fmanagers%2FForgingManager%2FForgingManager.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/443cc8fc4b0f704d5423a7ecccb8764adf3fcb49/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fmanagers%2FForgingManager%2FForgingManager.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fmanagers%2FForgingManager%2FForgingManager.java?ref=443cc8fc4b0f704d5423a7ecccb8764adf3fcb49",
      "patch": "@@ -118,9 +118,14 @@ private void sendForgeQueueDataNotify() {\n \t\tvar queueData = this.determineCurrentForgeQueueData();\n \t\tthis.player.sendPacket(new PacketForgeQueueDataNotify(queueData, List.of()));\n \t}\n-\tprivate void sendForgeQueueDataNotify(int removed) {\n+\tprivate void sendForgeQueueDataNotify(boolean hasRemoved) {\n \t\tvar queueData = this.determineCurrentForgeQueueData();\n-\t\tthis.player.sendPacket(new PacketForgeQueueDataNotify(queueData, List.of(removed)));\n+\n+\t\tif (hasRemoved) {\n+\t\t\tthis.player.sendPacket(new PacketForgeQueueDataNotify(Map.of(), List.of(1, 2, 3, 4)));\n+\t\t}\n+\n+\t\tthis.player.sendPacket(new PacketForgeQueueDataNotify(queueData, List.of()));\n \t}\n \n \tpublic void handleForgeStartReq(ForgeStartReq req) {\n@@ -227,7 +232,8 @@ private void obtainItems(int queueId) {\n \t\t// Otherwise, completely remove it.\n \t\telse {\n \t\t\tthis.player.getActiveForges().remove(queueId - 1);\n-\t\t\tthis.sendForgeQueueDataNotify(queueId);\n+\t\t\t// this.sendForgeQueueDataNotify(queueId);\n+\t\t\tthis.sendForgeQueueDataNotify(true);\n \t\t}\n \n \t\t// Send response.\n@@ -268,7 +274,7 @@ private void cancelForge(int queueId) {\n \n \t\t// Remove the forge queue.\n \t\tthis.player.getActiveForges().remove(queueId - 1);\n-\t\tthis.sendForgeQueueDataNotify(queueId);\n+\t\tthis.sendForgeQueueDataNotify(true);\n \n \t\t// Send response.\n \t\tthis.player.sendPacket(new PacketForgeQueueManipulateRsp(Retcode.RET_SUCC, ForgeQueueManipulateType.FORGE_QUEUE_MANIPULATE_TYPE_STOP_FORGE, List.of(), returnItems, List.of()));",
      "parent_sha": "9a313e50ebae105e6d25caea82abe38a5ac07feb"
    }
  },
  {
    "oid": "27b7ce7cc18743358f61e458829ce3ce2a3f98f6",
    "message": "Update NoStaminaCommand.java",
    "date": "2022-06-02T23:02:26Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/27b7ce7cc18743358f61e458829ce3ce2a3f98f6",
    "details": {
      "sha": "4a1ef8873c6824a337f183cbb14bdddfcdc352f9",
      "filename": "src/main/java/emu/grasscutter/command/commands/NoStaminaCommand.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/27b7ce7cc18743358f61e458829ce3ce2a3f98f6/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FNoStaminaCommand.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/27b7ce7cc18743358f61e458829ce3ce2a3f98f6/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FNoStaminaCommand.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FNoStaminaCommand.java?ref=27b7ce7cc18743358f61e458829ce3ce2a3f98f6",
      "patch": "@@ -9,7 +9,7 @@\n import static emu.grasscutter.utils.Language.translate;\n \n \n-@Command(label = \"nostamina\", usage = \"nostamina [on|off|toggle]\",aliases = {\"ns\"},permission = \"player.nostamina\", permissionTargeted = \"player.nostamina.others\", description = \"commands.nostamina.description\")\n+@Command(label = \"nostamina\", usage = \"nostamina [on|off|toggle]\", aliases = {\"ns\"}, permission = \"player.nostamina\", permissionTargeted = \"player.nostamina.others\", description = \"commands.nostamina.description\")\n public final class NoStaminaCommand implements CommandHandler {\n     @Override\n     public void execute(Player sender, Player targetPlayer, List<String> args) {\n@@ -23,11 +23,11 @@ public void execute(Player sender, Player targetPlayer, List<String> args) {\n                     stamina = false;\n                     break;\n                 default:\n-                    //toggled\n+                    // toggled\n                     break;\n             }\n         }\n-        targetPlayer.setStamina(stamina);//Set\n+        targetPlayer.setStamina(stamina); //Set\n \n         CommandHandler.sendMessage(sender, translate(sender, \"commands.nostamina.success\", (stamina ? translate(sender, \"commands.status.enabled\") : translate(sender, \"commands.status.disabled\")), targetPlayer.getNickname()));\n     }",
      "parent_sha": "71b53e0be4f5112c2e06d6defc94ee535c5adad3"
    }
  },
  {
    "oid": "004a765e5be775d3b507514527ff3868fbebe396",
    "message": "Fix food decreasing (#1834)\n\n* Update InventorySystem.java\r\n\r\nFix some food didn't reduce after use.\r\n\r\n* Update InventorySystem.java",
    "date": "2022-10-07T15:14:29Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/004a765e5be775d3b507514527ff3868fbebe396",
    "details": {
      "sha": "261c1f0bb6221a0ca369bb7b0a965e9e9f5b4fbe",
      "filename": "src/main/java/emu/grasscutter/game/systems/InventorySystem.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/004a765e5be775d3b507514527ff3868fbebe396/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fsystems%2FInventorySystem.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/004a765e5be775d3b507514527ff3868fbebe396/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fsystems%2FInventorySystem.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fsystems%2FInventorySystem.java?ref=004a765e5be775d3b507514527ff3868fbebe396",
      "patch": "@@ -851,7 +851,8 @@ public GameItem useItem(Player player, long targetGuid, long itemGuid, int count\n                 switch (useData.getUseOp()) {\n                     case ITEM_USE_ADD_SERVER_BUFF -> {\n                         int buffId = Integer.parseInt(useData.getUseParam()[0]);\n-                        float time = Float.parseFloat(useData.getUseParam()[1]);\n+                        String timeString = useData.getUseParam()[1];\n+                        float time = timeString.isEmpty() ? 0 : Float.parseFloat(timeString);\n \n                         player.getBuffManager().addBuff(buffId, time);\n                     }",
      "parent_sha": "a520bc9416b50e677c5adcfeca5b8921c37c1c35"
    }
  },
  {
    "oid": "b2f1142116553e5db88416c552455c6db17e5c4b",
    "message": "Add getter for DispatchServer's HttpServer",
    "date": "2022-04-25T21:34:37Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/b2f1142116553e5db88416c552455c6db17e5c4b",
    "details": {
      "sha": "1daa1f6efd8274169897d5292ed504e78dc946d7",
      "filename": "src/main/java/emu/grasscutter/server/dispatch/DispatchServer.java",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/b2f1142116553e5db88416c552455c6db17e5c4b/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fdispatch%2FDispatchServer.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/b2f1142116553e5db88416c552455c6db17e5c4b/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fdispatch%2FDispatchServer.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fdispatch%2FDispatchServer.java?ref=b2f1142116553e5db88416c552455c6db17e5c4b",
      "patch": "@@ -43,6 +43,7 @@ public final class DispatchServer {\n \n \tpublic String regionListBase64;\n \tpublic HashMap<String, RegionData> regions;\n+\tprivate HttpServer server;\n \n \tpublic DispatchServer() {\n \t\tthis.regions = new HashMap<String, RegionData>();\n@@ -54,6 +55,10 @@ public DispatchServer() {\n \t\tthis.initRegion();\n \t}\n \n+\tpublic HttpServer getServer() {\n+\t\treturn server;\n+\t}\n+\n \tpublic InetSocketAddress getAddress() {\n \t\treturn address;\n \t}\n@@ -200,7 +205,6 @@ private HttpServer safelyCreateServer(InetSocketAddress address) {\n \t}\n \n \tpublic void start() throws Exception {\n-\t\tHttpServer server;\n \t\tif (Grasscutter.getConfig().getDispatchOptions().UseSSL) {\n \t\t\tHttpsServer httpsServer = HttpsServer.create(getAddress(), 0);\n \t\t\tSSLContext sslContext = SSLContext.getInstance(\"TLS\");",
      "parent_sha": "614477181f6a7c71ad27c1cd933d6239ade371b3"
    }
  },
  {
    "oid": "3ea9e1574525e9ed88b4daf2488377a50a90d55e",
    "message": "Make co-op players spawn into the host's scene too",
    "date": "2022-04-19T06:09:48Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/3ea9e1574525e9ed88b4daf2488377a50a90d55e",
    "details": {
      "sha": "ecc41f02d6797af030ee908e58437a14d583ff06",
      "filename": "src/main/java/emu/grasscutter/game/managers/MultiplayerManager.java",
      "status": "modified",
      "additions": 17,
      "deletions": 14,
      "changes": 31,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/3ea9e1574525e9ed88b4daf2488377a50a90d55e/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fmanagers%2FMultiplayerManager.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/3ea9e1574525e9ed88b4daf2488377a50a90d55e/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fmanagers%2FMultiplayerManager.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fmanagers%2FMultiplayerManager.java?ref=3ea9e1574525e9ed88b4daf2488377a50a90d55e",
      "patch": "@@ -58,50 +58,53 @@ public void applyEnterMp(GenshinPlayer player, int targetUid) {\n \t\ttarget.sendPacket(new PacketPlayerApplyEnterMpNotify(player));\n \t}\n \n-\tpublic void applyEnterMpReply(GenshinPlayer player, int applyUid, boolean isAgreed) {\n+\tpublic void applyEnterMpReply(GenshinPlayer hostPlayer, int applyUid, boolean isAgreed) {\n \t\t// Checks\n-\t\tCoopRequest request = player.getCoopRequests().get(applyUid);\n+\t\tCoopRequest request = hostPlayer.getCoopRequests().get(applyUid);\n \t\tif (request == null || request.isExpired()) {\n \t\t\treturn;\n \t\t}\n \t\t\n \t\t// Remove now that we are handling it\n \t\tGenshinPlayer requester = request.getRequester();\n-\t\tplayer.getCoopRequests().remove(applyUid);\n+\t\thostPlayer.getCoopRequests().remove(applyUid);\n \t\t\n-\t\t// Sanity checks - Dont let player join if already in multiplayer\n+\t\t// Sanity checks - Dont let the requesting player join if they are already in multiplayer\n \t\tif (requester.getWorld().isMultiplayer()) {\n-\t\t\trequest.getRequester().sendPacket(new PacketPlayerApplyEnterMpResultNotify(player, false, PlayerApplyEnterMpReason.PlayerCannotEnterMp));\n+\t\t\trequest.getRequester().sendPacket(new PacketPlayerApplyEnterMpResultNotify(hostPlayer, false, PlayerApplyEnterMpReason.PlayerCannotEnterMp));\n \t\t\treturn;\n \t\t}\n \t\t\n \t\t// Response packet\n-\t\trequest.getRequester().sendPacket(new PacketPlayerApplyEnterMpResultNotify(player, isAgreed, PlayerApplyEnterMpReason.PlayerJudge));\n+\t\trequest.getRequester().sendPacket(new PacketPlayerApplyEnterMpResultNotify(hostPlayer, isAgreed, PlayerApplyEnterMpReason.PlayerJudge));\n \t\t\n \t\t// Declined\n \t\tif (!isAgreed) {\n \t\t\treturn;\n \t\t}\n \n \t\t// Success\n-\t\tif (!player.getWorld().isMultiplayer()) {\n+\t\tif (!hostPlayer.getWorld().isMultiplayer()) {\n \t\t\t// Player not in multiplayer, create multiplayer world\n-\t\t\tWorld world = new World(player, true);\n+\t\t\tWorld world = new World(hostPlayer, true);\n \n \t\t\t// Add\n-\t\t\tworld.addPlayer(player);\n+\t\t\tworld.addPlayer(hostPlayer);\n \t\t\t\n \t\t\t// Rejoin packet\n-\t\t\tplayer.sendPacket(new PacketPlayerEnterSceneNotify(player, player, EnterType.EnterSelf, EnterReason.HostFromSingleToMp, player.getScene().getId(), player.getPos()));\n+\t\t\thostPlayer.sendPacket(new PacketPlayerEnterSceneNotify(hostPlayer, hostPlayer, EnterType.EnterSelf, EnterReason.HostFromSingleToMp, hostPlayer.getScene().getId(), hostPlayer.getPos()));\n \t\t}\n \t\t\n \t\t// Make requester join\n-\t\tplayer.getWorld().addPlayer(requester);\n+\t\thostPlayer.getWorld().addPlayer(requester);\n+\t\t\n+\t\t// Set scene pos and id of requester to the host player's\n+\t\trequester.getPos().set(hostPlayer.getPos());\n+\t\trequester.getRotation().set(hostPlayer.getRotation());\n+\t\trequester.setSceneId(hostPlayer.getSceneId());\n \t\t\n \t\t// Packet\n-\t\trequester.sendPacket(new PacketPlayerEnterSceneNotify(requester, player, EnterType.EnterOther, EnterReason.TeamJoin, player.getScene().getId(), player.getPos()));\n-\t\trequester.getPos().set(player.getPos());\n-\t\trequester.getRotation().set(player.getRotation());\n+\t\trequester.sendPacket(new PacketPlayerEnterSceneNotify(requester, hostPlayer, EnterType.EnterOther, EnterReason.TeamJoin, hostPlayer.getScene().getId(), hostPlayer.getPos()));\n \t}\n \t\n \tpublic boolean leaveCoop(GenshinPlayer player) {",
      "parent_sha": "dd8d1752ed90985a4c09d1a274172f94393ab2b8"
    }
  },
  {
    "oid": "08c01ab15d02f714685371fb913d6c943dd205ca",
    "message": "Update Grasscutter.java",
    "date": "2022-05-05T05:57:06Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/08c01ab15d02f714685371fb913d6c943dd205ca",
    "details": {
      "sha": "10ebeb7f1a017610f889fb8f1b6da358dd02d874",
      "filename": "src/main/java/emu/grasscutter/Grasscutter.java",
      "status": "modified",
      "additions": 33,
      "deletions": 25,
      "changes": 58,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/08c01ab15d02f714685371fb913d6c943dd205ca/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2FGrasscutter.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/08c01ab15d02f714685371fb913d6c943dd205ca/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2FGrasscutter.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2FGrasscutter.java?ref=08c01ab15d02f714685371fb913d6c943dd205ca",
      "patch": "@@ -6,6 +6,7 @@\n import java.io.IOError;\n import java.net.InetSocketAddress;\n import java.util.Calendar;\n+import java.util.Locale;\n \n import emu.grasscutter.command.CommandMap;\n import emu.grasscutter.plugin.PluginManager;\n@@ -43,32 +44,32 @@ public final class Grasscutter {\n \n \tprivate static final Gson gson = new GsonBuilder().setPrettyPrinting().create();\n \tprivate static final File configFile = new File(\"./config.json\");\n-\t\n+\n \tprivate static int day; // Current day of week\n-\t\n+\n \tprivate static DispatchServer dispatchServer;\n \tprivate static GameServer gameServer;\n \tprivate static PluginManager pluginManager;\n-\t\n+\n \tpublic static final Reflections reflector = new Reflections(\"emu.grasscutter\");\n-\t\n+\n \tstatic {\n \t\t// Declare logback configuration.\n \t\tSystem.setProperty(\"logback.configurationFile\", \"src/main/resources/logback.xml\");\n-\t\t\n+\n \t\t// Load server configuration.\n \t\tGrasscutter.loadConfig();\n \n \t\t// Load Language\n \t\tGrasscutter.loadLanguage();\n-\t\t\n+\n \t\t// Check server structure.\n \t\tUtils.startupCheck();\n \t}\n-\t\n+\n     public static void main(String[] args) throws Exception {\n     \tCrypto.loadKeys();\n-    \t\n+\n \t\tfor (String arg : args) {\n \t\t\tswitch (arg.toLowerCase()) {\n \t\t\t\tcase \"-handbook\" -> {\n@@ -79,27 +80,27 @@ public static void main(String[] args) throws Exception {\n \t\t\t\t}\n \t\t\t}\n \t\t}\n-\t\t\n+\n \t\t// Initialize server.\n \t\tGrasscutter.getLogger().info(language.Starting_Grasscutter);\n-\t\t\n+\n \t\t// Load all resources.\n \t\tGrasscutter.updateDayOfWeek();\n \t\tResourceLoader.loadAll();\n \t\tScriptLoader.init();\n-\t\t\n+\n \t\t// Database\n \t\tDatabaseManager.initialize();\n \n \t\t// Create plugin manager instance.\n \t\tpluginManager = new PluginManager();\n-\t\t\n+\n \t\t// Create server instances.\n \t\tdispatchServer = new DispatchServer();\n \t\tgameServer = new GameServer(new InetSocketAddress(getConfig().getGameServerOptions().Ip, getConfig().getGameServerOptions().Port));\n \t\t// Create a server hook instance with both servers.\n \t\tnew ServerHook(gameServer, dispatchServer);\n-\t\t\n+\n \t\t// Start servers.\n \t\tif (getConfig().RunMode == ServerRunMode.HYBRID) {\n \t\t\tdispatchServer.start();\n@@ -114,7 +115,7 @@ public static void main(String[] args) throws Exception {\n \t\t\tgetLogger().error(language.Shutting_down);\n \t\t\tSystem.exit(1);\n \t\t}\n-\t\t\n+\n \t\t// Enable all plugins.\n \t\tpluginManager.enablePlugins();\n \n@@ -144,12 +145,12 @@ public static void loadConfig() {\n \t}\n \n \tpublic static void loadLanguage() {\n-\t\ttry (FileReader file = new FileReader(String.format(\"%s%s.json\", getConfig().LANGUAGE_FOLDER, Grasscutter.config.Language))) {\n+\t\ttry (FileReader file = new FileReader(String.format(\"%s%s.json\", getConfig().LANGUAGE_FOLDER, Grasscutter.config.LocaleLanguage))) {\n \t\t\tlanguage = gson.fromJson(file, Language.class);\n \t\t} catch (Exception e) {\n \t\t\tGrasscutter.language = new Language();\n \t\t\tGrasscutter.cn_language = new CNLanguage();\n-\t\t\tGrasscutter.config.Language = \"en_us\";\n+\t\t\tGrasscutter.config.LocaleLanguage = Locale.getDefault();\n \t\t\tsaveConfig();\n \n \t\t\ttry {\n@@ -161,27 +162,34 @@ public static void loadLanguage() {\n \t\t\t} catch (Exception ee) {\n \t\t\t\tGrasscutter.getLogger().error(\"Unable to create language folder.\");\n \t\t\t}\n-\t\t\ttry (FileWriter file = new FileWriter(\"./languages/en_us.json\")) {\n+\t\t\ttry (FileWriter file = new FileWriter(\"./languages/\" + Locale.US + \".json\")) {\n \t\t\t\tfile.write(gson.toJson(language));\n \t\t\t} catch (Exception ee) {\n \t\t\t\tGrasscutter.getLogger().error(\"Unable to create language file.\");\n \t\t\t}\n-\t\t\ttry (FileWriter file = new FileWriter(\"./languages/zh_cn.json\")) {\n+\t\t\ttry (FileWriter file = new FileWriter(\"./languages/\" + Locale.SIMPLIFIED_CHINESE + \".json\")) {\n \t\t\t\tfile.write(gson.toJson(cn_language));\n \t\t\t} catch (Exception ee) {\n-\t\t\t\tGrasscutter.getLogger().error(\"\u65e0\u6cd5\u521b\u5efa\u4e2d\u6587\u8bed\u8a00\u6587\u4ef6\u3002\");\n+\t\t\t\tGrasscutter.getLogger().error(\"\u65e0\u6cd5\u521b\u5efa\u7b80\u4f53\u4e2d\u6587\u8bed\u8a00\u6587\u4ef6\u3002\");\n+\t\t\t}\n+\n+\t\t\t// try again\n+\t\t\ttry (FileReader file = new FileReader(String.format(\"%s%s.json\", getConfig().LANGUAGE_FOLDER, Grasscutter.config.LocaleLanguage))) {\n+\t\t\t\tlanguage = gson.fromJson(file, Language.class);\n+\t\t\t} catch (Exception ee) {\n+\t\t\t\tGrasscutter.getLogger().error(\"Unable to load \" + Grasscutter.config.LocaleLanguage + \".json\");\n \t\t\t}\n \t\t}\n \t}\n-\t\n+\n \tpublic static void saveConfig() {\n \t\ttry (FileWriter file = new FileWriter(configFile)) {\n \t\t\tfile.write(gson.toJson(config));\n \t\t} catch (Exception e) {\n \t\t\tGrasscutter.getLogger().error(\"Unable to save config file.\");\n \t\t}\n \t}\n-\t\n+\n \tpublic static void startConsole() {\n \t\t// Console should not start in dispatch only mode.\n \t\tif (getConfig().RunMode == ServerRunMode.DISPATCH_ONLY) {\n@@ -263,11 +271,11 @@ public static DispatchServer getDispatchServer() {\n \tpublic static GameServer getGameServer() {\n \t\treturn gameServer;\n \t}\n-\t\n+\n \tpublic static PluginManager getPluginManager() {\n \t\treturn pluginManager;\n \t}\n-\t\n+\n \tpublic static void updateDayOfWeek() {\n \t\tCalendar calendar = Calendar.getInstance();\n \t\tday = calendar.get(Calendar.DAY_OF_WEEK); \n@@ -276,11 +284,11 @@ public static void updateDayOfWeek() {\n \tpublic static int getCurrentDayOfWeek() {\n \t\treturn day;\n \t}\n-\t\n+\n \tpublic enum ServerRunMode {\n \t\tHYBRID, DISPATCH_ONLY, GAME_ONLY\n \t}\n-\t\n+\n \tpublic enum ServerDebugMode {\n \t\tALL, MISSING, NONE\n \t}",
      "parent_sha": "6fc4065fa04f2310828533fab6447e82ccd99b2c"
    }
  },
  {
    "oid": "814d4819d48b4615ef8725bac0ef96f197dc9f56",
    "message": "Unlock Gnostic Hymn",
    "date": "2022-06-27T04:38:35Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/814d4819d48b4615ef8725bac0ef96f197dc9f56",
    "details": {
      "sha": "167d5a0275289a0ff4974936c30cad1ede291e6c",
      "filename": "src/main/java/emu/grasscutter/game/battlepass/BattlePassManager.java",
      "status": "modified",
      "additions": 9,
      "deletions": 2,
      "changes": 11,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/814d4819d48b4615ef8725bac0ef96f197dc9f56/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fbattlepass%2FBattlePassManager.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/814d4819d48b4615ef8725bac0ef96f197dc9f56/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fbattlepass%2FBattlePassManager.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fbattlepass%2FBattlePassManager.java?ref=814d4819d48b4615ef8725bac0ef96f197dc9f56",
      "patch": "@@ -12,6 +12,7 @@\n import dev.morphia.annotations.Indexed;\n import dev.morphia.annotations.Transient;\n import emu.grasscutter.GameConstants;\n+import emu.grasscutter.Grasscutter;\n import emu.grasscutter.data.GameData;\n import emu.grasscutter.data.common.ItemParamData;\n import emu.grasscutter.data.excels.BattlePassRewardData;\n@@ -44,7 +45,7 @@ public class BattlePassManager {\n     @Getter private int level;\n     \n     @Getter private boolean viewed;\n-    @Getter private boolean paid;\n+    private boolean paid;\n     \n     private Map<Integer, BattlePassMission> missions;\n     private Map<Integer, BattlePassReward> takenRewards;\n@@ -122,6 +123,11 @@ public boolean hasMission(int id) {\n \t\treturn getMissions().containsKey(id);\n \t}\n \n+\tpublic boolean isPaid() {\n+\t\t// ToDo: Change this when we actually support unlocking \"paid\" BP.\n+\t\treturn true;\n+\t}\n+\n \tpublic Map<Integer, BattlePassReward> getTakenRewards() {\n \t\tif (this.takenRewards == null) this.takenRewards = new HashMap<>();\n \t\treturn this.takenRewards;\n@@ -266,7 +272,8 @@ public BattlePassSchedule getScheduleProto() {\n                 .setEndTime(2059483200)\n                 .setIsViewed(this.isViewed())\n                 .setUnlockStatus(this.isPaid() ? BattlePassUnlockStatus.BATTLE_PASS_UNLOCK_STATUS_PAID : BattlePassUnlockStatus.BATTLE_PASS_UNLOCK_STATUS_FREE)\n-                .setCurCyclePoints(this.getCyclePoints())\n+                .setJPFMGBEBBBJ(2) // Not bought on Playstation.\n+\t\t\t\t.setCurCyclePoints(this.getCyclePoints())\n                 .setCurCycle(BattlePassCycle.newBuilder().setBeginTime(0).setEndTime(2059483200).setCycleIdx(3));\n \t\t\n \t\tfor (BattlePassReward reward : getTakenRewards().values()) {",
      "parent_sha": "422e25e0e464e23b43653c6c689b19db30853f0d"
    }
  },
  {
    "oid": "fab7e4a4618ba5c47401d8bb6b27301c1c1888f9",
    "message": "ChatSystem nitpick",
    "date": "2022-08-16T14:47:41Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/fab7e4a4618ba5c47401d8bb6b27301c1c1888f9",
    "details": {
      "sha": "b7e26b9ff8fa0dab09609db3ba1e3e520ba48ce7",
      "filename": "src/main/java/emu/grasscutter/game/chat/ChatSystem.java",
      "status": "modified",
      "additions": 8,
      "deletions": 18,
      "changes": 26,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/fab7e4a4618ba5c47401d8bb6b27301c1c1888f9/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fchat%2FChatSystem.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/fab7e4a4618ba5c47401d8bb6b27301c1c1888f9/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fchat%2FChatSystem.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fchat%2FChatSystem.java?ref=fab7e4a4618ba5c47401d8bb6b27301c1c1888f9",
      "patch": "@@ -51,34 +51,24 @@ private boolean tryInvokeCommand(Player sender, Player target, String rawMessage\n      * Chat history handling\n      ********************/\n     private void putInHistory(int uid, int partnerId, ChatInfo info) {\n-        if (!this.history.containsKey(uid)) {\n-            this.history.put(uid, new HashMap<>());\n-        }\n-        if (!this.history.get(uid).containsKey(partnerId)) {\n-            this.history.get(uid).put(partnerId, new ArrayList<>());\n-        }\n-\n-        this.history.get(uid).get(partnerId).add(info);\n+        this.history.computeIfAbsent(uid, HashMap::new)\n+                    .computeIfAbsent(partnerId, ArrayList::new)\n+                    .add(info);\n     }\n \n     public void clearHistoryOnLogout(Player player) {\n-        if (this.history.containsKey(player.getUid())) {\n-            this.history.remove(player.getUid());\n-        }\n+        this.history.remove(player.getUid());\n     }\n \n     public void handlePullPrivateChatReq(Player player, int partnerId) {\n-        if (this.history.getOrDefault(player.getUid(), Map.of()).containsKey(partnerId)) {\n-            player.sendPacket(new PacketPullPrivateChatRsp(this.history.get(player.getUid()).get(partnerId)));\n-        }\n-        else {\n-            player.sendPacket(new PacketPullPrivateChatRsp(List.of()));\n-        }\n+        var chatHistory = this.history.computeIfAbsent(player.getUid(), HashMap::new)\n+                                .computeIfAbsent(partnerId, ArrayList::new);\n+        player.sendPacket(new PacketPullPrivateChatRsp(chatHistory));\n     }\n \n     public void handlePullRecentChatReq(Player player) {\n         // If this user has no chat history yet, create it by sending the server welcome messages.\n-        if (!this.history.getOrDefault(player.getUid(), Map.of()).containsKey(GameConstants.SERVER_CONSOLE_UID)) {\n+        if (!this.history.computeIfAbsent(player.getUid(), HashMap::new).containsKey(GameConstants.SERVER_CONSOLE_UID)) {\n             this.sendServerWelcomeMessages(player);\n         }\n ",
      "parent_sha": "dc153572dd67df727661ba4b3d351480317dfe04"
    }
  },
  {
    "oid": "7d85c53e683c40a9044d7a29cbe7c377073dccfa",
    "message": "Restrict to MP prop only.",
    "date": "2022-05-05T07:03:42Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/7d85c53e683c40a9044d7a29cbe7c377073dccfa",
    "details": {
      "sha": "7f01392ad416435edeeca5abcc9013fefdebf016",
      "filename": "src/main/java/emu/grasscutter/server/packet/recv/HandlerSetPlayerPropReq.java",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/7d85c53e683c40a9044d7a29cbe7c377073dccfa/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fpacket%2Frecv%2FHandlerSetPlayerPropReq.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/7d85c53e683c40a9044d7a29cbe7c377073dccfa/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fpacket%2Frecv%2FHandlerSetPlayerPropReq.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fpacket%2Frecv%2FHandlerSetPlayerPropReq.java?ref=7d85c53e683c40a9044d7a29cbe7c377073dccfa",
      "patch": "@@ -8,7 +8,6 @@\n import emu.grasscutter.net.proto.PropValueOuterClass.PropValue;\n import emu.grasscutter.net.proto.SetPlayerPropReqOuterClass.SetPlayerPropReq;\n import emu.grasscutter.server.game.GameSession;\n-import emu.grasscutter.server.packet.send.PacketSetPlayerNameRsp;\n import emu.grasscutter.server.packet.send.PacketSetPlayerPropRsp;\n \n import java.util.ArrayList;\n@@ -24,8 +23,12 @@ public void handle(GameSession session, byte[] header, byte[] payload) throws Ex\n         Player player = session.getPlayer();\n         List<PropValue> propList = req.getPropListList();\n         for (int i = 0; i < propList.size(); i++) {\n-            if (!player.setProperty(PlayerProperty.getPropById(propList.get(i).getType()), (int)propList.get(i).getVal())) {\n-                session.send(new PacketSetPlayerPropRsp(1));\n+            PlayerProperty prop = PlayerProperty.getPropById(propList.get(i).getType());\n+            if (prop == PlayerProperty.PROP_IS_MP_MODE_AVAILABLE) {\n+                if (!player.setProperty(prop, (int)propList.get(i).getVal())) {\n+                    session.send(new PacketSetPlayerPropRsp(1));\n+                    return;\n+                }\n             }\n         }\n         player.save();",
      "parent_sha": "5c275c2e3c8f2b2f33b8eb7a22a642f85937e86c"
    }
  },
  {
    "oid": "e8e3fcbc9c9f93e4f7fe99cd963542925cba5314",
    "message": "Fix RegionHandler versions",
    "date": "2022-08-24T02:04:26Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/e8e3fcbc9c9f93e4f7fe99cd963542925cba5314",
    "details": {
      "sha": "f58ed4b22fcc6ea5e69b1149ac5b8941f225f265",
      "filename": "src/main/java/emu/grasscutter/server/http/dispatch/RegionHandler.java",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/e8e3fcbc9c9f93e4f7fe99cd963542925cba5314/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fhttp%2Fdispatch%2FRegionHandler.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/e8e3fcbc9c9f93e4f7fe99cd963542925cba5314/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fhttp%2Fdispatch%2FRegionHandler.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fserver%2Fhttp%2Fdispatch%2FRegionHandler.java?ref=e8e3fcbc9c9f93e4f7fe99cd963542925cba5314",
      "patch": "@@ -140,7 +140,11 @@ private static void queryCurrentRegion(Request request, Response response) {\n                 regionData = region.getBase64();\n         }\n \n-        if ( versionName.contains(\"2.7.5\") || versionName.contains(\"2.8.\")) {\n+        int versionMajor = Integer.parseInt(versionName.split(\".\")[0]);\n+        int versionMinor = Integer.parseInt(versionName.split(\".\")[1]);\n+        int versionFix   = Integer.parseInt(versionName.split(\".\")[2]);\n+\n+        if (versionMajor >= 3 || (versionMajor == 2 && versionMinor == 7 && versionFix == 50) || (versionMajor == 2 && versionMinor == 8)) {\n             try {\n                 QueryCurrentRegionEvent event = new QueryCurrentRegionEvent(regionData); event.call();\n ",
      "parent_sha": "c096d255fd8e2c50518e7920ac3eeb12ac0770b3"
    }
  },
  {
    "oid": "28a08448607287253a6b8e5b0627406ae31d28c9",
    "message": "God damn forgot I was in java for a sec",
    "date": "2022-04-27T22:30:04Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/28a08448607287253a6b8e5b0627406ae31d28c9",
    "details": {
      "sha": "ab09b3afa7e6caa8e83d07a565353f5f8e349d3f",
      "filename": "src/main/java/emu/grasscutter/command/commands/AccountCommand.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/28a08448607287253a6b8e5b0627406ae31d28c9/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FAccountCommand.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/28a08448607287253a6b8e5b0627406ae31d28c9/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FAccountCommand.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FAccountCommand.java?ref=28a08448607287253a6b8e5b0627406ae31d28c9",
      "patch": "@@ -46,7 +46,7 @@ public void execute(Player sender, List<String> args) {\n                     CommandHandler.sendMessage(null, \"Account already exists.\");\n                     return;\n                 } else {\n-                    account.addPermission('*');\n+                    account.addPermission(\"*\");\n                     account.save(); // Save account to database.\n \n                     CommandHandler.sendMessage(null, \"Account created with UID \" + account.getPlayerUid() + \".\");",
      "parent_sha": "8d332614b7964f658ee547fcdd35ca11b9128acc"
    }
  },
  {
    "oid": "a4a87fe75bf3ac6b1a65ce0c3872b758860b83d3",
    "message": "Don't send success upon failure",
    "date": "2022-07-07T13:10:58Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/a4a87fe75bf3ac6b1a65ce0c3872b758860b83d3",
    "details": {
      "sha": "b2d21a1b124f3a35dad4ed49c3866840249f1e7c",
      "filename": "src/main/java/emu/grasscutter/command/commands/EnterDungeonCommand.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/a4a87fe75bf3ac6b1a65ce0c3872b758860b83d3/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FEnterDungeonCommand.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/a4a87fe75bf3ac6b1a65ce0c3872b758860b83d3/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FEnterDungeonCommand.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fcommand%2Fcommands%2FEnterDungeonCommand.java?ref=a4a87fe75bf3ac6b1a65ce0c3872b758860b83d3",
      "patch": "@@ -26,10 +26,11 @@ public void execute(Player sender, Player targetPlayer, List<String> args) {\n             }\n             \n             boolean result = targetPlayer.getServer().getDungeonManager().enterDungeon(targetPlayer.getSession().getPlayer(), 0, dungeonId);\n-            CommandHandler.sendMessage(sender, translate(sender, \"commands.enter_dungeon.changed\", dungeonId));\n \n             if (!result) {\n                 CommandHandler.sendMessage(sender, translate(sender, \"commands.enter_dungeon.not_found_error\"));\n+            } else {\n+                CommandHandler.sendMessage(sender, translate(sender, \"commands.enter_dungeon.changed\", dungeonId));\n             }\n         } catch (Exception e) {\n             CommandHandler.sendMessage(sender, translate(sender, \"commands.enter_dungeon.usage\"));",
      "parent_sha": "26b1cad9c9b232cc4125eb48e188127446b9758f"
    }
  },
  {
    "oid": "248b655f07c96d322fdb865acffa3ddf82da000d",
    "message": "Use scene types instead of hardcoding scene ids for checking enter reason",
    "date": "2022-05-13T23:35:03Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/248b655f07c96d322fdb865acffa3ddf82da000d",
    "details": {
      "sha": "ccbe4b841f9aa62e58d4f55f564b01d81aa6eb53",
      "filename": "src/main/java/emu/grasscutter/game/world/World.java",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/248b655f07c96d322fdb865acffa3ddf82da000d/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fworld%2FWorld.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/248b655f07c96d322fdb865acffa3ddf82da000d/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fworld%2FWorld.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fworld%2FWorld.java?ref=248b655f07c96d322fdb865acffa3ddf82da000d",
      "patch": "@@ -10,6 +10,7 @@\n import emu.grasscutter.game.player.Player.SceneLoadState;\n import emu.grasscutter.game.props.EnterReason;\n import emu.grasscutter.game.props.EntityIdType;\n+import emu.grasscutter.game.props.SceneType;\n import emu.grasscutter.data.GameData;\n import emu.grasscutter.data.def.DungeonData;\n import emu.grasscutter.data.def.SceneData;\n@@ -267,11 +268,9 @@ public boolean transferPlayerToScene(Player player, int sceneId, DungeonData dun\n \t\t\tenterReason = EnterReason.DungeonEnter;\n \t\t} else if (oldScene == newScene) {\n \t\t\tenterType = EnterType.ENTER_GOTO;\n-\t\t}\n-\n-\t\t// Home\n-\t\tif (2001 <= newScene.getId() && newScene.getId() <= 2004) {\n-\t\t\tenterType = EnterType.ENTER_SELF_HOME;\n+\t\t} else if (newScene.getSceneType() == SceneType.SCENE_HOME_WORLD) {\n+\t\t\t// Home\n+\t\t\tenterType = EnterType.ENTER_SELF_HOME; \n \t\t}\n \t\t\n \t\t// Teleport packet",
      "parent_sha": "82698d56238e84fd5cb5f45ee3181ba639b820b7"
    }
  },
  {
    "oid": "a1f75e1537f64e65b493e33726e481e31d64da25",
    "message": "Format code [skip actions]",
    "date": "2023-06-09T17:29:26Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/a1f75e1537f64e65b493e33726e481e31d64da25",
    "details": {
      "sha": "9bca99fdff3502a13b4b2699773990efecd3aa6d",
      "filename": "src/main/java/emu/grasscutter/game/world/Scene.java",
      "status": "modified",
      "additions": 10,
      "deletions": 7,
      "changes": 17,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/a1f75e1537f64e65b493e33726e481e31d64da25/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fworld%2FScene.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/a1f75e1537f64e65b493e33726e481e31d64da25/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fworld%2FScene.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fworld%2FScene.java?ref=a1f75e1537f64e65b493e33726e481e31d64da25",
      "patch": "@@ -1153,19 +1153,22 @@ private List<SceneNpcBornEntry> loadNpcForPlayer(Player player) {\n \n         List<SceneNpcBornEntry> sceneNpcBornEntries = new ArrayList<>();\n         sceneNpcBornCanidates.forEach(\n-            i -> {\n-                var groupInstance = scriptManager.getGroupInstanceById(i.getGroupId());\n-                if (groupInstance == null) return;\n-                if (i.getSuiteIdList() != null && !i.getSuiteIdList().contains(groupInstance.getActiveSuiteId())) return;\n-                sceneNpcBornEntries.add(i);\n-            });\n+                i -> {\n+                    var groupInstance = scriptManager.getGroupInstanceById(i.getGroupId());\n+                    if (groupInstance == null) return;\n+                    if (i.getSuiteIdList() != null\n+                            && !i.getSuiteIdList().contains(groupInstance.getActiveSuiteId())) return;\n+                    sceneNpcBornEntries.add(i);\n+                });\n \n         if (sceneNpcBornEntries.size() > 0) {\n             this.broadcastPacket(new PacketGroupSuiteNotify(sceneNpcBornEntries));\n             Grasscutter.getLogger().trace(\"Loaded Npc Group Suite {}\", sceneNpcBornEntries);\n         }\n \n-        return npcList.stream().filter(i -> this.npcBornEntrySet.contains(i) || sceneNpcBornEntries.contains(i)).toList();\n+        return npcList.stream()\n+                .filter(i -> this.npcBornEntrySet.contains(i) || sceneNpcBornEntries.contains(i))\n+                .toList();\n     }\n \n     public void loadGroupForQuest(List<QuestGroupSuite> sceneGroupSuite) {",
      "parent_sha": "e6d32f5599cb54930b6ffd78badeeed227334027"
    }
  },
  {
    "oid": "a4ad781d6115679f549186197d1e7498a5c09a67",
    "message": "Format code [skip actions]",
    "date": "2023-07-31T16:54:59Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/a4ad781d6115679f549186197d1e7498a5c09a67",
    "details": {
      "sha": "c856ac242cc13249412a8062c71295a3bd91eec1",
      "filename": "src/main/java/emu/grasscutter/game/dungeons/DungeonManager.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/a4ad781d6115679f549186197d1e7498a5c09a67/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fdungeons%2FDungeonManager.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/a4ad781d6115679f549186197d1e7498a5c09a67/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fdungeons%2FDungeonManager.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2Fgame%2Fdungeons%2FDungeonManager.java?ref=a4ad781d6115679f549186197d1e7498a5c09a67",
      "patch": "@@ -53,10 +53,10 @@ public final class DungeonManager {\n     public DungeonManager(@NonNull Scene scene, @NonNull DungeonData dungeonData) {\n         this.scene = scene;\n         this.dungeonData = dungeonData;\n-        if(dungeonData.getPassCond() == 0){\n+        if (dungeonData.getPassCond() == 0) {\n             this.passConfigData = new DungeonPassConfigData();\n             this.passConfigData.setConds(new ArrayList<>());\n-        }else {\n+        } else {\n             this.passConfigData = GameData.getDungeonPassConfigDataMap().get(dungeonData.getPassCond());\n         }\n         this.finishedConditions = new int[this.passConfigData.getConds().size()];\n@@ -81,7 +81,7 @@ public void triggerEvent(DungeonPassConditionType conditionType, int... params)\n     }\n \n     public boolean isFinishedSuccessfully() {\n-        if(passConfigData.getLogicType()==null) return false;\n+        if (passConfigData.getLogicType() == null) return false;\n         return LogicType.calculate(passConfigData.getLogicType(), finishedConditions);\n     }\n ",
      "parent_sha": "465582b8da75dd4fb5792af783915556c4320480"
    }
  },
  {
    "oid": "091d8c69a3d698e3c14dd1435067a6c3d13fae04",
    "message": "Add a debug flag for the logger",
    "date": "2022-06-26T16:23:07Z",
    "url": "https://github.com/Grasscutters/Grasscutter/commit/091d8c69a3d698e3c14dd1435067a6c3d13fae04",
    "details": {
      "sha": "7f187e04ab212e6a179d1e5ca0f503452e4b169d",
      "filename": "src/main/java/emu/grasscutter/Grasscutter.java",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/Grasscutters/Grasscutter/blob/091d8c69a3d698e3c14dd1435067a6c3d13fae04/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2FGrasscutter.java",
      "raw_url": "https://github.com/Grasscutters/Grasscutter/raw/091d8c69a3d698e3c14dd1435067a6c3d13fae04/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2FGrasscutter.java",
      "contents_url": "https://api.github.com/repos/Grasscutters/Grasscutter/contents/src%2Fmain%2Fjava%2Femu%2Fgrasscutter%2FGrasscutter.java?ref=091d8c69a3d698e3c14dd1435067a6c3d13fae04",
      "patch": "@@ -1,5 +1,6 @@\n package emu.grasscutter;\n \n+import ch.qos.logback.classic.Level;\n import ch.qos.logback.classic.Logger;\n import com.google.gson.Gson;\n import com.google.gson.GsonBuilder;\n@@ -8,11 +9,8 @@\n import emu.grasscutter.command.CommandMap;\n import emu.grasscutter.command.DefaultPermissionHandler;\n import emu.grasscutter.command.PermissionHandler;\n-import emu.grasscutter.game.dungeons.challenge.DungeonChallenge;\n import emu.grasscutter.data.ResourceLoader;\n import emu.grasscutter.database.DatabaseManager;\n-import emu.grasscutter.game.managers.energy.EnergyManager;\n-import emu.grasscutter.game.managers.stamina.StaminaManager;\n import emu.grasscutter.plugin.PluginManager;\n import emu.grasscutter.plugin.api.ServerHook;\n import emu.grasscutter.scripts.ScriptLoader;\n@@ -102,6 +100,10 @@ public static void main(String[] args) throws Exception {\n                     System.out.println(\"Grasscutter version: \" + BuildConfig.VERSION + \"-\" + BuildConfig.GIT_HASH);\n                     exitEarly = true;\n                 }\n+                case \"-debug\" -> {\n+                    log.setLevel(Level.DEBUG);\n+                    log.debug(\"The logger is now running in debug mode.\");\n+                }\n             }\n         }\n ",
      "parent_sha": "3447d5e91e119e12f9cb40bfd83442a32f04ff2f"
    }
  }
]