[
  {
    "oid": "92869e8d6c0e5ce059de4f4abb3d8d77f38c95c7",
    "message": "\u6587\u672c\u6587\u4ef6\u7f16\u7801\u9ed8\u8ba4UTF-8\u8f93\u51fa\u5230\u9875\u9762",
    "date": "2020-12-28T15:56:38Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/92869e8d6c0e5ce059de4f4abb3d8d77f38c95c7",
    "details": {
      "sha": "19fa8dec4fd3bc098fa02ac528ec4533a66e6ae0",
      "filename": "server/src/main/java/cn/keking/service/impl/SimTextFilePreviewImpl.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/92869e8d6c0e5ce059de4f4abb3d8d77f38c95c7/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FSimTextFilePreviewImpl.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/92869e8d6c0e5ce059de4f4abb3d8d77f38c95c7/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FSimTextFilePreviewImpl.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FSimTextFilePreviewImpl.java?ref=92869e8d6c0e5ce059de4f4abb3d8d77f38c95c7",
      "patch": "@@ -12,6 +12,7 @@\n \n import java.io.File;\n import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n \n /**\n  * Created by kl on 2018/1/17.\n@@ -36,8 +37,8 @@ public String filePreviewHandle(String url, Model model, FileAttribute fileAttri\n         try {\n             File originFile = new File(response.getContent());\n             String charset = KkFileUtils.getFileEncode(originFile);\n-            String xmlString = FileUtils.readFileToString(originFile, charset);\n-            model.addAttribute(\"textData\", Base64Utils.encodeToString(xmlString.getBytes(charset)));\n+            String fileData = FileUtils.readFileToString(originFile, charset);\n+            model.addAttribute(\"textData\", Base64Utils.encodeToString(fileData.getBytes(StandardCharsets.UTF_8)));\n         } catch (IOException e) {\n             return otherFilePreview.notSupportedFile(model, fileAttribute, e.getLocalizedMessage());\n         }",
      "parent_sha": "c66dda239f23e835e067f7968d0a85904209e8d3"
    }
  },
  {
    "oid": "0854317cc8a82b6c13cbfebbbeca4f40b4b1179e",
    "message": "\u4f18\u5316\uff1a\u589e\u52a0Office\u8fdb\u7a0b\u5173\u95ed\u65e5\u5fd7",
    "date": "2021-07-06T01:10:19Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/0854317cc8a82b6c13cbfebbbeca4f40b4b1179e",
    "details": {
      "sha": "1e43dcc7b11dc8c5fff37805198960661c24435d",
      "filename": "server/src/main/java/cn/keking/service/OfficePluginManager.java",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/0854317cc8a82b6c13cbfebbbeca4f40b4b1179e/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FOfficePluginManager.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/0854317cc8a82b6c13cbfebbbeca4f40b4b1179e/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FOfficePluginManager.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FOfficePluginManager.java?ref=0854317cc8a82b6c13cbfebbbeca4f40b4b1179e",
      "patch": "@@ -21,11 +21,8 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.nio.charset.StandardCharsets;\n-import java.time.Duration;\n-import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.HashMap;\n-import java.util.List;\n import java.util.Map;\n import java.util.Properties;\n \n@@ -143,6 +140,7 @@ private boolean killProcess() {\n     @PreDestroy\n     public void destroyOfficeManager(){\n         if (null != officeManager && officeManager.isRunning()) {\n+            logger.info(\"Shutting down office process\");\n             officeManager.stop();\n         }\n     }",
      "parent_sha": "fcdefa450cd270936c3e40738d8b170e7cadce61"
    }
  },
  {
    "oid": "7b817cbcf65dabe56293820982b9328844090d0f",
    "message": "Update DownloadUtils.java",
    "date": "2017-12-26T02:56:14Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/7b817cbcf65dabe56293820982b9328844090d0f",
    "details": {
      "sha": "a689a2e2c1890387718041a87285c1b01ef699c5",
      "filename": "jodconverter-web/src/main/java/com/yudianbank/utils/DownloadUtils.java",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/7b817cbcf65dabe56293820982b9328844090d0f/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcom%2Fyudianbank%2Futils%2FDownloadUtils.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/7b817cbcf65dabe56293820982b9328844090d0f/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcom%2Fyudianbank%2Futils%2FDownloadUtils.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcom%2Fyudianbank%2Futils%2FDownloadUtils.java?ref=7b817cbcf65dabe56293820982b9328844090d0f",
      "patch": "@@ -73,8 +73,10 @@ public ReturnResponse<String> downLoad(String urlAddress, String type, String fi\n             // \u540c\u6837\u9488\u5bf9\u7c7btxt\u6587\u4ef6\uff0c\u5982\u679c\u6210\u529fmsg\u5305\u542b\u7684\u662f\u8f6c\u6362\u540e\u7684\u6587\u4ef6\u540d\n             response.setMsg(fileName);\n \n-            // \u8f6c\u6362\u6587\u4ef6\u7f16\u7801\u4e3autf8\n-          convertTextPlainFileCharsetToUtf8(realPath);\n+             // txt\u8f6c\u6362\u6587\u4ef6\u7f16\u7801\u4e3autf8\n+            if(\"txt\".equals(type)){\n+                convertTextPlainFileCharsetToUtf8(realPath);\n+            }\n \n             return response;\n         } catch (IOException e) {",
      "parent_sha": "91d606d69729e0cecfaf30656723613353dcc854"
    }
  },
  {
    "oid": "9c096605bb729895f4ed0f75b5af8d3ce88c287a",
    "message": "\u4fee\u590d\uff1a\u4fee\u590dTrustHost\u9759\u6001\u6ce8\u5165\u95ee\u9898",
    "date": "2020-05-18T07:55:26Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/9c096605bb729895f4ed0f75b5af8d3ce88c287a",
    "details": {
      "sha": "e2b6cac1c25f54daec9d117cc609e7d00174d7a0",
      "filename": "jodconverter-web/src/main/java/cn/keking/config/ConfigConstants.java",
      "status": "modified",
      "additions": 50,
      "deletions": 52,
      "changes": 102,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/9c096605bb729895f4ed0f75b5af8d3ce88c287a/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fconfig%2FConfigConstants.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/9c096605bb729895f4ed0f75b5af8d3ce88c287a/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fconfig%2FConfigConstants.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fconfig%2FConfigConstants.java?ref=9c096605bb729895f4ed0f75b5af8d3ce88c287a",
      "patch": "@@ -6,7 +6,7 @@\n \n import java.io.File;\n import java.util.Arrays;\n-import java.util.HashSet;\n+import java.util.concurrent.CopyOnWriteArraySet;\n import java.util.Set;\n \n /**\n@@ -17,95 +17,94 @@\n @Component\n public class ConfigConstants {\n \n-    private static Boolean cacheEnabled;\n-    private static String[] simText = {};\n-    private static String[] media = {};\n-    private static String officePreviewType;\n-    private static String ftpUsername;\n-    private static String ftpPassword;\n-    private static String ftpControlEncoding;\n-    private static String fileDir = OfficeUtils.getHomePath() + File.separator + \"file\" + File.separator;\n-    private static String baseUrl;\n-    private static String trustHost;\n-    private static Set<String> trustHostSet;\n+    private static Boolean CACHE_ENABLED;\n+    private static String[] SIM_TEXT = {};\n+    private static String[] MEDIA = {};\n+    private static String OFFICE_PREVIEW_TYPE;\n+    private static String FTP_USERNAME;\n+    private static String FTP_PASSWORD;\n+    private static String FTP_CONTROL_ENCODING;\n+    private static String BASE_URL;\n+    private static String FILE_DIR = OfficeUtils.getHomePath() + File.separator + \"file\" + File.separator;\n+    private static CopyOnWriteArraySet<String> TRUST_HOST_SET;\n \n     public static final String DEFAULT_CACHE_ENABLED = \"true\";\n     public static final String DEFAULT_TXT_TYPE = \"txt,html,htm,asp,jsp,xml,json,properties,md,gitignore,,java,py,c,cpp,sql,sh,bat,m,bas,prg,cmd\";\n     public static final String DEFAULT_MEDIA_TYPE = \"mp3,wav,mp4,flv\";\n-    public static final String DEFAULT_FILE_DIR_VALUE = \"default\";\n+    public static final String DEFAULT_OFFICE_PREVIEW_TYPE = \"image\";\n     public static final String DEFAULT_FTP_USERNAME = null;\n     public static final String DEFAULT_FTP_PASSWORD = null;\n     public static final String DEFAULT_FTP_CONTROL_ENCODING = \"UTF-8\";\n-    public static final String DEFAULT_OFFICE_PREVIEW_TYPE = \"image\";\n     public static final String DEFAULT_BASE_URL = \"default\";\n+    public static final String DEFAULT_FILE_DIR_VALUE = \"default\";\n     public static final String DEFAULT_TRUST_HOST = \"default\";\n \n     public static Boolean isCacheEnabled() {\n-        return cacheEnabled;\n+        return CACHE_ENABLED;\n     }\n \n     public static void setCacheEnabled(Boolean cacheEnabled) {\n-        ConfigConstants.cacheEnabled = cacheEnabled;\n+        CACHE_ENABLED = cacheEnabled;\n     }\n \n     public static String[] getSimText() {\n-        return simText;\n+        return SIM_TEXT;\n     }\n \n     public static void setSimText(String[] simText) {\n-        ConfigConstants.simText = simText;\n+        SIM_TEXT = simText;\n     }\n \n     public static String[] getMedia() {\n-        return media;\n+        return MEDIA;\n     }\n \n-    public static void setMedia(String[] media) {\n-        ConfigConstants.media = media;\n+    public static void setMedia(String[] Media) {\n+        ConfigConstants.MEDIA = Media;\n     }\n \n     public static String getOfficePreviewType() {\n-        return officePreviewType;\n+        return OFFICE_PREVIEW_TYPE;\n     }\n \n     public static void setOfficePreviewType(String officePreviewType) {\n-        ConfigConstants.officePreviewType = officePreviewType;\n+        OFFICE_PREVIEW_TYPE = officePreviewType;\n     }\n \n     public static String getFtpUsername() {\n-        return ftpUsername;\n+        return FTP_USERNAME;\n     }\n \n     public static void setFtpUsername(String ftpUsername) {\n-        ConfigConstants.ftpUsername = ftpUsername;\n+        FTP_USERNAME = ftpUsername;\n     }\n \n     public static String getFtpPassword() {\n-        return ftpPassword;\n+        return FTP_PASSWORD;\n     }\n \n-    public static String getFtpControlEncoding() {\n-        return ftpControlEncoding;\n-    }\n-\n-    public static void setFtpControlEncoding(String ftpControlEncoding) {\n-        ConfigConstants.ftpControlEncoding = ftpControlEncoding;\n+    public static void setFtpPassword(String ftpPassword) {\n+        FTP_PASSWORD = ftpPassword;\n     }\n \n-    public static void setFtpPassword(String ftpPassword) {\n-        ConfigConstants.ftpPassword = ftpPassword;\n+    public static String getFtpControlEncoding() {\n+        return FTP_CONTROL_ENCODING;\n     }\n \n-    public static String getFileDir() {\n-        return fileDir;\n+    public static void setFtpControlEncoding(String ftpControlEncoding) {\n+        FTP_CONTROL_ENCODING = ftpControlEncoding;\n     }\n \n     public static String getBaseUrl() {\n-        return baseUrl;\n+        return BASE_URL;\n     }\n \n     public static void setBaseUrl(String baseUrl) {\n-        ConfigConstants.baseUrl = baseUrl;\n+        BASE_URL = baseUrl;\n+    }\n+\n+    public static String getFileDir() {\n+        return FILE_DIR;\n     }\n \n     @Value(\"${file.dir:default}\")\n@@ -114,33 +113,32 @@ public void setFileDir(String fileDir) {\n             if (!fileDir.endsWith(File.separator)) {\n                 fileDir = fileDir + File.separator;\n             }\n-            ConfigConstants.fileDir = fileDir;\n+            FILE_DIR = fileDir;\n         }\n     }\n \n-    static String getTrustHost() {\n-        return trustHost;\n+    @Value(\"${trust.host:default}\")\n+    public void setTrustHostStr(String trustHost) {\n+        setTrustHost(trustHost);\n     }\n \n-    @Value(\"${trust.host:default}\")\n-    static void setTrustHost(String trustHost) {\n-        ConfigConstants.trustHost = trustHost;\n-        Set<String> trustHostSet;\n+    public static void setTrustHost(String trustHost) {\n+        CopyOnWriteArraySet<String> trustHostSet;\n         if (DEFAULT_TRUST_HOST.equals(trustHost.toLowerCase())) {\n-            trustHostSet = new HashSet<>();\n+            trustHostSet = new CopyOnWriteArraySet<>();\n         } else {\n             String[] trustHostArray = trustHost.toLowerCase().split(\",\");\n-            trustHostSet = new HashSet<>(Arrays.asList(trustHostArray));\n-            ConfigConstants.setTrustHostSet(trustHostSet);\n+            trustHostSet = new CopyOnWriteArraySet<>(Arrays.asList(trustHostArray));\n+            setTrustHostSet(trustHostSet);\n         }\n-        ConfigConstants.setTrustHostSet(trustHostSet);\n+        setTrustHostSet(trustHostSet);\n     }\n \n     public static Set<String> getTrustHostSet() {\n-        return trustHostSet;\n+        return TRUST_HOST_SET;\n     }\n \n-    private static void setTrustHostSet(Set<String> trustHostSet) {\n-        ConfigConstants.trustHostSet = trustHostSet;\n+    private static void setTrustHostSet(CopyOnWriteArraySet<String> trustHostSet) {\n+        ConfigConstants.TRUST_HOST_SET = trustHostSet;\n     }\n }",
      "parent_sha": "b90e326eec83e0588f1ee30f9acf2412752daa61"
    }
  },
  {
    "oid": "138e58a1e12c175002d46db2a76808505761f1a5",
    "message": "\u4fee\u6539\u5220\u9664\u63d0\u793a\u9519\u8bef\n\u4fee\u6539\u5220\u9664\u63d0\u793a\u9519\u8bef\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-04-11T01:39:31Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/138e58a1e12c175002d46db2a76808505761f1a5",
    "details": {
      "sha": "6d726fc63fb318f71a4f90498749ba7dd03de8a8",
      "filename": "server/src/main/java/cn/keking/web/controller/FileController.java",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/138e58a1e12c175002d46db2a76808505761f1a5/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FFileController.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/138e58a1e12c175002d46db2a76808505761f1a5/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FFileController.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FFileController.java?ref=138e58a1e12c175002d46db2a76808505761f1a5",
      "patch": "@@ -36,7 +36,6 @@ public class FileController {\n     private final String demoDir = \"demo\";\n     private final String demoPath = demoDir + File.separator;\n     public static final String BASE64_DECODE_ERROR_MSG = \"Base64\u89e3\u7801\u5931\u8d25\uff0c\u8bf7\u68c0\u67e5\u4f60\u7684 %s \u662f\u5426\u91c7\u7528 Base64 + urlEncode \u53cc\u91cd\u7f16\u7801\u4e86\uff01\";\n-    private static final String[] not_allowed = { \"dll\", \"exe\", \"msi\" }; // \u4e0d\u5141\u8bb8\u4e0a\u4f20\u7684\u6587\u4ef6\u6269\u5c55\u540d\n \n     @PostMapping(\"/fileUpload\")\n     public ReturnResponse<Object> fileUpload(@RequestParam(\"file\") MultipartFile file) {\n@@ -65,11 +64,11 @@ public ReturnResponse<Object> deleteFile(String fileName,String password) {\n         if (checkResult.isFailure()) {\n             return checkResult;\n         }\n+         fileName = checkResult.getContent().toString();\n         if(!ConfigConstants.getpassword().equalsIgnoreCase(password)){\n             logger.error(\"\u5220\u9664\u6587\u4ef6\u3010{}\u3011\u5931\u8d25\uff0c\u5bc6\u7801\u9519\u8bef\uff01\",fileName);\n             return ReturnResponse.failure(\"\u5220\u9664\u6587\u4ef6\u5931\u8d25\uff0c\u5bc6\u7801\u9519\u8bef\uff01\");\n         }\n-        fileName = checkResult.getContent().toString();\n         File file = new File(fileDir + demoPath + fileName);\n         logger.info(\"\u5220\u9664\u6587\u4ef6\uff1a{}\", file.getAbsolutePath());\n         if (file.exists() && !file.delete()) {",
      "parent_sha": "55ca17203fe4ded53cd999ef179b609565530b5d"
    }
  },
  {
    "oid": "4f007e0c6e0830b086cd1e83cd77bb21a7a5a6f6",
    "message": "\u65b0\u589e\u529f\u80fd:\u6dfb\u52a0\u66f4\u65b0\u7f13\u5b58\u65b9\u6cd5&forceUpdatedCache=true\n\u65b0\u589e\u529f\u80fd:\u6dfb\u52a0\u66f4\u65b0\u7f13\u5b58\u65b9\u6cd5&forceUpdatedCache=true\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-04-23T05:58:25Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/4f007e0c6e0830b086cd1e83cd77bb21a7a5a6f6",
    "details": {
      "sha": "ec42e3c9565f10d3c85c8d19419f158a6b67fa76",
      "filename": "server/src/main/java/cn/keking/service/FileHandlerService.java",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/4f007e0c6e0830b086cd1e83cd77bb21a7a5a6f6/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/4f007e0c6e0830b086cd1e83cd77bb21a7a5a6f6/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java?ref=4f007e0c6e0830b086cd1e83cd77bb21a7a5a6f6",
      "patch": "@@ -14,7 +14,6 @@\n import com.aspose.cad.LoadOptions;\n import com.aspose.cad.imageoptions.CadRasterizationOptions;\n import com.aspose.cad.imageoptions.PdfOptions;\n-import jodd.util.StringUtil;\n import org.apache.pdfbox.pdmodel.PDDocument;\n import org.apache.pdfbox.rendering.ImageType;\n import org.apache.pdfbox.rendering.PDFRenderer;\n@@ -179,12 +178,12 @@ public void doActionConvertedFile(String outFilePath) {\n      */\n     public List<String> pdf2jpg(String pdfFilePath, String pdfName, String baseUrl, FileAttribute fileAttribute) {\n         List<String> imageUrls = new ArrayList<>();\n-        Integer imageCount = null; ;\n+        Integer imageCount = this.getConvertedPdfImage(pdfFilePath);\n         String imageFileSuffix = \".jpg\";\n         String pdfFolder = pdfName.substring(0, pdfName.length() - 4);\n         boolean forceUpdatedCache=fileAttribute.forceUpdatedCache();\n-        if (!forceUpdatedCache){\n-            imageCount = this.getConvertedPdfImage(pdfFilePath);\n+        if (forceUpdatedCache){\n+            imageCount = null;\n         }\n         String urlPrefix;\n         try {",
      "parent_sha": "ace5a1898c85dc66f3fff5dbac4aa3c3bec9d5bc"
    }
  },
  {
    "oid": "2b456c9934fc6524df9d41f61831a92fb6254d3a",
    "message": "\u9a8c\u8bc1\u7801\u65b9\u6cd5 \u4ee3\u7801\u4f18\u5316\n\n(cherry picked from commit da5dac73ab6c89778efb2732d7c6e2afb4c72b34)",
    "date": "2023-07-22T06:01:56Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/2b456c9934fc6524df9d41f61831a92fb6254d3a",
    "details": {
      "sha": "84db4dc434196c872aaa899e443467432bcc0783",
      "filename": "server/src/main/java/cn/keking/utils/RandomValidateCodeUtil.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/2b456c9934fc6524df9d41f61831a92fb6254d3a/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FRandomValidateCodeUtil.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/2b456c9934fc6524df9d41f61831a92fb6254d3a/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FRandomValidateCodeUtil.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FRandomValidateCodeUtil.java?ref=2b456c9934fc6524df9d41f61831a92fb6254d3a",
      "patch": "@@ -63,13 +63,13 @@ public static Map<String,Object> generateCodeAndPic(String ip, String sessionCod\n             blue = random.nextInt(255);\n             // \u7528\u968f\u673a\u4ea7\u751f\u7684\u989c\u8272\u5c06\u9a8c\u8bc1\u7801\u7ed8\u5236\u5230\u56fe\u50cf\u4e2d\u3002\n             gd.setColor(new Color(red, green, blue));\n-            gd.drawString(sessionCode, xx, codeY);\n+            gd.drawString(sessionCode, 18, codeY);\n             randomCode.append(sessionCode);\n         }else {\n             // \u968f\u673a\u4ea7\u751fcodeCount\u6570\u5b57\u7684\u9a8c\u8bc1\u7801\u3002\n             for (int i = 0; i < codeCount; i++) {\n                 // \u5f97\u5230\u968f\u673a\u4ea7\u751f\u7684\u9a8c\u8bc1\u7801\u6570\u5b57\u3002\n-                String code = String.valueOf(codeSequence[random.nextInt(30)]);\n+                String code = String.valueOf(codeSequence[random.nextInt(52)]);\n                 // \u4ea7\u751f\u968f\u673a\u7684\u989c\u8272\u5206\u91cf\u6765\u6784\u9020\u989c\u8272\u503c\uff0c\u8fd9\u6837\u8f93\u51fa\u7684\u6bcf\u4f4d\u6570\u5b57\u7684\u989c\u8272\u503c\u90fd\u5c06\u4e0d\u540c\u3002\n                 red = random.nextInt(255);\n                 green = random.nextInt(255);",
      "parent_sha": "ad322c2e109b8bfc62fd68532b394d1b2fb3f0ee"
    }
  },
  {
    "oid": "8f7c13850e0087c752a4ae807f4d0a9813a36b9f",
    "message": "\u4fee\u590d\u8c03\u8bd5\u65f6\u53ea\u6253\u5f00jodconverter-web\u76ee\u5f55\u91cc\u8bfb\u4e0d\u5230\u914d\u7f6e\u6587\u4ef6\u5f02\u5e38",
    "date": "2019-04-26T06:15:08Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/8f7c13850e0087c752a4ae807f4d0a9813a36b9f",
    "details": {
      "sha": "5d4580bfa5fd40c3100507dbcfa98d2ce365f790",
      "filename": "jodconverter-core/src/main/java/org/artofsolving/jodconverter/office/OfficeUtils.java",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/8f7c13850e0087c752a4ae807f4d0a9813a36b9f/jodconverter-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fartofsolving%2Fjodconverter%2Foffice%2FOfficeUtils.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/8f7c13850e0087c752a4ae807f4d0a9813a36b9f/jodconverter-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fartofsolving%2Fjodconverter%2Foffice%2FOfficeUtils.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/jodconverter-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fartofsolving%2Fjodconverter%2Foffice%2FOfficeUtils.java?ref=8f7c13850e0087c752a4ae807f4d0a9813a36b9f",
      "patch": "@@ -131,7 +131,11 @@ public static String getHomePath() {\n             userDir = userDir.substring(0, userDir.length() - 4);\n         } else {\n             String separator = File.separator;\n-            userDir = userDir + separator + \"jodconverter-web\" + separator + \"src\" + separator +  \"main\";\n+            if (userDir.contains(\"jodconverter-web\")) {\n+                userDir = userDir + separator + \"src\" + separator +  \"main\";\n+            } else {\n+                userDir = userDir + separator + \"jodconverter-web\" + separator + \"src\" + separator + \"main\";\n+            }\n         }\n         return userDir;\n     }",
      "parent_sha": "b4d341979722b0399bbe8167e5b77d6cde506f4a"
    }
  },
  {
    "oid": "af752cfa13b5c748cdf47e6c65c102672bb9107a",
    "message": "\u4fee\u590dAutowire static method",
    "date": "2022-12-13T10:17:20Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/af752cfa13b5c748cdf47e6c65c102672bb9107a",
    "details": {
      "sha": "0b6e81feafddbb9dd9dad59851f34982d9e6fb97",
      "filename": "server/src/main/java/cn/keking/config/ConfigConstants.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/af752cfa13b5c748cdf47e6c65c102672bb9107a/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fconfig%2FConfigConstants.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/af752cfa13b5c748cdf47e6c65c102672bb9107a/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fconfig%2FConfigConstants.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fconfig%2FConfigConstants.java?ref=af752cfa13b5c748cdf47e6c65c102672bb9107a",
      "patch": "@@ -275,7 +275,7 @@ public static String getPdfOpenFileDisable() {\n     }\n \n     @Value(\"${pdf.openFile.disable:true}\")\n-    public static void setPdfOpenFileDisable(String pdfOpenFileDisable) {\n+    public void setPdfOpenFileDisable(String pdfOpenFileDisable) {\n         setPdfOpenFileDisableValue(pdfOpenFileDisable);\n     }\n     public static void setPdfOpenFileDisableValue(String pdfOpenFileDisable) {\n@@ -286,7 +286,7 @@ public static String getPdfPrintDisable() {\n         return pdfPrintDisable;\n     }\n     @Value(\"${pdf.print.disable:true}\")\n-    public  void setPdfPrintDisable(String pdfPrintDisable) {\n+    public void setPdfPrintDisable(String pdfPrintDisable) {\n         setPdfPrintDisableValue(pdfPrintDisable);\n     }\n     public static void setPdfPrintDisableValue(String pdfPrintDisable) {\n@@ -332,7 +332,7 @@ public static Boolean getFileUploadDisable() {\n     }\n \n     @Value(\"${file.upload.disable:false}\")\n-    public static void setFileUploadDisable(Boolean fileUploadDisable) {\n+    public void setFileUploadDisable(Boolean fileUploadDisable) {\n         setFileUploadDisableValue(fileUploadDisable);\n     }\n ",
      "parent_sha": "f0dc845825da84ef71eecd619ecdfb80a62b417b"
    }
  },
  {
    "oid": "764ea702d00c227c8d189d5c955b8ec644976ec3",
    "message": "\u4fee\u590d\u5347\u7ea7poi\u7248\u672c\u540e\u5224\u65adoffice\u662f\u5426\u53d7\u5bc6\u7801\u4fdd\u62a4\u65b9\u6cd5",
    "date": "2022-11-10T10:27:39Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/764ea702d00c227c8d189d5c955b8ec644976ec3",
    "details": {
      "sha": "c782b6cfcf61ebfc629f9f99bf6a2ab898202af3",
      "filename": "server/src/main/java/cn/keking/utils/OfficeUtils.java",
      "status": "modified",
      "additions": 10,
      "deletions": 8,
      "changes": 18,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/764ea702d00c227c8d189d5c955b8ec644976ec3/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FOfficeUtils.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/764ea702d00c227c8d189d5c955b8ec644976ec3/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FOfficeUtils.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FOfficeUtils.java?ref=764ea702d00c227c8d189d5c955b8ec644976ec3",
      "patch": "@@ -1,12 +1,12 @@\n package cn.keking.utils;\n \n import org.apache.commons.lang3.exception.ExceptionUtils;\n-import org.apache.poi.EncryptedDocumentException;\n import org.apache.poi.extractor.ExtractorFactory;\n import org.apache.poi.hssf.record.crypto.Biff8EncryptionKey;\n import org.springframework.lang.Nullable;\n \n import java.io.FileInputStream;\n+import java.io.IOException;\n \n /**\n  * Office\u5de5\u5177\u7c7b\n@@ -16,6 +16,8 @@\n  */\n public class OfficeUtils {\n \n+    private static final String POI_INVALID_PASSWORD_MSG = \"Invalid password specified\";\n+\n     /**\n      * \u5224\u65adoffice\uff08word,excel,ppt\uff09\u6587\u4ef6\u662f\u5426\u53d7\u5bc6\u7801\u4fdd\u62a4\n      *\n@@ -25,17 +27,18 @@ public class OfficeUtils {\n     public static boolean isPwdProtected(String path) {\n         try {\n             ExtractorFactory.createExtractor(new FileInputStream(path));\n-        } catch (EncryptedDocumentException e) {\n-            return true;\n+        } catch (IOException e) {\n+            if (POI_INVALID_PASSWORD_MSG.equals(e.getMessage())) {\n+                return true;\n+            }\n         } catch (Exception e) {\n-            Throwable[] throwables = ExceptionUtils.getThrowables(e);\n-            for (Throwable throwable : throwables) {\n-                if (throwable instanceof EncryptedDocumentException) {\n+            Throwable[] throwableArray = ExceptionUtils.getThrowables(e);\n+            for (Throwable throwable : throwableArray) {\n+                if (throwable instanceof IOException && POI_INVALID_PASSWORD_MSG.equals(throwable.getMessage())) {\n                     return true;\n                 }\n             }\n         }\n-\n         return false;\n     }\n \n@@ -55,7 +58,6 @@ public static synchronized boolean isCompatible(String path, @Nullable String pa\n         } finally {\n             Biff8EncryptionKey.setCurrentUserPassword(null);\n         }\n-\n         return true;\n     }\n ",
      "parent_sha": "b225cebc9518f31b060ffdfd849d1c71a4b44b08"
    }
  },
  {
    "oid": "6b802b65455bbfeb8a6c4acb9a253d23ebf8f217",
    "message": "\u538b\u7f29\u5305\u65b9\u6cd5 \u6807\u6ce8\u8def\u5f84\u8be6\u7ec6\u8bf4\u660e",
    "date": "2023-12-19T07:55:21Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/6b802b65455bbfeb8a6c4acb9a253d23ebf8f217",
    "details": {
      "sha": "29b5e987c5c1f2b1cec44d186c9c56b9b5219934",
      "filename": "server/src/main/java/cn/keking/service/CompressFileReader.java",
      "status": "modified",
      "additions": 7,
      "deletions": 6,
      "changes": 13,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/6b802b65455bbfeb8a6c4acb9a253d23ebf8f217/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FCompressFileReader.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/6b802b65455bbfeb8a6c4acb9a253d23ebf8f217/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FCompressFileReader.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FCompressFileReader.java?ref=6b802b65455bbfeb8a6c4acb9a253d23ebf8f217",
      "patch": "@@ -34,9 +34,10 @@ public CompressFileReader(FileHandlerService fileHandlerService) {\n     public String unRar(String filePath, String filePassword, String fileName, String fileKey) throws Exception {\n         List<String> imgUrls = new ArrayList<>();\n         String baseUrl = BaseUrlFilter.getBaseUrl();\n+        String packagePath = \"_\"; //\u9632\u6b62\u6587\u4ef6\u540d\u91cd\u590d \u538b\u7f29\u5305\u7edf\u4e00\u751f\u6210\u6587\u4ef6\u6dfb\u52a0_\u7b26\u53f7\n         String folderName =  filePath.replace(fileDir, \"\"); //\u4fee\u590d\u538b\u7f29\u5305 \u591a\u91cd\u76ee\u5f55\u83b7\u53d6\u8def\u5f84\u9519\u8bef\n         if (!ObjectUtils.isEmpty(fileKey)) { //\u538b\u7f29\u5305\u6587\u4ef6 \u76f4\u63a5\u8d4b\u4e88\u8def\u5f84 \u4e0d\u4e88\u4e0b\u8f7d\n-              folderName = \"_decompression\"+folderName;\n+              folderName = \"_decompression\"+folderName;  //\u91cd\u65b0\u4fee\u6539\u591a\u91cd\u538b\u7f29\u5305 \u751f\u6210\u6587\u4ef6\u8def\u5f84\n         }\n         RandomAccessFile randomAccessFile = null;\n         IInArchive inArchive = null;\n@@ -57,11 +58,11 @@ public String unRar(String filePath, String filePassword, String fileName, Strin\n                             }\n                             str[0] = str[0].replace(\"\\\\\",  File.separator); //Linux \u4e0b\u8def\u5f84\u9519\u8bef\n                             String  str1 = str[0].substring(0, str[0].lastIndexOf(File.separator)+ 1);\n-                            File file = new File(fileDir, finalFolderName + \"_\" + File.separator + str1);\n+                            File file = new File(fileDir, finalFolderName + packagePath + File.separator + str1);\n                             if (!file.exists()) {\n                                 file.mkdirs();\n                             }\n-                            OutputStream out = new FileOutputStream( fileDir+ finalFolderName + \"_\" + File.separator + str[0], true);\n+                            OutputStream out = new FileOutputStream( fileDir+ finalFolderName + packagePath + File.separator + str[0], true);\n                             IOUtils.write(data, out);\n                             out.close();\n                         } catch (Exception e) {\n@@ -73,15 +74,15 @@ public String unRar(String filePath, String filePassword, String fileName, Strin\n                     if (result == ExtractOperationResult.OK) {\n                         FileType type = FileType.typeFromUrl(str[0]);\n                         if (type.equals(FileType.PICTURE)) {\n-                            imgUrls.add(baseUrl +folderName + \"_/\" + str[0].replace(\"\\\\\", \"/\"));\n+                            imgUrls.add(baseUrl +folderName + packagePath +\"/\" + str[0].replace(\"\\\\\", \"/\"));\n                         }\n-                        fileHandlerService.putImgCache(fileName+ \"_\", imgUrls);\n+                        fileHandlerService.putImgCache(fileName+ packagePath, imgUrls);\n                     } else {\n                         return null;\n                     }\n                 }\n             }\n-            return folderName + \"_\";\n+            return folderName + packagePath;\n         } catch (Exception e) {\n             throw new Exception(e);\n         } finally {",
      "parent_sha": "79b9d703dcbc70a208cd25204c05ab5c6de3a185"
    }
  },
  {
    "oid": "56cdeffaa93f3f5ca2f043f419f844aac9da0a46",
    "message": "\u65b0\u589e wps \u6587\u6863\u9884\u89c8\u652f\u6301",
    "date": "2021-03-02T09:29:49Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/56cdeffaa93f3f5ca2f043f419f844aac9da0a46",
    "details": {
      "sha": "96f12c940b3b5f72aba914215849b1897d155cdb",
      "filename": "server/src/main/java/cn/keking/model/FileType.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/56cdeffaa93f3f5ca2f043f419f844aac9da0a46/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fmodel%2FFileType.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/56cdeffaa93f3f5ca2f043f419f844aac9da0a46/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fmodel%2FFileType.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fmodel%2FFileType.java?ref=56cdeffaa93f3f5ca2f043f419f844aac9da0a46",
      "patch": "@@ -26,7 +26,7 @@ public enum FileType {\n     TIFF(\"tiffFilePreviewImpl\");\n \n \n-    private static final String[] OFFICE_TYPES = {\"docx\", \"doc\", \"xls\", \"xlsx\", \"ppt\", \"pptx\"};\n+    private static final String[] OFFICE_TYPES = {\"docx\", \"wps\", \"doc\", \"xls\", \"xlsx\", \"ppt\", \"pptx\"};\n     private static final String[] PICTURE_TYPES = {\"jpg\", \"jpeg\", \"png\", \"gif\", \"bmp\", \"ico\", \"raw\"};\n     private static final String[] ARCHIVE_TYPES = {\"rar\", \"zip\", \"jar\", \"7-zip\", \"tar\", \"gzip\", \"7z\"};\n     private static final String[] TIFF_TYPES = {\"tif\", \"tiff\"};",
      "parent_sha": "5633eb4111c6d89744dcd31f9f397174875320cd"
    }
  },
  {
    "oid": "8a613513aa4363481726a6065bd0723d27827055",
    "message": "refactor: Remove unnecessary 'password==null\" condition",
    "date": "2023-08-09T13:53:40Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/8a613513aa4363481726a6065bd0723d27827055",
    "details": {
      "sha": "5aa2074ef3f597d32863407ea135d93e33d1447c",
      "filename": "server/src/main/java/cn/keking/web/controller/FileController.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/8a613513aa4363481726a6065bd0723d27827055/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FFileController.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/8a613513aa4363481726a6065bd0723d27827055/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FFileController.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FFileController.java?ref=8a613513aa4363481726a6065bd0723d27827055",
      "patch": "@@ -73,12 +73,12 @@ public ReturnResponse<Object> deleteFile(HttpServletRequest request, String file\n             } catch (Exception e) {\n                 sessionCode = \"null\";\n             }\n-            if (password==null || !sessionCode.equalsIgnoreCase(password)){\n+            if (!sessionCode.equalsIgnoreCase(password)){\n                 logger.error(\"\u5220\u9664\u6587\u4ef6\u3010{}\u3011\u5931\u8d25\uff0c\u5bc6\u7801\u9519\u8bef\uff01\",fileName);\n                 return ReturnResponse.failure(\"\u5220\u9664\u6587\u4ef6\u5931\u8d25\uff0c\u5bc6\u7801\u9519\u8bef\uff01\");\n             }\n         }else {\n-            if(password==null || !ConfigConstants.getPassword().equalsIgnoreCase(password)) {\n+            if(!ConfigConstants.getPassword().equalsIgnoreCase(password)) {\n                 logger.error(\"\u5220\u9664\u6587\u4ef6\u3010{}\u3011\u5931\u8d25\uff0c\u5bc6\u7801\u9519\u8bef\uff01\",fileName);\n                 return ReturnResponse.failure(\"\u5220\u9664\u6587\u4ef6\u5931\u8d25\uff0c\u5bc6\u7801\u9519\u8bef\uff01\");\n             }",
      "parent_sha": "c249f6897233ec4b8e614e0eba01303daa4ef04d"
    }
  },
  {
    "oid": "b53ad6054e31757702f8a1fdc8726b74f3700703",
    "message": "\u4fee\u6b63\u9884\u89c8\u7684url\u4e2d\u5305\u542b&\u65f6\u4f1a\u8f6c\u4e49\u4e3a&amp; \u5bfc\u81f4 document.getElementById(\"${currentUrl}\").click \u83b7\u53d6\u4e0d\u5230id\n\nSigned-off-by: ASelince\u4e36C <18331529783@163.com>",
    "date": "2023-04-12T05:48:16Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/b53ad6054e31757702f8a1fdc8726b74f3700703",
    "details": {
      "sha": "6fc6121be597625ceeb6e76e07be12da1436a9d0",
      "filename": "server/src/main/java/cn/keking/utils/KkFileUtils.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/b53ad6054e31757702f8a1fdc8726b74f3700703/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FKkFileUtils.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/b53ad6054e31757702f8a1fdc8726b74f3700703/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FKkFileUtils.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FKkFileUtils.java?ref=b53ad6054e31757702f8a1fdc8726b74f3700703",
      "patch": "@@ -102,7 +102,9 @@ public static boolean deleteFileByName(String fileName) {\n     public static String htmlEscape(String input) {\n         if(StringUtils.hasText(input)){\n             //input = input.replaceAll(\"\\\\{\", \"%7B\").replaceAll(\"}\", \"%7D\").replaceAll(\"\\\\\\\\\", \"%5C\");\n-            return HtmlUtils.htmlEscape(input, \"UTF-8\");\n+            String htmlStr = HtmlUtils.htmlEscape(input, \"UTF-8\");\n+            //& -> &amp;\n+            return htmlStr.replace(\"&amp;\", \"&\");\n         }\n         return input;\n     }",
      "parent_sha": "195f56e9b9f63dfcb9f7232889020755a24adeba"
    }
  },
  {
    "oid": "b86515a926ebf8a6ceb88b9c2d0589ba54d3dd1d",
    "message": "\u589e\u52a0OFD\u529f\u80fd",
    "date": "2021-06-17T09:48:48Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/b86515a926ebf8a6ceb88b9c2d0589ba54d3dd1d",
    "details": {
      "sha": "9b9e3f650e4df1977ee2cc8e8e4634178f0ed702",
      "filename": "server/src/main/java/cn/keking/model/FileType.java",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/b86515a926ebf8a6ceb88b9c2d0589ba54d3dd1d/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fmodel%2FFileType.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/b86515a926ebf8a6ceb88b9c2d0589ba54d3dd1d/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fmodel%2FFileType.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fmodel%2FFileType.java?ref=b86515a926ebf8a6ceb88b9c2d0589ba54d3dd1d",
      "patch": "@@ -23,13 +23,15 @@ public enum FileType {\n     XML(\"xmlFilePreviewImpl\"),\n     FLV(\"flvFilePreviewImpl\"),\n     CAD(\"cadFilePreviewImpl\"),\n-    TIFF(\"tiffFilePreviewImpl\");\n+    TIFF(\"tiffFilePreviewImpl\"),\n+    OFD(\"ofdFilePreviewImpl\");\n \n \n     private static final String[] OFFICE_TYPES = {\"docx\", \"wps\", \"doc\", \"xls\", \"xlsx\", \"ppt\", \"pptx\"};\n     private static final String[] PICTURE_TYPES = {\"jpg\", \"jpeg\", \"png\", \"gif\", \"bmp\", \"ico\", \"raw\"};\n     private static final String[] ARCHIVE_TYPES = {\"rar\", \"zip\", \"jar\", \"7-zip\", \"tar\", \"gzip\", \"7z\"};\n     private static final String[] TIFF_TYPES = {\"tif\", \"tiff\"};\n+    private static final String[] OFD_TYPES = {\"ofd\"};\n     private static final String[] SSIM_TEXT_TYPES = ConfigConstants.getSimText();\n     private static final String[] CODES = {\"java\", \"c\", \"php\", \"go\", \"python\", \"py\", \"js\", \"html\", \"ftl\", \"css\", \"lua\", \"sh\", \"rb\", \"yml\", \"json\", \"h\", \"cpp\", \"cs\", \"aspx\", \"jsp\"};\n     private static final String[] MEDIA_TYPES = ConfigConstants.getMedia();\n@@ -61,6 +63,9 @@ public enum FileType {\n         for (String code : CODES) {\n             FILE_TYPE_MAPPER.put(code, FileType.CODE);\n         }\n+        for (String ofd : OFD_TYPES) {\n+            FILE_TYPE_MAPPER.put(ofd, FileType.OFD);\n+        }\n         FILE_TYPE_MAPPER.put(\"md\", FileType.MARKDOWN);\n         FILE_TYPE_MAPPER.put(\"xml\", FileType.XML);\n         FILE_TYPE_MAPPER.put(\"pdf\", FileType.PDF);",
      "parent_sha": "1ba8c31d2cc8efa7f34756bb1f9b29a277bc2fac"
    }
  },
  {
    "oid": "07edf77ba8d56f1e6a9e5ce60984cc6fd39fb531",
    "message": "\u4f18\u5316\u538b\u7f29\u5305\u5224\u65ad\u5b57\u7b26\u4e32\u65b9\u6cd5",
    "date": "2024-03-15T03:49:14Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/07edf77ba8d56f1e6a9e5ce60984cc6fd39fb531",
    "details": {
      "sha": "9362b487b6b658102c04cf52a9115e4da264afe4",
      "filename": "server/src/main/java/cn/keking/utils/RarUtils.java",
      "status": "modified",
      "additions": 9,
      "deletions": 6,
      "changes": 15,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/07edf77ba8d56f1e6a9e5ce60984cc6fd39fb531/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FRarUtils.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/07edf77ba8d56f1e6a9e5ce60984cc6fd39fb531/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FRarUtils.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FRarUtils.java?ref=07edf77ba8d56f1e6a9e5ce60984cc6fd39fb531",
      "patch": "@@ -75,15 +75,18 @@ private static boolean isChinese(char c) {\n     public static boolean judge(char c){\r\n         return (c >= '0' && c <= '9') || (c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z');\r\n     }\r\n+    public static String specialSymbols(String str) {\r\n+        //\u53bb\u9664\u538b\u7f29\u5305\u6587\u4ef6\u5b57\u7b26\u4e32\u4e2d\u7279\u6b8a\u7b26\u53f7\r\n+        Pattern p = Pattern.compile(\"\\\\s|\\t|\\r|\\n|\\\\+|#|&|=|\\\\p{P}\");\r\n+  //    Pattern p = Pattern.compile(\"\\\\s|\\\\+|#|&|=|\\\\p{P}\");\r\n+        Matcher m = p.matcher(str);\r\n+        return m.replaceAll(\"\");\r\n+    }\r\n     public static boolean isMessyCode(String strName) {\r\n         //\u53bb\u9664\u5b57\u7b26\u4e32\u4e2d\u7684\u7a7a\u683c \u5236\u8868\u7b26 \u6362\u884c \u56de\u8f66\r\n-        Pattern p = Pattern.compile(\"\\\\s*|\\t*|\\r*|\\n*\");\r\n-        Matcher m = p.matcher(strName);\r\n-        String after = m.replaceAll(\"\").replaceAll(\"\\\\+\", \"\").replaceAll(\"#\", \"\").replaceAll(\"&\", \"\");\r\n-        //\u53bb\u9664\u5b57\u7b26\u4e32\u4e2d\u7684\u6807\u70b9\u7b26\u53f7\r\n-        String temp = after.replaceAll(\"\\\\p{P}\", \"\");\r\n+        strName = specialSymbols(strName);\r\n         //\u5904\u7406\u4e4b\u540e\u8f6c\u6362\u6210\u5b57\u7b26\u6570\u7ec4\r\n-        char[] ch = temp.trim().toCharArray();\r\n+        char[] ch = strName.trim().toCharArray();\r\n         for (char c : ch) {\r\n             //\u5224\u65ad\u662f\u5426\u662f\u6570\u5b57\u6216\u8005\u82f1\u6587\u5b57\u7b26\r\n             if (!judge(c)) {\r",
      "parent_sha": "ddefeb630a632f181b96a243fd7cb299c3bb3b5b"
    }
  },
  {
    "oid": "98a7217b1038589e052a443337bbbf1a233e0b1a",
    "message": "update server/src/main/java/cn/keking/web/filter/TrustHostFilter.java.\n\u4fee\u590d\u5f00\u542f\u4fe1\u4efb\u7ad9\u70b9 \u7ee7\u7eed\u6267\u884c\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-03-20T07:28:03Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/98a7217b1038589e052a443337bbbf1a233e0b1a",
    "details": {
      "sha": "380e32717de9500747feb28246f75f8a6037961a",
      "filename": "server/src/main/java/cn/keking/web/filter/TrustHostFilter.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/98a7217b1038589e052a443337bbbf1a233e0b1a/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Ffilter%2FTrustHostFilter.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/98a7217b1038589e052a443337bbbf1a233e0b1a/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Ffilter%2FTrustHostFilter.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Ffilter%2FTrustHostFilter.java?ref=98a7217b1038589e052a443337bbbf1a233e0b1a",
      "patch": "@@ -42,7 +42,9 @@ public void doFilter(ServletRequest request, ServletResponse response, FilterCha\n             response.getWriter().write(html);\n             response.getWriter().close();\n         }\n-        chain.doFilter(request, response);\n+        else {\n+            chain.doFilter(request, response);\n+        }\n     }\n \n     @Override",
      "parent_sha": "a867effa68dd1b21c73666d1f8def6fbb9faf5e2"
    }
  },
  {
    "oid": "0563fde951bf5e8a725b276e5670d5c967a0ad6e",
    "message": "\u4fee\u6539csv\u547d\u540d\u89c4\u8303\n\u4fee\u6539csv\u547d\u540d\u89c4\u8303\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-09-07T02:29:05Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/0563fde951bf5e8a725b276e5670d5c967a0ad6e",
    "details": {
      "sha": "388b251fa59a1f887843e2fe7ea4c7b5af2ebe4b",
      "filename": "server/src/main/java/cn/keking/service/FilePreview.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/0563fde951bf5e8a725b276e5670d5c967a0ad6e/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFilePreview.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/0563fde951bf5e8a725b276e5670d5c967a0ad6e/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFilePreview.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFilePreview.java?ref=0563fde951bf5e8a725b276e5670d5c967a0ad6e",
      "patch": "@@ -32,7 +32,7 @@ public interface FilePreview {\n     String DRAWUI_FILE_PREVIEW_PAGE = \"drawio\";\n     String NOT_SUPPORTED_FILE_PAGE = \"fileNotSupported\";\n     String XLSX_FILE_PREVIEW_PAGE = \"officeweb\";\n-    String CSV_FILE_PREVIEW_PAGE = \"officecsv\";\n+    String CSV_FILE_PREVIEW_PAGE = \"csv\";\n \n     String filePreviewHandle(String url, Model model, FileAttribute fileAttribute);\n }",
      "parent_sha": "0c4e5bc420a981764bd65d4591f1b5e709b4f561"
    }
  },
  {
    "oid": "fff3ea0e30de07bd79fc3914915bd1459bca5ff4",
    "message": "update server/src/main/java/cn/keking/model/FileAttribute.java.\n\u4fee\u590d\u5220\u9664\u6e90\u6587\u4ef6\u9ed8\u8ba4\u65b9\u6cd5\u7684  \u9519\u8bef\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-04-21T03:36:11Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/fff3ea0e30de07bd79fc3914915bd1459bca5ff4",
    "details": {
      "sha": "442c586a9cd4d0622fbb7b1e4f37718a8aba195a",
      "filename": "server/src/main/java/cn/keking/model/FileAttribute.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/fff3ea0e30de07bd79fc3914915bd1459bca5ff4/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fmodel%2FFileAttribute.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/fff3ea0e30de07bd79fc3914915bd1459bca5ff4/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fmodel%2FFileAttribute.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fmodel%2FFileAttribute.java?ref=fff3ea0e30de07bd79fc3914915bd1459bca5ff4",
      "patch": "@@ -17,7 +17,7 @@ public class FileAttribute {\n     private String userToken;\n     private String officePreviewType = ConfigConstants.getOfficePreviewType();\n     private String tifPreviewType;\n-    private Boolean skipDownLoad = false;\n+    private Boolean skipDownLoad = true;\n \n     public FileAttribute() {\n     }",
      "parent_sha": "cfaa431e20f2c65e422c146a3dabf014931923c1"
    }
  },
  {
    "oid": "a057808624b6b8d44338ce70fb1ff8efa29565a3",
    "message": "\u4fee\u590d \u538b\u7f29\u5305 office \u6587\u4ef6\u8f6c\u6362\u6210jpg\u683c\u5f0f \u8def\u5f84\u83b7\u53d6\u9519\u8bef\u95ee\u9898",
    "date": "2023-10-24T09:56:44Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/a057808624b6b8d44338ce70fb1ff8efa29565a3",
    "details": {
      "sha": "855bd95c029fc7bc7d781f6c9a390b6e18862554",
      "filename": "server/src/main/java/cn/keking/service/FileHandlerService.java",
      "status": "modified",
      "additions": 6,
      "deletions": 8,
      "changes": 14,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/a057808624b6b8d44338ce70fb1ff8efa29565a3/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/a057808624b6b8d44338ce70fb1ff8efa29565a3/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java?ref=a057808624b6b8d44338ce70fb1ff8efa29565a3",
      "patch": "@@ -195,16 +195,14 @@ public void doActionConvertedFile(String outFilePath) {\n \n     /**\n      * \u83b7\u53d6\u672c\u5730 pdf \u8f6c image \u540e\u7684 web \u8bbf\u95ee\u5730\u5740\n-     * @param pdfName pdf\u6587\u4ef6\u540d\n+     * @param pdfFilePath pdf\u6587\u4ef6\u540d\n      * @param index \u56fe\u7247\u7d22\u5f15\n      * @return \u56fe\u7247\u8bbf\u95ee\u5730\u5740\n      */\n-    private String getPdf2jpgUrl(String pdfName, int index,String fileKey) {\n+    private String getPdf2jpgUrl(String pdfFilePath, int index) {\n         String baseUrl = BaseUrlFilter.getBaseUrl();\n-        if (!ObjectUtils.isEmpty(fileKey)) { // \u662f\u538b\u7f29\u5305\u6587\u4ef6 \u6539\u53d8PDF\u751f\u6210\u56fe\u7247\u7684\u8def\u5f84\n-                pdfName = \"_decompression\"+ pdfName;\n-        }\n-        String pdfFolder = pdfName.substring(0, pdfName.length() - 4);\n+        pdfFilePath = pdfFilePath.replace(fileDir, \"\");\n+        String pdfFolder = pdfFilePath.substring(0, pdfFilePath.length() - 4);\n         String urlPrefix;\n         try {\n             urlPrefix = baseUrl + URLEncoder.encode(pdfFolder, uriEncoding).replaceAll(\"\\\\+\", \"%2B\");\n@@ -228,7 +226,7 @@ private List<String> loadPdf2jpgCache(String pdfFilePath, String pdfName, String\n             return imageUrls;\n         }\n         IntStream.range(0, imageCount).forEach(i -> {\n-            String imageUrl = this.getPdf2jpgUrl(pdfName, i,fileKey);\n+            String imageUrl = this.getPdf2jpgUrl(pdfFilePath, i);\n             imageUrls.add(imageUrl);\n         });\n         return imageUrls;\n@@ -276,7 +274,7 @@ public List<String> pdf2jpg(String fileNameFilePath,String pdfFilePath, String p\n                 imageFilePath = folder + File.separator + pageIndex + PDF2JPG_IMAGE_FORMAT;\n                 BufferedImage image = pdfRenderer.renderImageWithDPI(pageIndex, ConfigConstants.getPdf2JpgDpi(), ImageType.RGB);\n                 ImageIOUtil.writeImage(image, imageFilePath, ConfigConstants.getPdf2JpgDpi());\n-                String imageUrl = this.getPdf2jpgUrl(pdfName, pageIndex,fileKey);\n+                String imageUrl = this.getPdf2jpgUrl(pdfFilePath, pageIndex);\n                 imageUrls.add(imageUrl);\n             }\n             try {",
      "parent_sha": "75978643371b3d2eb02b8aa31c522570f6faeb2b"
    }
  },
  {
    "oid": "4a0409953aef808820000bd62bed4f5d9a8f9e85",
    "message": "[hotfix] \u4fee\u590d\u56e0\u751f\u547d\u5468\u671f\uff0cgetCadThread = 0\u5bfc\u81f4\u7ebf\u7a0b\u6c60\u521b\u5efa\u5931\u8d25\u95ee\u9898",
    "date": "2023-08-11T11:19:55Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/4a0409953aef808820000bd62bed4f5d9a8f9e85",
    "details": {
      "sha": "15008b374fd7fcb1c2d6216c48cdfd1660d7b78e",
      "filename": "server/src/main/java/cn/keking/service/FileHandlerService.java",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/4a0409953aef808820000bd62bed4f5d9a8f9e85/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/4a0409953aef808820000bd62bed4f5d9a8f9e85/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java?ref=4a0409953aef808820000bd62bed4f5d9a8f9e85",
      "patch": "@@ -25,6 +25,7 @@\n import org.apache.poi.EncryptedDocumentException;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.InitializingBean;\n import org.springframework.beans.factory.annotation.Value;\n import org.springframework.stereotype.Component;\n import org.springframework.util.CollectionUtils;\n@@ -48,7 +49,7 @@\n  * @date 2017/11/13\n  */\n @Component\n-public class FileHandlerService {\n+public class FileHandlerService implements InitializingBean {\n \n     private static final String PDF2JPG_IMAGE_FORMAT = \".jpg\";\n     private static final String PDF_PASSWORD_MSG = \"password\";\n@@ -148,7 +149,11 @@ public void putImgCache(String fileKey, List<String> imgs) {\n     /**\n      cad\u5b9a\u4e49\u7ebf\u7a0b\u6c60\n      */\n-    private static final ExecutorService pool = Executors.newFixedThreadPool(ConfigConstants.getCadThread());\n+    private ExecutorService pool = null;\n+    @Override\n+    public void afterPropertiesSet() throws Exception {\n+        pool = Executors.newFixedThreadPool(ConfigConstants.getCadThread());\n+    }\n     /**\n      * \u5bf9\u8f6c\u6362\u540e\u7684\u6587\u4ef6\u8fdb\u884c\u64cd\u4f5c(\u6539\u53d8\u7f16\u7801\u65b9\u5f0f)\n      *",
      "parent_sha": "fa2a5d3e359621186c0ab6d0774865251c1fda0b"
    }
  },
  {
    "oid": "ee7f7f50cc47be1c0024384cd1c04a77c7bcb1ad",
    "message": "\u4fee\u590d\u5927\u5c0f\u5199\u6587\u4ef6\u7c7b\u578b\u540e\u7f00\u6ca1\u901a\u7528\u5339\u914d\u7684\u95ee\u9898",
    "date": "2020-12-29T01:29:16Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/ee7f7f50cc47be1c0024384cd1c04a77c7bcb1ad",
    "details": {
      "sha": "78e3e5e69aabb6a94154d62ef3e26090d19dc1a6",
      "filename": "server/src/main/java/cn/keking/model/FileType.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/ee7f7f50cc47be1c0024384cd1c04a77c7bcb1ad/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fmodel%2FFileType.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/ee7f7f50cc47be1c0024384cd1c04a77c7bcb1ad/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fmodel%2FFileType.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fmodel%2FFileType.java?ref=ee7f7f50cc47be1c0024384cd1c04a77c7bcb1ad",
      "patch": "@@ -24,7 +24,7 @@ public enum FileType {\n     cad(\"cadFilePreviewImpl\");\n \n     private static final String[] OFFICE_TYPES = {\"docx\", \"doc\", \"xls\", \"xlsx\", \"ppt\", \"pptx\"};\n-    private static final String[] PICTURE_TYPES = {\"jpg\", \"jpeg\", \"png\", \"gif\", \"bmp\", \"ico\", \"RAW\"};\n+    private static final String[] PICTURE_TYPES = {\"jpg\", \"jpeg\", \"png\", \"gif\", \"bmp\", \"ico\", \"raw\"};\n     private static final String[] ARCHIVE_TYPES = {\"rar\", \"zip\", \"jar\", \"7-zip\", \"tar\", \"gzip\", \"7z\"};\n     private static final String[] SSIM_TEXT_TYPES = ConfigConstants.getSimText();\n     private static final String[] MEDIA_TYPES = ConfigConstants.getMedia();\n@@ -71,7 +71,8 @@ public static FileType typeFromUrl(String url) {\n \n     public static FileType typeFromFileName(String fileName) {\n         String fileType = fileName.substring(fileName.lastIndexOf(\".\") + 1);\n-        return FileType.to(fileType);\n+        String lowerCaseFileType = fileType.toLowerCase();\n+        return FileType.to(lowerCaseFileType);\n     }\n \n     private final String instanceName;",
      "parent_sha": "92869e8d6c0e5ce059de4f4abb3d8d77f38c95c7"
    }
  },
  {
    "oid": "ca52ab7beee66b033efd5afbc64d05fff976168b",
    "message": "\u65b0\u589epages\u683c\u5f0f\u652f\u6301,\u8c03\u6574SQL\u6587\u4ef6\u9884\u89c8\u65b9\u5f0f\n\u65b0\u589epages\u683c\u5f0f\u652f\u6301,\u8c03\u6574SQL\u6587\u4ef6\u9884\u89c8\u65b9\u5f0f\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-05-04T00:50:39Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/ca52ab7beee66b033efd5afbc64d05fff976168b",
    "details": {
      "sha": "8f0d260dde59ebe66e816b50c9714bccd1eb6141",
      "filename": "server/src/main/java/cn/keking/model/FileType.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/ca52ab7beee66b033efd5afbc64d05fff976168b/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fmodel%2FFileType.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/ca52ab7beee66b033efd5afbc64d05fff976168b/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fmodel%2FFileType.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fmodel%2FFileType.java?ref=ca52ab7beee66b033efd5afbc64d05fff976168b",
      "patch": "@@ -34,7 +34,7 @@ public enum FileType {\n     DCM(\"dcmFilePreviewImpl\"),\n     DRAWUI(\"drawioFilePreviewImpl\");\n \n-    private static final String[] OFFICE_TYPES = {\"docx\", \"wps\", \"doc\", \"docm\", \"xls\", \"xlsx\", \"csv\" ,\"xlsm\", \"ppt\", \"pptx\", \"vsd\", \"rtf\", \"odt\", \"wmf\", \"emf\", \"dps\", \"et\", \"ods\", \"ots\", \"tsv\", \"odp\", \"otp\", \"sxi\", \"ott\", \"vsdx\", \"fodt\", \"fods\", \"xltx\",\"tga\",\"psd\",\"dotm\",\"ett\",\"xlt\",\"xltm\",\"wpt\",\"dot\",\"xlam\",\"dotx\",\"xla\"};\n+    private static final String[] OFFICE_TYPES = {\"docx\", \"wps\", \"doc\", \"docm\", \"xls\", \"xlsx\", \"csv\" ,\"xlsm\", \"ppt\", \"pptx\", \"vsd\", \"rtf\", \"odt\", \"wmf\", \"emf\", \"dps\", \"et\", \"ods\", \"ots\", \"tsv\", \"odp\", \"otp\", \"sxi\", \"ott\", \"vsdx\", \"fodt\", \"fods\", \"xltx\",\"tga\",\"psd\",\"dotm\",\"ett\",\"xlt\",\"xltm\",\"wpt\",\"dot\",\"xlam\",\"dotx\",\"xla\",\"pages\"};\n     private static final String[] PICTURE_TYPES = {\"jpg\", \"jpeg\", \"png\", \"gif\", \"bmp\", \"ico\", \"jfif\", \"webp\"};\n     private static final String[] ARCHIVE_TYPES = {\"rar\", \"zip\", \"jar\", \"7-zip\", \"tar\", \"gzip\", \"7z\"};\n     private static final String[] Online3D_TYPES = {\"obj\", \"3ds\", \"stl\", \"ply\", \"off\", \"3dm\", \"fbx\", \"dae\", \"wrl\", \"3mf\", \"ifc\",\"glb\",\"o3dv\",\"gltf\",\"stp\",\"bim\",\"fcstd\",\"step\",\"iges\",\"brep\"};\n@@ -48,7 +48,7 @@ public enum FileType {\n     private static final String[] SVG_TYPES = {\"svg\"};\n     private static final String[] CAD_TYPES = {\"dwg\", \"dxf\", \"dwf\"};\n     private static final String[] SSIM_TEXT_TYPES = ConfigConstants.getSimText();\n-    private static final String[] CODES = {\"java\", \"c\", \"php\", \"go\", \"python\", \"py\", \"js\", \"html\", \"ftl\", \"css\", \"lua\", \"sh\", \"rb\", \"yaml\", \"yml\", \"json\", \"h\", \"cpp\", \"cs\", \"aspx\", \"jsp\"};\n+    private static final String[] CODES = {\"java\", \"c\", \"php\", \"go\", \"python\", \"py\", \"js\", \"html\", \"ftl\", \"css\", \"lua\", \"sh\", \"rb\", \"yaml\", \"yml\", \"json\", \"h\", \"cpp\", \"cs\", \"aspx\", \"jsp\", \"sql\"};\n     private static final String[] MEDIA_TYPES = ConfigConstants.getMedia();\n     public static final String[] MEDIA_TYPES_CONVERT = ConfigConstants.getConvertMedias();\n     private static final Map<String, FileType> FILE_TYPE_MAPPER = new HashMap<>();",
      "parent_sha": "a59abd179fe3f33547d64408a9555407d0a53d6a"
    }
  },
  {
    "oid": "da5dac73ab6c89778efb2732d7c6e2afb4c72b34",
    "message": "\u9a8c\u8bc1\u7801\u65b9\u6cd5 \u4ee3\u7801\u4f18\u5316",
    "date": "2023-07-22T00:53:50Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/da5dac73ab6c89778efb2732d7c6e2afb4c72b34",
    "details": {
      "sha": "84db4dc434196c872aaa899e443467432bcc0783",
      "filename": "server/src/main/java/cn/keking/utils/RandomValidateCodeUtil.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/da5dac73ab6c89778efb2732d7c6e2afb4c72b34/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FRandomValidateCodeUtil.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/da5dac73ab6c89778efb2732d7c6e2afb4c72b34/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FRandomValidateCodeUtil.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FRandomValidateCodeUtil.java?ref=da5dac73ab6c89778efb2732d7c6e2afb4c72b34",
      "patch": "@@ -63,13 +63,13 @@ public static Map<String,Object> generateCodeAndPic(String ip, String sessionCod\n             blue = random.nextInt(255);\n             // \u7528\u968f\u673a\u4ea7\u751f\u7684\u989c\u8272\u5c06\u9a8c\u8bc1\u7801\u7ed8\u5236\u5230\u56fe\u50cf\u4e2d\u3002\n             gd.setColor(new Color(red, green, blue));\n-            gd.drawString(sessionCode, xx, codeY);\n+            gd.drawString(sessionCode, 18, codeY);\n             randomCode.append(sessionCode);\n         }else {\n             // \u968f\u673a\u4ea7\u751fcodeCount\u6570\u5b57\u7684\u9a8c\u8bc1\u7801\u3002\n             for (int i = 0; i < codeCount; i++) {\n                 // \u5f97\u5230\u968f\u673a\u4ea7\u751f\u7684\u9a8c\u8bc1\u7801\u6570\u5b57\u3002\n-                String code = String.valueOf(codeSequence[random.nextInt(30)]);\n+                String code = String.valueOf(codeSequence[random.nextInt(52)]);\n                 // \u4ea7\u751f\u968f\u673a\u7684\u989c\u8272\u5206\u91cf\u6765\u6784\u9020\u989c\u8272\u503c\uff0c\u8fd9\u6837\u8f93\u51fa\u7684\u6bcf\u4f4d\u6570\u5b57\u7684\u989c\u8272\u503c\u90fd\u5c06\u4e0d\u540c\u3002\n                 red = random.nextInt(255);\n                 green = random.nextInt(255);",
      "parent_sha": "b5e711bf8766fba04df22437ee848bed0e6db755"
    }
  },
  {
    "oid": "2df88544d3e6d7a196827567b934c51d293f5c25",
    "message": "\u4fee\u590d\uff1amacOS\u4e0boffice\u7ec4\u4ef6\u9ed8\u8ba4\u8def\u5f84\u9519\u8bef",
    "date": "2019-09-10T10:24:06Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/2df88544d3e6d7a196827567b934c51d293f5c25",
    "details": {
      "sha": "f734707f86e70cd055236049f3427e987cf485ac",
      "filename": "jodconverter-core/src/main/java/org/artofsolving/jodconverter/office/OfficeUtils.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/2df88544d3e6d7a196827567b934c51d293f5c25/jodconverter-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fartofsolving%2Fjodconverter%2Foffice%2FOfficeUtils.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/2df88544d3e6d7a196827567b934c51d293f5c25/jodconverter-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fartofsolving%2Fjodconverter%2Foffice%2FOfficeUtils.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/jodconverter-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fartofsolving%2Fjodconverter%2Foffice%2FOfficeUtils.java?ref=2df88544d3e6d7a196827567b934c51d293f5c25",
      "patch": "@@ -116,7 +116,7 @@ private static File findOfficeHome(String... knownPaths) {\n \n     public static File getOfficeExecutable(File officeHome) {\n         if (PlatformUtils.isMac()) {\n-            return new File(officeHome, \"MacOS/soffice.bin\");\n+            return new File(officeHome, \"MacOS/soffice\");\n         } else {\n             return new File(officeHome, \"program/soffice.bin\");\n         }",
      "parent_sha": "6b744d77c7fb1eb64c18cccc7edb0298bc3746b3"
    }
  },
  {
    "oid": "0b8eedf935df2de063fe9cd4933a34a333f45f86",
    "message": "feat: add dxf file type in cad scope",
    "date": "2021-07-21T07:41:35Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/0b8eedf935df2de063fe9cd4933a34a333f45f86",
    "details": {
      "sha": "fbeea371d5e0a88ee6481407c09593ab6fecb369",
      "filename": "server/src/main/java/cn/keking/model/FileType.java",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/0b8eedf935df2de063fe9cd4933a34a333f45f86/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fmodel%2FFileType.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/0b8eedf935df2de063fe9cd4933a34a333f45f86/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fmodel%2FFileType.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fmodel%2FFileType.java?ref=0b8eedf935df2de063fe9cd4933a34a333f45f86",
      "patch": "@@ -32,6 +32,7 @@ public enum FileType {\n     private static final String[] ARCHIVE_TYPES = {\"rar\", \"zip\", \"jar\", \"7-zip\", \"tar\", \"gzip\", \"7z\"};\n     private static final String[] TIFF_TYPES = {\"tif\", \"tiff\"};\n     private static final String[] OFD_TYPES = {\"ofd\"};\n+    private static final String[] CAD_TYPES = {\"dwg\", \"dxf\"};\n     private static final String[] SSIM_TEXT_TYPES = ConfigConstants.getSimText();\n     private static final String[] CODES = {\"java\", \"c\", \"php\", \"go\", \"python\", \"py\", \"js\", \"html\", \"ftl\", \"css\", \"lua\", \"sh\", \"rb\", \"yaml\", \"yml\", \"json\", \"h\", \"cpp\", \"cs\", \"aspx\", \"jsp\"};\n     private static final String[] MEDIA_TYPES = ConfigConstants.getMedia();\n@@ -66,10 +67,12 @@ public enum FileType {\n         for (String ofd : OFD_TYPES) {\n             FILE_TYPE_MAPPER.put(ofd, FileType.OFD);\n         }\n+        for (String cad : CAD_TYPES) {\n+            FILE_TYPE_MAPPER.put(cad, FileType.CAD);\n+        }\n         FILE_TYPE_MAPPER.put(\"md\", FileType.MARKDOWN);\n         FILE_TYPE_MAPPER.put(\"xml\", FileType.XML);\n         FILE_TYPE_MAPPER.put(\"pdf\", FileType.PDF);\n-        FILE_TYPE_MAPPER.put(\"dwg\", FileType.CAD);\n         FILE_TYPE_MAPPER.put(\"flv\", FileType.FLV);\n     }\n ",
      "parent_sha": "807ada0bf9d31c5cbd2db5fb1b3279be81575850"
    }
  },
  {
    "oid": "4c225b030d0167a25206424338dd970ba5246946",
    "message": "\u4fee\u590d\u538b\u7f29\u6587\u4ef6\u4e2d\u6587\u4e71\u7801",
    "date": "2022-12-12T08:49:41Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/4c225b030d0167a25206424338dd970ba5246946",
    "details": {
      "sha": "0fb43f5aa2dd62b44af021aa7e518e3500bc4f3f",
      "filename": "server/src/main/java/cn/keking/service/CompressFileReader.java",
      "status": "modified",
      "additions": 98,
      "deletions": 54,
      "changes": 152,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/4c225b030d0167a25206424338dd970ba5246946/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FCompressFileReader.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/4c225b030d0167a25206424338dd970ba5246946/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FCompressFileReader.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FCompressFileReader.java?ref=4c225b030d0167a25206424338dd970ba5246946",
      "patch": "@@ -13,12 +13,12 @@\n import net.sf.sevenzipjbinding.*;\n import net.sf.sevenzipjbinding.impl.RandomAccessFileInStream;\n import net.sf.sevenzipjbinding.simple.ISimpleInArchive;\n-import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n-import org.apache.commons.compress.archivers.zip.ZipFile;\n import org.springframework.stereotype.Component;\n \n import java.io.*;\n import java.math.BigDecimal;\n+import java.nio.charset.Charset;\n+import java.nio.charset.StandardCharsets;\n import java.text.CollationKey;\n import java.text.Collator;\n import java.util.*;\n@@ -44,6 +44,94 @@ public CompressFileReader(FileHandlerService fileHandlerService) {\n         this.fileHandlerService = fileHandlerService;\n     }\n \n+    public static byte[] getUTF8BytesFromGBKString(String gbkStr) {\n+        int n = gbkStr.length();\n+        byte[] utfBytes = new byte[3 * n];\n+        int k = 0;\n+        for (int i = 0; i < n; i++) {\n+            int m = gbkStr.charAt(i);\n+            if (m < 128 && m >= 0) {\n+                utfBytes[k++] = (byte) m;\n+                continue;\n+            }\n+            utfBytes[k++] = (byte) (0xe0 | (m >> 12));\n+            utfBytes[k++] = (byte) (0x80 | ((m >> 6) & 0x3f));\n+            utfBytes[k++] = (byte) (0x80 | (m & 0x3f));\n+        }\n+        if (k < utfBytes.length) {\n+            byte[] tmp = new byte[k];\n+            System.arraycopy(utfBytes, 0, tmp, 0, k);\n+            return tmp;\n+        }\n+        return utfBytes;\n+    }\n+\n+    public String getUtf8String(String str) {\n+        if (str != null && str.length() > 0) {\n+            String needEncodeCode = \"ISO-8859-1\";\n+            String neeEncodeCode = \"ISO-8859-2\";\n+            String gbkEncodeCode = \"GBK\";\n+            try {\n+                if (Charset.forName(needEncodeCode).newEncoder().canEncode(str)) {\n+                    str = new String(str.getBytes(needEncodeCode), StandardCharsets.UTF_8);\n+                }\n+                if (Charset.forName(neeEncodeCode).newEncoder().canEncode(str)) {\n+                    str = new String(str.getBytes(neeEncodeCode), StandardCharsets.UTF_8);\n+                }\n+                if (Charset.forName(gbkEncodeCode).newEncoder().canEncode(str)) {\n+                    str = new String(getUTF8BytesFromGBKString(str), StandardCharsets.UTF_8);\n+                }\n+            } catch (UnsupportedEncodingException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+        return str;\n+    }\n+    /**\n+     * \u5224\u65ad\u662f\u5426\u662f\u4e2d\u65e5\u97e9\u6587\u5b57\n+     */\n+    private static boolean isChinese(char c) {\n+        Character.UnicodeBlock ub = Character.UnicodeBlock.of(c);\n+        if (ub == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS\n+                || ub == Character.UnicodeBlock.CJK_COMPATIBILITY_IDEOGRAPHS\n+                || ub == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A\n+                || ub == Character.UnicodeBlock.GENERAL_PUNCTUATION\n+                || ub == Character.UnicodeBlock.CJK_SYMBOLS_AND_PUNCTUATION\n+                || ub == Character.UnicodeBlock.HALFWIDTH_AND_FULLWIDTH_FORMS) {\n+            return true;\n+        }\n+        return false;\n+    }\n+    public static boolean judge(char c){\n+        if((c >='0' && c<='9')||(c >='a' && c<='z' ||  c >='A' && c<='Z')){\n+            return true;\n+        }\n+        return false;\n+    }\n+    public static boolean isMessyCode(String strName) {\n+        //\u53bb\u9664\u5b57\u7b26\u4e32\u4e2d\u7684\u7a7a\u683c \u5236\u8868\u7b26 \u6362\u884c \u56de\u8f66\n+        Pattern p = Pattern.compile(\"\\\\s*|\\t*|\\r*|\\n*\");\n+        Matcher m = p.matcher(strName);\n+        String after = m.replaceAll(\"\");\n+        //\u53bb\u9664\u5b57\u7b26\u4e32\u4e2d\u7684\u6807\u70b9\u7b26\u53f7\n+        String temp = after.replaceAll(\"\\\\p{P}\", \"\");\n+        //\u5904\u7406\u4e4b\u540e\u8f6c\u6362\u6210\u5b57\u7b26\u6570\u7ec4\n+        char[] ch = temp.trim().toCharArray();\n+        for (int i = 0; i < ch.length; i++) {\n+            char c = ch[i];\n+            //\u5224\u65ad\u662f\u5426\u662f\u6570\u5b57\u6216\u8005\u82f1\u6587\u5b57\u7b26\n+            if (!judge(c)) {\n+                //\u5224\u65ad\u662f\u5426\u662f\u4e2d\u65e5\u97e9\u6587\n+                if (!isChinese(c)) {\n+                    //\u5982\u679c\u4e0d\u662f\u6570\u5b57\u6216\u8005\u82f1\u6587\u5b57\u7b26\u4e5f\u4e0d\u662f\u4e2d\u65e5\u97e9\u6587\u5219\u8868\u793a\u662f\u4e71\u7801\u8fd4\u56detrue\n+                    return true;\n+                }\n+            }\n+        }\n+        //\u8868\u793a\u4e0d\u662f\u4e71\u7801 \u8fd4\u56defalse\n+        return false;\n+    }\n+\n     public String unRar(String filePath, String fileKey) {\n         Map<String, FileNode> appender = new HashMap<>();\n         List<String> imgUrls = new ArrayList<>();\n@@ -91,14 +179,17 @@ public List<FileHeaderRar> getRar4Paths(String paths) {\n             String extractPath = paths.substring(0, paths.lastIndexOf(folderName));\n             inArchive.extract(null, false, new ExtractCallback(inArchive, extractPath, folderName + \"_\"));\n             ISimpleInArchive simpleInArchive = inArchive.getSimpleInterface();\n-            itemPath =\n-                    Arrays.stream(simpleInArchive.getArchiveItems())\n-                            .map(\n-                                    o -> {\n+            itemPath = Arrays.stream(simpleInArchive.getArchiveItems()).map(o -> {\n                                         try {\n-                                            return new FileHeaderRar(o.getPath(), o.isFolder());\n+                                            String path = getUtf8String(o.getPath());\n+                                            if (isMessyCode(path)){\n+                                                path = new String(o.getPath().getBytes(StandardCharsets.ISO_8859_1), \"GBK\");\n+                                            }\n+                                            return new FileHeaderRar(path, o.isFolder());\n                                         } catch (SevenZipException e) {\n                                             e.printStackTrace();\n+                                        } catch (UnsupportedEncodingException e) {\n+                                            e.printStackTrace();\n                                         }\n                                         return null;\n                                     })\n@@ -127,7 +218,6 @@ public List<FileHeaderRar> getRar4Paths(String paths) {\n         return itemPath;\n     }\n \n-\n     private void addNodes(Map<String, FileNode> appender, String parentName, FileNode node) {\n         if (appender.containsKey(parentName)) {\n             appender.get(parentName).getChildList().add(node);\n@@ -278,51 +368,6 @@ public void setDirectory(boolean directory) {\n         }\n     }\n \n-    class ZipExtractorWorker implements Runnable {\n-\n-        private final List<Map<String, ZipArchiveEntry>> entriesToBeExtracted;\n-        private final ZipFile zipFile;\n-        private final String filePath;\n-\n-        public ZipExtractorWorker(List<Map<String, ZipArchiveEntry>> entriesToBeExtracted, ZipFile zipFile, String filePath) {\n-            this.entriesToBeExtracted = entriesToBeExtracted;\n-            this.zipFile = zipFile;\n-            this.filePath = filePath;\n-        }\n-\n-        @Override\n-        public void run() {\n-            for (Map<String, ZipArchiveEntry> entryMap : entriesToBeExtracted) {\n-                String childName = entryMap.keySet().iterator().next();\n-                ZipArchiveEntry entry = entryMap.values().iterator().next();\n-                try {\n-                    extractZipFile(childName, zipFile.getInputStream(entry));\n-                } catch (IOException e) {\n-                    e.printStackTrace();\n-                }\n-            }\n-            try {\n-                zipFile.close();\n-            } catch (IOException e) {\n-                e.printStackTrace();\n-            }\n-            KkFileUtils.deleteFileByPath(filePath);\n-        }\n-\n-        private void extractZipFile(String childName, InputStream zipFile) {\n-            String outPath = fileDir + childName;\n-            try (OutputStream ot = new FileOutputStream(outPath)) {\n-                byte[] inByte = new byte[1024];\n-                int len;\n-                while ((-1 != (len = zipFile.read(inByte)))) {\n-                    ot.write(inByte, 0, len);\n-                }\n-            } catch (IOException e) {\n-                e.printStackTrace();\n-            }\n-        }\n-    }\n-\n     class RarExtractorWorker implements Runnable {\n         private final List<Map<String, FileHeader>> headersToBeExtracted;\n \n@@ -441,6 +486,5 @@ public void prepareOperation(ExtractAskMode extractAskMode) {\n         @Override\n         public void setOperationResult(ExtractOperationResult extractOperationResult) {\n         }\n-\n     }\n }",
      "parent_sha": "9e5b9d48895cc34374ea18cff75357acca77b039"
    }
  },
  {
    "oid": "d95fbe02bda169430e81429ccbed3c6073241c9b",
    "message": "\u7b80\u5316\u4e0b\u8f7d\u6587\u4ef6 io \u64cd\u4f5c",
    "date": "2021-01-28T07:55:42Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/d95fbe02bda169430e81429ccbed3c6073241c9b",
    "details": {
      "sha": "05377fefa9e4cffa5e94eefcde42e38d185064fc",
      "filename": "server/src/main/java/cn/keking/utils/DownloadUtils.java",
      "status": "modified",
      "additions": 3,
      "deletions": 10,
      "changes": 13,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/d95fbe02bda169430e81429ccbed3c6073241c9b/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FDownloadUtils.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/d95fbe02bda169430e81429ccbed3c6073241c9b/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FDownloadUtils.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FDownloadUtils.java?ref=d95fbe02bda169430e81429ccbed3c6073241c9b",
      "patch": "@@ -4,6 +4,7 @@\n import cn.keking.model.FileAttribute;\n import cn.keking.model.ReturnResponse;\n import io.mola.galimatias.GalimatiasParseException;\n+import org.apache.commons.io.FileUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -37,16 +38,8 @@ public static ReturnResponse<String> downLoad(FileAttribute fileAttribute, Strin\n         try {\n             URL url = WebUtils.normalizedURL(urlStr);\n             if (isHttpUrl(url)) {\n-                URLConnection connection = url.openConnection();\n-                InputStream is = connection.getInputStream();\n-                FileOutputStream os = new FileOutputStream(realPath);\n-                byte[] buffer = new byte[4 * 1024];\n-                int read;\n-                while ((read = is.read(buffer)) > 0) {\n-                    os.write(buffer, 0, read);\n-                }\n-                os.close();\n-                is.close();\n+                File realFile = new File(realPath);\n+                FileUtils.copyURLToFile(url,realFile);\n             } else if (isFtpUrl(url)) {\n                 String ftpUsername = WebUtils.getUrlParameterReg(fileAttribute.getUrl(), URL_PARAM_FTP_USERNAME);\n                 String ftpPassword = WebUtils.getUrlParameterReg(fileAttribute.getUrl(), URL_PARAM_FTP_PASSWORD);",
      "parent_sha": "212526d9896fec6da8eba39846d1526bb5c104e3"
    }
  },
  {
    "oid": "ef5052e7ea67d0741e8a30e97046bbb7952c8e91",
    "message": "\u4fee\u590d\uff1ajodd.io.NetUtil.downloadFile\u4e0b\u8f7d\u5927\u4e8e16M\u6587\u4ef6\u62a5\u9519\u95ee\u9898",
    "date": "2021-01-28T07:42:05Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/ef5052e7ea67d0741e8a30e97046bbb7952c8e91",
    "details": {
      "sha": "feae7588a0976005bcb578e20c3840dffd988ed1",
      "filename": "server/src/main/java/cn/keking/utils/DownloadUtils.java",
      "status": "modified",
      "additions": 10,
      "deletions": 3,
      "changes": 13,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/ef5052e7ea67d0741e8a30e97046bbb7952c8e91/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FDownloadUtils.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/ef5052e7ea67d0741e8a30e97046bbb7952c8e91/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FDownloadUtils.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FDownloadUtils.java?ref=ef5052e7ea67d0741e8a30e97046bbb7952c8e91",
      "patch": "@@ -4,7 +4,6 @@\n import cn.keking.model.FileAttribute;\n import cn.keking.model.ReturnResponse;\n import io.mola.galimatias.GalimatiasParseException;\n-import jodd.io.NetUtil;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -38,8 +37,16 @@ public static ReturnResponse<String> downLoad(FileAttribute fileAttribute, Strin\n         try {\n             URL url = WebUtils.normalizedURL(urlStr);\n             if (isHttpUrl(url)) {\n-                File realFile = new File(realPath);\n-                NetUtil.downloadFile(url.toString(),realFile);\n+                URLConnection connection = url.openConnection();\n+                InputStream is = connection.getInputStream();\n+                FileOutputStream os = new FileOutputStream(realPath);\n+                byte[] buffer = new byte[4 * 1024];\n+                int read;\n+                while ((read = is.read(buffer)) > 0) {\n+                    os.write(buffer, 0, read);\n+                }\n+                os.close();\n+                is.close();\n             } else if (isFtpUrl(url)) {\n                 String ftpUsername = WebUtils.getUrlParameterReg(fileAttribute.getUrl(), URL_PARAM_FTP_USERNAME);\n                 String ftpPassword = WebUtils.getUrlParameterReg(fileAttribute.getUrl(), URL_PARAM_FTP_PASSWORD);",
      "parent_sha": "3531af4a46502f410235c11dc76368434c4bc504"
    }
  },
  {
    "oid": "181897ec5a0c5a1943e4f0c71c84e2d16c67f2b0",
    "message": "\u65b0\u589e\u5907\u6848\u4fe1\u606f,\u7981\u6b62\u4e0a\u4f20\u7c7b\u578b,\u5220\u9664\u652f\u6301\u5bc6\u7801\u529f\u80fd\n\u65b0\u589e\u5907\u6848\u4fe1\u606f,\u7981\u6b62\u4e0a\u4f20\u7c7b\u578b,\u5220\u9664\u652f\u6301\u5bc6\u7801\u529f\u80fd\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-04-10T09:32:51Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/181897ec5a0c5a1943e4f0c71c84e2d16c67f2b0",
    "details": {
      "sha": "d3cfcb83f25c6383dc8d273fe7dce70ef94f410b",
      "filename": "server/src/main/java/cn/keking/config/ConfigRefreshComponent.java",
      "status": "modified",
      "additions": 14,
      "deletions": 1,
      "changes": 15,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/181897ec5a0c5a1943e4f0c71c84e2d16c67f2b0/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fconfig%2FConfigRefreshComponent.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/181897ec5a0c5a1943e4f0c71c84e2d16c67f2b0/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fconfig%2FConfigRefreshComponent.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fconfig%2FConfigRefreshComponent.java?ref=181897ec5a0c5a1943e4f0c71c84e2d16c67f2b0",
      "patch": "@@ -53,7 +53,11 @@ public void run() {\n                 String pdfBookmarkDisable;\n                 boolean fileUploadDisable;\n                 String tifPreviewType;\n-\n+                String prohibit;\n+                String[] prohibitArray;\n+                String BeiAn;\n+                String size;\n+                String password;\n                 while (true) {\n                     FileReader fileReader = new FileReader(configFilePath);\n                     BufferedReader bufferedReader = new BufferedReader(fileReader);\n@@ -78,6 +82,11 @@ public void run() {\n                     pdfBookmarkDisable = properties.getProperty(\"pdf.bookmark.disable\", ConfigConstants.DEFAULT_PDF_BOOKMARK_DISABLE);\n                     fileUploadDisable = Boolean.parseBoolean(properties.getProperty(\"file.upload.disable\", ConfigConstants.DEFAULT_FILE_UPLOAD_DISABLE));\n                     tifPreviewType = properties.getProperty(\"tif.preview.type\", ConfigConstants.DEFAULT_TIF_PREVIEW_TYPE);\n+                    size = properties.getProperty(\"spring.servlet.multipart.max-file-size\", ConfigConstants.DEFAULT_size_DISABLE);\n+                    BeiAn = properties.getProperty(\"BeiAn\", ConfigConstants.DEFAULT_BeiAn_DISABLE);\n+                    prohibit = properties.getProperty(\"prohibit\", ConfigConstants.DEFAULT_prohibit_DISABLE);\n+                    password = properties.getProperty(\"sc.password\", ConfigConstants.DEFAULT_password_DISABLE);\n+                    prohibitArray = prohibit.split(\",\");\n \n                     ConfigConstants.setCacheEnabledValueValue(cacheEnabled);\n                     ConfigConstants.setSimTextValue(textArray);\n@@ -96,6 +105,10 @@ public void run() {\n                     ConfigConstants.setPdfBookmarkDisableValue(pdfBookmarkDisable);\n                     ConfigConstants.setFileUploadDisableValue(fileUploadDisable);\n                     ConfigConstants.setTifPreviewTypeValue(tifPreviewType);\n+                    ConfigConstants.setBeiAnValue(BeiAn);\n+                    ConfigConstants.setsizeValue(size);\n+                    ConfigConstants.setprohibitValue(prohibitArray);\n+                    ConfigConstants.setpasswordValue(password);\n                     setWatermarkConfig(properties);\n                     bufferedReader.close();\n                     fileReader.close();",
      "parent_sha": "e5e96116469dfa164d5ec189c0373037621dabe3"
    }
  },
  {
    "oid": "04401ee6002298fdf469d4320902ca560b95a49b",
    "message": "\u4fee\u590doffice\u6587\u4ef6\u5bc6\u7801\u5224\u65ad",
    "date": "2022-12-28T05:52:50Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/04401ee6002298fdf469d4320902ca560b95a49b",
    "details": {
      "sha": "fd05fe03a3e593fe75ea1e94dde3a44ade48f7e4",
      "filename": "server/src/main/java/cn/keking/utils/OfficeUtils.java",
      "status": "modified",
      "additions": 8,
      "deletions": 5,
      "changes": 13,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/04401ee6002298fdf469d4320902ca560b95a49b/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FOfficeUtils.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/04401ee6002298fdf469d4320902ca560b95a49b/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FOfficeUtils.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FOfficeUtils.java?ref=04401ee6002298fdf469d4320902ca560b95a49b",
      "patch": "@@ -1,6 +1,7 @@\n package cn.keking.utils;\n \n import org.apache.commons.lang3.exception.ExceptionUtils;\n+import org.apache.poi.EncryptedDocumentException;\n import org.apache.poi.extractor.ExtractorFactory;\n import org.apache.poi.hssf.record.crypto.Biff8EncryptionKey;\n import org.springframework.lang.Nullable;\n@@ -17,7 +18,7 @@\n  */\n public class OfficeUtils {\n \n-    private static final String POI_INVALID_PASSWORD_MSG = \"Invalid password specified\";\n+    private static final String POI_INVALID_PASSWORD_MSG = \"password\";\n \n     /**\n      * \u5224\u65adoffice\uff08word,excel,ppt\uff09\u6587\u4ef6\u662f\u5426\u53d7\u5bc6\u7801\u4fdd\u62a4\n@@ -28,15 +29,17 @@ public class OfficeUtils {\n     public static boolean isPwdProtected(String path) {\n         try {\n             ExtractorFactory.createExtractor(Files.newInputStream(Paths.get(path)));\n-        } catch (IOException e) {\n-            if (POI_INVALID_PASSWORD_MSG.equals(e.getMessage())) {\n+        } catch (IOException | EncryptedDocumentException e) {\n+            if (e.getMessage().toLowerCase().contains(POI_INVALID_PASSWORD_MSG)) {\n                 return true;\n             }\n         } catch (Exception e) {\n             Throwable[] throwableArray = ExceptionUtils.getThrowables(e);\n             for (Throwable throwable : throwableArray) {\n-                if (throwable instanceof IOException && POI_INVALID_PASSWORD_MSG.equals(throwable.getMessage())) {\n-                    return true;\n+                if (throwable instanceof IOException || throwable instanceof EncryptedDocumentException) {\n+                    if (e.getMessage().toLowerCase().contains(POI_INVALID_PASSWORD_MSG)) {\n+                        return true;\n+                    }\n                 }\n             }\n         }",
      "parent_sha": "e0cc2b6a01c97b68e3ca25398174b168b0e5766a"
    }
  },
  {
    "oid": "db3f03bda9a732a87a6b5db049bbe58c169f9fb0",
    "message": "\u4fee\u590d\u5728\u53cd\u4ee3\u60c5\u51b5\u4e0b \u538b\u7f29\u5305\u83b7\u53d6\u8def\u5f84\u7684\u9519\u8bef",
    "date": "2023-04-28T01:46:18Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/db3f03bda9a732a87a6b5db049bbe58c169f9fb0",
    "details": {
      "sha": "cb62d59e618263dbac6302e55601816c62e5776d",
      "filename": "server/src/main/java/cn/keking/utils/DownloadUtils.java",
      "status": "modified",
      "additions": 1,
      "deletions": 5,
      "changes": 6,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/db3f03bda9a732a87a6b5db049bbe58c169f9fb0/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FDownloadUtils.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/db3f03bda9a732a87a6b5db049bbe58c169f9fb0/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FDownloadUtils.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FDownloadUtils.java?ref=db3f03bda9a732a87a6b5db049bbe58c169f9fb0",
      "patch": "@@ -38,13 +38,9 @@ public class DownloadUtils {\n     public static ReturnResponse<String> downLoad(FileAttribute fileAttribute, String fileName) {\n         // \u5ffd\u7565ssl\u8bc1\u4e66\n         String urlStr = null;\n-        String urlStrr = null;\n-        URL urll;\n         try {\n             SslUtils.ignoreSsl();\n             urlStr = fileAttribute.getUrl().replaceAll(\"\\\\+\", \"%20\");\n-            urll = new URL(urlStr);\n-            urlStrr = URLDecoder.decode(urll.getPath(), \"UTF-8\");\n         } catch (Exception e) {\n             logger.error(\"\u5ffd\u7565SSL\u8bc1\u4e66\u5f02\u5e38:\", e);\n         }\n@@ -58,7 +54,7 @@ public static ReturnResponse<String> downLoad(FileAttribute fileAttribute, Strin\n         }\n         assert urlStr != null;\n         if (urlStr.contains(\"?fileKey=\")) {\n-            response.setContent(fileDir + urlStrr);\n+            response.setContent(fileDir + fileName);\n             response.setMsg(fileName);\n             return response;\n         }",
      "parent_sha": "a59abd179fe3f33547d64408a9555407d0a53d6a"
    }
  },
  {
    "oid": "281a9cfbab6b0707c2fcf24898c9a3b678510ba9",
    "message": "fix:issues/414 \u8bbe\u7f6econtextPath\u540e\u6f14\u793a\u5730\u5740\u672a\u53ca\u65f6\u66f4\u65b0 (#415)",
    "date": "2022-12-16T15:58:56Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/281a9cfbab6b0707c2fcf24898c9a3b678510ba9",
    "details": {
      "sha": "0e5b52988a1de4371a73bec6c6b81a0ddd3d6cbd",
      "filename": "server/src/main/java/cn/keking/ServerMain.java",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/281a9cfbab6b0707c2fcf24898c9a3b678510ba9/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2FServerMain.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/281a9cfbab6b0707c2fcf24898c9a3b678510ba9/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2FServerMain.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2FServerMain.java?ref=281a9cfbab6b0707c2fcf24898c9a3b678510ba9",
      "patch": "@@ -1,5 +1,6 @@\n package cn.keking;\n \n+import org.apache.commons.lang3.StringUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.boot.autoconfigure.SpringBootApplication;\n@@ -24,8 +25,12 @@ public static void main(String[] args) {\n                 .logStartupInfo(false)\n                 .run(args);\n         stopWatch.stop();\n-        Integer port = context.getBean(ServerProperties.class).getPort();\n-        logger.info(\"kkFileView \u670d\u52a1\u542f\u52a8\u5b8c\u6210\uff0c\u8017\u65f6:{}s\uff0c\u6f14\u793a\u9875\u8bf7\u8bbf\u95ee: http://127.0.0.1:{} \", stopWatch.getTotalTimeSeconds(), port);\n+        ServerProperties serverProperties = context.getBean(ServerProperties.class);\n+        Integer port = serverProperties.getPort();\n+        ServerProperties.Servlet servlet = serverProperties.getServlet();\n+        String contextPath = servlet.getContextPath();\n+        String urlSuffix = StringUtils.isBlank(contextPath)? String.valueOf(port):port+contextPath;\n+        logger.info(\"kkFileView \u670d\u52a1\u542f\u52a8\u5b8c\u6210\uff0c\u8017\u65f6:{}s\uff0c\u6f14\u793a\u9875\u8bf7\u8bbf\u95ee: http://127.0.0.1:{} \", stopWatch.getTotalTimeSeconds(), urlSuffix);\n     }\n \n }",
      "parent_sha": "8c6f5bf807b492c71e04ce10fac9fa7d93dc1895"
    }
  },
  {
    "oid": "eb372686e64d6b9abed3ee0bc8145827e02342e1",
    "message": "update server/src/main/java/cn/keking/model/FileType.java.\n\u65b0\u589edotx\u6587\u4ef6\u7c7b\u578b\u652f\u6301\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-03-11T01:07:24Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/eb372686e64d6b9abed3ee0bc8145827e02342e1",
    "details": {
      "sha": "648b52ac29d0a8faaf221bff74a690f8fe6820da",
      "filename": "server/src/main/java/cn/keking/model/FileType.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/eb372686e64d6b9abed3ee0bc8145827e02342e1/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fmodel%2FFileType.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/eb372686e64d6b9abed3ee0bc8145827e02342e1/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fmodel%2FFileType.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fmodel%2FFileType.java?ref=eb372686e64d6b9abed3ee0bc8145827e02342e1",
      "patch": "@@ -32,7 +32,7 @@ public enum FileType {\n     Epub(\"epubFilePreviewImpl\"),\n     BPMN(\"bpmnFilePreviewImpl\");\n \n-    private static final String[] OFFICE_TYPES = {\"docx\", \"wps\", \"doc\", \"docm\", \"xls\", \"xlsx\", \"csv\" ,\"xlsm\", \"ppt\", \"pptx\", \"vsd\", \"rtf\", \"odt\", \"wmf\", \"emf\", \"dps\", \"et\", \"ods\", \"ots\", \"tsv\", \"odp\", \"otp\", \"sxi\", \"ott\", \"vsdx\", \"fodt\", \"fods\", \"xltx\",\"tga\",\"psd\",\"dotm\",\"ett\",\"xlt\",\"xltm\",\"wpt\",\"dot\",\"xlam\",\"xla\"};\n+    private static final String[] OFFICE_TYPES = {\"docx\", \"wps\", \"doc\", \"docm\", \"xls\", \"xlsx\", \"csv\" ,\"xlsm\", \"ppt\", \"pptx\", \"vsd\", \"rtf\", \"odt\", \"wmf\", \"emf\", \"dps\", \"et\", \"ods\", \"ots\", \"tsv\", \"odp\", \"otp\", \"sxi\", \"ott\", \"vsdx\", \"fodt\", \"fods\", \"xltx\",\"tga\",\"psd\",\"dotm\",\"ett\",\"xlt\",\"xltm\",\"wpt\",\"dot\",\"xlam\",\"dotx\",\"xla\"};\n     private static final String[] PICTURE_TYPES = {\"jpg\", \"jpeg\", \"png\", \"gif\", \"bmp\", \"ico\", \"jfif\", \"webp\"};\n     private static final String[] ARCHIVE_TYPES = {\"rar\", \"zip\", \"jar\", \"7-zip\", \"tar\", \"gzip\", \"7z\"};\n     private static final String[] Online3D_TYPES = {\"obj\", \"3ds\", \"stl\", \"ply\", \"off\", \"3dm\", \"fbx\", \"dae\", \"wrl\", \"3mf\", \"ifc\",\"glb\",\"o3dv\",\"gltf\",\"stp\",\"bim\",\"fcstd\",\"step\",\"iges\",\"brep\"};",
      "parent_sha": "daf506e1bdc36bf4ee4fc4f9c1e6f464a323f416"
    }
  },
  {
    "oid": "5fe0dd3d29f1b6f6f52684b8f3234c49bea56f39",
    "message": "\u8c03\u6574 kk-proxy-authorization \u53c2\u6570\u4ece header \u5934\u91cc\u83b7\u53d6\uff0c\u589e\u5f3a\u8ba4\u8bc1\u53c2\u6570\u83b7\u53d6\u7684\u5b89\u5168\u6027",
    "date": "2023-09-20T13:23:31Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/5fe0dd3d29f1b6f6f52684b8f3234c49bea56f39",
    "details": {
      "sha": "28f495a9b054607e1c8c9f828d29e146ac83fdd8",
      "filename": "server/src/main/java/cn/keking/service/FileHandlerService.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/5fe0dd3d29f1b6f6f52684b8f3234c49bea56f39/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/5fe0dd3d29f1b6f6f52684b8f3234c49bea56f39/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java?ref=5fe0dd3d29f1b6f6f52684b8f3234c49bea56f39",
      "patch": "@@ -469,7 +469,7 @@ public FileAttribute getFileAttribute(String url, HttpServletRequest req) {\n             if (StringUtils.hasText(userToken)) {\n                 attribute.setUserToken(userToken);\n             }\n-            String kkProxyAuthorization = req.getParameter( \"kk-proxy-authorization\");\n+            String kkProxyAuthorization = req.getHeader( \"kk-proxy-authorization\");\n             attribute.setKkProxyAuthorization(kkProxyAuthorization);\n \n         }",
      "parent_sha": "713edcfb8d4b69f91e955d5a96af5c70c9ac2986"
    }
  },
  {
    "oid": "ccaba78e8d5782f35db546b4dc814bce839a7838",
    "message": "\u8de8\u57df\u65b9\u6cd5 \u652f\u6301\u91cd\u5b9a\u5411\n\u8de8\u57df\u65b9\u6cd5 \u652f\u6301\u91cd\u5b9a\u5411\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-07-28T06:42:13Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/ccaba78e8d5782f35db546b4dc814bce839a7838",
    "details": {
      "sha": "ca95d62a34c13171b6244f2dc0ec2a9f7a5ba829",
      "filename": "server/src/main/java/cn/keking/web/controller/OnlinePreviewController.java",
      "status": "modified",
      "additions": 33,
      "deletions": 4,
      "changes": 37,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/ccaba78e8d5782f35db546b4dc814bce839a7838/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FOnlinePreviewController.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/ccaba78e8d5782f35db546b4dc814bce839a7838/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FOnlinePreviewController.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FOnlinePreviewController.java?ref=ccaba78e8d5782f35db546b4dc814bce839a7838",
      "patch": "@@ -30,8 +30,11 @@\n import java.awt.image.RenderedImage;\n import java.io.IOException;\n import java.io.InputStream;\n+import java.io.UnsupportedEncodingException;\n import java.net.HttpURLConnection;\n import java.net.URL;\n+import java.net.URLDecoder;\n+import java.nio.charset.StandardCharsets;\n import java.text.SimpleDateFormat;\n import java.util.Arrays;\n import java.util.Date;\n@@ -63,6 +66,7 @@ public OnlinePreviewController(FilePreviewFactory filePreviewFactory, FileHandle\n \n     @GetMapping( \"/onlinePreview\")\n     public String onlinePreview(String url, Model model, HttpServletRequest req) {\n+  \n         String fileUrl;\n         try {\n             fileUrl = WebUtils.decodeUrl(url);\n@@ -121,6 +125,7 @@ public void getCorsFile(String urlPath, HttpServletResponse response) throws IOE\n         }\n         HttpURLConnection urlcon = null;\n         InputStream inputStream = null;\n+        String urlStr;\n         assert urlPath != null;\n         if (!urlPath.toLowerCase().startsWith(\"http\") && !urlPath.toLowerCase().startsWith(\"https\") && !urlPath.toLowerCase().startsWith(\"ftp\")) {\n             logger.info(\"\u8bfb\u53d6\u8de8\u57df\u6587\u4ef6\u5f02\u5e38\uff0c\u53ef\u80fd\u5b58\u5728\u975e\u6cd5\u8bbf\u95ee\uff0curlPath\uff1a{}\", urlPath);\n@@ -135,19 +140,43 @@ public void getCorsFile(String urlPath, HttpServletResponse response) throws IOE\n                 urlcon.setReadTimeout(30000);\n                 urlcon.setInstanceFollowRedirects(false);\n                 int responseCode = urlcon.getResponseCode();\n+                if ( responseCode == 403  || responseCode == 500) { //403  500\n+                    logger.error(\"\u8bfb\u53d6\u8de8\u57df\u6587\u4ef6\u5f02\u5e38\uff0curl\uff1a{}\uff0c\u9519\u8bef\uff1a{}\", urlPath,responseCode);\n+                    return ;\n+                }\n                 if (responseCode == HttpURLConnection.HTTP_MOVED_PERM || responseCode == HttpURLConnection.HTTP_MOVED_TEMP) { //301 302\n                     url =new URL(urlcon.getHeaderField(\"Location\"));\n                     urlcon=(HttpURLConnection)url.openConnection();\n+                } if (responseCode  == 404 ) {  //404\n+                    try {\n+                        urlStr = URLDecoder.decode(urlPath, StandardCharsets.UTF_8.name());\n+                        urlStr = URLDecoder.decode(urlStr, StandardCharsets.UTF_8.name());\n+                        url = WebUtils.normalizedURL(urlStr);\n+                        urlcon=(HttpURLConnection)url.openConnection();\n+                        urlcon.setConnectTimeout(30000);\n+                        urlcon.setReadTimeout(30000);\n+                        urlcon.setInstanceFollowRedirects(false);\n+                        responseCode = urlcon.getResponseCode();\n+                        if (responseCode == HttpURLConnection.HTTP_MOVED_PERM || responseCode == HttpURLConnection.HTTP_MOVED_TEMP) { //301 302\n+                            url =new URL(urlcon.getHeaderField(\"Location\"));\n+                        }\n+                        if(responseCode == 404 ||responseCode  == 403  || responseCode == 500 ){\n+                            logger.error(\"\u8bfb\u53d6\u8de8\u57df\u6587\u4ef6\u5f02\u5e38\uff0curl\uff1a{}\uff0c\u9519\u8bef\uff1a{}\", urlPath,responseCode);\n+                            return ;\n+                        }\n+                    } catch (UnsupportedEncodingException e) {\n+                        e.printStackTrace();\n+                    }finally {\n+                        assert urlcon != null;\n+                        urlcon.disconnect();\n+                    }\n                 }\n-                if (responseCode  == HttpURLConnection.HTTP_NOT_FOUND  ||responseCode  == HttpURLConnection.HTTP_FORBIDDEN  || responseCode == HttpURLConnection.HTTP_INTERNAL_ERROR ) { //403 404 500\n-                    logger.error(\"\u8bfb\u53d6\u8de8\u57df\u6587\u4ef6\u5f02\u5e38\uff0curl\uff1a{}\uff0c\u9519\u8bef\uff1a{}\", urlPath,responseCode);\n-                } else {\n                     if(urlPath.contains( \".svg\")) {\n                         response.setContentType(\"image/svg+xml\");\n                     }\n                     inputStream=(url).openStream();\n                     IOUtils.copy(inputStream, response.getOutputStream());\n-                }\n+\n             } catch (IOException | GalimatiasParseException e) {\n                 logger.error(\"\u8bfb\u53d6\u8de8\u57df\u6587\u4ef6\u5f02\u5e38\uff0curl\uff1a{}\", urlPath);\n             } finally {",
      "parent_sha": "3da330341ff41bb66603bcfc1b84d31fa8c381ca"
    }
  },
  {
    "oid": "1246a853b5ff99c6882caa5b43d34940774bfea1",
    "message": "\u4f18\u5316 pdf\u8f6c\u6362\u56fe\u7247 \u62a5\u9519\u4fe1\u606f",
    "date": "2023-07-24T02:18:09Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/1246a853b5ff99c6882caa5b43d34940774bfea1",
    "details": {
      "sha": "b10cd3c2ee68f3d541ae9b972f5f063cec57bd7a",
      "filename": "server/src/main/java/cn/keking/service/FileHandlerService.java",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/1246a853b5ff99c6882caa5b43d34940774bfea1/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/1246a853b5ff99c6882caa5b43d34940774bfea1/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java?ref=1246a853b5ff99c6882caa5b43d34940774bfea1",
      "patch": "@@ -28,6 +28,7 @@\n import org.springframework.beans.factory.annotation.Value;\n import org.springframework.stereotype.Component;\n import org.springframework.util.CollectionUtils;\n+import org.springframework.util.ObjectUtils;\n import org.springframework.util.StringUtils;\n \n import javax.servlet.http.HttpServletRequest;\n@@ -264,7 +265,11 @@ public List<String> pdf2jpg(String pdfFilePath, String pdfName, FileAttribute fi\n                 imageUrls.add(imageUrl);\n             }\n             try {\n-                pdfReader =  new PdfReader(pdfFilePath,filePassword.getBytes());   //\u8bfb\u53d6PDF\u6587\u4ef6\n+                if (ObjectUtils.isEmpty(filePassword)){\n+                    pdfReader =  new PdfReader(pdfFilePath);   //\u8bfb\u53d6PDF\u6587\u4ef6\n+                }else {\n+                    pdfReader =  new PdfReader(pdfFilePath,filePassword.getBytes());   //\u8bfb\u53d6PDF\u6587\u4ef6\n+                }\n             } catch (Exception e) {  //\u83b7\u53d6\u5f02\u5e38\u65b9\u6cd5 \u5224\u65ad\u662f\u5426\u6709\u52a0\u5bc6\u5b57\u7b26\u4e32\n                 Throwable[] throwableArray = ExceptionUtils.getThrowables(e);\n                 for (Throwable throwable : throwableArray) {",
      "parent_sha": "63824533271123fd1c8aec2661688611c810781a"
    }
  },
  {
    "oid": "9a4c864490926498e3cff5d4ec3bb08b985d70de",
    "message": "\u91cd\u547d\u540d env()",
    "date": "2021-08-24T05:56:07Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/9a4c864490926498e3cff5d4ec3bb08b985d70de",
    "details": {
      "sha": "f55543fb30fd59d16f921ee093a8fb497bb2668a",
      "filename": "office-plugin/src/main/java/org/artofsolving/jodconverter/util/ConfigUtils.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/9a4c864490926498e3cff5d4ec3bb08b985d70de/office-plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fartofsolving%2Fjodconverter%2Futil%2FConfigUtils.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/9a4c864490926498e3cff5d4ec3bb08b985d70de/office-plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fartofsolving%2Fjodconverter%2Futil%2FConfigUtils.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/office-plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fartofsolving%2Fjodconverter%2Futil%2FConfigUtils.java?ref=9a4c864490926498e3cff5d4ec3bb08b985d70de",
      "patch": "@@ -31,7 +31,7 @@ public static String getHomePath() {\n \n     // \u83b7\u53d6\u73af\u5883\u53d8\u91cf\uff0c\u5982\u679c\u627e\u4e0d\u5230\u5219\u8fd4\u56de\u9ed8\u8ba4\u503c\n     @SuppressWarnings(\"SameParameterValue\")\n-    private static String env(String key, String def) {\n+    private static String getEnvOrDefault(String key, String def) {\n         String value = System.getenv(key);\n         return value == null ? def : value;\n     }\n@@ -48,7 +48,7 @@ private static String firstExists(File... paths) {\n \n     public static String getOfficePluginPath() {\n         String userDir = System.getProperty(\"user.dir\");\n-        String binFolder = env(\"KKFILEVIEW_BIN_FOLDER\", userDir);\n+        String binFolder = getEnvOrDefault(\"KKFILEVIEW_BIN_FOLDER\", userDir);\n \n         File pluginPath = new File(binFolder);\n ",
      "parent_sha": "a3081ef4a9abee9682a17f1323f510acdc999084"
    }
  },
  {
    "oid": "81936ed811f28cf6250b4c2a87f24209705173f1",
    "message": "\u4fee\u590d\u83b7\u53d6baseUrl \u65b9\u6cd5\u7684\u9519\u8bef\n\u4fee\u590d\u83b7\u53d6baseUrl \u65b9\u6cd5\u7684\u9519\u8bef\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-04-25T02:59:41Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/81936ed811f28cf6250b4c2a87f24209705173f1",
    "details": {
      "sha": "b99b0808602a0cff2160592fbc87072caaae370b",
      "filename": "server/src/main/java/cn/keking/service/FileHandlerService.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/81936ed811f28cf6250b4c2a87f24209705173f1/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/81936ed811f28cf6250b4c2a87f24209705173f1/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java?ref=81936ed811f28cf6250b4c2a87f24209705173f1",
      "patch": "@@ -180,7 +180,7 @@ public void doActionConvertedFile(String outFilePath) {\n      * @return \u56fe\u7247\u8bbf\u95ee\u5730\u5740\n      */\n     private String getPdf2jpgUrl(String pdfName, int index) {\n-        String baseUrl = ConfigConstants.getBaseUrl();\n+        String baseUrl = BaseUrlFilter.getBaseUrl();\n         String pdfFolder = pdfName.substring(0, pdfName.length() - 4);\n         String urlPrefix;\n ",
      "parent_sha": "e3b9df09f4d0dbb895fc1b453b5954906421d3c1"
    }
  },
  {
    "oid": "c222755acc1bf5e39bb5f098adb942255868f2a8",
    "message": "fix FileHandlerService#pdf2jpg npe (github issue #455)",
    "date": "2023-05-12T15:14:11Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/c222755acc1bf5e39bb5f098adb942255868f2a8",
    "details": {
      "sha": "281b144016d69c85b90009062b8e07bded5b58e8",
      "filename": "server/src/main/java/cn/keking/service/FileHandlerService.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/c222755acc1bf5e39bb5f098adb942255868f2a8/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/c222755acc1bf5e39bb5f098adb942255868f2a8/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java?ref=c222755acc1bf5e39bb5f098adb942255868f2a8",
      "patch": "@@ -276,7 +276,7 @@ public List<String> pdf2jpg(String pdfFilePath, String pdfName, FileAttribute fi\n                 }\n             }\n             //\u5224\u65ad\u662f\u5426\u52a0\u5bc6\u6587\u4ef6 \u52a0\u5bc6\u6587\u4ef6\u4e0d\u7f13\u5b58\n-            if (PDF_PASSWORD_MSG.equals(pdfPassword)) {\n+            if (!PDF_PASSWORD_MSG.equals(pdfPassword)) {\n                 this.addPdf2jpgCache(pdfFilePath, pageCount);\n             }\n         } catch (IOException e) {",
      "parent_sha": "5dbc8a4980ed6659999e27cb30f19648db6e3099"
    }
  },
  {
    "oid": "1807dbd615bb439b13ec0a0166a0fe5106461c39",
    "message": "\u65b0\u589e \u652f\u6301\u538b\u7f29\u5305\u5bc6\u7801 \u4fee\u590dLINUX\u4e0b\u4e2d\u6587\u4e71\u7801 \u89e3\u538b\u652f\u6301\u6587\u4ef6\u76ee\u5f55\n\u65b0\u589e \u652f\u6301\u538b\u7f29\u5305\u5bc6\u7801 \u4fee\u590dLINUX\u4e0b\u4e2d\u6587\u4e71\u7801 \u89e3\u538b\u652f\u6301\u6587\u4ef6\u76ee\u5f55\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-04-03T07:07:30Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/1807dbd615bb439b13ec0a0166a0fe5106461c39",
    "details": {
      "sha": "f8578ead3cda6c8a456d0baa1a60a21342bbf35b",
      "filename": "server/src/main/java/cn/keking/service/CompressFileReader.java",
      "status": "modified",
      "additions": 82,
      "deletions": 357,
      "changes": 439,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/1807dbd615bb439b13ec0a0166a0fe5106461c39/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FCompressFileReader.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/1807dbd615bb439b13ec0a0166a0fe5106461c39/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FCompressFileReader.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FCompressFileReader.java?ref=1807dbd615bb439b13ec0a0166a0fe5106461c39",
      "patch": "@@ -1,49 +1,36 @@\n package cn.keking.service;\n-\n import cn.keking.config.ConfigConstants;\n import cn.keking.model.FileType;\n-import cn.keking.utils.FileHeaderRar;\n-import cn.keking.utils.KkFileUtils;\n import cn.keking.web.filter.BaseUrlFilter;\n-import com.fasterxml.jackson.core.JsonProcessingException;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import com.github.junrar.Archive;\n-import com.github.junrar.exception.RarException;\n-import com.github.junrar.rarfile.FileHeader;\n-import net.sf.sevenzipjbinding.*;\n+import net.sf.sevenzipjbinding.ExtractOperationResult;\n+import net.sf.sevenzipjbinding.IInArchive;\n+import net.sf.sevenzipjbinding.SevenZip;\n+import net.sf.sevenzipjbinding.SevenZipException;\n import net.sf.sevenzipjbinding.impl.RandomAccessFileInStream;\n import net.sf.sevenzipjbinding.simple.ISimpleInArchive;\n+import net.sf.sevenzipjbinding.simple.ISimpleInArchiveItem;\n+import org.apache.commons.io.IOUtils;\n import org.springframework.stereotype.Component;\n \n import java.io.*;\n-import java.math.BigDecimal;\n import java.nio.charset.Charset;\n import java.nio.charset.StandardCharsets;\n-import java.text.CollationKey;\n-import java.text.Collator;\n-import java.util.*;\n-import java.util.concurrent.ExecutorService;\n-import java.util.concurrent.Executors;\n+import java.util.ArrayList;\n+import java.util.List;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n-import java.util.stream.Collectors;\n \n /**\n  * @author yudian-it\n  * create 2017/11/27\n  */\n @Component\n public class CompressFileReader {\n-\n-    private static final Pattern pattern = Pattern.compile(\"^\\\\d+\");\n     private final FileHandlerService fileHandlerService;\n-    private final String fileDir = ConfigConstants.getFileDir();\n-    private final ExecutorService executors = Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors());\n-\n     public CompressFileReader(FileHandlerService fileHandlerService) {\n         this.fileHandlerService = fileHandlerService;\n     }\n-\n+    private static final String fileDir = ConfigConstants.getFileDir();\n     public static byte[] getUTF8BytesFromGBKString(String gbkStr) {\n         int n = gbkStr.length();\n         byte[] utfBytes = new byte[3 * n];\n@@ -92,21 +79,15 @@ public String getUtf8String(String str) {\n      */\n     private static boolean isChinese(char c) {\n         Character.UnicodeBlock ub = Character.UnicodeBlock.of(c);\n-        if (ub == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS\n+        return ub == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS\n                 || ub == Character.UnicodeBlock.CJK_COMPATIBILITY_IDEOGRAPHS\n                 || ub == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A\n                 || ub == Character.UnicodeBlock.GENERAL_PUNCTUATION\n                 || ub == Character.UnicodeBlock.CJK_SYMBOLS_AND_PUNCTUATION\n-                || ub == Character.UnicodeBlock.HALFWIDTH_AND_FULLWIDTH_FORMS) {\n-            return true;\n-        }\n-        return false;\n+                || ub == Character.UnicodeBlock.HALFWIDTH_AND_FULLWIDTH_FORMS;\n     }\n     public static boolean judge(char c){\n-        if((c >='0' && c<='9')||(c >='a' && c<='z' ||  c >='A' && c<='Z')){\n-            return true;\n-        }\n-        return false;\n+        return (c >= '0' && c <= '9') || (c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z');\n     }\n     public static boolean isMessyCode(String strName) {\n         //\u53bb\u9664\u5b57\u7b26\u4e32\u4e2d\u7684\u7a7a\u683c \u5236\u8868\u7b26 \u6362\u884c \u56de\u8f66\n@@ -117,8 +98,7 @@ public static boolean isMessyCode(String strName) {\n         String temp = after.replaceAll(\"\\\\p{P}\", \"\");\n         //\u5904\u7406\u4e4b\u540e\u8f6c\u6362\u6210\u5b57\u7b26\u6570\u7ec4\n         char[] ch = temp.trim().toCharArray();\n-        for (int i = 0; i < ch.length; i++) {\n-            char c = ch[i];\n+        for (char c : ch) {\n             //\u5224\u65ad\u662f\u5426\u662f\u6570\u5b57\u6216\u8005\u82f1\u6587\u5b57\u7b26\n             if (!judge(c)) {\n                 //\u5224\u65ad\u662f\u5426\u662f\u4e2d\u65e5\u97e9\u6587\n@@ -131,74 +111,61 @@ public static boolean isMessyCode(String strName) {\n         //\u8868\u793a\u4e0d\u662f\u4e71\u7801 \u8fd4\u56defalse\n         return false;\n     }\n-\n-    public String unRar(String filePath, String fileKey) {\n-        Map<String, FileNode> appender = new HashMap<>();\n+    public String unRar(String paths, String passWord, String fileName) {\n         List<String> imgUrls = new ArrayList<>();\n         String baseUrl = BaseUrlFilter.getBaseUrl();\n-        try {\n-            List<FileHeaderRar> items = getRar4Paths(filePath);\n-            String archiveFileName = fileHandlerService.getFileNameFromPath(filePath);\n-            List<Map<String, FileHeaderRar>> headersToBeExtract = new ArrayList<>();\n-            for (FileHeaderRar header : items) {\n-                String fullName = header.getFileNameW();\n-                String originName = getLastFileName(fullName);\n-                String childName = originName;\n-                boolean directory = header.getDirectory();\n-                if (!directory) {\n-                    childName = archiveFileName + \"_\" + originName;\n-                    headersToBeExtract.add(Collections.singletonMap(childName, header));\n-                }\n-                String parentName = getLast2FileName(fullName, archiveFileName);\n-                FileType type = FileType.typeFromUrl(childName);\n-                if (type.equals(FileType.PICTURE)) {\n-                    imgUrls.add(baseUrl + childName);\n-                }\n-                FileNode node =\n-                        new FileNode(originName, childName, parentName, new ArrayList<>(), directory, fileKey);\n-                addNodes(appender, parentName, node);\n-                appender.put(childName, node);\n-            }\n-            fileHandlerService.putImgCache(fileKey, imgUrls);\n-            executors.submit(new RarExtractorWorker(headersToBeExtract, filePath));\n-            return new ObjectMapper().writeValueAsString(appender.get(\"\"));\n-        } catch (IOException e) {\n-            e.printStackTrace();\n-        }\n-        return null;\n-    }\n-\n-    public List<FileHeaderRar> getRar4Paths(String paths) {\n+        String archiveFileName = fileHandlerService.getFileNameFromPath(paths);\n         RandomAccessFile randomAccessFile = null;\n         IInArchive inArchive = null;\n-        List<FileHeaderRar> itemPath = null;\n         try {\n             randomAccessFile = new RandomAccessFile(paths, \"r\");\n             inArchive = SevenZip.openInArchive(null, new RandomAccessFileInStream(randomAccessFile));\n             String folderName = paths.substring(paths.lastIndexOf(File.separator) + 1);\n             String extractPath = paths.substring(0, paths.lastIndexOf(folderName));\n-            inArchive.extract(null, false, new ExtractCallback(inArchive, extractPath, folderName + \"_\"));\n-            ISimpleInArchive simpleInArchive = inArchive.getSimpleInterface();\n-            itemPath = Arrays.stream(simpleInArchive.getArchiveItems()).map(o -> {\n-                                        try {\n-                                            String path = getUtf8String(o.getPath());\n-                                            if (isMessyCode(path)){\n-                                                path = new String(o.getPath().getBytes(StandardCharsets.ISO_8859_1), \"GBK\");\n-                                            }\n-                                            return new FileHeaderRar(path, o.isFolder());\n-                                        } catch (SevenZipException e) {\n-                                            e.printStackTrace();\n-                                        } catch (UnsupportedEncodingException e) {\n-                                            e.printStackTrace();\n-                                        }\n-                                        return null;\n-                                    })\n-                            .collect(Collectors.toList())\n-                            .stream()\n-                            .sorted(Comparator.comparing(FileHeaderRar::getFileNameW))\n-                            .collect(Collectors.toList());\n+            ISimpleInArchive   simpleInArchive = inArchive.getSimpleInterface();\n+            final String[] str = {null};\n+            for (final ISimpleInArchiveItem item : simpleInArchive.getArchiveItems()) {\n+                if (!item.isFolder()) {\n+                    ExtractOperationResult result;\n+                    result = item.extractSlow(data -> {\n+                        try {\n+                             str[0] = getUtf8String(item.getPath());\n+                            if (isMessyCode(str[0])){\n+                                str[0] = new String(item.getPath().getBytes(StandardCharsets.ISO_8859_1), \"gbk\");\n+                            }\n+                            str[0] = str[0].replace(\"\\\\\",  File.separator); //Linux \u4e0b\u8def\u5f84\u9519\u8bef\n+                            String  str1 = str[0].substring(0, str[0].lastIndexOf(File.separator)+ 1);\n+                            File file = new File(extractPath, folderName + \"_\" + File.separator + str1);\n+                            if (!file.exists()) {\n+                                file.mkdirs();\n+                            }\n+                            OutputStream out = new FileOutputStream( extractPath+ folderName + \"_\" + File.separator + str[0], true);\n+                            IOUtils.write(data, out);\n+                            out.close();\n+                        } catch (Exception e) {\n+                            e.printStackTrace();\n+                        }\n+                        return data.length;\n+                    }, passWord);\n+                    if (result == ExtractOperationResult.OK) {\n+                        FileType type = FileType.typeFromUrl(str[0]);\n+                        if (type.equals(FileType.PICTURE)) {\n+                          //  System.out.println( baseUrl +folderName + \"_\" + str[0]);\n+                            imgUrls.add(baseUrl +folderName + \"_/\" + str[0].replace(\"\\\\\", \"/\"));\n+                        }\n+                        fileHandlerService.putImgCache(fileName, imgUrls);\n+                    } else {\n+                        return \"error\";\n+                    }\n+                }\n+            }\n+            return archiveFileName + \"_\";\n         } catch (Exception e) {\n-            System.err.println(\"Error occurs: \" + e);\n+            String Str1 = String.valueOf(e);\n+            if (Str1.contains(\"Password\")) {\n+                return \"Password\";\n+            }\n+            return null;\n         } finally {\n             if (inArchive != null) {\n                 try {\n@@ -215,276 +182,34 @@ public List<FileHeaderRar> getRar4Paths(String paths) {\n                 }\n             }\n         }\n-        return itemPath;\n     }\n-\n-    private void addNodes(Map<String, FileNode> appender, String parentName, FileNode node) {\n-        if (appender.containsKey(parentName)) {\n-            appender.get(parentName).getChildList().add(node);\n-            appender.get(parentName).getChildList().sort(sortComparator);\n-        } else {\n-            // \u6839\u8282\u70b9\n-            FileNode nodeRoot = new FileNode(parentName, parentName, \"\", new ArrayList<>(), true);\n-            nodeRoot.getChildList().add(node);\n-            appender.put(\"\", nodeRoot);\n-            appender.put(parentName, nodeRoot);\n-        }\n-    }\n-\n-    private static String getLast2FileName(String fullName, String rootName) {\n-        if (fullName.endsWith(File.separator)) {\n-            fullName = fullName.substring(0, fullName.length() - 1);\n-        }\n-        // 1.\u83b7\u53d6\u5269\u4f59\u90e8\u5206\n-        int endIndex = fullName.lastIndexOf(File.separator);\n-        String leftPath = fullName.substring(0, endIndex == -1 ? 0 : endIndex);\n-        if (leftPath.length() > 1) {\n-            // 2.\u83b7\u53d6\u5012\u6570\u7b2c\u4e8c\u4e2a\n-            return getLastFileName(leftPath);\n-        } else {\n-            return rootName;\n-        }\n-    }\n-\n-    private static String getLastFileName(String fullName) {\n-        if (fullName.endsWith(File.separator)) {\n-            fullName = fullName.substring(0, fullName.length() - 1);\n-        }\n-        String newName = fullName;\n-        if (fullName.contains(File.separator)) {\n-            newName = fullName.substring(fullName.lastIndexOf(File.separator) + 1);\n-        }\n-        return newName;\n-    }\n-\n-    public static Comparator<FileNode> sortComparator = new Comparator<FileNode>() {\n-        final Collator cmp = Collator.getInstance(Locale.US);\n-\n-        @Override\n-        public int compare(FileNode o1, FileNode o2) {\n-            // \u5224\u65ad\u4e24\u4e2a\u5bf9\u6bd4\u5bf9\u8c61\u662f\u5426\u662f\u5f00\u5934\u5305\u542b\u6570\u5b57\uff0c\u5982\u679c\u5305\u542b\u6570\u5b57\u5219\u83b7\u53d6\u6570\u5b57\u5e76\u6309\u6570\u5b57\u771f\u6b63\u5927\u5c0f\u8fdb\u884c\u6392\u5e8f\n-            BigDecimal num1, num2;\n-            if (null != (num1 = isStartNumber(o1))\n-                    && null != (num2 = isStartNumber(o2))) {\n-                return num1.subtract(num2).intValue();\n-            }\n-            CollationKey c1 = cmp.getCollationKey(o1.getOriginName());\n-            CollationKey c2 = cmp.getCollationKey(o2.getOriginName());\n-            return cmp.compare(c1.getSourceString(), c2.getSourceString());\n-        }\n-    };\n-\n-    private static BigDecimal isStartNumber(FileNode src) {\n-        Matcher matcher = pattern.matcher(src.getOriginName());\n-        if (matcher.find()) {\n-            return new BigDecimal(matcher.group());\n-        }\n-        return null;\n-    }\n-\n-    public static class FileNode {\n-\n-        private String originName;\n-        private String fileName;\n-        private String parentFileName;\n-        private boolean directory;\n-        //\u7528\u4e8e\u56fe\u7247\u9884\u89c8\u65f6\u5bfb\u5740\n-        private String fileKey;\n-        private List<FileNode> childList;\n-\n-        public FileNode(String originName, String fileName, String parentFileName, List<FileNode> childList, boolean directory) {\n-            this.originName = originName;\n-            this.fileName = fileName;\n-            this.parentFileName = parentFileName;\n-            this.childList = childList;\n-            this.directory = directory;\n-        }\n-\n-        public FileNode(String originName, String fileName, String parentFileName, List<FileNode> childList, boolean directory, String fileKey) {\n-            this.originName = originName;\n-            this.fileName = fileName;\n-            this.parentFileName = parentFileName;\n-            this.childList = childList;\n-            this.directory = directory;\n-            this.fileKey = fileKey;\n-        }\n-\n-        public String getFileKey() {\n-            return fileKey;\n-        }\n-\n-        public void setFileKey(String fileKey) {\n-            this.fileKey = fileKey;\n-        }\n-\n-        public String getFileName() {\n-            return fileName;\n-        }\n-\n-        public void setFileName(String fileName) {\n-            this.fileName = fileName;\n-        }\n-\n-        public String getParentFileName() {\n-            return parentFileName;\n-        }\n-\n-        public void setParentFileName(String parentFileName) {\n-            this.parentFileName = parentFileName;\n-        }\n-\n-        public List<FileNode> getChildList() {\n-            return childList;\n-        }\n-\n-        public void setChildList(List<FileNode> childList) {\n-            this.childList = childList;\n-        }\n-\n-        @Override\n-        public String toString() {\n-            try {\n-                return new ObjectMapper().writeValueAsString(this);\n-            } catch (JsonProcessingException e) {\n-                e.printStackTrace();\n-                return \"\";\n-            }\n-        }\n-\n-        public String getOriginName() {\n-            return originName;\n-        }\n-\n-        public void setOriginName(String originName) {\n-            this.originName = originName;\n-        }\n-\n-        public boolean isDirectory() {\n-            return directory;\n-        }\n-\n-        public void setDirectory(boolean directory) {\n-            this.directory = directory;\n-        }\n+    /**\n+     * \u8bfb\u53d6\u6587\u4ef6\u76ee\u5f55\u6811\n+     */\n+    public static List<ZtreeNodeVo> getTree(String rootPath) {\n+        List<ZtreeNodeVo> nodes = new ArrayList<>();\n+        File file = new File(fileDir+rootPath);\n+        ZtreeNodeVo node = traverse(file);\n+        nodes.add(node);\n+        return nodes;\n     }\n-\n-    class RarExtractorWorker implements Runnable {\n-        private final List<Map<String, FileHeader>> headersToBeExtracted;\n-\n-        private final List<Map<String, FileHeaderRar>> headersToBeExtract;\n-\n-        private final Archive archive;\n-        /**\n-         * \u7528\u4ee5\u5220\u9664\u6e90\u6587\u4ef6\n-         */\n-        private final String filePath;\n-\n-        public RarExtractorWorker(\n-                List<Map<String, FileHeader>> headersToBeExtracted, Archive archive, String filePath) {\n-            this.headersToBeExtracted = headersToBeExtracted;\n-            this.archive = archive;\n-            this.filePath = filePath;\n-            headersToBeExtract = null;\n-        }\n-\n-        public RarExtractorWorker(\n-                List<Map<String, FileHeaderRar>> headersToBeExtract, String filePath) {\n-            this.headersToBeExtract = headersToBeExtract;\n-            this.filePath = filePath;\n-            archive = null;\n-            headersToBeExtracted = null;\n-        }\n-\n-        @Override\n-        public void run() {\n-            for (Map<String, FileHeader> entryMap : headersToBeExtracted) {\n-                String childName = entryMap.keySet().iterator().next();\n-                extractRarFile(childName, entryMap.values().iterator().next(), archive);\n-            }\n-            try {\n-                archive.close();\n-            } catch (IOException e) {\n-                e.printStackTrace();\n+    private static ZtreeNodeVo traverse(File file) {\n+        ZtreeNodeVo pathNodeVo = new ZtreeNodeVo();\n+        pathNodeVo.setId(file.getAbsolutePath().replace(fileDir, \"\").replace(\"\\\\\", \"/\"));\n+        pathNodeVo.setName(file.getName());\n+        pathNodeVo.setPid(file.getParent().replace(fileDir, \"\").replace(\"\\\\\", \"/\"));\n+        if (file.isDirectory()) {\n+            List<ZtreeNodeVo> subNodeVos = new ArrayList<>();\n+            File[] subFiles = file.listFiles();\n+            if (subFiles == null) {\n+                return pathNodeVo;\n             }\n-            KkFileUtils.deleteFileByPath(filePath);\n-        }\n-\n-        private void extractRarFile(String childName, FileHeader header, Archive archive) {\n-            String outPath = fileDir + childName;\n-            try (OutputStream ot = new FileOutputStream(outPath)) {\n-                archive.extractFile(header, ot);\n-            } catch (IOException | RarException e) {\n-                e.printStackTrace();\n+            for (File subFile : subFiles) {\n+                ZtreeNodeVo subNodeVo = traverse(subFile);\n+                subNodeVos.add(subNodeVo);\n             }\n+            pathNodeVo.setChildren(subNodeVos);\n         }\n-    }\n-\n-    private static class ExtractCallback implements IArchiveExtractCallback {\n-        private final IInArchive inArchive;\n-\n-        private final String extractPath;\n-        private final String folderName;\n-\n-        public ExtractCallback(IInArchive inArchive, String extractPath, String folderName) {\n-            this.inArchive = inArchive;\n-            if (!extractPath.endsWith(\"/\") && !extractPath.endsWith(\"\\\\\")) {\n-                extractPath += File.separator;\n-            }\n-            this.extractPath = extractPath;\n-            this.folderName = folderName;\n-        }\n-\n-        @Override\n-        public void setTotal(long total) {\n-\n-        }\n-\n-        @Override\n-        public void setCompleted(long complete) {\n-\n-        }\n-\n-        @Override\n-        public ISequentialOutStream getStream(int index, ExtractAskMode extractAskMode) throws SevenZipException {\n-            String filePath = inArchive.getStringProperty(index, PropID.PATH);\n-            String real = folderName + filePath.substring(filePath.lastIndexOf(File.separator) + 1);\n-            File f = new File(extractPath + real);\n-            f.delete();\n-            return data -> {\n-                FileOutputStream fos = null;\n-                try {\n-                    File path = new File(extractPath + real);\n-                    if (!path.getParentFile().exists()) {\n-                        path.getParentFile().mkdirs();\n-                    }\n-                    if (!path.exists()) {\n-                        path.createNewFile();\n-                    }\n-                    fos = new FileOutputStream(path, true);\n-                    fos.write(data);\n-                } catch (IOException e) {\n-                    e.printStackTrace();\n-                } finally {\n-                    try {\n-                        if (fos != null) {\n-                            fos.flush();\n-                            fos.close();\n-                        }\n-                    } catch (IOException e) {\n-                        e.printStackTrace();\n-                    }\n-                }\n-                return data.length;\n-            };\n-        }\n-\n-        @Override\n-        public void prepareOperation(ExtractAskMode extractAskMode) {\n-\n-        }\n-\n-        @Override\n-        public void setOperationResult(ExtractOperationResult extractOperationResult) {\n-        }\n+        return pathNodeVo;\n     }\n }",
      "parent_sha": "1e771ed64932f312b1285dd1bc55b630246f7bd5"
    }
  },
  {
    "oid": "c78bf0605d2f8dd45ce74d1a32149e3339108fdc",
    "message": "\u5b8c\u5584\u591a\u56fe\u7247\u8f6e\u64ad\u9884\u89c8\u63a5\u53e3\u903b\u8f91",
    "date": "2018-03-08T01:51:47Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/c78bf0605d2f8dd45ce74d1a32149e3339108fdc",
    "details": {
      "sha": "a37d981cfdc2894b6a2b2b3931d88ff7cb0b3a0d",
      "filename": "jodconverter-web/src/main/java/cn/keking/web/controller/OnlinePreviewController.java",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/c78bf0605d2f8dd45ce74d1a32149e3339108fdc/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FOnlinePreviewController.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/c78bf0605d2f8dd45ce74d1a32149e3339108fdc/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FOnlinePreviewController.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FOnlinePreviewController.java?ref=c78bf0605d2f8dd45ce74d1a32149e3339108fdc",
      "patch": "@@ -61,13 +61,15 @@ public String onlinePreview(String url, Model model, HttpServletRequest req) {\n      * @throws UnsupportedEncodingException\n      */\n     @RequestMapping(value = \"picturesPreview\", method = RequestMethod.GET)\n-    public String picturesPreview(String urls, Model model, HttpServletRequest req) throws UnsupportedEncodingException {\n+    public String picturesPreview(String urls, String currentUrl, Model model, HttpServletRequest req) throws UnsupportedEncodingException {\n         // \u8def\u5f84\u8f6c\u7801\n         String decodedUrl = URLDecoder.decode(urls, \"utf-8\");\n+        String decodedCurrentUrl = URLDecoder.decode(currentUrl, \"utf-8\");\n         // \u62bd\u53d6\u6587\u4ef6\u5e76\u8fd4\u56de\u6587\u4ef6\u5217\u8868\n-        String[] imgs = decodedUrl.split(\"|\");\n+        String[] imgs = decodedUrl.split(\"\\\\|\");\n         List imgurls = Arrays.asList(imgs);\n         model.addAttribute(\"imgurls\", imgurls);\n+        model.addAttribute(\"currentUrl\",decodedCurrentUrl);\n         return \"picture\";\n     }\n ",
      "parent_sha": "e8f0efe1ec786e43fb5dd49b8ac85a8c0a48de16"
    }
  },
  {
    "oid": "6d0846a55124034a74163da270dbdf33df4b0f5c",
    "message": "\u4fee\u590drocksdb\u7f13\u5b58\u53ea\u7f13\u5b58\u4e00\u6761\u6570\u636e\u95ee\u9898",
    "date": "2019-05-23T01:53:37Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/6d0846a55124034a74163da270dbdf33df4b0f5c",
    "details": {
      "sha": "07d86da8d12743319ec8bcabc3cd79cc0445350e",
      "filename": "jodconverter-web/src/main/java/cn/keking/service/cache/impl/CacheServiceRocksDBImpl.java",
      "status": "modified",
      "additions": 13,
      "deletions": 3,
      "changes": 16,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/6d0846a55124034a74163da270dbdf33df4b0f5c/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fcache%2Fimpl%2FCacheServiceRocksDBImpl.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/6d0846a55124034a74163da270dbdf33df4b0f5c/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fcache%2Fimpl%2FCacheServiceRocksDBImpl.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fcache%2Fimpl%2FCacheServiceRocksDBImpl.java?ref=6d0846a55124034a74163da270dbdf33df4b0f5c",
      "patch": "@@ -79,7 +79,7 @@ public void initPdfImagesCachePool(Integer capacity) {\n     @Override\n     public void putPDFCache(String key, String value) {\n         try {\n-            Map<String, String> pdfCacheItem = new HashMap<>();\n+            Map<String, String> pdfCacheItem = getPDFCache();\n             pdfCacheItem.put(key, value);\n             db.put(REDIS_FILE_PREVIEW_PDF_KEY.getBytes(), toByteArray(pdfCacheItem));\n         } catch (RocksDBException | IOException e) {\n@@ -90,7 +90,7 @@ public void putPDFCache(String key, String value) {\n     @Override\n     public void putImgCache(String key, List<String> value) {\n         try {\n-            Map<String, List<String>> imgCacheItem = new HashMap<>();\n+            Map<String, List<String>> imgCacheItem = getImgCache();\n             imgCacheItem.put(key, value);\n             db.put(REDIS_FILE_PREVIEW_PDF_KEY.getBytes(), toByteArray(imgCacheItem));\n         } catch (RocksDBException | IOException e) {\n@@ -145,6 +145,16 @@ public List<String> getImgCache(String key) {\n         return result;\n     }\n \n+    public Map<String, Integer> getPdfImageCaches() {\n+        Map<String, Integer> map = new HashMap<>();\n+        try{\n+            map = (Map<String, Integer>) toObject(db.get(REDIS_FILE_PREVIEW_PDF_IMGS_KEY.getBytes()));\n+        } catch (RocksDBException | IOException | ClassNotFoundException e) {\n+            LOGGER.error(\"Get from RocksDB Exception\" + e);\n+        }\n+        return map;\n+    }\n+\n     @Override\n     public Integer getPdfImageCache(String key) {\n         Integer result = 0;\n@@ -161,7 +171,7 @@ public Integer getPdfImageCache(String key) {\n     @Override\n     public void putPdfImageCache(String pdfFilePath, int num) {\n         try {\n-            Map<String, Integer> pdfImageCacheItem = new HashMap<>();\n+            Map<String, Integer> pdfImageCacheItem = getPdfImageCaches();\n             pdfImageCacheItem.put(pdfFilePath, num);\n             db.put(REDIS_FILE_PREVIEW_PDF_IMGS_KEY.getBytes(), toByteArray(pdfImageCacheItem));\n         } catch (RocksDBException | IOException e) {",
      "parent_sha": "41d90150236fc377837bd6ac7ffad68a15b96d6d"
    }
  },
  {
    "oid": "f05fea51a9e7edf2ff342869995b9cfd53da2439",
    "message": "\u6587\u672c\u6587\u4ef6\u7f16\u7801\u63a2\u6d4b,\u4fee\u6539\n\u63a2\u6d4b\u4e0d\u5230\u7f16\u7801\u4e0d\u505a\u5904\u7406\n\u6587\u4ef6\u5185\u5bb9\u8f83\u5c11\u65f6,\u4e00\u822c\u90fd\u4e0d\u51c6\u786e",
    "date": "2017-12-26T01:03:30Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/f05fea51a9e7edf2ff342869995b9cfd53da2439",
    "details": {
      "sha": "c109d8f91b3fc711f4953eef12b4cddc549693ed",
      "filename": "jodconverter-web/src/main/java/com/yudianbank/utils/DownloadUtils.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/f05fea51a9e7edf2ff342869995b9cfd53da2439/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcom%2Fyudianbank%2Futils%2FDownloadUtils.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/f05fea51a9e7edf2ff342869995b9cfd53da2439/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcom%2Fyudianbank%2Futils%2FDownloadUtils.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcom%2Fyudianbank%2Futils%2FDownloadUtils.java?ref=f05fea51a9e7edf2ff342869995b9cfd53da2439",
      "patch": "@@ -169,7 +169,9 @@ private static void convertTextPlainFileCharsetToUtf8(String filePath) throws IO\n       String encoding = null;\n       try {\n         FileCharsetDetector.Observer observer = FileCharsetDetector.guessFileEncoding(sourceFile);\n-        encoding = observer.getEncoding();\n+        // \u4e3a\u51c6\u786e\u63a2\u6d4b\u5230\u7f16\u7801,\u4e0d\u9002\u7528\u731c\u6d4b\u7684\u7f16\u7801\n+        encoding = observer.isFound()?observer.getEncoding():null;\n+        // \u4e3a\u51c6\u786e\u63a2\u6d4b\u5230\u7f16\u7801,\u53ef\u4ee5\u8003\u8651\u4f7f\u7528GBK  \u5927\u90e8\u5206\u6587\u4ef6\u90fd\u662fwindows\u7cfb\u7edf\u4ea7\u751f\u7684\n       } catch (IOException e) {\n         // \u7f16\u7801\u63a2\u6d4b\u5931\u8d25,\n         e.printStackTrace();",
      "parent_sha": "fdf66b60ec37f2048f5b8167d74a5a819d43ab00"
    }
  },
  {
    "oid": "94503ddc3958a8f437145a5dec509cea2905567c",
    "message": "update server/src/main/java/cn/keking/service/FileHandlerService.java.\n\u4fee\u590dxlsx7.4\u4ee5\u4e0a\u7248\u672c \u4e71\u7801\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-03-15T02:34:52Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/94503ddc3958a8f437145a5dec509cea2905567c",
    "details": {
      "sha": "2702a04ff963a8f729a449d4e1f170df0aa20af1",
      "filename": "server/src/main/java/cn/keking/service/FileHandlerService.java",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/94503ddc3958a8f437145a5dec509cea2905567c/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/94503ddc3958a8f437145a5dec509cea2905567c/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java?ref=94503ddc3958a8f437145a5dec509cea2905567c",
      "patch": "@@ -41,8 +41,6 @@\n public class FileHandlerService {\n \n     private final Logger logger = LoggerFactory.getLogger(FileHandlerService.class);\n-\n-    private static final String DEFAULT_CONVERTER_CHARSET = System.getProperty(\"sun.jnu.encoding\");\n     private final String fileDir = ConfigConstants.getFileDir();\n     private final CacheService cacheService;\n \n@@ -142,9 +140,10 @@ public void putImgCache(String fileKey, List<String> imgs) {\n      * @param outFilePath \u6587\u4ef6\u7edd\u5bf9\u8def\u5f84\n      */\n     public void doActionConvertedFile(String outFilePath) {\n+         String charset = EncodingDetects.getJavaEncode(outFilePath);\n         StringBuilder sb = new StringBuilder();\n         try (InputStream inputStream = new FileInputStream(outFilePath);\n-             BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream, DEFAULT_CONVERTER_CHARSET))) {\n+             BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream, charset))) {\n             String line;\n             while (null != (line = reader.readLine())) {\n                 if (line.contains(\"charset=gb2312\")) {",
      "parent_sha": "99bdeef754d80e49af0a6aab34fa5d2b1e4c439d"
    }
  },
  {
    "oid": "336a18ade7ba432dbae4dfaca7b137ab2d72b977",
    "message": "office\u9884\u89c8\u53ea\u6709PDF\u8f6c\u56fe\u7247",
    "date": "2019-04-26T07:35:43Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/336a18ade7ba432dbae4dfaca7b137ab2d72b977",
    "details": {
      "sha": "c9a48624cb6d891f9d06a867f424409ce27484db",
      "filename": "jodconverter-web/src/main/java/cn/keking/service/impl/OfficeFilePreviewImpl.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/336a18ade7ba432dbae4dfaca7b137ab2d72b977/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FOfficeFilePreviewImpl.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/336a18ade7ba432dbae4dfaca7b137ab2d72b977/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FOfficeFilePreviewImpl.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FOfficeFilePreviewImpl.java?ref=336a18ade7ba432dbae4dfaca7b137ab2d72b977",
      "patch": "@@ -79,7 +79,7 @@ public String filePreviewHandle(String url, Model model) {\n                 fileUtils.addConvertedFile(pdfName, fileUtils.getRelativePath(outFilePath));\n             }\n         }\n-        if (OFFICE_PREVIEW_TYPE_IMAGE.equals(officePreviewType) || OFFICE_PREVIEW_TYPE_ALLIMAGES.equals(officePreviewType)) {\n+        if (!isHtml && (OFFICE_PREVIEW_TYPE_IMAGE.equals(officePreviewType) || OFFICE_PREVIEW_TYPE_ALLIMAGES.equals(officePreviewType))) {\n             List<String> imageUrls = pdfUtils.pdf2jpg(outFilePath, pdfName, url);\n             if (imageUrls == null || imageUrls.size() < 1) {\n                 model.addAttribute(\"msg\", \"office\u8f6c\u56fe\u7247\u5f02\u5e38\uff0c\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458\");",
      "parent_sha": "53814fe6ab647b84dd53c71fcbb1d85350f07688"
    }
  },
  {
    "oid": "1dd59cf764d6426c7c46518658b03dde0489438b",
    "message": "\u66f4\u65b0\u8de8\u57df\u6587\u4ef6\u4e0b\u8f7d\u65b9\u6cd5",
    "date": "2022-12-13T09:04:34Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/1dd59cf764d6426c7c46518658b03dde0489438b",
    "details": {
      "sha": "4e65534696859a809988dabdd23a154f568840c1",
      "filename": "server/src/main/java/cn/keking/web/controller/OnlinePreviewController.java",
      "status": "modified",
      "additions": 52,
      "deletions": 11,
      "changes": 63,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/1dd59cf764d6426c7c46518658b03dde0489438b/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FOnlinePreviewController.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/1dd59cf764d6426c7c46518658b03dde0489438b/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FOnlinePreviewController.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FOnlinePreviewController.java?ref=1dd59cf764d6426c7c46518658b03dde0489438b",
      "patch": "@@ -9,7 +9,6 @@\n import cn.keking.utils.WebUtils;\n import fr.opensagres.xdocreport.core.io.IOUtils;\n import io.mola.galimatias.GalimatiasParseException;\n-import jodd.io.NetUtil;\n import org.apache.commons.codec.binary.Base64;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -23,9 +22,10 @@\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import java.io.IOException;\n+import java.io.InputStream;\n import java.io.UnsupportedEncodingException;\n+import java.net.HttpURLConnection;\n import java.net.URL;\n-import java.nio.charset.StandardCharsets;\n import java.util.Arrays;\n import java.util.List;\n \n@@ -71,6 +71,10 @@ public String onlinePreview(String url, Model model, HttpServletRequest req) {\n     @GetMapping( \"/picturesPreview\")\n     public String picturesPreview(String urls, Model model, HttpServletRequest req) throws UnsupportedEncodingException {\n         String fileUrls;\n+        if (urls == null || urls.length() == 0){\n+            logger.info(\"URL\u5f02\u5e38\uff1a{}\", urls);\n+            return otherFilePreview.notSupportedFile(model, \"NULL\u5730\u5740\u4e0d\u5141\u8bb8\u9884\u89c8\uff1a\");\n+        }\n         try {\n             fileUrls = WebUtils.decodeUrl(urls);\n             // \u9632\u6b62XSS\u653b\u51fb\n@@ -109,18 +113,56 @@ public void getCorsFile(String urlPath, HttpServletResponse response) {\n             logger.error(String.format(BASE64_DECODE_ERROR_MSG, urlPath),ex);\n             return;\n         }\n-        if (urlPath.toLowerCase().startsWith(\"file:\") || urlPath.toLowerCase().startsWith(\"file%3\")\n-            || !urlPath.toLowerCase().startsWith(\"http\")) {\n+        HttpURLConnection urlcon;\n+        InputStream inputStream = null;\n+        if (urlPath.toLowerCase().startsWith(\"file:\") || urlPath.toLowerCase().startsWith(\"file%3\")) {\n             logger.info(\"\u8bfb\u53d6\u8de8\u57df\u6587\u4ef6\u5f02\u5e38\uff0c\u53ef\u80fd\u5b58\u5728\u975e\u6cd5\u8bbf\u95ee\uff0curlPath\uff1a{}\", urlPath);\n             return;\n         }\n         logger.info(\"\u4e0b\u8f7d\u8de8\u57dfpdf\u6587\u4ef6url\uff1a{}\", urlPath);\n-        try {\n-            URL url = WebUtils.normalizedURL(urlPath);\n-            byte[] bytes = NetUtil.downloadBytes(url.toString());\n-            IOUtils.write(bytes, response.getOutputStream());\n-        } catch (IOException | GalimatiasParseException e) {\n-            logger.error(\"\u4e0b\u8f7d\u8de8\u57dfpdf\u6587\u4ef6\u5f02\u5e38\uff0curl\uff1a{}\", urlPath, e);\n+        if (!urlPath.toLowerCase().startsWith(\"ftp:\")){\n+            try {\n+                URL url = WebUtils.normalizedURL(urlPath);\n+                urlcon=(HttpURLConnection)url.openConnection();\n+                urlcon.setConnectTimeout(30000);\n+                urlcon.setReadTimeout(30000);\n+                urlcon.setInstanceFollowRedirects(false);\n+                if (urlcon.getResponseCode() == 302 || urlcon.getResponseCode() == 301) {\n+                    urlcon.disconnect();\n+                    url =new URL(urlcon.getHeaderField(\"Location\"));\n+                    urlcon=(HttpURLConnection)url.openConnection();\n+                }\n+                if (urlcon.getResponseCode() == 404 || urlcon.getResponseCode() == 403 || urlcon.getResponseCode() == 500 ) {\n+                    logger.error(\"\u8bfb\u53d6\u8de8\u57df\u6587\u4ef6\u5f02\u5e38\uff0curl\uff1a{}\", urlPath);\n+                    return ;\n+                } else {\n+                    if(urlPath.contains( \".svg\")) {\n+                        response.setContentType(\"image/svg+xml\");\n+                    }\n+                    inputStream=(url).openStream();\n+                    IOUtils.copy(inputStream, response.getOutputStream());\n+                    urlcon.disconnect();\n+                }\n+            } catch (IOException | GalimatiasParseException e) {\n+                logger.error(\"\u8bfb\u53d6\u8de8\u57df\u6587\u4ef6\u5f02\u5e38\uff0curl\uff1a{}\", urlPath);\n+                return ;\n+            } finally {\n+                IOUtils.closeQuietly(inputStream);\n+            }\n+        } else {\n+            try {\n+                URL url = WebUtils.normalizedURL(urlPath);\n+                if(urlPath.contains(\".svg\")) {\n+                    response.setContentType(\"image/svg+xml\");\n+                }\n+                inputStream = (url).openStream();\n+                IOUtils.copy(inputStream, response.getOutputStream());\n+            } catch (IOException | GalimatiasParseException e) {\n+                logger.error(\"\u8bfb\u53d6\u8de8\u57df\u6587\u4ef6\u5f02\u5e38\uff0curl\uff1a{}\", urlPath);\n+                return ;\n+            } finally {\n+                IOUtils.closeQuietly(inputStream);\n+            }\n         }\n     }\n \n@@ -136,5 +178,4 @@ public String addQueueTask(String url) {\n         cacheService.addQueueTask(url);\n         return \"success\";\n     }\n-\n }",
      "parent_sha": "e7930a244261822704b9e50687c657ec37bbe0d3"
    }
  },
  {
    "oid": "218f9f001514a7eafa97b7f9c50d073dac37c92b",
    "message": "\u7edf\u4e00\u547d\u540d\u89c4\u8303,\u7b26\u5408\u9a7c\u5cf0\u89c4\u5219",
    "date": "2023-12-19T01:06:22Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/218f9f001514a7eafa97b7f9c50d073dac37c92b",
    "details": {
      "sha": "5517b49e0d96f7ee49c906893fe56daf7d4c00a0",
      "filename": "server/src/main/java/cn/keking/service/FileHandlerService.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/218f9f001514a7eafa97b7f9c50d073dac37c92b/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/218f9f001514a7eafa97b7f9c50d073dac37c92b/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java?ref=218f9f001514a7eafa97b7f9c50d073dac37c92b",
      "patch": "@@ -241,7 +241,7 @@ private List<String> loadPdf2jpgCache(String pdfFilePath, String pdfName, String\n      */\n     public List<String> pdf2jpg(String fileNameFilePath,String pdfFilePath, String pdfName, FileAttribute fileAttribute) throws Exception {\n         boolean forceUpdatedCache = fileAttribute.forceUpdatedCache();\n-        boolean userToken = fileAttribute.getUsePasswordCache();\n+        boolean UsePasswordCache = fileAttribute.getUsePasswordCache();\n         String filePassword = fileAttribute.getFilePassword();\n         String fileKey = fileAttribute.getFileKey();\n         String pdfPassword = null;\n@@ -300,7 +300,7 @@ public List<String> pdf2jpg(String fileNameFilePath,String pdfFilePath, String p\n                 }\n             }\n \n-            if (userToken || !PDF_PASSWORD_MSG.equals(pdfPassword)) {   //\u52a0\u5bc6\u6587\u4ef6  \u5224\u65ad\u662f\u5426\u542f\u7528\u7f13\u5b58\u547d\u4ee4\n+            if (UsePasswordCache || !PDF_PASSWORD_MSG.equals(pdfPassword)) {   //\u52a0\u5bc6\u6587\u4ef6  \u5224\u65ad\u662f\u5426\u542f\u7528\u7f13\u5b58\u547d\u4ee4\n                 this.addPdf2jpgCache(pdfFilePath, pageCount);\n             }\n         } catch (IOException e) {",
      "parent_sha": "0c6ea7248adc798582cb6d458ed1547d7122b1ff"
    }
  },
  {
    "oid": "67686e99f019f22789d81dc569bca34d2245f163",
    "message": "\u4fee\u590dexcel\u9884\u89c8\u7f51\u9875\u4e71\u7801\u95ee\u9898",
    "date": "2019-05-09T07:20:15Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/67686e99f019f22789d81dc569bca34d2245f163",
    "details": {
      "sha": "d8669d429fa5264d0c94cce68120487d617e2323",
      "filename": "jodconverter-web/src/main/java/cn/keking/utils/FileUtils.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/67686e99f019f22789d81dc569bca34d2245f163/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FFileUtils.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/67686e99f019f22789d81dc569bca34d2245f163/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FFileUtils.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FFileUtils.java?ref=67686e99f019f22789d81dc569bca34d2245f163",
      "patch": "@@ -249,7 +249,7 @@ public void doActionConvertedFile(String outFilePath) {\n         }\n         // \u91cd\u65b0\u5199\u5165\u6587\u4ef6\n         try(FileOutputStream fos = new FileOutputStream(outFilePath);\n-            BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(fos))){\n+            BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(fos, \"utf-8\"))) {\n             writer.write(sb.toString());\n         } catch (FileNotFoundException e) {\n             e.printStackTrace();",
      "parent_sha": "90554462dcd1f68c5a7cd84dd041ee0998342027"
    }
  },
  {
    "oid": "75061d843a6dcb1c0938f7cd9ecd62d96b3c514a",
    "message": "\u4fee\u590d \u89c6\u9891\u683c\u5f0f\u83b7\u53d6\u9519\u8bef \u4e0d\u8f93\u51fa\u95ee\u9898",
    "date": "2023-10-24T03:27:23Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/75061d843a6dcb1c0938f7cd9ecd62d96b3c514a",
    "details": {
      "sha": "b5df72ac731d7adeaea7fa3879b2c9e6c29a2ece",
      "filename": "server/src/main/java/cn/keking/service/impl/MediaFilePreviewImpl.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/75061d843a6dcb1c0938f7cd9ecd62d96b3c514a/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FMediaFilePreviewImpl.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/75061d843a6dcb1c0938f7cd9ecd62d96b3c514a/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FMediaFilePreviewImpl.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FMediaFilePreviewImpl.java?ref=75061d843a6dcb1c0938f7cd9ecd62d96b3c514a",
      "patch": "@@ -38,7 +38,7 @@ public String filePreviewHandle(String url, Model model, FileAttribute fileAttri\n         String cacheName =  fileAttribute.getcacheName();\n         String outFilePath = fileAttribute.getoutFilePath();\n         boolean forceUpdatedCache=fileAttribute.forceUpdatedCache();\n-        String type = fileAttribute.getSuffix();\n+        FileType type = fileAttribute.getType();\n         String[] mediaTypesConvert = FileType.MEDIA_TYPES_CONVERT;  //\u83b7\u53d6\u652f\u6301\u7684\u8f6c\u6362\u683c\u5f0f\n         boolean  mediaTypes = false;\n         for(String temp : mediaTypesConvert){\n@@ -59,7 +59,7 @@ public String filePreviewHandle(String url, Model model, FileAttribute fileAttri\n                     if(mediaTypes){\n                         convertedUrl=convertToMp4(filePath,outFilePath);\n                     }else {\n-                        convertedUrl =outFilePath;  //\u5176\u4ed6\u534f\u8bae\u7684  \u4e0d\u9700\u8981\u8f6c\u6362\u65b9\u5f0f\u7684\u6587\u4ef6 \u652f\u6301\u8f93\u51fa\n+                        convertedUrl =outFilePath;  //\u5176\u4ed6\u534f\u8bae\u7684  \u4e0d\u9700\u8981\u8f6c\u6362\u65b9\u5f0f\u7684\u6587\u4ef6 \u76f4\u63a5\u8f93\u51fa\n                     }\n                 } catch (Exception e) {\n                     e.printStackTrace();",
      "parent_sha": "502b21147d89149cd905d234c2a860a3b937d8d1"
    }
  },
  {
    "oid": "bbd7530f77ba50095a4a19290103904371be7836",
    "message": "\u4fee\u590d forceUpdatedCache \u5c5e\u6027\u8bbe\u7f6e\uff0c\u4f46\u662f\u672c\u5730\u7f13\u5b58\u6587\u4ef6\u4e0d\u66f4\u65b0\u7f3a\u9677\n\nSigned-off-by: lujiaming <1451771613@qq.com>",
    "date": "2023-07-10T07:43:23Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/bbd7530f77ba50095a4a19290103904371be7836",
    "details": {
      "sha": "3d67b07f659b3426843d882f2d3a9ec50dd70253",
      "filename": "server/src/main/java/cn/keking/utils/DownloadUtils.java",
      "status": "modified",
      "additions": 9,
      "deletions": 5,
      "changes": 14,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/bbd7530f77ba50095a4a19290103904371be7836/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FDownloadUtils.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/bbd7530f77ba50095a4a19290103904371be7836/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FDownloadUtils.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FDownloadUtils.java?ref=bbd7530f77ba50095a4a19290103904371be7836",
      "patch": "@@ -124,11 +124,15 @@ private static String getRelFilePath(String fileName, FileAttribute fileAttribut\n         if (!dirFile.exists() && !dirFile.mkdirs()) {\n             logger.error(\"\u521b\u5efa\u76ee\u5f55\u3010{}\u3011\u5931\u8d25,\u53ef\u80fd\u662f\u6743\u9650\u4e0d\u591f\uff0c\u8bf7\u68c0\u67e5\", fileDir);\n         }\n-        // \u6587\u4ef6\u5df2\u5728\u672c\u5730\u5b58\u5728\uff0c\u8df3\u8fc7\u6587\u4ef6\u4e0b\u8f7d\n-        File realFile = new File(realPath);\n-        if (realFile.exists()) {\n-            fileAttribute.setSkipDownLoad(true);\n-            return \"cunzhai\";\n+        Boolean forceUpdatedCache = fileAttribute.forceUpdatedCache();\n+        //\u5224\u65ad\u662f\u5426\u542f\u7528\u5f3a\u5236\u66f4\u65b0\u529f\u80fd\u5982\u679c\u542f\u7528 \u6587\u4ef6\u5fc5\u987b\u91cd\u65b0\u4e0b\u8f7d\n+        if (null == forceUpdatedCache || !forceUpdatedCache) {\n+            // \u6587\u4ef6\u5df2\u5728\u672c\u5730\u5b58\u5728\uff0c\u8df3\u8fc7\u6587\u4ef6\u4e0b\u8f7d\n+            File realFile = new File(realPath);\n+            if (realFile.exists()) {\n+                fileAttribute.setSkipDownLoad(true);\n+                return \"cunzhai\"; //\u8fd9\u91cc\u7ed9\u7684\u503c\u662f\u4e0d\u80fd\u4fee\u6539\u7684 \u5bf9\u5e94\u7684\u662f\u4e0b\u8f7d\u65b9\u6cd5\u91cc\u9762\u6709\u4e2a\u5f3a\u5236\u8f93\u51fa\u5730\u5740\u7684\n+            }\n         }\n         return realPath;\n     }",
      "parent_sha": "2cfd692171fd509c093cb9475b07fd142fbeab13"
    }
  },
  {
    "oid": "54750f4e061147b118608b5829aeaa4574f16eae",
    "message": "\u4fee\u590d\u8f6c\u6362\u52a0\u5bc6\u6587\u6863 PDF\u4e0d\u751f\u6210\u5bc6\u7801\u95ee\u9898",
    "date": "2023-07-24T01:39:20Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/54750f4e061147b118608b5829aeaa4574f16eae",
    "details": {
      "sha": "e82e80d7c46e8b467029a78de110d1601b0f6259",
      "filename": "server/src/main/java/cn/keking/service/OfficeToPdfService.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/54750f4e061147b118608b5829aeaa4574f16eae/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FOfficeToPdfService.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/54750f4e061147b118608b5829aeaa4574f16eae/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FOfficeToPdfService.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FOfficeToPdfService.java?ref=54750f4e061147b118608b5829aeaa4574f16eae",
      "patch": "@@ -50,7 +50,7 @@ public static void converterFile(File inputFile, String outputFilePath_end, File\n         if(ConfigConstants.getOfficeExportNotes()){\n             filterData.put(\"ExportNotes\", true); //\u6279\u6ce8\u4f5c\u4e3aPDF\u7684\u6ce8\u91ca\n         }\n-        if(!ConfigConstants.getOfficeDocumentOpenPasswords()){\n+        if(ConfigConstants.getOfficeDocumentOpenPasswords()){\n             filterData.put(\"DocumentOpenPassword\", fileAttribute.getFilePassword()); //\u7ed9PDF\u6dfb\u52a0\u5bc6\u7801\n         }\n         Map<String, Object> customProperties = new HashMap<>();",
      "parent_sha": "fe5ad49008885c4f1cc7221913d088896e4d8c83"
    }
  },
  {
    "oid": "f771d361aea8b5cfb6efb36936984208c71f2004",
    "message": "\u7cbe\u7b80\u538b\u7f29\u5305\u89e3\u6790\u7684\u65e0\u7528\u4ee3\u7801\n\u7cbe\u7b80\u538b\u7f29\u5305\u89e3\u6790\u7684\u65e0\u7528\u4ee3\u7801\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-04-10T03:16:55Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/f771d361aea8b5cfb6efb36936984208c71f2004",
    "details": {
      "sha": "549c6f0a793a69d08fce48c18eb17b45e7013e35",
      "filename": "server/src/main/java/cn/keking/web/controller/FileController.java",
      "status": "modified",
      "additions": 1,
      "deletions": 5,
      "changes": 6,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/f771d361aea8b5cfb6efb36936984208c71f2004/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FFileController.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/f771d361aea8b5cfb6efb36936984208c71f2004/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FFileController.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FFileController.java?ref=f771d361aea8b5cfb6efb36936984208c71f2004",
      "patch": "@@ -140,7 +140,7 @@ private boolean isAllowedUpload(String file) {\n      */\n     private ReturnResponse<Object> deleteFileCheck(String fileName) {\n         if (ObjectUtils.isEmpty(fileName)) {\n-            return ReturnResponse.failure(\"\u6587\u4ef6\u540d\u4e3a\u7a7a\uff01\");\n+            return ReturnResponse.failure(\"\u6587\u4ef6\u540d\u4e3a\u7a7a\uff0c\u5220\u9664\u5931\u8d25\uff01\");\n         }\n         try {\n             fileName = WebUtils.decodeUrl(fileName);\n@@ -160,10 +160,6 @@ private ReturnResponse<Object> deleteFileCheck(String fileName) {\n \n     @GetMapping(\"/directory\")\n     public Object directory(String urls) {\n-        ReturnResponse<Object> checkResult = this.deleteFileCheck(urls);\n-        if (checkResult.isFailure()) {\n-            return checkResult;\n-        }\n         String fileUrl;\n         try {\n             fileUrl = WebUtils.decodeUrl(urls);",
      "parent_sha": "2cd23b06f152656a62a156f1c4c312bce08d65b3"
    }
  },
  {
    "oid": "7dcd225cea097d061abc0c764f10ec44b7330a5c",
    "message": "\u8c03\u6574\u538b\u7f29\u5305 \u83b7\u53d6\u8def\u5f84\u65b9\u6cd5\n\u8c03\u6574\u538b\u7f29\u5305 \u83b7\u53d6\u8def\u5f84\u65b9\u6cd5\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2024-03-06T07:34:56Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/7dcd225cea097d061abc0c764f10ec44b7330a5c",
    "details": {
      "sha": "d18af3ba50d2ac4e1ecc71f667a58751310185db",
      "filename": "server/src/main/java/cn/keking/service/FileHandlerService.java",
      "status": "modified",
      "additions": 3,
      "deletions": 8,
      "changes": 11,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/7dcd225cea097d061abc0c764f10ec44b7330a5c/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/7dcd225cea097d061abc0c764f10ec44b7330a5c/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java?ref=7dcd225cea097d061abc0c764f10ec44b7330a5c",
      "patch": "@@ -37,8 +37,6 @@\n import javax.servlet.http.HttpServletRequest;\n import java.awt.image.BufferedImage;\n import java.io.*;\n-import java.net.MalformedURLException;\n-import java.net.URL;\n import java.net.URLDecoder;\n import java.net.URLEncoder;\n import java.nio.charset.StandardCharsets;\n@@ -432,7 +430,8 @@ public FileAttribute getFileAttribute(String url, HttpServletRequest req) {\n         String outFilePath; //\u751f\u6210\u6587\u4ef6\u7684\u8def\u5f84\n         String originFilePath; //\u539f\u59cb\u6587\u4ef6\u8def\u5f84\n         String fullFileName = WebUtils.getUrlParameterReg(url, \"fullfilename\");\n-        String compressFileKey = WebUtils.getUrlParameterReg(url, \"kkCompressfileKey\"); //\u538b\u7f29\u5305\u6307\u5b9a\u7279\u6b8a\u7b26\u53f7\n+        String compressFileKey = WebUtils.getUrlParameterReg(url, \"kkCompressfileKey\"); //\u538b\u7f29\u5305\u83b7\u53d6\u6587\u4ef6\u540d\n+        String compressFilePath = WebUtils.getUrlParameterReg(url, \"kkCompressfilepath\"); //\u538b\u7f29\u5305\u83b7\u53d6\u6587\u4ef6\u8def\u5f84\n         if (StringUtils.hasText(fullFileName)) {\n             originFileName = fullFileName;\n             type = FileType.typeFromFileName(fullFileName);\n@@ -453,14 +452,10 @@ public FileAttribute getFileAttribute(String url, HttpServletRequest req) {\n             try {\n                 // http://127.0.0.1:8012/\u5404\u7c7b\u578b\u6587\u4ef61 - \u526f\u672c.zip_/\u5404\u7c7b\u578b\u6587\u4ef6/\u6b63\u5e38\u9884\u89c8/PPT\u8f6c\u7684PDF.pdf?kkCompressfileKey=\u5404\u7c7b\u578b\u6587\u4ef61 - \u526f\u672c.zip_\n                 // http://127.0.0.1:8012/preview/\u5404\u7c7b\u578b\u6587\u4ef61 - \u526f\u672c.zip_/\u5404\u7c7b\u578b\u6587\u4ef6/\u6b63\u5e38\u9884\u89c8/PPT\u8f6c\u7684PDF.pdf?kkCompressfileKey=\u5404\u7c7b\u578b\u6587\u4ef61 - \u526f\u672c.zip_ \u83b7\u53d6\u8def\u5f84\u5c31\u4f1a\u9519\u8bef \u9700\u8981\u4e0b\u9762\u7684\u65b9\u6cd5\n-                URL urll = new URL(url);\n-                String _Path = urll.getPath(); //\u83b7\u53d6url\u8def\u5f84\n-                String urlStrr = getSubString(_Path, compressFileKey); //\u53cd\u4ee3\u60c5\u51b5\u4e0b\u6dfb\u52a0\u524d\u7f00,\u53ea\u83b7\u53d6\u6709\u538b\u7f29\u5305\u5b57\u7b26\u7684\u8def\u5f84\n+                String urlStrr = getSubString(compressFilePath, compressFileKey); //\u53cd\u4ee3\u60c5\u51b5\u4e0b\u6dfb\u52a0\u524d\u7f00,\u53ea\u83b7\u53d6\u6709\u538b\u7f29\u5305\u5b57\u7b26\u7684\u8def\u5f84\n                 originFileName = compressFileKey + urlStrr.trim(); //\u62fc\u63a5\u5b8c\u6574\u8def\u5f84\n                 originFileName = URLDecoder.decode(originFileName, uriEncoding); //\u538b\u7f29\u5305\u6587\u4ef6\u4e2d\u6587\u7f16\u7801\u95ee\u9898\n                 attribute.setSkipDownLoad(true);\n-            } catch (MalformedURLException e) {\n-                e.printStackTrace();\n             } catch (UnsupportedEncodingException e) {\n                 e.printStackTrace();\n             }",
      "parent_sha": "3482ee51daa97312467b9169564cfa60c7f73edb"
    }
  },
  {
    "oid": "bba44ca05738081821e95d5f873293547fa13953",
    "message": "Linux\u4e0b\u68c0\u6d4b\u6b63\u5728\u8fd0\u884c\u7684office\u8fdb\u7a0b\u68c0\u6d4b\u903b\u8f91\u4fee\u6b63",
    "date": "2022-11-11T09:06:42Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/bba44ca05738081821e95d5f873293547fa13953",
    "details": {
      "sha": "3a7d816340c5fedbc8597ddf04fe2dde709c7f49",
      "filename": "server/src/main/java/cn/keking/service/OfficePluginManager.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/bba44ca05738081821e95d5f873293547fa13953/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FOfficePluginManager.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/bba44ca05738081821e95d5f873293547fa13953/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FOfficePluginManager.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FOfficePluginManager.java?ref=bba44ca05738081821e95d5f873293547fa13953",
      "patch": "@@ -120,7 +120,7 @@ private boolean killProcess() {\n                     baos.write(b);\n                 }\n                 String s = baos.toString();\n-                if (!\"0\".equals(s)) {\n+                if (!s.startsWith(\"0\")) {\n                     String[] cmd = {\"sh\", \"-c\", \"ps -ef | grep soffice.bin | grep -v grep | awk '{print \\\"kill -9 \\\"$2}' | sh\"};\n                     Runtime.getRuntime().exec(cmd);\n                     flag = true;",
      "parent_sha": "5134f7a121f4efe95addfc410244c127d32b6789"
    }
  },
  {
    "oid": "b2f6fb3a007dbb46c8dfca4ebd18771672fda049",
    "message": "\u4fee\u590d\u91cd\u590d\u7f16\u7801\u5bfc\u81f4\u6587\u6863\u8f6c\u56fe\u7247\u9884\u89c8\u5931\u8d25\u7684\u95ee\u9898&\u7f16\u7801\u89c4\u8303\n\nURLEncoder.encode(URLEncoder.encode(pdfFolder, uriEncoding).replaceAll(\"\\+\", \"%20\"), uriEncoding);\r\n\u8fd9\u91ccencode\u4e86\u4e24\u6b21\uff0c\u5bfc\u81f4\u56fe\u7247\u9884\u89c8\u5931\u8d25\u3002",
    "date": "2021-01-23T06:09:16Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/b2f6fb3a007dbb46c8dfca4ebd18771672fda049",
    "details": {
      "sha": "7de18ce3023d35d45a1b17757b00e7b63a8ace4f",
      "filename": "server/src/main/java/cn/keking/service/FileHandlerService.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/b2f6fb3a007dbb46c8dfca4ebd18771672fda049/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/b2f6fb3a007dbb46c8dfca4ebd18771672fda049/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java?ref=b2f6fb3a007dbb46c8dfca4ebd18771672fda049",
      "patch": "@@ -178,14 +178,15 @@ public List<String> pdf2jpg(String pdfFilePath, String pdfName, String baseUrl)\n         String pdfFolder = pdfName.substring(0, pdfName.length() - 4);\n         String urlPrefix;\n         try {\n-            urlPrefix = baseUrl + URLEncoder.encode(URLEncoder.encode(pdfFolder, uriEncoding).replaceAll(\"\\\\+\", \"%20\"), uriEncoding);\n+            urlPrefix = baseUrl + URLEncoder.encode(pdfFolder, uriEncoding).replaceAll(\"\\\\+\", \"%20\");\n         } catch (UnsupportedEncodingException e) {\n             logger.error(\"UnsupportedEncodingException\", e);\n             urlPrefix = baseUrl + pdfFolder;\n         }\n         if (imageCount != null && imageCount > 0) {\n-            for (int i = 0; i < imageCount; i++)\n+            for (int i = 0; i < imageCount; i++) {\n                 imageUrls.add(urlPrefix + \"/\" + i + imageFileSuffix);\n+            }\n             return imageUrls;\n         }\n         try {",
      "parent_sha": "996da0862c7fed1b80169219ba91f9f41d709c42"
    }
  },
  {
    "oid": "1fa7b4a9114ff8c78e2e5cfcb9b7613f23ce376b",
    "message": "\u4fee\u6b63\u533a\u5206\u5927\u5c0f\u5199\u7684\u6587\u4ef6\u7cfb\u7edf\u4e2d\uff0c\u6587\u4ef6\u540e\u7f00\u540d\u4e3a\u5927\u5199\u65f6\uff0c\u7cfb\u7edf\u63d0\u793a\u8be5\u6587\u4ef6\u7c7b\u578b\u4e0d\u652f\u6301\u7684\u95ee\u9898",
    "date": "2021-04-19T05:31:50Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/1fa7b4a9114ff8c78e2e5cfcb9b7613f23ce376b",
    "details": {
      "sha": "8048981336a9be2b127474d346c902ef48e25b7c",
      "filename": "server/src/main/java/cn/keking/utils/KkFileUtils.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/1fa7b4a9114ff8c78e2e5cfcb9b7613f23ce376b/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FKkFileUtils.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/1fa7b4a9114ff8c78e2e5cfcb9b7613f23ce376b/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FKkFileUtils.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FKkFileUtils.java?ref=1fa7b4a9114ff8c78e2e5cfcb9b7613f23ce376b",
      "patch": "@@ -93,7 +93,7 @@ public static String getFileEncode(File file) {\n      * @return \u6587\u4ef6\u540e\u7f00\n      */\n     public static String suffixFromFileName(String fileName) {\n-        return fileName.substring(fileName.lastIndexOf(\".\") + 1);\n+        return fileName.substring(fileName.lastIndexOf(\".\") + 1).toLowerCase();\n     }\n \n ",
      "parent_sha": "bcdb5ce0e616abad40fc72c6292129750e32d8cc"
    }
  },
  {
    "oid": "b1fdbd26a3c7956a774c2d985e514b87c9e7edd1",
    "message": "\u65b0\u529f\u80fd\u70b9\uff1a\u5168\u90e8\u80fd\u8bc6\u522b\u7684\u7eaf\u6587\u672c\u76f4\u63a5\u9884\u89c8\uff0c\u4e0d\u7528\u518d\u8f6c\u8df3\u4e0b\u8f7d(.md\u3001.java\u3001.py\u7b49\u6d4f\u89c8\u5668\u4e0d\u8ba4\u8bc6\u7684\u540e\u7f00\u540d)",
    "date": "2019-10-25T07:16:25Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/b1fdbd26a3c7956a774c2d985e514b87c9e7edd1",
    "details": {
      "sha": "2168d873b4ed1516037e5d9d9e4047c3ca2fd2ac",
      "filename": "jodconverter-web/src/main/java/cn/keking/service/impl/SimTextFilePreviewImpl.java",
      "status": "modified",
      "additions": 14,
      "deletions": 1,
      "changes": 15,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/b1fdbd26a3c7956a774c2d985e514b87c9e7edd1/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FSimTextFilePreviewImpl.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/b1fdbd26a3c7956a774c2d985e514b87c9e7edd1/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FSimTextFilePreviewImpl.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FSimTextFilePreviewImpl.java?ref=b1fdbd26a3c7956a774c2d985e514b87c9e7edd1",
      "patch": "@@ -9,6 +9,10 @@\n import org.springframework.stereotype.Service;\n import org.springframework.ui.Model;\n \n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+\n /**\n  * Created by kl on 2018/1/17.\n  * Content :\u5904\u7406\u6587\u672c\u6587\u4ef6\n@@ -32,7 +36,16 @@ public String filePreviewHandle(String url, Model model, FileAttribute fileAttri\n             model.addAttribute(\"fileType\",fileAttribute.getSuffix());\n             return \"fileNotSupported\";\n         }\n-        model.addAttribute(\"ordinaryUrl\", response.getMsg());\n+        try {\n+            File originFile = new File(response.getContent());\n+            File previewFile = new File(response.getContent() + \".txt\");\n+            Files.copy(originFile.toPath(), previewFile.toPath());\n+        } catch (IOException e) {\n+            model.addAttribute(\"msg\", e.getLocalizedMessage());\n+            model.addAttribute(\"fileType\",fileAttribute.getSuffix());\n+            return \"fileNotSupported\";\n+        }\n+        model.addAttribute(\"ordinaryUrl\", response.getMsg() + \".txt\");\n         return \"txt\";\n     }\n ",
      "parent_sha": "fa7241bd4e91192a1258a266e8de39c1fae3ac46"
    }
  },
  {
    "oid": "127f759f16720b58a62de5e027fd507d8c9768e8",
    "message": "\u4f18\u5316\u8de8\u57df\u65b9\u6cd5\u4ee3\u7801",
    "date": "2023-06-03T06:36:06Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/127f759f16720b58a62de5e027fd507d8c9768e8",
    "details": {
      "sha": "ed29684aa6bae4667981c25425c5cbefc97e49f3",
      "filename": "server/src/main/java/cn/keking/web/controller/OnlinePreviewController.java",
      "status": "modified",
      "additions": 9,
      "deletions": 10,
      "changes": 19,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/127f759f16720b58a62de5e027fd507d8c9768e8/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FOnlinePreviewController.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/127f759f16720b58a62de5e027fd507d8c9768e8/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FOnlinePreviewController.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FOnlinePreviewController.java?ref=127f759f16720b58a62de5e027fd507d8c9768e8",
      "patch": "@@ -109,9 +109,10 @@ public void getCorsFile(String urlPath, HttpServletResponse response) throws IOE\n             logger.error(String.format(BASE64_DECODE_ERROR_MSG, urlPath),ex);\n             return;\n         }\n-        HttpURLConnection urlcon;\n+        HttpURLConnection urlcon = null;\n         InputStream inputStream = null;\n-        if (urlPath.toLowerCase().startsWith(\"file:\") || urlPath.toLowerCase().startsWith(\"file%3\")) {\n+        assert urlPath != null;\n+        if (!urlPath.toLowerCase().startsWith(\"http\") && !urlPath.toLowerCase().startsWith(\"https\") && !urlPath.toLowerCase().startsWith(\"ftp\")) {\n             logger.info(\"\u8bfb\u53d6\u8de8\u57df\u6587\u4ef6\u5f02\u5e38\uff0c\u53ef\u80fd\u5b58\u5728\u975e\u6cd5\u8bbf\u95ee\uff0curlPath\uff1a{}\", urlPath);\n             return;\n         }\n@@ -123,26 +124,25 @@ public void getCorsFile(String urlPath, HttpServletResponse response) throws IOE\n                 urlcon.setConnectTimeout(30000);\n                 urlcon.setReadTimeout(30000);\n                 urlcon.setInstanceFollowRedirects(false);\n-                if (urlcon.getResponseCode() == 302 || urlcon.getResponseCode() == 301) {\n-                    urlcon.disconnect();\n+                int responseCode = urlcon.getResponseCode();\n+                if (responseCode == HttpURLConnection.HTTP_MOVED_PERM || responseCode == HttpURLConnection.HTTP_MOVED_TEMP) { //301 302\n                     url =new URL(urlcon.getHeaderField(\"Location\"));\n                     urlcon=(HttpURLConnection)url.openConnection();\n                 }\n-                if (urlcon.getResponseCode() == 404 || urlcon.getResponseCode() == 403 || urlcon.getResponseCode() == 500 ) {\n-                    logger.error(\"\u8bfb\u53d6\u8de8\u57df\u6587\u4ef6\u5f02\u5e38\uff0curl\uff1a{}\", urlPath);\n-                    return ;\n+                if (responseCode  == HttpURLConnection.HTTP_NOT_FOUND  ||responseCode  == HttpURLConnection.HTTP_FORBIDDEN  || responseCode == HttpURLConnection.HTTP_INTERNAL_ERROR ) { //403 404 500\n+                    logger.error(\"\u8bfb\u53d6\u8de8\u57df\u6587\u4ef6\u5f02\u5e38\uff0curl\uff1a{}\uff0c\u9519\u8bef\uff1a{}\", urlPath,responseCode);\n                 } else {\n                     if(urlPath.contains( \".svg\")) {\n                         response.setContentType(\"image/svg+xml\");\n                     }\n                     inputStream=(url).openStream();\n                     IOUtils.copy(inputStream, response.getOutputStream());\n-                    urlcon.disconnect();\n                 }\n             } catch (IOException | GalimatiasParseException e) {\n                 logger.error(\"\u8bfb\u53d6\u8de8\u57df\u6587\u4ef6\u5f02\u5e38\uff0curl\uff1a{}\", urlPath);\n-                return ;\n             } finally {\n+                assert urlcon != null;\n+                urlcon.disconnect();\n                 IOUtils.closeQuietly(inputStream);\n             }\n         } else {\n@@ -155,7 +155,6 @@ public void getCorsFile(String urlPath, HttpServletResponse response) throws IOE\n                 IOUtils.copy(inputStream, response.getOutputStream());\n             } catch (IOException | GalimatiasParseException e) {\n                 logger.error(\"\u8bfb\u53d6\u8de8\u57df\u6587\u4ef6\u5f02\u5e38\uff0curl\uff1a{}\", urlPath);\n-                return ;\n             } finally {\n                 IOUtils.closeQuietly(inputStream);\n             }",
      "parent_sha": "eb3cef0222e37ed54508e77652ef772c0ee0d72c"
    }
  },
  {
    "oid": "1581fd277f93678e8c3d8f8419ebd11e9f662759",
    "message": "\u4f18\u5316CAD \u91ca\u653e\u8d44\u6e90\u65b9\u6cd5\n\u4f18\u5316CAD \u91ca\u653e\u8d44\u6e90\u65b9\u6cd5\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-05-12T01:50:56Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/1581fd277f93678e8c3d8f8419ebd11e9f662759",
    "details": {
      "sha": "a7080cdef9131dd057f7cf35ec100576af62d130",
      "filename": "server/src/main/java/cn/keking/service/FileHandlerService.java",
      "status": "modified",
      "additions": 25,
      "deletions": 14,
      "changes": 39,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/1581fd277f93678e8c3d8f8419ebd11e9f662759/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/1581fd277f93678e8c3d8f8419ebd11e9f662759/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java?ref=1581fd277f93678e8c3d8f8419ebd11e9f662759",
      "patch": "@@ -15,12 +15,13 @@\n import com.aspose.cad.LoadOptions;\n import com.aspose.cad.imageoptions.CadRasterizationOptions;\n import com.aspose.cad.imageoptions.PdfOptions;\n-import com.itextpdf.text.exceptions.BadPasswordException;\n import com.itextpdf.text.pdf.PdfReader;\n+import org.apache.commons.lang3.exception.ExceptionUtils;\n import org.apache.pdfbox.pdmodel.PDDocument;\n import org.apache.pdfbox.rendering.ImageType;\n import org.apache.pdfbox.rendering.PDFRenderer;\n import org.apache.pdfbox.tools.imageio.ImageIOUtil;\n+import org.apache.poi.EncryptedDocumentException;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Value;\n@@ -50,6 +51,7 @@ public class FileHandlerService {\n     private final String fileDir = ConfigConstants.getFileDir();\n     private final static String pdf2jpg_image_format = \".jpg\";\n     private final CacheService cacheService;\n+    private static final String pdf_password_msg = \"password\";\n \n     @Value(\"${server.tomcat.uri-encoding:UTF-8}\")\n     private String uriEncoding;\n@@ -223,6 +225,7 @@ private List<String> loadPdf2jpgCache(String pdfFilePath, String pdfName) {\n     public List<String> pdf2jpg(String pdfFilePath, String pdfName, FileAttribute fileAttribute) throws Exception {\n         boolean forceUpdatedCache = fileAttribute.forceUpdatedCache();\n         String filePassword = fileAttribute.getFilePassword();\n+        String pdfPassword = null;\n         PDDocument doc = null;\n         PdfReader pdfReader = null;\n         if (!forceUpdatedCache) {\n@@ -256,18 +259,25 @@ public List<String> pdf2jpg(String pdfFilePath, String pdfName, FileAttribute fi\n                 imageUrls.add(imageUrl);\n             }\n             try {\n-                pdfReader =  new PdfReader(pdfFilePath);   //\u5224\u65adpdf\u6587\u4ef6\u662f\u5426\u52a0\u5bc6 \u7f13\u5b58\u4e0d\u52a0\u5bc6\u6587\u4ef6\n-                this.addPdf2jpgCache(pdfFilePath, pageCount);\n-            } catch (BadPasswordException e) {\n-\n-            } catch (Exception e) {\n-                e.printStackTrace();\n+                pdfReader =  new PdfReader(pdfFilePath);   //\u8bfb\u53d6PDF\u6587\u4ef6\n+            } catch (Exception e) {  //\u83b7\u53d6\u5f02\u5e38\u65b9\u6cd5 \u5224\u65ad\u662f\u5426\u6709\u52a0\u5bc6\u5b57\u7b26\u4e32\n+                Throwable[] throwableArray = ExceptionUtils.getThrowables(e);\n+                for (Throwable throwable : throwableArray) {\n+                    if (throwable instanceof IOException || throwable instanceof EncryptedDocumentException) {\n+                        if (e.getMessage().toLowerCase().contains(pdf_password_msg)) {\n+                            pdfPassword = pdf_password_msg;\n+                        }\n+                    }\n+                }\n+                logger.error(\"Convert pdf exception, pdfFilePath\uff1a{}\", pdfFilePath, e);\n             }finally {\n                 if (pdfReader != null) {   //\u5173\u95ed\n                     pdfReader.close();\n                 }\n             }\n-\n+            if(!pdfPassword.equals(pdf_password_msg)){  //\u5224\u65ad\u662f\u5426\u52a0\u5bc6\u6587\u4ef6 \u52a0\u5bc6\u6587\u4ef6\u4e0d\u7f13\u5b58\n+                this.addPdf2jpgCache(pdfFilePath, pageCount);\n+            }\n         } catch (IOException e) {\n             logger.error(\"Convert pdf to jpg exception, pdfFilePath\uff1a{}\", pdfFilePath, e);\n             throw new Exception(e);\n@@ -286,7 +296,7 @@ public List<String> pdf2jpg(String pdfFilePath, String pdfName, FileAttribute fi\n      * @param outputFilePath pdf\u8f93\u51fa\u6587\u4ef6\u8def\u5f84\n      * @return \u8f6c\u6362\u662f\u5426\u6210\u529f\n      */\n-    public boolean cadToPdf(String inputFilePath, String outputFilePath) {\n+    public String cadToPdf(String inputFilePath, String outputFilePath)  throws Exception  {\n         File outputFile = new File(outputFilePath);\n         LoadOptions opts = new LoadOptions();\n         opts.setSpecifiedEncoding(CodePages.SimpChinese);\n@@ -300,21 +310,22 @@ public boolean cadToPdf(String inputFilePath, String outputFilePath) {\n         cadRasterizationOptions.setDrawType(1);\n         PdfOptions pdfOptions = new PdfOptions();\n         pdfOptions.setVectorRasterizationOptions(cadRasterizationOptions);\n-        OutputStream stream;\n+        OutputStream stream = null;\n         try {\n             stream = new FileOutputStream(outputFile);\n             cadImage.save(stream, pdfOptions);\n-            stream.close();\n-            cadImage.close();\n-            return true;\n         } catch (IOException e) {\n             logger.error(\"PDFFileNotFoundException\uff0cinputFilePath\uff1a{}\", inputFilePath, e);\n+            return \"null\";\n         } finally {\n+            if (stream != null) {   //\u5173\u95ed\n+                stream.close();\n+            }\n             if (cadImage != null) {   //\u5173\u95ed\n                 cadImage.close();\n             }\n         }\n-        return false;\n+        return \"true\";\n     }\n     /**\n      *",
      "parent_sha": "f74d93a835f8ad8f278d77a2825d48f91da9ea04"
    }
  },
  {
    "oid": "cc7da000014ac1e2ae98732b70f0db28dce81221",
    "message": "\u65b0\u589e \u652f\u6301\u538b\u7f29\u5305\u5bc6\u7801 \u4fee\u590dLINUX\u4e0b\u4e2d\u6587\u4e71\u7801 \u89e3\u538b\u652f\u6301\u6587\u4ef6\u76ee\u5f55\n\u65b0\u589e \u652f\u6301\u538b\u7f29\u5305\u5bc6\u7801 \u4fee\u590dLINUX\u4e0b\u4e2d\u6587\u4e71\u7801 \u89e3\u538b\u652f\u6301\u6587\u4ef6\u76ee\u5f55\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-04-03T07:11:14Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/cc7da000014ac1e2ae98732b70f0db28dce81221",
    "details": {
      "sha": "c4a173832ecf664849526af1bf098bd808320db2",
      "filename": "server/src/main/java/cn/keking/utils/DownloadUtils.java",
      "status": "modified",
      "additions": 17,
      "deletions": 5,
      "changes": 22,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/cc7da000014ac1e2ae98732b70f0db28dce81221/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FDownloadUtils.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/cc7da000014ac1e2ae98732b70f0db28dce81221/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FDownloadUtils.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FDownloadUtils.java?ref=cc7da000014ac1e2ae98732b70f0db28dce81221",
      "patch": "@@ -3,16 +3,17 @@\n import cn.keking.config.ConfigConstants;\n import cn.keking.model.FileAttribute;\n import cn.keking.model.ReturnResponse;\n-import cn.keking.service.FileHandlerService;\n import io.mola.galimatias.GalimatiasParseException;\n import org.apache.commons.io.FileUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.util.StringUtils;\n-import org.springframework.web.util.HtmlUtils;\n \n-import java.io.*;\n-import java.net.*;\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import java.net.URL;\n+import java.net.URLDecoder;\n import java.util.UUID;\n \n import static cn.keking.utils.KkFileUtils.isFtpUrl;\n@@ -36,13 +37,24 @@ public class DownloadUtils {\n      */\n     public static ReturnResponse<String> downLoad(FileAttribute fileAttribute, String fileName) {\n         // \u5ffd\u7565ssl\u8bc1\u4e66\n+        String urlStr = null;\n+        String urlStrr = null;\n+        URL urll;\n         try {\n             SslUtils.ignoreSsl();\n+            urlStr = fileAttribute.getUrl().replaceAll(\"\\\\+\", \"%20\");\n+            urll = new URL(urlStr);\n+            urlStrr = URLDecoder.decode(urll.getPath(), \"UTF-8\");\n         } catch (Exception e) {\n             logger.error(\"\u5ffd\u7565SSL\u8bc1\u4e66\u5f02\u5e38:\", e);\n         }\n-        String urlStr = fileAttribute.getUrl().replaceAll(\"\\\\+\", \"%20\");\n         ReturnResponse<String> response = new ReturnResponse<>(0, \"\u4e0b\u8f7d\u6210\u529f!!!\", \"\");\n+        assert urlStr != null;\n+        if (urlStr.contains(\"?fileKey=\")) {\n+            response.setContent(fileDir + urlStrr);\n+            response.setMsg(fileName);\n+            return response;\n+        }\n         String realPath = DownloadUtils.getRelFilePath(fileName, fileAttribute);\n         if(!StringUtils.hasText(realPath)){\n             response.setCode(1);",
      "parent_sha": "41449aeea657d951f91256569a8f2e02f674360e"
    }
  },
  {
    "oid": "75e568e15faf2d5136f64374f71715a8c329b1f1",
    "message": "\u65b0\u589e \u652f\u6301\u538b\u7f29\u5305\u5bc6\u7801 \u4fee\u590d\u538b\u7f29\u5305LINUX\u4e0b\u4e2d\u6587\u4e71\u7801 \u89e3\u538b\u652f\u6301\u6587\u4ef6\u76ee\u5f55\n\u65b0\u589e \u652f\u6301\u538b\u7f29\u5305\u5bc6\u7801 \u4fee\u590d\u538b\u7f29\u5305LINUX\u4e0b\u4e2d\u6587\u4e71\u7801 \u89e3\u538b\u652f\u6301\u6587\u4ef6\u76ee\u5f55\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-04-08T05:45:17Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/75e568e15faf2d5136f64374f71715a8c329b1f1",
    "details": {
      "sha": "e2fc3376ac041d05c94ead41fbc63c6fc6368b9e",
      "filename": "server/src/main/java/cn/keking/service/impl/CompressFilePreviewImpl.java",
      "status": "modified",
      "additions": 20,
      "deletions": 12,
      "changes": 32,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/75e568e15faf2d5136f64374f71715a8c329b1f1/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FCompressFilePreviewImpl.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/75e568e15faf2d5136f64374f71715a8c329b1f1/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FCompressFilePreviewImpl.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FCompressFilePreviewImpl.java?ref=75e568e15faf2d5136f64374f71715a8c329b1f1",
      "patch": "@@ -7,11 +7,15 @@\n import cn.keking.utils.DownloadUtils;\n import cn.keking.service.FileHandlerService;\n import cn.keking.service.CompressFileReader;\n+import org.apache.commons.lang3.exception.ExceptionUtils;\n+import org.apache.poi.EncryptedDocumentException;\n import org.springframework.stereotype.Service;\n import org.springframework.ui.Model;\n import org.springframework.util.ObjectUtils;\n import org.springframework.util.StringUtils;\n \n+import java.io.IOException;\n+\n /**\n  * Created by kl on 2018/1/17.\n  * Content :\u5904\u7406\u538b\u7f29\u5305\u6587\u4ef6\n@@ -22,6 +26,7 @@ public class CompressFilePreviewImpl implements FilePreview {\n     private final FileHandlerService fileHandlerService;\n     private final CompressFileReader compressFileReader;\n     private final OtherFilePreviewImpl otherFilePreview;\n+    private static final String Rar_PASSWORD_MSG = \"password\";\n     public CompressFilePreviewImpl(FileHandlerService fileHandlerService, CompressFileReader compressFileReader, OtherFilePreviewImpl otherFilePreview) {\n         this.fileHandlerService = fileHandlerService;\n         this.compressFileReader = compressFileReader;\n@@ -32,37 +37,40 @@ public CompressFilePreviewImpl(FileHandlerService fileHandlerService, CompressFi\n     public String filePreviewHandle(String url, Model model, FileAttribute fileAttribute) {\n         String fileName=fileAttribute.getName();\n         String filePassword = fileAttribute.getFilePassword();\n-        String fileTree;\n+        String fileTree = null;\n         // \u5224\u65ad\u6587\u4ef6\u540d\u662f\u5426\u5b58\u5728(redis\u7f13\u5b58\u8bfb\u53d6)\n         if (!StringUtils.hasText(fileHandlerService.getConvertedFile(fileName))  || !ConfigConstants.isCacheEnabled()) {\n             ReturnResponse<String> response = DownloadUtils.downLoad(fileAttribute, fileName);\n             if (response.isFailure()) {\n                 return otherFilePreview.notSupportedFile(model, fileAttribute, response.getMsg());\n             }\n             String filePath = response.getContent();\n-            fileTree = compressFileReader.unRar(filePath, filePassword,fileName);\n-            if (\"Password\".equals(fileTree)) {\n-                model.addAttribute(\"needFilePassword\", true);\n-                return EXEL_FILE_PREVIEW_PAGE;\n-            }\n-            if (\"error\".equals(fileTree) ) {\n-                return otherFilePreview.notSupportedFile(model, fileAttribute, \"\u89e3\u538b\u5931\u8d25\uff1a\u5bc6\u7801\u9519\u8bef\u6216\u8005\u5176\u4ed6\u9519\u8bef....\");\n+            try {\n+                fileTree = compressFileReader.unRar(filePath, filePassword,fileName);\n+            } catch (Exception e) {\n+                Throwable[] throwableArray = ExceptionUtils.getThrowables(e);\n+                for (Throwable throwable : throwableArray) {\n+                    if (throwable instanceof IOException || throwable instanceof EncryptedDocumentException) {\n+                        if (e.getMessage().toLowerCase().contains(Rar_PASSWORD_MSG)) {\n+                            model.addAttribute(\"needFilePassword\", true);\n+                            return EXEL_FILE_PREVIEW_PAGE;\n+                        }\n+                    }\n+                }\n             }\n             if (!ObjectUtils.isEmpty(fileTree)) {\n                 if (ConfigConstants.isCacheEnabled()) {\n                     // \u52a0\u5165\u7f13\u5b58\n                     fileHandlerService.addConvertedFile(fileName, fileTree);\n                 }\n+            }else {\n+                return otherFilePreview.notSupportedFile(model, fileAttribute, \"\u538b\u7f29\u6587\u4ef6\u5bc6\u7801\u9519\u8bef! \u538b\u7f29\u6587\u4ef6\u635f\u574f!  \u538b\u7f29\u6587\u4ef6\u7c7b\u578b\u4e0d\u53d7\u652f\u6301!\");\n             }\n         } else {\n             fileTree = fileHandlerService.getConvertedFile(fileName);\n         }\n-        if (!ObjectUtils.isEmpty(fileTree)) {\n             model.addAttribute(\"fileName\", fileName);\n             model.addAttribute(\"fileTree\", fileTree);\n             return COMPRESS_FILE_PREVIEW_PAGE;\n-        } else {\n-            return otherFilePreview.notSupportedFile(model, fileAttribute, \"\u538b\u7f29\u6587\u4ef6\u7c7b\u578b\u4e0d\u53d7\u652f\u6301\");\n-        }\n     }\n }",
      "parent_sha": "60b91eb79f74ab1b9cad0c12f42ad5200167e539"
    }
  },
  {
    "oid": "d98cd5d9a96e300548536ad7cb894398ed8fc130",
    "message": "\u4f18\u5316\uff1a\u542f\u52a8Office\u8fdb\u7a0b\u6539\u4e3a\u540c\u6b65\u6267\u884c\uff0c\u9632\u6b62\u7a0b\u5e8f\u8fd0\u884c\u8d77\u6765Office\u8fdb\u7a0b\u8fd8\u6ca1\u542f\u52a8",
    "date": "2021-07-06T03:12:07Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/d98cd5d9a96e300548536ad7cb894398ed8fc130",
    "details": {
      "sha": "9b8e318346f76ca067657b5a0eac8ff36919e7d3",
      "filename": "server/src/main/java/cn/keking/service/OfficePluginManager.java",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/d98cd5d9a96e300548536ad7cb894398ed8fc130/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FOfficePluginManager.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/d98cd5d9a96e300548536ad7cb894398ed8fc130/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FOfficePluginManager.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FOfficePluginManager.java?ref=d98cd5d9a96e300548536ad7cb894398ed8fc130",
      "patch": "@@ -46,15 +46,11 @@ public class OfficePluginManager {\n     @Value(\"${office.plugin.task.timeout:5m}\")\n     private String timeOut;\n \n-    @PostConstruct\n-    public void initOfficeManager() {\n-        new Thread(this::startOfficeManager).start();\n-    }\n-\n     /**\n      * \u542f\u52a8Office\u7ec4\u4ef6\u8fdb\u7a0b\n      */\n-    private void startOfficeManager(){\n+    @PostConstruct\n+    public void startOfficeManager(){\n         File officeHome = OfficeUtils.getDefaultOfficeHome();\n         if (officeHome == null) {\n             throw new RuntimeException(\"\u627e\u4e0d\u5230office\u7ec4\u4ef6\uff0c\u8bf7\u786e\u8ba4'office.home'\u914d\u7f6e\u662f\u5426\u6709\u8bef\");",
      "parent_sha": "fb6adf316f3351e6263bd890189bd3f328a6f7c8"
    }
  },
  {
    "oid": "832420f469733d821aa5e1cc68d3d17ce1ce60c9",
    "message": "\u65b0\u589e\u529f\u80fd:\u6dfb\u52a0\u66f4\u65b0\u7f13\u5b58\u65b9\u6cd5&forceUpdatedCache=true \u53ef\u5408\u5e76\n\u65b0\u589e\u529f\u80fd:\u6dfb\u52a0\u66f4\u65b0\u7f13\u5b58\u65b9\u6cd5&forceUpdatedCache=true \u53ef\u5408\u5e76\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-04-23T04:02:27Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/832420f469733d821aa5e1cc68d3d17ce1ce60c9",
    "details": {
      "sha": "7116a96db2b4e1ccf9802b291919fa3df97b8501",
      "filename": "server/src/main/java/cn/keking/service/FileHandlerService.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/832420f469733d821aa5e1cc68d3d17ce1ce60c9/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/832420f469733d821aa5e1cc68d3d17ce1ce60c9/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java?ref=832420f469733d821aa5e1cc68d3d17ce1ce60c9",
      "patch": "@@ -313,7 +313,7 @@ public FileAttribute getFileAttribute(String url, HttpServletRequest req) {\n         attribute.setUrl(url);\n         if (req != null) {\n             String officePreviewType = req.getParameter(\"officePreviewType\");\n-            String forceUpdatedCache = req.getParameter(\"force_updated_cache\");\n+            String forceUpdatedCache = req.getParameter(\"forceUpdatedCache\");\n             String fileKey = WebUtils.getUrlParameterReg(url,\"fileKey\");\n             if (StringUtils.hasText(officePreviewType)) {\n                 attribute.setOfficePreviewType(officePreviewType);",
      "parent_sha": "f8c7ce647cf1365215a1e69718d25dbd974e0b6d"
    }
  },
  {
    "oid": "37d4a1b7c44731e2d67b01f769f448b2f824a288",
    "message": "update server/src/main/java/cn/keking/service/impl/TiffFilePreviewImpl.java.\n\u540c\u540d\u6587\u4ef6\u4e0d\u540c\u7c7b\u578b\u5904\u7406\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-04-24T05:51:31Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/37d4a1b7c44731e2d67b01f769f448b2f824a288",
    "details": {
      "sha": "2500a23c1b7942710a081cecc32d2df5b93a9208",
      "filename": "server/src/main/java/cn/keking/service/impl/TiffFilePreviewImpl.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/37d4a1b7c44731e2d67b01f769f448b2f824a288/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FTiffFilePreviewImpl.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/37d4a1b7c44731e2d67b01f769f448b2f824a288/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FTiffFilePreviewImpl.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FTiffFilePreviewImpl.java?ref=37d4a1b7c44731e2d67b01f769f448b2f824a288",
      "patch": "@@ -49,7 +49,7 @@ public String filePreviewHandle(String url, Model model, FileAttribute fileAttri\n             return TIFF_FILE_PREVIEW_PAGE;\n         } else if (\"jpg\".equalsIgnoreCase(tifPreviewType) || \"pdf\".equalsIgnoreCase(tifPreviewType)) {\n             String pdfName = fileName.substring(0, fileName.lastIndexOf(\".\")) + suffix +\".\" + \"pdf\" ; //\u751f\u6210\u6587\u4ef6\u6dfb\u52a0\u7c7b\u578b\u540e\u7f00 \u9632\u6b62\u540c\u540d\u6587\u4ef6\n-            String jpgName = fileName.substring(0, fileName.lastIndexOf(\".\") + 1) + \"jpg\";\n+            String jpgName = fileName.substring(0, fileName.lastIndexOf(\".\")) + suffix +\".\" + \"jpg\" ; //\u751f\u6210\u6587\u4ef6\u6dfb\u52a0\u7c7b\u578b\u540e\u7f00 \u9632\u6b62\u540c\u540d\u6587\u4ef6\n             String strLocalTif = fileDir + fileName;\n             String outFilePath = fileDir + pdfName;\n             if (\"pdf\".equalsIgnoreCase(tifPreviewType)) {",
      "parent_sha": "98992b3d76c6cfd5c4de5fdcd7d14911e8d467e6"
    }
  },
  {
    "oid": "47860685215371e7244c58aff52bea02ecf53a1c",
    "message": "\u65b0\u589e\u529f\u80fd:\u6dfb\u52a0\u66f4\u65b0\u7f13\u5b58\u65b9\u6cd5&forceUpdatedCache=true\n\u65b0\u589e\u529f\u80fd:\u6dfb\u52a0\u66f4\u65b0\u7f13\u5b58\u65b9\u6cd5&forceUpdatedCache=true\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-04-23T06:15:09Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/47860685215371e7244c58aff52bea02ecf53a1c",
    "details": {
      "sha": "9e02b2c4c67df61f8e0f155b941d2c7634e52fbb",
      "filename": "server/src/main/java/cn/keking/service/FileHandlerService.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/47860685215371e7244c58aff52bea02ecf53a1c/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/47860685215371e7244c58aff52bea02ecf53a1c/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java?ref=47860685215371e7244c58aff52bea02ecf53a1c",
      "patch": "@@ -178,12 +178,12 @@ public void doActionConvertedFile(String outFilePath) {\n      */\n     public List<String> pdf2jpg(String pdfFilePath, String pdfName, String baseUrl, FileAttribute fileAttribute) {\n         List<String> imageUrls = new ArrayList<>();\n-        Integer imageCount = this.getConvertedPdfImage(pdfFilePath);\n+        Integer imageCount = null;\n         String imageFileSuffix = \".jpg\";\n         String pdfFolder = pdfName.substring(0, pdfName.length() - 4);\n         boolean forceUpdatedCache=fileAttribute.forceUpdatedCache();\n-        if (forceUpdatedCache){\n-            imageCount = null;\n+        if (!forceUpdatedCache){\n+            imageCount = this.getConvertedPdfImage(pdfFilePath);\n         }\n         String urlPrefix;\n         try {",
      "parent_sha": "9aeacc6e6769af8643c96de537306a60db00ecd1"
    }
  },
  {
    "oid": "586561ec5ae1fcab5dcc7a8e4374099cffc8a022",
    "message": "fix some typo",
    "date": "2023-07-22T06:33:02Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/586561ec5ae1fcab5dcc7a8e4374099cffc8a022",
    "details": {
      "sha": "d8e4c374b6c43fb79dd29ee976a120c7a1ac162d",
      "filename": "server/src/main/java/cn/keking/config/ConfigConstants.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/586561ec5ae1fcab5dcc7a8e4374099cffc8a022/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fconfig%2FConfigConstants.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/586561ec5ae1fcab5dcc7a8e4374099cffc8a022/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fconfig%2FConfigConstants.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fconfig%2FConfigConstants.java?ref=586561ec5ae1fcab5dcc7a8e4374099cffc8a022",
      "patch": "@@ -524,12 +524,12 @@ public static int getCadThread() {\n     }\n \n     @Value(\"${cad.thread:5}\")\n-    public void setCadThread(int cadthread) {\n-        setCadThreadValue(cadthread);\n+    public void setCadThread(int cadThread) {\n+        setCadThreadValue(cadThread);\n     }\n \n-    public static void setCadThreadValue(int cadthread) {\n-        ConfigConstants.cadThread = cadthread;\n+    public static void setCadThreadValue(int cadThread) {\n+        ConfigConstants.cadThread = cadThread;\n     }\n \n     /**",
      "parent_sha": "cad2d58f44b27dcb806ff591a06a687e1270c5a9"
    }
  },
  {
    "oid": "fb6adf316f3351e6263bd890189bd3f328a6f7c8",
    "message": "\u4f18\u5316\uff1aWindows\u73af\u5883\u4e0b\u6ca1\u6709\u914d\u7f6eoffice.home\uff0c\u67e5\u627eOffice\u7ec4\u4ef6\uff0c\u5185\u7f6e\u7684\u4f18\u5148",
    "date": "2021-07-06T01:44:49Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/fb6adf316f3351e6263bd890189bd3f328a6f7c8",
    "details": {
      "sha": "82738105711d80693bf96f2da3c5c38a0127ec28",
      "filename": "office-plugin/src/main/java/org/artofsolving/jodconverter/office/OfficeUtils.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/fb6adf316f3351e6263bd890189bd3f328a6f7c8/office-plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fartofsolving%2Fjodconverter%2Foffice%2FOfficeUtils.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/fb6adf316f3351e6263bd890189bd3f328a6f7c8/office-plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fartofsolving%2Fjodconverter%2Foffice%2FOfficeUtils.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/office-plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fartofsolving%2Fjodconverter%2Foffice%2FOfficeUtils.java?ref=fb6adf316f3351e6263bd890189bd3f328a6f7c8",
      "patch": "@@ -87,10 +87,10 @@ public static File getDefaultOfficeHome() {\n                 programFiles = System.getenv(\"ProgramFiles\");\n             }\n             return findOfficeHome(\n-                programFiles + File.separator + \"LibreOffice\",\n-                programFiles + File.separator + \"OpenOffice 4\",\n-                programFiles + File.separator + \"LibreOffice 4\",\n-                officePluginPath + File.separator + \"windows-office\"\n+                    officePluginPath + File.separator + \"windows-office\",\n+                    programFiles + File.separator + \"LibreOffice\",\n+                    programFiles + File.separator + \"OpenOffice 4\",\n+                    programFiles + File.separator + \"LibreOffice 4\"\n             );\n         } else if (PlatformUtils.isMac()) {\n             return findOfficeHome(",
      "parent_sha": "0854317cc8a82b6c13cbfebbbeca4f40b4b1179e"
    }
  },
  {
    "oid": "5dbc8a4980ed6659999e27cb30f19648db6e3099",
    "message": "fix FileHandlerService#pdf2jpg npe (github issue #455)",
    "date": "2023-05-12T15:09:57Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/5dbc8a4980ed6659999e27cb30f19648db6e3099",
    "details": {
      "sha": "2c1cdbd20a9012a6e12bac1f02491b29b55e43a9",
      "filename": "server/src/main/java/cn/keking/service/FileHandlerService.java",
      "status": "modified",
      "additions": 10,
      "deletions": 9,
      "changes": 19,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/5dbc8a4980ed6659999e27cb30f19648db6e3099/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/5dbc8a4980ed6659999e27cb30f19648db6e3099/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java?ref=5dbc8a4980ed6659999e27cb30f19648db6e3099",
      "patch": "@@ -47,11 +47,11 @@\n @Component\n public class FileHandlerService {\n \n+    private static final String PDF2JPG_IMAGE_FORMAT = \".jpg\";\n+    private static final String PDF_PASSWORD_MSG = \"password\";\n     private final Logger logger = LoggerFactory.getLogger(FileHandlerService.class);\n     private final String fileDir = ConfigConstants.getFileDir();\n-    private final static String pdf2jpg_image_format = \".jpg\";\n     private final CacheService cacheService;\n-    private static final String pdf_password_msg = \"password\";\n \n     @Value(\"${server.tomcat.uri-encoding:UTF-8}\")\n     private String uriEncoding;\n@@ -193,7 +193,7 @@ private String getPdf2jpgUrl(String pdfName, int index) {\n             logger.error(\"UnsupportedEncodingException\", e);\n             urlPrefix = baseUrl + pdfFolder;\n         }\n-        return urlPrefix + \"/\" + index + pdf2jpg_image_format;\n+        return urlPrefix + \"/\" + index + PDF2JPG_IMAGE_FORMAT;\n     }\n \n     /**\n@@ -252,7 +252,7 @@ public List<String> pdf2jpg(String pdfFilePath, String pdfName, FileAttribute fi\n             }\n             String imageFilePath;\n             for (int pageIndex = 0; pageIndex < pageCount; pageIndex++) {\n-                imageFilePath = folder + File.separator + pageIndex + pdf2jpg_image_format;\n+                imageFilePath = folder + File.separator + pageIndex + PDF2JPG_IMAGE_FORMAT;\n                 BufferedImage image = pdfRenderer.renderImageWithDPI(pageIndex, ConfigConstants.getPdf2JpgDpi(), ImageType.RGB);\n                 ImageIOUtil.writeImage(image, imageFilePath, ConfigConstants.getPdf2JpgDpi());\n                 String imageUrl = this.getPdf2jpgUrl(pdfName, pageIndex);\n@@ -264,24 +264,25 @@ public List<String> pdf2jpg(String pdfFilePath, String pdfName, FileAttribute fi\n                 Throwable[] throwableArray = ExceptionUtils.getThrowables(e);\n                 for (Throwable throwable : throwableArray) {\n                     if (throwable instanceof IOException || throwable instanceof EncryptedDocumentException) {\n-                        if (e.getMessage().toLowerCase().contains(pdf_password_msg)) {\n-                            pdfPassword = pdf_password_msg;\n+                        if (e.getMessage().toLowerCase().contains(PDF_PASSWORD_MSG)) {\n+                            pdfPassword = PDF_PASSWORD_MSG;\n                         }\n                     }\n                 }\n                 logger.error(\"Convert pdf exception, pdfFilePath\uff1a{}\", pdfFilePath, e);\n-            }finally {\n+            } finally {\n                 if (pdfReader != null) {   //\u5173\u95ed\n                     pdfReader.close();\n                 }\n             }\n-            if(!pdfPassword.equals(pdf_password_msg)){  //\u5224\u65ad\u662f\u5426\u52a0\u5bc6\u6587\u4ef6 \u52a0\u5bc6\u6587\u4ef6\u4e0d\u7f13\u5b58\n+            //\u5224\u65ad\u662f\u5426\u52a0\u5bc6\u6587\u4ef6 \u52a0\u5bc6\u6587\u4ef6\u4e0d\u7f13\u5b58\n+            if (PDF_PASSWORD_MSG.equals(pdfPassword)) {\n                 this.addPdf2jpgCache(pdfFilePath, pageCount);\n             }\n         } catch (IOException e) {\n             logger.error(\"Convert pdf to jpg exception, pdfFilePath\uff1a{}\", pdfFilePath, e);\n             throw new Exception(e);\n-        }finally {\n+        } finally {\n             if (doc != null) {   //\u5173\u95ed\n                 doc.close();\n             }",
      "parent_sha": "ad46dd8b5bcc638f792a06d999888cc9cc3b2916"
    }
  },
  {
    "oid": "4cd6a4e4b913c5ea4b77de2abf64e4534b81587e",
    "message": "\u65b0\u589e \u652f\u6301\u538b\u7f29\u5305\u5bc6\u7801 \u4fee\u590dLINUX\u4e0b\u4e2d\u6587\u4e71\u7801 \u89e3\u538b\u652f\u6301\u6587\u4ef6\u76ee\u5f55\n\u65b0\u589e \u652f\u6301\u538b\u7f29\u5305\u5bc6\u7801 \u4fee\u590dLINUX\u4e0b\u4e2d\u6587\u4e71\u7801 \u89e3\u538b\u652f\u6301\u6587\u4ef6\u76ee\u5f55\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-04-08T05:43:02Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/4cd6a4e4b913c5ea4b77de2abf64e4534b81587e",
    "details": {
      "sha": "3aea49f3241052e452ca4349068e73f5aa32a899",
      "filename": "server/src/main/java/cn/keking/web/controller/FileController.java",
      "status": "modified",
      "additions": 7,
      "deletions": 14,
      "changes": 21,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/4cd6a4e4b913c5ea4b77de2abf64e4534b81587e/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FFileController.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/4cd6a4e4b913c5ea4b77de2abf64e4534b81587e/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FFileController.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FFileController.java?ref=4cd6a4e4b913c5ea4b77de2abf64e4534b81587e",
      "patch": "@@ -3,8 +3,8 @@\n import cn.keking.config.ConfigConstants;\n import cn.keking.model.ReturnResponse;\n import cn.keking.utils.KkFileUtils;\n+import cn.keking.utils.RarUtils;\n import cn.keking.utils.WebUtils;\n-import cn.keking.service.CompressFileReader;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.util.ObjectUtils;\n@@ -21,12 +21,7 @@\n import java.io.OutputStream;\n import java.nio.file.Files;\n import java.nio.file.Paths;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Objects;\n+import java.util.*;\n \n /**\n  * @author yudian-it\n@@ -145,7 +140,7 @@ private boolean isAllowedUpload(String file) {\n      */\n     private ReturnResponse<Object> deleteFileCheck(String fileName) {\n         if (ObjectUtils.isEmpty(fileName)) {\n-            return ReturnResponse.failure(\"\u6587\u4ef6\u540d\u4e3a\u7a7a\uff0c\u5220\u9664\u5931\u8d25\uff01\");\n+            return ReturnResponse.failure(\"\u6587\u4ef6\u540d\u4e3a\u7a7a\uff01\");\n         }\n         try {\n             fileName = WebUtils.decodeUrl(fileName);\n@@ -165,20 +160,18 @@ private ReturnResponse<Object> deleteFileCheck(String fileName) {\n \n     @GetMapping(\"/directory\")\n     public Object directory(String urls) {\n-        if (ObjectUtils.isEmpty(urls)) {\n-            return ReturnResponse.failure(\"\u5730\u5740\u4e0d\u5408\u6cd5\uff01\");\n+        ReturnResponse<Object> checkResult = this.deleteFileCheck(urls);\n+        if (checkResult.isFailure()) {\n+            return checkResult;\n         }\n         String fileUrl;\n         try {\n             fileUrl = WebUtils.decodeUrl(urls);\n-            if (fileUrl.toLowerCase().startsWith(\"file:\") || fileUrl.toLowerCase().startsWith(\"file%3\")) {\n-                return ReturnResponse.failure(\"\u5730\u5740\u4e0d\u5408\u6cd5\uff01\");\n-            }\n         } catch (Exception ex) {\n             String errorMsg = String.format(BASE64_DECODE_ERROR_MSG, \"url\");\n             return errorMsg;\n         }\n-        return CompressFileReader.getTree(fileUrl);\n+        return RarUtils.getTree(fileUrl);\n     }\n \n     private boolean existsFile(String fileName) {",
      "parent_sha": "3942346f49bd9ed07e75b98527de00097eb3ad05"
    }
  },
  {
    "oid": "33277bc45763d074a205151eddc32da70bc7d520",
    "message": "\u4fee\u590dTIF\u8f6c\u6362pdf\u95ee\u9898\n\u4fee\u590dTIF\u8f6c\u6362pdf\u95ee\u9898\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-04-03T07:09:30Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/33277bc45763d074a205151eddc32da70bc7d520",
    "details": {
      "sha": "9b5b17cda7db8a35602c0cffe5070589aba7a09b",
      "filename": "server/src/main/java/cn/keking/utils/ConvertPicUtil.java",
      "status": "modified",
      "additions": 45,
      "deletions": 107,
      "changes": 152,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/33277bc45763d074a205151eddc32da70bc7d520/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FConvertPicUtil.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/33277bc45763d074a205151eddc32da70bc7d520/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FConvertPicUtil.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FConvertPicUtil.java?ref=33277bc45763d074a205151eddc32da70bc7d520",
      "patch": "@@ -1,30 +1,32 @@\n package cn.keking.utils;\n \n \n-import com.lowagie.text.Document;\n-import com.lowagie.text.Image;\n-import com.lowagie.text.Rectangle;\n-import com.lowagie.text.pdf.PdfWriter;\n-import com.lowagie.text.pdf.RandomAccessFileOrArray;\n-import com.lowagie.text.pdf.codec.TiffImage;\n+import cn.keking.config.ConfigConstants;\n+\n import com.sun.media.jai.codec.*;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n+import com.itextpdf.text.Document;\n+import com.itextpdf.text.Image;\n+import com.itextpdf.text.io.FileChannelRandomAccessSource;\n+import com.itextpdf.text.pdf.PdfWriter;\n+import com.itextpdf.text.pdf.RandomAccessFileOrArray;\n+import com.itextpdf.text.pdf.codec.TiffImage;\n import javax.media.jai.JAI;\n import javax.media.jai.RenderedOp;\n import java.awt.image.RenderedImage;\n import java.awt.image.renderable.ParameterBlock;\n import java.io.File;\n import java.io.FileOutputStream;\n import java.io.IOException;\n+import java.io.RandomAccessFile;\n import java.util.ArrayList;\n import java.util.List;\n \n public class ConvertPicUtil {\n \n     private final static Logger logger = LoggerFactory.getLogger(ConvertPicUtil.class);\n-\n+    private final static String fileDir = ConfigConstants.getFileDir();\n     /**\n      * Tif \u8f6c  JPG\u3002\n      *\n@@ -42,25 +44,21 @@ public static List<String> convertTif2Jpg(String strInputFile, String strOutputF\n             logger.info(\"\u627e\u4e0d\u5230\u6587\u4ef6\u3010\" + strInputFile + \"\u3011\");\n             return null;\n         }\n-\n         strInputFile = strInputFile.replaceAll(\"\\\\\\\\\", \"/\");\n         strOutputFile = strOutputFile.replaceAll(\"\\\\\\\\\", \"/\");\n-\n         FileSeekableStream fileSeekStream = null;\n         try {\n             JPEGEncodeParam jpegEncodeParam = new JPEGEncodeParam();\n-\n             TIFFEncodeParam tiffEncodeParam = new TIFFEncodeParam();\n             tiffEncodeParam.setCompression(TIFFEncodeParam.COMPRESSION_GROUP4);\n             tiffEncodeParam.setLittleEndian(false);\n-\n-            String strFilePrefix = strInputFile.substring(strInputFile.lastIndexOf(\"/\") + 1, strInputFile.lastIndexOf(\".\"));\n-\n+            String jpgname = strInputFile.replace(fileDir.replace(\"\\\\\",\"/\"), \"\");\n+            int index = jpgname.lastIndexOf(\".\");\n+            String strFilePrefix = jpgname.substring(0, index);\n             fileSeekStream = new FileSeekableStream(strInputFile);\n             ImageDecoder imageDecoder = ImageCodec.createImageDecoder(\"TIFF\", fileSeekStream, null);\n             int intTifCount = imageDecoder.getNumPages();\n             logger.info(\"\u8be5tif\u6587\u4ef6\u5171\u6709\u3010\" + intTifCount + \"\u3011\u9875\");\n-\n             String strJpgPath;\n             String strJpgUrl;\n             if (intTifCount == 1) {\n@@ -87,9 +85,7 @@ public static List<String> convertTif2Jpg(String strInputFile, String strOutputF\n                     strJpg = strJpgPath + \"/\" + i + \".jpg\";\n                     strJpgUrl = strFilePrefix + \"/\" + i + \".jpg\";\n                 }\n-\n                 File fileJpg = new File(strJpg);\n-\n                 // \u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5219\u751f\u6210\n                 if (!fileJpg.exists()) {\n                     RenderedImage renderedImage = imageDecoder.decodeAsRenderedImage(i);\n@@ -98,13 +94,11 @@ public static List<String> convertTif2Jpg(String strInputFile, String strOutputF\n                     pb.add(fileJpg.toString());\n                     pb.add(\"JPEG\");\n                     pb.add(jpegEncodeParam);\n-\n                     RenderedOp renderedOp = JAI.create(\"filestore\", pb);\n                     renderedOp.dispose();\n-\n                     logger.info(\"\u6bcf\u9875\u5206\u522b\u4fdd\u5b58\u81f3\uff1a \" + fileJpg.getCanonicalPath());\n                 } else {\n-                    logger.info(\"JPG\u6587\u4ef6\u5df2\u5b58\u5728\uff1a \" + fileJpg.getCanonicalPath());\n+                  //  logger.info(\"JPG\u6587\u4ef6\u5df2\u5b58\u5728\uff1a \" + fileJpg.getCanonicalPath());\n                 }\n \n                 listImageFiles.add(strJpgUrl);\n@@ -131,101 +125,45 @@ public static List<String> convertTif2Jpg(String strInputFile, String strOutputF\n      * @param strJpgFile \u8f93\u5165\u7684jpg\u7684\u8def\u5f84\u548c\u6587\u4ef6\u540d\n      * @param strPdfFile \u8f93\u51fa\u7684pdf\u7684\u8def\u5f84\u548c\u6587\u4ef6\u540d\n      */\n-    public static void convertJpg2Pdf(String strJpgFile, String strPdfFile) {\n-        Document document = new Document();\n-        // \u8bbe\u7f6e\u6587\u6863\u9875\u8fb9\u8ddd\n-        document.setMargins(0, 0, 0, 0);\n-\n-        FileOutputStream fos = null;\n+    private static final int FIT_WIDTH = 500;\n+    private static final int FIT_HEIGHT = 900;\n+    public static boolean convertJpg2Pdf(String strJpgFile, String strPdfFile) {\n+        Document document= null;\n+        RandomAccessFileOrArray rafa = null;\n         try {\n-            fos = new FileOutputStream(strPdfFile);\n-            PdfWriter.getInstance(document, fos);\n-            // \u6253\u5f00\u6587\u6863\n+            document = new Document();\n+            PdfWriter.getInstance(document,  new FileOutputStream(strPdfFile));\n             document.open();\n-            // \u83b7\u53d6\u56fe\u7247\u7684\u5bbd\u9ad8\n-            Image image = Image.getInstance(strJpgFile);\n-            float floatImageHeight = image.getScaledHeight();\n-            float floatImageWidth = image.getScaledWidth();\n-            // \u8bbe\u7f6e\u9875\u9762\u5bbd\u9ad8\u4e0e\u56fe\u7247\u4e00\u81f4\n-            Rectangle rectangle = new Rectangle(floatImageWidth, floatImageHeight);\n-            document.setPageSize(rectangle);\n-            // \u56fe\u7247\u5c45\u4e2d\n-            image.setAlignment(Image.ALIGN_CENTER);\n-            //\u65b0\u5efa\u4e00\u9875\u6dfb\u52a0\u56fe\u7247\n-            document.newPage();\n-            document.add(image);\n-        } catch (Exception ioe) {\n-            ioe.printStackTrace();\n-        } finally {\n-            //\u5173\u95ed\u6587\u6863\n-            document.close();\n-            try {\n-                assert fos != null;\n-                fos.flush();\n-                fos.close();\n-            } catch (IOException e) {\n-                e.printStackTrace();\n-            }\n-\n-        }\n-    }\n-\n-\n-    /**\n-     * \u5c06Tif\u56fe\u7247\u8f6c\u6362\u4e3aPdf\u6587\u4ef6\uff08\u652f\u6301\u591a\u9875Tif\uff09\n-     *\n-     * @param strTifFile \u8f93\u5165\u7684tif\u7684\u8def\u5f84\u548c\u6587\u4ef6\u540d\n-     * @param strPdfFile \u8f93\u51fa\u7684pdf\u7684\u8def\u5f84\u548c\u6587\u4ef6\u540d\n-     * @return File\n-     */\n-    public static File convertTif2Pdf(String strTifFile, String strPdfFile) {\n-        try {\n-            RandomAccessFileOrArray rafa = new RandomAccessFileOrArray(strTifFile);\n-\n-            Document document = new Document();\n-            // \u8bbe\u7f6e\u6587\u6863\u9875\u8fb9\u8ddd\n-            document.setMargins(0, 0, 0, 0);\n-\n-            PdfWriter.getInstance(document, new FileOutputStream(strPdfFile));\n-            document.open();\n-            int intPages = TiffImage.getNumberOfPages(rafa);\n+            rafa = new RandomAccessFileOrArray(new FileChannelRandomAccessSource(new RandomAccessFile(strJpgFile, \"r\").getChannel()));\n+            int pages = TiffImage.getNumberOfPages(rafa);\n             Image image;\n-            File filePDF;\n-\n-            if (intPages == 1) {\n-                String strJpg = strTifFile.substring(0, strTifFile.lastIndexOf(\".\")) + \".jpg\";\n-                File fileJpg = new File(strJpg);\n-                List<String> listPic2Jpg = convertTif2Jpg(strTifFile, strJpg);\n-\n-                if (listPic2Jpg != null && fileJpg.exists()) {\n-                    convertJpg2Pdf(strJpg, strPdfFile);\n-                }\n-\n-            } else {\n-                for (int i = 1; i <= intPages; i++) {\n+            for (int i = 1; i <= pages; i++) {\n+                try {\n                     image = TiffImage.getTiffImage(rafa, i);\n-                    // \u8bbe\u7f6e\u9875\u9762\u5bbd\u9ad8\u4e0e\u56fe\u7247\u4e00\u81f4\n-                    Rectangle pageSize = new Rectangle(image.getScaledWidth(), image.getScaledHeight());\n-                    document.setPageSize(pageSize);\n-                    // \u56fe\u7247\u5c45\u4e2d\n-                    image.setAlignment(Image.ALIGN_CENTER);\n-                    //\u65b0\u5efa\u4e00\u9875\u6dfb\u52a0\u56fe\u7247\n-                    document.newPage();\n+                    image.scaleToFit(FIT_WIDTH, FIT_HEIGHT);\n                     document.add(image);\n+                } catch (Exception e) {\n+                    document.close();\n+                    rafa.close();\n+                    e.printStackTrace();\n                 }\n-\n-                document.close();\n             }\n-\n+            document.close();\n             rafa.close();\n-\n-            filePDF = new File(strPdfFile);\n-\n-            return filePDF;\n-        } catch (Exception e) {\n-            logger.error(e.getMessage(), e);\n+            return true;\n+        }\n+        catch (Exception e)\n+        {\n+           System.out.println(\"\u9519\u8bef:\"+ e.getMessage());\n         }\n-        return null;\n+        finally {\n+            document.close();\n+            try {\n+                rafa.close();\n+            } catch (IOException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+        return false;\n     }\n-\n }\n\\ No newline at end of file",
      "parent_sha": "f2cfb4cf4a987cdd886f1e1ba67bb0ec3ffded18"
    }
  },
  {
    "oid": "2cd23b06f152656a62a156f1c4c312bce08d65b3",
    "message": " TIF\u8f6c\u6362\u4fee\u6539 1\u8f6c\u6362PDF\u4fdd\u7559\u7f13\u5b58 \u4ee3\u7801\u7cbe\u7b80\u4f18\u5316\n TIF\u8f6c\u6362\u4fee\u6539 1\u8f6c\u6362PDF\u4fdd\u7559\u7f13\u5b58 \u4ee3\u7801\u7cbe\u7b80\u4f18\u5316\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-04-08T06:07:09Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/2cd23b06f152656a62a156f1c4c312bce08d65b3",
    "details": {
      "sha": "5324cbc20616d119b312da2a1bcd181ec522a955",
      "filename": "server/src/main/java/cn/keking/service/impl/TiffFilePreviewImpl.java",
      "status": "modified",
      "additions": 1,
      "deletions": 12,
      "changes": 13,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/2cd23b06f152656a62a156f1c4c312bce08d65b3/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FTiffFilePreviewImpl.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/2cd23b06f152656a62a156f1c4c312bce08d65b3/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FTiffFilePreviewImpl.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FTiffFilePreviewImpl.java?ref=2cd23b06f152656a62a156f1c4c312bce08d65b3",
      "patch": "@@ -7,7 +7,6 @@\n import cn.keking.service.FilePreview;\n import cn.keking.utils.ConvertPicUtil;\n import cn.keking.utils.DownloadUtils;\n-import cn.keking.utils.WebUtils;\n import cn.keking.web.filter.BaseUrlFilter;\n import org.springframework.stereotype.Service;\n import org.springframework.ui.Model;\n@@ -32,12 +31,7 @@ public TiffFilePreviewImpl(FileHandlerService fileHandlerService,OtherFilePrevie\n         this.fileHandlerService = fileHandlerService;\n         this.otherFilePreview = otherFilePreview;\n     }\n-    private static final String INITIALIZE_MEMORY_SIZE = \"initializeMemorySize\";\n-    //\u9ed8\u8ba4\u521d\u59cb\u5316 50MB \u5185\u5b58\n-    private static final long INITIALIZE_MEMORY_SIZE_VALUE_DEFAULT = 1024L * 1024 * 50;\n     private final String fileDir = ConfigConstants.getFileDir();\n-\n-\n     @Override\n     public String filePreviewHandle(String url, Model model, FileAttribute fileAttribute) {\n         String fileName = fileAttribute.getName();\n@@ -48,12 +42,7 @@ public String filePreviewHandle(String url, Model model, FileAttribute fileAttri\n             tifPreviewType = tifOnLinePreviewType;\n         }\n         if (\"tif\".equalsIgnoreCase(tifPreviewType)) {\n-            String fileSize = WebUtils.getUrlParameterReg(url, INITIALIZE_MEMORY_SIZE);\n-            if (StringUtils.hasText(fileSize)) {\n-                model.addAttribute(INITIALIZE_MEMORY_SIZE, fileSize);\n-            } else {\n-                model.addAttribute(INITIALIZE_MEMORY_SIZE, Long.toString(INITIALIZE_MEMORY_SIZE_VALUE_DEFAULT));\n-            }\n+            model.addAttribute(\"currentUrl\", url);\n             return TIFF_FILE_PREVIEW_PAGE;\n         } else if (\"jpg\".equalsIgnoreCase(tifPreviewType) || \"pdf\".equalsIgnoreCase(tifPreviewType)) {\n             String pdfName = fileName.substring(0, fileName.lastIndexOf(\".\") + 1) + \"pdf\";",
      "parent_sha": "75e568e15faf2d5136f64374f71715a8c329b1f1"
    }
  },
  {
    "oid": "8d56923efcc1053324872f45492ecd3937370376",
    "message": "\u4fee\u590d\u7279\u6b8a\u7b26\u53f7 \u8f6c\u4e49\u9519\u8bef\n\u4fee\u590d\u7279\u6b8a\u7b26\u53f7 \u8f6c\u4e49\u9519\u8bef\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-12-19T06:38:27Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/8d56923efcc1053324872f45492ecd3937370376",
    "details": {
      "sha": "424336ef61cdb32a668f82dbdb6a510450df317c",
      "filename": "server/src/main/java/cn/keking/service/FileHandlerService.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/8d56923efcc1053324872f45492ecd3937370376/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/8d56923efcc1053324872f45492ecd3937370376/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java?ref=8d56923efcc1053324872f45492ecd3937370376",
      "patch": "@@ -205,7 +205,7 @@ private String getPdf2jpgUrl(String pdfFilePath, int index) {\n         String pdfFolder = pdfFilePath.substring(0, pdfFilePath.length() - 4);\n         String urlPrefix;\n         try {\n-            urlPrefix = baseUrl + URLEncoder.encode(pdfFolder, uriEncoding).replaceAll(\"\\\\+\", \"%2B\");\n+            urlPrefix = baseUrl + URLEncoder.encode(pdfFolder, uriEncoding).replaceAll(\"\\\\+\", \"%20\");\n         } catch (UnsupportedEncodingException e) {\n             logger.error(\"UnsupportedEncodingException\", e);\n             urlPrefix = baseUrl + pdfFolder;",
      "parent_sha": "a5d29a4e3cdd7c2c5098976efe64baf0092bc307"
    }
  },
  {
    "oid": "d6c083fb5bb951a5cf0dd86720a26065f409933d",
    "message": "\u66f4\u65b0Office\u548cImage\u6587\u4ef6\u7c7b\u578b",
    "date": "2022-12-13T09:04:40Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/d6c083fb5bb951a5cf0dd86720a26065f409933d",
    "details": {
      "sha": "41f96b3c540736f81ee55ae8095b4caf2c54dd7d",
      "filename": "server/src/main/java/cn/keking/model/FileType.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/d6c083fb5bb951a5cf0dd86720a26065f409933d/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fmodel%2FFileType.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/d6c083fb5bb951a5cf0dd86720a26065f409933d/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fmodel%2FFileType.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fmodel%2FFileType.java?ref=d6c083fb5bb951a5cf0dd86720a26065f409933d",
      "patch": "@@ -27,8 +27,8 @@ public enum FileType {\n     OFD(\"ofdFilePreviewImpl\");\n \n \n-    private static final String[] OFFICE_TYPES = {\"docx\", \"wps\", \"doc\", \"xls\", \"xlsx\", \"csv\", \"ppt\", \"pptx\"};\n-    private static final String[] PICTURE_TYPES = {\"jpg\", \"jpeg\", \"png\", \"gif\", \"bmp\", \"ico\", \"raw\"};\n+    private static final String[] OFFICE_TYPES = {\"docx\", \"wps\", \"doc\", \"docm\", \"xls\", \"xlsx\", \"csv\" ,\"xlsm\", \"ppt\", \"pptx\", \"vsd\", \"rtf\", \"odt\", \"wmf\", \"emf\", \"dps\", \"et\", \"ods\", \"ots\", \"tsv\", \"odp\", \"otp\", \"sxi\", \"ott\", \"vsdx\", \"fodt\", \"fods\", \"xltx\",\"tga\",\"psd\"};\n+    private static final String[] PICTURE_TYPES = {\"jpg\", \"jpeg\", \"png\", \"gif\", \"bmp\", \"ico\", \"jfif\", \"webp\"};\n     private static final String[] ARCHIVE_TYPES = {\"rar\", \"zip\", \"jar\", \"7-zip\", \"tar\", \"gzip\", \"7z\"};\n     private static final String[] TIFF_TYPES = {\"tif\", \"tiff\"};\n     private static final String[] OFD_TYPES = {\"ofd\"};",
      "parent_sha": "1dd59cf764d6426c7c46518658b03dde0489438b"
    }
  },
  {
    "oid": "75537be32eeadcb35a882ee3f52f45352c76edcb",
    "message": "perf: \u4fee\u6539\u4e86FilePreviewFactory#get\u65b9\u6cd5\u83b7\u53d6service bean\u7684\u65b9\u5f0f\uff0c\u7531\u539f\u6765\u7684\u5148\u83b7\u53d6\u6240\u6709FilePreview\u7c7b\u578b\u7684bean\u518d\u6839\u636ebean name\u83b7\u53d6bean\u6539\u4e3a\u76f4\u63a5\u6839\u636ebean name\u83b7\u53d6\u5355\u4e2abean",
    "date": "2023-06-06T10:55:21Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/75537be32eeadcb35a882ee3f52f45352c76edcb",
    "details": {
      "sha": "8f234992bd7c6424640e571253ff7283b9e8c013",
      "filename": "server/src/main/java/cn/keking/service/FilePreviewFactory.java",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/75537be32eeadcb35a882ee3f52f45352c76edcb/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFilePreviewFactory.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/75537be32eeadcb35a882ee3f52f45352c76edcb/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFilePreviewFactory.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFilePreviewFactory.java?ref=75537be32eeadcb35a882ee3f52f45352c76edcb",
      "patch": "@@ -4,8 +4,6 @@\n import org.springframework.context.ApplicationContext;\n import org.springframework.stereotype.Service;\n \n-import java.util.Map;\n-\n /**\n  * Created by kl on 2018/1/17.\n  * Content :\n@@ -20,7 +18,6 @@ public FilePreviewFactory(ApplicationContext context) {\n     }\n \n     public FilePreview get(FileAttribute fileAttribute) {\n-        Map<String, FilePreview> filePreviewMap = context.getBeansOfType(FilePreview.class);\n-        return filePreviewMap.get(fileAttribute.getType().getInstanceName());\n+        return context.getBean(fileAttribute.getType().getInstanceName(), FilePreview.class);\n     }\n }",
      "parent_sha": "3f47bb32a0b0bb4bc719cdbf1a48607968e0dc19"
    }
  },
  {
    "oid": "502b21147d89149cd905d234c2a860a3b937d8d1",
    "message": "\u4fee\u590d \u89c6\u9891\u8f6c\u6362\u65b9\u5f0f \u5728\u538b\u7f29\u5305\u91cc\u9762 \u4e0d\u81ea\u52a8\u521b\u5efa\u6587\u4ef6\u8def\u5f84\u800c\u5bfc\u81f4\u7684\u62a5\u9519",
    "date": "2023-10-24T01:42:47Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/502b21147d89149cd905d234c2a860a3b937d8d1",
    "details": {
      "sha": "caf7b5d3e44f2b1a0cb4d3bc99228f9f50a6c0ae",
      "filename": "server/src/main/java/cn/keking/service/impl/MediaFilePreviewImpl.java",
      "status": "modified",
      "additions": 14,
      "deletions": 4,
      "changes": 18,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/502b21147d89149cd905d234c2a860a3b937d8d1/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FMediaFilePreviewImpl.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/502b21147d89149cd905d234c2a860a3b937d8d1/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FMediaFilePreviewImpl.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FMediaFilePreviewImpl.java?ref=502b21147d89149cd905d234c2a860a3b937d8d1",
      "patch": "@@ -38,6 +38,7 @@ public String filePreviewHandle(String url, Model model, FileAttribute fileAttri\n         String cacheName =  fileAttribute.getcacheName();\n         String outFilePath = fileAttribute.getoutFilePath();\n         boolean forceUpdatedCache=fileAttribute.forceUpdatedCache();\n+        String type = fileAttribute.getSuffix();\n         String[] mediaTypesConvert = FileType.MEDIA_TYPES_CONVERT;  //\u83b7\u53d6\u652f\u6301\u7684\u8f6c\u6362\u683c\u5f0f\n         boolean  mediaTypes = false;\n         for(String temp : mediaTypesConvert){\n@@ -58,13 +59,12 @@ public String filePreviewHandle(String url, Model model, FileAttribute fileAttri\n                     if(mediaTypes){\n                         convertedUrl=convertToMp4(filePath,outFilePath);\n                     }else {\n-                        convertedUrl =outFilePath;  //\u4e0d\u662fhttp\u534f\u8bae\u7684  \u4f46\u662f\u4e0d\u662f\u8f6c\u6362\u683c\u5f0f\u7684\u76f4\u63a5\u8f93\u51fa\n+                        convertedUrl =outFilePath;  //\u5176\u4ed6\u534f\u8bae\u7684  \u4e0d\u9700\u8981\u8f6c\u6362\u65b9\u5f0f\u7684\u6587\u4ef6 \u652f\u6301\u8f93\u51fa\n                     }\n                 } catch (Exception e) {\n                     e.printStackTrace();\n                 }\n                 if (convertedUrl == null ) {\n-                    fileHandlerService.addConvertedFile(cacheName, \"error\");  //\u5931\u8d25\u52a0\u5165\u7f13\u5b58\n                     return otherFilePreview.notSupportedFile(model, fileAttribute, \"\u89c6\u9891\u8f6c\u6362\u5f02\u5e38\uff0c\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458\");\n                 }\n                 if (ConfigConstants.isCacheEnabled()) {\n@@ -77,8 +77,11 @@ public String filePreviewHandle(String url, Model model, FileAttribute fileAttri\n             }\n             return MEDIA_FILE_PREVIEW_PAGE;\n         }\n-        model.addAttribute(\"mediaUrl\", url);\n-        return MEDIA_FILE_PREVIEW_PAGE;\n+        if(type.equals(FileType.MEDIA)){  // \u652f\u6301\u8f93\u51fa \u53ea\u9650\u9ed8\u8ba4\u683c\u5f0f\n+            model.addAttribute(\"mediaUrl\", url);\n+            return MEDIA_FILE_PREVIEW_PAGE;\n+        }\n+        return otherFilePreview.notSupportedFile(model, fileAttribute, \"\u7cfb\u7edf\u8fd8\u4e0d\u652f\u6301\u8be5\u683c\u5f0f\u6587\u4ef6\u7684\u5728\u7ebf\u9884\u89c8\");\n     }\n     /**\n      * \u68c0\u67e5\u89c6\u9891\u6587\u4ef6\u8f6c\u6362\u662f\u5426\u5df2\u5f00\u542f\uff0c\u4ee5\u53ca\u5f53\u524d\u6587\u4ef6\u662f\u5426\u9700\u8981\u8f6c\u6362\n@@ -101,6 +104,13 @@ private static String convertToMp4(String filePath,String outFilePath)throws Exc\n             if(desFile.exists()){\n                 return outFilePath;\n             }\n+            int index = outFilePath.lastIndexOf(\".\");\n+            String folder = outFilePath.substring(0, index);\n+            File path = new File(folder);\n+            //\u76ee\u5f55\u4e0d\u5b58\u5728 \u521b\u5efa\u65b0\u7684\u76ee\u5f55\n+            if (!path.exists()) {\n+                path.mkdirs();\n+            }\n             frameGrabber.start();\n             recorder = new FFmpegFrameRecorder(outFilePath, frameGrabber.getImageWidth(), frameGrabber.getImageHeight(), frameGrabber.getAudioChannels());\n             // recorder.setImageHeight(640);",
      "parent_sha": "deb91728d4cb91f5aaa56d1a984115fcbb057844"
    }
  },
  {
    "oid": "e50a664e6423da0652895c131503fbc3390a64db",
    "message": "update server/src/main/java/cn/keking/service/FileHandlerService.java.\n\u4fee\u590dLibreOffice7.4\u4ee5\u4e0a\u7248\u672c \u51fa\u73b0\u4e71\u7801\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-03-15T02:40:32Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/e50a664e6423da0652895c131503fbc3390a64db",
    "details": {
      "sha": "07f89cf02afc9dd14291b6f2f8a5185ce94f4308",
      "filename": "server/src/main/java/cn/keking/service/FileHandlerService.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/e50a664e6423da0652895c131503fbc3390a64db/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/e50a664e6423da0652895c131503fbc3390a64db/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java?ref=e50a664e6423da0652895c131503fbc3390a64db",
      "patch": "@@ -5,13 +5,13 @@\n import cn.keking.model.FileType;\n import cn.keking.service.cache.CacheService;\n import cn.keking.service.cache.NotResourceCache;\n+import cn.keking.utils.EncodingDetects;\n import cn.keking.utils.KkFileUtils;\n import cn.keking.utils.WebUtils;\n import com.aspose.cad.CodePages;\n import com.aspose.cad.Color;\n import com.aspose.cad.Image;\n import com.aspose.cad.LoadOptions;\n-import com.aspose.cad.fileformats.cad.CadDrawTypeMode;\n import com.aspose.cad.imageoptions.CadRasterizationOptions;\n import com.aspose.cad.imageoptions.PdfOptions;\n import org.apache.pdfbox.pdmodel.PDDocument;\n@@ -140,7 +140,7 @@ public void putImgCache(String fileKey, List<String> imgs) {\n      * @param outFilePath \u6587\u4ef6\u7edd\u5bf9\u8def\u5f84\n      */\n     public void doActionConvertedFile(String outFilePath) {\n-         String charset = EncodingDetects.getJavaEncode(outFilePath);\n+        String charset = EncodingDetects.getJavaEncode(outFilePath);\n         StringBuilder sb = new StringBuilder();\n         try (InputStream inputStream = new FileInputStream(outFilePath);\n              BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream, charset))) {\n@@ -286,7 +286,7 @@ public FileAttribute getFileAttribute(String url, HttpServletRequest req) {\n             attribute.setSkipDownLoad(true);\n         }\n         url = WebUtils.encodeUrlFileName(url);\n-       fileName =  KkFileUtils.htmlEscape(fileName);  //\u6587\u4ef6\u540d\u5904\u7406\n+        fileName =  KkFileUtils.htmlEscape(fileName);  //\u6587\u4ef6\u540d\u5904\u7406\n         attribute.setType(type);\n         attribute.setName(fileName);\n         attribute.setSuffix(suffix);",
      "parent_sha": "94503ddc3958a8f437145a5dec509cea2905567c"
    }
  },
  {
    "oid": "da784aea84ad923e2515346c430445ea0d47586a",
    "message": "[fixed] getRelFilePath \u8fd4\u56denull \u5bfc\u81f4KkFileUtils.isAllowedUpload\u7684\u7a7a\u6307\u9488\u5f02\u5e38",
    "date": "2023-08-17T05:56:59Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/da784aea84ad923e2515346c430445ea0d47586a",
    "details": {
      "sha": "93e2c466e36bc91e9c8a3714681433291345c81e",
      "filename": "server/src/main/java/cn/keking/utils/DownloadUtils.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/da784aea84ad923e2515346c430445ea0d47586a/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FDownloadUtils.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/da784aea84ad923e2515346c430445ea0d47586a/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FDownloadUtils.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FDownloadUtils.java?ref=da784aea84ad923e2515346c430445ea0d47586a",
      "patch": "@@ -49,7 +49,7 @@ public static ReturnResponse<String> downLoad(FileAttribute fileAttribute, Strin\n         }\n         ReturnResponse<String> response = new ReturnResponse<>(0, \"\u4e0b\u8f7d\u6210\u529f!!!\", \"\");\n         String realPath = getRelFilePath(fileName, fileAttribute);\n-        if (!KkFileUtils.isAllowedUpload(realPath)) {\n+        if (null == realPath || !KkFileUtils.isAllowedUpload(realPath)) {\n             response.setCode(1);\n             response.setContent(null);\n             response.setMsg(\"\u4e0b\u8f7d\u5931\u8d25:\u4e0d\u652f\u6301\u7684\u7c7b\u578b!\" + urlStr);",
      "parent_sha": "bb3b5b3dffddb00f4dc5d80e9f1fcd83fd54e6dd"
    }
  },
  {
    "oid": "6efe15788c0f227b704b3c3443916c8aae0d3986",
    "message": "!43 \u6c34\u5370\u5176\u4ed6\u5c5e\u6027\u4e0d\u77e5\u9053\u52a8\u6001\u4f20\u5165\u7684\u95ee\u9898\n* \u6c34\u5370\u9664\u6587\u672c\u5916\u5176\u4ed6\u5c5e\u6027\u53ef\u901a\u8fc7url\u52a8\u6001\u4f20\u5165",
    "date": "2022-07-21T06:45:46Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/6efe15788c0f227b704b3c3443916c8aae0d3986",
    "details": {
      "sha": "5ce2926b4ca76d0525cb661d6788ac2e845c988d",
      "filename": "server/src/main/java/cn/keking/web/filter/AttributeSetFilter.java",
      "status": "modified",
      "additions": 18,
      "deletions": 9,
      "changes": 27,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/6efe15788c0f227b704b3c3443916c8aae0d3986/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Ffilter%2FAttributeSetFilter.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/6efe15788c0f227b704b3c3443916c8aae0d3986/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Ffilter%2FAttributeSetFilter.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Ffilter%2FAttributeSetFilter.java?ref=6efe15788c0f227b704b3c3443916c8aae0d3986",
      "patch": "@@ -48,15 +48,24 @@ private void setFileAttribute(ServletRequest request){\n     private void setWatermarkAttribute(ServletRequest request) {\n         String watermarkTxt = request.getParameter(\"watermarkTxt\");\n         request.setAttribute(\"watermarkTxt\", watermarkTxt != null ? watermarkTxt : WatermarkConfigConstants.getWatermarkTxt());\n-        request.setAttribute(\"watermarkXSpace\", WatermarkConfigConstants.getWatermarkXSpace());\n-        request.setAttribute(\"watermarkYSpace\", WatermarkConfigConstants.getWatermarkYSpace());\n-        request.setAttribute(\"watermarkFont\", WatermarkConfigConstants.getWatermarkFont());\n-        request.setAttribute(\"watermarkFontsize\", WatermarkConfigConstants.getWatermarkFontsize());\n-        request.setAttribute(\"watermarkColor\", WatermarkConfigConstants.getWatermarkColor());\n-        request.setAttribute(\"watermarkAlpha\", WatermarkConfigConstants.getWatermarkAlpha());\n-        request.setAttribute(\"watermarkWidth\", WatermarkConfigConstants.getWatermarkWidth());\n-        request.setAttribute(\"watermarkHeight\", WatermarkConfigConstants.getWatermarkHeight());\n-        request.setAttribute(\"watermarkAngle\", WatermarkConfigConstants.getWatermarkAngle());\n+        String watermarkXSpace = request.getParameter(\"watermarkXSpace\");\n+        request.setAttribute(\"watermarkXSpace\", watermarkXSpace != null ? watermarkXSpace : WatermarkConfigConstants.getWatermarkXSpace());\n+        String watermarkYSpace = request.getParameter(\"watermarkYSpace\");\n+        request.setAttribute(\"watermarkYSpace\", watermarkYSpace != null ? watermarkYSpace : WatermarkConfigConstants.getWatermarkYSpace());\n+        String watermarkFont = request.getParameter(\"watermarkFont\");\n+        request.setAttribute(\"watermarkFont\", watermarkFont != null ? watermarkFont : WatermarkConfigConstants.getWatermarkFont());\n+        String watermarkFontsize = request.getParameter(\"watermarkFontsize\");\n+        request.setAttribute(\"watermarkFontsize\", watermarkFontsize != null ? watermarkFontsize : WatermarkConfigConstants.getWatermarkFontsize());\n+        String watermarkColor = request.getParameter(\"watermarkColor\");\n+        request.setAttribute(\"watermarkColor\", watermarkColor != null ? watermarkColor : WatermarkConfigConstants.getWatermarkColor());\n+        String watermarkAlpha = request.getParameter(\"watermarkAlpha\");\n+        request.setAttribute(\"watermarkAlpha\", watermarkAlpha != null ? watermarkAlpha : WatermarkConfigConstants.getWatermarkAlpha());\n+        String watermarkWidth = request.getParameter(\"watermarkWidth\");\n+        request.setAttribute(\"watermarkWidth\", watermarkWidth != null ? watermarkWidth : WatermarkConfigConstants.getWatermarkWidth());\n+        String watermarkHeight = request.getParameter(\"watermarkHeight\");\n+        request.setAttribute(\"watermarkHeight\", watermarkHeight != null ? watermarkHeight : WatermarkConfigConstants.getWatermarkHeight());\n+        String watermarkAngle = request.getParameter(\"watermarkAngle\");\n+        request.setAttribute(\"watermarkAngle\", watermarkAngle != null ? watermarkAngle : WatermarkConfigConstants.getWatermarkAngle());\n     }\n \n     @Override",
      "parent_sha": "3e43c2f9d0b41c4210677e96525c03760cc37eaa"
    }
  },
  {
    "oid": "fb6320a244131e1a45aa92e0116b1f0142dc2435",
    "message": "update server/src/main/java/cn/keking/utils/WebUtils.java.\n\u4f18\u5316\u540e\u53f0 \u63a5\u5165BASE64\u62a5\u9519\u4fe1\u606f\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-07-28T00:56:14Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/fb6320a244131e1a45aa92e0116b1f0142dc2435",
    "details": {
      "sha": "0c8dedb993acd64b4774061ee84562505b4de5bd",
      "filename": "server/src/main/java/cn/keking/utils/WebUtils.java",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/fb6320a244131e1a45aa92e0116b1f0142dc2435/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FWebUtils.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/fb6320a244131e1a45aa92e0116b1f0142dc2435/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FWebUtils.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FWebUtils.java?ref=fb6320a244131e1a45aa92e0116b1f0142dc2435",
      "patch": "@@ -27,7 +27,7 @@\n public class WebUtils {\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(WebUtils.class);\n-\n+    private static final String BASE64_MSG = \"base64\"; \n     /**\n      * \u83b7\u53d6\u6807\u51c6\u7684URL\n      *\n@@ -243,9 +243,14 @@ public static String decodeBase64String(String source, Charset charsets) {\n         try {\n             return new String(Base64Utils.decodeFromString(source.replaceAll(\" \", \"+\").replaceAll(\"\\n\", \"\")), charsets);\n         } catch (Exception e) {\n-            LOGGER.error(\"url\u89e3\u7801\u5f02\u5e38\uff0c\u53ef\u80fd\u662f\u63a5\u5165\u65b9\u6cd5\u9519\u8bef\u6216\u8005\u672a\u4f7f\u7528BASE64\", e);\n+           if (e.getMessage().toLowerCase().contains(BASE64_MSG)) {\n+         LOGGER.error(\"url\u89e3\u7801\u5f02\u5e38\uff0c\u63a5\u5165\u65b9\u6cd5\u9519\u8bef\u672a\u4f7f\u7528BASE64\");\n+        }else {\n+        LOGGER.error(\"url\u89e3\u7801\u5f02\u5e38\uff0c\u5176\u4ed6\u9519\u8bef\", e);\n+          }\n             return null;\n         }\n+        }\n     }\n \n     /**",
      "parent_sha": "3da330341ff41bb66603bcfc1b84d31fa8c381ca"
    }
  },
  {
    "oid": "ace5a1898c85dc66f3fff5dbac4aa3c3bec9d5bc",
    "message": "\u65b0\u589e\u529f\u80fd:\u6dfb\u52a0\u66f4\u65b0\u7f13\u5b58\u65b9\u6cd5&forceUpdatedCache=true\n\u65b0\u589e\u529f\u80fd:\u6dfb\u52a0\u66f4\u65b0\u7f13\u5b58\u65b9\u6cd5&forceUpdatedCache=true\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-04-23T05:54:21Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/ace5a1898c85dc66f3fff5dbac4aa3c3bec9d5bc",
    "details": {
      "sha": "1ac7b69a0e624f4009d4d8f44e201bfe3f492858",
      "filename": "server/src/main/java/cn/keking/service/FileHandlerService.java",
      "status": "modified",
      "additions": 5,
      "deletions": 8,
      "changes": 13,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/ace5a1898c85dc66f3fff5dbac4aa3c3bec9d5bc/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/ace5a1898c85dc66f3fff5dbac4aa3c3bec9d5bc/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java?ref=ace5a1898c85dc66f3fff5dbac4aa3c3bec9d5bc",
      "patch": "@@ -179,14 +179,11 @@ public void doActionConvertedFile(String outFilePath) {\n      */\n     public List<String> pdf2jpg(String pdfFilePath, String pdfName, String baseUrl, FileAttribute fileAttribute) {\n         List<String> imageUrls = new ArrayList<>();\n-        Integer imageCount ;\n+        Integer imageCount = null; ;\n         String imageFileSuffix = \".jpg\";\n         String pdfFolder = pdfName.substring(0, pdfName.length() - 4);\n-        boolean force_updated_cache=fileAttribute.forceUpdatedCache();\n-        String filePassword = fileAttribute.getFilePassword();\n-        if (force_updated_cache){\n-            imageCount = Integer.valueOf(\"0\");\n-        }else {\n+        boolean forceUpdatedCache=fileAttribute.forceUpdatedCache();\n+        if (!forceUpdatedCache){\n             imageCount = this.getConvertedPdfImage(pdfFilePath);\n         }\n         String urlPrefix;\n@@ -207,7 +204,7 @@ public List<String> pdf2jpg(String pdfFilePath, String pdfName, String baseUrl,\n             if (!pdfFile.exists()) {\n                 return null;\n             }\n-            PDDocument doc = PDDocument.load(pdfFile,filePassword);\n+            PDDocument doc = PDDocument.load(pdfFile);\n             doc.setResourceCache(new NotResourceCache());\n             int pageCount = doc.getNumberOfPages();\n             PDFRenderer pdfRenderer = new PDFRenderer(doc);\n@@ -321,7 +318,7 @@ public FileAttribute getFileAttribute(String url, HttpServletRequest req) {\n             if (StringUtils.hasText(fileKey)) {\n                 attribute.setFileKey(fileKey);\n             }\n-            if (StringUtil.isNotBlank(forceUpdatedCache) && \"true\".equalsIgnoreCase(forceUpdatedCache)) {\n+            if ( \"true\".equalsIgnoreCase(forceUpdatedCache)) {\n                 attribute.setforceUpdatedCache(true);\n             }\n ",
      "parent_sha": "832420f469733d821aa5e1cc68d3d17ce1ce60c9"
    }
  },
  {
    "oid": "60b91eb79f74ab1b9cad0c12f42ad5200167e539",
    "message": "\u65b0\u589e \u652f\u6301\u538b\u7f29\u5305\u5bc6\u7801 \u4fee\u590d\u538b\u7f29\u5305LINUX\u4e0b\u4e2d\u6587\u4e71\u7801 \u89e3\u538b\u652f\u6301\u6587\u4ef6\u76ee\u5f55\n\u65b0\u589e \u652f\u6301\u538b\u7f29\u5305\u5bc6\u7801 \u4fee\u590d\u538b\u7f29\u5305LINUX\u4e0b\u4e2d\u6587\u4e71\u7801 \u89e3\u538b\u652f\u6301\u6587\u4ef6\u76ee\u5f55\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-04-08T05:44:52Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/60b91eb79f74ab1b9cad0c12f42ad5200167e539",
    "details": {
      "sha": "c8226942b340d89b035295a751540a625e93f36e",
      "filename": "server/src/main/java/cn/keking/service/CompressFileReader.java",
      "status": "modified",
      "additions": 8,
      "deletions": 122,
      "changes": 130,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/60b91eb79f74ab1b9cad0c12f42ad5200167e539/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FCompressFileReader.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/60b91eb79f74ab1b9cad0c12f42ad5200167e539/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FCompressFileReader.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FCompressFileReader.java?ref=60b91eb79f74ab1b9cad0c12f42ad5200167e539",
      "patch": "@@ -1,6 +1,8 @@\n package cn.keking.service;\n+\n import cn.keking.config.ConfigConstants;\n import cn.keking.model.FileType;\n+import cn.keking.utils.RarUtils;\n import cn.keking.web.filter.BaseUrlFilter;\n import net.sf.sevenzipjbinding.ExtractOperationResult;\n import net.sf.sevenzipjbinding.IInArchive;\n@@ -13,12 +15,9 @@\n import org.springframework.stereotype.Component;\n \n import java.io.*;\n-import java.nio.charset.Charset;\n import java.nio.charset.StandardCharsets;\n import java.util.ArrayList;\n import java.util.List;\n-import java.util.regex.Matcher;\n-import java.util.regex.Pattern;\n \n /**\n  * @author yudian-it\n@@ -30,88 +29,7 @@ public class CompressFileReader {\n     public CompressFileReader(FileHandlerService fileHandlerService) {\n         this.fileHandlerService = fileHandlerService;\n     }\n-    private static final String fileDir = ConfigConstants.getFileDir();\n-    public static byte[] getUTF8BytesFromGBKString(String gbkStr) {\n-        int n = gbkStr.length();\n-        byte[] utfBytes = new byte[3 * n];\n-        int k = 0;\n-        for (int i = 0; i < n; i++) {\n-            int m = gbkStr.charAt(i);\n-            if (m < 128 && m >= 0) {\n-                utfBytes[k++] = (byte) m;\n-                continue;\n-            }\n-            utfBytes[k++] = (byte) (0xe0 | (m >> 12));\n-            utfBytes[k++] = (byte) (0x80 | ((m >> 6) & 0x3f));\n-            utfBytes[k++] = (byte) (0x80 | (m & 0x3f));\n-        }\n-        if (k < utfBytes.length) {\n-            byte[] tmp = new byte[k];\n-            System.arraycopy(utfBytes, 0, tmp, 0, k);\n-            return tmp;\n-        }\n-        return utfBytes;\n-    }\n-\n-    public String getUtf8String(String str) {\n-        if (str != null && str.length() > 0) {\n-            String needEncodeCode = \"ISO-8859-1\";\n-            String neeEncodeCode = \"ISO-8859-2\";\n-            String gbkEncodeCode = \"GBK\";\n-            try {\n-                if (Charset.forName(needEncodeCode).newEncoder().canEncode(str)) {\n-                    str = new String(str.getBytes(needEncodeCode), StandardCharsets.UTF_8);\n-                }\n-                if (Charset.forName(neeEncodeCode).newEncoder().canEncode(str)) {\n-                    str = new String(str.getBytes(neeEncodeCode), StandardCharsets.UTF_8);\n-                }\n-                if (Charset.forName(gbkEncodeCode).newEncoder().canEncode(str)) {\n-                    str = new String(getUTF8BytesFromGBKString(str), StandardCharsets.UTF_8);\n-                }\n-            } catch (UnsupportedEncodingException e) {\n-                e.printStackTrace();\n-            }\n-        }\n-        return str;\n-    }\n-    /**\n-     * \u5224\u65ad\u662f\u5426\u662f\u4e2d\u65e5\u97e9\u6587\u5b57\n-     */\n-    private static boolean isChinese(char c) {\n-        Character.UnicodeBlock ub = Character.UnicodeBlock.of(c);\n-        return ub == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS\n-                || ub == Character.UnicodeBlock.CJK_COMPATIBILITY_IDEOGRAPHS\n-                || ub == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A\n-                || ub == Character.UnicodeBlock.GENERAL_PUNCTUATION\n-                || ub == Character.UnicodeBlock.CJK_SYMBOLS_AND_PUNCTUATION\n-                || ub == Character.UnicodeBlock.HALFWIDTH_AND_FULLWIDTH_FORMS;\n-    }\n-    public static boolean judge(char c){\n-        return (c >= '0' && c <= '9') || (c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z');\n-    }\n-    public static boolean isMessyCode(String strName) {\n-        //\u53bb\u9664\u5b57\u7b26\u4e32\u4e2d\u7684\u7a7a\u683c \u5236\u8868\u7b26 \u6362\u884c \u56de\u8f66\n-        Pattern p = Pattern.compile(\"\\\\s*|\\t*|\\r*|\\n*\");\n-        Matcher m = p.matcher(strName);\n-        String after = m.replaceAll(\"\").replaceAll(\"\\\\+\", \"\").replaceAll(\"#\", \"\").replaceAll(\"&\", \"\");\n-        //\u53bb\u9664\u5b57\u7b26\u4e32\u4e2d\u7684\u6807\u70b9\u7b26\u53f7\n-        String temp = after.replaceAll(\"\\\\p{P}\", \"\");\n-        //\u5904\u7406\u4e4b\u540e\u8f6c\u6362\u6210\u5b57\u7b26\u6570\u7ec4\n-        char[] ch = temp.trim().toCharArray();\n-        for (char c : ch) {\n-            //\u5224\u65ad\u662f\u5426\u662f\u6570\u5b57\u6216\u8005\u82f1\u6587\u5b57\u7b26\n-            if (!judge(c)) {\n-                //\u5224\u65ad\u662f\u5426\u662f\u4e2d\u65e5\u97e9\u6587\n-                if (!isChinese(c)) {\n-                    //\u5982\u679c\u4e0d\u662f\u6570\u5b57\u6216\u8005\u82f1\u6587\u5b57\u7b26\u4e5f\u4e0d\u662f\u4e2d\u65e5\u97e9\u6587\u5219\u8868\u793a\u662f\u4e71\u7801\u8fd4\u56detrue\n-                    return true;\n-                }\n-            }\n-        }\n-        //\u8868\u793a\u4e0d\u662f\u4e71\u7801 \u8fd4\u56defalse\n-        return false;\n-    }\n-    public String unRar(String paths, String passWord, String fileName) {\n+    public String unRar(String paths, String passWord, String fileName) throws Exception {\n         List<String> imgUrls = new ArrayList<>();\n         String baseUrl = BaseUrlFilter.getBaseUrl();\n         String archiveFileName = fileHandlerService.getFileNameFromPath(paths);\n@@ -129,8 +47,8 @@ public String unRar(String paths, String passWord, String fileName) {\n                     ExtractOperationResult result;\n                     result = item.extractSlow(data -> {\n                         try {\n-                             str[0] = getUtf8String(item.getPath());\n-                            if (isMessyCode(str[0])){\n+                             str[0] = RarUtils.getUtf8String(item.getPath());\n+                            if (RarUtils.isMessyCode(str[0])){\n                                 str[0] = new String(item.getPath().getBytes(StandardCharsets.ISO_8859_1), \"gbk\");\n                             }\n                             str[0] = str[0].replace(\"\\\\\",  File.separator); //Linux \u4e0b\u8def\u5f84\u9519\u8bef\n@@ -155,17 +73,13 @@ public String unRar(String paths, String passWord, String fileName) {\n                         }\n                         fileHandlerService.putImgCache(fileName, imgUrls);\n                     } else {\n-                        return \"error\";\n+                        return null;\n                     }\n                 }\n             }\n             return archiveFileName + \"_\";\n         } catch (Exception e) {\n-            String Str1 = String.valueOf(e);\n-            if (Str1.contains(\"Password\")) {\n-                return \"Password\";\n-            }\n-            return null;\n+            throw new Exception(e);\n         } finally {\n             if (inArchive != null) {\n                 try {\n@@ -183,33 +97,5 @@ public String unRar(String paths, String passWord, String fileName) {\n             }\n         }\n     }\n-    /**\n-     * \u8bfb\u53d6\u6587\u4ef6\u76ee\u5f55\u6811\n-     */\n-    public static List<ZtreeNodeVo> getTree(String rootPath) {\n-        List<ZtreeNodeVo> nodes = new ArrayList<>();\n-        File file = new File(fileDir+rootPath);\n-        ZtreeNodeVo node = traverse(file);\n-        nodes.add(node);\n-        return nodes;\n-    }\n-    private static ZtreeNodeVo traverse(File file) {\n-        ZtreeNodeVo pathNodeVo = new ZtreeNodeVo();\n-        pathNodeVo.setId(file.getAbsolutePath().replace(fileDir, \"\").replace(\"\\\\\", \"/\"));\n-        pathNodeVo.setName(file.getName());\n-        pathNodeVo.setPid(file.getParent().replace(fileDir, \"\").replace(\"\\\\\", \"/\"));\n-        if (file.isDirectory()) {\n-            List<ZtreeNodeVo> subNodeVos = new ArrayList<>();\n-            File[] subFiles = file.listFiles();\n-            if (subFiles == null) {\n-                return pathNodeVo;\n-            }\n-            for (File subFile : subFiles) {\n-                ZtreeNodeVo subNodeVo = traverse(subFile);\n-                subNodeVos.add(subNodeVo);\n-            }\n-            pathNodeVo.setChildren(subNodeVos);\n-        }\n-        return pathNodeVo;\n-    }\n+\n }",
      "parent_sha": "dd7a6465aa9e42398bdc64c6f776deb01d556e05"
    }
  },
  {
    "oid": "6183e8c3e59f391e296b1d1686854952d80a94d6",
    "message": "update server/src/main/java/cn/keking/model/FileType.java.\n\u65b0\u589edotm,ett,xlt,xltm,wpt,dot,xlam,xla \u683c\u5f0f\u652f\u6301\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-03-09T08:39:43Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/6183e8c3e59f391e296b1d1686854952d80a94d6",
    "details": {
      "sha": "7c10a458f2989de37f56d1133906e3e5ed713d49",
      "filename": "server/src/main/java/cn/keking/model/FileType.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/6183e8c3e59f391e296b1d1686854952d80a94d6/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fmodel%2FFileType.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/6183e8c3e59f391e296b1d1686854952d80a94d6/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fmodel%2FFileType.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fmodel%2FFileType.java?ref=6183e8c3e59f391e296b1d1686854952d80a94d6",
      "patch": "@@ -31,7 +31,7 @@ public enum FileType {\n     SVG(\"svgFilePreviewImpl\"),\n     Epub(\"epubFilePreviewImpl\");\n \n-    private static final String[] OFFICE_TYPES = {\"docx\", \"wps\", \"doc\", \"docm\", \"xls\", \"xlsx\", \"csv\" ,\"xlsm\", \"ppt\", \"pptx\", \"vsd\", \"rtf\", \"odt\", \"wmf\", \"emf\", \"dps\", \"et\", \"ods\", \"ots\", \"tsv\", \"odp\", \"otp\", \"sxi\", \"ott\", \"vsdx\", \"fodt\", \"fods\", \"xltx\",\"tga\",\"psd\"};\n+    private static final String[] OFFICE_TYPES = {\"docx\", \"wps\", \"doc\", \"docm\", \"xls\", \"xlsx\", \"csv\" ,\"xlsm\", \"ppt\", \"pptx\", \"vsd\", \"rtf\", \"odt\", \"wmf\", \"emf\", \"dps\", \"et\", \"ods\", \"ots\", \"tsv\", \"odp\", \"otp\", \"sxi\", \"ott\", \"vsdx\", \"fodt\", \"fods\", \"xltx\",\"tga\",\"psd\",\"dotm\",\"ett\",\"xlt\",\"xltm\",\"wpt\",\"dot\",\"xlam\",\"xla\"};\n     private static final String[] PICTURE_TYPES = {\"jpg\", \"jpeg\", \"png\", \"gif\", \"bmp\", \"ico\", \"jfif\", \"webp\"};\n     private static final String[] ARCHIVE_TYPES = {\"rar\", \"zip\", \"jar\", \"7-zip\", \"tar\", \"gzip\", \"7z\"};\n     private static final String[] Online3D_TYPES = {\"obj\", \"3ds\", \"stl\", \"ply\", \"off\", \"3dm\", \"fbx\", \"dae\", \"wrl\", \"3mf\", \"ifc\",\"glb\",\"o3dv\",\"gltf\",\"stp\",\"bim\",\"fcstd\",\"step\",\"iges\",\"brep\"};",
      "parent_sha": "cdc146747b83207c33edf9f12b0794ba11898b5a"
    }
  },
  {
    "oid": "031db0b7d5017a350bc778655f79ca7e291c855b",
    "message": "\u4fee\u590dCAD\u6587\u4ef6\u9884\u89c8\u9519\u8bef\n\u4fee\u590dCAD\u6587\u4ef6\u9884\u89c8\u9519\u8bef\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-04-18T03:50:36Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/031db0b7d5017a350bc778655f79ca7e291c855b",
    "details": {
      "sha": "0437d31fd20be4b9c4bca84c24ce492991f5dfda",
      "filename": "server/src/main/java/cn/keking/utils/DownloadUtils.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/031db0b7d5017a350bc778655f79ca7e291c855b/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FDownloadUtils.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/031db0b7d5017a350bc778655f79ca7e291c855b/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FDownloadUtils.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FDownloadUtils.java?ref=031db0b7d5017a350bc778655f79ca7e291c855b",
      "patch": "@@ -49,7 +49,8 @@ public static ReturnResponse<String> downLoad(FileAttribute fileAttribute, Strin\n             logger.error(\"\u5ffd\u7565SSL\u8bc1\u4e66\u5f02\u5e38:\", e);\n         }\n         ReturnResponse<String> response = new ReturnResponse<>(0, \"\u4e0b\u8f7d\u6210\u529f!!!\", \"\");\n-        if (!KkFileUtils.isAllowedUpload(fileName)) {\n+        String realPath = getRelFilePath(fileName, fileAttribute);\n+        if (!KkFileUtils.isAllowedUpload(realPath)) {\n             response.setCode(1);\n             response.setContent(null);\n             response.setMsg(\"\u4e0b\u8f7d\u5931\u8d25:\u4e0d\u652f\u6301\u7684\u7c7b\u578b!\" + urlStr);\n@@ -61,7 +62,6 @@ public static ReturnResponse<String> downLoad(FileAttribute fileAttribute, Strin\n             response.setMsg(fileName);\n             return response;\n         }\n-        String realPath = DownloadUtils.getRelFilePath(fileName, fileAttribute);\n         if(!StringUtils.hasText(realPath)){\n             response.setCode(1);\n             response.setContent(null);",
      "parent_sha": "523623698aded5922cac9cb06a685810b730af71"
    }
  },
  {
    "oid": "f13cccf5a6f3c98d76dab5fec9deb4e8db997bbb",
    "message": "Get the file list sorted in descending order",
    "date": "2023-03-24T05:41:19Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/f13cccf5a6f3c98d76dab5fec9deb4e8db997bbb",
    "details": {
      "sha": "3783da00de223913bf996f452c62ca476e7492d1",
      "filename": "server/src/main/java/cn/keking/web/controller/FileController.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/f13cccf5a6f3c98d76dab5fec9deb4e8db997bbb/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FFileController.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/f13cccf5a6f3c98d76dab5fec9deb4e8db997bbb/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FFileController.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FFileController.java?ref=f13cccf5a6f3c98d76dab5fec9deb4e8db997bbb",
      "patch": "@@ -119,7 +119,9 @@ public List<Map<String, String>> getFiles() {\n         List<Map<String, String>> list = new ArrayList<>();\n         File file = new File(fileDir + demoPath);\n         if (file.exists()) {\n-            Arrays.stream(Objects.requireNonNull(file.listFiles())).forEach(file1 -> {\n+            File[] files = Objects.requireNonNull(file.listFiles());\n+            Arrays.sort(files, (f1, f2) -> Long.compare(f2.lastModified(), f1.lastModified()));\n+            Arrays.stream(files).forEach(file1 -> {\n                 Map<String, String> fileName = new HashMap<>();\n                 fileName.put(\"fileName\", demoDir + \"/\" + file1.getName());\n                 list.add(fileName);",
      "parent_sha": "c355c915f82bd6248fb36c40dd8669c9dbd41888"
    }
  },
  {
    "oid": "6b744d77c7fb1eb64c18cccc7edb0298bc3746b3",
    "message": "\u4fee\u590d\uff1aRocksDB\u7f13\u5b58\u5b9e\u73b0\u538b\u7f29\u5305\u56fe\u7247url\u7f13\u5b58\u5931\u6548",
    "date": "2019-09-10T10:24:06Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/6b744d77c7fb1eb64c18cccc7edb0298bc3746b3",
    "details": {
      "sha": "e7783592811f7c97043ed4f26c772048f878d817",
      "filename": "jodconverter-web/src/main/java/cn/keking/service/cache/impl/CacheServiceRocksDBImpl.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/6b744d77c7fb1eb64c18cccc7edb0298bc3746b3/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fcache%2Fimpl%2FCacheServiceRocksDBImpl.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/6b744d77c7fb1eb64c18cccc7edb0298bc3746b3/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fcache%2Fimpl%2FCacheServiceRocksDBImpl.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fcache%2Fimpl%2FCacheServiceRocksDBImpl.java?ref=6b744d77c7fb1eb64c18cccc7edb0298bc3746b3",
      "patch": "@@ -92,7 +92,7 @@ public void putImgCache(String key, List<String> value) {\n         try {\n             Map<String, List<String>> imgCacheItem = getImgCache();\n             imgCacheItem.put(key, value);\n-            db.put(REDIS_FILE_PREVIEW_PDF_KEY.getBytes(), toByteArray(imgCacheItem));\n+            db.put(REDIS_FILE_PREVIEW_IMGS_KEY.getBytes(), toByteArray(imgCacheItem));\n         } catch (RocksDBException | IOException e) {\n             LOGGER.error(\"Put into RocksDB Exception\" + e);\n         }",
      "parent_sha": "ba57dedebbc4153b39d8e215aaaaf3913ad8fcb8"
    }
  },
  {
    "oid": "378920b7736c5c65f1c165abc2f38db36ecdc5cf",
    "message": "\u89e3\u51b3\u591a\u56fe\u7247\u8f6e\u64ad\u9884\u89c8\u6570\u636e\u91cf\u5927\u7684\u95ee\u9898",
    "date": "2018-03-08T06:28:44Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/378920b7736c5c65f1c165abc2f38db36ecdc5cf",
    "details": {
      "sha": "5d8dbb9531c1768e88756d610c35c43a0c726b11",
      "filename": "jodconverter-web/src/main/java/cn/keking/web/controller/OnlinePreviewController.java",
      "status": "modified",
      "additions": 14,
      "deletions": 1,
      "changes": 15,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/378920b7736c5c65f1c165abc2f38db36ecdc5cf/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FOnlinePreviewController.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/378920b7736c5c65f1c165abc2f38db36ecdc5cf/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FOnlinePreviewController.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fweb%2Fcontroller%2FOnlinePreviewController.java?ref=378920b7736c5c65f1c165abc2f38db36ecdc5cf",
      "patch": "@@ -73,7 +73,20 @@ public String picturesPreview(String urls, String currentUrl, Model model, HttpS\n         return \"picture\";\n     }\n \n-\n+    @RequestMapping(value = \"picturesPreview\", method = RequestMethod.POST)\n+    public String picturesPreview(Model model, HttpServletRequest req) throws UnsupportedEncodingException {\n+        String urls = req.getParameter(\"urls\");\n+        String currentUrl = req.getParameter(\"currentUrl\");\n+        // \u8def\u5f84\u8f6c\u7801\n+        String decodedUrl = URLDecoder.decode(urls, \"utf-8\");\n+        String decodedCurrentUrl = URLDecoder.decode(currentUrl, \"utf-8\");\n+        // \u62bd\u53d6\u6587\u4ef6\u5e76\u8fd4\u56de\u6587\u4ef6\u5217\u8868\n+        String[] imgs = decodedUrl.split(\"\\\\|\");\n+        List imgurls = Arrays.asList(imgs);\n+        model.addAttribute(\"imgurls\", imgurls);\n+        model.addAttribute(\"currentUrl\",decodedCurrentUrl);\n+        return \"picture\";\n+    }\n     /**\n      * \u6839\u636eurl\u83b7\u53d6\u6587\u4ef6\u5185\u5bb9\n      * \u5f53pdfjs\u8bfb\u53d6\u5b58\u5728\u8de8\u57df\u95ee\u9898\u7684\u6587\u4ef6\u65f6\u5c06\u901a\u8fc7\u6b64\u63a5\u53e3\u8bfb\u53d6",
      "parent_sha": "c78bf0605d2f8dd45ce74d1a32149e3339108fdc"
    }
  },
  {
    "oid": "e0cc2b6a01c97b68e3ca25398174b168b0e5766a",
    "message": "\u4fee\u590doffice\u6587\u4ef6\u5bc6\u7801\u5224\u65ad",
    "date": "2022-12-28T05:35:34Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/e0cc2b6a01c97b68e3ca25398174b168b0e5766a",
    "details": {
      "sha": "0131178d53713dcb07ad5ca55d1e2bd70c9498fb",
      "filename": "server/src/main/java/cn/keking/utils/OfficeUtils.java",
      "status": "modified",
      "additions": 12,
      "deletions": 7,
      "changes": 19,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/e0cc2b6a01c97b68e3ca25398174b168b0e5766a/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FOfficeUtils.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/e0cc2b6a01c97b68e3ca25398174b168b0e5766a/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FOfficeUtils.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FOfficeUtils.java?ref=e0cc2b6a01c97b68e3ca25398174b168b0e5766a",
      "patch": "@@ -1,12 +1,13 @@\n package cn.keking.utils;\n \n import org.apache.commons.lang3.exception.ExceptionUtils;\n-import org.apache.poi.EncryptedDocumentException;\n import org.apache.poi.extractor.ExtractorFactory;\n import org.apache.poi.hssf.record.crypto.Biff8EncryptionKey;\n import org.springframework.lang.Nullable;\n \n-import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n \n /**\n  * Office\u5de5\u5177\u7c7b\n@@ -16,6 +17,8 @@\n  */\n public class OfficeUtils {\n \n+    private static final String POI_INVALID_PASSWORD_MSG = \"Invalid password specified\";\n+\n     /**\n      * \u5224\u65adoffice\uff08word,excel,ppt\uff09\u6587\u4ef6\u662f\u5426\u53d7\u5bc6\u7801\u4fdd\u62a4\n      *\n@@ -24,13 +27,15 @@ public class OfficeUtils {\n      */\n     public static boolean isPwdProtected(String path) {\n         try {\n-            ExtractorFactory.createExtractor(new FileInputStream(path));\n-        } catch (EncryptedDocumentException e) {\n-            return true;\n+            ExtractorFactory.createExtractor(Files.newInputStream(Paths.get(path)));\n+        } catch (IOException e) {\n+            if (POI_INVALID_PASSWORD_MSG.equals(e.getMessage())) {\n+                return true;\n+            }\n         } catch (Exception e) {\n             Throwable[] throwableArray = ExceptionUtils.getThrowables(e);\n             for (Throwable throwable : throwableArray) {\n-                if (throwable instanceof EncryptedDocumentException) {\n+                if (throwable instanceof IOException && POI_INVALID_PASSWORD_MSG.equals(throwable.getMessage())) {\n                     return true;\n                 }\n             }\n@@ -48,7 +53,7 @@ public static boolean isPwdProtected(String path) {\n     public static synchronized boolean isCompatible(String path, @Nullable String password) {\n         try {\n             Biff8EncryptionKey.setCurrentUserPassword(password);\n-            ExtractorFactory.createExtractor(new FileInputStream(path));\n+            ExtractorFactory.createExtractor(Files.newInputStream(Paths.get(path)));\n         } catch (Exception e) {\n             return false;\n         } finally {",
      "parent_sha": "2184264831eff4cf66c8845c546774e00e391b11"
    }
  },
  {
    "oid": "350fbb3361112daac80f4bb9ed926d6512734007",
    "message": "\u89c4\u8303\u547d\u540d\u89c4\u5219\n\u89c4\u8303\u547d\u540d\u89c4\u5219\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-04-27T09:33:31Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/350fbb3361112daac80f4bb9ed926d6512734007",
    "details": {
      "sha": "19a5aa84fbb7cfe259ac5b8d02ca1ac87330cfe5",
      "filename": "server/src/main/java/cn/keking/config/ConfigConstants.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/350fbb3361112daac80f4bb9ed926d6512734007/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fconfig%2FConfigConstants.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/350fbb3361112daac80f4bb9ed926d6512734007/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fconfig%2FConfigConstants.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fconfig%2FConfigConstants.java?ref=350fbb3361112daac80f4bb9ed926d6512734007",
      "patch": "@@ -72,7 +72,7 @@ public class ConfigConstants {\n     public static final String DEFAULT_size_DISABLE = \"500MB\";\n     public static final String DEFAULT_prohibit_DISABLE = \"exe,dll\";\n     public static final String DEFAULT_password_DISABLE = \"123456\";\n-    public static final String DEFAULT_PDF2_JPG_DPI_SIZE_DISABLE = \"105\";\n+    public static final String DEFAULT_PDF2_JPG_DPI_DISABLE = \"105\";\n     public static final String DEFAULT_Delete_Source_File_PREVIEW_TYPE = \"true\";\n \n     public static Boolean isCacheEnabled() {",
      "parent_sha": "d18677b9edcaeb30466c95416bbb66809b2b6d8a"
    }
  },
  {
    "oid": "b3b2f7c407dbdebaf662c9e1d51b2aba0927e5c2",
    "message": "\u4fee\u590d\uff1adwg\u6587\u4ef6\u9884\u89c8\u65f6\u65e0\u6cd5\u5728jpg\u548cpdf\u4e24\u79cd\u7c7b\u578b\u4e4b\u95f4\u5207\u6362",
    "date": "2021-01-21T07:47:13Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/b3b2f7c407dbdebaf662c9e1d51b2aba0927e5c2",
    "details": {
      "sha": "6489f58b614f1787572361aeea6695e2d101f6fd",
      "filename": "server/src/main/java/cn/keking/service/impl/CadFilePreviewImpl.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/b3b2f7c407dbdebaf662c9e1d51b2aba0927e5c2/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FCadFilePreviewImpl.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/b3b2f7c407dbdebaf662c9e1d51b2aba0927e5c2/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FCadFilePreviewImpl.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FCadFilePreviewImpl.java?ref=b3b2f7c407dbdebaf662c9e1d51b2aba0927e5c2",
      "patch": "@@ -35,7 +35,7 @@ public CadFilePreviewImpl(FileHandlerService fileHandlerService, OtherFilePrevie\n     @Override\n     public String filePreviewHandle(String url, Model model, FileAttribute fileAttribute) {\n         // \u9884\u89c8Type\uff0c\u53c2\u6570\u4f20\u4e86\u5c31\u53d6\u53c2\u6570\u7684\uff0c\u6ca1\u4f20\u53d6\u7cfb\u7edf\u9ed8\u8ba4\n-        String officePreviewType = model.asMap().get(\"officePreviewType\") == null ? ConfigConstants.getOfficePreviewType() : model.asMap().get(\"officePreviewType\").toString();\n+        String officePreviewType = fileAttribute.getOfficePreviewType() == null ? ConfigConstants.getOfficePreviewType() : fileAttribute.getOfficePreviewType();\n         String baseUrl = BaseUrlFilter.getBaseUrl();\n         String fileName = fileAttribute.getName();\n         String pdfName = fileName.substring(0, fileName.lastIndexOf(\".\") + 1) + \"pdf\";",
      "parent_sha": "f1ad3d44ff5a6e05003132356e05d070256eacae"
    }
  },
  {
    "oid": "3e08deb50e08921285faf39e5b885b3df6fa7e29",
    "message": "fix: \u5c06\u89e3\u51b3\u5e76\u53d1\u95ee\u9898\u7684\u65b9\u5f0f\u7531\u9501\u6539\u4e3a\u5c40\u90e8\u53d8\u91cf",
    "date": "2023-10-07T04:48:02Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/3e08deb50e08921285faf39e5b885b3df6fa7e29",
    "details": {
      "sha": "3ef4ad9e2064ac9033044cba21e784e1dcc868e8",
      "filename": "server/src/main/java/cn/keking/utils/EncodingDetects.java",
      "status": "modified",
      "additions": 4,
      "deletions": 8,
      "changes": 12,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/3e08deb50e08921285faf39e5b885b3df6fa7e29/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FEncodingDetects.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/3e08deb50e08921285faf39e5b885b3df6fa7e29/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FEncodingDetects.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FEncodingDetects.java?ref=3e08deb50e08921285faf39e5b885b3df6fa7e29",
      "patch": "@@ -16,7 +16,6 @@\n  * @description: \u81ea\u52a8\u83b7\u53d6\u6587\u4ef6\u7684\u7f16\u7801\n  */\n public class EncodingDetects {\n-    private static UniversalDetector detector = new UniversalDetector(null);\n     private static final int DEFAULT_LENGTH = 4096;\n     private static final int LIMIT = 50;\n     private static final Logger logger = LoggerFactory.getLogger(EncodingDetects.class);\n@@ -40,13 +39,10 @@ public static String getJavaEncode(byte[] content) {\n         if (content != null && content.length <= LIMIT) {\n             return SimpleEncodingDetects.getJavaEncode(content);\n         }\n-        String charsetName;\n-        synchronized (EncodingDetects.class) {\n-            detector.reset();\n-            detector.handleData(content, 0, content.length);\n-            detector.dataEnd();\n-            charsetName = detector.getDetectedCharset();\n-        }\n+        UniversalDetector detector = new UniversalDetector(null);\n+        detector.handleData(content, 0, content.length);\n+        detector.dataEnd();\n+        String charsetName = detector.getDetectedCharset();\n         if (charsetName == null) {\n             charsetName = Charset.defaultCharset().name();\n         }",
      "parent_sha": "42cf6b29550a2958605edf6bcb90fc85bb0263e9"
    }
  },
  {
    "oid": "6d3f9e7cfc2df0e72ae2d062fd4fbc076995f2b3",
    "message": "update server/src/main/java/cn/keking/service/impl/OfficeFilePreviewImpl.java.\n\u89c4\u8303\u8f6c\u6362\u683c\u5f0f\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-03-21T06:02:40Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/6d3f9e7cfc2df0e72ae2d062fd4fbc076995f2b3",
    "details": {
      "sha": "751eaf888c4ebb705f45f67c00544aebb6305a19",
      "filename": "server/src/main/java/cn/keking/service/impl/OfficeFilePreviewImpl.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/6d3f9e7cfc2df0e72ae2d062fd4fbc076995f2b3/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FOfficeFilePreviewImpl.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/6d3f9e7cfc2df0e72ae2d062fd4fbc076995f2b3/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FOfficeFilePreviewImpl.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FOfficeFilePreviewImpl.java?ref=6d3f9e7cfc2df0e72ae2d062fd4fbc076995f2b3",
      "patch": "@@ -47,7 +47,7 @@ public String filePreviewHandle(String url, Model model, FileAttribute fileAttri\n         String fileName = fileAttribute.getName();\n         String filePassword = fileAttribute.getFilePassword();\n         String userToken = fileAttribute.getUserToken();\n-        boolean isHtml = suffix.equalsIgnoreCase(\"xls\") || suffix.equalsIgnoreCase(\"xlsx\") || suffix.equalsIgnoreCase(\"csv\");\n+         boolean isHtml = suffix.equalsIgnoreCase(\"xls\") || suffix.equalsIgnoreCase(\"xlsx\") || suffix.equalsIgnoreCase(\"csv\") || suffix.equalsIgnoreCase(\"xlsm\") || suffix.equalsIgnoreCase(\"xlt\") || suffix.equalsIgnoreCase(\"xltm\") || suffix.equalsIgnoreCase(\"et\") || suffix.equalsIgnoreCase(\"ett\") || suffix.equalsIgnoreCase(\"xlam\");\n         String pdfName = fileName.substring(0, fileName.lastIndexOf(\".\") + 1) + (isHtml ? \"html\" : \"pdf\");\n         String cacheFileName = userToken == null ? pdfName : userToken + \"_\" + pdfName;\n         String outFilePath = FILE_DIR + cacheFileName;",
      "parent_sha": "60d9ef7069d1a7980114718fba24a17aadd1a2d8"
    }
  },
  {
    "oid": "11d6ad1ed3fbc1a2d856936aed33b89e42865540",
    "message": "\u4fee\u590d\u6587\u4ef6\u4e0b\u8f7d\u6d41URL\u53c2\u6570\u4e2d\u5305\u542b\u4e2d\u6587URL\u7f16\u7801\u4e0d\u6b63\u786e\u5bfc\u81f4HTTP-400\u5f02\u5e38",
    "date": "2019-07-09T02:46:21Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/11d6ad1ed3fbc1a2d856936aed33b89e42865540",
    "details": {
      "sha": "8634ead9ee3fe5c2196a266c7ebd4b3b2b75e046",
      "filename": "jodconverter-web/src/main/java/cn/keking/utils/DownloadUtils.java",
      "status": "modified",
      "additions": 25,
      "deletions": 20,
      "changes": 45,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/11d6ad1ed3fbc1a2d856936aed33b89e42865540/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FDownloadUtils.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/11d6ad1ed3fbc1a2d856936aed33b89e42865540/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FDownloadUtils.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FDownloadUtils.java?ref=11d6ad1ed3fbc1a2d856936aed33b89e42865540",
      "patch": "@@ -123,30 +123,35 @@ private String replacePlusMark(String urlAddress) {\n      * \u5bf9\u6700\u6709\u4e00\u4e2a\u8def\u5f84\u8fdb\u884c\u8f6c\u7801\n      * @param urlAddress\n      *          http://192.168.2.111:8013/demo/Handle\u4e2d\u6587.zip\n+     *          http://192.168.2.111:8013/download?id=1&filename=\u4e2d\u6587.zip\n      * @return\n      */\n-    private String encodeUrlParam(String urlAddress) {\n-        String newUrl = \"\";\n-        try {\n-            String path = \"\";\n-            String param = \"\";\n-            if (urlAddress.contains(\"?\")) {\n-                path = urlAddress.substring(0, urlAddress.indexOf(\"?\"));\n-                param = urlAddress.substring(urlAddress.indexOf(\"?\"));\n-            }else {\n-                path = urlAddress;\n-            }\n-            String lastPath = path.substring(path.lastIndexOf(\"/\") + 1);\n-            String leftPath = path.substring(0, path.lastIndexOf(\"/\") + 1);\n-            String encodeLastPath = URLEncoder.encode(lastPath, \"UTF-8\");\n-            newUrl += leftPath + encodeLastPath;\n-            if (urlAddress.contains(\"?\")) {\n-                newUrl += param;\n+\n+    private String encodeUrlParam(String urlAddress){\n+        StringBuffer sb = new StringBuffer();\n+        for (int i = 0; i < urlAddress.length(); i++) {\n+            char c = urlAddress.charAt(i);\n+            if (c >= 0 && c <= 255) {\n+                sb.append(c);\n+            } else {\n+                byte[] b;\n+                try {\n+                    //\u6307\u5b9a\u9700\u8981\u7684\u7f16\u7801\u7c7b\u578b\n+                    b = String.valueOf(c).getBytes(\"utf-8\");\n+                } catch (Exception ex) {\n+                    System.out.println(ex);\n+                    b = new byte[0];\n+                }\n+                for (int j = 0; j < b.length; j++) {\n+                    int k = b[j];\n+                    if (k < 0) {\n+                        k += 256;\n+                    }\n+                    sb.append(\"%\" + Integer.toHexString(k).toUpperCase());\n+                }\n             }\n-        } catch (UnsupportedEncodingException e) {\n-            e.printStackTrace();\n         }\n-        return newUrl;\n+        return sb.toString();\n     }\n \n ",
      "parent_sha": "e57db6925c7d6c376afb87df53d71e36084b9c05"
    }
  },
  {
    "oid": "ed1d49782f3a5f33e56a4102b7164c8f02975d2d",
    "message": "fix issue https://t.zsxq.com/0fpHww4Gy",
    "date": "2023-06-29T03:12:20Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/ed1d49782f3a5f33e56a4102b7164c8f02975d2d",
    "details": {
      "sha": "9249c2930fa576c053b400de7e3f8f03d37d3d97",
      "filename": "server/src/main/java/cn/keking/service/FileHandlerService.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/ed1d49782f3a5f33e56a4102b7164c8f02975d2d/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/ed1d49782f3a5f33e56a4102b7164c8f02975d2d/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java?ref=ed1d49782f3a5f33e56a4102b7164c8f02975d2d",
      "patch": "@@ -357,9 +357,9 @@ public FileAttribute getFileAttribute(String url, HttpServletRequest req) {\n             suffix = KkFileUtils.suffixFromFileName(fullFileName);\n             // \u79fb\u9664fullfilename\u53c2\u6570\n             if (url.indexOf(\"fullfilename=\" + fullFileName + \"&\") > 0) {\n-                url.replace(\"fullfilename=\" + fullFileName + \"&\", \"\");\n+                url = url.replace(\"fullfilename=\" + fullFileName + \"&\", \"\");\n             } else {\n-                url.replace(\"fullfilename=\" + fullFileName, \"\");\n+                url = url.replace(\"fullfilename=\" + fullFileName, \"\");\n             }\n         } else {\n             fileName = WebUtils.getFileNameFromURL(url);",
      "parent_sha": "2e9062d3776c31756f2c15555ca8f3494cc1fe73"
    }
  },
  {
    "oid": "845cb2e6577f9b65217b2d51638594e551a2b6ba",
    "message": "\u4fee\u590d\uff1a\u53c2\u6570\u5305\u542b\u7279\u6b8a\u5b57\u7b26\u65f6url\u89e3\u7801\u5931\u8d25",
    "date": "2019-10-25T07:16:25Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/845cb2e6577f9b65217b2d51638594e551a2b6ba",
    "details": {
      "sha": "4c26335ee0dac7847b961e9aacd68b96bc16afbf",
      "filename": "jodconverter-web/src/main/java/cn/keking/utils/FileUtils.java",
      "status": "modified",
      "additions": 3,
      "deletions": 11,
      "changes": 14,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/845cb2e6577f9b65217b2d51638594e551a2b6ba/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FFileUtils.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/845cb2e6577f9b65217b2d51638594e551a2b6ba/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FFileUtils.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FFileUtils.java?ref=845cb2e6577f9b65217b2d51638594e551a2b6ba",
      "patch": "@@ -12,7 +12,6 @@\n import org.springframework.util.StringUtils;\n \n import java.io.*;\n-import java.net.URLDecoder;\n import java.nio.charset.Charset;\n import java.util.Arrays;\n import java.util.HashMap;\n@@ -328,26 +327,19 @@ private String truncateUrlPage(String strURL) {\n \n \n     public FileAttribute getFileAttribute(String url) {\n-        String decodedUrl = null;\n-        try {\n-            decodedUrl = URLDecoder.decode(url, \"utf-8\");\n-        } catch (UnsupportedEncodingException e){\n-            log.error(\"url\u89e3\u7801\u5931\u8d25\");\n-        }\n         String fileName;\n         FileType type;\n         String suffix;\n-\n-        String fullFileName = getUrlParameterReg(decodedUrl, \"fullfilename\");\n+        String fullFileName = getUrlParameterReg(url, \"fullfilename\");\n         if (!StringUtils.isEmpty(fullFileName)) {\n             fileName = fullFileName;\n             type = typeFromFileName(fileName);\n             suffix = suffixFromFileName(fileName);\n         } else {\n-            fileName = getFileNameFromURL(decodedUrl);\n+            fileName = getFileNameFromURL(url);\n             type = typeFromUrl(url);\n             suffix = suffixFromUrl(url);\n         }\n-        return new FileAttribute(type,suffix,fileName,url,decodedUrl);\n+        return new FileAttribute(type,suffix,fileName,url,url);\n     }\n }",
      "parent_sha": "a4bfde68bdd368f3a4c015acae910c16a773fc11"
    }
  },
  {
    "oid": "d8146f04955a014b40b65120d053320e8d2cbaf8",
    "message": "[fixed] getRelFilePath \u8fd4\u56denull \u5bfc\u81f4KkFileUtils.isAllowedUpload\u7684\u7a7a\u6307\u9488\u5f02\u5e38",
    "date": "2023-08-21T06:44:20Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/d8146f04955a014b40b65120d053320e8d2cbaf8",
    "details": {
      "sha": "58f2da7db29f91377b90a5ea4ac9d2687892e309",
      "filename": "server/src/main/java/cn/keking/utils/DownloadUtils.java",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/d8146f04955a014b40b65120d053320e8d2cbaf8/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FDownloadUtils.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/d8146f04955a014b40b65120d053320e8d2cbaf8/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FDownloadUtils.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Futils%2FDownloadUtils.java?ref=d8146f04955a014b40b65120d053320e8d2cbaf8",
      "patch": "@@ -49,7 +49,13 @@ public static ReturnResponse<String> downLoad(FileAttribute fileAttribute, Strin\n         }\n         ReturnResponse<String> response = new ReturnResponse<>(0, \"\u4e0b\u8f7d\u6210\u529f!!!\", \"\");\n         String realPath = getRelFilePath(fileName, fileAttribute);\n-        if (null == realPath || !KkFileUtils.isAllowedUpload(realPath)) {\n+        if(!StringUtils.hasText(realPath)){\n+            response.setCode(1);\n+            response.setContent(null);\n+            response.setMsg(\"\u4e0b\u8f7d\u5931\u8d25:\u6587\u4ef6\u540d\u4e0d\u5408\u6cd5!\" + urlStr);\n+            return response;\n+        }\n+        if (!KkFileUtils.isAllowedUpload(realPath)) {\n             response.setCode(1);\n             response.setContent(null);\n             response.setMsg(\"\u4e0b\u8f7d\u5931\u8d25:\u4e0d\u652f\u6301\u7684\u7c7b\u578b!\" + urlStr);\n@@ -61,12 +67,6 @@ public static ReturnResponse<String> downLoad(FileAttribute fileAttribute, Strin\n             response.setMsg(fileName);\n             return response;\n         }\n-        if(!StringUtils.hasText(realPath)){\n-            response.setCode(1);\n-            response.setContent(null);\n-            response.setMsg(\"\u4e0b\u8f7d\u5931\u8d25:\u6587\u4ef6\u540d\u4e0d\u5408\u6cd5!\" + urlStr);\n-            return response;\n-        }\n         if(realPath.equals(\"cunzhai\")){\n             response.setContent(fileDir + fileName);\n             response.setMsg(fileName);",
      "parent_sha": "da784aea84ad923e2515346c430445ea0d47586a"
    }
  },
  {
    "oid": "978aa0dd6844e8d2915a6012da038ad529bdb8de",
    "message": "\u4fee\u6539csv\u547d\u540d\u89c4\u8303\n\u4fee\u6539csv\u547d\u540d\u89c4\u8303\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-09-07T02:31:23Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/978aa0dd6844e8d2915a6012da038ad529bdb8de",
    "details": {
      "sha": "82b1191f5998d4dc46784945df11c0a839bd1f16",
      "filename": "server/src/main/java/cn/keking/service/impl/OfficeFilePreviewImpl.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/978aa0dd6844e8d2915a6012da038ad529bdb8de/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FOfficeFilePreviewImpl.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/978aa0dd6844e8d2915a6012da038ad529bdb8de/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FOfficeFilePreviewImpl.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FOfficeFilePreviewImpl.java?ref=978aa0dd6844e8d2915a6012da038ad529bdb8de",
      "patch": "@@ -64,7 +64,7 @@ public String filePreviewHandle(String url, Model model, FileAttribute fileAttri\n                     return XLSX_FILE_PREVIEW_PAGE;\n                 }\n                 if (suffix.equalsIgnoreCase(\"csv\")) {\n-                    model.addAttribute(\"pdfUrl\", KkFileUtils.htmlEscape(url));\n+                    model.addAttribute(\"csvUrl\", KkFileUtils.htmlEscape(url));\n                     return CSV_FILE_PREVIEW_PAGE;\n                 }\n             }",
      "parent_sha": "14ecf66c70a785ef23405e3876ea919f0ef7f2a4"
    }
  },
  {
    "oid": "900389160fd0b05020de9576d3321a6d82016908",
    "message": "\u4f18\u5316PDF\u52a0\u5bc6\u6587\u4ef6\u7f13\u5b58\u65b9\u6cd5\n\u4f18\u5316PDF\u52a0\u5bc6\u6587\u4ef6\u7f13\u5b58\u65b9\u6cd5\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-05-12T01:24:10Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/900389160fd0b05020de9576d3321a6d82016908",
    "details": {
      "sha": "9c3080f0a42b1870f3988a3d4741beb55d49d942",
      "filename": "server/src/main/java/cn/keking/service/FileHandlerService.java",
      "status": "modified",
      "additions": 18,
      "deletions": 8,
      "changes": 26,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/900389160fd0b05020de9576d3321a6d82016908/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/900389160fd0b05020de9576d3321a6d82016908/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2FFileHandlerService.java?ref=900389160fd0b05020de9576d3321a6d82016908",
      "patch": "@@ -15,12 +15,13 @@\n import com.aspose.cad.LoadOptions;\n import com.aspose.cad.imageoptions.CadRasterizationOptions;\n import com.aspose.cad.imageoptions.PdfOptions;\n-import com.itextpdf.text.exceptions.BadPasswordException;\n import com.itextpdf.text.pdf.PdfReader;\n+import org.apache.commons.lang3.exception.ExceptionUtils;\n import org.apache.pdfbox.pdmodel.PDDocument;\n import org.apache.pdfbox.rendering.ImageType;\n import org.apache.pdfbox.rendering.PDFRenderer;\n import org.apache.pdfbox.tools.imageio.ImageIOUtil;\n+import org.apache.poi.EncryptedDocumentException;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Value;\n@@ -50,6 +51,7 @@ public class FileHandlerService {\n     private final String fileDir = ConfigConstants.getFileDir();\n     private final static String pdf2jpg_image_format = \".jpg\";\n     private final CacheService cacheService;\n+    private static final String pdf_password_msg = \"password\";\n \n     @Value(\"${server.tomcat.uri-encoding:UTF-8}\")\n     private String uriEncoding;\n@@ -223,6 +225,7 @@ private List<String> loadPdf2jpgCache(String pdfFilePath, String pdfName) {\n     public List<String> pdf2jpg(String pdfFilePath, String pdfName, FileAttribute fileAttribute) throws Exception {\n         boolean forceUpdatedCache = fileAttribute.forceUpdatedCache();\n         String filePassword = fileAttribute.getFilePassword();\n+        String pdfPassword = null;\n         PDDocument doc = null;\n         PdfReader pdfReader = null;\n         if (!forceUpdatedCache) {\n@@ -256,18 +259,25 @@ public List<String> pdf2jpg(String pdfFilePath, String pdfName, FileAttribute fi\n                 imageUrls.add(imageUrl);\n             }\n             try {\n-                pdfReader =  new PdfReader(pdfFilePath);   //\u5224\u65adpdf\u6587\u4ef6\u662f\u5426\u52a0\u5bc6 \u7f13\u5b58\u4e0d\u52a0\u5bc6\u6587\u4ef6\n-                this.addPdf2jpgCache(pdfFilePath, pageCount);\n-            } catch (BadPasswordException e) {\n-\n-            } catch (Exception e) {\n-                e.printStackTrace();\n+                pdfReader =  new PdfReader(pdfFilePath);   //\u8bfb\u53d6PDF\u6587\u4ef6\n+            } catch (Exception e) {  //\u83b7\u53d6\u5f02\u5e38\u65b9\u6cd5 \u5224\u65ad\u662f\u5426\u6709\u52a0\u5bc6\u5b57\u7b26\u4e32\n+                Throwable[] throwableArray = ExceptionUtils.getThrowables(e);\n+                for (Throwable throwable : throwableArray) {\n+                    if (throwable instanceof IOException || throwable instanceof EncryptedDocumentException) {\n+                        if (e.getMessage().toLowerCase().contains(pdf_password_msg)) {\n+                            pdfPassword = pdf_password_msg;\n+                        }\n+                    }\n+                }\n+                logger.error(\"Convert pdf exception, pdfFilePath\uff1a{}\", pdfFilePath, e);\n             }finally {\n                 if (pdfReader != null) {   //\u5173\u95ed\n                     pdfReader.close();\n                 }\n             }\n-\n+            if(!pdfPassword.equals(pdf_password_msg)){  //\u5224\u65ad\u662f\u5426\u52a0\u5bc6\u6587\u4ef6 \u52a0\u5bc6\u6587\u4ef6\u4e0d\u7f13\u5b58\n+                this.addPdf2jpgCache(pdfFilePath, pageCount);\n+            }\n         } catch (IOException e) {\n             logger.error(\"Convert pdf to jpg exception, pdfFilePath\uff1a{}\", pdfFilePath, e);\n             throw new Exception(e);",
      "parent_sha": "f74d93a835f8ad8f278d77a2825d48f91da9ea04"
    }
  },
  {
    "oid": "13123f8f9d77ce6cb53ebf4993a71a1f68ce099e",
    "message": "addTask\u8f6c\u7801\u4f18\u5316",
    "date": "2019-06-19T07:24:24Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/13123f8f9d77ce6cb53ebf4993a71a1f68ce099e",
    "details": {
      "sha": "5e2600a994d1c8e9748f3a3dd35eb1183be2587e",
      "filename": "jodconverter-web/src/main/java/cn/keking/service/impl/OfficeFilePreviewImpl.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/13123f8f9d77ce6cb53ebf4993a71a1f68ce099e/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FOfficeFilePreviewImpl.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/13123f8f9d77ce6cb53ebf4993a71a1f68ce099e/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FOfficeFilePreviewImpl.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/jodconverter-web%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FOfficeFilePreviewImpl.java?ref=13123f8f9d77ce6cb53ebf4993a71a1f68ce099e",
      "patch": "@@ -47,7 +47,7 @@ public class OfficeFilePreviewImpl implements FilePreview {\n     public String filePreviewHandle(String url, Model model) {\n         // \u9884\u89c8Type\uff0c\u53c2\u6570\u4f20\u4e86\u5c31\u53d6\u53c2\u6570\u7684\uff0c\u6ca1\u4f20\u53d6\u7cfb\u7edf\u9ed8\u8ba4\n         String officePreviewType = model.asMap().get(\"officePreviewType\") == null ? ConfigConstants.getOfficePreviewType() : model.asMap().get(\"officePreviewType\").toString();\n-        String originUrl = model.asMap().get(\"originUrl\").toString();\n+        String originUrl = (String) model.asMap().get(\"originUrl\");\n         FileAttribute fileAttribute=fileUtils.getFileAttribute(url);\n         String suffix=fileAttribute.getSuffix();\n         String fileName=fileAttribute.getName();\n@@ -81,7 +81,7 @@ public String filePreviewHandle(String url, Model model) {\n                 fileUtils.addConvertedFile(pdfName, fileUtils.getRelativePath(outFilePath));\n             }\n         }\n-        if (!isHtml && (OFFICE_PREVIEW_TYPE_IMAGE.equals(officePreviewType) || OFFICE_PREVIEW_TYPE_ALLIMAGES.equals(officePreviewType))) {\n+        if (!isHtml && originUrl != null && (OFFICE_PREVIEW_TYPE_IMAGE.equals(officePreviewType) || OFFICE_PREVIEW_TYPE_ALLIMAGES.equals(officePreviewType))) {\n             List<String> imageUrls = pdfUtils.pdf2jpg(outFilePath, pdfName, originUrl);\n             if (imageUrls == null || imageUrls.size() < 1) {\n                 model.addAttribute(\"msg\", \"office\u8f6c\u56fe\u7247\u5f02\u5e38\uff0c\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458\");",
      "parent_sha": "189bc3965deedf2d4f9a2f23294f194455b5e880"
    }
  },
  {
    "oid": "f2cfb4cf4a987cdd886f1e1ba67bb0ec3ffded18",
    "message": "\u65b0\u589e \u652f\u6301\u538b\u7f29\u5305\u5bc6\u7801 \u4fee\u590dLINUX\u4e0b\u4e2d\u6587\u4e71\u7801 \u89e3\u538b\u652f\u6301\u6587\u4ef6\u76ee\u5f55\n\u65b0\u589e \u652f\u6301\u538b\u7f29\u5305\u5bc6\u7801 \u4fee\u590dLINUX\u4e0b\u4e2d\u6587\u4e71\u7801 \u89e3\u538b\u652f\u6301\u6587\u4ef6\u76ee\u5f55\n\nSigned-off-by: \u9ad8\u96c4 <admin@cxcp.com>",
    "date": "2023-04-03T07:08:33Z",
    "url": "https://github.com/kekingcn/kkFileView/commit/f2cfb4cf4a987cdd886f1e1ba67bb0ec3ffded18",
    "details": {
      "sha": "f61471f5cf41259f4ca3a7424ea3b221c0ed0ec7",
      "filename": "server/src/main/java/cn/keking/service/impl/TiffFilePreviewImpl.java",
      "status": "modified",
      "additions": 33,
      "deletions": 49,
      "changes": 82,
      "blob_url": "https://github.com/kekingcn/kkFileView/blob/f2cfb4cf4a987cdd886f1e1ba67bb0ec3ffded18/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FTiffFilePreviewImpl.java",
      "raw_url": "https://github.com/kekingcn/kkFileView/raw/f2cfb4cf4a987cdd886f1e1ba67bb0ec3ffded18/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FTiffFilePreviewImpl.java",
      "contents_url": "https://api.github.com/repos/kekingcn/kkFileView/contents/server%2Fsrc%2Fmain%2Fjava%2Fcn%2Fkeking%2Fservice%2Fimpl%2FTiffFilePreviewImpl.java?ref=f2cfb4cf4a987cdd886f1e1ba67bb0ec3ffded18",
      "patch": "@@ -3,13 +3,12 @@\n import cn.keking.config.ConfigConstants;\n import cn.keking.model.FileAttribute;\n import cn.keking.model.ReturnResponse;\n+import cn.keking.service.FileHandlerService;\n import cn.keking.service.FilePreview;\n import cn.keking.utils.ConvertPicUtil;\n import cn.keking.utils.DownloadUtils;\n import cn.keking.utils.WebUtils;\n import cn.keking.web.filter.BaseUrlFilter;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n import org.springframework.stereotype.Service;\n import org.springframework.ui.Model;\n import org.springframework.util.StringUtils;\n@@ -27,72 +26,65 @@\n @Service\n public class TiffFilePreviewImpl implements FilePreview {\n \n-    private final static Logger logger = LoggerFactory.getLogger(TiffFilePreviewImpl.class);\n-\n-    private final PictureFilePreviewImpl pictureFilePreview;\n+    private final FileHandlerService fileHandlerService;\n+    private final OtherFilePreviewImpl otherFilePreview;\n+    public TiffFilePreviewImpl(FileHandlerService fileHandlerService,OtherFilePreviewImpl otherFilePreview) {\n+        this.fileHandlerService = fileHandlerService;\n+        this.otherFilePreview = otherFilePreview;\n+    }\n     private static final String INITIALIZE_MEMORY_SIZE = \"initializeMemorySize\";\n     //\u9ed8\u8ba4\u521d\u59cb\u5316 50MB \u5185\u5b58\n     private static final long INITIALIZE_MEMORY_SIZE_VALUE_DEFAULT = 1024L * 1024 * 50;\n-\n     private final String fileDir = ConfigConstants.getFileDir();\n \n-    public TiffFilePreviewImpl(PictureFilePreviewImpl pictureFilePreview) {\n-        this.pictureFilePreview = pictureFilePreview;\n-    }\n \n     @Override\n     public String filePreviewHandle(String url, Model model, FileAttribute fileAttribute) {\n+        String fileName = fileAttribute.getName();\n+        String baseUrl = BaseUrlFilter.getBaseUrl();\n         String tifPreviewType = ConfigConstants.getTifPreviewType();\n         String tifOnLinePreviewType = fileAttribute.getTifPreviewType();\n         if (StringUtils.hasText(tifOnLinePreviewType)) {\n             tifPreviewType = tifOnLinePreviewType;\n         }\n-\n         if (\"tif\".equalsIgnoreCase(tifPreviewType)) {\n-\n-            pictureFilePreview.filePreviewHandle(url, model, fileAttribute);\n             String fileSize = WebUtils.getUrlParameterReg(url, INITIALIZE_MEMORY_SIZE);\n             if (StringUtils.hasText(fileSize)) {\n                 model.addAttribute(INITIALIZE_MEMORY_SIZE, fileSize);\n             } else {\n                 model.addAttribute(INITIALIZE_MEMORY_SIZE, Long.toString(INITIALIZE_MEMORY_SIZE_VALUE_DEFAULT));\n             }\n             return TIFF_FILE_PREVIEW_PAGE;\n-\n         } else if (\"jpg\".equalsIgnoreCase(tifPreviewType) || \"pdf\".equalsIgnoreCase(tifPreviewType)) {\n-            String inputFileName = url.substring(url.lastIndexOf(\"/\") + 1);\n-            String inputFileNamePrefix = inputFileName.substring(0, inputFileName.lastIndexOf(\".\"));\n-\n-            String strLocalTif = fileDir + inputFileName;\n-            File fileTiff = new File(strLocalTif);\n-            // \u5982\u679c\u672c\u5730\u4e0d\u5b58\u5728\u8fd9\u4e2atif\u6587\u4ef6\uff0c\u5219\u4e0b\u8f7d\n-            if (!fileTiff.exists()) {\n-                ReturnResponse<String> response = DownloadUtils.downLoad(fileAttribute, inputFileName);\n-                if (response.isFailure()) {\n-                    return NOT_SUPPORTED_FILE_PAGE;\n-                }\n-            }\n-\n-            String baseUrl = BaseUrlFilter.getBaseUrl();\n+            String pdfName = fileName.substring(0, fileName.lastIndexOf(\".\") + 1) + \"pdf\";\n+            String jpgName = fileName.substring(0, fileName.lastIndexOf(\".\") + 1) + \"jpg\";\n+            String strLocalTif = fileDir + fileName;\n+            String outFilePath = fileDir + pdfName;\n             if (\"pdf\".equalsIgnoreCase(tifPreviewType)) {\n-                // \u4ee5PDF\u6a21\u5f0f\u9884\u89c8\u7684\u8fc7\u7a0b\n-                File filePdf = new File(fileDir + inputFileNamePrefix + \".pdf\");\n-                // \u5982\u679c\u672c\u5730\u4e0d\u5b58\u5728\u5bf9\u5e94\u7684pdf\uff0c\u5219\u8c03\u7528\u8f6c\u6362\u8fc7\u7a0b\u3002\u5426\u5219\u76f4\u63a5\u7528\u73b0\u6709\u7684pdf\u6587\u4ef6\n-                if (!filePdf.exists()) {\n-                    filePdf = ConvertPicUtil.convertTif2Pdf(strLocalTif, fileDir + inputFileNamePrefix + \".pdf\");\n-                }\n-\n-                // \u5982\u679cpdf\u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u5c06url\u8def\u5f84\u52a0\u5165\u5230\u5bf9\u8c61\u4e2d\uff0c\u8fd4\u56de\u7ed9\u9875\u9762\n-                assert filePdf != null;\n-                if (filePdf.exists()) {\n-                    String pdfUrl = baseUrl + inputFileNamePrefix + \".pdf\";\n-                    model.addAttribute(\"pdfUrl\", pdfUrl);\n-\n+                    //\u5f53\u6587\u4ef6\u4e0d\u5b58\u5728\u65f6\uff0c\u5c31\u53bb\u4e0b\u8f7d\n+                    if (!fileHandlerService.listConvertedFiles().containsKey(pdfName) || !ConfigConstants.isCacheEnabled()) {\n+                        ReturnResponse<String> response = DownloadUtils.downLoad(fileAttribute, fileName);\n+                        if (response.isFailure()) {\n+                            return otherFilePreview.notSupportedFile(model, fileAttribute, response.getMsg());\n+                        }\n+                        String filePath = response.getContent();\n+                        if (ConfigConstants.isCacheEnabled()) {\n+                            // \u52a0\u5165\u7f13\u5b58\n+                            fileHandlerService.addConvertedFile(pdfName, fileHandlerService.getRelativePath(outFilePath));\n+                        }\n+                        if(ConvertPicUtil.convertJpg2Pdf(filePath, outFilePath)){\n+                            model.addAttribute(\"pdfUrl\", pdfName);\n+                            return PDF_FILE_PREVIEW_PAGE;\n+                        }\n+                    }\n+                 else {\n+                    model.addAttribute(\"pdfUrl\", pdfName);\n                     return PDF_FILE_PREVIEW_PAGE;\n                 }\n+\n             } else {\n                 // \u4ee5JPG\u6a21\u5f0f\u9884\u89c8\u7684\u8fc7\u7a0b\n-                String strJpgFilePathName = fileDir + inputFileNamePrefix + \".jpg\";\n+                String strJpgFilePathName = fileDir + jpgName;\n                 // \u5c06tif\u8f6c\u6362\u4e3ajpg\uff0c\u8fd4\u56de\u8f6c\u6362\u540e\u7684\u6587\u4ef6\u8def\u5f84\u3001\u6587\u4ef6\u540d\u7684list\n                 List<String> listPic2Jpg = ConvertPicUtil.convertTif2Jpg(strLocalTif, strJpgFilePathName);\n                 // \u5c06\u8fd4\u56de\u9875\u9762\u7684\u56fe\u7247url\u7684list\u5bf9\u8c61\n@@ -101,19 +93,11 @@ public String filePreviewHandle(String url, Model model, FileAttribute fileAttri\n                 for (String strJpg : listPic2Jpg) {\n                     listImageUrls.add(baseUrl + strJpg);\n                 }\n-\n                 model.addAttribute(\"imgUrls\", listImageUrls);\n                 model.addAttribute(\"currentUrl\", listImageUrls.get(0));\n             }\n-\n-            // \u8f6c\u6362\u540e\u7684tif\u6ca1\u7528\u4e86\uff0c\u53ef\u4ee5\u5220\u6389\u4e86\n-            if (fileTiff.exists() && !fileTiff.delete()) {\n-                logger.error(\"{} \u6e05\u7406\u5931\u8d25\", strLocalTif);\n-            }\n-\n             return PICTURE_FILE_PREVIEW_PAGE;\n         }\n-\n         return NOT_SUPPORTED_FILE_PAGE;\n     }\n }",
      "parent_sha": "d646d72a26a03ffb4b1860c495aa6d71c0bc3666"
    }
  }
]