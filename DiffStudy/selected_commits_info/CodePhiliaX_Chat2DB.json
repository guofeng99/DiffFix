[
  {
    "oid": "60e47c2132664c29d388c9ecb1948cb9dac66c6a",
    "message": "refactor(chat2db-spi): replace Clob reading logic with IOUtils.toString",
    "date": "2024-07-16T06:45:39Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/60e47c2132664c29d388c9ecb1948cb9dac66c6a",
    "details": {
      "sha": "c036188043ae385945d8c285d15350985a32810c",
      "filename": "chat2db-server/chat2db-spi/src/main/java/ai/chat2db/spi/model/JDBCDataValue.java",
      "status": "modified",
      "additions": 4,
      "deletions": 13,
      "changes": 17,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/60e47c2132664c29d388c9ecb1948cb9dac66c6a/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fmodel%2FJDBCDataValue.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/60e47c2132664c29d388c9ecb1948cb9dac66c6a/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fmodel%2FJDBCDataValue.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fmodel%2FJDBCDataValue.java?ref=60e47c2132664c29d388c9ecb1948cb9dac66c6a",
      "patch": "@@ -5,17 +5,15 @@\n import lombok.AllArgsConstructor;\n import lombok.Data;\n import lombok.Getter;\n+import org.apache.commons.io.IOUtils;\n import org.apache.tika.Tika;\n import org.jetbrains.annotations.NotNull;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n import javax.imageio.ImageIO;\n import java.awt.image.BufferedImage;\n-import java.io.BufferedInputStream;\n-import java.io.BufferedReader;\n-import java.io.IOException;\n-import java.io.InputStream;\n+import java.io.*;\n import java.math.BigDecimal;\n import java.sql.*;\n import java.util.Objects;\n@@ -126,7 +124,7 @@ public String getBlobString() {\n \n     public String getClobString() {\n         Clob clob = getClob();\n-        try (BufferedReader reader = new BufferedReader(clob.getCharacterStream())) {\n+        try (Reader reader = clob.getCharacterStream()) {\n             long length = clob.length();\n             LOBInfo cLobInfo = getLobInfo(length);\n             double size = cLobInfo.getSize();\n@@ -137,14 +135,7 @@ public String getClobString() {\n             if (limitSize && isBigSize(unit)) {\n                 return String.format(\"[%s] %s\", getType(), cLobInfo);\n             }\n-            StringBuilder builder = new StringBuilder((int) (Math.ceil(size)));\n-            String line;\n-\n-            while ((line = reader.readLine()) != null) {\n-                // TODO: \u4f18\u5316\u6362\u884c\u7b26\n-                builder.append(line).append(\"\\n\");\n-            }\n-            return builder.toString();\n+            return IOUtils.toString(reader);\n         } catch (IOException | SQLException e) {\n             log.warn(\"Error while reading clob stream\", e);\n             return getStringValue();",
      "parent_sha": "95db332ad3d45ba24e4218c71c4f5e5968f3b0f2"
    }
  },
  {
    "oid": "163c9d44474e7b199a4c4765faf2d5befbad221d",
    "message": "Update DatabaseServiceImpl.java",
    "date": "2023-07-17T10:00:53Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/163c9d44474e7b199a4c4765faf2d5befbad221d",
    "details": {
      "sha": "79ca9552b94d51fcd9f080ac3086b6571adb5218",
      "filename": "chat2db-server/chat2db-server-domain/chat2db-server-domain-core/src/main/java/ai/chat2db/server/domain/core/impl/DatabaseServiceImpl.java",
      "status": "modified",
      "additions": 20,
      "deletions": 19,
      "changes": 39,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/163c9d44474e7b199a4c4765faf2d5befbad221d/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-core%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fcore%2Fimpl%2FDatabaseServiceImpl.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/163c9d44474e7b199a4c4765faf2d5befbad221d/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-core%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fcore%2Fimpl%2FDatabaseServiceImpl.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-core%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fcore%2Fimpl%2FDatabaseServiceImpl.java?ref=163c9d44474e7b199a4c4765faf2d5befbad221d",
      "patch": "@@ -13,10 +13,12 @@\n import ai.chat2db.server.tools.base.wrapper.result.ActionResult;\n import ai.chat2db.server.tools.base.wrapper.result.DataResult;\n import ai.chat2db.server.tools.base.wrapper.result.ListResult;\n+import ai.chat2db.spi.MetaData;\n import ai.chat2db.spi.model.Database;\n import ai.chat2db.spi.model.MetaSchema;\n import ai.chat2db.spi.model.Schema;\n import ai.chat2db.spi.sql.Chat2DBContext;\n+import ai.chat2db.spi.sql.ConnectInfo;\n import cn.hutool.core.thread.ThreadUtil;\n import lombok.extern.slf4j.Slf4j;\n import org.springframework.stereotype.Service;\n@@ -45,32 +47,31 @@ public ListResult<Schema> querySchema(SchemaQueryParam param) {\n \n     @Override\n     public DataResult<MetaSchema> queryDatabaseSchema(MetaDataQueryParam param) {\n+        MetaSchema metaSchema = new MetaSchema();\n+        MetaData metaData = Chat2DBContext.getMetaData();\n+        ConnectInfo connectInfo = Chat2DBContext.getConnectInfo();\n         MetaSchema ms = CacheManage.get(getDataSourceKey(param.getDataSourceId()), MetaSchema.class,\n             (key) -> param.isRefresh(), (key) -> {\n-                MetaSchema metaSchema = new MetaSchema();\n-                List<Database> databases = Chat2DBContext.getMetaData().databases();\n+                List<Database> databases = metaData.databases();\n                 if (!CollectionUtils.isEmpty(databases)) {\n-\n-                    CountDownLatch countDownLatch = ThreadUtil.newCountDownLatch(databases.size());\n+                    // CountDownLatch countDownLatch = ThreadUtil.newCountDownLatch(databases.size());\n                     for (Database database : databases) {\n-                        ThreadUtil.execute(() -> {\n-                            try {\n-                                List<Schema> schemaList = Chat2DBContext.getMetaData().schemas(database.getName());\n-                                database.setSchemas(schemaList);\n-                                countDownLatch.countDown();\n-                            } catch (Exception e) {\n-                                log.error(\"queryDatabaseSchema error\", e);\n-                            }\n-                        });\n-                    }\n-                    try {\n-                        countDownLatch.await();\n-                    } catch (InterruptedException e) {\n-                        log.error(\"queryDatabaseSchema error\", e);\n+                        //ThreadUtil.execute(() -> {\n+                        try {\n+                           // Chat2DBContext.putContext(connectInfo);\n+                            database.setSchemas(metaData.schemas(database.getName()));\n+                            // countDownLatch.countDown();\n+                        } catch (Exception e) {\n+                            log.error(\"queryDatabaseSchema error\", e);\n+                        } finally {\n+                            //Chat2DBContext.removeContext();\n+                        }\n+                        // });\n                     }\n+                    metaSchema.setDatabases(databases);\n \n                 } else {\n-                    List<Schema> schemas = Chat2DBContext.getMetaData().schemas(null);\n+                    List<Schema> schemas = metaData.schemas(null);\n                     metaSchema.setSchemas(schemas);\n                 }\n                 return metaSchema;",
      "parent_sha": "3ea76339200ddd0384e193efd3f66707d9dc6a1e"
    }
  },
  {
    "oid": "2060ec88c659d39cb545535a6650bb2529b0d680",
    "message": "add column data type",
    "date": "2023-08-05T06:26:46Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/2060ec88c659d39cb545535a6650bb2529b0d680",
    "details": {
      "sha": "3dae5f80ebc0590b39e0035bb0e3cb26c1dea638",
      "filename": "chat2db-server/chat2db-spi/src/main/java/ai/chat2db/spi/util/ResultSetUtils.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/2060ec88c659d39cb545535a6650bb2529b0d680/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Futil%2FResultSetUtils.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/2060ec88c659d39cb545535a6650bb2529b0d680/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Futil%2FResultSetUtils.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Futil%2FResultSetUtils.java?ref=2060ec88c659d39cb545535a6650bb2529b0d680",
      "patch": "@@ -70,7 +70,7 @@ public static TableColumn buildColumn(ResultSet resultSet) throws SQLException {\n         tableColumn.setName(getString(resultSet, \"COLUMN_NAME\"));\n         tableColumn.setComment(getString(resultSet, \"REMARKS\"));\n         tableColumn.setDefaultValue(getString(resultSet, \"COLUMN_DEF\"));\n-        tableColumn.setTypeName(getString(resultSet, \"TYPE_NAME\"));\n+        tableColumn.setColumnType(getString(resultSet, \"TYPE_NAME\"));\n         tableColumn.setColumnSize(resultSet.getInt(\"COLUMN_SIZE\"));\n         tableColumn.setDataType(resultSet.getInt(\"DATA_TYPE\"));\n         tableColumn.setNullable(resultSet.getInt(\"NULLABLE\") == 1);",
      "parent_sha": "a8277224e5639c77daeb8692fe64a100f90591ba"
    }
  },
  {
    "oid": "30210e7b40ac48f37c9aead85eefccd03264e91d",
    "message": "Fix oracle datatype error",
    "date": "2023-11-15T02:42:47Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/30210e7b40ac48f37c9aead85eefccd03264e91d",
    "details": {
      "sha": "6d5db5435d6c734d3b2c96a22be686d05ffc199c",
      "filename": "chat2db-server/chat2db-plugins/chat2db-oracle/src/main/java/ai/chat2db/plugin/oracle/OracleMetaData.java",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/30210e7b40ac48f37c9aead85eefccd03264e91d/chat2db-server%2Fchat2db-plugins%2Fchat2db-oracle%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Foracle%2FOracleMetaData.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/30210e7b40ac48f37c9aead85eefccd03264e91d/chat2db-server%2Fchat2db-plugins%2Fchat2db-oracle%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Foracle%2FOracleMetaData.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-oracle%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Foracle%2FOracleMetaData.java?ref=30210e7b40ac48f37c9aead85eefccd03264e91d",
      "patch": "@@ -85,7 +85,12 @@ public List<TableColumn> columns(Connection connection, String databaseName, Str\n                 tableColumn.setSchemaName(schemaName);\n                 tableColumn.setName(resultSet.getString(\"COLUMN_NAME\"));\n                 tableColumn.setColumnType(resultSet.getString(\"DATA_TYPE\"));\n-                tableColumn.setColumnSize(resultSet.getInt(\"DATA_LENGTH\"));\n+                Integer dataPrecision = resultSet.getInt(\"DATA_PRECISION\");\n+                if(dataPrecision!=null) {\n+                    tableColumn.setColumnSize(dataPrecision);\n+                }else {\n+                    tableColumn.setColumnSize(resultSet.getInt(\"DATA_LENGTH\"));\n+                }\n                 tableColumn.setDefaultValue(resultSet.getString(\"DATA_DEFAULT\"));\n                 tableColumn.setComment(resultSet.getString(\"COMMENTS\"));\n                 tableColumn.setNullable(\"Y\".equalsIgnoreCase(resultSet.getString(\"NULLABLE\")) ? 1 : 0);",
      "parent_sha": "18cce246f2e693290242863d706dbaeb3c621891"
    }
  },
  {
    "oid": "9d2af9c6e2f18deda0b71c7798323765027f8ada",
    "message": "MySQL\u79fb\u52a8\u5217\u95ee\u9898\u4fee\u590d\u3002\n\u4fee\u590d\u8de8\u591a\u8fde\u7eed\u6570\u636e\u79fb\u52a8\u4e0d\u80fd\u8bc6\u522b\u7684\u95ee\u9898\u3002",
    "date": "2024-04-12T03:47:44Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/9d2af9c6e2f18deda0b71c7798323765027f8ada",
    "details": {
      "sha": "4ff06797b7c1ffb74e770a767b805164bd208436",
      "filename": "chat2db-server/chat2db-plugins/chat2db-mysql/src/main/java/ai/chat2db/plugin/mysql/builder/MysqlSqlBuilder.java",
      "status": "modified",
      "additions": 11,
      "deletions": 9,
      "changes": 20,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/9d2af9c6e2f18deda0b71c7798323765027f8ada/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fbuilder%2FMysqlSqlBuilder.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/9d2af9c6e2f18deda0b71c7798323765027f8ada/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fbuilder%2FMysqlSqlBuilder.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fbuilder%2FMysqlSqlBuilder.java?ref=9d2af9c6e2f18deda0b71c7798323765027f8ada",
      "patch": "@@ -12,6 +12,7 @@\n import org.apache.commons.lang3.StringUtils;\n \n import java.util.*;\n+import java.util.concurrent.atomic.AtomicInteger;\n \n \n public class MysqlSqlBuilder extends DefaultSqlBuilder {\n@@ -177,7 +178,7 @@ private String[] buildSql(String[] originalArray, String[] targetArray, StringBu\n         if (!originalArray[0].equals(targetArray[0])) {\n             int a = findIndex(originalArray, targetArray[0]);\n             TableColumn column = oldTable.getColumnList().stream().filter(col -> StringUtils.equals(col.getName(), originalArray[a])).findFirst().get();\n-            String[] newArray = moveElement(originalArray, a, 0, targetArray);\n+            String[] newArray = moveElement(originalArray, a, 0, targetArray, new AtomicInteger(0));\n             sql.append(\" MODIFY COLUMN \");\n             MysqlColumnTypeEnum typeEnum = MysqlColumnTypeEnum.getByType(column.getColumnType());\n             sql.append(typeEnum.buildColumn(column));\n@@ -201,7 +202,7 @@ private String[] buildSql(String[] originalArray, String[] targetArray, StringBu\n             int a = findIndex(originalArray, targetArray[max]);\n             //System.out.println(\"Move \" + originalArray[a] + \" after \" + (a > 0 ? originalArray[max] : \"start\"));\n             TableColumn column = oldTable.getColumnList().stream().filter(col -> StringUtils.equals(col.getName(), originalArray[a])).findFirst().get();\n-            String[] newArray = moveElement(originalArray, a, max, targetArray);\n+            String[] newArray = moveElement(originalArray, a, max, targetArray, new AtomicInteger(0));\n             if (n > 0) {\n                 sql.append(\"ALTER TABLE \");\n                 if (StringUtils.isNotBlank(oldTable.getDatabaseName())) {\n@@ -249,15 +250,17 @@ private String[] buildSql(String[] originalArray, String[] targetArray, StringBu\n                     sql.append(\" COMMENT '\").append(column.getComment()).append(\"'\");\n                 }\n                 sql.append(\" AFTER \");\n+                AtomicInteger continuousDataCount = new AtomicInteger(0);\n+                String[] newArray = moveElement(originalArray, i, a, targetArray, continuousDataCount);\n                 if (i < a) {\n-                    sql.append(originalArray[a]);\n+                    sql.append(originalArray[a + continuousDataCount.get()]);\n                 } else {\n                     sql.append(originalArray[a - 1]);\n                 }\n \n                 sql.append(\";\\n\");\n                 n++;\n-                String[] newArray = moveElement(originalArray, i, a, targetArray);\n+\n                 if (Arrays.equals(newArray, targetArray)) {\n                     return newArray;\n                 }\n@@ -285,23 +288,22 @@ private static boolean isMoveValid(String[] originalArray, String[] targetArray,\n                 || (i > 0 && a > 0 && !originalArray[i - 1].equals(targetArray[a - 1]));\n     }\n \n-    private static String[] moveElement(String[] originalArray, int from, int to, String[] targetArray) {\n+    private static String[] moveElement(String[] originalArray, int from, int to, String[] targetArray, AtomicInteger continuousDataCount) {\n         String[] newArray = new String[originalArray.length];\n         System.arraycopy(originalArray, 0, newArray, 0, originalArray.length);\n         String temp = newArray[from];\n         // \u662f\u5426\u6709\u8fde\u7eed\u79fb\u52a8\u6570\u636e\n         boolean isContinuousData = false;\n         // \u8fde\u7eed\u6570\u636e\u6570\u91cf\n-        int continuousDataCount = 0;\n         if (from < to) {\n             for (int i = to; i < originalArray.length - 1; i++) {\n                 if (originalArray[i+1].equals(targetArray[findIndex(targetArray, originalArray[i]) +1])) {\n-                    continuousDataCount++;\n+                    continuousDataCount.set(continuousDataCount.incrementAndGet());\n                 } else {\n                     break;\n                 }\n             }\n-            if (continuousDataCount > 0) {\n+            if (continuousDataCount.get() > 0) {\n                 System.arraycopy(originalArray, from + 1, newArray, from, to - from +1);\n                 isContinuousData = true;\n             } else {\n@@ -311,7 +313,7 @@ private static String[] moveElement(String[] originalArray, int from, int to, St\n             System.arraycopy(originalArray, to, newArray, to + 1, from - to);\n         }\n         if (isContinuousData){\n-            newArray[to+continuousDataCount] = temp;\n+            newArray[to+continuousDataCount.get()] = temp;\n         } else {\n             newArray[to] = temp;\n         }",
      "parent_sha": "d7667c6f82d1262c739ad4f27a8d57d6562a79f8"
    }
  },
  {
    "oid": "6167134a12c6426792dff2b57d0d42aa9cfec243",
    "message": "fix: #974 \u4f18\u5316MySQL\u4fee\u6539\u5217\u987a\u5e8f\u7b97\u6cd5\u3002",
    "date": "2023-12-27T09:09:03Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/6167134a12c6426792dff2b57d0d42aa9cfec243",
    "details": {
      "sha": "9081ec7e943c2e1fb4c245f2ed9b8e1051847cda",
      "filename": "chat2db-server/chat2db-plugins/chat2db-mysql/src/main/java/ai/chat2db/plugin/mysql/builder/MysqlSqlBuilder.java",
      "status": "modified",
      "additions": 131,
      "deletions": 27,
      "changes": 158,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/6167134a12c6426792dff2b57d0d42aa9cfec243/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fbuilder%2FMysqlSqlBuilder.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/6167134a12c6426792dff2b57d0d42aa9cfec243/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fbuilder%2FMysqlSqlBuilder.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fbuilder%2FMysqlSqlBuilder.java?ref=6167134a12c6426792dff2b57d0d42aa9cfec243",
      "patch": "@@ -8,25 +8,27 @@\n import ai.chat2db.spi.model.Table;\n import ai.chat2db.spi.model.TableColumn;\n import ai.chat2db.spi.model.TableIndex;\n+import cn.hutool.core.util.ArrayUtil;\n import org.apache.commons.lang3.StringUtils;\n \n-import java.util.List;\n-import java.util.stream.Collectors;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n \n \n public class MysqlSqlBuilder extends DefaultSqlBuilder implements SqlBuilder {\n     @Override\n     public String buildCreateTableSql(Table table) {\n         StringBuilder script = new StringBuilder();\n         script.append(\"CREATE TABLE \");\n-        if(StringUtils.isNotBlank(table.getDatabaseName())) {\n+        if (StringUtils.isNotBlank(table.getDatabaseName())) {\n             script.append(\"`\").append(table.getDatabaseName()).append(\"`\").append(\".\");\n         }\n         script.append(\"`\").append(table.getName()).append(\"`\").append(\" (\").append(\"\\n\");\n \n         // append column\n         for (TableColumn column : table.getColumnList()) {\n-            if(StringUtils.isBlank(column.getName())|| StringUtils.isBlank(column.getColumnType())){\n+            if (StringUtils.isBlank(column.getName()) || StringUtils.isBlank(column.getColumnType())) {\n                 continue;\n             }\n             MysqlColumnTypeEnum typeEnum = MysqlColumnTypeEnum.getByType(column.getColumnType());\n@@ -35,7 +37,7 @@ public String buildCreateTableSql(Table table) {\n \n         // append primary key and index\n         for (TableIndex tableIndex : table.getIndexList()) {\n-            if(StringUtils.isBlank(tableIndex.getName())|| StringUtils.isBlank(tableIndex.getType())){\n+            if (StringUtils.isBlank(tableIndex.getName()) || StringUtils.isBlank(tableIndex.getType())) {\n                 continue;\n             }\n             MysqlIndexTypeEnum mysqlIndexTypeEnum = MysqlIndexTypeEnum.getByType(tableIndex.getType());\n@@ -78,7 +80,7 @@ public String buildCreateTableSql(Table table) {\n     public String buildModifyTaleSql(Table oldTable, Table newTable) {\n         StringBuilder script = new StringBuilder();\n         script.append(\"ALTER TABLE \");\n-        if(StringUtils.isNotBlank(oldTable.getDatabaseName())) {\n+        if (StringUtils.isNotBlank(oldTable.getDatabaseName())) {\n             script.append(\"`\").append(oldTable.getDatabaseName()).append(\"`\").append(\".\");\n         }\n         script.append(\"`\").append(oldTable.getName()).append(\"`\").append(\"\\n\");\n@@ -94,7 +96,7 @@ public String buildModifyTaleSql(Table oldTable, Table newTable) {\n \n         // append modify column\n         for (TableColumn tableColumn : newTable.getColumnList()) {\n-            if (StringUtils.isNotBlank(tableColumn.getEditStatus()) &&  StringUtils.isNotBlank(tableColumn.getColumnType())&& StringUtils.isNotBlank(tableColumn.getName())){\n+            if (StringUtils.isNotBlank(tableColumn.getEditStatus()) && StringUtils.isNotBlank(tableColumn.getColumnType()) && StringUtils.isNotBlank(tableColumn.getName())) {\n                 MysqlColumnTypeEnum typeEnum = MysqlColumnTypeEnum.getByType(tableColumn.getColumnType());\n                 script.append(\"\\t\").append(typeEnum.buildModifyColumn(tableColumn)).append(\",\\n\");\n             }\n@@ -111,7 +113,7 @@ public String buildModifyTaleSql(Table oldTable, Table newTable) {\n         // append reorder column\n         script.append(\"\\t\").append(buildGenerateReorderColumnSql(oldTable, newTable));\n \n-        if(script.length()>2) {\n+        if (script.length() > 2) {\n             script = new StringBuilder(script.substring(0, script.length() - 2));\n             script.append(\";\");\n         }\n@@ -120,7 +122,6 @@ public String buildModifyTaleSql(Table oldTable, Table newTable) {\n     }\n \n \n-\n     @Override\n     public String pageLimit(String sql, int offset, int pageNo, int pageSize) {\n         StringBuilder sqlBuilder = new StringBuilder(sql.length() + 14);\n@@ -138,12 +139,10 @@ public String pageLimit(String sql, int offset, int pageNo, int pageSize) {\n     }\n \n \n-\n-\n     @Override\n     public String buildCreateDatabaseSql(Database database) {\n         StringBuilder sqlBuilder = new StringBuilder();\n-        sqlBuilder.append(\"CREATE DATABASE `\"+database.getName()+\"`\");\n+        sqlBuilder.append(\"CREATE DATABASE `\" + database.getName() + \"`\");\n         if (StringUtils.isNotBlank(database.getCharset())) {\n             sqlBuilder.append(\" DEFAULT CHARACTER SET=\").append(database.getCharset());\n         }\n@@ -152,38 +151,143 @@ public String buildCreateDatabaseSql(Database database) {\n         }\n         return sqlBuilder.toString();\n     }\n+\n     public String buildGenerateReorderColumnSql(Table oldTable, Table newTable) {\n         StringBuilder sql = new StringBuilder();\n         int n = 0;\n-        for (int i = 0; i < newTable.getColumnList().size(); i++) {\n-            TableColumn column = newTable.getColumnList().get(i);\n-            //String columnName = newTable.getColumnList().get(i).getName();\n-            // \u83b7\u53d6oldTable.getColumnList()\u4e2dname\u5c5e\u6027\u7684list\n-            List<String> oldColumnList = oldTable.getColumnList().stream()\n-                    .map(TableColumn::getName)\n-                    .collect(Collectors.toList());\n-\n-            if (i > oldColumnList.indexOf(column.getName())) {\n+        // Create a map to store the index of each column in the old table's column list\n+        Map<String, Integer> oldColumnIndexMap = new HashMap<>();\n+        for (int i = 0; i < oldTable.getColumnList().size(); i++) {\n+            oldColumnIndexMap.put(oldTable.getColumnList().get(i).getName(), i);\n+        }\n+        String[] oldColumnArray = oldTable.getColumnList().stream().map(TableColumn::getName).toArray(String[]::new);\n+        String[] newColumnArray = newTable.getColumnList().stream().map(TableColumn::getName).toArray(String[]::new);\n+\n+        buildSql(oldColumnArray, newColumnArray, sql, oldTable, newTable, n);\n+\n+        return sql.toString();\n+    }\n+\n+    private String[] buildSql(String[] originalArray, String[] targetArray, StringBuilder sql, Table oldTable, Table newTable, int n) {\n+        // \u5148\u5b8c\u6210\u9996\u4f4d\u79fb\u52a8\n+        if (!originalArray[0].equals(targetArray[0])) {\n+            int a = findIndex(originalArray, targetArray[0]);\n+            TableColumn column = oldTable.getColumnList().stream().filter(col -> StringUtils.equals(col.getName(), originalArray[a])).findFirst().get();\n+            String[] newArray = moveElement(originalArray, a, 0);\n+            System.out.println(ArrayUtil.toString(newArray));\n+            sql.append(\" MODIFY COLUMN \");\n+            MysqlColumnTypeEnum typeEnum = MysqlColumnTypeEnum.getByType(column.getColumnType());\n+            sql.append(typeEnum.buildColumn(column));\n+            sql.append(\" FIRST;\\n\");\n+            n++;\n+            if (Arrays.equals(newArray, targetArray)) {\n+                return newArray;\n+            }\n+            String[] resultArray = buildSql(newArray, targetArray, sql, oldTable, newTable, n);\n+            if (Arrays.equals(resultArray, targetArray)) {\n+                return resultArray;\n+            }\n+        }\n+\n+        // \u5728\u5b8c\u6210\u6700\u540e\u4e00\u4f4d\u79fb\u52a8\n+        int max = originalArray.length - 1;\n+        if (!originalArray[max].equals(targetArray[max])) {\n+            int a = findIndex(originalArray, targetArray[max]);\n+            //System.out.println(\"Move \" + originalArray[a] + \" after \" + (a > 0 ? originalArray[max] : \"start\"));\n+            TableColumn column = oldTable.getColumnList().stream().filter(col -> StringUtils.equals(col.getName(), originalArray[a])).findFirst().get();\n+            String[] newArray = moveElement(originalArray, a, max);\n+            System.out.println(ArrayUtil.toString(newArray));\n+            if (n > 0) {\n+                sql.append(\"ALTER TABLE \");\n+                if (StringUtils.isNotBlank(oldTable.getDatabaseName())) {\n+                    sql.append(\"`\").append(oldTable.getDatabaseName()).append(\"`\").append(\".\");\n+                }\n+                sql.append(\"`\").append(oldTable.getName()).append(\"`\").append(\"\\n\");\n+            }\n+            sql.append(\" MODIFY COLUMN \");\n+            MysqlColumnTypeEnum typeEnum = MysqlColumnTypeEnum.getByType(column.getColumnType());\n+            sql.append(typeEnum.buildColumn(column));\n+            sql.append(\" \");\n+            sql.append(\" AFTER \");\n+            sql.append(oldTable.getColumnList().get(max).getName());\n+            sql.append(\";\\n\");\n+            n++;\n+            if (Arrays.equals(newArray, targetArray)) {\n+                return newArray;\n+            }\n+            String[] resultArray = buildSql(newArray, targetArray, sql, oldTable, newTable, n);\n+            if (Arrays.equals(resultArray, targetArray)) {\n+                return resultArray;\n+            }\n+        }\n+\n+\n+        for (int i = 0; i < originalArray.length; i++) {\n+            int a = findIndex(targetArray, originalArray[i]);\n+            if (i != a && isMoveValid(originalArray, targetArray, i, a)) {\n+                // oldTable.getColumnList\u4e2d\u67e5\u627ename\u4e3aa\n+                int finalI = i;\n+                TableColumn column = oldTable.getColumnList().stream().filter(col -> StringUtils.equals(col.getName(), originalArray[finalI])).findFirst().get();\n                 if (n > 0) {\n                     sql.append(\"ALTER TABLE \");\n-                    sql.append(\"`\").append(column.getDatabaseName()).append(\"`\").append(\".\");\n+                    if (StringUtils.isNotBlank(oldTable.getDatabaseName())) {\n+                        sql.append(\"`\").append(oldTable.getDatabaseName()).append(\"`\").append(\".\");\n+                    }\n                     sql.append(\"`\").append(oldTable.getName()).append(\"`\").append(\"\\n\");\n                 }\n                 sql.append(\" MODIFY COLUMN \");\n                 MysqlColumnTypeEnum typeEnum = MysqlColumnTypeEnum.getByType(column.getColumnType());\n                 sql.append(typeEnum.buildColumn(column));\n                 sql.append(\" \");\n-                if (i > 0) {\n-                    sql.append(\" AFTER \");\n-                    sql.append(newTable.getColumnList().get(i - 1).getName());\n+                sql.append(\" AFTER \");\n+                if (i < a) {\n+                    sql.append(originalArray[a]);\n                 } else {\n-                    sql.append(\" FIRST\");\n+                    sql.append(originalArray[a - 1]);\n                 }\n+\n                 sql.append(\";\\n\");\n                 n++;\n+                String[] newArray = moveElement(originalArray, i, a);\n+                if (Arrays.equals(newArray, targetArray)) {\n+                    return newArray;\n+                }\n+                String[] resultArray = buildSql(newArray, targetArray, sql, oldTable, newTable, n);\n+                if (Arrays.equals(resultArray, targetArray)) {\n+                    return resultArray;\n+                }\n+            }\n+        }\n+        return null;\n+    }\n+\n+    private static int findIndex(String[] array, String element) {\n+        for (int i = 0; i < array.length; i++) {\n+            if (array[i].equals(element)) {\n+                return i;\n             }\n+        }\n+        return -1;\n+    }\n \n+    private static boolean isMoveValid(String[] originalArray, String[] targetArray, int i, int a) {\n+        System.out.println(\"i : \" + i + \" a:\" + a);\n+        return (i == 0 || a == 0 || !originalArray[i - 1].equals(targetArray[a - 1])) &&\n+                (i >= originalArray.length - 1 || a >= targetArray.length - 1 || !originalArray[i + 1].equals(targetArray[a + 1]));\n+    }\n+\n+    private static String[] moveElement(String[] originalArray, int from, int to) {\n+        String[] newArray = new String[originalArray.length];\n+        System.arraycopy(originalArray, 0, newArray, 0, originalArray.length);\n+        String temp = newArray[from];\n+        if (from < to) {\n+            System.arraycopy(originalArray, from + 1, newArray, from, to - from);\n+        } else {\n+            System.arraycopy(originalArray, to, newArray, to + 1, from - to);\n         }\n-        return sql.toString();\n+        newArray[to] = temp;\n+        System.out.println(ArrayUtil.toString(newArray));\n+        return newArray;\n     }\n+\n }",
      "parent_sha": "b1de760e00a4b1190c1d305d0b48c941d19f01ef"
    }
  },
  {
    "oid": "d347ec0222b895e3d48b1a6c2f6c9beec91077c8",
    "message": "support view trigger producer function",
    "date": "2023-08-13T06:01:19Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/d347ec0222b895e3d48b1a6c2f6c9beec91077c8",
    "details": {
      "sha": "0ed82aa40c08ce7a3d4641845ee0166c79df39db",
      "filename": "chat2db-server/chat2db-server-domain/chat2db-server-domain-core/src/main/java/ai/chat2db/server/domain/core/impl/DlTemplateServiceImpl.java",
      "status": "modified",
      "additions": 76,
      "deletions": 78,
      "changes": 154,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/d347ec0222b895e3d48b1a6c2f6c9beec91077c8/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-core%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fcore%2Fimpl%2FDlTemplateServiceImpl.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/d347ec0222b895e3d48b1a6c2f6c9beec91077c8/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-core%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fcore%2Fimpl%2FDlTemplateServiceImpl.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-core%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fcore%2Fimpl%2FDlTemplateServiceImpl.java?ref=d347ec0222b895e3d48b1a6c2f6c9beec91077c8",
      "patch": "@@ -67,84 +67,7 @@ public ListResult<ExecuteResult> execute(DlExecuteParam param) {\n         ListResult<ExecuteResult> listResult = ListResult.of(result);\n         // \u6267\u884csql\n         for (String originalSql : sqlList) {\n-            String sql = originalSql;\n-            int pageNo = 0;\n-            int pageSize = 0;\n-            String sqlType = SqlTypeEnum.UNKNOWN.getCode();\n-\n-            // \u89e3\u6790sql\u5206\u9875\n-            SQLStatement sqlStatement;\n-            boolean autoLimit = false;\n-            try {\n-                sqlStatement = SQLUtils.parseSingleStatement(sql, dbType);\n-                // \u662f\u5426\u9700\u8981\u4ee3\u7801\u5e2e\u5fd9\u5206\u9875\n-\n-                if (sqlStatement instanceof SQLSelectStatement) {\n-                    //  \u4e0d\u662f\u67e5\u8be2\u5168\u90e8\u6570\u636e \u800c\u4e14 \u7528\u6237\u81ea\u5df1\u6ca1\u6709\u4f20\u5206\u9875\n-                    autoLimit = BooleanUtils.isNotTrue(param.getPageSizeAll()) && SQLUtils.getLimit(sqlStatement,\n-                        dbType)\n-                        == null;\n-                    if (autoLimit) {\n-                        pageNo = Optional.ofNullable(param.getPageNo()).orElse(1);\n-                        pageSize = Optional.ofNullable(param.getPageSize()).orElse(EasyToolsConstant.MAX_PAGE_SIZE);\n-                        int offset = (pageNo - 1) * pageSize;\n-                        try {\n-                            sql = PagerUtils.limit(sql, dbType, offset, pageSize);\n-                        } catch (Exception e) {\n-                            autoLimit = false;\n-                        }\n-                    }\n-                    sqlType = SqlTypeEnum.SELECT.getCode();\n-                }\n-            } catch (ParserException e) {\n-                log.warn(\"\u89e3\u6790sql\u5931\u8d25:{}\", sql, e);\n-                //ExecuteResult executeResult = ExecuteResult.builder()\n-                //    .success(Boolean.FALSE)\n-                //    .originalSql(originalSql)\n-                //    .sql(sql)\n-                //    .message(e.getMessage())\n-                //    .build();\n-                //result.add(executeResult);\n-                //continue;\n-            }\n-\n-            ExecuteResult executeResult = execute(sql);\n-            executeResult.setSqlType(sqlType);\n-            executeResult.setOriginalSql(originalSql);\n-            // \u81ea\u52a8\u5206\u9875\n-            if (autoLimit) {\n-                executeResult.setPageNo(pageNo);\n-                executeResult.setPageSize(pageSize);\n-                executeResult.setHasNextPage(\n-                    CollectionUtils.size(executeResult.getDataList()) >= executeResult.getPageSize());\n-            } else {\n-                executeResult.setPageNo(1);\n-                executeResult.setPageSize(CollectionUtils.size(executeResult.getDataList()));\n-                executeResult.setHasNextPage(Boolean.FALSE);\n-            }\n-            // Splice row numbers\n-            List<Header> newHeaderList = new ArrayList<>();\n-            newHeaderList.add(Header.builder()\n-                .name(I18nUtils.getMessage(\"sqlResult.rowNumber\"))\n-                .dataType(DataTypeEnum.CHAT2DB_ROW_NUMBER\n-                    .getCode()).build());\n-            if (executeResult.getHeaderList() != null) {\n-                newHeaderList.addAll(executeResult.getHeaderList());\n-            }\n-            executeResult.setHeaderList(newHeaderList);\n-            if (executeResult.getDataList() != null) {\n-                int rowNumberIncrement = 1 + Math.max(pageNo - 1, 0) * pageSize;\n-                for (int i = 0; i < executeResult.getDataList().size(); i++) {\n-                    List<String> row = executeResult.getDataList().get(i);\n-                    List<String> newRow = Lists.newArrayListWithExpectedSize(row.size() + 1);\n-                    newRow.add(Integer.toString(i + rowNumberIncrement));\n-                    newRow.addAll(row);\n-                    executeResult.getDataList().set(i, newRow);\n-                }\n-            }\n-            //  Total number of fuzzy rows\n-            executeResult.setFuzzyTotal(calculateFuzzyTotal(pageNo, pageSize, executeResult));\n-\n+            ExecuteResult executeResult = executeSQL(originalSql,dbType,param);\n             result.add(executeResult);\n             if (!executeResult.getSuccess()) {\n                 listResult.setSuccess(false);\n@@ -155,6 +78,81 @@ public ListResult<ExecuteResult> execute(DlExecuteParam param) {\n         return listResult;\n     }\n \n+    private ExecuteResult executeSQL(String originalSql,DbType dbType,DlExecuteParam param) {\n+        String sql = originalSql;\n+        int pageNo = 0;\n+        int pageSize = 0;\n+        String sqlType = SqlTypeEnum.UNKNOWN.getCode();\n+\n+        // \u89e3\u6790sql\u5206\u9875\n+        SQLStatement sqlStatement;\n+        boolean autoLimit = false;\n+        try {\n+            sqlStatement = SQLUtils.parseSingleStatement(sql, dbType);\n+            // \u662f\u5426\u9700\u8981\u4ee3\u7801\u5e2e\u5fd9\u5206\u9875\n+            if (sqlStatement instanceof SQLSelectStatement) {\n+                //  \u4e0d\u662f\u67e5\u8be2\u5168\u90e8\u6570\u636e \u800c\u4e14 \u7528\u6237\u81ea\u5df1\u6ca1\u6709\u4f20\u5206\u9875\n+                autoLimit = BooleanUtils.isNotTrue(param.getPageSizeAll()) && SQLUtils.getLimit(sqlStatement,\n+                    dbType)\n+                    == null;\n+                if (autoLimit) {\n+                    pageNo = Optional.ofNullable(param.getPageNo()).orElse(1);\n+                    pageSize = Optional.ofNullable(param.getPageSize()).orElse(EasyToolsConstant.MAX_PAGE_SIZE);\n+                    int offset = (pageNo - 1) * pageSize;\n+                    try {\n+                        sql = PagerUtils.limit(sql, dbType, offset, pageSize);\n+                    } catch (Exception e) {\n+                        autoLimit = false;\n+                    }\n+                }\n+                sqlType = SqlTypeEnum.SELECT.getCode();\n+            }\n+        } catch (ParserException e) {\n+            log.warn(\"\u89e3\u6790sql\u5931\u8d25:{}\", sql, e);\n+        }\n+\n+        ExecuteResult executeResult = execute(sql);\n+        executeResult.setSqlType(sqlType);\n+        executeResult.setOriginalSql(originalSql);\n+        // \u81ea\u52a8\u5206\u9875\n+        if (autoLimit) {\n+            executeResult.setPageNo(pageNo);\n+            executeResult.setPageSize(pageSize);\n+            executeResult.setHasNextPage(\n+                CollectionUtils.size(executeResult.getDataList()) >= executeResult.getPageSize());\n+        } else {\n+            executeResult.setPageNo(1);\n+            executeResult.setPageSize(CollectionUtils.size(executeResult.getDataList()));\n+            executeResult.setHasNextPage(Boolean.FALSE);\n+        }\n+        // Splice row numbers\n+        List<Header> newHeaderList = new ArrayList<>();\n+        newHeaderList.add(Header.builder()\n+            .name(I18nUtils.getMessage(\"sqlResult.rowNumber\"))\n+            .dataType(DataTypeEnum.CHAT2DB_ROW_NUMBER\n+                .getCode()).build());\n+        if (executeResult.getHeaderList() != null) {\n+            newHeaderList.addAll(executeResult.getHeaderList());\n+        }\n+        executeResult.setHeaderList(newHeaderList);\n+        if (executeResult.getDataList() != null) {\n+            int rowNumberIncrement = 1 + Math.max(pageNo - 1, 0) * pageSize;\n+            for (int i = 0; i < executeResult.getDataList().size(); i++) {\n+                List<String> row = executeResult.getDataList().get(i);\n+                List<String> newRow = Lists.newArrayListWithExpectedSize(row.size() + 1);\n+                newRow.add(Integer.toString(i + rowNumberIncrement));\n+                newRow.addAll(row);\n+                executeResult.getDataList().set(i, newRow);\n+            }\n+        }\n+        //  Total number of fuzzy rows\n+        executeResult.setFuzzyTotal(calculateFuzzyTotal(pageNo, pageSize, executeResult));\n+        return executeResult;\n+    }\n+\n+\n+\n+\n     private String calculateFuzzyTotal(int pageNo, int pageSize, ExecuteResult executeResult) {\n         int dataSize = CollectionUtils.size(executeResult.getDataList());\n         if (pageSize <= 0) {",
      "parent_sha": "ff784c8e12c668d0e178bbff3d34c134c5979d26"
    }
  },
  {
    "oid": "37db8873831c7c17ee05ae6ab295ef7d01517b9b",
    "message": "fix NULL",
    "date": "2024-05-24T13:53:54Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/37db8873831c7c17ee05ae6ab295ef7d01517b9b",
    "details": {
      "sha": "dbd9ddd7994c24a3832625246504f71c64ee14e4",
      "filename": "chat2db-server/chat2db-plugins/chat2db-mysql/src/main/java/ai/chat2db/plugin/mysql/value/MysqlValueProcessor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/37db8873831c7c17ee05ae6ab295ef7d01517b9b/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fvalue%2FMysqlValueProcessor.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/37db8873831c7c17ee05ae6ab295ef7d01517b9b/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fvalue%2FMysqlValueProcessor.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fvalue%2FMysqlValueProcessor.java?ref=37db8873831c7c17ee05ae6ab295ef7d01517b9b",
      "patch": "@@ -22,7 +22,7 @@ public class MysqlValueProcessor extends DefaultSQLValueProcessor {\n     public String getSqlValueString(ResultSet rs, int index) throws SQLException {\n         Object obj = rs.getObject(index);\n         if (obj == null) {\n-            return null;\n+            return \"NULL\";\n         }\n         String columnTypeName = rs.getMetaData().getColumnTypeName(index);\n         if (MysqlColumnTypeEnum.GEOMETRY.name().equalsIgnoreCase(columnTypeName)",
      "parent_sha": "d8970c6d0ae97f6b5a41632c991f8fcec5c09e88"
    }
  },
  {
    "oid": "5802aefdafea52e24aea571f584a46da6b5ccd67",
    "message": "Issue:#974 Column reordering not taking effect , unable to modify column name",
    "date": "2024-02-02T10:35:21Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/5802aefdafea52e24aea571f584a46da6b5ccd67",
    "details": {
      "sha": "457c61672ee3d2b38f38024a5fde3bdd6f62e36e",
      "filename": "chat2db-server/chat2db-plugins/chat2db-mysql/src/main/java/ai/chat2db/plugin/mysql/builder/MysqlSqlBuilder.java",
      "status": "modified",
      "additions": 30,
      "deletions": 134,
      "changes": 164,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/5802aefdafea52e24aea571f584a46da6b5ccd67/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fbuilder%2FMysqlSqlBuilder.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/5802aefdafea52e24aea571f584a46da6b5ccd67/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fbuilder%2FMysqlSqlBuilder.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fbuilder%2FMysqlSqlBuilder.java?ref=5802aefdafea52e24aea571f584a46da6b5ccd67",
      "patch": "@@ -8,27 +8,25 @@\n import ai.chat2db.spi.model.Table;\n import ai.chat2db.spi.model.TableColumn;\n import ai.chat2db.spi.model.TableIndex;\n-import cn.hutool.core.util.ArrayUtil;\n import org.apache.commons.lang3.StringUtils;\n \n-import java.util.Arrays;\n-import java.util.HashMap;\n-import java.util.Map;\n+import java.util.List;\n+import java.util.stream.Collectors;\n \n \n public class MysqlSqlBuilder extends DefaultSqlBuilder implements SqlBuilder {\n     @Override\n     public String buildCreateTableSql(Table table) {\n         StringBuilder script = new StringBuilder();\n         script.append(\"CREATE TABLE \");\n-        if (StringUtils.isNotBlank(table.getDatabaseName())) {\n+        if(StringUtils.isNotBlank(table.getDatabaseName())) {\n             script.append(\"`\").append(table.getDatabaseName()).append(\"`\").append(\".\");\n         }\n         script.append(\"`\").append(table.getName()).append(\"`\").append(\" (\").append(\"\\n\");\n \n         // append column\n         for (TableColumn column : table.getColumnList()) {\n-            if (StringUtils.isBlank(column.getName()) || StringUtils.isBlank(column.getColumnType())) {\n+            if(StringUtils.isBlank(column.getName())|| StringUtils.isBlank(column.getColumnType())){\n                 continue;\n             }\n             MysqlColumnTypeEnum typeEnum = MysqlColumnTypeEnum.getByType(column.getColumnType());\n@@ -37,7 +35,7 @@ public String buildCreateTableSql(Table table) {\n \n         // append primary key and index\n         for (TableIndex tableIndex : table.getIndexList()) {\n-            if (StringUtils.isBlank(tableIndex.getName()) || StringUtils.isBlank(tableIndex.getType())) {\n+            if(StringUtils.isBlank(tableIndex.getName())|| StringUtils.isBlank(tableIndex.getType())){\n                 continue;\n             }\n             MysqlIndexTypeEnum mysqlIndexTypeEnum = MysqlIndexTypeEnum.getByType(tableIndex.getType());\n@@ -80,7 +78,7 @@ public String buildCreateTableSql(Table table) {\n     public String buildModifyTaleSql(Table oldTable, Table newTable) {\n         StringBuilder script = new StringBuilder();\n         script.append(\"ALTER TABLE \");\n-        if (StringUtils.isNotBlank(oldTable.getDatabaseName())) {\n+        if(StringUtils.isNotBlank(oldTable.getDatabaseName())) {\n             script.append(\"`\").append(oldTable.getDatabaseName()).append(\"`\").append(\".\");\n         }\n         script.append(\"`\").append(oldTable.getName()).append(\"`\").append(\"\\n\");\n@@ -96,7 +94,7 @@ public String buildModifyTaleSql(Table oldTable, Table newTable) {\n \n         // append modify column\n         for (TableColumn tableColumn : newTable.getColumnList()) {\n-            if (StringUtils.isNotBlank(tableColumn.getEditStatus()) && StringUtils.isNotBlank(tableColumn.getColumnType()) && StringUtils.isNotBlank(tableColumn.getName())) {\n+            if (StringUtils.isNotBlank(tableColumn.getEditStatus()) &&  StringUtils.isNotBlank(tableColumn.getColumnType())&& StringUtils.isNotBlank(tableColumn.getName())){\n                 MysqlColumnTypeEnum typeEnum = MysqlColumnTypeEnum.getByType(tableColumn.getColumnType());\n                 script.append(\"\\t\").append(typeEnum.buildModifyColumn(tableColumn)).append(\",\\n\");\n             }\n@@ -111,17 +109,18 @@ public String buildModifyTaleSql(Table oldTable, Table newTable) {\n         }\n \n         // append reorder column\n-        script.append(buildGenerateReorderColumnSql(oldTable, newTable));\n+        script.append(\"\\t\").append(buildGenerateReorderColumnSql(oldTable, newTable));\n \n-        if (script.length() > 2) {\n-            script = new StringBuilder(script.substring(0, script.length() - 2));\n+        if(script.length()>2) {\n+            script = new StringBuilder(script.substring(0, script.length() - 3));\n             script.append(\";\");\n         }\n \n         return script.toString();\n     }\n \n \n+\n     @Override\n     public String pageLimit(String sql, int offset, int pageNo, int pageSize) {\n         StringBuilder sqlBuilder = new StringBuilder(sql.length() + 14);\n@@ -139,10 +138,12 @@ public String pageLimit(String sql, int offset, int pageNo, int pageSize) {\n     }\n \n \n+\n+\n     @Override\n     public String buildCreateDatabaseSql(Database database) {\n         StringBuilder sqlBuilder = new StringBuilder();\n-        sqlBuilder.append(\"CREATE DATABASE `\" + database.getName() + \"`\");\n+        sqlBuilder.append(\"CREATE DATABASE `\"+database.getName()+\"`\");\n         if (StringUtils.isNotBlank(database.getCharset())) {\n             sqlBuilder.append(\" DEFAULT CHARACTER SET=\").append(database.getCharset());\n         }\n@@ -151,143 +152,38 @@ public String buildCreateDatabaseSql(Database database) {\n         }\n         return sqlBuilder.toString();\n     }\n-\n     public String buildGenerateReorderColumnSql(Table oldTable, Table newTable) {\n         StringBuilder sql = new StringBuilder();\n         int n = 0;\n-        // Create a map to store the index of each column in the old table's column list\n-        Map<String, Integer> oldColumnIndexMap = new HashMap<>();\n-        for (int i = 0; i < oldTable.getColumnList().size(); i++) {\n-            oldColumnIndexMap.put(oldTable.getColumnList().get(i).getName(), i);\n-        }\n-        String[] oldColumnArray = oldTable.getColumnList().stream().map(TableColumn::getName).toArray(String[]::new);\n-        String[] newColumnArray = newTable.getColumnList().stream().map(TableColumn::getName).toArray(String[]::new);\n-\n-        buildSql(oldColumnArray, newColumnArray, sql, oldTable, newTable, n);\n-\n-        return sql.toString();\n-    }\n-\n-    private String[] buildSql(String[] originalArray, String[] targetArray, StringBuilder sql, Table oldTable, Table newTable, int n) {\n-        // \u5148\u5b8c\u6210\u9996\u4f4d\u79fb\u52a8\n-        if (!originalArray[0].equals(targetArray[0])) {\n-            int a = findIndex(originalArray, targetArray[0]);\n-            TableColumn column = oldTable.getColumnList().stream().filter(col -> StringUtils.equals(col.getName(), originalArray[a])).findFirst().get();\n-            String[] newArray = moveElement(originalArray, a, 0);\n-            System.out.println(ArrayUtil.toString(newArray));\n-            sql.append(\" MODIFY COLUMN \");\n-            MysqlColumnTypeEnum typeEnum = MysqlColumnTypeEnum.getByType(column.getColumnType());\n-            sql.append(typeEnum.buildColumn(column));\n-            sql.append(\" FIRST;\\n\");\n-            n++;\n-            if (Arrays.equals(newArray, targetArray)) {\n-                return newArray;\n-            }\n-            String[] resultArray = buildSql(newArray, targetArray, sql, oldTable, newTable, n);\n-            if (Arrays.equals(resultArray, targetArray)) {\n-                return resultArray;\n-            }\n-        }\n-\n-        // \u5728\u5b8c\u6210\u6700\u540e\u4e00\u4f4d\u79fb\u52a8\n-        int max = originalArray.length - 1;\n-        if (!originalArray[max].equals(targetArray[max])) {\n-            int a = findIndex(originalArray, targetArray[max]);\n-            //System.out.println(\"Move \" + originalArray[a] + \" after \" + (a > 0 ? originalArray[max] : \"start\"));\n-            TableColumn column = oldTable.getColumnList().stream().filter(col -> StringUtils.equals(col.getName(), originalArray[a])).findFirst().get();\n-            String[] newArray = moveElement(originalArray, a, max);\n-            System.out.println(ArrayUtil.toString(newArray));\n-            if (n > 0) {\n-                sql.append(\"ALTER TABLE \");\n-                if (StringUtils.isNotBlank(oldTable.getDatabaseName())) {\n-                    sql.append(\"`\").append(oldTable.getDatabaseName()).append(\"`\").append(\".\");\n-                }\n-                sql.append(\"`\").append(oldTable.getName()).append(\"`\").append(\"\\n\");\n-            }\n-            sql.append(\" MODIFY COLUMN \");\n-            MysqlColumnTypeEnum typeEnum = MysqlColumnTypeEnum.getByType(column.getColumnType());\n-            sql.append(typeEnum.buildColumn(column));\n-            sql.append(\" \");\n-            sql.append(\" AFTER \");\n-            sql.append(oldTable.getColumnList().get(max).getName());\n-            sql.append(\";\\n\");\n-            n++;\n-            if (Arrays.equals(newArray, targetArray)) {\n-                return newArray;\n-            }\n-            String[] resultArray = buildSql(newArray, targetArray, sql, oldTable, newTable, n);\n-            if (Arrays.equals(resultArray, targetArray)) {\n-                return resultArray;\n-            }\n-        }\n-\n-\n-        for (int i = 0; i < originalArray.length; i++) {\n-            int a = findIndex(targetArray, originalArray[i]);\n-            if (i != a && isMoveValid(originalArray, targetArray, i, a)) {\n-                // oldTable.getColumnList\u4e2d\u67e5\u627ename\u4e3aa\n-                int finalI = i;\n-                TableColumn column = oldTable.getColumnList().stream().filter(col -> StringUtils.equals(col.getName(), originalArray[finalI])).findFirst().get();\n+        for (int i = 0; i < newTable.getColumnList().size(); i++) {\n+            TableColumn column = newTable.getColumnList().get(i);\n+            //String columnName = newTable.getColumnList().get(i).getName();\n+            // \u83b7\u53d6oldTable.getColumnList()\u4e2dname\u5c5e\u6027\u7684list\n+            List<String> oldColumnList = oldTable.getColumnList().stream()\n+                    .map(TableColumn::getName)\n+                    .collect(Collectors.toList());\n+\n+            if (i > oldColumnList.indexOf(column.getOldName())) {\n                 if (n > 0) {\n                     sql.append(\"ALTER TABLE \");\n-                    if (StringUtils.isNotBlank(oldTable.getDatabaseName())) {\n-                        sql.append(\"`\").append(oldTable.getDatabaseName()).append(\"`\").append(\".\");\n-                    }\n+                    sql.append(\"`\").append(column.getDatabaseName()).append(\"`\").append(\".\");\n                     sql.append(\"`\").append(oldTable.getName()).append(\"`\").append(\"\\n\");\n                 }\n                 sql.append(\" MODIFY COLUMN \");\n                 MysqlColumnTypeEnum typeEnum = MysqlColumnTypeEnum.getByType(column.getColumnType());\n                 sql.append(typeEnum.buildColumn(column));\n                 sql.append(\" \");\n-                sql.append(\" AFTER \");\n-                if (i < a) {\n-                    sql.append(originalArray[a]);\n+                if (i > 0) {\n+                    sql.append(\" AFTER \");\n+                    sql.append(newTable.getColumnList().get(i - 1).getName());\n                 } else {\n-                    sql.append(originalArray[a - 1]);\n+                    sql.append(\" FIRST\");\n                 }\n-\n-                sql.append(\";\\n\");\n+                sql.append(\" ;\\n\");\n                 n++;\n-                String[] newArray = moveElement(originalArray, i, a);\n-                if (Arrays.equals(newArray, targetArray)) {\n-                    return newArray;\n-                }\n-                String[] resultArray = buildSql(newArray, targetArray, sql, oldTable, newTable, n);\n-                if (Arrays.equals(resultArray, targetArray)) {\n-                    return resultArray;\n-                }\n-            }\n-        }\n-        return null;\n-    }\n-\n-    private static int findIndex(String[] array, String element) {\n-        for (int i = 0; i < array.length; i++) {\n-            if (array[i].equals(element)) {\n-                return i;\n             }\n-        }\n-        return -1;\n-    }\n \n-    private static boolean isMoveValid(String[] originalArray, String[] targetArray, int i, int a) {\n-        System.out.println(\"i : \" + i + \" a:\" + a);\n-        return (i == 0 || a == 0 || !originalArray[i - 1].equals(targetArray[a - 1])) &&\n-                (i >= originalArray.length - 1 || a >= targetArray.length - 1 || !originalArray[i + 1].equals(targetArray[a + 1]));\n-    }\n-\n-    private static String[] moveElement(String[] originalArray, int from, int to) {\n-        String[] newArray = new String[originalArray.length];\n-        System.arraycopy(originalArray, 0, newArray, 0, originalArray.length);\n-        String temp = newArray[from];\n-        if (from < to) {\n-            System.arraycopy(originalArray, from + 1, newArray, from, to - from);\n-        } else {\n-            System.arraycopy(originalArray, to, newArray, to + 1, from - to);\n         }\n-        newArray[to] = temp;\n-        System.out.println(ArrayUtil.toString(newArray));\n-        return newArray;\n+        return sql.toString();\n     }\n-\n }",
      "parent_sha": "d4af8cefba374b45ba3a15722e610b85e061c061"
    }
  },
  {
    "oid": "7f450a6527d3006d5a0aaa41896c90be5170abb2",
    "message": "openai config update",
    "date": "2023-07-29T02:16:15Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/7f450a6527d3006d5a0aaa41896c90be5170abb2",
    "details": {
      "sha": "fe645311a6c18e99321d366529f671f019209840",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/config/ConfigController.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/7f450a6527d3006d5a0aaa41896c90be5170abb2/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fconfig%2FConfigController.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/7f450a6527d3006d5a0aaa41896c90be5170abb2/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fconfig%2FConfigController.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fconfig%2FConfigController.java?ref=7f450a6527d3006d5a0aaa41896c90be5170abb2",
      "patch": "@@ -58,11 +58,11 @@ public ActionResult systemConfig(@RequestBody SystemConfigRequest request) {\n     @PostMapping(\"/system_config/chatgpt\")\n     public ActionResult addChatGptSystemConfig(@RequestBody AISystemConfigRequest request) {\n         String sqlSource = StringUtils.isNotBlank(request.getAiSqlSource()) ? request.getAiSqlSource()\n-            : AiSqlSourceEnum.OPENAI.getCode();\n+            : AiSqlSourceEnum.CHAT2DBAI.getCode();\n         AiSqlSourceEnum aiSqlSourceEnum = AiSqlSourceEnum.getByName(sqlSource);\n         if (Objects.isNull(aiSqlSourceEnum)) {\n-            aiSqlSourceEnum = AiSqlSourceEnum.OPENAI;\n-            sqlSource = AiSqlSourceEnum.OPENAI.getCode();\n+            aiSqlSourceEnum = AiSqlSourceEnum.CHAT2DBAI;\n+            sqlSource = AiSqlSourceEnum.CHAT2DBAI.getCode();\n         }\n         SystemConfigParam param = SystemConfigParam.builder().code(RestAIClient.AI_SQL_SOURCE).content(sqlSource)\n             .build();",
      "parent_sha": "d7842a82aa1da3a6dbe6d44690a2f273971cced4"
    }
  },
  {
    "oid": "153ea3aecbe1c43a3378ee6896232706e3e15d34",
    "message": "fix(chat2db-dm): correct spelling of NUMERIC in DMColumnTypeEnum",
    "date": "2024-06-13T07:17:20Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/153ea3aecbe1c43a3378ee6896232706e3e15d34",
    "details": {
      "sha": "cd422fbde836a9d2b240c3ab8a44a2ab5e62bffe",
      "filename": "chat2db-server/chat2db-plugins/chat2db-dm/src/main/java/ai/chat2db/plugin/dm/type/DMColumnTypeEnum.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/153ea3aecbe1c43a3378ee6896232706e3e15d34/chat2db-server%2Fchat2db-plugins%2Fchat2db-dm%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fdm%2Ftype%2FDMColumnTypeEnum.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/153ea3aecbe1c43a3378ee6896232706e3e15d34/chat2db-server%2Fchat2db-plugins%2Fchat2db-dm%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fdm%2Ftype%2FDMColumnTypeEnum.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-dm%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fdm%2Ftype%2FDMColumnTypeEnum.java?ref=153ea3aecbe1c43a3378ee6896232706e3e15d34",
      "patch": "@@ -89,7 +89,7 @@ public enum DMColumnTypeEnum implements ColumnBuilder {\n     TEXT(\"TEXT\", false, false, true, false, false, false, true, true, false, false),\n \n \n-    NUMBERIC(\"NUMBERIC\", true, true, true, false, false, false, true, true, false, false),\n+    NUMERIC(\"NUMERIC\", true, true, true, false, false, false, true, true, false, false),\n \n \n     NUMBER(\"NUMBER\", true, true, true, false, false, false, true, true, false, false),\n@@ -222,7 +222,7 @@ private String buildDataType(TableColumn column, DMColumnTypeEnum type) {\n             return script.toString();\n         }\n \n-        if (Arrays.asList(DECIMAL,DEC, FLOAT, NUMBER, TIMESTAMP, NUMBERIC).contains(type)) {\n+        if (Arrays.asList(DECIMAL, DEC, FLOAT, NUMBER, TIMESTAMP, NUMERIC).contains(type)) {\n             StringBuilder script = new StringBuilder();\n             script.append(columnType);\n             if (column.getColumnSize() != null && column.getDecimalDigits() == null) {",
      "parent_sha": "c560f7ed0bac1b1c9cf1fa8ddfcc980e826ef851"
    }
  },
  {
    "oid": "1a40ac290fd848414ecf958f9f0757b587c7743f",
    "message": "support select result data update",
    "date": "2023-10-11T08:12:11Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/1a40ac290fd848414ecf958f9f0757b587c7743f",
    "details": {
      "sha": "626663fecb24d4c2b78c8a9317eab26066f15e73",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/rdb/RdbDmlController.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/1a40ac290fd848414ecf958f9f0757b587c7743f/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Frdb%2FRdbDmlController.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/1a40ac290fd848414ecf958f9f0757b587c7743f/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Frdb%2FRdbDmlController.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Frdb%2FRdbDmlController.java?ref=1a40ac290fd848414ecf958f9f0757b587c7743f",
      "patch": "@@ -73,7 +73,7 @@ public  DataResult<ExecuteResultVO> executeSelectResultUpdate(@RequestBody DmlRe\n \n     }\n     @RequestMapping(value = \"/get_update_sql\", method = {RequestMethod.POST, RequestMethod.PUT})\n-    public DataResult<String> getUpdateSelectResultSql(SelectResultUpdateRequest request) {\n+    public DataResult<String> getUpdateSelectResultSql(@RequestBody SelectResultUpdateRequest request) {\n         UpdateSelectResultParam param = rdbWebConverter.request2param(request);\n         return dlTemplateService.updateSelectResult(param);\n     }",
      "parent_sha": "cec5603dd1e02ce577c3068f4fc266fcd8ea699b"
    }
  },
  {
    "oid": "647efaa496cf7f3ad91cbf114a54abd9ad3aa8d3",
    "message": "\u4fee\u590d\u4e0d\u5b58\u5728\u6570\u636e\u5e93\u7c7b\u578b\u5bfc\u81f4\u7684\u5bfc\u5165\u5931\u8d25\u95ee\u9898",
    "date": "2023-09-22T08:44:13Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/647efaa496cf7f3ad91cbf114a54abd9ad3aa8d3",
    "details": {
      "sha": "d8237551862f2acca583c8fd9b45b3f1af84e167",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/ncx/service/impl/ConverterServiceImpl.java",
      "status": "modified",
      "additions": 12,
      "deletions": 5,
      "changes": 17,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/647efaa496cf7f3ad91cbf114a54abd9ad3aa8d3/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fncx%2Fservice%2Fimpl%2FConverterServiceImpl.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/647efaa496cf7f3ad91cbf114a54abd9ad3aa8d3/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fncx%2Fservice%2Fimpl%2FConverterServiceImpl.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fncx%2Fservice%2Fimpl%2FConverterServiceImpl.java?ref=647efaa496cf7f3ad91cbf114a54abd9ad3aa8d3",
      "patch": "@@ -111,19 +111,26 @@ public void insertDBConfig(List<Map<String, Map<String, String>>> list) {\n         for (Map<String, Map<String, String>> map : list) {\n             for (Map.Entry<String, Map<String, String>> valueMap : map.entrySet()) {\n                 Map<String, String> resultMap = valueMap.getValue();\n+                // mysql\u7684\u7248\u672c\u8fd8\u65e0\u6cd5\u533a\u5206\n+                DataBaseType dataBaseType = DataBaseType.matchType(resultMap.get(\"ConnType\"));\n+                DataSourceDO dataSourceDO;\n+                if (null == dataBaseType) {\n+                    //\u672a\u5339\u914d\u5230\u6570\u636e\u5e93\u7c7b\u578b\uff0c\u5982\uff1anavicat\u652f\u6301MongoDB\u7b49\uff0c\u4f46chat2DB\u6682\u4e0d\u652f\u6301\n+                    continue;\n+                } else {\n+                    dataSourceDO = new DataSourceDO();\n+                    dataSourceDO.setHost(resultMap.get(\"Host\"));\n+                    dataSourceDO.setPort(resultMap.get(\"Port\"));\n+                    dataSourceDO.setUrl(String.format(dataBaseType.getUrlString(), dataSourceDO.getHost(), dataSourceDO.getPort()));\n+                }\n                 // \u89e3\u5bc6\u5bc6\u7801\n                 String password = cipher.decryptString(resultMap.getOrDefault(\"Password\", \"\"));\n-                DataSourceDO dataSourceDO = new DataSourceDO();\n                 LocalDateTime dateTime = LocalDateTime.now();\n                 dataSourceDO.setGmtCreate(dateTime);\n                 dataSourceDO.setGmtModified(dateTime);\n                 dataSourceDO.setAlias(resultMap.get(\"ConnectionName\"));\n-                dataSourceDO.setHost(resultMap.get(\"Host\"));\n-                dataSourceDO.setPort(resultMap.get(\"Port\"));\n                 dataSourceDO.setUserName(resultMap.get(\"UserName\"));\n                 dataSourceDO.setType(resultMap.get(\"ConnType\"));\n-                // mysql\u7684\u7248\u672c\u8fd8\u65e0\u6cd5\u533a\u5206\n-                dataSourceDO.setUrl(String.format(Objects.requireNonNull(DataBaseType.matchType(dataSourceDO.getType())).getUrlString(), dataSourceDO.getHost(), dataSourceDO.getPort()));\n                 //password \u4e3a\u89e3\u5bc6\u51fa\u6765\u7684\u5bc6\u6587\uff0c\u518d\u4f7f\u7528chat2db\u7684\u52a0\u5bc6\n                 DesUtil desUtil = new DesUtil(DesUtil.DES_KEY);\n                 String encryptStr = desUtil.encrypt(password, \"CBC\");",
      "parent_sha": "c1f04ca0ff140a5a131ef817a4e2b4eb11a0ab66"
    }
  },
  {
    "oid": "ee59216fd7beca07ecb3ac960244a28b58b7de2d",
    "message": "\u65e5\u5fd7",
    "date": "2023-10-18T06:10:35Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/ee59216fd7beca07ecb3ac960244a28b58b7de2d",
    "details": {
      "sha": "ac0780ce8ff67fbae26348dd96ae23038ec45018",
      "filename": "chat2db-server/chat2db-server-tools/chat2db-server-tools-common/src/main/java/ai/chat2db/server/tools/common/util/ConfigUtils.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/ee59216fd7beca07ecb3ac960244a28b58b7de2d/chat2db-server%2Fchat2db-server-tools%2Fchat2db-server-tools-common%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Ftools%2Fcommon%2Futil%2FConfigUtils.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/ee59216fd7beca07ecb3ac960244a28b58b7de2d/chat2db-server%2Fchat2db-server-tools%2Fchat2db-server-tools-common%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Ftools%2Fcommon%2Futil%2FConfigUtils.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-tools%2Fchat2db-server-tools-common%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Ftools%2Fcommon%2Futil%2FConfigUtils.java?ref=ee59216fd7beca07ecb3ac960244a28b58b7de2d",
      "patch": "@@ -127,7 +127,7 @@ public static void saveFile(String dir, String path, boolean isOverride) {\n             }\n             outputStream.flush();\n         } catch (Exception e) {\n-            log.error(\"getAppPath error\", e);\n+            log.error(\"saveFile error\", e);\n         }\n     }\n }",
      "parent_sha": "36ea5fb5ecb9a290c7c8c34f64d6f3d3c7abb796"
    }
  },
  {
    "oid": "e6ef675fb6a986f8294a25d037a037ec4b8e3510",
    "message": "Example Modify the verification prompt",
    "date": "2023-06-23T07:00:49Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/e6ef675fb6a986f8294a25d037a037ec4b8e3510",
    "details": {
      "sha": "a66c5a504448d435f6405ba43501cacb030f680f",
      "filename": "chat2db-server/chat2db-server-start/src/main/java/ai/chat2db/server/start/exception/convertor/ExceptionConvertorUtils.java",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/e6ef675fb6a986f8294a25d037a037ec4b8e3510/chat2db-server%2Fchat2db-server-start%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fstart%2Fexception%2Fconvertor%2FExceptionConvertorUtils.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/e6ef675fb6a986f8294a25d037a037ec4b8e3510/chat2db-server%2Fchat2db-server-start%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fstart%2Fexception%2Fconvertor%2FExceptionConvertorUtils.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-start%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fstart%2Fexception%2Fconvertor%2FExceptionConvertorUtils.java?ref=e6ef675fb6a986f8294a25d037a037ec4b8e3510",
      "patch": "@@ -3,10 +3,10 @@\n import java.util.List;\n \n import ai.chat2db.server.tools.base.constant.SymbolConstant;\n-\n import ai.chat2db.server.tools.common.util.I18nUtils;\n import org.springframework.util.CollectionUtils;\n import org.springframework.validation.BindingResult;\n+import org.springframework.validation.FieldError;\n import org.springframework.validation.ObjectError;\n \n /**\n@@ -35,6 +35,10 @@ public static String buildMessage(BindingResult result) {\n             msg.append(index++);\n             // \u5f97\u5230\u9519\u8bef\u6d88\u606f\n             msg.append(SymbolConstant.DOT);\n+            if (e instanceof FieldError fieldError) {\n+                msg.append(fieldError.getField());\n+                msg.append(\" : \");\n+            }\n             msg.append(e.getDefaultMessage());\n             msg.append(SymbolConstant.SEMICOLON);\n         }",
      "parent_sha": "9b16a8843cd6e83efa36a8d7721dd96c2c4fabbf"
    }
  },
  {
    "oid": "cc9068850e013951b94272acb4626b806165814e",
    "message": "Fix Issue #974\uff1aUnable to modify column name",
    "date": "2024-02-05T07:04:41Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/cc9068850e013951b94272acb4626b806165814e",
    "details": {
      "sha": "7a2c383014f5840cabbf26bf233f54e068eab0f9",
      "filename": "chat2db-server/chat2db-plugins/chat2db-mysql/src/main/java/ai/chat2db/plugin/mysql/builder/MysqlSqlBuilder.java",
      "status": "modified",
      "additions": 7,
      "deletions": 3,
      "changes": 10,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/cc9068850e013951b94272acb4626b806165814e/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fbuilder%2FMysqlSqlBuilder.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/cc9068850e013951b94272acb4626b806165814e/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fbuilder%2FMysqlSqlBuilder.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fbuilder%2FMysqlSqlBuilder.java?ref=cc9068850e013951b94272acb4626b806165814e",
      "patch": "@@ -11,9 +11,7 @@\n import cn.hutool.core.util.ArrayUtil;\n import org.apache.commons.lang3.StringUtils;\n \n-import java.util.Arrays;\n-import java.util.HashMap;\n-import java.util.Map;\n+import java.util.*;\n \n \n public class MysqlSqlBuilder extends DefaultSqlBuilder implements SqlBuilder {\n@@ -163,6 +161,12 @@ public String buildGenerateReorderColumnSql(Table oldTable, Table newTable) {\n         String[] oldColumnArray = oldTable.getColumnList().stream().map(TableColumn::getName).toArray(String[]::new);\n         String[] newColumnArray = newTable.getColumnList().stream().map(TableColumn::getName).toArray(String[]::new);\n \n+        Set<String> oldColumnSet = new HashSet<>(Arrays.asList(oldColumnArray));\n+        Set<String> newColumnSet = new HashSet<>(Arrays.asList(newColumnArray));\n+        if (!oldColumnSet.equals(newColumnSet)) {\n+            return \"\";\n+        }\n+\n         buildSql(oldColumnArray, newColumnArray, sql, oldTable, newTable, n);\n \n         return sql.toString();",
      "parent_sha": "de4aa388844f1b236fdc5b222179977765498936"
    }
  },
  {
    "oid": "3e0412e09a435eb3cd025ef751e4a951d592fc5c",
    "message": "Fix the extra comma in mysql edit table",
    "date": "2023-12-29T03:56:16Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/3e0412e09a435eb3cd025ef751e4a951d592fc5c",
    "details": {
      "sha": "1a97c843b76818f7aa01248da684ba84141bc799",
      "filename": "chat2db-server/chat2db-plugins/chat2db-mysql/src/main/java/ai/chat2db/plugin/mysql/builder/MysqlSqlBuilder.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/3e0412e09a435eb3cd025ef751e4a951d592fc5c/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fbuilder%2FMysqlSqlBuilder.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/3e0412e09a435eb3cd025ef751e4a951d592fc5c/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fbuilder%2FMysqlSqlBuilder.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fbuilder%2FMysqlSqlBuilder.java?ref=3e0412e09a435eb3cd025ef751e4a951d592fc5c",
      "patch": "@@ -111,7 +111,7 @@ public String buildModifyTaleSql(Table oldTable, Table newTable) {\n         }\n \n         // append reorder column\n-        script.append(\"\\t\").append(buildGenerateReorderColumnSql(oldTable, newTable));\n+        script.append(buildGenerateReorderColumnSql(oldTable, newTable));\n \n         if (script.length() > 2) {\n             script = new StringBuilder(script.substring(0, script.length() - 2));",
      "parent_sha": "056df5d273ed35f2234a13d1325feb6de9ec98d2"
    }
  },
  {
    "oid": "79ffd2c1f246ccea9243c8e90a433b55e46d4e57",
    "message": "mask log",
    "date": "2023-08-13T09:00:39Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/79ffd2c1f246ccea9243c8e90a433b55e46d4e57",
    "details": {
      "sha": "605c284460fee1e22d91ca389d65e3b6908eaec5",
      "filename": "chat2db-server/chat2db-server-tools/chat2db-server-tools-common/src/main/java/ai/chat2db/server/tools/common/util/LogUtils.java",
      "status": "modified",
      "additions": 20,
      "deletions": 1,
      "changes": 21,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/79ffd2c1f246ccea9243c8e90a433b55e46d4e57/chat2db-server%2Fchat2db-server-tools%2Fchat2db-server-tools-common%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Ftools%2Fcommon%2Futil%2FLogUtils.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/79ffd2c1f246ccea9243c8e90a433b55e46d4e57/chat2db-server%2Fchat2db-server-tools%2Fchat2db-server-tools-common%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Ftools%2Fcommon%2Futil%2FLogUtils.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-tools%2Fchat2db-server-tools-common%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Ftools%2Fcommon%2Futil%2FLogUtils.java?ref=79ffd2c1f246ccea9243c8e90a433b55e46d4e57",
      "patch": "@@ -5,6 +5,7 @@\n \n import cn.hutool.core.lang.UUID;\n import cn.hutool.core.net.NetUtil;\n+import org.apache.commons.lang3.StringUtils;\n import org.zalando.logbook.HttpHeaders;\n import org.zalando.logbook.HttpRequest;\n \n@@ -36,6 +37,24 @@ public class LogUtils {\n      */\n     private static final Pattern LINE_FEED_PATTERN = Pattern.compile(\"\\r|\\n\");\n \n+    /**\n+     * mask string\n+     *\n+     * @param input\n+     * @return\n+     */\n+    private static String maskString(String input) {\n+        if (StringUtils.isBlank(input)) {\n+            return input;\n+        }\n+\n+        StringBuilder maskedString = new StringBuilder(input);\n+        for (int i = 0; i < input.length(); i += 2) {\n+            maskedString.setCharAt(i, '*');\n+        }\n+        return maskedString.toString();\n+    }\n+\n     /**\n      * \u53bb\u9664\u6362\u884c\u7b26\n      *\n@@ -59,7 +78,7 @@ public static String cutLog(Object log) {\n         if (Objects.isNull(log)) {\n             return null;\n         }\n-        return EasyStringUtils.limitString(removeCrlf(log.toString()), MAX_LOG_LENGTH);\n+        return EasyStringUtils.limitString(maskString(removeCrlf(log.toString())), MAX_LOG_LENGTH);\n     }\n \n     /**",
      "parent_sha": "cd5e07e11f61ec762f13d8a9f7d90e06f02358a5"
    }
  },
  {
    "oid": "f91aba51eb7e676bad3cd8f021f0a2b7d11a0fd4",
    "message": "enhance readability",
    "date": "2024-03-08T09:15:38Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/f91aba51eb7e676bad3cd8f021f0a2b7d11a0fd4",
    "details": {
      "sha": "73b292167c41f3bd9300579962797511c2ff814b",
      "filename": "chat2db-server/chat2db-plugins/chat2db-dm/src/main/java/ai/chat2db/plugin/dm/DMMetaData.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/f91aba51eb7e676bad3cd8f021f0a2b7d11a0fd4/chat2db-server%2Fchat2db-plugins%2Fchat2db-dm%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fdm%2FDMMetaData.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/f91aba51eb7e676bad3cd8f021f0a2b7d11a0fd4/chat2db-server%2Fchat2db-plugins%2Fchat2db-dm%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fdm%2FDMMetaData.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-dm%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fdm%2FDMMetaData.java?ref=f91aba51eb7e676bad3cd8f021f0a2b7d11a0fd4",
      "patch": "@@ -44,8 +44,8 @@ public String tableDDL(Connection connection, String databaseName, String schema\n         return SQLExecutor.getInstance().execute(connection, selectObjectDDLSQL, resultSet -> {\n             try {\n                 if (resultSet.next()) {\n-                    String ddl = resultSet.getString(2);\n-                    String comment = resultSet.getString(1);\n+                    String ddl = resultSet.getString(\"ddl\");\n+                    String comment = resultSet.getString(\"comments\");\n                     if (StringUtils.isNotBlank(comment)) {\n                         return ddl +\"\\n\"+ \"COMMENT ON TABLE \" + format(schemaName) + \".\" + format(tableName) +\n                                 \" IS \" + \"'\" + comment + \"';\";",
      "parent_sha": "ce801277775860fde3a94b0b7d149cd9f3efdce5"
    }
  },
  {
    "oid": "094043b0de61e2eb346eea5a1a116624b578f3e5",
    "message": "bugfix: fix #982 table names were conflicting with database keywords and causing query failures",
    "date": "2023-12-23T05:05:28Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/094043b0de61e2eb346eea5a1a116624b578f3e5",
    "details": {
      "sha": "25c60e457ada843f4db15c7601bda182580f3b6b",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/rdb/RdbDmlController.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/094043b0de61e2eb346eea5a1a116624b578f3e5/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Frdb%2FRdbDmlController.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/094043b0de61e2eb346eea5a1a116624b578f3e5/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Frdb%2FRdbDmlController.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Frdb%2FRdbDmlController.java?ref=094043b0de61e2eb346eea5a1a116624b578f3e5",
      "patch": "@@ -71,7 +71,8 @@ public ListResult<ExecuteResultVO> executeTable(@RequestBody DmlTableRequest req\n         if (DataSourceTypeEnum.MONGODB.getCode().equals(type)) {\n             param.setSql(\"db.\" + request.getTableName() + \".find()\");\n         } else {\n-            param.setSql(\"select * from \" + request.getTableName());\n+            // \u62fc\u63a5`tableName`\uff0c\u907f\u514d\u5173\u952e\u5b57\u88ab\u5360\u7528\u95ee\u9898\n+            param.setSql(\"select * from \" +\"`\"+ request.getTableName()+\"`\");\n         }\n         return dlTemplateService.execute(param)\n             .map(rdbWebConverter::dto2vo);",
      "parent_sha": "a4457edb6479e1a16ab756312fddf6088e5e1eb9"
    }
  },
  {
    "oid": "73cd1908caf5f2f6d0d767008c394b02768ee276",
    "message": "fix-mysql-view-ddl-query",
    "date": "2024-03-12T11:09:48Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/73cd1908caf5f2f6d0d767008c394b02768ee276",
    "details": {
      "sha": "c6e82441e1e0abee20d0ca883882a81a5c003558",
      "filename": "chat2db-server/chat2db-plugins/chat2db-mysql/src/main/java/ai/chat2db/plugin/mysql/MysqlMetaData.java",
      "status": "modified",
      "additions": 3,
      "deletions": 6,
      "changes": 9,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/73cd1908caf5f2f6d0d767008c394b02768ee276/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2FMysqlMetaData.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/73cd1908caf5f2f6d0d767008c394b02768ee276/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2FMysqlMetaData.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2FMysqlMetaData.java?ref=73cd1908caf5f2f6d0d767008c394b02768ee276",
      "patch": "@@ -214,21 +214,18 @@ private void setColumnSize(TableColumn column, String columnType) {\n         }\n     }\n \n-\n-    private static String VIEW_SQL\n-            = \"SELECT TABLE_SCHEMA AS DatabaseName, TABLE_NAME AS ViewName, VIEW_DEFINITION AS definition, CHECK_OPTION, \"\n-            + \"IS_UPDATABLE FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_SCHEMA = '%s' AND TABLE_NAME = '%s';\";\n+    private static String VIEW_DDL_SQL=\"show create view %s\";\n \n     @Override\n     public Table view(Connection connection, String databaseName, String schemaName, String viewName) {\n-        String sql = String.format(VIEW_SQL, databaseName, viewName);\n+        String sql = String.format(VIEW_DDL_SQL, viewName);\n         return SQLExecutor.getInstance().execute(connection, sql, resultSet -> {\n             Table table = new Table();\n             table.setDatabaseName(databaseName);\n             table.setSchemaName(schemaName);\n             table.setName(viewName);\n             if (resultSet.next()) {\n-                table.setDdl(resultSet.getString(\"definition\"));\n+                table.setDdl(resultSet.getString(\"Create View\"));\n             }\n             return table;\n         });",
      "parent_sha": "7f95de6afd7738244a30987110ebe785a5aaf0c5"
    }
  },
  {
    "oid": "5c40fc6bebf4f8ce0abc1007f2186b6350d95cec",
    "message": "\u5f53\u6570\u636e\u5e93\u4e3ahive\u65f6\uff0c\u67e5\u770bschema\u65f6\u5c06url\u8bbe\u7f6e\u6210\u7a7a",
    "date": "2024-03-12T17:22:20Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/5c40fc6bebf4f8ce0abc1007f2186b6350d95cec",
    "details": {
      "sha": "47c06ac6a62d7fd972348b8bbf8a25fbf4fc59ff",
      "filename": "chat2db-server/chat2db-server-domain/chat2db-server-domain-core/src/main/java/ai/chat2db/server/domain/core/impl/DatabaseServiceImpl.java",
      "status": "modified",
      "additions": 7,
      "deletions": 3,
      "changes": 10,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/5c40fc6bebf4f8ce0abc1007f2186b6350d95cec/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-core%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fcore%2Fimpl%2FDatabaseServiceImpl.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/5c40fc6bebf4f8ce0abc1007f2186b6350d95cec/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-core%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fcore%2Fimpl%2FDatabaseServiceImpl.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-core%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fcore%2Fimpl%2FDatabaseServiceImpl.java?ref=5c40fc6bebf4f8ce0abc1007f2186b6350d95cec",
      "patch": "@@ -80,17 +80,21 @@ private void sortSchema(List<Schema> schemas, Connection connection) {\n         if (CollectionUtils.isEmpty(schemas)) {\n             return;\n         }\n-        String ulr = null;\n+        String url = null;\n         try {\n-            ulr = connection.getMetaData().getURL();\n+            if (connection.getMetaData().getClass().getName().contains(\"HiveDatabaseMetaData\")) {\n+                url = \"\";\n+            } else {\n+                url = connection.getMetaData().getURL();\n+            }\n         } catch (SQLException e) {\n             log.error(\"get url error\", e);\n         }\n         // If the database name contains the name of the current database, the current database is placed in the first place\n         int num = -1;\n         for (int i = 0; i < schemas.size(); i++) {\n             String schema = schemas.get(i).getName();\n-            if (StringUtils.isNotBlank(ulr) && schema!=null && ulr.contains(schema)) {\n+            if (StringUtils.isNotBlank(url) && schema!=null && url.contains(schema)) {\n                 num = i;\n                 break;\n             }",
      "parent_sha": "2292f3dad79d9d804ebcb13938a752a9389b9566"
    }
  },
  {
    "oid": "656cd3a33838e4809f8736ddf3486f5641767fc2",
    "message": "fix dm function bug",
    "date": "2023-08-29T13:52:53Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/656cd3a33838e4809f8736ddf3486f5641767fc2",
    "details": {
      "sha": "f6555f64d695db87b4219f2f7b6b39571118b184",
      "filename": "chat2db-server/chat2db-plugins/chat2db-dm/src/main/java/ai/chat2db/plugin/dm/DMMetaData.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/656cd3a33838e4809f8736ddf3486f5641767fc2/chat2db-server%2Fchat2db-plugins%2Fchat2db-dm%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fdm%2FDMMetaData.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/656cd3a33838e4809f8736ddf3486f5641767fc2/chat2db-server%2Fchat2db-plugins%2Fchat2db-dm%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fdm%2FDMMetaData.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-dm%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fdm%2FDMMetaData.java?ref=656cd3a33838e4809f8736ddf3486f5641767fc2",
      "patch": "@@ -34,7 +34,7 @@ public String tableDDL(Connection connection, String databaseName, String schema\n     }\n \n     private static String ROUTINES_SQL\n-        = \"SELECT OWNER, NAME, TEXT FROM ALL_SOURCE WHERE TYPE = '%s' AND NAME = '%s' AND NAME = '%s' ORDER BY LINE\";\n+        = \"SELECT OWNER, NAME, TEXT FROM ALL_SOURCE WHERE TYPE = '%s' AND OWNER = '%s' AND NAME = '%s' ORDER BY LINE\";\n \n     @Override\n     public Function function(Connection connection, @NotEmpty String databaseName, String schemaName,",
      "parent_sha": "1a33f2a8381106f073707bbb734b20eaa51100c7"
    }
  },
  {
    "oid": "aa03a4104df5276405099628f9027955b3aed49c",
    "message": "order by saved queries",
    "date": "2023-07-01T06:58:49Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/aa03a4104df5276405099628f9027955b3aed49c",
    "details": {
      "sha": "470ac7d71c25861c1b68de7c30523105bb5b5c2a",
      "filename": "chat2db-server/chat2db-server-domain/chat2db-server-domain-api/src/main/java/ai/chat2db/server/domain/api/param/OperationPageQueryParam.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/aa03a4104df5276405099628f9027955b3aed49c/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fapi%2Fparam%2FOperationPageQueryParam.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/aa03a4104df5276405099628f9027955b3aed49c/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fapi%2Fparam%2FOperationPageQueryParam.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fapi%2Fparam%2FOperationPageQueryParam.java?ref=aa03a4104df5276405099628f9027955b3aed49c",
      "patch": "@@ -40,5 +40,5 @@ public class OperationPageQueryParam extends PageQueryParam {\n     /**\n      * orderBy modify time desc\n      */\n-    private Boolean orderByDesc;\n+    private boolean orderByDesc;\n }",
      "parent_sha": "7ec9399a4f684992943998c1288e96be0439e7e1"
    }
  },
  {
    "oid": "a4a8b80fd1ab5d6525be16aaea5d045e2df7a263",
    "message": "add i18n",
    "date": "2023-07-01T06:05:02Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/a4a8b80fd1ab5d6525be16aaea5d045e2df7a263",
    "details": {
      "sha": "b31ad8ec78e69f8acc30de0ad61efc402a759e66",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/ai/ChatController.java",
      "status": "modified",
      "additions": 30,
      "deletions": 6,
      "changes": 36,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/a4a8b80fd1ab5d6525be16aaea5d045e2df7a263/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FChatController.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/a4a8b80fd1ab5d6525be16aaea5d045e2df7a263/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FChatController.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FChatController.java?ref=a4a8b80fd1ab5d6525be16aaea5d045e2df7a263",
      "patch": "@@ -208,7 +208,7 @@ public SseEmitter completions(ChatQueryRequest queryRequest, @RequestHeader Map<\n             throw new ParamBusinessException(\"message\");\n         }\n \n-        return distributeAI(queryRequest.getMessage(), sseEmitter, uid);\n+        return distributeAISql(queryRequest, sseEmitter, uid);\n     }\n \n     /**\n@@ -225,12 +225,30 @@ private SseEmitter distributeAI(String msg, SseEmitter sseEmitter, String uid) t\n                 return chatWithOpenAi(msg, sseEmitter, uid);\n             case RESTAI :\n                 return chatWithRestAi(msg, sseEmitter);\n-            case AZUREAI :\n-                return chatWithAzureAi(msg, sseEmitter, uid);\n         }\n         return chatWithOpenAi(msg, sseEmitter, uid);\n     }\n \n+    /**\n+     * distribute with different AI\n+     *\n+     * @return\n+     */\n+    private SseEmitter distributeAISql(ChatQueryRequest queryRequest, SseEmitter sseEmitter, String uid) throws IOException {\n+        ConfigService configService = ApplicationContextUtil.getBean(ConfigService.class);\n+        Config config = configService.find(RestAIClient.AI_SQL_SOURCE).getData();\n+        AiSqlSourceEnum aiSqlSourceEnum = AiSqlSourceEnum.getByName(config.getContent());\n+        switch (Objects.requireNonNull(aiSqlSourceEnum)) {\n+            case OPENAI :\n+                return chatWithOpenAiSql(queryRequest, sseEmitter, uid);\n+            case RESTAI :\n+                return chatWithRestAi(queryRequest.getMessage(), sseEmitter);\n+            case AZUREAI :\n+                return chatWithAzureAi(queryRequest, sseEmitter, uid);\n+        }\n+        return chatWithOpenAiSql(queryRequest, sseEmitter, uid);\n+    }\n+\n     /**\n      * \u4f7f\u7528\u81ea\u5b9a\u4e49AI\u63a5\u53e3\u8fdb\u884c\u804a\u5929\n      *\n@@ -309,13 +327,19 @@ private SseEmitter chatWithOpenAi(String msg, SseEmitter sseEmitter, String uid)\n     /**\n      * chat with azure openai\n      *\n-     * @param msg\n+     * @param queryRequest\n      * @param sseEmitter\n      * @param uid\n      * @return\n      * @throws IOException\n      */\n-    private SseEmitter chatWithAzureAi(String msg, SseEmitter sseEmitter, String uid) throws IOException {\n+    private SseEmitter chatWithAzureAi(ChatQueryRequest queryRequest, SseEmitter sseEmitter, String uid) throws IOException {\n+        String prompt = buildPrompt(queryRequest);\n+        if (prompt.length() / TOKEN_CONVERT_CHAR_LENGTH > MAX_PROMPT_LENGTH) {\n+            log.error(\"\u63d0\u793a\u8bed\u8d85\u51fa\u6700\u5927\u957f\u5ea6:{}\uff0c\u8f93\u5165\u957f\u5ea6:{}, \u8bf7\u91cd\u65b0\u8f93\u5165\", MAX_PROMPT_LENGTH,\n+                    prompt.length() / TOKEN_CONVERT_CHAR_LENGTH);\n+            throw new ParamBusinessException();\n+        }\n         String messageContext = (String)LocalCache.CACHE.get(uid);\n         List<ChatMessage> messages = new ArrayList<>();\n         if (StrUtil.isNotBlank(messageContext)) {\n@@ -324,7 +348,7 @@ private SseEmitter chatWithAzureAi(String msg, SseEmitter sseEmitter, String uid\n                 messages = messages.subList(1, contextLength);\n             }\n         }\n-        ChatMessage currentMessage = new ChatMessage(ChatRole.USER).setContent(msg);\n+        ChatMessage currentMessage = new ChatMessage(ChatRole.USER).setContent(prompt);\n         messages.add(currentMessage);\n \n         sseEmitter.send(SseEmitter.event().id(uid).name(\"sseEmitter connected\uff01\uff01\uff01\uff01\").data(LocalDateTime.now()).reconnectTime(3000));",
      "parent_sha": "deb6284e6ca3528ea3f756fefde55e0ca68eb90e"
    }
  },
  {
    "oid": "32d3fd81d265f3f48fe843fc6c71e18213840191",
    "message": "rest ai optimize",
    "date": "2023-09-09T07:52:02Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/32d3fd81d265f3f48fe843fc6c71e18213840191",
    "details": {
      "sha": "49174a89978dae698920d6ff721bea3072ba73b0",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/ai/listener/RestAIEventSourceListener.java",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/32d3fd81d265f3f48fe843fc6c71e18213840191/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2Flistener%2FRestAIEventSourceListener.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/32d3fd81d265f3f48fe843fc6c71e18213840191/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2Flistener%2FRestAIEventSourceListener.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2Flistener%2FRestAIEventSourceListener.java?ref=32d3fd81d265f3f48fe843fc6c71e18213840191",
      "patch": "@@ -54,7 +54,9 @@ public void onEvent(EventSource eventSource, String id, String type, String data\n         }\n         Message message = new Message();\n         if (StringUtils.isNotBlank(data)) {\n-            message.setContent(data.replace(\"\\\"\", \"\"));\n+            data = data.replaceAll(\"^\\\"|\\\"$\", \"\");\n+            data = data.replaceAll(\"\\\\\\\\n\", \"\\n\");\n+            message.setContent(data);\n             sseEmitter.send(SseEmitter.event()\n                 .id(id)\n                 .data(message)\n@@ -78,7 +80,6 @@ public void onFailure(EventSource eventSource, Throwable t, Response response) {\n         try {\n             if (Objects.isNull(response)) {\n                 String message = t.getMessage();\n-                message = message + \", AI\u65e0\u6cd5\u6b63\u5e38\u8bbf\u95ee, \u8bf7\u53c2\u8003\u6587\u7ae0<https://github.com/chat2db/Chat2DB/blob/main/CHAT2DB_AI_SQL.md>\u8fdb\u884c\u914d\u7f6e\";\n                 Message sseMessage = new Message();\n                 sseMessage.setContent(message);\n                 sseEmitter.send(SseEmitter.event()\n@@ -94,9 +95,9 @@ public void onFailure(EventSource eventSource, Throwable t, Response response) {\n             String bodyString = null;\n             if (Objects.nonNull(body)) {\n                 bodyString = body.string();\n-                log.error(\"REST AI sse\u8fde\u63a5\u5f02\u5e38data\uff1a{}\uff0c\u5f02\u5e38\uff1a{}\", bodyString, t);\n+                log.error(\"REST AI sse body error\uff1a{}\uff0cexception\uff1a{}\", bodyString, t);\n             } else {\n-                log.error(\"REST AI sse\u8fde\u63a5\u5f02\u5e38data\uff1a{}\uff0c\u5f02\u5e38\uff1a{}\", response, t);\n+                log.error(\"REST AI sse response error\uff1a{}\uff0cexception\uff1a{}\", response, t);\n             }\n             if (Objects.nonNull(eventSource)) {\n                 eventSource.cancel();",
      "parent_sha": "a7f354fe911f562d0421371e5d73aa19b5767818"
    }
  },
  {
    "oid": "c8b9ddcff327af078fd5794ed97b1e654c0982ee",
    "message": "Change 'Ehcache' to 'Guava Cache'` [Issue #741](https://github.com/chat2db/Chat2DB/issues/741)",
    "date": "2023-11-04T14:41:00Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/c8b9ddcff327af078fd5794ed97b1e654c0982ee",
    "details": {
      "sha": "ade8e42e7cc8d391b46fe96354c5d668cc921b8a",
      "filename": "chat2db-server/chat2db-server-domain/chat2db-server-domain-core/src/main/java/ai/chat2db/server/domain/core/cache/MemoryCacheManage.java",
      "status": "modified",
      "additions": 11,
      "deletions": 16,
      "changes": 27,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/c8b9ddcff327af078fd5794ed97b1e654c0982ee/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-core%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fcore%2Fcache%2FMemoryCacheManage.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/c8b9ddcff327af078fd5794ed97b1e654c0982ee/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-core%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fcore%2Fcache%2FMemoryCacheManage.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-core%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fcore%2Fcache%2FMemoryCacheManage.java?ref=c8b9ddcff327af078fd5794ed97b1e654c0982ee",
      "patch": "@@ -1,17 +1,14 @@\n package ai.chat2db.server.domain.core.cache;\n \n import java.io.Serializable;\n-import java.time.Duration;\n+import java.util.concurrent.TimeUnit;\n import java.util.function.Supplier;\n \n+import com.google.common.cache.Cache;\n+import com.google.common.cache.CacheBuilder;\n+import com.google.common.cache.Weigher;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.StringUtils;\n-import org.ehcache.Cache;\n-import org.ehcache.config.builders.CacheConfigurationBuilder;\n-import org.ehcache.config.builders.CacheManagerBuilder;\n-import org.ehcache.config.builders.ExpiryPolicyBuilder;\n-import org.ehcache.config.builders.ResourcePoolsBuilder;\n-import org.ehcache.config.units.MemoryUnit;\n import org.springframework.cache.support.NullValue;\n \n /**\n@@ -22,19 +19,17 @@\n public class MemoryCacheManage {\n \n     private static final byte[] NULL_BYTES = SerializationUtils.serialize((NullValue)NullValue.INSTANCE);\n-    private static final String CACHE = \"memory_cache\";\n     private static final String SYNCHRONIZED_PREFIX = \"MemoryCache:\";\n \n     private static Cache<String, byte[]> cache;\n \n     static {\n-        cache = CacheManagerBuilder.newCacheManagerBuilder()\n-            .build(true)\n-            .createCache(CACHE,\n-                CacheConfigurationBuilder.newCacheConfigurationBuilder(String.class, byte[].class,\n-                        ResourcePoolsBuilder.newResourcePoolsBuilder()\n-                            .offheap(5, MemoryUnit.MB))\n-                    .withExpiry(ExpiryPolicyBuilder.timeToLiveExpiration(Duration.ofMinutes(10))));\n+        cache = CacheBuilder.newBuilder()\n+            // 5M\n+            .maximumWeight(5 * 1024 * 1024)\n+            .weigher((Weigher<String, byte[]>)(key, value) -> value.length)\n+            .expireAfterAccess(10, TimeUnit.MINUTES)\n+            .build();\n     }\n \n     /**\n@@ -78,7 +73,7 @@ public static <T> T get(String key) {\n         if (StringUtils.isBlank(key)) {\n             return null;\n         }\n-        byte[] bytes = cache.get(key);\n+        byte[] bytes = cache.getIfPresent(key);\n         if (bytes == null) {\n             return null;\n         }",
      "parent_sha": "696591753eab896b16f23e2e41d94767191a5869"
    }
  },
  {
    "oid": "812d3fbeb5c95743693cb66e63c42a37882a3101",
    "message": "Split to obtain HTTP interface",
    "date": "2023-07-10T12:51:59Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/812d3fbeb5c95743693cb66e63c42a37882a3101",
    "details": {
      "sha": "61427cc54e9b0b4fae7ae82661787c6343424712",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/ai/AiConfigController.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/812d3fbeb5c95743693cb66e63c42a37882a3101/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FAiConfigController.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/812d3fbeb5c95743693cb66e63c42a37882a3101/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FAiConfigController.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FAiConfigController.java?ref=812d3fbeb5c95743693cb66e63c42a37882a3101",
      "patch": "@@ -84,7 +84,7 @@ public DataResult<QrCodeResponse> getLoginStatus(@RequestParam(required = false)\n     @GetMapping(\"/remaininguses\")\n     public DataResult<ApiKeyResponse> remaininguses() {\n         String apiKey = getApiKey();\n-        if (apiKey == null) {\n+        if (StringUtils.isBlank(apiKey)) {\n             return DataResult.of(ApiKeyResponse.builder()\n                 .remainingUses(0L)\n                 .build());\n@@ -100,7 +100,7 @@ public DataResult<ApiKeyResponse> remaininguses() {\n     @GetMapping(\"/getInviteQrCode\")\n     public DataResult<InviteQrCodeResponse> getInviteQrCode() {\n         String apiKey = getApiKey();\n-        if (apiKey == null) {\n+        if (StringUtils.isBlank(apiKey)) {\n             return DataResult.empty();\n         }\n         return gatewayClientService.getInviteQrCode(apiKey);",
      "parent_sha": "d563571399adbe78d70ca0e7c8ba0936352139eb"
    }
  },
  {
    "oid": "2728259491690a7bd7dcc7c9a0e80d8a8a3e7289",
    "message": "Add operation log",
    "date": "2023-10-17T14:54:35Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/2728259491690a7bd7dcc7c9a0e80d8a8a3e7289",
    "details": {
      "sha": "85096d600ed65d3f0faa250794bb23c16cfe9117",
      "filename": "chat2db-server/chat2db-plugins/chat2db-oracle/src/main/java/ai/chat2db/plugin/oracle/builder/OracleSqlBuilder.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/2728259491690a7bd7dcc7c9a0e80d8a8a3e7289/chat2db-server%2Fchat2db-plugins%2Fchat2db-oracle%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Foracle%2Fbuilder%2FOracleSqlBuilder.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/2728259491690a7bd7dcc7c9a0e80d8a8a3e7289/chat2db-server%2Fchat2db-plugins%2Fchat2db-oracle%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Foracle%2Fbuilder%2FOracleSqlBuilder.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-oracle%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Foracle%2Fbuilder%2FOracleSqlBuilder.java?ref=2728259491690a7bd7dcc7c9a0e80d8a8a3e7289",
      "patch": "@@ -67,10 +67,10 @@ public String buildModifyTaleSql(Table oldTable, Table newTable) {\n \n         if (!StringUtils.equalsIgnoreCase(oldTable.getName(), newTable.getName())) {\n             script.append(\"ALTER TABLE \"). append(\"\\\"\").append(oldTable.getSchemaName()).append(\"\\\".\\\"\").append(oldTable.getName()).append(\"\\\"\");\n-            script.append(\" \").append(\"RENAME TO \").append(\"\\\"\").append(newTable.getName()).append(\"\\\"\").append(\";\");\n+            script.append(\" \").append(\"RENAME TO \").append(\"\\\"\").append(newTable.getName()).append(\"\\\"\").append(\";\\n\");\n         }\n         if (!StringUtils.equalsIgnoreCase(oldTable.getComment(), newTable.getComment())) {\n-            script.append(\"\\n\").append(buildTableComment(newTable)).append(\";\");\n+            script.append(\"\").append(buildTableComment(newTable)).append(\";\\n\");\n         }\n \n ",
      "parent_sha": "53460ff620d08fbefe3394943bec73b195661e99"
    }
  },
  {
    "oid": "94e83b3e898edbd090489c4326a9e40f043a9816",
    "message": "update exception",
    "date": "2023-07-18T13:34:49Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/94e83b3e898edbd090489c4326a9e40f043a9816",
    "details": {
      "sha": "83ae4e2be362022849f3c7a24b997d0fe6f6424b",
      "filename": "chat2db-server/chat2db-spi/src/main/java/ai/chat2db/spi/sql/IDriverManager.java",
      "status": "modified",
      "additions": 3,
      "deletions": 11,
      "changes": 14,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/94e83b3e898edbd090489c4326a9e40f043a9816/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fsql%2FIDriverManager.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/94e83b3e898edbd090489c4326a9e40f043a9816/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fsql%2FIDriverManager.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fsql%2FIDriverManager.java?ref=94e83b3e898edbd090489c4326a9e40f043a9816",
      "patch": "@@ -84,24 +84,16 @@ public static Connection getConnection(String url, Properties info, DriverConfig\n             driverEntry = getJDBCDriver(driver);\n         }\n         try {\n-            Connection con = driverEntry.getDriver().connect(url, info);\n-            if (con != null) {\n-                return con;\n-            }\n+            return driverEntry.getDriver().connect(url, info);\n         } catch (SQLException var7) {\n             Connection con = tryConnectionAgain(driverEntry, url, info);\n             if (con != null) {\n                 return con;\n             } else {\n-                throw var7;\n+                throw new SQLException(\"Cannot create connection (\" + var7.getMessage() + \")\", \"08001\",\n+                    var7);\n             }\n         }\n-\n-        if (reason != null) {\n-            throw reason;\n-        } else {\n-            throw new SQLException(\"No suitable driver found for \" + url, \"08001\");\n-        }\n     }\n \n     private static Connection tryConnectionAgain(DriverEntry driverEntry, String url,",
      "parent_sha": "c81985e916b2fa716ae9975b9af720775d50bd0d"
    }
  },
  {
    "oid": "edd46baa9a26a29b9eec9bcde36624d76a5e7c75",
    "message": "mask log",
    "date": "2023-08-13T09:11:02Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/edd46baa9a26a29b9eec9bcde36624d76a5e7c75",
    "details": {
      "sha": "73dbd5c2f92ed00d007d10eea6d3bfbf3dae4ee6",
      "filename": "chat2db-server/chat2db-server-tools/chat2db-server-tools-common/src/main/java/ai/chat2db/server/tools/common/util/LogUtils.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/edd46baa9a26a29b9eec9bcde36624d76a5e7c75/chat2db-server%2Fchat2db-server-tools%2Fchat2db-server-tools-common%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Ftools%2Fcommon%2Futil%2FLogUtils.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/edd46baa9a26a29b9eec9bcde36624d76a5e7c75/chat2db-server%2Fchat2db-server-tools%2Fchat2db-server-tools-common%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Ftools%2Fcommon%2Futil%2FLogUtils.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-tools%2Fchat2db-server-tools-common%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Ftools%2Fcommon%2Futil%2FLogUtils.java?ref=edd46baa9a26a29b9eec9bcde36624d76a5e7c75",
      "patch": "@@ -49,7 +49,7 @@ public static String maskString(String input) {\n         }\n \n         StringBuilder maskedString = new StringBuilder(input);\n-        for (int i = 0; i < input.length(); i += 2) {\n+        for (int i = 0; i < input.length(); i += 4) {\n             maskedString.setCharAt(i, '*');\n         }\n         return maskedString.toString();",
      "parent_sha": "798639060f2b7416c913f284010079bd01e9d542"
    }
  },
  {
    "oid": "e5df5828c907f870c5e9b7c436fde026b0418b46",
    "message": "Optimize startup speed",
    "date": "2023-07-30T03:24:41Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/e5df5828c907f870c5e9b7c436fde026b0418b46",
    "details": {
      "sha": "25567ad0384fc0a1e1388d2cb8370e0aa6a22866",
      "filename": "chat2db-server/chat2db-server-start/src/main/java/ai/chat2db/server/start/Application.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/e5df5828c907f870c5e9b7c436fde026b0418b46/chat2db-server%2Fchat2db-server-start%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fstart%2FApplication.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/e5df5828c907f870c5e9b7c436fde026b0418b46/chat2db-server%2Fchat2db-server-start%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fstart%2FApplication.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-start%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fstart%2FApplication.java?ref=e5df5828c907f870c5e9b7c436fde026b0418b46",
      "patch": "@@ -23,7 +23,7 @@\n @SpringBootApplication\n @ComponentScan(value = {\"ai.chat2db.server\"})\n @MapperScan(\"ai.chat2db.server.domain.repository.mapper\")\n-@ForestScan(basePackages = \"ai.chat2db.server\")\n+@ForestScan(basePackages = \"ai.chat2db.server.web.api.http\")\n @Indexed\n @EnableCaching\n @EnableScheduling",
      "parent_sha": "7a9ee0444d1052fef33cc4b3d0860c410247facf"
    }
  },
  {
    "oid": "7a8cfc58d845f2a1d64a6d28403b664985708865",
    "message": "add azure openai support",
    "date": "2023-06-29T11:47:44Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/7a8cfc58d845f2a1d64a6d28403b664985708865",
    "details": {
      "sha": "893c489b700fa906818c8e539c12ad0cdf249234",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/ai/azure/client/AzureOpenAIClient.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/7a8cfc58d845f2a1d64a6d28403b664985708865/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2Fazure%2Fclient%2FAzureOpenAIClient.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/7a8cfc58d845f2a1d64a6d28403b664985708865/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2Fazure%2Fclient%2FAzureOpenAIClient.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2Fazure%2Fclient%2FAzureOpenAIClient.java?ref=7a8cfc58d845f2a1d64a6d28403b664985708865",
      "patch": "@@ -56,7 +56,7 @@ private static AzureOpenAiStreamClient singleton() {\n     public static void refresh() {\n         String apikey = \"\";\n         String apiEndpoint = \"\";\n-        String deployId = \"\";\n+        String deployId = \"gpt-3.5-turbo\";\n         ConfigService configService = ApplicationContextUtil.getBean(ConfigService.class);\n         Config apiHostConfig = configService.find(AZURE_CHATGPT_ENDPOINT).getData();\n         if (apiHostConfig != null) {",
      "parent_sha": "a50472f31df10944e7a74412ada925c7039c0882"
    }
  },
  {
    "oid": "7882c1a870508da57e4c868c12768373951e3953",
    "message": "fix-mysql-function-ddl-query",
    "date": "2024-03-09T08:24:31Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/7882c1a870508da57e4c868c12768373951e3953",
    "details": {
      "sha": "93e988a959162043253e7f455dbc7944a0c52afd",
      "filename": "chat2db-server/chat2db-plugins/chat2db-mysql/src/main/java/ai/chat2db/plugin/mysql/MysqlMetaData.java",
      "status": "modified",
      "additions": 16,
      "deletions": 10,
      "changes": 26,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/7882c1a870508da57e4c868c12768373951e3953/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2FMysqlMetaData.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/7882c1a870508da57e4c868c12768373951e3953/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2FMysqlMetaData.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2FMysqlMetaData.java?ref=7882c1a870508da57e4c868c12768373951e3953",
      "patch": "@@ -57,19 +57,25 @@ public static String format(String tableName) {\n     public Function function(Connection connection, @NotEmpty String databaseName, String schemaName,\n                              String functionName) {\n \n-        String sql = String.format(ROUTINES_SQL, \"FUNCTION\", databaseName, functionName);\n-        return SQLExecutor.getInstance().execute(connection, sql, resultSet -> {\n-            Function function = new Function();\n-            function.setDatabaseName(databaseName);\n-            function.setSchemaName(schemaName);\n-            function.setFunctionName(functionName);\n+        String functionInfoSql = String.format(ROUTINES_SQL, \"FUNCTION\", databaseName, functionName);\n+        Function function = SQLExecutor.getInstance().execute(connection, functionInfoSql, resultSet -> {\n+            Function f = new Function();\n+            f.setDatabaseName(databaseName);\n+            f.setSchemaName(schemaName);\n+            f.setFunctionName(functionName);\n             if (resultSet.next()) {\n-                function.setSpecificName(resultSet.getString(\"SPECIFIC_NAME\"));\n-                function.setRemarks(resultSet.getString(\"ROUTINE_COMMENT\"));\n-                function.setFunctionBody(resultSet.getString(\"ROUTINE_DEFINITION\"));\n+                f.setSpecificName(resultSet.getString(\"SPECIFIC_NAME\"));\n+                f.setRemarks(resultSet.getString(\"ROUTINE_COMMENT\"));\n             }\n-            return function;\n+            return f;\n         });\n+        String functionDDlSql =String.format(\"SHOW CREATE FUNCTION %s\", functionName);\n+        SQLExecutor.getInstance().execute(connection,functionDDlSql, resultSet -> {\n+            if (resultSet.next()) {\n+                function.setFunctionBody(resultSet.getString(\"Create Function\"));\n+            }\n+        } );\n+        return function;\n \n     }\n ",
      "parent_sha": "1baa37820ff9ed43f65bb18a8fe10d32cf5b3869"
    }
  },
  {
    "oid": "bb54f4d6b50958a2b82e5c48d8c22a96242e99d3",
    "message": "fix getConnection bug",
    "date": "2023-07-03T13:29:36Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/bb54f4d6b50958a2b82e5c48d8c22a96242e99d3",
    "details": {
      "sha": "e7166fa6bd37575cd05f98553f67c003e8bd32bf",
      "filename": "chat2db-server/chat2db-plugins/chat2db-redis/src/main/java/ai/chat2db/plugin/redis/builder/DBConfigBuilder.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/bb54f4d6b50958a2b82e5c48d8c22a96242e99d3/chat2db-server%2Fchat2db-plugins%2Fchat2db-redis%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fredis%2Fbuilder%2FDBConfigBuilder.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/bb54f4d6b50958a2b82e5c48d8c22a96242e99d3/chat2db-server%2Fchat2db-plugins%2Fchat2db-redis%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fredis%2Fbuilder%2FDBConfigBuilder.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-redis%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fredis%2Fbuilder%2FDBConfigBuilder.java?ref=bb54f4d6b50958a2b82e5c48d8c22a96242e99d3",
      "patch": "@@ -10,7 +10,7 @@ public static DBConfig buildDBConfig() {\n         dbConfig.setName(\"Redis\");\n         dbConfig.setDbType(\"REDIS\");\n         DriverConfig driverConfig = new DriverConfig();\n-        driverConfig.setJdbcDriver(\"sredis-jdbc-driver-1.3.jar\");\n+        driverConfig.setJdbcDriver(\"redis-jdbc-driver-1.3.jar\");\n         driverConfig.setJdbcDriverClass(\"jdbc.RedisDriver\");\n         driverConfig.setDownloadJdbcDriverUrls(Lists.newArrayList(\"https://oss-chat2db.alibaba.com/lib/redis-jdbc-driver-1.3.jar\"));\n         driverConfig.setName(driverConfig.getJdbcDriver() + \":\" + driverConfig.getJdbcDriverClass());",
      "parent_sha": "336ad421ddab0f71acc4b1742bf997e835b19f1c"
    }
  },
  {
    "oid": "0f6c1bb813df229fe6333f85a14c8e9e709b430d",
    "message": "ai update",
    "date": "2023-07-08T12:05:00Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/0f6c1bb813df229fe6333f85a14c8e9e709b430d",
    "details": {
      "sha": "249e404315038afe584ac071cf4249bc2424a620",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/ai/ChatController.java",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/0f6c1bb813df229fe6333f85a14c8e9e709b430d/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FChatController.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/0f6c1bb813df229fe6333f85a14c8e9e709b430d/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FChatController.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FChatController.java?ref=0f6c1bb813df229fe6333f85a14c8e9e709b430d",
      "patch": "@@ -505,10 +505,11 @@ private String buildPrompt(ChatQueryRequest queryRequest) {\n             : queryRequest.getPromptType();\n         PromptType pType = EasyEnumUtils.getEnum(PromptType.class, promptType);\n         String ext = StringUtils.isNotBlank(queryRequest.getExt()) ? queryRequest.getExt() : \"\";\n+        String result = \"\u5047\u8bbe\u4f60\u662f\u4e2aSQL\u7f16\u8f91\u5668\uff0c\u63a5\u4e0b\u6765\u4f60\u8fd4\u56de\u7684SQL\u4ee3\u7801\u8981\u548c\u5176\u4ed6\u5185\u5bb9\u5206\u9694\uff0c\u975eSQL\u4ee3\u7801\u5185\u5bb9\u7684\u6bcf\u4e00\u884c\u524d\u9762\u8ffd\u52a0-- \\n\";\n         String schemaProperty = CollectionUtils.isNotEmpty(tableSchemas) ? String.format(\n-            \"### \u8bf7\u6839\u636e\u4ee5\u4e0btable properties\u548cSQL input%s. %s\\n#\\n### %s SQL tables, with their properties:\\n#\\n# \"\n-                + \"%s\\n#\\n#\\n### SQL input: %s\", pType.getDescription(), ext, dataSourceType,\n-            properties, prompt) : String.format(\"### \u8bf7\u6839\u636e\u4ee5\u4e0bSQL input%s. %s\\n#\\n### SQL input: %s\",\n+            \"%s### \u8bf7\u6839\u636e\u4ee5\u4e0btable properties\u548cSQL input%s. %s\\n#\\n### %s SQL tables, with their properties:\\n#\\n# \"\n+                + \"%s\\n#\\n#\\n### SQL input: %s\", result, pType.getDescription(), ext, dataSourceType,\n+            properties, prompt) : String.format(\"%s### \u8bf7\u6839\u636e\u4ee5\u4e0bSQL input%s. %s\\n#\\n### SQL input: %s\", result,\n             pType.getDescription(), ext, prompt);\n         switch (pType) {\n             case SQL_2_SQL:\n@@ -521,7 +522,6 @@ private String buildPrompt(ChatQueryRequest queryRequest) {\n         //if (I18nUtils.isEn()) {\n         //    schemaProperty = String.format(\"%s\\n#\\n### \u8fd4\u56de\u7ed3\u679c\u8981\u6c42\u4e3a\u82f1\u6587\", schemaProperty);\n         //}\n-        String result = String.format(\"%s. \\n\u8981\u6c42\u8fd4\u56deMarkdown\u683c\u5f0f\", schemaProperty);\n-        return result;\n+        return schemaProperty;\n     }\n }",
      "parent_sha": "de9255bdebe3f110ed27b3ba1d26e20242df9d7c"
    }
  },
  {
    "oid": "cdebf4b60c71a6906660c09de7e18ffb68ca53dc",
    "message": "support view trigger producer function",
    "date": "2023-08-13T06:01:19Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/cdebf4b60c71a6906660c09de7e18ffb68ca53dc",
    "details": {
      "sha": "0ed82aa40c08ce7a3d4641845ee0166c79df39db",
      "filename": "chat2db-server/chat2db-server-domain/chat2db-server-domain-core/src/main/java/ai/chat2db/server/domain/core/impl/DlTemplateServiceImpl.java",
      "status": "modified",
      "additions": 76,
      "deletions": 78,
      "changes": 154,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/cdebf4b60c71a6906660c09de7e18ffb68ca53dc/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-core%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fcore%2Fimpl%2FDlTemplateServiceImpl.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/cdebf4b60c71a6906660c09de7e18ffb68ca53dc/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-core%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fcore%2Fimpl%2FDlTemplateServiceImpl.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-core%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fcore%2Fimpl%2FDlTemplateServiceImpl.java?ref=cdebf4b60c71a6906660c09de7e18ffb68ca53dc",
      "patch": "@@ -67,84 +67,7 @@ public ListResult<ExecuteResult> execute(DlExecuteParam param) {\n         ListResult<ExecuteResult> listResult = ListResult.of(result);\n         // \u6267\u884csql\n         for (String originalSql : sqlList) {\n-            String sql = originalSql;\n-            int pageNo = 0;\n-            int pageSize = 0;\n-            String sqlType = SqlTypeEnum.UNKNOWN.getCode();\n-\n-            // \u89e3\u6790sql\u5206\u9875\n-            SQLStatement sqlStatement;\n-            boolean autoLimit = false;\n-            try {\n-                sqlStatement = SQLUtils.parseSingleStatement(sql, dbType);\n-                // \u662f\u5426\u9700\u8981\u4ee3\u7801\u5e2e\u5fd9\u5206\u9875\n-\n-                if (sqlStatement instanceof SQLSelectStatement) {\n-                    //  \u4e0d\u662f\u67e5\u8be2\u5168\u90e8\u6570\u636e \u800c\u4e14 \u7528\u6237\u81ea\u5df1\u6ca1\u6709\u4f20\u5206\u9875\n-                    autoLimit = BooleanUtils.isNotTrue(param.getPageSizeAll()) && SQLUtils.getLimit(sqlStatement,\n-                        dbType)\n-                        == null;\n-                    if (autoLimit) {\n-                        pageNo = Optional.ofNullable(param.getPageNo()).orElse(1);\n-                        pageSize = Optional.ofNullable(param.getPageSize()).orElse(EasyToolsConstant.MAX_PAGE_SIZE);\n-                        int offset = (pageNo - 1) * pageSize;\n-                        try {\n-                            sql = PagerUtils.limit(sql, dbType, offset, pageSize);\n-                        } catch (Exception e) {\n-                            autoLimit = false;\n-                        }\n-                    }\n-                    sqlType = SqlTypeEnum.SELECT.getCode();\n-                }\n-            } catch (ParserException e) {\n-                log.warn(\"\u89e3\u6790sql\u5931\u8d25:{}\", sql, e);\n-                //ExecuteResult executeResult = ExecuteResult.builder()\n-                //    .success(Boolean.FALSE)\n-                //    .originalSql(originalSql)\n-                //    .sql(sql)\n-                //    .message(e.getMessage())\n-                //    .build();\n-                //result.add(executeResult);\n-                //continue;\n-            }\n-\n-            ExecuteResult executeResult = execute(sql);\n-            executeResult.setSqlType(sqlType);\n-            executeResult.setOriginalSql(originalSql);\n-            // \u81ea\u52a8\u5206\u9875\n-            if (autoLimit) {\n-                executeResult.setPageNo(pageNo);\n-                executeResult.setPageSize(pageSize);\n-                executeResult.setHasNextPage(\n-                    CollectionUtils.size(executeResult.getDataList()) >= executeResult.getPageSize());\n-            } else {\n-                executeResult.setPageNo(1);\n-                executeResult.setPageSize(CollectionUtils.size(executeResult.getDataList()));\n-                executeResult.setHasNextPage(Boolean.FALSE);\n-            }\n-            // Splice row numbers\n-            List<Header> newHeaderList = new ArrayList<>();\n-            newHeaderList.add(Header.builder()\n-                .name(I18nUtils.getMessage(\"sqlResult.rowNumber\"))\n-                .dataType(DataTypeEnum.CHAT2DB_ROW_NUMBER\n-                    .getCode()).build());\n-            if (executeResult.getHeaderList() != null) {\n-                newHeaderList.addAll(executeResult.getHeaderList());\n-            }\n-            executeResult.setHeaderList(newHeaderList);\n-            if (executeResult.getDataList() != null) {\n-                int rowNumberIncrement = 1 + Math.max(pageNo - 1, 0) * pageSize;\n-                for (int i = 0; i < executeResult.getDataList().size(); i++) {\n-                    List<String> row = executeResult.getDataList().get(i);\n-                    List<String> newRow = Lists.newArrayListWithExpectedSize(row.size() + 1);\n-                    newRow.add(Integer.toString(i + rowNumberIncrement));\n-                    newRow.addAll(row);\n-                    executeResult.getDataList().set(i, newRow);\n-                }\n-            }\n-            //  Total number of fuzzy rows\n-            executeResult.setFuzzyTotal(calculateFuzzyTotal(pageNo, pageSize, executeResult));\n-\n+            ExecuteResult executeResult = executeSQL(originalSql,dbType,param);\n             result.add(executeResult);\n             if (!executeResult.getSuccess()) {\n                 listResult.setSuccess(false);\n@@ -155,6 +78,81 @@ public ListResult<ExecuteResult> execute(DlExecuteParam param) {\n         return listResult;\n     }\n \n+    private ExecuteResult executeSQL(String originalSql,DbType dbType,DlExecuteParam param) {\n+        String sql = originalSql;\n+        int pageNo = 0;\n+        int pageSize = 0;\n+        String sqlType = SqlTypeEnum.UNKNOWN.getCode();\n+\n+        // \u89e3\u6790sql\u5206\u9875\n+        SQLStatement sqlStatement;\n+        boolean autoLimit = false;\n+        try {\n+            sqlStatement = SQLUtils.parseSingleStatement(sql, dbType);\n+            // \u662f\u5426\u9700\u8981\u4ee3\u7801\u5e2e\u5fd9\u5206\u9875\n+            if (sqlStatement instanceof SQLSelectStatement) {\n+                //  \u4e0d\u662f\u67e5\u8be2\u5168\u90e8\u6570\u636e \u800c\u4e14 \u7528\u6237\u81ea\u5df1\u6ca1\u6709\u4f20\u5206\u9875\n+                autoLimit = BooleanUtils.isNotTrue(param.getPageSizeAll()) && SQLUtils.getLimit(sqlStatement,\n+                    dbType)\n+                    == null;\n+                if (autoLimit) {\n+                    pageNo = Optional.ofNullable(param.getPageNo()).orElse(1);\n+                    pageSize = Optional.ofNullable(param.getPageSize()).orElse(EasyToolsConstant.MAX_PAGE_SIZE);\n+                    int offset = (pageNo - 1) * pageSize;\n+                    try {\n+                        sql = PagerUtils.limit(sql, dbType, offset, pageSize);\n+                    } catch (Exception e) {\n+                        autoLimit = false;\n+                    }\n+                }\n+                sqlType = SqlTypeEnum.SELECT.getCode();\n+            }\n+        } catch (ParserException e) {\n+            log.warn(\"\u89e3\u6790sql\u5931\u8d25:{}\", sql, e);\n+        }\n+\n+        ExecuteResult executeResult = execute(sql);\n+        executeResult.setSqlType(sqlType);\n+        executeResult.setOriginalSql(originalSql);\n+        // \u81ea\u52a8\u5206\u9875\n+        if (autoLimit) {\n+            executeResult.setPageNo(pageNo);\n+            executeResult.setPageSize(pageSize);\n+            executeResult.setHasNextPage(\n+                CollectionUtils.size(executeResult.getDataList()) >= executeResult.getPageSize());\n+        } else {\n+            executeResult.setPageNo(1);\n+            executeResult.setPageSize(CollectionUtils.size(executeResult.getDataList()));\n+            executeResult.setHasNextPage(Boolean.FALSE);\n+        }\n+        // Splice row numbers\n+        List<Header> newHeaderList = new ArrayList<>();\n+        newHeaderList.add(Header.builder()\n+            .name(I18nUtils.getMessage(\"sqlResult.rowNumber\"))\n+            .dataType(DataTypeEnum.CHAT2DB_ROW_NUMBER\n+                .getCode()).build());\n+        if (executeResult.getHeaderList() != null) {\n+            newHeaderList.addAll(executeResult.getHeaderList());\n+        }\n+        executeResult.setHeaderList(newHeaderList);\n+        if (executeResult.getDataList() != null) {\n+            int rowNumberIncrement = 1 + Math.max(pageNo - 1, 0) * pageSize;\n+            for (int i = 0; i < executeResult.getDataList().size(); i++) {\n+                List<String> row = executeResult.getDataList().get(i);\n+                List<String> newRow = Lists.newArrayListWithExpectedSize(row.size() + 1);\n+                newRow.add(Integer.toString(i + rowNumberIncrement));\n+                newRow.addAll(row);\n+                executeResult.getDataList().set(i, newRow);\n+            }\n+        }\n+        //  Total number of fuzzy rows\n+        executeResult.setFuzzyTotal(calculateFuzzyTotal(pageNo, pageSize, executeResult));\n+        return executeResult;\n+    }\n+\n+\n+\n+\n     private String calculateFuzzyTotal(int pageNo, int pageSize, ExecuteResult executeResult) {\n         int dataSize = CollectionUtils.size(executeResult.getDataList());\n         if (pageSize <= 0) {",
      "parent_sha": "7ae201eef15ea63f351df864c1d862dc5e0cb3c2"
    }
  },
  {
    "oid": "2dabb8eb39b3368c199fa8e1dc546e3993bc8971",
    "message": "add common ai support",
    "date": "2023-10-03T08:47:50Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/2dabb8eb39b3368c199fa8e1dc546e3993bc8971",
    "details": {
      "sha": "f9171961283f026379315d4f3d312ec1f5f50bf3",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/ai/fastchat/interceptor/FastChatHeaderAuthorizationInterceptor.java",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/2dabb8eb39b3368c199fa8e1dc546e3993bc8971/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2Ffastchat%2Finterceptor%2FFastChatHeaderAuthorizationInterceptor.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/2dabb8eb39b3368c199fa8e1dc546e3993bc8971/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2Ffastchat%2Finterceptor%2FFastChatHeaderAuthorizationInterceptor.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2Ffastchat%2Finterceptor%2FFastChatHeaderAuthorizationInterceptor.java?ref=2dabb8eb39b3368c199fa8e1dc546e3993bc8971",
      "patch": "@@ -1,7 +1,9 @@\n package ai.chat2db.server.web.api.controller.ai.fastchat.interceptor;\n \n+import cn.hutool.core.util.RandomUtil;\n import cn.hutool.http.ContentType;\n import cn.hutool.http.Header;\n+import com.google.common.collect.Lists;\n import lombok.Getter;\n import okhttp3.Interceptor;\n import okhttp3.Request;\n@@ -28,7 +30,8 @@ public FastChatHeaderAuthorizationInterceptor(String apiKey) {\n     public Response intercept(Chain chain) throws IOException {\n         Request original = chain.request();\n         Request request = original.newBuilder()\n-                .header(\"apiKey\", apiKey) // replace to your corresponding field and value\n+                // replace to your corresponding field and value\n+                .header(Header.AUTHORIZATION.getValue(), \"Bearer \" + apiKey)\n                 .header(Header.CONTENT_TYPE.getValue(), ContentType.JSON.getValue())\n                 .method(original.method(), original.body())\n                 .build();",
      "parent_sha": "d37c1a964693f5d96f36a26ee561f89f6bba8578"
    }
  },
  {
    "oid": "1303b7814eda55fecadbab86cde36a72a4d4f4f8",
    "message": "merge",
    "date": "2023-10-23T13:38:34Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/1303b7814eda55fecadbab86cde36a72a4d4f4f8",
    "details": {
      "sha": "c2cc32c0fb57d31c28c4af0ee86ce84d4266315f",
      "filename": "chat2db-server/chat2db-plugins/chat2db-mysql/src/main/java/ai/chat2db/plugin/mysql/builder/MysqlSqlBuilder.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/1303b7814eda55fecadbab86cde36a72a4d4f4f8/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fbuilder%2FMysqlSqlBuilder.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/1303b7814eda55fecadbab86cde36a72a4d4f4f8/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fbuilder%2FMysqlSqlBuilder.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fbuilder%2FMysqlSqlBuilder.java?ref=1303b7814eda55fecadbab86cde36a72a4d4f4f8",
      "patch": "@@ -129,7 +129,7 @@ public String pageLimit(String sql, int offset, int pageNo, int pageSize) {\n     @Override\n     public String buildCreateDatabaseSql(Database database) {\n         StringBuilder sqlBuilder = new StringBuilder();\n-        sqlBuilder.append(\"CREATE DATABASE \"+database.getName());\n+        sqlBuilder.append(\"CREATE DATABASE `\"+database.getName()+\"`\");\n         if (StringUtils.isNotBlank(database.getCharset())) {\n             sqlBuilder.append(\" DEFAULT CHARACTER SET=\").append(database.getCharset());\n         }",
      "parent_sha": "7c15b83fe03a49da390506129ba1f1b0205aad8e"
    }
  },
  {
    "oid": "8201cf375f78446ba2c664015b81f929be95234b",
    "message": "fix getConnection bug",
    "date": "2023-07-03T13:17:02Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/8201cf375f78446ba2c664015b81f929be95234b",
    "details": {
      "sha": "f28c91f7bd334945e83a24374fe1d00c2492d46b",
      "filename": "chat2db-server/chat2db-spi/src/main/java/ai/chat2db/spi/util/JdbcJarUtils.java",
      "status": "modified",
      "additions": 2,
      "deletions": 8,
      "changes": 10,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/8201cf375f78446ba2c664015b81f929be95234b/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Futil%2FJdbcJarUtils.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/8201cf375f78446ba2c664015b81f929be95234b/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Futil%2FJdbcJarUtils.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Futil%2FJdbcJarUtils.java?ref=8201cf375f78446ba2c664015b81f929be95234b",
      "patch": "@@ -11,8 +11,6 @@\n import java.util.List;\n import java.util.concurrent.Executors;\n \n-\n-import ai.chat2db.spi.sql.Chat2DBContext;\n import okhttp3.Call;\n import okhttp3.Callback;\n import okhttp3.Dispatcher;\n@@ -141,12 +139,8 @@ public static String getFullPath(String jarPath) {\n         return path;\n     }\n \n+    public static final String DOWNLOAD_URL_HOST = \"https://oss-chat2db.alibaba.com/lib/\";\n     private static String getDownloadUrl(String jarPath) {\n-        for (String path : Chat2DBContext.JDBC_JAR_DOWNLOAD_URL_LIST) {\n-            if (path.contains(jarPath)) {\n-                return path.trim();\n-            }\n-        }\n-        return null;\n+       return   DOWNLOAD_URL_HOST+jarPath;\n     }\n }",
      "parent_sha": "1a6594ec98ac0bdfe5bcf7e088b0596b7dfc367b"
    }
  },
  {
    "oid": "ff4b0e1211a8cd8b7502ab8a801a8ea1121406f1",
    "message": "Fix kingbase8r6 error",
    "date": "2023-11-12T04:57:23Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/ff4b0e1211a8cd8b7502ab8a801a8ea1121406f1",
    "details": {
      "sha": "191c94c82cc4270ad002a1228bcc71458f6d4345",
      "filename": "chat2db-server/chat2db-plugins/chat2db-kingbase/src/main/java/ai/chat2db/plugin/kingbase/builder/DBConfigBuilder.java",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/ff4b0e1211a8cd8b7502ab8a801a8ea1121406f1/chat2db-server%2Fchat2db-plugins%2Fchat2db-kingbase%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fkingbase%2Fbuilder%2FDBConfigBuilder.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/ff4b0e1211a8cd8b7502ab8a801a8ea1121406f1/chat2db-server%2Fchat2db-plugins%2Fchat2db-kingbase%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fkingbase%2Fbuilder%2FDBConfigBuilder.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-kingbase%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fkingbase%2Fbuilder%2FDBConfigBuilder.java?ref=ff4b0e1211a8cd8b7502ab8a801a8ea1121406f1",
      "patch": "@@ -9,12 +9,20 @@ public static DBConfig buildDBConfig() {\n         DBConfig dbConfig = new DBConfig();\n         dbConfig.setName(\"KingBase\");\n         dbConfig.setDbType(\"KINGBASE\");\n+\n+\n         DriverConfig driverConfig = new DriverConfig();\n         driverConfig.setJdbcDriver(\"kingbase8-8.6.0.jar\");\n         driverConfig.setJdbcDriverClass(\"com.kingbase8.Driver\");\n         driverConfig.setDownloadJdbcDriverUrls(Lists.newArrayList(\"https://oss.sqlgpt.cn/lib/kingbase8-8.6.0.jar\"));\n         dbConfig.setDefaultDriverConfig(driverConfig);\n-        dbConfig.setDriverConfigList(Lists.newArrayList(driverConfig));\n+\n+        DriverConfig driverConfig1 = new DriverConfig();\n+        driverConfig1.setJdbcDriver(\"kingbase8-8.2.0.jar\");\n+        driverConfig1.setJdbcDriverClass(\"com.kingbase8.Driver\");\n+        driverConfig1.setDownloadJdbcDriverUrls(Lists.newArrayList(\"https://oss.sqlgpt.cn/lib/kingbase8-8.2.0.jar\"));\n+\n+        dbConfig.setDriverConfigList(Lists.newArrayList(driverConfig,driverConfig1));\n         return dbConfig;\n     }\n }",
      "parent_sha": "654462ad1c6e5bfe2633959ebd165de71b92cad5"
    }
  },
  {
    "oid": "4494f95d4f1dd4a5d9fb89848498a0c06ff66020",
    "message": "refactor(Chat2dbAIClient): refactor Chat2dbAIClient class",
    "date": "2023-11-21T21:28:25Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/4494f95d4f1dd4a5d9fb89848498a0c06ff66020",
    "details": {
      "sha": "541c4f68a9d570a92761607cb287f4950674aa1f",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/ai/chat2db/client/Chat2dbAIClient.java",
      "status": "modified",
      "additions": 43,
      "deletions": 22,
      "changes": 65,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/4494f95d4f1dd4a5d9fb89848498a0c06ff66020/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2Fchat2db%2Fclient%2FChat2dbAIClient.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/4494f95d4f1dd4a5d9fb89848498a0c06ff66020/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2Fchat2db%2Fclient%2FChat2dbAIClient.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2Fchat2db%2Fclient%2FChat2dbAIClient.java?ref=4494f95d4f1dd4a5d9fb89848498a0c06ff66020",
      "patch": "@@ -4,11 +4,10 @@\n import ai.chat2db.server.domain.api.model.Config;\n import ai.chat2db.server.domain.api.service.ConfigService;\n import ai.chat2db.server.web.api.util.ApplicationContextUtil;\n-import com.google.common.collect.Lists;\n-import com.unfbx.chatgpt.OpenAiStreamClient;\n import com.unfbx.chatgpt.constant.OpenAIConst;\n import lombok.extern.slf4j.Slf4j;\n-import org.apache.commons.lang3.StringUtils;\n+\n+import java.util.Objects;\n \n /**\n  * @author jipengfei\n@@ -35,7 +34,7 @@ public class Chat2dbAIClient {\n     public static final String CHAT2DB_EMBEDDING_MODEL= \"fastchat.embedding.model\";\n \n \n-    private static Chat2DBAIStreamClient CHAT2DB_AI_STREAM_CLIENT;\n+    private static volatile Chat2DBAIStreamClient CHAT2DB_AI_STREAM_CLIENT;\n \n     public static Chat2DBAIStreamClient getInstance() {\n         if (CHAT2DB_AI_STREAM_CLIENT != null) {\n@@ -57,35 +56,57 @@ private static Chat2DBAIStreamClient singleton() {\n     }\n \n     public static void refresh() {\n-        String apikey;\n-        String apiHost = ApplicationContextUtil.getProperty(CHAT2DB_OPENAI_HOST);\n-        if (StringUtils.isBlank(apiHost)) {\n-            apiHost = OpenAIConst.OPENAI_HOST;\n-        }\n         ConfigService configService = ApplicationContextUtil.getBean(ConfigService.class);\n+\n+        CHAT2DB_AI_STREAM_CLIENT = Chat2DBAIStreamClient.builder().apiHost(getApiHost(configService))\n+                .apiKey(getApiKey(configService)).model(getModel(configService)).build();\n+    }\n+\n+    private static String getApiHost(ConfigService configService) {\n         Config apiHostConfig = configService.find(CHAT2DB_OPENAI_HOST).getData();\n-        if (apiHostConfig != null) {\n-            apiHost = apiHostConfig.getContent();\n+\n+        if (Objects.nonNull(apiHostConfig)) {\n+            return apiHostConfig.getContent();\n+        }\n+\n+        String apiHost = ApplicationContextUtil.getProperty(CHAT2DB_OPENAI_HOST);\n+\n+        if (apiHost.isBlank()) {\n+            return OpenAIConst.OPENAI_HOST;\n         }\n+\n+        return apiHost;\n+    }\n+\n+    private static String getApiKey(ConfigService configService) {\n+        String apiKey;\n+\n         Config config = configService.find(CHAT2DB_OPENAI_KEY).getData();\n-        if (config != null) {\n-            apikey = config.getContent();\n+\n+        if (Objects.nonNull(config)) {\n+            apiKey = config.getContent();\n         } else {\n-            apikey = ApplicationContextUtil.getProperty(CHAT2DB_OPENAI_KEY);\n+            apiKey = ApplicationContextUtil.getProperty(CHAT2DB_OPENAI_KEY);\n         }\n+\n+        log.info(\"refresh chat2db apikey:{}\", maskApiKey(apiKey));\n+\n+        return apiKey;\n+    }\n+\n+    private static String getModel(ConfigService configService) {\n         Config modelConfig = configService.find(CHAT2DB_OPENAI_MODEL).getData();\n-        String model = \"\";\n-        if (modelConfig != null) {\n-            model = modelConfig.getContent();\n+\n+        if (Objects.nonNull(modelConfig)) {\n+            return modelConfig.getContent();\n         }\n-        log.info(\"refresh chat2db apikey:{}\", maskApiKey(apikey));\n-        CHAT2DB_AI_STREAM_CLIENT = Chat2DBAIStreamClient.builder().apiHost(apiHost)\n-                .apiKey(apikey).model(model).build();\n+\n+        return null;\n     }\n \n     private static String maskApiKey(String input) {\n-        if (input == null) {\n-            return input;\n+        if (Objects.isNull(input)) {\n+            return null;\n         }\n \n         StringBuilder maskedString = new StringBuilder(input);",
      "parent_sha": "e827babfe4396ea4433c51551819a1660cf7726c"
    }
  },
  {
    "oid": "a69fc1f9e418ef0bc0d676200214bbc814bf202e",
    "message": "vector update",
    "date": "2023-10-17T02:57:52Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/a69fc1f9e418ef0bc0d676200214bbc814bf202e",
    "details": {
      "sha": "80ae1a0223cc78c7c2b39964584ee24713720146",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/rdb/TableController.java",
      "status": "modified",
      "additions": 21,
      "deletions": 1,
      "changes": 22,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/a69fc1f9e418ef0bc0d676200214bbc814bf202e/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Frdb%2FTableController.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/a69fc1f9e418ef0bc0d676200214bbc814bf202e/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Frdb%2FTableController.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Frdb%2FTableController.java?ref=a69fc1f9e418ef0bc0d676200214bbc814bf202e",
      "patch": "@@ -10,24 +10,31 @@\n import ai.chat2db.server.tools.base.wrapper.result.PageResult;\n import ai.chat2db.server.tools.base.wrapper.result.web.WebPageResult;\n import ai.chat2db.server.web.api.aspect.ConnectionInfoAspect;\n+import ai.chat2db.server.web.api.controller.ai.EmbeddingController;\n import ai.chat2db.server.web.api.controller.rdb.converter.RdbWebConverter;\n import ai.chat2db.server.web.api.controller.rdb.request.*;\n import ai.chat2db.server.web.api.controller.rdb.vo.ColumnVO;\n import ai.chat2db.server.web.api.controller.rdb.vo.IndexVO;\n import ai.chat2db.server.web.api.controller.rdb.vo.SqlVO;\n import ai.chat2db.server.web.api.controller.rdb.vo.TableVO;\n import ai.chat2db.spi.model.*;\n+import ai.chat2db.spi.sql.Chat2DBContext;\n+import ai.chat2db.spi.sql.ConnectInfo;\n import com.google.common.collect.Lists;\n import jakarta.validation.Valid;\n+import lombok.extern.slf4j.Slf4j;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.*;\n \n import java.util.List;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n \n+@Slf4j\n @ConnectionInfoAspect\n @RequestMapping(\"/api/rdb/table\")\n @RestController\n-public class TableController {\n+public class TableController extends EmbeddingController {\n \n     @Autowired\n     private TableService tableService;\n@@ -41,6 +48,7 @@ public class TableController {\n     @Autowired\n     private DatabaseService databaseService;\n \n+    public static ExecutorService singleThreadExecutor = Executors.newSingleThreadExecutor();\n \n     /**\n      * \u67e5\u8be2\u5f53\u524dDB\u4e0b\u7684\u8868\u5217\u8868\n@@ -56,6 +64,18 @@ public WebPageResult<TableVO> list(@Valid TableBriefQueryRequest request) {\n         tableSelector.setIndexList(false);\n         PageResult<Table> tableDTOPageResult = tableService.pageQuery(queryParam, tableSelector);\n         List<TableVO> tableVOS = rdbWebConverter.tableDto2vo(tableDTOPageResult.getData());\n+        ConnectInfo connectInfo = Chat2DBContext.getConnectInfo();\n+        singleThreadExecutor.submit(() -> {\n+            try {\n+                Chat2DBContext.putContext(connectInfo);\n+                syncTableVector(request);\n+            } catch (Exception e) {\n+                log.error(\"sync table vector error\", e);\n+            } finally {\n+                Chat2DBContext.removeContext();\n+            }\n+            log.info(\"sync table vector finish\");\n+        });\n         return WebPageResult.of(tableVOS, tableDTOPageResult.getTotal(), request.getPageNo(),\n                 request.getPageSize());\n     }",
      "parent_sha": "1ed799b045dbf7385b5187a7255ff1dd8a334616"
    }
  },
  {
    "oid": "fa319d8be58b764b18143474e5b3f95445ee158f",
    "message": "\u4fee\u590d\u4e0d\u5b58\u5728\u6570\u636e\u5e93\u7c7b\u578b\u5bfc\u81f4\u7684\u5bfc\u5165\u5931\u8d25\u95ee\u9898",
    "date": "2023-09-22T08:44:13Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/fa319d8be58b764b18143474e5b3f95445ee158f",
    "details": {
      "sha": "d8237551862f2acca583c8fd9b45b3f1af84e167",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/ncx/service/impl/ConverterServiceImpl.java",
      "status": "modified",
      "additions": 12,
      "deletions": 5,
      "changes": 17,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/fa319d8be58b764b18143474e5b3f95445ee158f/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fncx%2Fservice%2Fimpl%2FConverterServiceImpl.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/fa319d8be58b764b18143474e5b3f95445ee158f/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fncx%2Fservice%2Fimpl%2FConverterServiceImpl.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fncx%2Fservice%2Fimpl%2FConverterServiceImpl.java?ref=fa319d8be58b764b18143474e5b3f95445ee158f",
      "patch": "@@ -111,19 +111,26 @@ public void insertDBConfig(List<Map<String, Map<String, String>>> list) {\n         for (Map<String, Map<String, String>> map : list) {\n             for (Map.Entry<String, Map<String, String>> valueMap : map.entrySet()) {\n                 Map<String, String> resultMap = valueMap.getValue();\n+                // mysql\u7684\u7248\u672c\u8fd8\u65e0\u6cd5\u533a\u5206\n+                DataBaseType dataBaseType = DataBaseType.matchType(resultMap.get(\"ConnType\"));\n+                DataSourceDO dataSourceDO;\n+                if (null == dataBaseType) {\n+                    //\u672a\u5339\u914d\u5230\u6570\u636e\u5e93\u7c7b\u578b\uff0c\u5982\uff1anavicat\u652f\u6301MongoDB\u7b49\uff0c\u4f46chat2DB\u6682\u4e0d\u652f\u6301\n+                    continue;\n+                } else {\n+                    dataSourceDO = new DataSourceDO();\n+                    dataSourceDO.setHost(resultMap.get(\"Host\"));\n+                    dataSourceDO.setPort(resultMap.get(\"Port\"));\n+                    dataSourceDO.setUrl(String.format(dataBaseType.getUrlString(), dataSourceDO.getHost(), dataSourceDO.getPort()));\n+                }\n                 // \u89e3\u5bc6\u5bc6\u7801\n                 String password = cipher.decryptString(resultMap.getOrDefault(\"Password\", \"\"));\n-                DataSourceDO dataSourceDO = new DataSourceDO();\n                 LocalDateTime dateTime = LocalDateTime.now();\n                 dataSourceDO.setGmtCreate(dateTime);\n                 dataSourceDO.setGmtModified(dateTime);\n                 dataSourceDO.setAlias(resultMap.get(\"ConnectionName\"));\n-                dataSourceDO.setHost(resultMap.get(\"Host\"));\n-                dataSourceDO.setPort(resultMap.get(\"Port\"));\n                 dataSourceDO.setUserName(resultMap.get(\"UserName\"));\n                 dataSourceDO.setType(resultMap.get(\"ConnType\"));\n-                // mysql\u7684\u7248\u672c\u8fd8\u65e0\u6cd5\u533a\u5206\n-                dataSourceDO.setUrl(String.format(Objects.requireNonNull(DataBaseType.matchType(dataSourceDO.getType())).getUrlString(), dataSourceDO.getHost(), dataSourceDO.getPort()));\n                 //password \u4e3a\u89e3\u5bc6\u51fa\u6765\u7684\u5bc6\u6587\uff0c\u518d\u4f7f\u7528chat2db\u7684\u52a0\u5bc6\n                 DesUtil desUtil = new DesUtil(DesUtil.DES_KEY);\n                 String encryptStr = desUtil.encrypt(password, \"CBC\");",
      "parent_sha": "cd5b8fb68ce33d03048190b4fd7250b6514f4678"
    }
  },
  {
    "oid": "02977da3a83f3025dc2fe647c91dbad6ecbb08ab",
    "message": "Support for custom drivers",
    "date": "2023-06-23T07:54:53Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/02977da3a83f3025dc2fe647c91dbad6ecbb08ab",
    "details": {
      "sha": "246031c8f7cc6366ad3e5827253c2852205ac057",
      "filename": "chat2db-server/chat2db-spi/src/main/java/ai/chat2db/spi/sql/Chat2DBContext.java",
      "status": "modified",
      "additions": 12,
      "deletions": 6,
      "changes": 18,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/02977da3a83f3025dc2fe647c91dbad6ecbb08ab/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fsql%2FChat2DBContext.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/02977da3a83f3025dc2fe647c91dbad6ecbb08ab/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fsql%2FChat2DBContext.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fsql%2FChat2DBContext.java?ref=02977da3a83f3025dc2fe647c91dbad6ecbb08ab",
      "patch": "@@ -46,7 +46,7 @@ public class Chat2DBContext {\n         }\n     }\n \n-    public static DriverConfig getDefaultDriverConfig(String dbType){\n+    public static DriverConfig getDefaultDriverConfig(String dbType) {\n         return PLUGIN_MAP.get(dbType).getDBConfig().getDefaultDriverConfig();\n     }\n \n@@ -63,7 +63,7 @@ public static MetaData getMetaData() {\n         return PLUGIN_MAP.get(getConnectInfo().getDbType()).getMetaData();\n     }\n \n-    public static DBConfig getDBConfig(){\n+    public static DBConfig getDBConfig() {\n         return PLUGIN_MAP.get(getConnectInfo().getDbType()).getDBConfig();\n     }\n \n@@ -103,9 +103,15 @@ private static void setConnectInfoThreadLocal(ConnectInfo connectInfo) {\n             if (session != null) {\n                 url = url.replace(host, \"127.0.0.1\").replace(port, ssh.getLocalPort());\n             }\n+            DriverConfig config = connectInfo.getDriverConfig();\n+            if (config == null) {\n+                config = getDefaultDriverConfig(connectInfo.getDbType());\n+                connectInfo.setDriverConfig(config);\n+            }\n+\n             connection = getConnect(url, host, port, connectInfo.getUser(),\n-                connectInfo.getPassword(), connectInfo.getDbType(),\n-                connectInfo.getDriverConfig(), ssh, connectInfo.getExtendMap());\n+                    connectInfo.getPassword(), connectInfo.getDbType(),\n+                    connectInfo.getDriverConfig(), ssh, connectInfo.getExtendMap());\n         } catch (Exception e1) {\n             log.error(\"getConnect error\", e1);\n             if (connection != null) {\n@@ -139,8 +145,8 @@ private static void setConnectInfoThreadLocal(ConnectInfo connectInfo) {\n      * @return\n      */\n     private static Connection getConnect(String url, String host, String port,\n-        String userName, String password, String dbType,\n-        DriverConfig jdbc, SSHInfo ssh, Map<String, Object> properties) throws SQLException {\n+                                         String userName, String password, String dbType,\n+                                         DriverConfig jdbc, SSHInfo ssh, Map<String, Object> properties) throws SQLException {\n         // \u521b\u5efa\u8fde\u63a5\n         return IDriverManager.getConnection(url, userName, password, jdbc, properties);\n ",
      "parent_sha": "0789e72977603fb4e2f257a3c2508f02fa680340"
    }
  },
  {
    "oid": "cd2447971010419fa829571e4b020583dd1c2cb3",
    "message": "add prompt support",
    "date": "2023-10-04T04:18:26Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/cd2447971010419fa829571e4b020583dd1c2cb3",
    "details": {
      "sha": "506e007d9a063a737d21b265e38fe0d2206d2224",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/ai/TextGenerationController.java",
      "status": "modified",
      "additions": 10,
      "deletions": 3,
      "changes": 13,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/cd2447971010419fa829571e4b020583dd1c2cb3/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FTextGenerationController.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/cd2447971010419fa829571e4b020583dd1c2cb3/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FTextGenerationController.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FTextGenerationController.java?ref=cd2447971010419fa829571e4b020583dd1c2cb3",
      "patch": "@@ -47,16 +47,16 @@ public class TextGenerationController extends ChatController {\n     public SseEmitter prompt(ChatQueryRequest queryRequest, @RequestHeader Map<String, String> headers)\n             throws Exception {\n         queryRequest.setPromptType(PromptType.TEXT_GENERATION.getCode());\n+\n         String promptTemplate = \"### Instructions:\\n\" +\n-                \"Your task is generate a SQL query according to the prompt, given a %s database schema.\\n\" +\n+                \"Your task is generate a SQL query according to the prompt %s.\\n\" +\n                 \"Adhere to these rules:\\n\" +\n                 \"- **Deliberately go through the prompt and database schema word by word** to appropriately answer the question\\n\" +\n                 \"- **Use Table Aliases** to prevent ambiguity. For example, `SELECT table1.col1, table2.col1 FROM table1 JOIN table2 ON table1.id = table2.id`.\\n\" +\n                 \"\\n\" +\n                 \"### Input:\\n\" +\n                 \"Generate a SQL query according to the prompt `%s`.\\n\" +\n-                \"This query will run on a database whose schema is represented in this string:\\n\" +\n-                \"{%s}\\n\" +\n+                \"%s\\n\" +\n                 \"\\n\" +\n                 \"### Response:\\n\" +\n                 \"Based on your instructions, here is the SQL query I have generated to complete the prompt `{%s}`:\\n\" +\n@@ -65,6 +65,13 @@ public SseEmitter prompt(ChatQueryRequest queryRequest, @RequestHeader Map<Strin\n         // query database schema info\n         String databaseType = queryDatabaseType(queryRequest);\n         String schemas = queryDatabaseSchema(queryRequest);\n+        if (StringUtils.isNotBlank(schemas)) {\n+            databaseType = String.format(\", given a %s database schema\", databaseType);\n+            schemas = String.format(\"This query will run on a database whose schema is represented in this string:\\n$s\", schemas);\n+        } else  {\n+            databaseType = \"\";\n+            schemas = \"\";\n+        }\n         String prompt = String.format(promptTemplate, databaseType, queryRequest.getMessage(), schemas, queryRequest.getMessage());\n         queryRequest.setMessage(prompt);\n ",
      "parent_sha": "0ce5d770717443ca147497b0b11e5b4b381f6556"
    }
  },
  {
    "oid": "d563571399adbe78d70ca0e7c8ba0936352139eb",
    "message": "Split to obtain HTTP interface",
    "date": "2023-07-10T12:49:36Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/d563571399adbe78d70ca0e7c8ba0936352139eb",
    "details": {
      "sha": "f702947be32ece7427586fe585f252edb644b5d0",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/ai/AiConfigController.java",
      "status": "modified",
      "additions": 16,
      "deletions": 5,
      "changes": 21,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/d563571399adbe78d70ca0e7c8ba0936352139eb/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FAiConfigController.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/d563571399adbe78d70ca0e7c8ba0936352139eb/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FAiConfigController.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FAiConfigController.java?ref=d563571399adbe78d70ca0e7c8ba0936352139eb",
      "patch": "@@ -83,9 +83,13 @@ public DataResult<QrCodeResponse> getLoginStatus(@RequestParam(required = false)\n      */\n     @GetMapping(\"/remaininguses\")\n     public DataResult<ApiKeyResponse> remaininguses() {\n-        DataResult<Config> apiKey = configService.find(OpenAIClient.OPENAI_KEY);\n-        return gatewayClientService.remaininguses(\n-            Objects.nonNull(apiKey.getData()) ? apiKey.getData().getContent() : null);\n+        String apiKey = getApiKey();\n+        if (apiKey == null) {\n+            return DataResult.of(ApiKeyResponse.builder()\n+                .remainingUses(0L)\n+                .build());\n+        }\n+        return gatewayClientService.remaininguses(apiKey);\n     }\n \n     /**\n@@ -95,8 +99,15 @@ public DataResult<ApiKeyResponse> remaininguses() {\n      */\n     @GetMapping(\"/getInviteQrCode\")\n     public DataResult<InviteQrCodeResponse> getInviteQrCode() {\n+        String apiKey = getApiKey();\n+        if (apiKey == null) {\n+            return DataResult.empty();\n+        }\n+        return gatewayClientService.getInviteQrCode(apiKey);\n+    }\n+\n+    private String getApiKey() {\n         DataResult<Config> apiKey = configService.find(OpenAIClient.OPENAI_KEY);\n-        return gatewayClientService.getInviteQrCode(\n-            Objects.nonNull(apiKey.getData()) ? apiKey.getData().getContent() : null);\n+        return Objects.nonNull(apiKey.getData()) ? apiKey.getData().getContent() : null;\n     }\n }",
      "parent_sha": "04dfc62b94ba118784f6070726734ad3fe19298d"
    }
  },
  {
    "oid": "a0fdfc582276fb289e656357f2f8ae9ae2b4deb6",
    "message": "fix dm function bug",
    "date": "2023-09-06T11:20:51Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/a0fdfc582276fb289e656357f2f8ae9ae2b4deb6",
    "details": {
      "sha": "d841646a03ae3e4165906298bfe4cd9ed9bc680a",
      "filename": "chat2db-server/chat2db-spi/src/main/java/ai/chat2db/spi/sql/IDriverManager.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/a0fdfc582276fb289e656357f2f8ae9ae2b4deb6/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fsql%2FIDriverManager.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/a0fdfc582276fb289e656357f2f8ae9ae2b4deb6/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fsql%2FIDriverManager.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fsql%2FIDriverManager.java?ref=a0fdfc582276fb289e656357f2f8ae9ae2b4deb6",
      "patch": "@@ -85,7 +85,7 @@ public static Connection getConnection(String url, Properties info, DriverConfig\n         try {\n             Connection connection = driverEntry.getDriver().connect(url, info);\n             if(connection == null){\n-                throw new ConnectionException(\"driverEntry.getDriver().connect return null\",null);\n+                throw new SQLException(\"driver.connect return null , No suitable driver found for url \" +url ,\"08001\");\n             }\n             return connection;\n         } catch (SQLException var7) {",
      "parent_sha": "1af4d3f020035601cfd5d6361e8deee3e66f01b1"
    }
  },
  {
    "oid": "cf6b7a0bc806f36753b9b7f784a6e9e607a6fd1c",
    "message": "important fix: avoid duplicating the db name",
    "date": "2024-10-24T16:58:25Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/cf6b7a0bc806f36753b9b7f784a6e9e607a6fd1c",
    "details": {
      "sha": "c7653a24b0821a25d1ec50e6bac99f06acb02e41",
      "filename": "chat2db-server/chat2db-plugins/chat2db-timeplus/src/main/java/ai/chat2db/plugin/timeplus/TimeplusDBManage.java",
      "status": "modified",
      "additions": 7,
      "deletions": 4,
      "changes": 11,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/cf6b7a0bc806f36753b9b7f784a6e9e607a6fd1c/chat2db-server%2Fchat2db-plugins%2Fchat2db-timeplus%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Ftimeplus%2FTimeplusDBManage.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/cf6b7a0bc806f36753b9b7f784a6e9e607a6fd1c/chat2db-server%2Fchat2db-plugins%2Fchat2db-timeplus%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Ftimeplus%2FTimeplusDBManage.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-timeplus%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Ftimeplus%2FTimeplusDBManage.java?ref=cf6b7a0bc806f36753b9b7f784a6e9e607a6fd1c",
      "patch": "@@ -132,7 +132,7 @@ public Connection getConnection(ConnectInfo connectInfo) {\n     }\n \n     private String setDatabaseInJdbcUrl(ConnectInfo connectInfo) {\n-        String databaseName;\n+        String databaseName; //sometimes it's null, sometimes not. Need special handling\n         String url = connectInfo.getUrl();\n         if (\n             StringUtils.isBlank(\n@@ -151,14 +151,17 @@ private String setDatabaseInJdbcUrl(ConnectInfo connectInfo) {\n             // Remove / from connection parameters\n             connectParams = connectParams.substring(1);\n         }\n+        if (connectParams.equals(databaseName)) {\n+            return url;\n+        }\n         // Add database name\n-        return (\n+        String rv =\n             addressSplit[0] +\n             connectAddress +\n             \"/\" +\n             databaseName +\n-            connectParams\n-        );\n+            connectParams;\n+        return rv;\n     }\n \n     @Override",
      "parent_sha": "a17f69cf25fcdb387af0d9bda9b0e417f3a878a0"
    }
  },
  {
    "oid": "35391c320fe8fe62793cf1fac8e3dcbc402c6ced",
    "message": "Add operation log",
    "date": "2023-10-17T14:54:35Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/35391c320fe8fe62793cf1fac8e3dcbc402c6ced",
    "details": {
      "sha": "85096d600ed65d3f0faa250794bb23c16cfe9117",
      "filename": "chat2db-server/chat2db-plugins/chat2db-oracle/src/main/java/ai/chat2db/plugin/oracle/builder/OracleSqlBuilder.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/35391c320fe8fe62793cf1fac8e3dcbc402c6ced/chat2db-server%2Fchat2db-plugins%2Fchat2db-oracle%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Foracle%2Fbuilder%2FOracleSqlBuilder.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/35391c320fe8fe62793cf1fac8e3dcbc402c6ced/chat2db-server%2Fchat2db-plugins%2Fchat2db-oracle%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Foracle%2Fbuilder%2FOracleSqlBuilder.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-oracle%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Foracle%2Fbuilder%2FOracleSqlBuilder.java?ref=35391c320fe8fe62793cf1fac8e3dcbc402c6ced",
      "patch": "@@ -67,10 +67,10 @@ public String buildModifyTaleSql(Table oldTable, Table newTable) {\n \n         if (!StringUtils.equalsIgnoreCase(oldTable.getName(), newTable.getName())) {\n             script.append(\"ALTER TABLE \"). append(\"\\\"\").append(oldTable.getSchemaName()).append(\"\\\".\\\"\").append(oldTable.getName()).append(\"\\\"\");\n-            script.append(\" \").append(\"RENAME TO \").append(\"\\\"\").append(newTable.getName()).append(\"\\\"\").append(\";\");\n+            script.append(\" \").append(\"RENAME TO \").append(\"\\\"\").append(newTable.getName()).append(\"\\\"\").append(\";\\n\");\n         }\n         if (!StringUtils.equalsIgnoreCase(oldTable.getComment(), newTable.getComment())) {\n-            script.append(\"\\n\").append(buildTableComment(newTable)).append(\";\");\n+            script.append(\"\").append(buildTableComment(newTable)).append(\";\\n\");\n         }\n \n ",
      "parent_sha": "4088df95790e50f78e75bbe6c8393c04017c0355"
    }
  },
  {
    "oid": "5dad287160137fbae6f02539e2bffb81db74f44f",
    "message": "sqlserver-database-export",
    "date": "2024-03-20T11:53:44Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/5dad287160137fbae6f02539e2bffb81db74f44f",
    "details": {
      "sha": "9fb8181b953b64c7fe86e3446ebf337d316675c4",
      "filename": "chat2db-server/chat2db-plugins/chat2db-sqlserver/src/main/java/ai/chat2db/plugin/sqlserver/SqlServerDBManage.java",
      "status": "modified",
      "additions": 44,
      "deletions": 38,
      "changes": 82,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/5dad287160137fbae6f02539e2bffb81db74f44f/chat2db-server%2Fchat2db-plugins%2Fchat2db-sqlserver%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fsqlserver%2FSqlServerDBManage.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/5dad287160137fbae6f02539e2bffb81db74f44f/chat2db-server%2Fchat2db-plugins%2Fchat2db-sqlserver%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fsqlserver%2FSqlServerDBManage.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-sqlserver%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fsqlserver%2FSqlServerDBManage.java?ref=5dad287160137fbae6f02539e2bffb81db74f44f",
      "patch": "@@ -53,9 +53,10 @@ public String exportDatabase(Connection connection, String databaseName, String\n     }\n \n     private void exportTables(Connection connection, StringBuilder sqlBuilder, String schemaName, boolean containData) throws SQLException {\n-        try (Statement statement = connection.createStatement(); ResultSet tables = statement.executeQuery(\"SELECT name FROM SysObjects Where XType='U'\")) {\n-            while (tables.next()) {\n-                String tableName = tables.getString(1);\n+        String sql =\"SELECT name FROM SysObjects Where XType='U'\";\n+        try (ResultSet resultSet = connection.createStatement().executeQuery(sql)) {\n+            while (resultSet.next()) {\n+                String tableName = resultSet.getString(\"name\");\n                 exportTable(connection, tableName, schemaName, sqlBuilder, containData);\n             }\n         }\n@@ -69,14 +70,11 @@ private void exportTable(Connection connection, String tableName, String schemaN\n         } catch (Exception e) {\n             //log.error(\"Failed to create function\", e);\n         }\n-        try (\n-                Statement statement = connection.createStatement();\n-                ResultSet ddlResult = statement.executeQuery(\"SELECT \" + schemaName + \".ufn_GetCreateTableScript('\" + schemaName + \"', '\" + tableName + \"')\");\n-        ) {\n-            if (ddlResult.next()) {\n-                String createTableSql = \"DROP TABLE IF EXISTS \" + tableName + \";\\n\" + ddlResult.getString(1);\n-                sqlBuilder.append(createTableSql);\n-                // \u5bfc\u51fa\u8868\u6570\u636e\n+        String sql = String.format(\"SELECT %s.ufn_GetCreateTableScript('%s', '%s') as ddl\",schemaName,schemaName,tableName);\n+        try (ResultSet resultSet = connection.createStatement().executeQuery(sql)) {\n+            if (resultSet.next()) {\n+                sqlBuilder.append(\"DROP TABLE IF EXISTS \").append(tableName).append(\";\").append(\"\\n\")\n+                        .append(resultSet.getString(\"ddl\")).append(\"\\n\");\n                 if (containData) {\n                     exportTableData(connection, tableName, sqlBuilder);\n                 } else {\n@@ -88,84 +86,92 @@ private void exportTable(Connection connection, String tableName, String schemaN\n \n \n     private void exportTableData(Connection connection, String tableName, StringBuilder sqlBuilder) throws SQLException {\n-        StringBuilder insertSql = new StringBuilder();\n-        try (Statement statement = connection.createStatement(); ResultSet resultSet = statement.executeQuery(\"select * from \" + tableName)) {\n+        String sql = String.format(\"select * from %s\", tableName);\n+        try (ResultSet resultSet = connection.createStatement().executeQuery(sql)) {\n             ResultSetMetaData metaData = resultSet.getMetaData();\n             while (resultSet.next()) {\n-                insertSql.append(\"INSERT INTO \").append(tableName).append(\" VALUES (\");\n+                sqlBuilder.append(\"INSERT INTO \").append(tableName).append(\" VALUES (\");\n                 for (int i = 1; i <= metaData.getColumnCount(); i++) {\n                     String value = resultSet.getString(i);\n                     if (Objects.isNull(value)) {\n-                        insertSql.append(\"NULL\");\n+                        sqlBuilder.append(\"NULL\");\n                     } else {\n-                        insertSql.append(\"'\").append(value).append(\"'\");\n+                        sqlBuilder.append(\"'\").append(value).append(\"'\");\n                     }\n                     if (i < metaData.getColumnCount()) {\n-                        insertSql.append(\", \");\n+                        sqlBuilder.append(\", \");\n                     }\n                 }\n-                insertSql.append(\");\\n\");\n+                sqlBuilder.append(\");\\n\");\n             }\n-            insertSql.append(\"\\n\");\n+            sqlBuilder.append(\"\\n\");\n         }\n-        sqlBuilder.append(insertSql).append(\"go\").append(\"\\n\");\n+        sqlBuilder.append(\"go\").append(\"\\n\");\n     }\n \n     private void exportViews(Connection connection, String databaseName, String schemaName, StringBuilder sqlBuilder) throws SQLException {\n-        try (Statement statement = connection.createStatement(); ResultSet resultSet = statement.executeQuery(\"SELECT TABLE_NAME, VIEW_DEFINITION FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_SCHEMA = '\" + schemaName + \"' AND TABLE_CATALOG = '\" + databaseName + \"'; \")) {\n+        String sql = String.format(\"SELECT TABLE_NAME, VIEW_DEFINITION FROM INFORMATION_SCHEMA.VIEWS \" +\n+                                           \"WHERE TABLE_SCHEMA = '%s' AND TABLE_CATALOG = '%s'; \", schemaName, databaseName);\n+        try (ResultSet resultSet = connection.createStatement().executeQuery(sql)) {\n             while (resultSet.next()) {\n-                sqlBuilder.append(\"DROP VIEW IF EXISTS \").append(resultSet.getString(1)).append(\";\\n\").append(\"go\").append(\"\\n\")\n-                        .append(resultSet.getString(2)).append(\";\\n\");\n+                sqlBuilder.append(\"DROP VIEW IF EXISTS \").append(resultSet.getString(\"TABLE_NAME\")).append(\";\\n\").append(\"go\").append(\"\\n\")\n+                        .append(resultSet.getString(\"VIEW_DEFINITION\")).append(\";\").append(\"\\n\")\n+                        .append(\"go\").append(\"\\n\");\n             }\n-            sqlBuilder.append(\"\\n\");\n-            sqlBuilder.append(\"go\").append(\"\\n\");\n \n         }\n     }\n \n     private void exportFunctions(Connection connection, String schemaName, StringBuilder sqlBuilder) throws SQLException {\n-        try (Statement statement = connection.createStatement(); ResultSet resultSet = statement.executeQuery(\"SELECT name FROM sys.objects WHERE type = 'FN' and SCHEMA_ID = SCHEMA_ID('\" + schemaName + \"')\")) {\n+        String sql = String.format(\"SELECT name FROM sys.objects WHERE type = 'FN' and SCHEMA_ID = SCHEMA_ID('%s')\", schemaName);\n+        try (ResultSet resultSet = connection.createStatement().executeQuery(sql)) {\n             while (resultSet.next()) {\n-                String functionName = resultSet.getString(1);\n+                String functionName = resultSet.getString(\"name\");\n                 exportFunction(connection, functionName, schemaName, sqlBuilder);\n             }\n         }\n     }\n \n     private void exportFunction(Connection connection, String functionName, String schemaName, StringBuilder sqlBuilder) throws SQLException {\n-        try (Statement statement = connection.createStatement(); ResultSet resultSet = statement.executeQuery(\"SELECT OBJECT_DEFINITION (OBJECT_ID('\" + schemaName + \".\" + functionName + \"'))\")) {\n+        String sql = String.format(\"SELECT OBJECT_DEFINITION(OBJECT_ID('%s.%s')) as ddl\", schemaName, functionName);\n+        try (ResultSet resultSet = connection.createStatement().executeQuery(sql)) {\n             if (resultSet.next()) {\n-                sqlBuilder.append(resultSet.getString(1).replace(\"CREATE   FUNCTION\", \"CREATE OR ALTER FUNCTION\")).append(\"\\n\");\n-                sqlBuilder.append(\"go\").append(\"\\n\");\n+                sqlBuilder.append(resultSet.getString(\"ddl\")\n+                                          .replace(\"CREATE   FUNCTION\", \"CREATE OR ALTER FUNCTION\"))\n+                        .append(\"\\n\").append(\"go\").append(\"\\n\");\n \n             }\n         }\n     }\n \n     private void exportProcedures(Connection connection, String schemaName, StringBuilder sqlBuilder) throws SQLException {\n-        try (Statement statement = connection.createStatement(); ResultSet resultSet = statement.executeQuery(\"SELECT name FROM sys.procedures WHERE schema_id = SCHEMA_ID('\" + schemaName + \"');\")) {\n+        String sql = String.format(\"SELECT name FROM sys.procedures WHERE SCHEMA_ID = SCHEMA_ID('%s')\", schemaName);\n+        try (ResultSet resultSet = connection.createStatement().executeQuery(sql)) {\n             while (resultSet.next()) {\n-                String procedureName = resultSet.getString(1);\n+                String procedureName = resultSet.getString(\"name\");\n                 exportProcedure(connection, procedureName, schemaName, sqlBuilder);\n             }\n         }\n     }\n \n     private void exportProcedure(Connection connection, String procedureName, String schemaName, StringBuilder sqlBuilder) throws SQLException {\n-        try (Statement statement = connection.createStatement(); ResultSet resultSet = statement.executeQuery(\"SELECT definition FROM sys.sql_modules  WHERE object_id = (OBJECT_ID('\" + schemaName + \".\" + procedureName + \"'));\")) {\n+        String sql = String.format(\"SELECT definition FROM sys.sql_modules  WHERE object_id = (OBJECT_ID('%s.%s'));\", schemaName, procedureName);\n+        try (ResultSet resultSet = connection.createStatement().executeQuery(sql)) {\n             if (resultSet.next()) {\n-                sqlBuilder.append(resultSet.getString(1).replace(\"CREATE   PROCEDURE\", \"CREATE OR ALTER PROCEDURE\")).append(\"\\n\");\n-                sqlBuilder.append(\"go\").append(\"\\n\");\n+                sqlBuilder.append(resultSet.getString(\"definition\")\n+                                          .replace(\"CREATE   PROCEDURE\", \"CREATE OR ALTER PROCEDURE\"))\n+                        .append(\"\\n\").append(\"go\").append(\"\\n\");\n \n             }\n         }\n     }\n \n     private void exportTriggers(Connection connection, StringBuilder sqlBuilder) throws SQLException {\n-        try (Statement statement = connection.createStatement(); ResultSet resultSet = statement.executeQuery(TRIGGER_SQL_LIST)) {\n+        try (ResultSet resultSet = connection.createStatement().executeQuery(TRIGGER_SQL_LIST)) {\n             while (resultSet.next()) {\n-                  sqlBuilder.append(resultSet.getString(\"triggerDefinition\").replace(\"CREATE TRIGGER\", \"CREATE OR ALTER TRIGGER\"))\n-                          .append(\"\\n\").append(\"go\").append(\"\\n\");\n+                sqlBuilder.append(resultSet.getString(\"triggerDefinition\")\n+                                          .replace(\"CREATE   TRIGGER\", \"CREATE OR ALTER TRIGGER\"))\n+                        .append(\"\\n\").append(\"go\").append(\"\\n\");\n             }\n         }\n     }",
      "parent_sha": "dba25aa198be031db13b7f82779d5e8b6562c09e"
    }
  },
  {
    "oid": "ce801277775860fde3a94b0b7d149cd9f3efdce5",
    "message": "fix-dm-table-ddl-missing-comment",
    "date": "2024-03-08T06:54:39Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/ce801277775860fde3a94b0b7d149cd9f3efdce5",
    "details": {
      "sha": "888936e1430febc9474638014ea783136bbd3436",
      "filename": "chat2db-server/chat2db-plugins/chat2db-dm/src/main/java/ai/chat2db/plugin/dm/DMMetaData.java",
      "status": "modified",
      "additions": 24,
      "deletions": 12,
      "changes": 36,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/ce801277775860fde3a94b0b7d149cd9f3efdce5/chat2db-server%2Fchat2db-plugins%2Fchat2db-dm%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fdm%2FDMMetaData.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/ce801277775860fde3a94b0b7d149cd9f3efdce5/chat2db-server%2Fchat2db-plugins%2Fchat2db-dm%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fdm%2FDMMetaData.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-dm%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fdm%2FDMMetaData.java?ref=ce801277775860fde3a94b0b7d149cd9f3efdce5",
      "patch": "@@ -1,11 +1,5 @@\n package ai.chat2db.plugin.dm;\n \n-import java.sql.Connection;\n-import java.sql.ResultSet;\n-import java.sql.SQLException;\n-import java.util.*;\n-import java.util.stream.Collectors;\n-\n import ai.chat2db.plugin.dm.builder.DMSqlBuilder;\n import ai.chat2db.plugin.dm.type.DMColumnTypeEnum;\n import ai.chat2db.plugin.dm.type.DMDefaultValueEnum;\n@@ -16,11 +10,16 @@\n import ai.chat2db.spi.model.*;\n import ai.chat2db.spi.sql.SQLExecutor;\n import ai.chat2db.spi.util.SortUtils;\n-import ai.chat2db.spi.util.SqlUtils;\n import com.google.common.collect.Lists;\n import jakarta.validation.constraints.NotEmpty;\n import org.apache.commons.lang3.StringUtils;\n \n+import java.sql.Connection;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.util.*;\n+import java.util.stream.Collectors;\n+\n public class DMMetaData extends DefaultMetaService implements MetaData {\n \n     private List<String> systemSchemas = Arrays.asList(\"CTISYS\", \"SYS\",\"SYSDBA\",\"SYSSSO\",\"SYSAUDITOR\");\n@@ -30,15 +29,28 @@ public List<Schema> schemas(Connection connection, String databaseName) {\n         List<Schema> schemas = SQLExecutor.getInstance().schemas(connection, databaseName, null);\n         return SortUtils.sortSchema(schemas, systemSchemas);\n     }\n+      private String format(String tableName){\n+        return \"\\\"\" + tableName + \"\\\"\";\n+      }\n+\n     public String tableDDL(Connection connection, String databaseName, String schemaName, String tableName) {\n-        String selectObjectDDLSQL = String.format(\n-            \"select dbms_metadata.get_ddl(%s, %s, %s) AS \\\"sql\\\" from dual\",\n-            SqlUtils.formatSQLString(\"TABLE\"), SqlUtils.formatSQLString(tableName),\n-            SqlUtils.formatSQLString(schemaName));\n+        String sql = \"\"\"\n+                     SELECT\n+                         (SELECT comments FROM user_tab_comments WHERE table_name = '%s') AS comments,\n+                         (SELECT dbms_metadata.get_ddl('TABLE', '%s', '%s') FROM dual) AS ddl\n+                     FROM dual;\n+                     \"\"\";\n+        String selectObjectDDLSQL = String.format(sql, tableName, tableName, schemaName);\n         return SQLExecutor.getInstance().execute(connection, selectObjectDDLSQL, resultSet -> {\n             try {\n                 if (resultSet.next()) {\n-                    return resultSet.getString(\"sql\");\n+                    String ddl = resultSet.getString(2);\n+                    String comment = resultSet.getString(1);\n+                    if (StringUtils.isNotBlank(comment)) {\n+                        return ddl +\"\\n\"+ \"COMMENT ON TABLE \" + format(schemaName) + \".\" + format(tableName) +\n+                                \" IS \" + \"'\" + comment + \"';\";\n+                    }\n+                    return ddl;\n                 }\n             } catch (SQLException e) {\n                 throw new RuntimeException(e);",
      "parent_sha": "e4dae07b543acdfa66c36462345399152b440897"
    }
  },
  {
    "oid": "488444e09565d3a5e9095edd1d0088c944c1d358",
    "message": "fix rowIdIndex",
    "date": "2024-07-05T07:22:26Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/488444e09565d3a5e9095edd1d0088c944c1d358",
    "details": {
      "sha": "c31ab10526dd2a6fb34e9db08557d0863305907d",
      "filename": "chat2db-server/chat2db-spi/src/main/java/ai/chat2db/spi/sql/SQLExecutor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/488444e09565d3a5e9095edd1d0088c944c1d358/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fsql%2FSQLExecutor.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/488444e09565d3a5e9095edd1d0088c944c1d358/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fsql%2FSQLExecutor.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fsql%2FSQLExecutor.java?ref=488444e09565d3a5e9095edd1d0088c944c1d358",
      "patch": "@@ -259,7 +259,7 @@ private int getChat2dbAutoRowIdIndex(List<Header> headerList) {\n             Header header = headerList.get(i);\n             if (\"CAHT2DB_AUTO_ROW_ID\".equals(header.getName())) {\n                 headerList.remove(i);\n-                return i;\n+                return i+1;\n             }\n         }\n         return -1;",
      "parent_sha": "b5addde7f8960c2a50c26c803a442c855d0bf8d7"
    }
  },
  {
    "oid": "d4af8cefba374b45ba3a15722e610b85e061c061",
    "message": "Bug: Error #865 when a new row of new data id is added and not filled in in MySQL database.",
    "date": "2024-02-02T08:24:50Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/d4af8cefba374b45ba3a15722e610b85e061c061",
    "details": {
      "sha": "7b8fe9c07561843da4c8bab980ba6ef63d922076",
      "filename": "chat2db-server/chat2db-spi/src/main/java/ai/chat2db/spi/util/SqlUtils.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/d4af8cefba374b45ba3a15722e610b85e061c061/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Futil%2FSqlUtils.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/d4af8cefba374b45ba3a15722e610b85e061c061/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Futil%2FSqlUtils.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Futil%2FSqlUtils.java?ref=d4af8cefba374b45ba3a15722e610b85e061c061",
      "patch": "@@ -132,7 +132,7 @@ public static List<String> parse(String sql, DbType dbType) {\n     private static final String DEFAULT_VALUE = \"CHAT2DB_UPDATE_TABLE_DATA_USER_FILLED_DEFAULT\";\n \n     public static String getSqlValue(String value, String dataType) {\n-        if (value == null) {\n+        if (value == null || value == \"\") {\n             return null;\n         }\n         if (DEFAULT_VALUE.equals(value)) {",
      "parent_sha": "3f0adc101b5221f7b4af1961700985e5a3e52191"
    }
  },
  {
    "oid": "e98e261aa79171d987c91f80ac0ef9675000183d",
    "message": "set larger timeout",
    "date": "2023-09-06T11:20:19Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/e98e261aa79171d987c91f80ac0ef9675000183d",
    "details": {
      "sha": "89ceb821bc7e9b233d9ec3fab529863f0aca5390",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/ai/ChatController.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/e98e261aa79171d987c91f80ac0ef9675000183d/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FChatController.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/e98e261aa79171d987c91f80ac0ef9675000183d/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FChatController.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FChatController.java?ref=e98e261aa79171d987c91f80ac0ef9675000183d",
      "patch": "@@ -89,7 +89,7 @@ public class ChatController {\n     /**\n      * chat\u7684\u8d85\u65f6\u65f6\u95f4\n      */\n-    private static final Long CHAT_TIMEOUT = Duration.ofMinutes(10).toMillis();\n+    private static final Long CHAT_TIMEOUT = Duration.ofMinutes(50).toMillis();\n \n     /**\n      * \u63d0\u793a\u8bed\u6700\u5927token\u6570",
      "parent_sha": "55d582a547c046edef314c60f54085d8fbaaae34"
    }
  },
  {
    "oid": "6b1fdde1962e929905998e16e64ab3f11f10267e",
    "message": "private",
    "date": "2024-03-11T12:24:05Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/6b1fdde1962e929905998e16e64ab3f11f10267e",
    "details": {
      "sha": "8450a4236d013185e61cb064b715054bbed8e96d",
      "filename": "chat2db-server/chat2db-plugins/chat2db-sqlite/src/main/java/ai/chat2db/plugin/sqlite/SqliteMetaData.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/6b1fdde1962e929905998e16e64ab3f11f10267e/chat2db-server%2Fchat2db-plugins%2Fchat2db-sqlite%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fsqlite%2FSqliteMetaData.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/6b1fdde1962e929905998e16e64ab3f11f10267e/chat2db-server%2Fchat2db-plugins%2Fchat2db-sqlite%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fsqlite%2FSqliteMetaData.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-sqlite%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fsqlite%2FSqliteMetaData.java?ref=6b1fdde1962e929905998e16e64ab3f11f10267e",
      "patch": "@@ -21,7 +21,7 @@\n import java.util.stream.Collectors;\n \n public class SqliteMetaData extends DefaultMetaService implements MetaData {\n-    public static  String  VIEW_DDL_SQL=\"SELECT * FROM sqlite_master WHERE type = 'view' and name='%s';\";\n+    private static  String  VIEW_DDL_SQL=\"SELECT * FROM sqlite_master WHERE type = 'view' and name='%s';\";\n     @Override\n     public Table view(Connection connection, String databaseName, String schemaName, String viewName) {\n         Table view = new Table();\n@@ -35,8 +35,8 @@ public Table view(Connection connection, String databaseName, String schemaName,\n         return view;\n     }\n \n-    public static final String TRIGGER_LIST_SQL = \"SELECT * FROM sqlite_master WHERE type = 'trigger';\";\n-    public static  String TRIGGER_DDL_SQL = \"SELECT * FROM sqlite_master WHERE type = 'trigger' and name='%s';\";\n+    private static final String TRIGGER_LIST_SQL = \"SELECT * FROM sqlite_master WHERE type = 'trigger';\";\n+    private static  String TRIGGER_DDL_SQL = \"SELECT * FROM sqlite_master WHERE type = 'trigger' and name='%s';\";\n \n     @Override\n     public List<Trigger> triggers(Connection connection, String databaseName, String schemaName) {",
      "parent_sha": "0e48b8b8aa892af1cbde2ad78d7dbaa0c74e1c5c"
    }
  },
  {
    "oid": "9de057f2de428e67c0512031afe9852c4665e7aa",
    "message": "\u79fb\u52a8",
    "date": "2024-05-30T07:22:58Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/9de057f2de428e67c0512031afe9852c4665e7aa",
    "details": {
      "sha": "dd18f28da05ff96823cefd1f39651bb46e8338c2",
      "filename": "chat2db-server/chat2db-plugins/chat2db-mysql/src/main/java/ai/chat2db/plugin/mysql/builder/MysqlSqlBuilder.java",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/9de057f2de428e67c0512031afe9852c4665e7aa/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fbuilder%2FMysqlSqlBuilder.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/9de057f2de428e67c0512031afe9852c4665e7aa/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fbuilder%2FMysqlSqlBuilder.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fbuilder%2FMysqlSqlBuilder.java?ref=9de057f2de428e67c0512031afe9852c4665e7aa",
      "patch": "@@ -104,8 +104,7 @@ public String buildModifyTaleSql(Table oldTable, Table newTable) {\n         }\n \n         // \u5224\u65ad\u79fb\u52a8\u7684\u5b57\u6bb5\n-        List<TableColumn> moveColumnList = new ArrayList<>();\n-        moveColumnList = movedElements(oldTable.getColumnList(), newTable.getColumnList());\n+        List<TableColumn> moveColumnList = movedElements(oldTable.getColumnList(), newTable.getColumnList());\n \n         // append modify column\n         for (TableColumn tableColumn : newTable.getColumnList()) {",
      "parent_sha": "ae42249dc6cc5e4071568d1d72c30ae0e411303a"
    }
  },
  {
    "oid": "1d110521fa53b41efcd57977bce543df67b98220",
    "message": "model config update",
    "date": "2023-11-15T02:02:42Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/1d110521fa53b41efcd57977bce543df67b98220",
    "details": {
      "sha": "a687d459610cb94f550b882bee78bc0d0ea4df0d",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/ai/chat2db/client/Chat2dbAIClient.java",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/1d110521fa53b41efcd57977bce543df67b98220/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2Fchat2db%2Fclient%2FChat2dbAIClient.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/1d110521fa53b41efcd57977bce543df67b98220/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2Fchat2db%2Fclient%2FChat2dbAIClient.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2Fchat2db%2Fclient%2FChat2dbAIClient.java?ref=1d110521fa53b41efcd57977bce543df67b98220",
      "patch": "@@ -74,7 +74,10 @@ public static void refresh() {\n             apikey = ApplicationContextUtil.getProperty(CHAT2DB_OPENAI_KEY);\n         }\n         Config modelConfig = configService.find(CHAT2DB_OPENAI_MODEL).getData();\n-        String model = modelConfig.getContent();\n+        String model = \"\";\n+        if (modelConfig != null) {\n+            model = modelConfig.getContent();\n+        }\n         log.info(\"refresh chat2db apikey:{}\", maskApiKey(apikey));\n         CHAT2DB_AI_STREAM_CLIENT = Chat2DBAIStreamClient.builder().apiHost(apiHost)\n                 .apiKey(apikey).model(model).build();",
      "parent_sha": "594190f594965440abe1ef275d9d631601d847d7"
    }
  },
  {
    "oid": "28b1b7d695d2af5e9b105e7ef73be2190822d20a",
    "message": "Modify the mybatis directory",
    "date": "2023-07-30T08:03:48Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/28b1b7d695d2af5e9b105e7ef73be2190822d20a",
    "details": {
      "sha": "7afe4ef2a4931ba3e7a4eab39849933b0b0e0edb",
      "filename": "chat2db-server/chat2db-server-start/src/test/java/ai/chat2db/server/start/test/mybatis/MybatisGeneratorTest.java",
      "status": "modified",
      "additions": 6,
      "deletions": 7,
      "changes": 13,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/28b1b7d695d2af5e9b105e7ef73be2190822d20a/chat2db-server%2Fchat2db-server-start%2Fsrc%2Ftest%2Fjava%2Fai%2Fchat2db%2Fserver%2Fstart%2Ftest%2Fmybatis%2FMybatisGeneratorTest.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/28b1b7d695d2af5e9b105e7ef73be2190822d20a/chat2db-server%2Fchat2db-server-start%2Fsrc%2Ftest%2Fjava%2Fai%2Fchat2db%2Fserver%2Fstart%2Ftest%2Fmybatis%2FMybatisGeneratorTest.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-start%2Fsrc%2Ftest%2Fjava%2Fai%2Fchat2db%2Fserver%2Fstart%2Ftest%2Fmybatis%2FMybatisGeneratorTest.java?ref=28b1b7d695d2af5e9b105e7ef73be2190822d20a",
      "patch": "@@ -4,17 +4,16 @@\n import java.util.List;\n import java.util.Map;\n \n-import jakarta.annotation.Resource;\n import javax.sql.DataSource;\n \n import ai.chat2db.server.start.test.common.BaseTest;\n-\n import com.baomidou.mybatisplus.generator.FastAutoGenerator;\n import com.baomidou.mybatisplus.generator.config.DataSourceConfig;\n import com.baomidou.mybatisplus.generator.config.OutputFile;\n import com.baomidou.mybatisplus.generator.config.converts.MySqlTypeConvert;\n import com.baomidou.mybatisplus.generator.engine.FreemarkerTemplateEngine;\n import com.google.common.collect.Lists;\n+import jakarta.annotation.Resource;\n import lombok.extern.slf4j.Slf4j;\n import org.junit.jupiter.api.Test;\n \n@@ -38,13 +37,13 @@ public void coreGenerator() {\n \n     private void doGenerator(List<String> tableList) {\n \n-        // \u5f53\u524d\u9879\u76ee\u5730\u5740 \u62ff\u5230\u7684\u662fali-dbhub-server-start\u5730\u5740\n+        // \u5f53\u524d\u9879\u76ee\u5730\u5740 \u62ff\u5230\u7684\u662fchat2db-server-start\u5730\u5740\n         String outputDir = System.getProperty(\"user.dir\")\n-            + \"/../ali-dbhub-server-domain/ali-dbhub-server-domain-repository/src/main\"\n+            + \"/../chat2db-server-domain/chat2db-server-domain-repository/src/main\"\n             + \"/java\";\n         String xmlDir = System.getProperty(\"user.dir\")\n-            + \"/../ali-dbhub-server-domain/ali-dbhub-server-domain-repository/src/main\"\n-            + \"/resources/com/alibaba/dbhub/server/domain/repository\";\n+            + \"/../chat2db-server-domain/chat2db-server-domain-repository/src/main\"\n+            + \"/resources/ai/chat2db/server/domain/repository\";\n \n         // \u4e0d\u8981\u751f\u6210service controller\n         Map<OutputFile, String> pathInfo = new HashMap<>();\n@@ -59,7 +58,7 @@ private void doGenerator(List<String> tableList) {\n             //\u5168\u5c40\u914d\u7f6e\n             .globalConfig(builder -> {\n                 // \u8bbe\u7f6e\u4f5c\u8005\n-                builder.author(\"ali-dbhub\")\n+                builder.author(\"chat2db\")\n                     //\u6267\u884c\u5b8c\u6bd5\u4e0d\u6253\u5f00\u6587\u4ef6\u5939\n                     .disableOpenDir()\n                     // \u6307\u5b9a\u8f93\u51fa\u76ee\u5f55",
      "parent_sha": "58fc59807099d357f93177ce4a9126d3bf04a60a"
    }
  },
  {
    "oid": "ca2b24fc55c5ea98dbee3ae4f0523191952e809c",
    "message": "support oracle table edit",
    "date": "2023-10-01T14:47:24Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/ca2b24fc55c5ea98dbee3ae4f0523191952e809c",
    "details": {
      "sha": "3d69d221fb11b0d00de6d7aafc3c6f3a78d7ac77",
      "filename": "chat2db-server/chat2db-plugins/chat2db-oracle/src/main/java/ai/chat2db/plugin/oracle/type/OracleIndexTypeEnum.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/ca2b24fc55c5ea98dbee3ae4f0523191952e809c/chat2db-server%2Fchat2db-plugins%2Fchat2db-oracle%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Foracle%2Ftype%2FOracleIndexTypeEnum.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/ca2b24fc55c5ea98dbee3ae4f0523191952e809c/chat2db-server%2Fchat2db-plugins%2Fchat2db-oracle%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Foracle%2Ftype%2FOracleIndexTypeEnum.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-oracle%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Foracle%2Ftype%2FOracleIndexTypeEnum.java?ref=ca2b24fc55c5ea98dbee3ae4f0523191952e809c",
      "patch": "@@ -77,7 +77,7 @@ private String buildIndexColumn(TableIndex tableIndex) {\n     }\n \n     private String buildIndexName(TableIndex tableIndex) {\n-        return \"\\\"\" + tableIndex.getSchemaName() + \"\\\"\" + \"\\\"\" + tableIndex.getName() + \"\\\"\";\n+        return \"\\\"\" + tableIndex.getSchemaName() + \"\\\".\" + \"\\\"\" + tableIndex.getName() + \"\\\"\";\n     }\n \n     public String buildModifyIndex(TableIndex tableIndex) {",
      "parent_sha": "73a10f12f8bbbcec7a31a29494510684472d50fb"
    }
  },
  {
    "oid": "81dc73c374f1bf93ada8ef9a94213699b66b723e",
    "message": "fix clickhouse select table",
    "date": "2024-04-15T12:47:02Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/81dc73c374f1bf93ada8ef9a94213699b66b723e",
    "details": {
      "sha": "ad91c1cf34106c666213708317983f0b39d04763",
      "filename": "chat2db-server/chat2db-plugins/chat2db-clickhouse/src/main/java/ai/chat2db/plugin/clickhouse/ClickHouseMetaData.java",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/81dc73c374f1bf93ada8ef9a94213699b66b723e/chat2db-server%2Fchat2db-plugins%2Fchat2db-clickhouse%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fclickhouse%2FClickHouseMetaData.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/81dc73c374f1bf93ada8ef9a94213699b66b723e/chat2db-server%2Fchat2db-plugins%2Fchat2db-clickhouse%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fclickhouse%2FClickHouseMetaData.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-clickhouse%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fclickhouse%2FClickHouseMetaData.java?ref=81dc73c374f1bf93ada8ef9a94213699b66b723e",
      "patch": "@@ -298,7 +298,11 @@ public TableMeta getTableMeta(String databaseName, String schemaName, String tab\n \n     @Override\n     public String getMetaDataName(String... names) {\n-        return Arrays.stream(names).filter(name -> StringUtils.isNotBlank(name)).map(name -> \"`\" + name + \"`\").collect(Collectors.joining(\".\"));\n+        return Arrays.stream(names)\n+                .skip(1) // \u8df3\u8fc7\u7b2c\u4e00\u4e2a\u540d\u79f0\n+                .filter(StringUtils::isNotBlank)\n+                .map(name -> \"`\" + name + \"`\")\n+                .collect(Collectors.joining(\".\"));\n     }\n \n ",
      "parent_sha": "a53d60d41acbe8e7bc71323c2f888afbfd4c4ca7"
    }
  },
  {
    "oid": "420d18536092ea163c0b015b5bdfa827b8eb1738",
    "message": "\u4fee\u590d\u6253\u6210jar\u5305\u540e\uff0c\u590d\u5236\u6a21\u677f\u5931\u8d25\u7684bug",
    "date": "2023-10-18T06:04:17Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/420d18536092ea163c0b015b5bdfa827b8eb1738",
    "details": {
      "sha": "0d2d4882a557435ee93e17bf270c2a044d383b73",
      "filename": "chat2db-server/chat2db-server-tools/chat2db-server-tools-common/src/main/java/ai/chat2db/server/tools/common/util/ConfigUtils.java",
      "status": "modified",
      "additions": 34,
      "deletions": 21,
      "changes": 55,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/420d18536092ea163c0b015b5bdfa827b8eb1738/chat2db-server%2Fchat2db-server-tools%2Fchat2db-server-tools-common%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Ftools%2Fcommon%2Futil%2FConfigUtils.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/420d18536092ea163c0b015b5bdfa827b8eb1738/chat2db-server%2Fchat2db-server-tools%2Fchat2db-server-tools-common%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Ftools%2Fcommon%2Futil%2FConfigUtils.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-tools%2Fchat2db-server-tools-common%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Ftools%2Fcommon%2Futil%2FConfigUtils.java?ref=420d18536092ea163c0b015b5bdfa827b8eb1738",
      "patch": "@@ -6,10 +6,13 @@\n import com.alibaba.fastjson2.JSON;\n import lombok.extern.slf4j.Slf4j;\n import org.apache.commons.lang3.StringUtils;\n-import org.springframework.core.io.ClassPathResource;\n import org.springframework.util.DigestUtils;\n \n import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n \n@@ -28,6 +31,10 @@ public class ConfigUtils {\n     public static File versionFile = null;\n     public static File configFile;\n     private static ConfigJson config = null;\n+    /**\n+     * \u6a21\u677f\u6587\u4ef6\n+     **/\n+    public static final List<String> TEMPLATE_FILE = Arrays.asList(\"template.html\", \"template_diy.docx\", \"sub_template_diy.docx\");\n \n     static {\n         String environment = StringUtils.defaultString(System.getProperty(\"spring.profiles.active\"), \"dev\");\n@@ -96,29 +103,35 @@ private static String getAppPath() {\n     }\n \n     public static void copyTemplateFile() {\n-        try {\n-            ClassPathResource resourceFolder = new ClassPathResource(\"template\");\n-            // \u590d\u5236\u6587\u4ef6\u5939\u5230\u76ee\u6807\u8def\u5f84\n-            if (!getMD5(resourceFolder.getFile().getPath()).equals(getMD5(GlobalDict.templateDir))) {\n-                File targetFolder = new File(CONFIG_BASE_PATH);\n-                FileUtil.copy(resourceFolder.getFile(), targetFolder, true);\n-            }\n-        } catch (Exception e) {\n-            log.error(\"copy error\", e);\n+        String templateDir = CONFIG_BASE_PATH + File.separator + \"template\";\n+        File file = new File(templateDir);\n+        if (!file.exists()) {\n+            file.mkdir();\n+        }\n+        for (String template : TEMPLATE_FILE) {\n+            saveFile(templateDir, template, true);\n         }\n     }\n \n-    public static String getMD5(String folderPath) {\n-        File folder = new File(folderPath);\n-        List<File> files = FileUtil.loopFiles(folder);\n-        // \u5bf9\u6587\u4ef6\u5217\u8868\u8fdb\u884c\u6392\u5e8f\n-        Collections.sort(files);\n-        // \u62fc\u63a5\u6587\u4ef6\u5185\u5bb9\n-        StringBuilder stringBuilder = new StringBuilder();\n-        for (File file : files) {\n-            stringBuilder.append(FileUtil.readUtf8String(file));\n+    public static void saveFile(String dir, String path, boolean isOverride) {\n+        if (!isOverride) {\n+            File file = new File(dir + File.separator + path);\n+            if (file.exists()) {\n+                return;\n+            }\n+        }\n+        try (// \u6a21\u677f\u6587\u4ef6\u8f93\u5165\u8f93\u51fa\u5730\u5740 \u8bfb\u53d6resources\u4e0b\u6587\u4ef6\n+             FileOutputStream outputStream = new FileOutputStream(dir + File.separator + path);\n+             //\u8fd4\u56de\u8bfb\u53d6\u6307\u5b9a\u8d44\u6e90\u7684\u8f93\u5165\u6d41\n+             InputStream inputStream = ConfigUtils.class.getClassLoader().getResourceAsStream(\"template\" + File.separator + path)) {\n+            byte[] buffer = new byte[4096];\n+            int n = 0;\n+            while (-1 != (n = inputStream.read(buffer))) {\n+                outputStream.write(buffer, 0, n);\n+            }\n+            outputStream.flush();\n+        } catch (Exception e) {\n+            log.error(\"getAppPath error\", e);\n         }\n-        // \u8ba1\u7b97 MD5 \u503c\n-        return DigestUtils.md5DigestAsHex(stringBuilder.toString().getBytes());\n     }\n }",
      "parent_sha": "0eac10c0a012df26e068b06bc4e97ae26a438d32"
    }
  },
  {
    "oid": "f2fe1c3b675f4f43b7dc4286b8cf63959d920c7c",
    "message": "support table edit",
    "date": "2023-09-28T09:29:33Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/f2fe1c3b675f4f43b7dc4286b8cf63959d920c7c",
    "details": {
      "sha": "154a1938632e9eec63710feb74b499a16a5a0259",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/rdb/RdbDmlController.java",
      "status": "modified",
      "additions": 7,
      "deletions": 4,
      "changes": 11,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/f2fe1c3b675f4f43b7dc4286b8cf63959d920c7c/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Frdb%2FRdbDmlController.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/f2fe1c3b675f4f43b7dc4286b8cf63959d920c7c/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Frdb%2FRdbDmlController.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Frdb%2FRdbDmlController.java?ref=f2fe1c3b675f4f43b7dc4286b8cf63959d920c7c",
      "patch": "@@ -61,29 +61,32 @@ public ListResult<ExecuteResultVO> manage(@RequestBody DmlRequest request) {\n      * @return\n      */\n     @RequestMapping(value = \"/execute_ddl\", method = {RequestMethod.POST, RequestMethod.PUT})\n-    public DataResult<Long> executeDDL(@RequestBody DmlRequest request) {\n+    public DataResult<ExecuteResultVO> executeDDL(@RequestBody DmlRequest request) {\n         DlExecuteParam param = rdbWebConverter.request2param(request);\n         Connection connection = Chat2DBContext.getConnection();\n         if (connection != null) {\n             try {\n                 boolean flag = true;\n-                String message = \"\";\n+                ExecuteResultVO executeResult = null;\n                 connection.setAutoCommit(false);\n                 ListResult<ExecuteResult> resultDTOListResult = dlTemplateService.execute(param);\n                 List<ExecuteResultVO> resultVOS = rdbWebConverter.dto2vo(resultDTOListResult.getData());\n                 if (!CollectionUtils.isEmpty(resultVOS)) {\n                     for (ExecuteResultVO resultVO : resultVOS) {\n                         if (!resultVO.getSuccess()) {\n                             flag = false;\n+                            executeResult = resultVO;\n+                            break;\n+\n                         }\n                     }\n                 }\n                 if (flag) {\n                     connection.commit();\n-                    return DataResult.of(1L);\n+                    return DataResult.of(resultVOS.get(0));\n                 }else {\n                     connection.rollback();\n-                    return DataResult.error(\"sql error\",message);\n+                    return DataResult.of(executeResult);\n                 }\n             } catch (Exception e) {\n                 throw new RuntimeException(e);",
      "parent_sha": "486b741d518549a0000da03984badd387a74432d"
    }
  },
  {
    "oid": "150d1399a6069684f4e535752b13a501bdca69df",
    "message": "Support for custom drivers",
    "date": "2023-06-23T07:54:53Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/150d1399a6069684f4e535752b13a501bdca69df",
    "details": {
      "sha": "246031c8f7cc6366ad3e5827253c2852205ac057",
      "filename": "chat2db-server/chat2db-spi/src/main/java/ai/chat2db/spi/sql/Chat2DBContext.java",
      "status": "modified",
      "additions": 12,
      "deletions": 6,
      "changes": 18,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/150d1399a6069684f4e535752b13a501bdca69df/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fsql%2FChat2DBContext.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/150d1399a6069684f4e535752b13a501bdca69df/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fsql%2FChat2DBContext.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fsql%2FChat2DBContext.java?ref=150d1399a6069684f4e535752b13a501bdca69df",
      "patch": "@@ -46,7 +46,7 @@ public class Chat2DBContext {\n         }\n     }\n \n-    public static DriverConfig getDefaultDriverConfig(String dbType){\n+    public static DriverConfig getDefaultDriverConfig(String dbType) {\n         return PLUGIN_MAP.get(dbType).getDBConfig().getDefaultDriverConfig();\n     }\n \n@@ -63,7 +63,7 @@ public static MetaData getMetaData() {\n         return PLUGIN_MAP.get(getConnectInfo().getDbType()).getMetaData();\n     }\n \n-    public static DBConfig getDBConfig(){\n+    public static DBConfig getDBConfig() {\n         return PLUGIN_MAP.get(getConnectInfo().getDbType()).getDBConfig();\n     }\n \n@@ -103,9 +103,15 @@ private static void setConnectInfoThreadLocal(ConnectInfo connectInfo) {\n             if (session != null) {\n                 url = url.replace(host, \"127.0.0.1\").replace(port, ssh.getLocalPort());\n             }\n+            DriverConfig config = connectInfo.getDriverConfig();\n+            if (config == null) {\n+                config = getDefaultDriverConfig(connectInfo.getDbType());\n+                connectInfo.setDriverConfig(config);\n+            }\n+\n             connection = getConnect(url, host, port, connectInfo.getUser(),\n-                connectInfo.getPassword(), connectInfo.getDbType(),\n-                connectInfo.getDriverConfig(), ssh, connectInfo.getExtendMap());\n+                    connectInfo.getPassword(), connectInfo.getDbType(),\n+                    connectInfo.getDriverConfig(), ssh, connectInfo.getExtendMap());\n         } catch (Exception e1) {\n             log.error(\"getConnect error\", e1);\n             if (connection != null) {\n@@ -139,8 +145,8 @@ private static void setConnectInfoThreadLocal(ConnectInfo connectInfo) {\n      * @return\n      */\n     private static Connection getConnect(String url, String host, String port,\n-        String userName, String password, String dbType,\n-        DriverConfig jdbc, SSHInfo ssh, Map<String, Object> properties) throws SQLException {\n+                                         String userName, String password, String dbType,\n+                                         DriverConfig jdbc, SSHInfo ssh, Map<String, Object> properties) throws SQLException {\n         // \u521b\u5efa\u8fde\u63a5\n         return IDriverManager.getConnection(url, userName, password, jdbc, properties);\n ",
      "parent_sha": "63d002df55e2786e3c4d205f8c54bb8f38382730"
    }
  },
  {
    "oid": "de9c187a689eca2f13df2859ef5bbd229f93e757",
    "message": "Optimize code",
    "date": "2024-06-03T15:40:12Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/de9c187a689eca2f13df2859ef5bbd229f93e757",
    "details": {
      "sha": "b53d35afef2d1d13e6398404c393d2831ac7efa7",
      "filename": "chat2db-server/chat2db-plugins/chat2db-mysql/src/main/java/ai/chat2db/plugin/mysql/value/factory/MysqlValueProcessorFactory.java",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/de9c187a689eca2f13df2859ef5bbd229f93e757/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fvalue%2Ffactory%2FMysqlValueProcessorFactory.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/de9c187a689eca2f13df2859ef5bbd229f93e757/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fvalue%2Ffactory%2FMysqlValueProcessorFactory.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fvalue%2Ffactory%2FMysqlValueProcessorFactory.java?ref=de9c187a689eca2f13df2859ef5bbd229f93e757",
      "patch": "@@ -2,7 +2,6 @@\n \n import ai.chat2db.plugin.mysql.type.MysqlColumnTypeEnum;\n import ai.chat2db.plugin.mysql.value.sub.*;\n-import ai.chat2db.plugin.mysql.value.template.sub.*;\n import ai.chat2db.spi.jdbc.DefaultValueProcessor;\n \n import java.util.Map;\n@@ -47,6 +46,6 @@ public class MysqlValueProcessorFactory {\n \n     public static DefaultValueProcessor getValueProcessor(String type) {\n         DefaultValueProcessor processor = PROCESSOR_MAP.get(type);\n-        return processor==null?new DefaultValueProcessor():processor;\n+        return processor == null ? new DefaultValueProcessor() : processor;\n     }\n }",
      "parent_sha": "e32fce497982df1ea13f0adfd984db046b15022a"
    }
  },
  {
    "oid": "db8d56a15ed83e0a0ab2d79e64d7915d58e9e739",
    "message": "Example Modify the verification prompt",
    "date": "2023-06-23T07:00:49Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/db8d56a15ed83e0a0ab2d79e64d7915d58e9e739",
    "details": {
      "sha": "a66c5a504448d435f6405ba43501cacb030f680f",
      "filename": "chat2db-server/chat2db-server-start/src/main/java/ai/chat2db/server/start/exception/convertor/ExceptionConvertorUtils.java",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/db8d56a15ed83e0a0ab2d79e64d7915d58e9e739/chat2db-server%2Fchat2db-server-start%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fstart%2Fexception%2Fconvertor%2FExceptionConvertorUtils.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/db8d56a15ed83e0a0ab2d79e64d7915d58e9e739/chat2db-server%2Fchat2db-server-start%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fstart%2Fexception%2Fconvertor%2FExceptionConvertorUtils.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-start%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fstart%2Fexception%2Fconvertor%2FExceptionConvertorUtils.java?ref=db8d56a15ed83e0a0ab2d79e64d7915d58e9e739",
      "patch": "@@ -3,10 +3,10 @@\n import java.util.List;\n \n import ai.chat2db.server.tools.base.constant.SymbolConstant;\n-\n import ai.chat2db.server.tools.common.util.I18nUtils;\n import org.springframework.util.CollectionUtils;\n import org.springframework.validation.BindingResult;\n+import org.springframework.validation.FieldError;\n import org.springframework.validation.ObjectError;\n \n /**\n@@ -35,6 +35,10 @@ public static String buildMessage(BindingResult result) {\n             msg.append(index++);\n             // \u5f97\u5230\u9519\u8bef\u6d88\u606f\n             msg.append(SymbolConstant.DOT);\n+            if (e instanceof FieldError fieldError) {\n+                msg.append(fieldError.getField());\n+                msg.append(\" : \");\n+            }\n             msg.append(e.getDefaultMessage());\n             msg.append(SymbolConstant.SEMICOLON);\n         }",
      "parent_sha": "50d6253ce7a96bd522c4299da77322ea24a66b54"
    }
  },
  {
    "oid": "ea5a7e89fff22a6f7cae69cf8f9df6b9bc2c7afb",
    "message": "refactor(OracleDBManage): fix get tableDDL",
    "date": "2024-07-09T06:35:13Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/ea5a7e89fff22a6f7cae69cf8f9df6b9bc2c7afb",
    "details": {
      "sha": "e2407ae128114de82344a9c4efea4a91e76d0ba6",
      "filename": "chat2db-server/chat2db-plugins/chat2db-oracle/src/main/java/ai/chat2db/plugin/oracle/OracleDBManage.java",
      "status": "modified",
      "additions": 20,
      "deletions": 25,
      "changes": 45,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/ea5a7e89fff22a6f7cae69cf8f9df6b9bc2c7afb/chat2db-server%2Fchat2db-plugins%2Fchat2db-oracle%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Foracle%2FOracleDBManage.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/ea5a7e89fff22a6f7cae69cf8f9df6b9bc2c7afb/chat2db-server%2Fchat2db-plugins%2Fchat2db-oracle%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Foracle%2FOracleDBManage.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-oracle%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Foracle%2FOracleDBManage.java?ref=ea5a7e89fff22a6f7cae69cf8f9df6b9bc2c7afb",
      "patch": "@@ -12,26 +12,23 @@\n \n import java.sql.Connection;\n import java.sql.ResultSet;\n-import java.sql.ResultSetMetaData;\n import java.sql.SQLException;\n-import java.util.Objects;\n \n @Slf4j\n public class OracleDBManage extends DefaultDBManage implements DBManage {\n-    private static String TABLE_DDL_SQL = \"SELECT DBMS_METADATA.GET_DDL('TABLE', table_name)  as ddl FROM all_tables WHERE owner = '%s' AND table_name = '%s'\";\n     private static String TABLE_COMMENT_SQL = \"SELECT 'COMMENT ON TABLE ' || table_name || ' IS ''' || comments || ''';' AS table_comment_ddl FROM user_tab_comments WHERE table_name = '%s'\";\n     private static String TABLE_COLUMN_COMMENT_SQL = \"SELECT 'COMMENT ON COLUMN ' || table_name || '.' || column_name || ' IS ''' || comments || ''';' AS column_comment_ddl \" +\n             \"FROM user_col_comments \" +\n             \"WHERE table_name = '%s' \" +\n             \"AND comments IS NOT NULL\";\n     private static String VIEW_DDL_SQL = \"SELECT DBMS_METADATA.GET_DDL('VIEW', view_name) as ddl FROM all_views WHERE owner = '%s' AND view_name = '%s'\";\n-    private String PROCEDURE_LIST_DDL =\"SELECT object_name FROM all_procedures where OWNER = '%s' and OBJECT_TYPE='PROCEDURE'\";\n+    private String PROCEDURE_LIST_DDL = \"SELECT object_name FROM all_procedures where OWNER = '%s' and OBJECT_TYPE='PROCEDURE'\";\n     private static String PROCEDURE_DDL_SQL = \"SELECT DBMS_METADATA.GET_DDL('PROCEDURE', object_name) as ddl FROM all_procedures WHERE owner = '%s' AND object_name = '%s'\";\n     private static String TRIGGER_DDL_SQL = \"SELECT DBMS_METADATA.GET_DDL('TRIGGER', trigger_name) AS ddl FROM all_triggers WHERE owner = '%s' AND trigger_name = '%s'\";\n     private static String FUNCTION_DDL_SQL = \"SELECT DBMS_METADATA.GET_DDL('FUNCTION', object_name) as ddl  FROM all_procedures WHERE owner = '%s' AND object_name = '%s'\";\n \n-    public void exportDatabase(Connection connection, String databaseName, String schemaName,AsyncContext asyncContext) throws SQLException {\n-        exportTables(connection,databaseName, schemaName, asyncContext);\n+    public void exportDatabase(Connection connection, String databaseName, String schemaName, AsyncContext asyncContext) throws SQLException {\n+        exportTables(connection, databaseName, schemaName, asyncContext);\n         exportViews(connection, asyncContext, schemaName);\n         exportProcedures(connection, schemaName, asyncContext);\n         exportTriggers(connection, schemaName, asyncContext);\n@@ -42,27 +39,25 @@ private void exportTables(Connection connection, String databaseName, String sch\n         try (ResultSet resultSet = connection.getMetaData().getTables(null, schemaName, null, new String[]{\"TABLE\", \"SYSTEM TABLE\"})) {\n             while (resultSet.next()) {\n                 String tableName = resultSet.getString(\"TABLE_NAME\");\n-                exportTable(connection,databaseName, schemaName, tableName, asyncContext);\n+                exportTable(connection, databaseName, schemaName, tableName, asyncContext);\n             }\n         }\n     }\n \n \n     public void exportTable(Connection connection, String databaseName, String schemaName, String tableName, AsyncContext asyncContext) throws SQLException {\n-        String sql = String.format(TABLE_DDL_SQL, schemaName, tableName);\n-        try (ResultSet resultSet = connection.createStatement().executeQuery(sql)) {\n-            if (resultSet.next()) {\n-                StringBuilder sqlBuilder = new StringBuilder();\n-                sqlBuilder.append(\"DROP TABLE \").append(schemaName).append(\".\").append(tableName).append(\";\")\n-                        .append(resultSet.getString(\"ddl\")).append(\";\").append(\"\\n\");\n-                asyncContext.write(sqlBuilder.toString());\n-            }\n-            exportTableComments(connection, tableName, asyncContext);\n-            exportTableColumnsComments(connection, tableName, asyncContext);\n-            if (asyncContext.isContainsData()) {\n-                exportTableData(connection,databaseName,schemaName, tableName, asyncContext);\n-            }\n+        String tableDDL = Chat2DBContext.getMetaData().tableDDL(connection, databaseName, schemaName, tableName);\n+        StringBuilder sqlBuilder = new StringBuilder();\n+        sqlBuilder.append(\"DROP TABLE \").append(schemaName).append(\".\").append(tableName).append(\";\")\n+                .append(tableDDL).append(\";\").append(\"\\n\");\n+        asyncContext.write(sqlBuilder.toString());\n+\n+        exportTableComments(connection, tableName, asyncContext);\n+        exportTableColumnsComments(connection, tableName, asyncContext);\n+        if (asyncContext.isContainsData()) {\n+            exportTableData(connection, databaseName, schemaName, tableName, asyncContext);\n         }\n+\n     }\n \n     private void exportTableComments(Connection connection, String tableName, AsyncContext asyncContext) throws SQLException {\n@@ -108,8 +103,8 @@ private void exportView(Connection connection, AsyncContext asyncContext, String\n     }\n \n     private void exportProcedures(Connection connection, String schemaName, AsyncContext asyncContext) throws SQLException {\n-        String sql = String.format(PROCEDURE_LIST_DDL,schemaName);\n-        try (ResultSet resultSet = connection.createStatement().executeQuery(sql))  {\n+        String sql = String.format(PROCEDURE_LIST_DDL, schemaName);\n+        try (ResultSet resultSet = connection.createStatement().executeQuery(sql)) {\n             while (resultSet.next()) {\n                 String procedureName = resultSet.getString(\"object_name\");\n                 exportProcedure(connection, schemaName, procedureName, asyncContext);\n@@ -185,11 +180,11 @@ public void connectDatabase(Connection connection, String database) {\n     }\n \n     @Override\n-    public void copyTable(Connection connection, String databaseName, String schemaName, String tableName, String newTableName,boolean copyData) throws SQLException {\n+    public void copyTable(Connection connection, String databaseName, String schemaName, String tableName, String newTableName, boolean copyData) throws SQLException {\n         String sql = \"\";\n-        if(copyData){\n+        if (copyData) {\n             sql = \"CREATE TABLE \" + newTableName + \" AS SELECT * FROM \" + tableName;\n-        }else {\n+        } else {\n             sql = \"CREATE TABLE \" + newTableName + \" AS SELECT * FROM \" + tableName + \" WHERE 1=0\";\n         }\n         SQLExecutor.getInstance().execute(connection, sql, resultSet -> null);",
      "parent_sha": "0f23e12e50770ef1ab1d6015948ed29371315ee8"
    }
  },
  {
    "oid": "7118c205e7292a25f4af274202f7be58053fb3d3",
    "message": "update README.md",
    "date": "2023-07-02T13:15:41Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/7118c205e7292a25f4af274202f7be58053fb3d3",
    "details": {
      "sha": "6bd1464a966b2d472e7610acad794d07e3a46f36",
      "filename": "chat2db-server/chat2db-spi/src/main/java/ai/chat2db/spi/sql/Chat2DBContext.java",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/7118c205e7292a25f4af274202f7be58053fb3d3/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fsql%2FChat2DBContext.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/7118c205e7292a25f4af274202f7be58053fb3d3/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fsql%2FChat2DBContext.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fsql%2FChat2DBContext.java?ref=7118c205e7292a25f4af274202f7be58053fb3d3",
      "patch": "@@ -126,9 +126,13 @@ private static void setConnectInfoThreadLocal(ConnectInfo connectInfo) {\n             if (session != null) {\n                 try {\n                     session.delPortForwardingL(Integer.parseInt(ssh.getLocalPort()));\n-                    session.disconnect();\n                 } catch (JSchException e) {\n-                    log.error(\"session close error\", e);\n+                    log.error(\"session delPortForwardingL error\", e);\n+                }\n+                try {\n+                    session.disconnect();\n+                } catch (Exception e) {\n+                    log.error(\"session disconnect error\", e);\n                 }\n             }\n             throw new RuntimeException(\"getConnect error\", e1);",
      "parent_sha": "17b2ef19d91e849eec27ef909985759ed4084161"
    }
  },
  {
    "oid": "d32d95429b6e39378d4c37bf734ad82252218d61",
    "message": "fix-dm-DCE",
    "date": "2024-03-21T11:11:25Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/d32d95429b6e39378d4c37bf734ad82252218d61",
    "details": {
      "sha": "fa6ed48a32dc1961d2ace43369d8eb3458539642",
      "filename": "chat2db-server/chat2db-plugins/chat2db-dm/src/main/java/ai/chat2db/plugin/dm/type/DMColumnTypeEnum.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/d32d95429b6e39378d4c37bf734ad82252218d61/chat2db-server%2Fchat2db-plugins%2Fchat2db-dm%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fdm%2Ftype%2FDMColumnTypeEnum.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/d32d95429b6e39378d4c37bf734ad82252218d61/chat2db-server%2Fchat2db-plugins%2Fchat2db-dm%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fdm%2Ftype%2FDMColumnTypeEnum.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-dm%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fdm%2Ftype%2FDMColumnTypeEnum.java?ref=d32d95429b6e39378d4c37bf734ad82252218d61",
      "patch": "@@ -41,6 +41,7 @@ public enum DMColumnTypeEnum implements ColumnBuilder {\n     DATE(\"DATE\", false, false, true, false, false, false, true, true, false, false),\n \n     DECIMAL(\"DECIMAL\", true, true, true, false, false, false, true, true, false, false),\n+    DEC(\"DEC\", true, true, true, false, false, false, true, true, false, false),\n \n     DOUBLE(\"DOUBLE\", false, false, true, false, false, false, true, true, false, false),\n \n@@ -220,7 +221,7 @@ private String buildDataType(TableColumn column, DMColumnTypeEnum type) {\n             return script.toString();\n         }\n \n-        if (Arrays.asList(DECIMAL, FLOAT, NUMBER, TIMESTAMP, NUMBERIC).contains(type)) {\n+        if (Arrays.asList(DECIMAL,DEC, FLOAT, NUMBER, TIMESTAMP, NUMBERIC).contains(type)) {\n             StringBuilder script = new StringBuilder();\n             script.append(columnType);\n             if (column.getColumnSize() != null && column.getDecimalDigits() == null) {",
      "parent_sha": "c96490a4268364dd778b2b7a923b00858d108b14"
    }
  },
  {
    "oid": "5248af1a30a2873772441486f621adcc077c0553",
    "message": "support like query table",
    "date": "2023-10-22T14:40:34Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/5248af1a30a2873772441486f621adcc077c0553",
    "details": {
      "sha": "412a07e2a429fee2aeff8052f0b77345b4b3eea3",
      "filename": "chat2db-server/chat2db-server-domain/chat2db-server-domain-core/src/main/java/ai/chat2db/server/domain/core/impl/TableServiceImpl.java",
      "status": "modified",
      "additions": 13,
      "deletions": 13,
      "changes": 26,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/5248af1a30a2873772441486f621adcc077c0553/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-core%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fcore%2Fimpl%2FTableServiceImpl.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/5248af1a30a2873772441486f621adcc077c0553/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-core%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fcore%2Fimpl%2FTableServiceImpl.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-core%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fcore%2Fimpl%2FTableServiceImpl.java?ref=5248af1a30a2873772441486f621adcc077c0553",
      "patch": "@@ -180,21 +180,21 @@ public PageResult<Table> pageQuery(TablePageQueryParam param, TableSelector sele\n             }\n             total = versionDO.getTableCount();\n         }\n-        LambdaQueryWrapper<TableCacheDO> query = new LambdaQueryWrapper<>();\n-        query.eq(TableCacheDO::getVersion, version);\n-        query.eq(TableCacheDO::getDataSourceId, param.getDataSourceId());\n-        if (StringUtils.isNotBlank(param.getDatabaseName())) {\n-            query.eq(TableCacheDO::getDatabaseName, param.getDatabaseName());\n-        }\n-        if (StringUtils.isNotBlank(param.getSchemaName())) {\n-            query.eq(TableCacheDO::getSchemaName, param.getSchemaName());\n-        }\n-        if (StringUtils.isNotBlank(param.getSearchKey())) {\n-            query.like(TableCacheDO::getTableName, param.getSearchKey());\n-        }\n+//        LambdaQueryWrapper<TableCacheDO> query = new LambdaQueryWrapper<>();\n+//        query.eq(TableCacheDO::getVersion, version);\n+//        query.eq(TableCacheDO::getDataSourceId, param.getDataSourceId());\n+//        if (StringUtils.isNotBlank(param.getDatabaseName())) {\n+//            query.eq(TableCacheDO::getDatabaseName, param.getDatabaseName());\n+//        }\n+//        if (StringUtils.isNotBlank(param.getSchemaName())) {\n+//            query.eq(TableCacheDO::getSchemaName, param.getSchemaName());\n+//        }\n+//        if (StringUtils.isNotBlank(param.getSearchKey())) {\n+//            query.like(TableCacheDO::getTableName, param.getSearchKey());\n+//        }\n         Page<TableCacheDO> page = new Page<>(param.getPageNo(), param.getPageSize());\n         // page.setSearchCount(param.getEnableReturnCount());\n-        IPage<TableCacheDO> iPage = tableCacheMapper.selectPage(page, query);\n+        IPage<TableCacheDO> iPage = tableCacheMapper.pageQuery(page, param.getDataSourceId(),param.getDatabaseName(),param.getSchemaName(),param.getSearchKey());\n         List<Table> tables = new ArrayList<>();\n         if (CollectionUtils.isNotEmpty(iPage.getRecords())) {\n             for (TableCacheDO tableCacheDO : iPage.getRecords()) {",
      "parent_sha": "cecf152c0498d4d12f17e113612dbfc12b96a05c"
    }
  },
  {
    "oid": "8b47d1fb1538012b653285e6d9be29208a96d958",
    "message": "update sql error",
    "date": "2024-06-11T05:01:02Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/8b47d1fb1538012b653285e6d9be29208a96d958",
    "details": {
      "sha": "2924c4c1dd65b8705f64d2c746696fdff80c9bd8",
      "filename": "chat2db-server/chat2db-plugins/chat2db-sqlserver/src/main/java/ai/chat2db/plugin/sqlserver/SqlServerMetaData.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/8b47d1fb1538012b653285e6d9be29208a96d958/chat2db-server%2Fchat2db-plugins%2Fchat2db-sqlserver%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fsqlserver%2FSqlServerMetaData.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/8b47d1fb1538012b653285e6d9be29208a96d958/chat2db-server%2Fchat2db-plugins%2Fchat2db-sqlserver%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fsqlserver%2FSqlServerMetaData.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-sqlserver%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fsqlserver%2FSqlServerMetaData.java?ref=8b47d1fb1538012b653285e6d9be29208a96d958",
      "patch": "@@ -91,7 +91,7 @@ public String tableDDL(Connection connection, String databaseName, String schema\n         });\n     }\n \n-    private static String SELECT_TABLES_SQL = \"SELECT t.name AS TableName, mm.value as comment FROM sys.tables t LEFT JOIN(SELECT * from sys.extended_properties ep where ep.minor_id = 0 AND ep.name = 'MS_Description') mm ON t.object_id = mm.major_id WHERE t.schema_id= SCHEMA_ID('%S')\";\n+    private static String SELECT_TABLES_SQL = \"SELECT t.name AS TableName, mm.value as comment FROM sys.tables t LEFT JOIN(SELECT * from sys.extended_properties ep where ep.minor_id = 0 AND ep.name = 'MS_Description') mm ON t.object_id = mm.major_id WHERE t.schema_id= SCHEMA_ID('%s')\";\n \n     @Override\n     public List<Table> tables(Connection connection, String databaseName, String schemaName, String tableName) {\n@@ -412,4 +412,5 @@ public List<String> getSystemDatabases() {\n     public List<String> getSystemSchemas() {\n         return systemSchemas;\n     }\n+\n }",
      "parent_sha": "8eb1cf66c221ce5e85ef4275dc9b76d4c829a997"
    }
  },
  {
    "oid": "c32bcab50541d9940e1fe64dd879c4549a360ff8",
    "message": "#785 Fix same constraint name in same schema",
    "date": "2023-11-09T11:42:31Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/c32bcab50541d9940e1fe64dd879c4549a360ff8",
    "details": {
      "sha": "0938f3484aebe4e64e0add3b95eedc8121da45fd",
      "filename": "chat2db-server/chat2db-plugins/chat2db-postgresql/src/main/java/ai/chat2db/plugin/postgresql/consts/SQLConst.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/c32bcab50541d9940e1fe64dd879c4549a360ff8/chat2db-server%2Fchat2db-plugins%2Fchat2db-postgresql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fpostgresql%2Fconsts%2FSQLConst.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/c32bcab50541d9940e1fe64dd879c4549a360ff8/chat2db-server%2Fchat2db-plugins%2Fchat2db-postgresql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fpostgresql%2Fconsts%2FSQLConst.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-postgresql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fpostgresql%2Fconsts%2FSQLConst.java?ref=c32bcab50541d9940e1fe64dd879c4549a360ff8",
      "patch": "@@ -42,7 +42,7 @@ public class SQLConst {\n             + \"        -- \u7ea6\u675f\\n\"\n             + \"        tableScript:= tableScript || chr(13)||chr(10) || array_to_string(\\n\"\n             + \"        array(\\n\"\n-            + \"        select concat(' CONSTRAINT ',conname ,c ,u,p,f) from (\\n\"\n+            + \"        select concat(' CONSTRAINT ', conname || '_' || tablename ,c ,u,p,f) from (\\n\"\n             + \"        select conname,\\n\"\n             + \"        case when contype='c' then ' CHECK('|| ( select findattname(namespace,tablename,'c') ) ||')' \"\n             + \"end \"\n@@ -109,13 +109,13 @@ public class SQLConst {\n             + \"        -- COMMENT COMMENT ON COLUMN sys_activity.id IS '\u4e3b\u952e';\\n\"\n             + \"        tableScript:= tableScript || chr(13)||chr(10) || chr(13)||chr(10) || array_to_string(\\n\"\n             + \"        array(\\n\"\n-            + \"        SELECT 'COMMENT ON COLUMN ' || tablename || '.' || a.attname ||' IS '|| ''''|| d.description \"\n+            + \"        SELECT 'COMMENT ON COLUMN ' || 'namespace.tablename' || '.' || a.attname ||' IS '|| ''''|| d.description \"\n             + \"||''''\\n\"\n             + \"        FROM pg_class c\\n\"\n             + \"        JOIN pg_description d ON c.oid=d.objoid\\n\"\n             + \"        JOIN pg_attribute a ON c.oid = a.attrelid\\n\"\n             + \"        WHERE c.relname=tablename\\n\"\n-            + \"        AND a.attnum = d.objsubid),','|| chr(13)||chr(10)) ;\\n\"\n+            + \"        AND a.attnum = d.objsubid),';'|| chr(13)||chr(10)) ;\\n\"\n             + \"\\n\"\n             + \"        return tableScript;\\n\"\n             + \"\\n\"",
      "parent_sha": "732b4f54d46c3be0b097ca0e7d57fcf7d957a0c5"
    }
  },
  {
    "oid": "50636792a72f6f62618231e54e9912e486c2299b",
    "message": "Value processor remove base",
    "date": "2024-07-08T13:18:39Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/50636792a72f6f62618231e54e9912e486c2299b",
    "details": {
      "sha": "87648959f5fd96ac1763cb28aa264b71122b7739",
      "filename": "chat2db-server/chat2db-spi/src/main/java/ai/chat2db/spi/jdbc/DefaultDBManage.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/50636792a72f6f62618231e54e9912e486c2299b/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fjdbc%2FDefaultDBManage.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/50636792a72f6f62618231e54e9912e486c2299b/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fjdbc%2FDefaultDBManage.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fjdbc%2FDefaultDBManage.java?ref=50636792a72f6f62618231e54e9912e486c2299b",
      "patch": "@@ -222,7 +222,7 @@ public void exportTableData(Connection connection, String databaseName, String s\n                     String valueString = valueProcessor.getJdbcValueString(jdbcDataValue);\n                     valueList.add(valueString);\n                 }\n-                String insertSql = sqlBuilder.buildSingleInsertSql(databaseName, schemaName, tableName, columnList, valueList);\n+                String insertSql = sqlBuilder.buildSingleInsertSql(null, null, tableName, columnList, valueList);\n                 asyncContext.write(insertSql);\n                 valueList.clear();\n             }",
      "parent_sha": "5370cea7f1671c2c56f0c07da65643f8b0c530a9"
    }
  },
  {
    "oid": "055eac77eed9e5b8d47b2cf002961844daad024d",
    "message": "ai prompt",
    "date": "2023-07-02T11:25:12Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/055eac77eed9e5b8d47b2cf002961844daad024d",
    "details": {
      "sha": "b0d910a1102baa1e4c0513c0b0d29862106a6c39",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/ai/ChatController.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/055eac77eed9e5b8d47b2cf002961844daad024d/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FChatController.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/055eac77eed9e5b8d47b2cf002961844daad024d/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FChatController.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FChatController.java?ref=055eac77eed9e5b8d47b2cf002961844daad024d",
      "patch": "@@ -518,9 +518,9 @@ private String buildPrompt(ChatQueryRequest queryRequest) {\n             default:\n                 break;\n         }\n-        if (I18nUtils.isEn()) {\n-            schemaProperty = String.format(\"%s\\n#\\n### \u8fd4\u56de\u7ed3\u679c\u8981\u6c42\u4e3a\u82f1\u6587\", schemaProperty);\n-        }\n+        //if (I18nUtils.isEn()) {\n+        //    schemaProperty = String.format(\"%s\\n#\\n### \u8fd4\u56de\u7ed3\u679c\u8981\u6c42\u4e3a\u82f1\u6587\", schemaProperty);\n+        //}\n         return schemaProperty;\n     }\n }",
      "parent_sha": "edda15322c38bc72a2d9a61774f085ff2c3830a6"
    }
  },
  {
    "oid": "b6f344d5466eadd833b3fccca7f64c52d8f80783",
    "message": "\u65e5\u5fd7",
    "date": "2023-10-18T06:10:35Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/b6f344d5466eadd833b3fccca7f64c52d8f80783",
    "details": {
      "sha": "ac0780ce8ff67fbae26348dd96ae23038ec45018",
      "filename": "chat2db-server/chat2db-server-tools/chat2db-server-tools-common/src/main/java/ai/chat2db/server/tools/common/util/ConfigUtils.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/b6f344d5466eadd833b3fccca7f64c52d8f80783/chat2db-server%2Fchat2db-server-tools%2Fchat2db-server-tools-common%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Ftools%2Fcommon%2Futil%2FConfigUtils.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/b6f344d5466eadd833b3fccca7f64c52d8f80783/chat2db-server%2Fchat2db-server-tools%2Fchat2db-server-tools-common%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Ftools%2Fcommon%2Futil%2FConfigUtils.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-tools%2Fchat2db-server-tools-common%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Ftools%2Fcommon%2Futil%2FConfigUtils.java?ref=b6f344d5466eadd833b3fccca7f64c52d8f80783",
      "patch": "@@ -127,7 +127,7 @@ public static void saveFile(String dir, String path, boolean isOverride) {\n             }\n             outputStream.flush();\n         } catch (Exception e) {\n-            log.error(\"getAppPath error\", e);\n+            log.error(\"saveFile error\", e);\n         }\n     }\n }",
      "parent_sha": "e9b80fce01b9a72c515c2341579b4a9cace3eb9a"
    }
  },
  {
    "oid": "821713499aca0d9c6739eb6bc01f9a1dc9f10b2f",
    "message": "rest ai fix",
    "date": "2023-09-06T12:09:39Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/821713499aca0d9c6739eb6bc01f9a1dc9f10b2f",
    "details": {
      "sha": "657c458f3cb1ac56045062f0d0d3d894928e1dbb",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/ai/listener/RestAIEventSourceListener.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/821713499aca0d9c6739eb6bc01f9a1dc9f10b2f/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2Flistener%2FRestAIEventSourceListener.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/821713499aca0d9c6739eb6bc01f9a1dc9f10b2f/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2Flistener%2FRestAIEventSourceListener.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2Flistener%2FRestAIEventSourceListener.java?ref=821713499aca0d9c6739eb6bc01f9a1dc9f10b2f",
      "patch": "@@ -54,7 +54,7 @@ public void onEvent(EventSource eventSource, String id, String type, String data\n         }\n         Message message = new Message();\n         if (StringUtils.isNotBlank(data)) {\n-            message.setContent(data);\n+            message.setContent(data.replace(\"\\\"\", \"\"));\n             sseEmitter.send(SseEmitter.event()\n                 .id(id)\n                 .data(message)",
      "parent_sha": "883c0db84357795f4e337118a5e52bd3521f91e5"
    }
  },
  {
    "oid": "5426dee4eec8a61702e9014c0fbeaa5b58bc2148",
    "message": "Modify abnormal output",
    "date": "2023-07-29T11:52:20Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/5426dee4eec8a61702e9014c0fbeaa5b58bc2148",
    "details": {
      "sha": "dc3c20a7a39b41430d6c438431cacb0968768059",
      "filename": "chat2db-server/chat2db-spi/src/main/java/ai/chat2db/spi/util/ExceptionUtils.java",
      "status": "modified",
      "additions": 8,
      "deletions": 10,
      "changes": 18,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/5426dee4eec8a61702e9014c0fbeaa5b58bc2148/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Futil%2FExceptionUtils.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/5426dee4eec8a61702e9014c0fbeaa5b58bc2148/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Futil%2FExceptionUtils.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Futil%2FExceptionUtils.java?ref=5426dee4eec8a61702e9014c0fbeaa5b58bc2148",
      "patch": "@@ -3,9 +3,12 @@\n import java.io.PrintWriter;\n import java.io.StringWriter;\n \n+import lombok.extern.slf4j.Slf4j;\n+\n /**\n  * exception utils\n  */\n+@Slf4j\n public class ExceptionUtils {\n \n     /**\n@@ -15,17 +18,12 @@ public class ExceptionUtils {\n      * @return\n      */\n     public static String getErrorInfoFromException(Throwable throwable) {\n-        String errorDetail = \"\";\n-        try {\n-            StringWriter sw = new StringWriter();\n-            PrintWriter pw = new PrintWriter(sw);\n-            throwable.printStackTrace(pw);\n-            errorDetail = \" \\r\\n \" + sw.toString() + \" \\r\\n \";\n-            sw.close();\n-            pw.close();\n-        } catch (Exception e2) {\n+        try (StringWriter stringWriter = new StringWriter(); PrintWriter printWriter = new PrintWriter(stringWriter)) {\n+            throwable.printStackTrace(printWriter);\n+            return stringWriter.toString();\n+        } catch (Exception e) {\n+            log.error(\"ErrorInfoFromException\", e);\n             return \"ErrorInfoFromException\";\n         }\n-        return errorDetail;\n     }\n }",
      "parent_sha": "949f593428d54afc07c682489361ca76f404dcd8"
    }
  },
  {
    "oid": "de6fa3cb584c570a67492314a24c11e9e94f0893",
    "message": "Update DatabaseServiceImpl.java",
    "date": "2023-07-17T10:00:53Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/de6fa3cb584c570a67492314a24c11e9e94f0893",
    "details": {
      "sha": "79ca9552b94d51fcd9f080ac3086b6571adb5218",
      "filename": "chat2db-server/chat2db-server-domain/chat2db-server-domain-core/src/main/java/ai/chat2db/server/domain/core/impl/DatabaseServiceImpl.java",
      "status": "modified",
      "additions": 20,
      "deletions": 19,
      "changes": 39,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/de6fa3cb584c570a67492314a24c11e9e94f0893/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-core%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fcore%2Fimpl%2FDatabaseServiceImpl.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/de6fa3cb584c570a67492314a24c11e9e94f0893/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-core%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fcore%2Fimpl%2FDatabaseServiceImpl.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-core%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fcore%2Fimpl%2FDatabaseServiceImpl.java?ref=de6fa3cb584c570a67492314a24c11e9e94f0893",
      "patch": "@@ -13,10 +13,12 @@\n import ai.chat2db.server.tools.base.wrapper.result.ActionResult;\n import ai.chat2db.server.tools.base.wrapper.result.DataResult;\n import ai.chat2db.server.tools.base.wrapper.result.ListResult;\n+import ai.chat2db.spi.MetaData;\n import ai.chat2db.spi.model.Database;\n import ai.chat2db.spi.model.MetaSchema;\n import ai.chat2db.spi.model.Schema;\n import ai.chat2db.spi.sql.Chat2DBContext;\n+import ai.chat2db.spi.sql.ConnectInfo;\n import cn.hutool.core.thread.ThreadUtil;\n import lombok.extern.slf4j.Slf4j;\n import org.springframework.stereotype.Service;\n@@ -45,32 +47,31 @@ public ListResult<Schema> querySchema(SchemaQueryParam param) {\n \n     @Override\n     public DataResult<MetaSchema> queryDatabaseSchema(MetaDataQueryParam param) {\n+        MetaSchema metaSchema = new MetaSchema();\n+        MetaData metaData = Chat2DBContext.getMetaData();\n+        ConnectInfo connectInfo = Chat2DBContext.getConnectInfo();\n         MetaSchema ms = CacheManage.get(getDataSourceKey(param.getDataSourceId()), MetaSchema.class,\n             (key) -> param.isRefresh(), (key) -> {\n-                MetaSchema metaSchema = new MetaSchema();\n-                List<Database> databases = Chat2DBContext.getMetaData().databases();\n+                List<Database> databases = metaData.databases();\n                 if (!CollectionUtils.isEmpty(databases)) {\n-\n-                    CountDownLatch countDownLatch = ThreadUtil.newCountDownLatch(databases.size());\n+                    // CountDownLatch countDownLatch = ThreadUtil.newCountDownLatch(databases.size());\n                     for (Database database : databases) {\n-                        ThreadUtil.execute(() -> {\n-                            try {\n-                                List<Schema> schemaList = Chat2DBContext.getMetaData().schemas(database.getName());\n-                                database.setSchemas(schemaList);\n-                                countDownLatch.countDown();\n-                            } catch (Exception e) {\n-                                log.error(\"queryDatabaseSchema error\", e);\n-                            }\n-                        });\n-                    }\n-                    try {\n-                        countDownLatch.await();\n-                    } catch (InterruptedException e) {\n-                        log.error(\"queryDatabaseSchema error\", e);\n+                        //ThreadUtil.execute(() -> {\n+                        try {\n+                           // Chat2DBContext.putContext(connectInfo);\n+                            database.setSchemas(metaData.schemas(database.getName()));\n+                            // countDownLatch.countDown();\n+                        } catch (Exception e) {\n+                            log.error(\"queryDatabaseSchema error\", e);\n+                        } finally {\n+                            //Chat2DBContext.removeContext();\n+                        }\n+                        // });\n                     }\n+                    metaSchema.setDatabases(databases);\n \n                 } else {\n-                    List<Schema> schemas = Chat2DBContext.getMetaData().schemas(null);\n+                    List<Schema> schemas = metaData.schemas(null);\n                     metaSchema.setSchemas(schemas);\n                 }\n                 return metaSchema;",
      "parent_sha": "62c4fb1bf565f99c887697098a6d7a56eea6a7bd"
    }
  },
  {
    "oid": "b75920cafc3c19d31148fd57410bbe6593e63f4d",
    "message": "dbeaver\u5bfc\u5165\u5b9e\u73b0",
    "date": "2023-09-26T04:38:32Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/b75920cafc3c19d31148fd57410bbe6593e63f4d",
    "details": {
      "sha": "66dd041636611c904b01cd3c6221f39ead93ea8d",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/ncx/service/impl/ConverterServiceImpl.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/b75920cafc3c19d31148fd57410bbe6593e63f4d/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fncx%2Fservice%2Fimpl%2FConverterServiceImpl.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/b75920cafc3c19d31148fd57410bbe6593e63f4d/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fncx%2Fservice%2Fimpl%2FConverterServiceImpl.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fncx%2Fservice%2Fimpl%2FConverterServiceImpl.java?ref=b75920cafc3c19d31148fd57410bbe6593e63f4d",
      "patch": "@@ -233,7 +233,7 @@ public UploadVO dbpUploadFile(File file) {\n         //\u5220\u9664\u4e34\u65f6\u6587\u4ef6\n         FileUtils.delete(file);\n         //\u5220\u9664\u5bfc\u5165dbeaver\u65f6\uff0cdbp\u4ea7\u751f\u7684\u4e34\u65f6\u914d\u7f6e\u6587\u4ef6\n-        //projects.forEach(v -> FileUtils.delete(new File(ConfigUtils.CONFIG_BASE_PATH + File.separator + v)));\n+        projects.forEach(v -> FileUtils.delete(new File(ConfigUtils.CONFIG_BASE_PATH + File.separator + v)));\n         return vo;\n     }\n ",
      "parent_sha": "44b95ceef3871414a18ecac368054befb54d560f"
    }
  },
  {
    "oid": "174a93df4e98081aab0c835e8493bb3a8fc88cd4",
    "message": "ai update",
    "date": "2023-07-08T12:05:00Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/174a93df4e98081aab0c835e8493bb3a8fc88cd4",
    "details": {
      "sha": "249e404315038afe584ac071cf4249bc2424a620",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/ai/ChatController.java",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/174a93df4e98081aab0c835e8493bb3a8fc88cd4/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FChatController.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/174a93df4e98081aab0c835e8493bb3a8fc88cd4/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FChatController.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FChatController.java?ref=174a93df4e98081aab0c835e8493bb3a8fc88cd4",
      "patch": "@@ -505,10 +505,11 @@ private String buildPrompt(ChatQueryRequest queryRequest) {\n             : queryRequest.getPromptType();\n         PromptType pType = EasyEnumUtils.getEnum(PromptType.class, promptType);\n         String ext = StringUtils.isNotBlank(queryRequest.getExt()) ? queryRequest.getExt() : \"\";\n+        String result = \"\u5047\u8bbe\u4f60\u662f\u4e2aSQL\u7f16\u8f91\u5668\uff0c\u63a5\u4e0b\u6765\u4f60\u8fd4\u56de\u7684SQL\u4ee3\u7801\u8981\u548c\u5176\u4ed6\u5185\u5bb9\u5206\u9694\uff0c\u975eSQL\u4ee3\u7801\u5185\u5bb9\u7684\u6bcf\u4e00\u884c\u524d\u9762\u8ffd\u52a0-- \\n\";\n         String schemaProperty = CollectionUtils.isNotEmpty(tableSchemas) ? String.format(\n-            \"### \u8bf7\u6839\u636e\u4ee5\u4e0btable properties\u548cSQL input%s. %s\\n#\\n### %s SQL tables, with their properties:\\n#\\n# \"\n-                + \"%s\\n#\\n#\\n### SQL input: %s\", pType.getDescription(), ext, dataSourceType,\n-            properties, prompt) : String.format(\"### \u8bf7\u6839\u636e\u4ee5\u4e0bSQL input%s. %s\\n#\\n### SQL input: %s\",\n+            \"%s### \u8bf7\u6839\u636e\u4ee5\u4e0btable properties\u548cSQL input%s. %s\\n#\\n### %s SQL tables, with their properties:\\n#\\n# \"\n+                + \"%s\\n#\\n#\\n### SQL input: %s\", result, pType.getDescription(), ext, dataSourceType,\n+            properties, prompt) : String.format(\"%s### \u8bf7\u6839\u636e\u4ee5\u4e0bSQL input%s. %s\\n#\\n### SQL input: %s\", result,\n             pType.getDescription(), ext, prompt);\n         switch (pType) {\n             case SQL_2_SQL:\n@@ -521,7 +522,6 @@ private String buildPrompt(ChatQueryRequest queryRequest) {\n         //if (I18nUtils.isEn()) {\n         //    schemaProperty = String.format(\"%s\\n#\\n### \u8fd4\u56de\u7ed3\u679c\u8981\u6c42\u4e3a\u82f1\u6587\", schemaProperty);\n         //}\n-        String result = String.format(\"%s. \\n\u8981\u6c42\u8fd4\u56deMarkdown\u683c\u5f0f\", schemaProperty);\n-        return result;\n+        return schemaProperty;\n     }\n }",
      "parent_sha": "1fa46d3418dd12711eb7dc2bfc423549e0ea3ddf"
    }
  },
  {
    "oid": "59717e513be7aea9187913cd20d31156d2658b2a",
    "message": "Optimize startup speed",
    "date": "2023-07-30T03:02:18Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/59717e513be7aea9187913cd20d31156d2658b2a",
    "details": {
      "sha": "8fdb1cc152663765f4bcb8abb510177380acf441",
      "filename": "chat2db-server/chat2db-server-start/src/main/java/ai/chat2db/server/start/config/listener/ManageApplicationListener.java",
      "status": "modified",
      "additions": 4,
      "deletions": 8,
      "changes": 12,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/59717e513be7aea9187913cd20d31156d2658b2a/chat2db-server%2Fchat2db-server-start%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fstart%2Fconfig%2Flistener%2FManageApplicationListener.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/59717e513be7aea9187913cd20d31156d2658b2a/chat2db-server%2Fchat2db-server-start%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fstart%2Fconfig%2Flistener%2FManageApplicationListener.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-start%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fstart%2Fconfig%2Flistener%2FManageApplicationListener.java?ref=59717e513be7aea9187913cd20d31156d2658b2a",
      "patch": "@@ -1,13 +1,11 @@\n package ai.chat2db.server.start.config.listener;\n \n-import java.time.Duration;\n-\n import com.alibaba.fastjson2.JSON;\n+import com.alibaba.fastjson2.TypeReference;\n \n import ai.chat2db.server.tools.base.enums.SystemEnvironmentEnum;\n import ai.chat2db.server.tools.base.wrapper.result.DataResult;\n-import com.dtflys.forest.Forest;\n-import com.dtflys.forest.utils.TypeReference;\n+import cn.hutool.http.HttpUtil;\n import lombok.extern.slf4j.Slf4j;\n import org.apache.commons.lang3.BooleanUtils;\n import org.apache.commons.lang3.StringUtils;\n@@ -35,10 +33,8 @@ public void onApplicationEvent(ApplicationEnvironmentPreparedEvent event) {\n         // \u5c1d\u8bd5\u8bbf\u95ee\u786e\u8ba4\u5e94\u7528\u662f\u5426\u5df2\u7ecf\u542f\u52a8\n         DataResult<String> dataResult;\n         try {\n-            dataResult = Forest.get(\"http://127.0.0.1:\" + serverPort + \"/api/system/get-version-a\")\n-                .connectTimeout(Duration.ofMillis(50))\n-                .readTimeout(Duration.ofMillis(100))\n-                .execute(new TypeReference<>() {});\n+            String body = HttpUtil.get(\"http://127.0.0.1:\" + serverPort + \"/api/system/get-version-a\", 10);\n+            dataResult = JSON.parseObject(body, new TypeReference<>() {});\n         } catch (Exception e) {\n             // \u629b\u51fa\u5f02\u5e38 \u4ee3\u8868\u6ca1\u6709\u65e7\u7684\u542f\u52a8 \u6216\u8005\u65e7\u7684\u4e0d\u9760\u8c31\n             log.info(\"\u5c1d\u8bd5\u8bbf\u95ee\u65e7\u7684\u5e94\u7528\u5931\u8d25\u3002\u672c\u5f02\u5e38\u4e0d\u91cd\u8981\uff0c\u6b63\u5e38\u542f\u52a8\u542f\u52a8\u90fd\u4f1a\u8f93\u51fa\uff0c\u8bf7\u5ffd\u7565\u3002\" + e.getMessage());",
      "parent_sha": "e18074b56b72bb06ffad2e307e0ec06764144581"
    }
  },
  {
    "oid": "04dfc62b94ba118784f6070726734ad3fe19298d",
    "message": "Split to obtain HTTP interface",
    "date": "2023-07-10T12:28:19Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/04dfc62b94ba118784f6070726734ad3fe19298d",
    "details": {
      "sha": "ec2f1f81c53aead51e23ea4621907fa3a52d6671",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/http/GatewayClientService.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/04dfc62b94ba118784f6070726734ad3fe19298d/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fhttp%2FGatewayClientService.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/04dfc62b94ba118784f6070726734ad3fe19298d/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fhttp%2FGatewayClientService.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fhttp%2FGatewayClientService.java?ref=04dfc62b94ba118784f6070726734ad3fe19298d",
      "patch": "@@ -23,7 +23,7 @@ public interface GatewayClientService {\n      *\n      * @return\n      */\n-    @Get(\"/api/client/getLoginQrCode\")\n+    @Get(\"/api/client/loginQrCode\")\n     DataResult<QrCodeResponse> getLoginQrCode();\n \n     /**\n@@ -32,7 +32,7 @@ public interface GatewayClientService {\n      * @param token\n      * @return\n      */\n-    @Get(\"/api/client/getLoginStatus\")\n+    @Get(\"/api/client/loginStatus\")\n     DataResult<QrCodeResponse> getLoginStatus(@Query(\"token\") String token);\n \n     /**\n@@ -51,7 +51,7 @@ public interface GatewayClientService {\n      * @param apiKey\n      * @return\n      */\n-    @Get(\"/api/client/getInviteQrCode\")\n+    @Get(\"/api/client/inviteQrCode\")\n     DataResult<InviteQrCodeResponse> getInviteQrCode(@Query(\"apiKey\") String apiKey);\n \n }",
      "parent_sha": "34f9d58038dad29e81dee32931312e642d489ce1"
    }
  },
  {
    "oid": "a17f69cf25fcdb387af0d9bda9b0e417f3a878a0",
    "message": "empty list for routes and triggers",
    "date": "2024-10-24T06:21:05Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/a17f69cf25fcdb387af0d9bda9b0e417f3a878a0",
    "details": {
      "sha": "a56b3dbcbef1602eff16f36547e283f59dfef307",
      "filename": "chat2db-server/chat2db-plugins/chat2db-timeplus/src/main/java/ai/chat2db/plugin/timeplus/TimeplusMetaData.java",
      "status": "modified",
      "additions": 7,
      "deletions": 27,
      "changes": 34,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/a17f69cf25fcdb387af0d9bda9b0e417f3a878a0/chat2db-server%2Fchat2db-plugins%2Fchat2db-timeplus%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Ftimeplus%2FTimeplusMetaData.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/a17f69cf25fcdb387af0d9bda9b0e417f3a878a0/chat2db-server%2Fchat2db-plugins%2Fchat2db-timeplus%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Ftimeplus%2FTimeplusMetaData.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-timeplus%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Ftimeplus%2FTimeplusMetaData.java?ref=a17f69cf25fcdb387af0d9bda9b0e417f3a878a0",
      "patch": "@@ -24,15 +24,9 @@\n \n public class TimeplusMetaData extends DefaultMetaService implements MetaData {\n \n-    private static String ROUTINES_SQL =\n-        \"SELECT SPECIFIC_NAME, ROUTINE_COMMENT, ROUTINE_DEFINITION FROM information_schema.routines WHERE \" +\n-        \"routine_type = '%s' AND ROUTINE_SCHEMA ='%s'  AND \" +\n-        \"routine_name = '%s';\";\n-    private static String TRIGGER_SQL =\n-        \"SELECT TRIGGER_NAME,EVENT_MANIPULATION, ACTION_STATEMENT  FROM INFORMATION_SCHEMA.TRIGGERS where \" +\n-        \"TRIGGER_SCHEMA = '%s' AND TRIGGER_NAME = '%s';\";\n-    private static String TRIGGER_SQL_LIST =\n-        \"SELECT TRIGGER_NAME FROM INFORMATION_SCHEMA.TRIGGERS where TRIGGER_SCHEMA = '%s';\";\n+    private static String ROUTINES_SQL = \"\";\n+    private static String TRIGGER_SQL = \"\";\n+    private static String TRIGGER_SQL_LIST = \"\";\n     private static String SELECT_TABLE_COLUMNS =\n         \"select * from `system`.columns where table ='%s' and database='%s';\";\n     private static String VIEW_SQL =\n@@ -42,7 +36,7 @@ public class TimeplusMetaData extends DefaultMetaService implements MetaData {\n         \"system\"\n     );\n     public static final String FUNCTION_SQL =\n-        \"SELECT name,create_query as ddl from system.functions where origin='SQLUserDefined'\";\n+        \"SELECT name,create_query as ddl from system.functions where origin='ExecutableUserDefined'\";\n \n     public static String format(String tableName) {\n         return \"`\" + tableName + \"`\";\n@@ -98,14 +92,11 @@ public String tableDDL(\n         @NotEmpty String tableName\n     ) {\n         String sql =\n-            \"SHOW CREATE STREAM \" +\n-            format(schemaName) +\n-            \".\" +\n-            format(tableName);\n+            \"SHOW CREATE \" + format(schemaName) + \".\" + format(tableName);\n         return SQLExecutor.getInstance()\n             .execute(connection, sql, resultSet -> {\n                 if (resultSet.next()) {\n-                    return resultSet.getString(\"Create STREAM\");\n+                    return resultSet.getString(\"statement\");\n                 }\n                 return null;\n             });\n@@ -140,18 +131,7 @@ public List<Trigger> triggers(\n         String schemaName\n     ) {\n         List<Trigger> triggers = new ArrayList<>();\n-        String sql = String.format(TRIGGER_SQL_LIST, schemaName);\n-        return SQLExecutor.getInstance()\n-            .execute(connection, sql, resultSet -> {\n-                while (resultSet.next()) {\n-                    Trigger trigger = new Trigger();\n-                    trigger.setTriggerName(resultSet.getString(\"TRIGGER_NAME\"));\n-                    trigger.setSchemaName(schemaName);\n-                    trigger.setDatabaseName(databaseName);\n-                    triggers.add(trigger);\n-                }\n-                return triggers;\n-            });\n+        return triggers;\n     }\n \n     @Override",
      "parent_sha": "e3d99311385febd9b7dab756d0d47b454ab4235d"
    }
  },
  {
    "oid": "7ae40ab34a867f1008f7c74b2858d6920c8db888",
    "message": "Revert \"Fix the new bug brought by #974: field attributes cannot be added normally.\"\n\nThis reverts commit c994acf88b73259a6bbd44eab0a5ec5f5e7aa608.",
    "date": "2024-02-04T04:25:48Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/7ae40ab34a867f1008f7c74b2858d6920c8db888",
    "details": {
      "sha": "457c61672ee3d2b38f38024a5fde3bdd6f62e36e",
      "filename": "chat2db-server/chat2db-plugins/chat2db-mysql/src/main/java/ai/chat2db/plugin/mysql/builder/MysqlSqlBuilder.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/7ae40ab34a867f1008f7c74b2858d6920c8db888/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fbuilder%2FMysqlSqlBuilder.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/7ae40ab34a867f1008f7c74b2858d6920c8db888/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fbuilder%2FMysqlSqlBuilder.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fbuilder%2FMysqlSqlBuilder.java?ref=7ae40ab34a867f1008f7c74b2858d6920c8db888",
      "patch": "@@ -155,7 +155,7 @@ public String buildCreateDatabaseSql(Database database) {\n     public String buildGenerateReorderColumnSql(Table oldTable, Table newTable) {\n         StringBuilder sql = new StringBuilder();\n         int n = 0;\n-        for (int i = 0; i < oldTable.getColumnList().size(); i++) {\n+        for (int i = 0; i < newTable.getColumnList().size(); i++) {\n             TableColumn column = newTable.getColumnList().get(i);\n             //String columnName = newTable.getColumnList().get(i).getName();\n             // \u83b7\u53d6oldTable.getColumnList()\u4e2dname\u5c5e\u6027\u7684list",
      "parent_sha": "cc49a85c39d6921b512f4fabf62914dd16ae3893"
    }
  },
  {
    "oid": "33cd368db8ca4d82f0c185b05c147b2a81f2a154",
    "message": "set larger timeout",
    "date": "2023-09-06T11:20:19Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/33cd368db8ca4d82f0c185b05c147b2a81f2a154",
    "details": {
      "sha": "89ceb821bc7e9b233d9ec3fab529863f0aca5390",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/ai/ChatController.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/33cd368db8ca4d82f0c185b05c147b2a81f2a154/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FChatController.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/33cd368db8ca4d82f0c185b05c147b2a81f2a154/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FChatController.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FChatController.java?ref=33cd368db8ca4d82f0c185b05c147b2a81f2a154",
      "patch": "@@ -89,7 +89,7 @@ public class ChatController {\n     /**\n      * chat\u7684\u8d85\u65f6\u65f6\u95f4\n      */\n-    private static final Long CHAT_TIMEOUT = Duration.ofMinutes(10).toMillis();\n+    private static final Long CHAT_TIMEOUT = Duration.ofMinutes(50).toMillis();\n \n     /**\n      * \u63d0\u793a\u8bed\u6700\u5927token\u6570",
      "parent_sha": "47a3f795ac20da0aef3d13ec66ff48c74d109fff"
    }
  },
  {
    "oid": "c61e2e7bcc0318fd103c2e8afaa25a353cc3ae36",
    "message": "ai prompt",
    "date": "2023-07-02T11:02:41Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/c61e2e7bcc0318fd103c2e8afaa25a353cc3ae36",
    "details": {
      "sha": "e47f2153ee45d6bf329b0209d13e91d09d82dbe5",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/ai/ChatController.java",
      "status": "modified",
      "additions": 10,
      "deletions": 2,
      "changes": 12,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/c61e2e7bcc0318fd103c2e8afaa25a353cc3ae36/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FChatController.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/c61e2e7bcc0318fd103c2e8afaa25a353cc3ae36/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FChatController.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FChatController.java?ref=c61e2e7bcc0318fd103c2e8afaa25a353cc3ae36",
      "patch": "@@ -220,7 +220,11 @@ public SseEmitter completions(ChatQueryRequest queryRequest, @RequestHeader Map<\n     private SseEmitter distributeAI(String msg, SseEmitter sseEmitter, String uid) throws IOException {\n         ConfigService configService = ApplicationContextUtil.getBean(ConfigService.class);\n         Config config = configService.find(RestAIClient.AI_SQL_SOURCE).getData();\n-        AiSqlSourceEnum aiSqlSourceEnum = AiSqlSourceEnum.getByName(config.getContent());\n+        String aiSqlSource = AiSqlSourceEnum.CHAT2DBAI.getCode();\n+        if (Objects.nonNull(config)) {\n+            aiSqlSource = config.getContent();\n+        }\n+        AiSqlSourceEnum aiSqlSourceEnum = AiSqlSourceEnum.getByName(aiSqlSource);\n         if (Objects.isNull(aiSqlSourceEnum)) {\n             aiSqlSourceEnum = AiSqlSourceEnum.OPENAI;\n         }\n@@ -242,7 +246,11 @@ private SseEmitter distributeAI(String msg, SseEmitter sseEmitter, String uid) t\n     private SseEmitter distributeAISql(ChatQueryRequest queryRequest, SseEmitter sseEmitter, String uid) throws IOException {\n         ConfigService configService = ApplicationContextUtil.getBean(ConfigService.class);\n         Config config = configService.find(RestAIClient.AI_SQL_SOURCE).getData();\n-        AiSqlSourceEnum aiSqlSourceEnum = AiSqlSourceEnum.getByName(config.getContent());\n+        String aiSqlSource = AiSqlSourceEnum.CHAT2DBAI.getCode();\n+        if (Objects.nonNull(config)) {\n+            aiSqlSource = config.getContent();\n+        }\n+        AiSqlSourceEnum aiSqlSourceEnum = AiSqlSourceEnum.getByName(aiSqlSource);\n         if (Objects.isNull(aiSqlSourceEnum)) {\n             aiSqlSourceEnum = AiSqlSourceEnum.OPENAI;\n         }",
      "parent_sha": "3d8f59b864ebe3624becbee053e7fd27c8389470"
    }
  },
  {
    "oid": "34f9d58038dad29e81dee32931312e642d489ce1",
    "message": "Split to obtain HTTP interface",
    "date": "2023-07-10T12:18:22Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/34f9d58038dad29e81dee32931312e642d489ce1",
    "details": {
      "sha": "7138749324e84a159557d1e23620652a5b45e2a9",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/ai/AiConfigController.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/34f9d58038dad29e81dee32931312e642d489ce1/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FAiConfigController.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/34f9d58038dad29e81dee32931312e642d489ce1/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FAiConfigController.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FAiConfigController.java?ref=34f9d58038dad29e81dee32931312e642d489ce1",
      "patch": "@@ -89,7 +89,7 @@ public DataResult<ApiKeyResponse> remaininguses() {\n     }\n \n     /**\n-     * Return remaining times\n+     * Obtain invitation QR code\n      *\n      * @return\n      */",
      "parent_sha": "ef7ee0c9e36866f6aa722597b2fef8e8d391e457"
    }
  },
  {
    "oid": "2af02c989eb28434c04250f97f72d6007fd2b802",
    "message": "support select result data update",
    "date": "2023-10-11T07:37:11Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/2af02c989eb28434c04250f97f72d6007fd2b802",
    "details": {
      "sha": "1d59afefd333a7df36abe99d828f09c1816639ae",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/rdb/RdbDmlController.java",
      "status": "modified",
      "additions": 4,
      "deletions": 31,
      "changes": 35,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/2af02c989eb28434c04250f97f72d6007fd2b802/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Frdb%2FRdbDmlController.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/2af02c989eb28434c04250f97f72d6007fd2b802/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Frdb%2FRdbDmlController.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Frdb%2FRdbDmlController.java?ref=2af02c989eb28434c04250f97f72d6007fd2b802",
      "patch": "@@ -65,38 +65,11 @@ public ListResult<ExecuteResultVO> manage(@RequestBody DmlRequest request) {\n     @RequestMapping(value = \"/execute_update\", method = {RequestMethod.POST, RequestMethod.PUT})\n     public  DataResult<ExecuteResultVO> executeSelectResultUpdate(@RequestBody DmlRequest request) {\n         DlExecuteParam param = rdbWebConverter.request2param(request);\n-        Connection connection = Chat2DBContext.getConnection();\n-        if (connection != null) {\n-            try {\n-                boolean flag = true;\n-                ExecuteResultVO executeResult = null;\n-                connection.setAutoCommit(false);\n-                ListResult<ExecuteResult> resultDTOListResult = dlTemplateService.execute(param);\n-                List<ExecuteResultVO> resultVOS = rdbWebConverter.dto2vo(resultDTOListResult.getData());\n-                if (!CollectionUtils.isEmpty(resultVOS)) {\n-                    for (ExecuteResultVO resultVO : resultVOS) {\n-                        if (!resultVO.getSuccess()) {\n-                            flag = false;\n-                            executeResult = resultVO;\n-                            break;\n-\n-                        }\n-                    }\n-                }\n-                if (flag) {\n-                    connection.commit();\n-                    return DataResult.of(resultVOS.get(0));\n-                }else {\n-                    connection.rollback();\n-                    return DataResult.of(executeResult);\n-                }\n-            } catch (Exception e) {\n-                throw new RuntimeException(e);\n-            }\n-\n-        } else {\n-            return DataResult.error(\"connection error\", \"\");\n+        DataResult<ExecuteResult>  result = dlTemplateService.executeUpdate(param);\n+        if(!result.success()){\n+            return DataResult.error(result.getErrorCode(),result.getErrorMessage());\n         }\n+       return DataResult.of(rdbWebConverter.dto2vo(result.getData()));\n \n     }\n     @RequestMapping(value = \"/get_update_sql\", method = {RequestMethod.POST, RequestMethod.PUT})",
      "parent_sha": "b78a019c886237c97e8fec852bc08fb184418292"
    }
  },
  {
    "oid": "515b2ee75548bd40143dc9506d5a55270e473b85",
    "message": "azure ai bug fix",
    "date": "2023-07-05T13:41:35Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/515b2ee75548bd40143dc9506d5a55270e473b85",
    "details": {
      "sha": "6e056e95808d0a080e2daa92fc79dcc565f566ab",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/ai/ChatController.java",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/515b2ee75548bd40143dc9506d5a55270e473b85/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FChatController.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/515b2ee75548bd40143dc9506d5a55270e473b85/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FChatController.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FChatController.java?ref=515b2ee75548bd40143dc9506d5a55270e473b85",
      "patch": "@@ -357,13 +357,13 @@ private SseEmitter chatWithAzureAi(ChatQueryRequest queryRequest, SseEmitter sse\n                     prompt.length() / TOKEN_CONVERT_CHAR_LENGTH);\n             throw new ParamBusinessException();\n         }\n-        String messageContext = (String)LocalCache.CACHE.get(uid);\n-        List<ChatMessage> messages = new ArrayList<>();\n-        if (StrUtil.isNotBlank(messageContext)) {\n-            messages = JSONUtil.toList(messageContext, ChatMessage.class);\n+        List<ChatMessage> messages = (List<ChatMessage>)LocalCache.CACHE.get(uid);\n+        if (CollectionUtils.isNotEmpty(messages)) {\n             if (messages.size() >= contextLength) {\n                 messages = messages.subList(1, contextLength);\n             }\n+        } else {\n+            messages = Lists.newArrayList();\n         }\n         ChatMessage currentMessage = new ChatMessage(ChatRole.USER).setContent(prompt);\n         messages.add(currentMessage);\n@@ -387,7 +387,7 @@ private SseEmitter chatWithAzureAi(ChatQueryRequest queryRequest, SseEmitter sse\n         );\n         AzureOpenAIEventSourceListener sourceListener = new AzureOpenAIEventSourceListener(sseEmitter);\n         AzureOpenAIClient.getInstance().streamCompletions(messages, sourceListener);\n-        LocalCache.CACHE.put(uid, JSONUtil.toJsonStr(messages), LocalCache.TIMEOUT);\n+        LocalCache.CACHE.put(uid, messages, LocalCache.TIMEOUT);\n         return sseEmitter;\n     }\n ",
      "parent_sha": "055eac77eed9e5b8d47b2cf002961844daad024d"
    }
  },
  {
    "oid": "adbce0a73a1df363854dde273fb2c792197cc78a",
    "message": "modify parameters",
    "date": "2023-07-09T14:50:31Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/adbce0a73a1df363854dde273fb2c792197cc78a",
    "details": {
      "sha": "0c5c38d50941b820986f1f8af4b4fc199a44192b",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/ai/AiConfigController.java",
      "status": "modified",
      "additions": 8,
      "deletions": 6,
      "changes": 14,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/adbce0a73a1df363854dde273fb2c792197cc78a/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FAiConfigController.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/adbce0a73a1df363854dde273fb2c792197cc78a/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FAiConfigController.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fai%2FAiConfigController.java?ref=adbce0a73a1df363854dde273fb2c792197cc78a",
      "patch": "@@ -1,5 +1,8 @@\n package ai.chat2db.server.web.api.controller.ai;\n \n+import java.util.Objects;\n+\n+import ai.chat2db.server.domain.api.model.Config;\n import ai.chat2db.server.domain.api.param.SystemConfigParam;\n import ai.chat2db.server.domain.api.service.ConfigService;\n import ai.chat2db.server.tools.base.wrapper.result.DataResult;\n@@ -14,7 +17,6 @@\n import org.apache.commons.lang3.StringUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.GetMapping;\n-import org.springframework.web.bind.annotation.PathVariable;\n import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.bind.annotation.RequestParam;\n import org.springframework.web.bind.annotation.RestController;\n@@ -40,7 +42,6 @@ public class AiConfigController {\n     @Resource\n     private Chat2dbProperties chat2dbProperties;\n \n-\n     /**\n      * AI configuration information interface\n      *\n@@ -79,12 +80,13 @@ public DataResult<QrCodeResponse> getLoginStatus(@RequestParam(required = false)\n     /**\n      * Return remaining times\n      *\n-     * @param key\n      * @return\n      */\n-    @GetMapping(\"/remaininguses/{key}\")\n-    public DataResult<ApiKeyResponse> remaininguses(@PathVariable String key) {\n-        return gatewayClientService.remaininguses(key);\n+    @GetMapping(\"/remaininguses\")\n+    public DataResult<ApiKeyResponse> remaininguses() {\n+        DataResult<Config> apiKey = configService.find(OpenAIClient.OPENAI_KEY);\n+        return gatewayClientService.remaininguses(\n+            Objects.nonNull(apiKey.getData()) ? apiKey.getData().getContent() : null);\n     }\n \n }",
      "parent_sha": "4b4d5487336eb635d1736a5d0070d7790e4d460a"
    }
  },
  {
    "oid": "874914d689c8fd2f7254eb7807647425d75bb155",
    "message": "Value processor remove base",
    "date": "2024-07-08T14:02:44Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/874914d689c8fd2f7254eb7807647425d75bb155",
    "details": {
      "sha": "17e8b5eab0ff6b5c4c6e7d10e3d3a1170a07f27a",
      "filename": "chat2db-server/chat2db-spi/src/main/java/ai/chat2db/spi/model/AsyncContext.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/874914d689c8fd2f7254eb7807647425d75bb155/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fmodel%2FAsyncContext.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/874914d689c8fd2f7254eb7807647425d75bb155/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fmodel%2FAsyncContext.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fmodel%2FAsyncContext.java?ref=874914d689c8fd2f7254eb7807647425d75bb155",
      "patch": "@@ -98,8 +98,8 @@ public void setProgress(Integer progress) {\n         if (progress == null) {\n             return;\n         }\n-        if (progress > 100) {\n-            progress = 100;\n+        if (progress >= 100) {\n+            progress = 99;\n         }\n         this.progress = progress;\n     }",
      "parent_sha": "50636792a72f6f62618231e54e9912e486c2299b"
    }
  },
  {
    "oid": "7cdbfa49b5c73be4ca091eb0d0b7338a2fe97f4c",
    "message": "order by saved queries",
    "date": "2023-07-01T06:59:43Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/7cdbfa49b5c73be4ca091eb0d0b7338a2fe97f4c",
    "details": {
      "sha": "8252afbdfb83924d5cb0bf9bb7c37e8135667ee9",
      "filename": "chat2db-server/chat2db-server-domain/chat2db-server-domain-core/src/main/java/ai/chat2db/server/domain/core/impl/OperationServiceImpl.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/7cdbfa49b5c73be4ca091eb0d0b7338a2fe97f4c/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-core%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fcore%2Fimpl%2FOperationServiceImpl.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/7cdbfa49b5c73be4ca091eb0d0b7338a2fe97f4c/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-core%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fcore%2Fimpl%2FOperationServiceImpl.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-core%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fcore%2Fimpl%2FOperationServiceImpl.java?ref=7cdbfa49b5c73be4ca091eb0d0b7338a2fe97f4c",
      "patch": "@@ -105,7 +105,7 @@ public PageResult<Operation> queryPage(OperationPageQueryParam param) {\n         Integer offset = param.getPageSize();\n         Page<OperationSavedDO> page = new Page<>(start, offset);\n         page.setOptimizeCountSql(false);\n-        if (param.getOrderByDesc()) {\n+        if (param.isOrderByDesc()) {\n             queryWrapper.orderByDesc(\"gmt_modified\");\n         } else {\n             queryWrapper.orderByAsc(\"gmt_modified\");",
      "parent_sha": "aa03a4104df5276405099628f9027955b3aed49c"
    }
  },
  {
    "oid": "1b366488193371efb0354f53ad13840066f4c2c1",
    "message": "Fix mysql type size error",
    "date": "2023-11-09T09:01:14Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/1b366488193371efb0354f53ad13840066f4c2c1",
    "details": {
      "sha": "cc8d300f6e2f489c88b0a11ae9eb168807293039",
      "filename": "chat2db-server/chat2db-plugins/chat2db-mysql/src/main/java/ai/chat2db/plugin/mysql/type/MysqlColumnTypeEnum.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/1b366488193371efb0354f53ad13840066f4c2c1/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Ftype%2FMysqlColumnTypeEnum.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/1b366488193371efb0354f53ad13840066f4c2c1/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Ftype%2FMysqlColumnTypeEnum.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Ftype%2FMysqlColumnTypeEnum.java?ref=1b366488193371efb0354f53ad13840066f4c2c1",
      "patch": "@@ -15,9 +15,9 @@ public enum MysqlColumnTypeEnum implements ColumnBuilder {\n \n     BIT(\"BIT\", true, false, true, false, false, false, true, true, false, false),\n \n-    TINYINT(\"TINYINT\", false, false, true, true, false, false, true, true, false, false),\n+    TINYINT(\"TINYINT\", true, false, true, true, false, false, true, true, false, false),\n \n-    TINYINT_UNSIGNED(\"TINYINT UNSIGNED\", false, false, true, true, false, false, true, true, false, false),\n+    TINYINT_UNSIGNED(\"TINYINT UNSIGNED\", true, false, true, true, false, false, true, true, false, false),\n \n     SMALLINT(\"SMALLINT\", false, false, true, true, false, false, true, true, false, false),\n \n@@ -284,7 +284,7 @@ private String buildDataType(TableColumn column, MysqlColumnTypeEnum type) {\n         }\n \n \n-        if (Arrays.asList(DECIMAL, FLOAT, DOUBLE).contains(type)) {\n+        if (Arrays.asList(DECIMAL, FLOAT, DOUBLE,TINYINT).contains(type)) {\n             if (column.getColumnSize() == null || column.getDecimalDigits() == null) {\n                 return columnType;\n             }\n@@ -296,7 +296,7 @@ private String buildDataType(TableColumn column, MysqlColumnTypeEnum type) {\n             }\n         }\n \n-        if (Arrays.asList(DECIMAL_UNSIGNED, FLOAT_UNSIGNED, DECIMAL_UNSIGNED).contains(type)) {\n+        if (Arrays.asList(DECIMAL_UNSIGNED, FLOAT_UNSIGNED, DECIMAL_UNSIGNED,TINYINT_UNSIGNED).contains(type)) {\n             if (column.getColumnSize() == null || column.getDecimalDigits() == null) {\n                 return columnType;\n             }",
      "parent_sha": "0327c7e0e9fee0413a97a7193d254f8d3177851e"
    }
  },
  {
    "oid": "270429955ac8af77ab6f4eadace28e422796536f",
    "message": "Fix primary key no use",
    "date": "2023-11-03T09:03:14Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/270429955ac8af77ab6f4eadace28e422796536f",
    "details": {
      "sha": "fd3762606f50d9bba5e594fb43fc0e85b48eea8e",
      "filename": "chat2db-server/chat2db-server-domain/chat2db-server-domain-core/src/main/java/ai/chat2db/server/domain/core/impl/DlTemplateServiceImpl.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/270429955ac8af77ab6f4eadace28e422796536f/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-core%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fcore%2Fimpl%2FDlTemplateServiceImpl.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/270429955ac8af77ab6f4eadace28e422796536f/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-core%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fcore%2Fimpl%2FDlTemplateServiceImpl.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-domain%2Fchat2db-server-domain-core%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fdomain%2Fcore%2Fimpl%2FDlTemplateServiceImpl.java?ref=270429955ac8af77ab6f4eadace28e422796536f",
      "patch": "@@ -282,7 +282,7 @@ private List<String> getPrimaryColumns(UpdateSelectResultParam param) {\n                 keyColumns.add(header.getName());\n             }\n         }\n-        return Lists.newArrayList();\n+        return keyColumns;\n     }\n \n     private String getDeleteSql(UpdateSelectResultParam param, List<String> row, MetaData metaSchema, List<String> keyColumns) {",
      "parent_sha": "7875a683914a312daa6a7458478181a89c79e8df"
    }
  },
  {
    "oid": "96379b1da3225b56349186ba7d1ed16b6224c8dc",
    "message": "Optimize startup speed",
    "date": "2023-07-30T03:24:41Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/96379b1da3225b56349186ba7d1ed16b6224c8dc",
    "details": {
      "sha": "25567ad0384fc0a1e1388d2cb8370e0aa6a22866",
      "filename": "chat2db-server/chat2db-server-start/src/main/java/ai/chat2db/server/start/Application.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/96379b1da3225b56349186ba7d1ed16b6224c8dc/chat2db-server%2Fchat2db-server-start%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fstart%2FApplication.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/96379b1da3225b56349186ba7d1ed16b6224c8dc/chat2db-server%2Fchat2db-server-start%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fstart%2FApplication.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-start%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fstart%2FApplication.java?ref=96379b1da3225b56349186ba7d1ed16b6224c8dc",
      "patch": "@@ -23,7 +23,7 @@\n @SpringBootApplication\n @ComponentScan(value = {\"ai.chat2db.server\"})\n @MapperScan(\"ai.chat2db.server.domain.repository.mapper\")\n-@ForestScan(basePackages = \"ai.chat2db.server\")\n+@ForestScan(basePackages = \"ai.chat2db.server.web.api.http\")\n @Indexed\n @EnableCaching\n @EnableScheduling",
      "parent_sha": "25d789ba73f8653ea8773aa6b7f85a49891b814f"
    }
  },
  {
    "oid": "cf8d0310dfdd45b2b5bef7b9d33739d899ac6973",
    "message": "\u4fee\u590dSQL SERVER \u7f16\u8f91\u8868\u4e2d\u7d22\u5f15\u83b7\u53d6\u4e0d\u5168\u95ee\u9898\uff0c\u4f7f\u7528sys.indexes.is_primary_key \u5224\u65ad\u662f\u5426\u4e3a\u4e3b\u952e\n\u53c2\u8003\uff1ahttps://learn.microsoft.com/zh-cn/sql/relational-databases/system-catalog-views/sys-indexes-transact-sql?view=sql-server-ver16",
    "date": "2023-11-29T10:03:40Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/cf8d0310dfdd45b2b5bef7b9d33739d899ac6973",
    "details": {
      "sha": "392ae803993072b556414380c64670265da6c22e",
      "filename": "chat2db-server/chat2db-plugins/chat2db-sqlserver/src/main/java/ai/chat2db/plugin/sqlserver/SqlServerMetaData.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/cf8d0310dfdd45b2b5bef7b9d33739d899ac6973/chat2db-server%2Fchat2db-plugins%2Fchat2db-sqlserver%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fsqlserver%2FSqlServerMetaData.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/cf8d0310dfdd45b2b5bef7b9d33739d899ac6973/chat2db-server%2Fchat2db-plugins%2Fchat2db-sqlserver%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fsqlserver%2FSqlServerMetaData.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-sqlserver%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fsqlserver%2FSqlServerMetaData.java?ref=cf8d0310dfdd45b2b5bef7b9d33739d899ac6973",
      "patch": "@@ -300,7 +300,7 @@ public Table view(Connection connection, String databaseName, String schemaName,\n         });\n     }\n \n-    private static final String INDEX_SQL = \"SELECT ic.key_ordinal AS COLUMN_POSITION, ic.is_descending_key as DESCEND , ind.name AS INDEX_NAME, ind.is_unique AS IS_UNIQUE, col.name AS COLUMN_NAME, ind.type_desc AS INDEX_TYPE, CASE WHEN ic.key_ordinal = 0 THEN 'N' ELSE 'Y' END AS IS_PRIMARY FROM sys.indexes ind INNER JOIN sys.index_columns ic ON ind.object_id = ic.object_id and ind.index_id = ic.index_id INNER JOIN sys.columns col ON ic.object_id = col.object_id and ic.column_id = col.column_id INNER JOIN sys.tables t ON ind.object_id = t.object_id LEFT JOIN sys.key_constraints kc ON ind.object_id = kc.parent_object_id AND ind.index_id = kc.unique_index_id WHERE t.name = '%s' and t.schema_id= SCHEMA_ID('%s') ORDER BY t.name, ind.name, ind.index_id, ic.index_column_id\";\n+    private static final String INDEX_SQL = \"SELECT ic.key_ordinal AS COLUMN_POSITION, ic.is_descending_key as DESCEND , ind.name AS INDEX_NAME, ind.is_unique AS IS_UNIQUE, col.name AS COLUMN_NAME, ind.type_desc AS INDEX_TYPE, ind.is_primary_key AS IS_PRIMARY FROM sys.indexes ind INNER JOIN sys.index_columns ic ON ind.object_id = ic.object_id and ind.index_id = ic.index_id and ic.key_ordinal>0 INNER JOIN sys.columns col ON ic.object_id = col.object_id and ic.column_id = col.column_id INNER JOIN sys.tables t ON ind.object_id = t.object_id LEFT JOIN sys.key_constraints kc ON ind.object_id = kc.parent_object_id AND ind.index_id = kc.unique_index_id WHERE t.name = '%s' and t.schema_id= SCHEMA_ID('%s') ORDER BY t.name, ind.name, ind.index_id, ic.index_column_id\";\n \n     @Override\n     public List<TableIndex> indexes(Connection connection, String databaseName, String schemaName, String tableName) {\n@@ -332,7 +332,7 @@ public List<TableIndex> indexes(Connection connection, String databaseName, Stri\n                     tableIndexColumns.add(getTableIndexColumn(resultSet));\n                     index.setColumnList(tableIndexColumns);\n                     String indexType = resultSet.getString(\"INDEX_TYPE\");\n-                    if (\"Y\".equalsIgnoreCase(resultSet.getString(\"IS_PRIMARY\"))) {\n+                    if (resultSet.getBoolean(\"IS_PRIMARY\")) {\n                         index.setType(SqlServerIndexTypeEnum.PRIMARY_KEY.getName());\n                     }else if(\"CLUSTERED\".equalsIgnoreCase(indexType)){\n                         if(index.getUnique()){",
      "parent_sha": "35497553295b0de608f585cc844a1890610e15ff"
    }
  },
  {
    "oid": "55e5e05ee96581739ffa8068dcba0584e9b29c98",
    "message": "fix getColumn bug",
    "date": "2023-07-03T14:41:28Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/55e5e05ee96581739ffa8068dcba0584e9b29c98",
    "details": {
      "sha": "bbaad43ff08648be73a78a83fc8387c552f3d375",
      "filename": "chat2db-server/chat2db-plugins/chat2b-mysql/src/main/java/ai/chat2db/plugin/mysql/builder/DBConfigBuilder.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/55e5e05ee96581739ffa8068dcba0584e9b29c98/chat2db-server%2Fchat2db-plugins%2Fchat2b-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fbuilder%2FDBConfigBuilder.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/55e5e05ee96581739ffa8068dcba0584e9b29c98/chat2db-server%2Fchat2db-plugins%2Fchat2b-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fbuilder%2FDBConfigBuilder.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2b-mysql%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Fmysql%2Fbuilder%2FDBConfigBuilder.java?ref=55e5e05ee96581739ffa8068dcba0584e9b29c98",
      "patch": "@@ -23,7 +23,7 @@ public static DBConfig buildDBConfig() {\n         driverConfig2.setJdbcDriver(\"mysql-connector-java-5.1.47.jar\");\n         driverConfig2.setJdbcDriverClass(\"com.mysql.jdbc.Driver\");\n         driverConfig2.setDownloadJdbcDriverUrls(Lists.newArrayList(\"https://oss-chat2db.alibaba.com/lib/mysql-connector-java-5.1.47.jar\"));\n-        driverConfig2.setName(driverConfig.getJdbcDriver() + \":\" + driverConfig.getJdbcDriverClass());\n+        driverConfig2.setName(driverConfig2.getJdbcDriver() + \":\" + driverConfig2.getJdbcDriverClass());\n \n         dbConfig.setDriverConfigList(Lists.newArrayList(driverConfig,driverConfig2));\n         return dbConfig;",
      "parent_sha": "4639597a2a7cd1b3539c2226d5ba8d145a71fc29"
    }
  },
  {
    "oid": "4ea4c745f0d5a6692253c597386fbb73a7fe7715",
    "message": "update sql error",
    "date": "2024-06-11T08:43:16Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/4ea4c745f0d5a6692253c597386fbb73a7fe7715",
    "details": {
      "sha": "9c8a0dc67de1607eaf3b47bb6c24d02992abbbd2",
      "filename": "chat2db-server/chat2db-spi/src/main/java/ai/chat2db/spi/sql/ConnectionPool.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/4ea4c745f0d5a6692253c597386fbb73a7fe7715/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fsql%2FConnectionPool.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/4ea4c745f0d5a6692253c597386fbb73a7fe7715/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fsql%2FConnectionPool.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-spi%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fspi%2Fsql%2FConnectionPool.java?ref=4ea4c745f0d5a6692253c597386fbb73a7fe7715",
      "patch": "@@ -42,9 +42,9 @@ public class ConnectionPool {\n \n     }\n \n-    public static synchronized void removeConnection(String key) {\n+    public static synchronized void removeConnection(Long datasourceId) {\n         CONNECTION_MAP.forEach((k, v) -> {\n-            if (k.startsWith(key)) {\n+            if (k.contains(String.valueOf(datasourceId))) {\n                 try {\n                     Connection connection = v.getConnection();\n                     if (connection != null) {",
      "parent_sha": "8b47d1fb1538012b653285e6d9be29208a96d958"
    }
  },
  {
    "oid": "e3d99311385febd9b7dab756d0d47b454ab4235d",
    "message": "update udf origin name",
    "date": "2024-10-24T06:20:36Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/e3d99311385febd9b7dab756d0d47b454ab4235d",
    "details": {
      "sha": "15dae5732c1f5996c29c01d401d024fa99e218af",
      "filename": "chat2db-server/chat2db-plugins/chat2db-timeplus/src/main/java/ai/chat2db/plugin/timeplus/TimeplusDBManage.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/e3d99311385febd9b7dab756d0d47b454ab4235d/chat2db-server%2Fchat2db-plugins%2Fchat2db-timeplus%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Ftimeplus%2FTimeplusDBManage.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/e3d99311385febd9b7dab756d0d47b454ab4235d/chat2db-server%2Fchat2db-plugins%2Fchat2db-timeplus%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Ftimeplus%2FTimeplusDBManage.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-plugins%2Fchat2db-timeplus%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fplugin%2Ftimeplus%2FTimeplusDBManage.java?ref=e3d99311385febd9b7dab756d0d47b454ab4235d",
      "patch": "@@ -32,7 +32,7 @@ private void exportFunctions(\n         AsyncContext asyncContext\n     ) throws SQLException {\n         String sql =\n-            \"SELECT name,create_query from system.functions where origin='SQLUserDefined'\";\n+            \"SELECT name,create_query from system.functions where origin='ExecutableUserDefined'\";\n         try (\n             ResultSet resultSet = connection.createStatement().executeQuery(sql)\n         ) {",
      "parent_sha": "45e620bbe43c417a08b63291eb54c71ca2ec5dec"
    }
  },
  {
    "oid": "6e7a8fe4f63e47a41300a3b62dd1a2007c14f930",
    "message": "openai config update",
    "date": "2023-07-29T06:35:05Z",
    "url": "https://github.com/CodePhiliaX/Chat2DB/commit/6e7a8fe4f63e47a41300a3b62dd1a2007c14f930",
    "details": {
      "sha": "a93082a3e5532bb948a03c8562d44a765ab32a3c",
      "filename": "chat2db-server/chat2db-server-web/chat2db-server-web-api/src/main/java/ai/chat2db/server/web/api/controller/config/ConfigController.java",
      "status": "modified",
      "additions": 23,
      "deletions": 18,
      "changes": 41,
      "blob_url": "https://github.com/CodePhiliaX/Chat2DB/blob/6e7a8fe4f63e47a41300a3b62dd1a2007c14f930/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fconfig%2FConfigController.java",
      "raw_url": "https://github.com/CodePhiliaX/Chat2DB/raw/6e7a8fe4f63e47a41300a3b62dd1a2007c14f930/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fconfig%2FConfigController.java",
      "contents_url": "https://api.github.com/repos/CodePhiliaX/Chat2DB/contents/chat2db-server%2Fchat2db-server-web%2Fchat2db-server-web-api%2Fsrc%2Fmain%2Fjava%2Fai%2Fchat2db%2Fserver%2Fweb%2Fapi%2Fcontroller%2Fconfig%2FConfigController.java?ref=6e7a8fe4f63e47a41300a3b62dd1a2007c14f930",
      "patch": "@@ -275,48 +275,53 @@ public DataResult<Config> getSystemConfig(@PathVariable(\"code\") String code) {\n      */\n     @GetMapping(\"/system_config/ai\")\n     public DataResult<AIConfig> getChatAiSystemConfig(String aiSqlSource) {\n+        DataResult<Config> dbSqlSource = configService.find(RestAIClient.AI_SQL_SOURCE);\n         if (StringUtils.isBlank(aiSqlSource)) {\n-            DataResult<Config> dbSqlSource = configService.find(RestAIClient.AI_SQL_SOURCE);\n             if (Objects.nonNull(dbSqlSource.getData())) {\n                 aiSqlSource = dbSqlSource.getData().getContent();\n             }\n         }\n         AIConfig config = new AIConfig();\n         AiSqlSourceEnum aiSqlSourceEnum = AiSqlSourceEnum.getByName(aiSqlSource);\n         if (Objects.isNull(aiSqlSourceEnum)) {\n-            aiSqlSourceEnum = AiSqlSourceEnum.CHAT2DBAI;\n             aiSqlSource = AiSqlSourceEnum.CHAT2DBAI.getCode();\n+            config.setAiSqlSource(aiSqlSource);\n+            return DataResult.of(config);\n         }\n         config.setAiSqlSource(aiSqlSource);\n         switch (Objects.requireNonNull(aiSqlSourceEnum)) {\n             case OPENAI :\n-                DataResult<Config> apiKey = configService.find(OpenAIClient.OPENAI_KEY);\n-                DataResult<Config> apiHost = configService.find(OpenAIClient.OPENAI_HOST);\n-                DataResult<Config> httpProxyHost = configService.find(OpenAIClient.PROXY_HOST);\n-                DataResult<Config> httpProxyPort = configService.find(OpenAIClient.PROXY_PORT);\n-                config.setApiKey(Objects.nonNull(apiKey.getData()) ? apiKey.getData().getContent() : null);\n-                config.setApiHost(Objects.nonNull(apiHost.getData()) ? apiHost.getData().getContent() : null);\n-                config.setHttpProxyHost(Objects.nonNull(httpProxyHost.getData()) ? httpProxyHost.getData().getContent() : null);\n-                config.setHttpProxyPort(Objects.nonNull(httpProxyPort.getData()) ? httpProxyPort.getData().getContent() : null);\n+                if (!StringUtils.equals(dbSqlSource.getData().getContent(), AiSqlSourceEnum.CHAT2DBAI.getCode())) {\n+                    DataResult<Config> apiKey = configService.find(OpenAIClient.OPENAI_KEY);\n+                    DataResult<Config> apiHost = configService.find(OpenAIClient.OPENAI_HOST);\n+                    DataResult<Config> httpProxyHost = configService.find(OpenAIClient.PROXY_HOST);\n+                    DataResult<Config> httpProxyPort = configService.find(OpenAIClient.PROXY_PORT);\n+                    config.setApiKey(Objects.nonNull(apiKey.getData()) ? apiKey.getData().getContent() : \"\");\n+                    config.setApiHost(Objects.nonNull(apiHost.getData()) ? apiHost.getData().getContent() : \"\");\n+                    config.setHttpProxyHost(Objects.nonNull(httpProxyHost.getData()) ? httpProxyHost.getData().getContent() : \"\");\n+                    config.setHttpProxyPort(Objects.nonNull(httpProxyPort.getData()) ? httpProxyPort.getData().getContent() : \"\");\n+                }\n                 break;\n             case CHAT2DBAI:\n-                apiKey = configService.find(OpenAIClient.OPENAI_KEY);\n-                apiHost = configService.find(OpenAIClient.OPENAI_HOST);\n-                config.setApiKey(Objects.nonNull(apiKey.getData()) ? apiKey.getData().getContent() : null);\n-                config.setApiHost(Objects.nonNull(apiHost.getData()) ? apiHost.getData().getContent() : null);\n+                if (!StringUtils.equals(dbSqlSource.getData().getContent(), AiSqlSourceEnum.OPENAI.getCode())) {\n+                    DataResult<Config> apiKey = configService.find(OpenAIClient.OPENAI_KEY);\n+                    DataResult<Config> apiHost = configService.find(OpenAIClient.OPENAI_HOST);\n+                    config.setApiKey(Objects.nonNull(apiKey.getData()) ? apiKey.getData().getContent() : \"\");\n+                    config.setApiHost(Objects.nonNull(apiHost.getData()) ? apiHost.getData().getContent() : \"\");\n+                }\n                 break;\n             case AZUREAI:\n                 DataResult<Config> azureApiKey = configService.find(AzureOpenAIClient.AZURE_CHATGPT_API_KEY);\n                 DataResult<Config> azureEndpoint = configService.find(AzureOpenAIClient.AZURE_CHATGPT_ENDPOINT);\n                 DataResult<Config> azureDeployId = configService.find(AzureOpenAIClient.AZURE_CHATGPT_DEPLOYMENT_ID);\n-                config.setApiKey(Objects.nonNull(azureApiKey.getData()) ? azureApiKey.getData().getContent() : null);\n-                config.setApiHost(Objects.nonNull(azureEndpoint.getData()) ? azureEndpoint.getData().getContent() : null);\n-                config.setModel(Objects.nonNull(azureDeployId.getData()) ? azureDeployId.getData().getContent() : null);\n+                config.setApiKey(Objects.nonNull(azureApiKey.getData()) ? azureApiKey.getData().getContent() : \"\");\n+                config.setApiHost(Objects.nonNull(azureEndpoint.getData()) ? azureEndpoint.getData().getContent() : \"\");\n+                config.setModel(Objects.nonNull(azureDeployId.getData()) ? azureDeployId.getData().getContent() : \"\");\n                 break;\n             case RESTAI:\n                 DataResult<Config> restAiUrl = configService.find(RestAIClient.REST_AI_URL);\n                 DataResult<Config> restAiHttpMethod = configService.find(RestAIClient.REST_AI_STREAM_OUT);\n-                config.setApiHost(Objects.nonNull(restAiUrl.getData()) ? restAiUrl.getData().getContent() : null);\n+                config.setApiHost(Objects.nonNull(restAiUrl.getData()) ? restAiUrl.getData().getContent() : \"\");\n                 config.setStream(Objects.nonNull(restAiHttpMethod.getData()) ? Boolean.valueOf(\n                     restAiHttpMethod.getData().getContent()) : Boolean.TRUE);\n                 break;",
      "parent_sha": "53553f7ee6419a965c32381e539295aca80a4053"
    }
  }
]