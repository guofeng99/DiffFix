[
  {
    "oid": "6e98554a8c7260da7e7788f1834a3f7cdcce7e59",
    "message": "Remove unnecessary return tag in NavigationView#getCheckedItem().\n\nThe @return tag is redundant; return tags are not required in cases where the tag does not add value.\n\nPiperOrigin-RevId: 243663808",
    "date": "2019-04-20T01:05:32Z",
    "url": "https://github.com/material-components/material-components-android/commit/6e98554a8c7260da7e7788f1834a3f7cdcce7e59",
    "details": {
      "sha": "68bb8eb8a32e94818306b5fe58ddd0a0639ff8e2",
      "filename": "lib/java/com/google/android/material/navigation/NavigationView.java",
      "status": "modified",
      "additions": 3,
      "deletions": 5,
      "changes": 8,
      "blob_url": "https://github.com/material-components/material-components-android/blob/6e98554a8c7260da7e7788f1834a3f7cdcce7e59/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fnavigation%2FNavigationView.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/6e98554a8c7260da7e7788f1834a3f7cdcce7e59/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fnavigation%2FNavigationView.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fnavigation%2FNavigationView.java?ref=6e98554a8c7260da7e7788f1834a3f7cdcce7e59",
      "patch": "@@ -487,9 +487,7 @@ public void setCheckedItem(@NonNull MenuItem checkedItem) {\n     }\n   }\n \n-  /**\n-   * @return Returns the currently checked item in this navigation menu.\n-   */\n+  /** Returns the currently checked item in this navigation menu. */\n   @Nullable\n   public MenuItem getCheckedItem() {\n     return presenter.getCheckedItem();\n@@ -505,8 +503,8 @@ public void setItemTextAppearance(@StyleRes int resId) {\n   }\n \n   /**\n-   * Sets the size to be used for the menu item icons in pixels.\n-   * If no icons are set, calling this method will do nothing.\n+   * Sets the size to be used for the menu item icons in pixels. If no icons are set, calling this\n+   * method will do nothing.\n    *\n    * @attr ref R.styleable#NavigationView_itemIconSize\n    */",
      "parent_sha": "6b1459d557831b355dd4bb19d1ac73621b93ed08"
    }
  },
  {
    "oid": "ba81fd8a04a17430857937b0868241f4c899438f",
    "message": "am af30a518: am e1b925fb: am 3eb2b6ea: am 6a1f7414: am 3211267e: Merge \"Fix SwipeDismissBehavior for views not at left=0\" into lmp-mr1-ub-dev\n\n* commit 'af30a518ddcefb016adfed7c6582cb6f67245e05':\n  Fix SwipeDismissBehavior for views not at left=0\n\nGitOrigin-RevId=9861b59e4c6f77cb63c1e304e96b5d4d761a53df\n\nPiperOrigin-RevId: 140549253",
    "date": "2016-12-12T23:35:35Z",
    "url": "https://github.com/material-components/material-components-android/commit/ba81fd8a04a17430857937b0868241f4c899438f",
    "details": {
      "sha": "fc29201a1df77c289b9fab1028bacd24bc58f279",
      "filename": "src/android/support/design/widget/SwipeDismissBehavior.java",
      "status": "modified",
      "additions": 4,
      "deletions": 10,
      "changes": 14,
      "blob_url": "https://github.com/material-components/material-components-android/blob/ba81fd8a04a17430857937b0868241f4c899438f/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FSwipeDismissBehavior.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/ba81fd8a04a17430857937b0868241f4c899438f/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FSwipeDismissBehavior.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FSwipeDismissBehavior.java?ref=ba81fd8a04a17430857937b0868241f4c899438f",
      "patch": "@@ -305,8 +305,10 @@ public int clampViewPositionVertical(View child, int top, int dy) {\n \n         @Override\n         public void onViewPositionChanged(View child, int left, int top, int dx, int dy) {\n-            final float startAlphaDistance = child.getWidth() * mAlphaStartSwipeDistance;\n-            final float endAlphaDistance = child.getWidth() * mAlphaEndSwipeDistance;\n+            final float startAlphaDistance = mOriginalCapturedViewLeft\n+                    + child.getWidth() * mAlphaStartSwipeDistance;\n+            final float endAlphaDistance = mOriginalCapturedViewLeft\n+                    + child.getWidth() * mAlphaEndSwipeDistance;\n \n             if (left <= startAlphaDistance) {\n                 ViewCompat.setAlpha(child, 1f);\n@@ -367,14 +369,6 @@ public int getDragState() {\n         return mViewDragHelper != null ? mViewDragHelper.getViewDragState() : STATE_IDLE;\n     }\n \n-    /**\n-     * Linear interpolation between {@code startValue} and {@code endValue} by the fraction {@code\n-     * fraction}.\n-     */\n-    static float lerp(float startValue, float endValue, float fraction) {\n-        return startValue + (fraction * (endValue - startValue));\n-    }\n-\n     /**\n      * The fraction that {@code value} is between {@code startValue} and {@code endValue}.\n      */",
      "parent_sha": "750072ba242aedfa1a339233dd9054403ceac48a"
    }
  },
  {
    "oid": "3c3ac61c9126a7b97da7e10324be163c11257e53",
    "message": "Add workaround to prevent FloatingActionButton crash on API 26.\n\nResolves https://github.com/material-components/material-components-android/issues/66\n\nPiperOrigin-RevId: 284999697",
    "date": "2019-12-11T22:10:07Z",
    "url": "https://github.com/material-components/material-components-android/commit/3c3ac61c9126a7b97da7e10324be163c11257e53",
    "details": {
      "sha": "de8bef0b42c383d7f107375e6390263b499260bd",
      "filename": "lib/java/com/google/android/material/floatingactionbutton/FloatingActionButtonImpl.java",
      "status": "modified",
      "additions": 35,
      "deletions": 13,
      "changes": 48,
      "blob_url": "https://github.com/material-components/material-components-android/blob/3c3ac61c9126a7b97da7e10324be163c11257e53/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ffloatingactionbutton%2FFloatingActionButtonImpl.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/3c3ac61c9126a7b97da7e10324be163c11257e53/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ffloatingactionbutton%2FFloatingActionButtonImpl.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ffloatingactionbutton%2FFloatingActionButtonImpl.java?ref=3c3ac61c9126a7b97da7e10324be163c11257e53",
      "patch": "@@ -24,8 +24,10 @@\n import android.animation.Animator.AnimatorListener;\n import android.animation.AnimatorListenerAdapter;\n import android.animation.AnimatorSet;\n+import android.animation.FloatEvaluator;\n import android.animation.ObjectAnimator;\n import android.animation.TimeInterpolator;\n+import android.animation.TypeEvaluator;\n import android.animation.ValueAnimator;\n import android.content.res.ColorStateList;\n import android.graphics.Color;\n@@ -559,22 +561,23 @@ private MotionSpec getDefaultHideMotionSpec() {\n   private AnimatorSet createAnimator(\n       @NonNull MotionSpec spec, float opacity, float scale, float iconScale) {\n     List<Animator> animators = new ArrayList<>();\n-    Animator animator;\n \n-    animator = ObjectAnimator.ofFloat(view, View.ALPHA, opacity);\n-    spec.getTiming(\"opacity\").apply(animator);\n-    animators.add(animator);\n+    ObjectAnimator animatorOpacity = ObjectAnimator.ofFloat(view, View.ALPHA, opacity);\n+    spec.getTiming(\"opacity\").apply(animatorOpacity);\n+    animators.add(animatorOpacity);\n \n-    animator = ObjectAnimator.ofFloat(view, View.SCALE_X, scale);\n-    spec.getTiming(\"scale\").apply(animator);\n-    animators.add(animator);\n+    ObjectAnimator animatorScaleX = ObjectAnimator.ofFloat(view, View.SCALE_X, scale);\n+    spec.getTiming(\"scale\").apply(animatorScaleX);\n+    workAroundOreoBug(animatorScaleX);\n+    animators.add(animatorScaleX);\n \n-    animator = ObjectAnimator.ofFloat(view, View.SCALE_Y, scale);\n-    spec.getTiming(\"scale\").apply(animator);\n-    animators.add(animator);\n+    ObjectAnimator animatorScaleY = ObjectAnimator.ofFloat(view, View.SCALE_Y, scale);\n+    spec.getTiming(\"scale\").apply(animatorScaleY);\n+    workAroundOreoBug(animatorScaleY);\n+    animators.add(animatorScaleY);\n \n     calculateImageMatrixFromScale(iconScale, tmpMatrix);\n-    animator =\n+    ObjectAnimator animatorIconScale =\n         ObjectAnimator.ofObject(\n             view,\n             new ImageMatrixProperty(),\n@@ -589,14 +592,33 @@ public Matrix evaluate(\n               }\n             },\n             new Matrix(tmpMatrix));\n-    spec.getTiming(\"iconScale\").apply(animator);\n-    animators.add(animator);\n+    spec.getTiming(\"iconScale\").apply(animatorIconScale);\n+    animators.add(animatorIconScale);\n \n     AnimatorSet set = new AnimatorSet();\n     AnimatorSetCompat.playTogether(set, animators);\n     return set;\n   }\n \n+  /**\n+   * There appears to be a bug in the OpenGL shadow rendering code on API 26. We can work around it\n+   * by preventing any scaling close to 0.\n+   */\n+  private void workAroundOreoBug(final ObjectAnimator animator) {\n+    if (Build.VERSION.SDK_INT != Build.VERSION_CODES.O) {\n+      return;\n+    }\n+\n+    animator.setEvaluator(new TypeEvaluator<Float>() {\n+      FloatEvaluator floatEvaluator = new FloatEvaluator();\n+      @Override\n+      public Float evaluate(float fraction, Float startValue, Float endValue) {\n+        float evaluated = floatEvaluator.evaluate(fraction, startValue, endValue);\n+        return evaluated < 0.1f ? 0.0f : evaluated;\n+      }\n+    });\n+  }\n+\n   void addTransformationCallback(@NonNull InternalTransformationCallback listener) {\n     if (transformationCallbacks == null) {\n       transformationCallbacks = new ArrayList<>();",
      "parent_sha": "7461eda024c4d70c179e03562345c6d64db9c99d"
    }
  },
  {
    "oid": "649a13fa2ea33163c225aa8c7bfb6549654fa011",
    "message": "Replace calls to deprecated method Chip#getChipText() with its replacement Chip#getText().\nReplace calls to deprecated Chip#setChipText(...) methods with their replacement Chip#setText...).\n\nPiperOrigin-RevId: 199663849",
    "date": "2018-06-20T21:26:38Z",
    "url": "https://github.com/material-components/material-components-android/commit/649a13fa2ea33163c225aa8c7bfb6549654fa011",
    "details": {
      "sha": "841d79801ea85848d0deb74dcf907e4e32dcc54c",
      "filename": "lib/java/com/google/android/material/chip/Chip.java",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/material-components/material-components-android/blob/649a13fa2ea33163c225aa8c7bfb6549654fa011/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fchip%2FChip.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/649a13fa2ea33163c225aa8c7bfb6549654fa011/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fchip%2FChip.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fchip%2FChip.java?ref=649a13fa2ea33163c225aa8c7bfb6549654fa011",
      "patch": "@@ -862,7 +862,7 @@ protected void onPopulateNodeForVirtualView(\n         if (closeIconContentDescription != null) {\n           node.setContentDescription(closeIconContentDescription);\n         } else {\n-          CharSequence chipText = getChipText();\n+          CharSequence chipText = getText();\n           node.setContentDescription(\n               getContext()\n                   .getString(\n@@ -1012,7 +1012,6 @@ public CharSequence getText() {\n \n   /** @deprecated Use {@link Chip#getText()} instead. */\n   @Deprecated\n-  @Nullable\n   public CharSequence getChipText() {\n     return getText();\n   }",
      "parent_sha": "8e3cbc34631fd91308cfd5a4c580e8b6116d127a"
    }
  },
  {
    "oid": "934985ec5338e7cfd8fe1f4ffbdb9f9149ddba34",
    "message": "[FAB] Updated FAB to use new motion attributes.\n\nPiperOrigin-RevId: 449046932",
    "date": "2022-05-16T21:00:22Z",
    "url": "https://github.com/material-components/material-components-android/commit/934985ec5338e7cfd8fe1f4ffbdb9f9149ddba34",
    "details": {
      "sha": "6c96c5a9970196ed6c34a3c1201aa02fb298b8d6",
      "filename": "lib/java/com/google/android/material/floatingactionbutton/FloatingActionButtonImpl.java",
      "status": "modified",
      "additions": 20,
      "deletions": 5,
      "changes": 25,
      "blob_url": "https://github.com/material-components/material-components-android/blob/934985ec5338e7cfd8fe1f4ffbdb9f9149ddba34/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ffloatingactionbutton%2FFloatingActionButtonImpl.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/934985ec5338e7cfd8fe1f4ffbdb9f9149ddba34/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ffloatingactionbutton%2FFloatingActionButtonImpl.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ffloatingactionbutton%2FFloatingActionButtonImpl.java?ref=934985ec5338e7cfd8fe1f4ffbdb9f9149ddba34",
      "patch": "@@ -87,6 +87,12 @@ class FloatingActionButtonImpl {\n   private static final float SPEC_HIDE_SCALE = 0f;\n   private static final float SPEC_HIDE_ICON_SCALE = 0f;\n \n+  private static final int SHOW_ANIM_DURATION_ATTR = R.attr.motionDurationLong2;\n+  private static final int SHOW_ANIM_EASING_ATTR = R.attr.motionEasingEmphasizedInterpolator;\n+  private static final int HIDE_ANIM_DURATION_ATTR = R.attr.motionDurationMedium1;\n+  private static final int HIDE_ANIM_EASING_ATTR =\n+      R.attr.motionEasingEmphasizedAccelerateInterpolator;\n+\n   @Nullable ShapeAppearanceModel shapeAppearance;\n   @Nullable MaterialShapeDrawable shapeDrawable;\n   @Nullable Drawable rippleDrawable;\n@@ -438,7 +444,11 @@ void hide(@Nullable final InternalVisibilityChangedListener listener, final bool\n       } else {\n         set =\n             createDefaultAnimator(\n-                HIDE_OPACITY, HIDE_SCALE, HIDE_ICON_SCALE);\n+                HIDE_OPACITY,\n+                HIDE_SCALE,\n+                HIDE_ICON_SCALE,\n+                HIDE_ANIM_DURATION_ATTR,\n+                HIDE_ANIM_EASING_ATTR);\n       }\n \n       set.addListener(\n@@ -520,7 +530,11 @@ void show(@Nullable final InternalVisibilityChangedListener listener, final bool\n       } else {\n         set =\n             createDefaultAnimator(\n-                SHOW_OPACITY, SHOW_SCALE, SHOW_ICON_SCALE);\n+                SHOW_OPACITY,\n+                SHOW_SCALE,\n+                SHOW_ICON_SCALE,\n+                SHOW_ANIM_DURATION_ATTR,\n+                SHOW_ANIM_EASING_ATTR);\n       }\n \n       set.addListener(\n@@ -614,7 +628,8 @@ public Matrix evaluate(\n    * are changed.\n    */\n   private AnimatorSet createDefaultAnimator(\n-      final float targetOpacity, final float targetScale, final float targetIconScale) {\n+      final float targetOpacity, final float targetScale, final float targetIconScale,\n+      final int duration, final int interpolator) {\n     AnimatorSet set = new AnimatorSet();\n     List<Animator> animators = new ArrayList<>();\n     ValueAnimator animator = ValueAnimator.ofFloat(0F, 1F);\n@@ -644,14 +659,14 @@ public void onAnimationUpdate(ValueAnimator animation) {\n     set.setDuration(\n         MotionUtils.resolveThemeDuration(\n             view.getContext(),\n-            R.attr.motionDurationLong1,\n+            duration,\n             view.getContext()\n                 .getResources()\n                 .getInteger(R.integer.material_motion_duration_long_1)));\n     set.setInterpolator(\n         MotionUtils.resolveThemeInterpolator(\n             view.getContext(),\n-            R.attr.motionEasingStandard,\n+            interpolator,\n             AnimationUtils.FAST_OUT_SLOW_IN_INTERPOLATOR));\n     return set;\n   }",
      "parent_sha": "265cb867cdaba0a4bc8dcdc7d6050910db073fe9"
    }
  },
  {
    "oid": "ce00ba3778721b6a8e15b7027576ac7ad2d689d1",
    "message": "[ProgressIndicator] Fix ArithmeticException when calculating the phase\n\nResolves https://github.com/material-components/material-components-android/pull/4154\n\nGIT_ORIGIN_REV_ID=d5aedbbd23f1b6d126263cba8960df0bc36386c4\nPiperOrigin-RevId: 634014470",
    "date": "2024-05-15T19:06:04Z",
    "url": "https://github.com/material-components/material-components-android/commit/ce00ba3778721b6a8e15b7027576ac7ad2d689d1",
    "details": {
      "sha": "f6992aa3c9384be7f514d8630fc0e7f872aedf2b",
      "filename": "lib/java/com/google/android/material/progressindicator/DrawableWithAnimatedVisibilityChange.java",
      "status": "modified",
      "additions": 8,
      "deletions": 5,
      "changes": 13,
      "blob_url": "https://github.com/material-components/material-components-android/blob/ce00ba3778721b6a8e15b7027576ac7ad2d689d1/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fprogressindicator%2FDrawableWithAnimatedVisibilityChange.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/ce00ba3778721b6a8e15b7027576ac7ad2d689d1/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fprogressindicator%2FDrawableWithAnimatedVisibilityChange.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fprogressindicator%2FDrawableWithAnimatedVisibilityChange.java?ref=ce00ba3778721b6a8e15b7027576ac7ad2d689d1",
      "patch": "@@ -451,15 +451,18 @@ float getPhaseFraction() {\n     if (mockPhaseFraction > 0) {\n       return mockPhaseFraction;\n     }\n+\n     float phaseFraction = 0f;\n-    if (baseSpec.speed != 0) {\n+    if (baseSpec.hasWavyEffect() && baseSpec.speed != 0) {\n       float durationScale =\n           animatorDurationScaleProvider.getSystemAnimatorDurationScale(\n               context.getContentResolver());\n-      int cycleInMs = (int) (1000f * baseSpec.wavelength / baseSpec.speed * durationScale);\n-      phaseFraction = (float) (System.currentTimeMillis() % cycleInMs) / cycleInMs;\n-      if (phaseFraction < 0f) {\n-        phaseFraction = (phaseFraction % 1) + 1f;\n+      if (durationScale > 0f) {\n+        int cycleInMs = (int) (1000f * baseSpec.wavelength / baseSpec.speed * durationScale);\n+        phaseFraction = (float) (System.currentTimeMillis() % cycleInMs) / cycleInMs;\n+        if (phaseFraction < 0f) {\n+          phaseFraction = (phaseFraction % 1) + 1f;\n+        }\n       }\n     }\n     return phaseFraction;",
      "parent_sha": "d13bfdf3cd70cf5fd794c2db7892dcd1a9c16bf5"
    }
  },
  {
    "oid": "98c248d5d775867189f9f4d9cc0cac36ba23615b",
    "message": "Update Chip content description to announce chip's label without \"Chip.\" prefix.\nUser doesn't need to know the implementation detail that this is the Chip.\n\nPiperOrigin-RevId: 189722701",
    "date": "2018-04-03T15:45:11Z",
    "url": "https://github.com/material-components/material-components-android/commit/98c248d5d775867189f9f4d9cc0cac36ba23615b",
    "details": {
      "sha": "9f049be701f5fb5714e1db430097676d7645bb82",
      "filename": "lib/java/android/support/design/chip/Chip.java",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/material-components/material-components-android/blob/98c248d5d775867189f9f4d9cc0cac36ba23615b/lib%2Fjava%2Fandroid%2Fsupport%2Fdesign%2Fchip%2FChip.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/98c248d5d775867189f9f4d9cc0cac36ba23615b/lib%2Fjava%2Fandroid%2Fsupport%2Fdesign%2Fchip%2FChip.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fandroid%2Fsupport%2Fdesign%2Fchip%2FChip.java?ref=98c248d5d775867189f9f4d9cc0cac36ba23615b",
      "patch": "@@ -600,10 +600,7 @@ protected void onPopulateNodeForVirtualView(\n     protected void onPopulateNodeForHost(AccessibilityNodeInfoCompat node) {\n       node.setCheckable(chipDrawable != null && chipDrawable.isCheckable());\n       node.setClassName(Chip.class.getName());\n-      node.setContentDescription(\n-          Chip.class.getSimpleName()\n-              + \". \"\n-              + (chipDrawable != null ? chipDrawable.getChipText() : \"\"));\n+      node.setContentDescription(chipDrawable != null ? chipDrawable.getChipText() : \"\");\n     }\n \n     @Override",
      "parent_sha": "b3494e18c081f9b91a79681c9a4f2898147f6578"
    }
  },
  {
    "oid": "3f4ae91ebc466f4721ca510672a850c30e46409e",
    "message": "Don't include padding in idealHeight measurement for TabLayout child view\n\nPiperOrigin-RevId: 264194304",
    "date": "2019-08-20T15:13:51Z",
    "url": "https://github.com/material-components/material-components-android/commit/3f4ae91ebc466f4721ca510672a850c30e46409e",
    "details": {
      "sha": "1d50b6642a2121b0c93c92b8d32880c94b836875",
      "filename": "lib/java/com/google/android/material/tabs/TabLayout.java",
      "status": "modified",
      "additions": 4,
      "deletions": 6,
      "changes": 10,
      "blob_url": "https://github.com/material-components/material-components-android/blob/3f4ae91ebc466f4721ca510672a850c30e46409e/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftabs%2FTabLayout.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/3f4ae91ebc466f4721ca510672a850c30e46409e/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftabs%2FTabLayout.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftabs%2FTabLayout.java?ref=3f4ae91ebc466f4721ca510672a850c30e46409e",
      "patch": "@@ -1596,19 +1596,17 @@ protected void onDraw(Canvas canvas) {\n   protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n     // If we have a MeasureSpec which allows us to decide our height, try and use the default\n     // height\n-    final int idealHeight =\n-        (int)\n-            (ViewUtils.dpToPx(getContext(), getDefaultHeight())\n-                + getPaddingTop()\n-                + getPaddingBottom());\n+    final int idealHeight = (int) ViewUtils.dpToPx(getContext(), getDefaultHeight());\n     switch (MeasureSpec.getMode(heightMeasureSpec)) {\n       case MeasureSpec.AT_MOST:\n         if (getChildCount() == 1 && MeasureSpec.getSize(heightMeasureSpec) >= idealHeight) {\n           getChildAt(0).setMinimumHeight(idealHeight);\n         }\n         break;\n       case MeasureSpec.UNSPECIFIED:\n-        heightMeasureSpec = MeasureSpec.makeMeasureSpec(idealHeight, MeasureSpec.EXACTLY);\n+        heightMeasureSpec =\n+            MeasureSpec.makeMeasureSpec(\n+                idealHeight + getPaddingTop() + getPaddingBottom(), MeasureSpec.EXACTLY);\n         break;\n       default:\n         break;",
      "parent_sha": "a1a763dde9446b7d0d99b18300f9145a08f3e15c"
    }
  },
  {
    "oid": "db167635e49e75522c808aaf1caf4068002da3b3",
    "message": "[Catalog] Fix timeFormat toggle in TimePickerMainDemoFragment\n\nResolves https://github.com/material-components/material-components-android/pull/2640\n\nGIT_ORIGIN_REV_ID=753e4d8a696593e93594643f6aea18f3ce6cab94\nPiperOrigin-RevId: 442591442",
    "date": "2022-04-18T19:42:09Z",
    "url": "https://github.com/material-components/material-components-android/commit/db167635e49e75522c808aaf1caf4068002da3b3",
    "details": {
      "sha": "0a9a5769e2cf29ae32948ff9df37a64409888215",
      "filename": "catalog/java/io/material/catalog/timepicker/TimePickerMainDemoFragment.java",
      "status": "modified",
      "additions": 8,
      "deletions": 6,
      "changes": 14,
      "blob_url": "https://github.com/material-components/material-components-android/blob/db167635e49e75522c808aaf1caf4068002da3b3/catalog%2Fjava%2Fio%2Fmaterial%2Fcatalog%2Ftimepicker%2FTimePickerMainDemoFragment.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/db167635e49e75522c808aaf1caf4068002da3b3/catalog%2Fjava%2Fio%2Fmaterial%2Fcatalog%2Ftimepicker%2FTimePickerMainDemoFragment.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/catalog%2Fjava%2Fio%2Fmaterial%2Fcatalog%2Ftimepicker%2FTimePickerMainDemoFragment.java?ref=db167635e49e75522c808aaf1caf4068002da3b3",
      "patch": "@@ -59,12 +59,14 @@ public View onCreateDemoView(\n \n     timeFormatToggle.addOnButtonCheckedListener(\n         (group, checkedId, isChecked) -> {\n-          boolean isSystem24Hour = DateFormat.is24HourFormat(getContext());\n-          boolean is24Hour =\n-              checkedId == R.id.time_format_24h\n-                  || (checkedId == R.id.time_format_system && isSystem24Hour);\n-\n-          clockFormat = is24Hour ? TimeFormat.CLOCK_24H : TimeFormat.CLOCK_12H;\n+          if (isChecked) {\n+            boolean isSystem24Hour = DateFormat.is24HourFormat(getContext());\n+            boolean is24Hour =\n+                checkedId == R.id.time_format_24h\n+                    || (checkedId == R.id.time_format_system && isSystem24Hour);\n+\n+            clockFormat = is24Hour ? TimeFormat.CLOCK_24H : TimeFormat.CLOCK_12H;\n+          }\n         });\n \n     SwitchCompat frameworkSwitch = view.findViewById(R.id.framework_switch);",
      "parent_sha": "5b9f27aad0bb185261d6e400274a416953755d74"
    }
  },
  {
    "oid": "823c34a90c97828115e147d482c544bdee6c2b57",
    "message": "[Tab] Fix NPE caused by set a position less than 0\n\nIf somehow scroll position is set to -1 with and position offset greater than 0.5, we will decide it's a valid scroll position which causes NPE for selected child not found.\n\nFixes this by checking if position is valid regardless the offset and falling back to 0 if a negative position is given.\n\nResolves https://github.com/material-components/material-components-android/issues/2464\n\nPiperOrigin-RevId: 408894188",
    "date": "2021-11-10T21:12:49Z",
    "url": "https://github.com/material-components/material-components-android/commit/823c34a90c97828115e147d482c544bdee6c2b57",
    "details": {
      "sha": "9bb1f36e15943bfe5eb3e9f6a6112b02694204d4",
      "filename": "lib/java/com/google/android/material/tabs/TabLayout.java",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/material-components/material-components-android/blob/823c34a90c97828115e147d482c544bdee6c2b57/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftabs%2FTabLayout.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/823c34a90c97828115e147d482c544bdee6c2b57/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftabs%2FTabLayout.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftabs%2FTabLayout.java?ref=823c34a90c97828115e147d482c544bdee6c2b57",
      "patch": "@@ -689,7 +689,7 @@ public void setScrollPosition(\n     if (scrollAnimator != null && scrollAnimator.isRunning()) {\n       scrollAnimator.cancel();\n     }\n-    scrollTo(calculateScrollXForTab(position, positionOffset), 0);\n+    scrollTo(position < 0 ? 0 : calculateScrollXForTab(position, positionOffset), 0);\n \n     // Update the 'selected state' view as we scroll, if enabled\n     if (updateSelectedText) {\n@@ -1881,11 +1881,14 @@ private void dispatchTabReselected(@NonNull final Tab tab) {\n   private int calculateScrollXForTab(int position, float positionOffset) {\n     if (mode == MODE_SCROLLABLE || mode == MODE_AUTO) {\n       final View selectedChild = slidingTabIndicator.getChildAt(position);\n+      if (selectedChild == null) {\n+        return 0;\n+      }\n       final View nextChild =\n           position + 1 < slidingTabIndicator.getChildCount()\n               ? slidingTabIndicator.getChildAt(position + 1)\n               : null;\n-      final int selectedWidth = selectedChild != null ? selectedChild.getWidth() : 0;\n+      final int selectedWidth = selectedChild.getWidth();\n       final int nextWidth = nextChild != null ? nextChild.getWidth() : 0;\n \n       // base scroll amount: places center of tab in center of parent",
      "parent_sha": "283715d348a3fb9c487469d6f2749727b0705710"
    }
  },
  {
    "oid": "9bf5eddd8a181793d9818f12a1522c69fd9c1b36",
    "message": "[Slider] Make sure label is removed with slider is hidden\n\nResolves https://github.com/material-components/material-components-android/issues/4319\nResolves https://github.com/material-components/material-components-android/pull/4320\n\nGIT_ORIGIN_REV_ID=6b96f2d40b77900b3479e3af61d3fa6f7c3e7c9d\nPiperOrigin-RevId: 684473315",
    "date": "2024-10-14T16:33:10Z",
    "url": "https://github.com/material-components/material-components-android/commit/9bf5eddd8a181793d9818f12a1522c69fd9c1b36",
    "details": {
      "sha": "9008cc181a85e28b06a51cb39a7c2deeef1f1c0d",
      "filename": "lib/java/com/google/android/material/slider/BaseSlider.java",
      "status": "modified",
      "additions": 22,
      "deletions": 1,
      "changes": 23,
      "blob_url": "https://github.com/material-components/material-components-android/blob/9bf5eddd8a181793d9818f12a1522c69fd9c1b36/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fslider%2FBaseSlider.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/9bf5eddd8a181793d9818f12a1522c69fd9c1b36/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fslider%2FBaseSlider.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fslider%2FBaseSlider.java?ref=9bf5eddd8a181793d9818f12a1522c69fd9c1b36",
      "patch": "@@ -370,6 +370,8 @@ abstract class BaseSlider<\n         invalidate();\n       };\n \n+  private boolean thisAndAncestorsVisible;\n+\n   /**\n    * Determines the behavior of the label which can be any of the following.\n    *\n@@ -406,6 +408,9 @@ public BaseSlider(\n     // Ensure we are using the correctly themed context rather than the context that was passed in.\n     context = getContext();\n \n+    // Initialize with just this view's visibility.\n+    thisAndAncestorsVisible = isShown();\n+\n     inactiveTrackPaint = new Paint();\n     activeTrackPaint = new Paint();\n \n@@ -1914,6 +1919,10 @@ public void setEnabled(boolean enabled) {\n   @Override\n   protected void onAttachedToWindow() {\n     super.onAttachedToWindow();\n+\n+    // Update factoring in the visibility of all ancestors.\n+    thisAndAncestorsVisible = isShown();\n+\n     getViewTreeObserver().addOnScrollChangedListener(onScrollChangedListener);\n     getViewTreeObserver().addOnGlobalLayoutListener(onGlobalLayoutListener);\n     // The label is attached on the Overlay relative to the content.\n@@ -2705,7 +2714,19 @@ private void updateLabels() {\n   private boolean isSliderVisibleOnScreen() {\n     final Rect contentViewBounds = new Rect();\n     ViewUtils.getContentView(this).getHitRect(contentViewBounds);\n-    return getLocalVisibleRect(contentViewBounds);\n+    return getLocalVisibleRect(contentViewBounds) && isThisAndAncestorsVisible();\n+  }\n+\n+  private boolean isThisAndAncestorsVisible() {\n+    // onVisibilityAggregated is only available on N+ devices, so on pre-N devices we check if this\n+    // view and its ancestors are visible each time, in case one of the visibilities has changed.\n+    return (VERSION.SDK_INT >= VERSION_CODES.N) ? thisAndAncestorsVisible : isShown();\n+  }\n+\n+  @Override\n+  public void onVisibilityAggregated(boolean isVisible) {\n+    super.onVisibilityAggregated(isVisible);\n+    this.thisAndAncestorsVisible = isVisible;\n   }\n \n   private void ensureLabelsRemoved() {",
      "parent_sha": "6bacb5ab22750708b6312e33c786392e7718b09a"
    }
  },
  {
    "oid": "a1f27dfe0b35cf4a05da07d116f1a1f8e769b776",
    "message": "Fix AppBarLayout generics to allow for widget migration\n\nPiperOrigin-RevId: 191439480",
    "date": "2018-04-03T16:09:41Z",
    "url": "https://github.com/material-components/material-components-android/commit/a1f27dfe0b35cf4a05da07d116f1a1f8e769b776",
    "details": {
      "sha": "6719731a4d75e54180c0b7ac90ac33b93ea15fb8",
      "filename": "lib/java/android/support/design/appbar/AppBarLayout.java",
      "status": "modified",
      "additions": 19,
      "deletions": 16,
      "changes": 35,
      "blob_url": "https://github.com/material-components/material-components-android/blob/a1f27dfe0b35cf4a05da07d116f1a1f8e769b776/lib%2Fjava%2Fandroid%2Fsupport%2Fdesign%2Fappbar%2FAppBarLayout.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/a1f27dfe0b35cf4a05da07d116f1a1f8e769b776/lib%2Fjava%2Fandroid%2Fsupport%2Fdesign%2Fappbar%2FAppBarLayout.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fandroid%2Fsupport%2Fdesign%2Fappbar%2FAppBarLayout.java?ref=a1f27dfe0b35cf4a05da07d116f1a1f8e769b776",
      "patch": "@@ -799,7 +799,8 @@ public static class Behavior<T extends AppBarLayout> extends HeaderBehavior<T> {\n     private static final int INVALID_POSITION = -1;\n \n     /** Callback to allow control over any {@link AppBarLayout} dragging. */\n-    public abstract static class DragCallback {\n+    //TODO: remove this base class and genertic type after the widet migration\n+    public abstract static class BaseDragCallback<T extends AppBarLayout> {\n       /**\n        * Allows control over whether the given {@link AppBarLayout} can be dragged or not.\n        *\n@@ -808,7 +809,12 @@ public abstract static class DragCallback {\n        *\n        * @return true if we are in a position to scroll the AppBarLayout via a drag, false if not.\n        */\n-      public abstract boolean canDrag(@NonNull AppBarLayout appBarLayout);\n+      public abstract boolean canDrag(@NonNull T appBarLayout);\n+    }\n+\n+    /** Callback to allow control over any {@link AppBarLayout} dragging. */\n+    public abstract static class DragCallback extends BaseDragCallback<AppBarLayout> {\n+\n     }\n \n     private int offsetDelta;\n@@ -822,7 +828,7 @@ public abstract static class DragCallback {\n     private float offsetToChildIndexOnLayoutPerc;\n \n     private WeakReference<View> lastNestedScrollingChildRef;\n-    private DragCallback onDragCallback;\n+    private BaseDragCallback onDragCallback;\n \n     public Behavior() {}\n \n@@ -833,7 +839,7 @@ public Behavior(Context context, AttributeSet attrs) {\n     @Override\n     public boolean onStartNestedScroll(\n         CoordinatorLayout parent,\n-        AppBarLayout child,\n+        T child,\n         View directTargetChild,\n         View target,\n         int nestedScrollAxes,\n@@ -936,10 +942,7 @@ public void onStopNestedScroll(\n      *\n      * @param callback the callback to use, or {@code null} to use the default behavior.\n      */\n-    // TODO: change back to setDragCallback once the widget migration is done\n-    // This needs to be changed since some callers pass null, and the overriding wrapper class\n-    // declares its own version of this method.\n-    public void setDragCallbackInternal(@Nullable DragCallback callback) {\n+    public void setDragCallback(@Nullable BaseDragCallback callback) {\n       onDragCallback = callback;\n     }\n \n@@ -995,7 +998,7 @@ public void onAnimationUpdate(ValueAnimator animator) {\n       offsetAnimator.start();\n     }\n \n-    private int getChildIndexOnOffset(AppBarLayout abl, final int offset) {\n+    private int getChildIndexOnOffset(T abl, final int offset) {\n       for (int i = 0, count = abl.getChildCount(); i < count; i++) {\n         View child = abl.getChildAt(i);\n         int top = child.getTop();\n@@ -1155,7 +1158,7 @@ public boolean onLayoutChild(CoordinatorLayout parent, T abl, int layoutDirectio\n     }\n \n     @Override\n-    boolean canDragView(AppBarLayout view) {\n+    boolean canDragView(T view) {\n       if (onDragCallback != null) {\n         // If there is a drag callback set, it's in control\n         return onDragCallback.canDrag(view);\n@@ -1181,19 +1184,19 @@ void onFlingFinished(CoordinatorLayout parent, T layout) {\n     }\n \n     @Override\n-    int getMaxDragOffset(AppBarLayout view) {\n+    int getMaxDragOffset(T view) {\n       return -view.getDownNestedScrollRange();\n     }\n \n     @Override\n-    int getScrollRangeForDragFling(AppBarLayout view) {\n+    int getScrollRangeForDragFling(T view) {\n       return view.getTotalScrollRange();\n     }\n \n     @Override\n     int setHeaderTopBottomOffset(\n         CoordinatorLayout coordinatorLayout,\n-        AppBarLayout appBarLayout,\n+        T appBarLayout,\n         int newOffset,\n         int minOffset,\n         int maxOffset) {\n@@ -1249,7 +1252,7 @@ boolean isOffsetAnimatorRunning() {\n       return offsetAnimator != null && offsetAnimator.isRunning();\n     }\n \n-    private int interpolateOffset(AppBarLayout layout, final int offset) {\n+    private int interpolateOffset(T layout, final int offset) {\n       final int absOffset = Math.abs(offset);\n \n       for (int i = 0, z = layout.getChildCount(); i < z; i++) {\n@@ -1299,7 +1302,7 @@ private int interpolateOffset(AppBarLayout layout, final int offset) {\n \n     private void updateAppBarLayoutDrawableState(\n         final CoordinatorLayout parent,\n-        final AppBarLayout layout,\n+        final T layout,\n         final int offset,\n         final int direction,\n         final boolean forceJump) {\n@@ -1338,7 +1341,7 @@ private void updateAppBarLayoutDrawableState(\n       }\n     }\n \n-    private boolean shouldJumpElevationState(CoordinatorLayout parent, AppBarLayout layout) {\n+    private boolean shouldJumpElevationState(CoordinatorLayout parent, T layout) {\n       // We should jump the elevated state if we have a dependent scrolling view which has\n       // an overlapping top (i.e. overlaps us)\n       final List<View> dependencies = parent.getDependents(layout);",
      "parent_sha": "3ea78dd02b052fd57e1ee8e220a6643f33370a97"
    }
  },
  {
    "oid": "34e9ab24fb85bf2f2fe98b97097093447b6584a7",
    "message": "Only make filled text field hint vertically centered if edit text's min lines is 1.\nIn APIs > 15.\n\nPiperOrigin-RevId: 252630869",
    "date": "2019-06-18T15:56:16Z",
    "url": "https://github.com/material-components/material-components-android/commit/34e9ab24fb85bf2f2fe98b97097093447b6584a7",
    "details": {
      "sha": "4b50d08b898670d1d0b4d7216f298dbbc0a92560",
      "filename": "lib/java/com/google/android/material/textfield/TextInputLayout.java",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/material-components/material-components-android/blob/34e9ab24fb85bf2f2fe98b97097093447b6584a7/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftextfield%2FTextInputLayout.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/34e9ab24fb85bf2f2fe98b97097093447b6584a7/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftextfield%2FTextInputLayout.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftextfield%2FTextInputLayout.java?ref=34e9ab24fb85bf2f2fe98b97097093447b6584a7",
      "patch": "@@ -1800,7 +1800,7 @@ private Rect calculateExpandedTextBounds(Rect rect) {\n   }\n \n   private int calculateExpandedLabelTop(Rect rect, float labelHeight) {\n-    if (boxBackgroundMode == BOX_BACKGROUND_FILLED) {\n+    if (isSingleLineFilledTextField()) {\n       return (int) (rect.centerY() - labelHeight / 2);\n     }\n     return rect.top + editText.getCompoundPaddingTop();\n@@ -1816,6 +1816,11 @@ private int calculateExpandedLabelBottom(Rect rect, Rect bounds, float labelHeig\n     return rect.bottom - editText.getCompoundPaddingBottom();\n   }\n \n+  private boolean isSingleLineFilledTextField() {\n+    return boxBackgroundMode == BOX_BACKGROUND_FILLED\n+        && (VERSION.SDK_INT < 16 || editText.getMinLines() <= 1);\n+  }\n+\n   /*\n    * Calculates the box background color that should be set.\n    *",
      "parent_sha": "591ba96852884a7dc747a0524a9a7fdb4447ac43"
    }
  },
  {
    "oid": "7fedc07c134efd12691ff972f0c0821e38d720b2",
    "message": "am 16a39d79: am 956db7bf: Merge \"Fix AppBarLayout not being scrollable with fitSystemWindows=true\" into mnc-ub-dev\n\n* commit '16a39d7925d322562e1e5651dbe938697d2d38ad':\n  Fix AppBarLayout not being scrollable with fitSystemWindows=true\n\nGitOrigin-RevId=38bce2dcd0812fa91b32ae30402659916c770315\n\nPiperOrigin-RevId: 140550215",
    "date": "2016-12-12T23:39:28Z",
    "url": "https://github.com/material-components/material-components-android/commit/7fedc07c134efd12691ff972f0c0821e38d720b2",
    "details": {
      "sha": "d0b5309b1978d0c64321f04dd6876c979729a622",
      "filename": "src/android/support/design/widget/AppBarLayout.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/material-components/material-components-android/blob/7fedc07c134efd12691ff972f0c0821e38d720b2/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FAppBarLayout.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/7fedc07c134efd12691ff972f0c0821e38d720b2/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FAppBarLayout.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FAppBarLayout.java?ref=7fedc07c134efd12691ff972f0c0821e38d720b2",
      "patch": "@@ -415,7 +415,7 @@ private int getDownNestedScrollRange() {\n                 break;\n             }\n         }\n-        return mDownScrollRange = Math.max(0, range - getTopInset());\n+        return mDownScrollRange = Math.max(0, range);\n     }\n \n     final int getMinimumHeightForVisibleOverlappingContent() {",
      "parent_sha": "93dbe21a62d37e0298bb5cbedbc932d79f14a051"
    }
  },
  {
    "oid": "b8c9f4949db9312003cc46e6ca59e480b6d53a3b",
    "message": "[MaterialShapeDrawable] Move static paint initialization to static block\n\nPiperOrigin-RevId: 374650659",
    "date": "2021-05-19T17:59:31Z",
    "url": "https://github.com/material-components/material-components-android/commit/b8c9f4949db9312003cc46e6ca59e480b6d53a3b",
    "details": {
      "sha": "8a730b3f9b6b2c9fd7fc447accaf32218d559bb4",
      "filename": "lib/java/com/google/android/material/shape/MaterialShapeDrawable.java",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/material-components/material-components-android/blob/b8c9f4949db9312003cc46e6ca59e480b6d53a3b/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fshape%2FMaterialShapeDrawable.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/b8c9f4949db9312003cc46e6ca59e480b6d53a3b/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fshape%2FMaterialShapeDrawable.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fshape%2FMaterialShapeDrawable.java?ref=b8c9f4949db9312003cc46e6ca59e480b6d53a3b",
      "patch": "@@ -107,6 +107,10 @@ public class MaterialShapeDrawable extends Drawable implements TintAwareDrawable\n   public @interface CompatibilityShadowMode {}\n \n   private static final Paint clearPaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n+  static {\n+    clearPaint.setColor(Color.WHITE);\n+    clearPaint.setXfermode(new PorterDuffXfermode(Mode.DST_OUT));\n+  }\n \n   private MaterialShapeDrawableState drawableState;\n \n@@ -206,8 +210,6 @@ private MaterialShapeDrawable(@NonNull MaterialShapeDrawableState drawableState)\n     this.drawableState = drawableState;\n     strokePaint.setStyle(Style.STROKE);\n     fillPaint.setStyle(Style.FILL);\n-    clearPaint.setColor(Color.WHITE);\n-    clearPaint.setXfermode(new PorterDuffXfermode(Mode.DST_OUT));\n     updateTintFilter();\n     updateColorsForState(getState());\n     // Listens to additions of corners and edges, to create the shadow operations.",
      "parent_sha": "832e43f7a5d2fafaa8218de7ab01761655e18e28"
    }
  },
  {
    "oid": "5bcae74813bd0359741defe9c882eccfebb776b9",
    "message": "[Button] Updated spring specs for responsive touch.\n\nPiperOrigin-RevId: 660117556",
    "date": "2024-08-07T13:57:49Z",
    "url": "https://github.com/material-components/material-components-android/commit/5bcae74813bd0359741defe9c882eccfebb776b9",
    "details": {
      "sha": "323421f1ec4ede13981922bda7ea5f5d3e927d3a",
      "filename": "lib/java/com/google/android/material/button/MaterialButton.java",
      "status": "modified",
      "additions": 3,
      "deletions": 5,
      "changes": 8,
      "blob_url": "https://github.com/material-components/material-components-android/blob/5bcae74813bd0359741defe9c882eccfebb776b9/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbutton%2FMaterialButton.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/5bcae74813bd0359741defe9c882eccfebb776b9/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbutton%2FMaterialButton.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbutton%2FMaterialButton.java?ref=5bcae74813bd0359741defe9c882eccfebb776b9",
      "patch": "@@ -204,9 +204,8 @@ interface OnPressedChangeListener {\n \n   private static final int DEF_STYLE_RES = R.style.Widget_MaterialComponents_Button;\n \n-  private static final float TOGGLE_BUTTON_SPRING_DAMPING = 0.8f;\n-  private static final float DEFAULT_BUTTON_CORNER_SPRING_DAMPING = 0.5f;\n-  private static final float DEFAULT_BUTTON_SPRING_STIFFNESS = 800;\n+  private static final float DEFAULT_BUTTON_CORNER_SPRING_DAMPING = 0.8f;\n+  private static final float DEFAULT_BUTTON_SPRING_STIFFNESS = 380;\n \n   @NonNull private final MaterialButtonHelper materialButtonHelper;\n \n@@ -283,8 +282,7 @@ public MaterialButton(@NonNull Context context, @Nullable AttributeSet attrs, in\n \n   private SpringForce createSpringForce() {\n     return new SpringForce()\n-        .setDampingRatio(\n-            isCheckable() ? TOGGLE_BUTTON_SPRING_DAMPING : DEFAULT_BUTTON_CORNER_SPRING_DAMPING)\n+        .setDampingRatio(DEFAULT_BUTTON_CORNER_SPRING_DAMPING)\n         .setStiffness(DEFAULT_BUTTON_SPRING_STIFFNESS);\n   }\n ",
      "parent_sha": "b36919f203c9a37062c89e136eb78fd73f961082"
    }
  },
  {
    "oid": "e8e901ecd40a9382a4584d2296e754b417ac7220",
    "message": "[BottomNavigation] When setting the CollectionItemInfo on a BottomNavigationItemView, figure out its position amongst the visible menu items instead of using its item position.\n\nPiperOrigin-RevId: 328923164",
    "date": "2020-08-28T14:12:15Z",
    "url": "https://github.com/material-components/material-components-android/commit/e8e901ecd40a9382a4584d2296e754b417ac7220",
    "details": {
      "sha": "03736edb6892cc95438ed19983478f8889b7df18",
      "filename": "lib/java/com/google/android/material/bottomnavigation/BottomNavigationItemView.java",
      "status": "modified",
      "additions": 20,
      "deletions": 1,
      "changes": 21,
      "blob_url": "https://github.com/material-components/material-components-android/blob/e8e901ecd40a9382a4584d2296e754b417ac7220/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbottomnavigation%2FBottomNavigationItemView.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/e8e901ecd40a9382a4584d2296e754b417ac7220/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbottomnavigation%2FBottomNavigationItemView.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbottomnavigation%2FBottomNavigationItemView.java?ref=e8e901ecd40a9382a4584d2296e754b417ac7220",
      "patch": "@@ -39,6 +39,7 @@\n import android.view.Gravity;\n import android.view.LayoutInflater;\n import android.view.View;\n+import android.view.ViewGroup;\n import android.view.accessibility.AccessibilityNodeInfo;\n import android.widget.FrameLayout;\n import android.widget.ImageView;\n@@ -292,7 +293,7 @@ public void onInitializeAccessibilityNodeInfo(@NonNull AccessibilityNodeInfo inf\n         CollectionItemInfoCompat.obtain(\n             /* rowIndex= */ 0,\n             /* rowSpan= */ 1,\n-            /* columnIndex= */ getItemPosition(),\n+            /* columnIndex= */ getItemVisiblePosition(),\n             /* columnSpan= */ 1,\n             /* heading= */ false,\n             /* selected= */ isSelected()));\n@@ -303,6 +304,24 @@ public void onInitializeAccessibilityNodeInfo(@NonNull AccessibilityNodeInfo inf\n     infoCompat.setRoleDescription(getResources().getString(R.string.item_view_role_description));\n   }\n \n+  /**\n+   * Iterate through all the preceding bottom navigating items to determine this item's visible\n+   * position.\n+   * @return This item's visible position in a bottom navigation.\n+   */\n+  private int getItemVisiblePosition() {\n+    ViewGroup parent = (ViewGroup) getParent();\n+    int index = parent.indexOfChild(this);\n+    int visiblePosition = 0;\n+    for (int i = 0; i < index; i++) {\n+      View child = parent.getChildAt(i);\n+      if (child instanceof BottomNavigationItemView && child.getVisibility() == View.VISIBLE) {\n+        visiblePosition++;\n+      }\n+    }\n+    return visiblePosition;\n+  }\n+\n   private void setViewLayoutParams(@NonNull View view, int topMargin, int gravity) {\n     LayoutParams viewParams = (LayoutParams) view.getLayoutParams();\n     viewParams.topMargin = topMargin;",
      "parent_sha": "77c71f389e75f05a1cc43db279991f4cd40e2fa4"
    }
  },
  {
    "oid": "e944d1b2a6ee5d9d5a338de0c0061f7b02790f77",
    "message": "[BottomSheet] Fixed issue where peekHeight is more than the height of the contents\n\nPiperOrigin-RevId: 329722448",
    "date": "2020-09-02T17:29:54Z",
    "url": "https://github.com/material-components/material-components-android/commit/e944d1b2a6ee5d9d5a338de0c0061f7b02790f77",
    "details": {
      "sha": "f7138ef3010d6968dba45e853fff23f93d750a15",
      "filename": "lib/java/com/google/android/material/bottomsheet/BottomSheetBehavior.java",
      "status": "modified",
      "additions": 11,
      "deletions": 5,
      "changes": 16,
      "blob_url": "https://github.com/material-components/material-components-android/blob/e944d1b2a6ee5d9d5a338de0c0061f7b02790f77/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbottomsheet%2FBottomSheetBehavior.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/e944d1b2a6ee5d9d5a338de0c0061f7b02790f77/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbottomsheet%2FBottomSheetBehavior.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbottomsheet%2FBottomSheetBehavior.java?ref=e944d1b2a6ee5d9d5a338de0c0061f7b02790f77",
      "patch": "@@ -19,6 +19,8 @@\n import com.google.android.material.R;\n \n import static androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP;\n+import static java.lang.Math.max;\n+import static java.lang.Math.min;\n \n import android.animation.ValueAnimator;\n import android.animation.ValueAnimator.AnimatorUpdateListener;\n@@ -79,6 +81,7 @@\n  */\n public class BottomSheetBehavior<V extends View> extends CoordinatorLayout.Behavior<V> {\n \n+\n   /** Callback for monitoring events about bottom sheets. */\n   public abstract static class BottomSheetCallback {\n \n@@ -256,6 +259,7 @@ public abstract static class BottomSheetCallback {\n \n   private boolean nestedScrolled;\n \n+  private int childHeight;\n   int parentWidth;\n   int parentHeight;\n \n@@ -416,7 +420,8 @@ public boolean onLayoutChild(\n     // Offset the bottom sheet\n     parentWidth = parent.getWidth();\n     parentHeight = parent.getHeight();\n-    fitToContentsOffset = Math.max(0, parentHeight - child.getHeight());\n+    childHeight = child.getHeight();\n+    fitToContentsOffset = max(0, parentHeight - childHeight);\n     calculateHalfExpandedOffset();\n     calculateCollapsedOffset();\n \n@@ -777,7 +782,7 @@ public final void setPeekHeight(int peekHeight, boolean animate) {\n       }\n     } else if (peekHeightAuto || this.peekHeight != peekHeight) {\n       peekHeightAuto = false;\n-      this.peekHeight = Math.max(0, peekHeight);\n+      this.peekHeight = max(0, peekHeight);\n       layout = true;\n     }\n     // If sheet is already laid out, recalculate the collapsed offset based on new setting.\n@@ -1135,10 +1140,11 @@ private void updateDrawableForTargetState(@State int state) {\n \n   private int calculatePeekHeight() {\n     if (peekHeightAuto) {\n-      return Math.max(peekHeightMin, parentHeight - parentWidth * 9 / 16);\n+      int desiredHeight = max(peekHeightMin, parentHeight - parentWidth * 9 / 16);\n+      return min(desiredHeight, childHeight);\n     }\n     if (!gestureInsetBottomIgnored && gestureInsetBottom > 0) {\n-      return Math.max(peekHeight, gestureInsetBottom + peekHeightGestureInsetBuffer);\n+      return max(peekHeight, gestureInsetBottom + peekHeightGestureInsetBuffer);\n     }\n     return peekHeight;\n   }\n@@ -1147,7 +1153,7 @@ private void calculateCollapsedOffset() {\n     int peek = calculatePeekHeight();\n \n     if (fitToContents) {\n-      collapsedOffset = Math.max(parentHeight - peek, fitToContentsOffset);\n+      collapsedOffset = max(parentHeight - peek, fitToContentsOffset);\n     } else {\n       collapsedOffset = parentHeight - peek;\n     }",
      "parent_sha": "4f5e045a4b06cb1fe865069a1fc0cac433cce685"
    }
  },
  {
    "oid": "1e2bde215dfbe563dec490e1e963e60278b01e3d",
    "message": "Prevent several calendar views being layed on top of each other on rotation changes\n\nPiperOrigin-RevId: 241933297",
    "date": "2019-04-05T19:50:53Z",
    "url": "https://github.com/material-components/material-components-android/commit/1e2bde215dfbe563dec490e1e963e60278b01e3d",
    "details": {
      "sha": "b4d498701de7f3a6e6e5aae55918fb2b1644eb25",
      "filename": "lib/java/com/google/android/material/picker/MaterialPickerDialogFragment.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/material-components/material-components-android/blob/1e2bde215dfbe563dec490e1e963e60278b01e3d/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fpicker%2FMaterialPickerDialogFragment.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/1e2bde215dfbe563dec490e1e963e60278b01e3d/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fpicker%2FMaterialPickerDialogFragment.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fpicker%2FMaterialPickerDialogFragment.java?ref=1e2bde215dfbe563dec490e1e963e60278b01e3d",
      "patch": "@@ -144,10 +144,10 @@ public void onClick(View v) {\n   }\n \n   @Override\n-  public void onActivityCreated(@Nullable Bundle bundle) {\n-    super.onActivityCreated(bundle);\n+  public void onViewCreated(@NonNull View view, @Nullable Bundle bundle) {\n+    super.onViewCreated(view, bundle);\n     FragmentTransaction fragmentTransaction = getChildFragmentManager().beginTransaction();\n-    fragmentTransaction.add(R.id.calendar_frame, materialCalendar);\n+    fragmentTransaction.replace(R.id.calendar_frame, materialCalendar);\n     fragmentTransaction.commit();\n   }\n ",
      "parent_sha": "35a1401a5202bf5cd0c646440e07d279dd0b4367"
    }
  },
  {
    "oid": "ac1b2a0a2619b23e1ae3ab9e8debb36193735fff",
    "message": "Add javadoc for BadgeDrawable.\n\nPiperOrigin-RevId: 243312323",
    "date": "2019-04-19T19:58:20Z",
    "url": "https://github.com/material-components/material-components-android/commit/ac1b2a0a2619b23e1ae3ab9e8debb36193735fff",
    "details": {
      "sha": "088fa9ec6ba9f14c63ee31a26e9dee125f8df248",
      "filename": "lib/java/com/google/android/material/badge/BadgeDrawable.java",
      "status": "modified",
      "additions": 37,
      "deletions": 2,
      "changes": 39,
      "blob_url": "https://github.com/material-components/material-components-android/blob/ac1b2a0a2619b23e1ae3ab9e8debb36193735fff/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbadge%2FBadgeDrawable.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/ac1b2a0a2619b23e1ae3ab9e8debb36193735fff/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbadge%2FBadgeDrawable.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbadge%2FBadgeDrawable.java?ref=ac1b2a0a2619b23e1ae3ab9e8debb36193735fff",
      "patch": "@@ -57,10 +57,45 @@\n /**\n  * BadgeDrawable contains all the layout and draw logic for a badge.\n  *\n+ * <p>You can use {@code BadgeDrawable} to display dynamic information such as a number of pending\n+ * requests in a {@link com.google.android.material.bottomnavigation.BottomNavigationView}. To create an\n+ * instance of {@code BadgeDrawable}, use {@link #create(Context)} or {@link\n+ * #createFromAttributes(Context, AttributeSet, int, int)}. How to add and display a {@code\n+ * BadgeDrawable} on top of its anchor view depends on the API level:\n+ *\n+ * <p>For API 18+ (APIs supported by {@link android.view.ViewOverlay})\n+ *\n+ * <ul>\n+ *   <li>Add {@code BadgeDrawable} as a {@link android.view.ViewOverlay} to the desired anchor view\n+ *       using {@link BadgeUtils#attachBadgeDrawable(BadgeDrawable, View, FrameLayout)}.\n+ *   <li>Update the {@code BadgeDrawable BadgeDrawable's} coordinates (center and bounds) based on\n+ *       its anchor view using {@link #updateBadgeCoordinates(View, ViewGroup)}.\n+ * </ul>\n+ *\n+ * <pre>\n+ * BadgeDrawable badgeDrawable = BadgeDrawable.create(context);\n+ * BadgeUtils.attachBadgeDrawable(badgeDrawable, anchor, null);\n+ * badgeDrawable.updateBadgeCoordinates(anchor, null);\n+ * </pre>\n+ *\n+ * <p>For Pre API-18\n+ *\n+ * <ul>\n+ *   <li>Set {@code BadgeDrawable} as the foreground of the anchor view's FrameLayout ancestor using\n+ *       {@link BadgeUtils#attachBadgeDrawable(BadgeDrawable, View, FrameLayout)}.\n+ *   <li>Update the {@code BadgeDrawable BadgeDrawable's} coordinates (center and bounds) based on\n+ *       its anchor view (relative to its FrameLayout ancestor's coordinate space), using {@link\n+ *       #updateBadgeCoordinates(View, ViewGroup)}.\n+ * </ul>\n+ *\n+ * <pre>\n+ * BadgeDrawable badgeDrawable = BadgeDrawable.create(context);\n+ * BadgeUtils.attachBadgeDrawable(badgeDrawable, anchor, anchorFrameLayoutParent);\n+ * badgeDrawable.updateBadgeCoordinates(anchor, anchorFrameLayoutParent);\n+ * </pre>\n+ *\n  * @hide\n  */\n-// TODO: Add information and example about how to use BadgeDrawable (specifically pre-18\n-// vs later).\n @RestrictTo(Scope.LIBRARY)\n public class BadgeDrawable extends Drawable implements TextDrawableDelegate {\n   private final Context context;",
      "parent_sha": "18b8ddaf23ad0cf7a376d1dce93aa3972758c7b0"
    }
  },
  {
    "oid": "c6309e10080da608ea2262e9159fa13ec3c5ad0a",
    "message": "Merge \"Fix Tab indicator animation glitch\" into mnc-ub-dev am: 00e31b4549\nam: 691750cc2e\n\n* commit '691750cc2e2d01d7612297f1d6dc94d5361646b1':\n  Fix Tab indicator animation glitch\n\nGitOrigin-RevId=5829654ae299811962991dcafdd75bbbd37d0bb0\n\nPiperOrigin-RevId: 140551294",
    "date": "2016-12-12T23:42:40Z",
    "url": "https://github.com/material-components/material-components-android/commit/c6309e10080da608ea2262e9159fa13ec3c5ad0a",
    "details": {
      "sha": "564069261b40293d8ee48e656aab3a955a836d7b",
      "filename": "src/android/support/design/widget/TabLayout.java",
      "status": "modified",
      "additions": 40,
      "deletions": 23,
      "changes": 63,
      "blob_url": "https://github.com/material-components/material-components-android/blob/c6309e10080da608ea2262e9159fa13ec3c5ad0a/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTabLayout.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/c6309e10080da608ea2262e9159fa13ec3c5ad0a/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTabLayout.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTabLayout.java?ref=c6309e10080da608ea2262e9159fa13ec3c5ad0a",
      "patch": "@@ -215,7 +215,6 @@ public interface OnTabSelectedListener {\n     private View.OnClickListener mTabClickListener;\n \n     private ValueAnimatorCompat mScrollAnimator;\n-    private ValueAnimatorCompat mIndicatorAnimator;\n \n     public TabLayout(Context context) {\n         this(context, null);\n@@ -329,20 +328,30 @@ public void setSelectedTabIndicatorHeight(int height) {\n      * @param updateSelectedText Whether to update the text's selected state.\n      */\n     public void setScrollPosition(int position, float positionOffset, boolean updateSelectedText) {\n-        if (mIndicatorAnimator != null && mIndicatorAnimator.isRunning()) {\n+        setScrollPosition(position, positionOffset, updateSelectedText, true);\n+    }\n+\n+    private void setScrollPosition(int position, float positionOffset, boolean updateSelectedText,\n+            boolean updateIndicatorPosition) {\n+        final int roundedPosition = Math.round(position + positionOffset);\n+        if (roundedPosition < 0 || roundedPosition >= mTabStrip.getChildCount()) {\n             return;\n         }\n-        if (position < 0 || position >= mTabStrip.getChildCount()) {\n-            return;\n+\n+        // Set the indicator position, if enabled\n+        if (updateIndicatorPosition) {\n+            mTabStrip.setIndicatorPositionFromTabPosition(position, positionOffset);\n         }\n \n-        // Set the indicator position and update the scroll to match\n-        mTabStrip.setIndicatorPositionFromTabPosition(position, positionOffset);\n+        // Now update the scroll position, canceling any running animation\n+        if (mScrollAnimator != null && mScrollAnimator.isRunning()) {\n+            mScrollAnimator.cancel();\n+        }\n         scrollTo(calculateScrollXForTab(position, positionOffset), 0);\n \n-        // Update the 'selected state' view as we scroll\n+        // Update the 'selected state' view as we scroll, if enabled\n         if (updateSelectedText) {\n-            setSelectedTabView(Math.round(position + positionOffset));\n+            setSelectedTabView(roundedPosition);\n         }\n     }\n \n@@ -1443,7 +1452,7 @@ private class SlidingTabStrip extends LinearLayout {\n         private int mIndicatorLeft = -1;\n         private int mIndicatorRight = -1;\n \n-        private ValueAnimatorCompat mCurrentAnimator;\n+        private ValueAnimatorCompat mIndicatorAnimator;\n \n         SlidingTabStrip(Context context) {\n             super(context);\n@@ -1476,6 +1485,10 @@ boolean childrenNeedLayout() {\n         }\n \n         void setIndicatorPositionFromTabPosition(int position, float positionOffset) {\n+            if (mIndicatorAnimator != null && mIndicatorAnimator.isRunning()) {\n+                mIndicatorAnimator.cancel();\n+            }\n+\n             mSelectedPosition = position;\n             mSelectionOffset = positionOffset;\n             updateIndicatorPosition();\n@@ -1546,13 +1559,13 @@ protected void onMeasure(final int widthMeasureSpec, final int heightMeasureSpec\n         protected void onLayout(boolean changed, int l, int t, int r, int b) {\n             super.onLayout(changed, l, t, r, b);\n \n-            if (mCurrentAnimator != null && mCurrentAnimator.isRunning()) {\n+            if (mIndicatorAnimator != null && mIndicatorAnimator.isRunning()) {\n                 // If we're currently running an animation, lets cancel it and start a\n                 // new animation with the remaining duration\n-                mCurrentAnimator.cancel();\n-                final long duration = mCurrentAnimator.getDuration();\n+                mIndicatorAnimator.cancel();\n+                final long duration = mIndicatorAnimator.getDuration();\n                 animateIndicatorToPosition(mSelectedPosition,\n-                        Math.round((1f - mCurrentAnimator.getAnimatedFraction()) * duration));\n+                        Math.round((1f - mIndicatorAnimator.getAnimatedFraction()) * duration));\n             } else {\n                 // If we've been layed out, update the indicator position\n                 updateIndicatorPosition();\n@@ -1592,6 +1605,10 @@ private void setIndicatorPosition(int left, int right) {\n         }\n \n         void animateIndicatorToPosition(final int position, int duration) {\n+            if (mIndicatorAnimator != null && mIndicatorAnimator.isRunning()) {\n+                mIndicatorAnimator.cancel();\n+            }\n+\n             final boolean isRtl = ViewCompat.getLayoutDirection(this)\n                     == ViewCompat.LAYOUT_DIRECTION_RTL;\n \n@@ -1645,15 +1662,8 @@ public void onAnimationEnd(ValueAnimatorCompat animator) {\n                         mSelectedPosition = position;\n                         mSelectionOffset = 0f;\n                     }\n-\n-                    @Override\n-                    public void onAnimationCancel(ValueAnimatorCompat animator) {\n-                        mSelectedPosition = position;\n-                        mSelectionOffset = 0f;\n-                    }\n                 });\n                 animator.start();\n-                mCurrentAnimator = animator;\n             }\n         }\n \n@@ -1746,7 +1756,12 @@ public void onPageScrolled(int position, float positionOffset,\n                 final boolean updateText = (mScrollState == ViewPager.SCROLL_STATE_DRAGGING)\n                         || (mScrollState == ViewPager.SCROLL_STATE_SETTLING\n                         && mPreviousScrollState == ViewPager.SCROLL_STATE_DRAGGING);\n-                tabLayout.setScrollPosition(position, positionOffset, updateText);\n+                // Update the indicator if we're not settling after being idle. This is caused\n+                // from a setCurrentItem() call and will be handled by an animation from\n+                // onPageSelected() instead.\n+                final boolean updateIndicator = !(mScrollState == ViewPager.SCROLL_STATE_SETTLING\n+                        && mPreviousScrollState == ViewPager.SCROLL_STATE_IDLE);\n+                tabLayout.setScrollPosition(position, positionOffset, updateText, updateIndicator);\n             }\n         }\n \n@@ -1756,8 +1771,10 @@ public void onPageSelected(int position) {\n             if (tabLayout != null && tabLayout.getSelectedTabPosition() != position) {\n                 // Select the tab, only updating the indicator if we're not being dragged/settled\n                 // (since onPageScrolled will handle that).\n-                tabLayout.selectTab(tabLayout.getTabAt(position),\n-                        mScrollState == ViewPager.SCROLL_STATE_IDLE);\n+                final boolean updateIndicator = mScrollState == ViewPager.SCROLL_STATE_IDLE\n+                        || (mScrollState == ViewPager.SCROLL_STATE_SETTLING\n+                        && mPreviousScrollState == ViewPager.SCROLL_STATE_IDLE);\n+                tabLayout.selectTab(tabLayout.getTabAt(position), updateIndicator);\n             }\n         }\n     }",
      "parent_sha": "757c359c05d2f68088b228e05c89511204b8f7e3"
    }
  },
  {
    "oid": "fb318a293ff2cb8434946dd634f254eea6414eb8",
    "message": "Merge \"Make expanded title bounds start from top of Toolbar\" into nyc-mr1-dev\n\nGitOrigin-RevId=6f828f29f972e4af9e61cc0ae24afc1ef853fa28\n\nPiperOrigin-RevId: 140564672",
    "date": "2016-12-12T23:59:58Z",
    "url": "https://github.com/material-components/material-components-android/commit/fb318a293ff2cb8434946dd634f254eea6414eb8",
    "details": {
      "sha": "1d90a3f7563d5e05ce899e9f8b1063e90e41bd6e",
      "filename": "src/android/support/design/widget/CollapsingToolbarLayout.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/material-components/material-components-android/blob/fb318a293ff2cb8434946dd634f254eea6414eb8/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FCollapsingToolbarLayout.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/fb318a293ff2cb8434946dd634f254eea6414eb8/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FCollapsingToolbarLayout.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FCollapsingToolbarLayout.java?ref=fb318a293ff2cb8434946dd634f254eea6414eb8",
      "patch": "@@ -457,7 +457,7 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto\n                 // Update the expanded bounds\n                 mCollapsingTextHelper.setExpandedBounds(\n                         isRtl ? mExpandedMarginEnd : mExpandedMarginStart,\n-                        mExpandedMarginTop,\n+                        mTmpRect.top + mExpandedMarginTop,\n                         right - left - (isRtl ? mExpandedMarginStart : mExpandedMarginEnd),\n                         bottom - top - mExpandedMarginBottom);\n                 // Now recalculate using the new bounds",
      "parent_sha": "bc848c0149f84c92d05460daba2223c42c0f50c7"
    }
  },
  {
    "oid": "aca5307d42076910cd91bb45d69a89aedb90b81e",
    "message": "[ProgressIndicator] Changed class visibility of CircularDrawingDelegate.\n\nPiperOrigin-RevId: 322583285",
    "date": "2020-07-22T18:23:25Z",
    "url": "https://github.com/material-components/material-components-android/commit/aca5307d42076910cd91bb45d69a89aedb90b81e",
    "details": {
      "sha": "05a476ba5a6e5a861b68fea97a57b0b5af7d3ff4",
      "filename": "lib/java/com/google/android/material/progressindicator/CircularDrawingDelegate.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/material-components/material-components-android/blob/aca5307d42076910cd91bb45d69a89aedb90b81e/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fprogressindicator%2FCircularDrawingDelegate.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/aca5307d42076910cd91bb45d69a89aedb90b81e/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fprogressindicator%2FCircularDrawingDelegate.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fprogressindicator%2FCircularDrawingDelegate.java?ref=aca5307d42076910cd91bb45d69a89aedb90b81e",
      "patch": "@@ -25,7 +25,7 @@\n import androidx.annotation.NonNull;\n \n /** A delegate class to help draw the graphics for {@link ProgressIndicator} in circular types. */\n-final class CircularDrawingDelegate implements DrawingDelegate {\n+public final class CircularDrawingDelegate implements DrawingDelegate {\n \n   private RectF arcBound = new RectF();\n   // This is a factor effecting the positive direction to draw the arc. -1 if inverse; +1 otherwise.",
      "parent_sha": "4005294a75d8b791f0ac92713146936b1c3a955b"
    }
  },
  {
    "oid": "0f18d9084c13357d23b076930b4b8991a26ab074",
    "message": "Prevent setting a height less than requested by using Math.round()\n\nPiperOrigin-RevId: 290707432",
    "date": "2020-01-21T16:40:35Z",
    "url": "https://github.com/material-components/material-components-android/commit/0f18d9084c13357d23b076930b4b8991a26ab074",
    "details": {
      "sha": "05afa69287f18e5db49dfad0029f4e615b53c953",
      "filename": "lib/java/com/google/android/material/tabs/TabLayout.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/material-components/material-components-android/blob/0f18d9084c13357d23b076930b4b8991a26ab074/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftabs%2FTabLayout.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/0f18d9084c13357d23b076930b4b8991a26ab074/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftabs%2FTabLayout.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftabs%2FTabLayout.java?ref=0f18d9084c13357d23b076930b4b8991a26ab074",
      "patch": "@@ -1567,7 +1567,7 @@ protected void onDraw(@NonNull Canvas canvas) {\n   protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n     // If we have a MeasureSpec which allows us to decide our height, try and use the default\n     // height\n-    final int idealHeight = (int) ViewUtils.dpToPx(getContext(), getDefaultHeight());\n+    final int idealHeight = Math.round(ViewUtils.dpToPx(getContext(), getDefaultHeight()));\n     switch (MeasureSpec.getMode(heightMeasureSpec)) {\n       case MeasureSpec.AT_MOST:\n         if (getChildCount() == 1 && MeasureSpec.getSize(heightMeasureSpec) >= idealHeight) {",
      "parent_sha": "bd7de3d41242b3433fc623977d53657ed8839012"
    }
  },
  {
    "oid": "c695592f9032bf2a2f0903a09e05fa5719fdba78",
    "message": "Remove redeclaration of @Duration annotation from Snackbar in favor\nof inheriting it and the constant values from BaseTransientBottomBar.\n\nPiperOrigin-RevId: 255629856",
    "date": "2019-07-03T18:04:20Z",
    "url": "https://github.com/material-components/material-components-android/commit/c695592f9032bf2a2f0903a09e05fa5719fdba78",
    "details": {
      "sha": "c4dbdb446feb27b0e30cf793e4e2ed3544a89e45",
      "filename": "lib/java/com/google/android/material/snackbar/Snackbar.java",
      "status": "modified",
      "additions": 4,
      "deletions": 36,
      "changes": 40,
      "blob_url": "https://github.com/material-components/material-components-android/blob/c695592f9032bf2a2f0903a09e05fa5719fdba78/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fsnackbar%2FSnackbar.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/c695592f9032bf2a2f0903a09e05fa5719fdba78/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fsnackbar%2FSnackbar.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fsnackbar%2FSnackbar.java?ref=c695592f9032bf2a2f0903a09e05fa5719fdba78",
      "patch": "@@ -32,8 +32,6 @@\n import android.os.Build.VERSION;\n import android.os.Build.VERSION_CODES;\n import androidx.annotation.ColorInt;\n-import androidx.annotation.IntDef;\n-import androidx.annotation.IntRange;\n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n import androidx.annotation.RestrictTo;\n@@ -49,8 +47,6 @@\n import android.widget.FrameLayout;\n import android.widget.TextView;\n import androidx.coordinatorlayout.widget.CoordinatorLayout;\n-import java.lang.annotation.Retention;\n-import java.lang.annotation.RetentionPolicy;\n \n /**\n  * Snackbars provide lightweight feedback about an operation. They show a brief message at the\n@@ -72,35 +68,6 @@ public class Snackbar extends BaseTransientBottomBar<Snackbar> {\n   private final AccessibilityManager accessibilityManager;\n   private boolean hasAction;\n \n-  /** @hide */\n-  @RestrictTo(LIBRARY_GROUP)\n-  @IntDef({LENGTH_INDEFINITE, LENGTH_SHORT, LENGTH_LONG})\n-  @IntRange(from = 1)\n-  @Retention(RetentionPolicy.SOURCE)\n-  public @interface Duration {}\n-\n-  /**\n-   * Show the Snackbar indefinitely. This means that the Snackbar will be displayed from the time\n-   * that is {@link #show() shown} until either it is dismissed, or another Snackbar is shown.\n-   *\n-   * @see #setDuration\n-   */\n-  public static final int LENGTH_INDEFINITE = BaseTransientBottomBar.LENGTH_INDEFINITE;\n-\n-  /**\n-   * Show the Snackbar for a short period of time.\n-   *\n-   * @see #setDuration\n-   */\n-  public static final int LENGTH_SHORT = BaseTransientBottomBar.LENGTH_SHORT;\n-\n-  /**\n-   * Show the Snackbar for a long period of time.\n-   *\n-   * @see #setDuration\n-   */\n-  public static final int LENGTH_LONG = BaseTransientBottomBar.LENGTH_LONG;\n-\n   private static final int[] SNACKBAR_BUTTON_STYLE_ATTR = new int[] {R.attr.snackbarButtonStyle};\n \n   /**\n@@ -330,10 +297,11 @@ public Snackbar setAction(CharSequence text, final View.OnClickListener listener\n   }\n \n   @Override\n+  @Duration\n   public int getDuration() {\n     int userSetDuration = super.getDuration();\n-    if (userSetDuration == BaseTransientBottomBar.LENGTH_INDEFINITE) {\n-      return BaseTransientBottomBar.LENGTH_INDEFINITE;\n+    if (userSetDuration == LENGTH_INDEFINITE) {\n+      return LENGTH_INDEFINITE;\n     }\n \n     if (VERSION.SDK_INT >= VERSION_CODES.Q) {\n@@ -345,7 +313,7 @@ public int getDuration() {\n \n     // If touch exploration is enabled override duration to give people chance to interact.\n     return hasAction && accessibilityManager.isTouchExplorationEnabled()\n-        ? BaseTransientBottomBar.LENGTH_INDEFINITE\n+        ? LENGTH_INDEFINITE\n         : userSetDuration;\n   }\n ",
      "parent_sha": "164bf0fabdaf10ad724258c8ccc69947edff103e"
    }
  },
  {
    "oid": "248e71adb79c94cbc44eff8b2e858bd82527dd85",
    "message": "Refactor logic to set BadgeDrawable's bounds into its own method.\n\nPiperOrigin-RevId: 243326170",
    "date": "2019-04-19T19:59:16Z",
    "url": "https://github.com/material-components/material-components-android/commit/248e71adb79c94cbc44eff8b2e858bd82527dd85",
    "details": {
      "sha": "cc66c5587854ddc6561e091ea023c0f42311b60d",
      "filename": "lib/java/com/google/android/material/badge/BadgeUtils.java",
      "status": "modified",
      "additions": 20,
      "deletions": 11,
      "changes": 31,
      "blob_url": "https://github.com/material-components/material-components-android/blob/248e71adb79c94cbc44eff8b2e858bd82527dd85/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbadge%2FBadgeUtils.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/248e71adb79c94cbc44eff8b2e858bd82527dd85/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbadge%2FBadgeUtils.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbadge%2FBadgeUtils.java?ref=248e71adb79c94cbc44eff8b2e858bd82527dd85",
      "patch": "@@ -80,16 +80,10 @@ public static void updateBadgeBounds(\n    * ancestor of the anchor.\n    */\n   public static void attachBadgeDrawable(\n-      BadgeDrawable badgeDrawable, View anchor, FrameLayout preAPI18BadgeParent) {\n-    Rect badgeBounds = new Rect();\n-    if (VERSION.SDK_INT < VERSION_CODES.JELLY_BEAN_MR2) {\n-      preAPI18BadgeParent.getDrawingRect(badgeBounds);\n-    } else {\n-      anchor.getDrawingRect(badgeBounds);\n-    }\n-    badgeDrawable.setBounds(badgeBounds);\n+      BadgeDrawable badgeDrawable, View anchor, FrameLayout preApi18BadgeParent) {\n+    setBadgeDrawableBounds(badgeDrawable, anchor, preApi18BadgeParent);\n     if (VERSION.SDK_INT < VERSION_CODES.JELLY_BEAN_MR2) {\n-      preAPI18BadgeParent.setForeground(badgeDrawable);\n+      preApi18BadgeParent.setForeground(badgeDrawable);\n     } else {\n       anchor.getOverlay().add(badgeDrawable);\n     }\n@@ -102,14 +96,29 @@ public static void attachBadgeDrawable(\n    * an ancestor of the anchor.\n    */\n   public static void detachBadgeDrawable(\n-      @Nullable BadgeDrawable badgeDrawable, View anchor, FrameLayout preAPI18BadgeParent) {\n+      @Nullable BadgeDrawable badgeDrawable, View anchor, FrameLayout preApi18BadgeParent) {\n     if (badgeDrawable == null) {\n       return;\n     }\n     if (VERSION.SDK_INT < VERSION_CODES.JELLY_BEAN_MR2) {\n-      preAPI18BadgeParent.setForeground(null);\n+      preApi18BadgeParent.setForeground(null);\n     } else {\n       anchor.getOverlay().remove(badgeDrawable);\n     }\n   }\n+\n+  /**\n+   * Sets the bounds of a BadgeDrawable to match the bounds of its anchor (for API 18+) or its\n+   * anchor's FrameLayout ancestor (pre-API 18).\n+   */\n+  public static void setBadgeDrawableBounds(\n+      BadgeDrawable badgeDrawable, View anchor, FrameLayout preApi18BadgeParent) {\n+    Rect badgeBounds = new Rect();\n+    if (VERSION.SDK_INT < VERSION_CODES.JELLY_BEAN_MR2) {\n+      preApi18BadgeParent.getDrawingRect(badgeBounds);\n+    } else {\n+      anchor.getDrawingRect(badgeBounds);\n+    }\n+    badgeDrawable.setBounds(badgeBounds);\n+  }\n }",
      "parent_sha": "ac1b2a0a2619b23e1ae3ab9e8debb36193735fff"
    }
  },
  {
    "oid": "0ef2e910ce892fdaa9efd029073fc6ff0fa48d68",
    "message": "[TopAppBar] Fix title fade mode collapsing title position errors.\n\nFlinging the AppBarLayout can cause a negative number to be passed to CollapsingTextHelper#calculateOffsets, causing the collapsed title in fade mode to be positioned incorrectly.\n\nPiperOrigin-RevId: 374704850",
    "date": "2021-05-19T20:21:52Z",
    "url": "https://github.com/material-components/material-components-android/commit/0ef2e910ce892fdaa9efd029073fc6ff0fa48d68",
    "details": {
      "sha": "df240962a84fe1793cede437b4aad801af9d9bb7",
      "filename": "lib/java/com/google/android/material/internal/CollapsingTextHelper.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/material-components/material-components-android/blob/0ef2e910ce892fdaa9efd029073fc6ff0fa48d68/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Finternal%2FCollapsingTextHelper.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/0ef2e910ce892fdaa9efd029073fc6ff0fa48d68/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Finternal%2FCollapsingTextHelper.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Finternal%2FCollapsingTextHelper.java?ref=0ef2e910ce892fdaa9efd029073fc6ff0fa48d68",
      "patch": "@@ -19,6 +19,7 @@\n import static androidx.core.util.Preconditions.checkNotNull;\n import static android.text.Layout.Alignment.ALIGN_NORMAL;\n import static androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP;\n+import static java.lang.Math.max;\n import static java.lang.Math.min;\n \n import android.animation.TimeInterpolator;\n@@ -548,7 +549,7 @@ private void calculateOffsets(final float fraction) {\n       } else {\n         textBlendFraction = 1F;\n         currentDrawX = collapsedDrawX;\n-        currentDrawY = collapsedDrawY - currentOffsetY;\n+        currentDrawY = collapsedDrawY - max(0, currentOffsetY);\n \n         setInterpolatedTextSize(collapsedTextSize);\n       }",
      "parent_sha": "6e7be6070c2037a6afe366f32575600705ecfb6c"
    }
  },
  {
    "oid": "d29daab5721371e9560fe0404af49087335d9538",
    "message": "[TextInputLayout] focusedStrokeColor should take into account the enabled color\n\nResolves https://github.com/material-components/material-components-android/pull/734\n\nGIT_ORIGIN_REV_ID=36549f1519805be416aaf75cbb67be948c4b02e7\nPiperOrigin-RevId: 278910639",
    "date": "2019-11-07T21:07:36Z",
    "url": "https://github.com/material-components/material-components-android/commit/d29daab5721371e9560fe0404af49087335d9538",
    "details": {
      "sha": "5d94ca0aefcf8c38b663558d9e82d3a731e0f1b4",
      "filename": "lib/java/com/google/android/material/textfield/TextInputLayout.java",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/material-components/material-components-android/blob/d29daab5721371e9560fe0404af49087335d9538/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftextfield%2FTextInputLayout.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/d29daab5721371e9560fe0404af49087335d9538/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftextfield%2FTextInputLayout.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftextfield%2FTextInputLayout.java?ref=d29daab5721371e9560fe0404af49087335d9538",
      "patch": "@@ -941,9 +941,11 @@ public void setBoxStrokeColorStateList(@NonNull ColorStateList boxStrokeColorSta\n       disabledColor =\n           boxStrokeColorStateList.getColorForState(new int[] {-android.R.attr.state_enabled}, -1);\n       hoveredStrokeColor =\n-          boxStrokeColorStateList.getColorForState(new int[] {android.R.attr.state_hovered}, -1);\n+          boxStrokeColorStateList.getColorForState(\n+              new int[] {android.R.attr.state_hovered, android.R.attr.state_enabled}, -1);\n       focusedStrokeColor =\n-          boxStrokeColorStateList.getColorForState(new int[] {android.R.attr.state_focused}, -1);\n+          boxStrokeColorStateList.getColorForState(\n+              new int[] {android.R.attr.state_focused, android.R.attr.state_enabled}, -1);\n     } else if (focusedStrokeColor != boxStrokeColorStateList.getDefaultColor()) {\n       // If attribute boxStrokeColor is not a color state list but only a single value, its value\n       // will be applied to the box's focus state.",
      "parent_sha": "5c922b414072136d89b4ef11523f0f2156219158"
    }
  },
  {
    "oid": "4b81bb1d1a467d03b6f323639f5358ec14445c67",
    "message": "[AppBarLayout] Loosen check for scrollable child when adding a11y actions\n\nAdding the a11y delegate and a11y actions was dependent on there being a CoordinatorLayout child that both inherits from certain scrolling classes (NestedScrollingChild, ListView, ScrollView) and has an AppBarLayout scrolling behavior. This was too restrictive and so we only check for a behavior.\n\nAny scrolling child may add an a11y delegate or scroll action to the parent CoordinatorLayout.\n\nPiperOrigin-RevId: 448335380",
    "date": "2022-05-12T21:24:36Z",
    "url": "https://github.com/material-components/material-components-android/commit/4b81bb1d1a467d03b6f323639f5358ec14445c67",
    "details": {
      "sha": "e9b28358974173f91d3490b35675479d06e7e423",
      "filename": "lib/java/com/google/android/material/appbar/AppBarLayout.java",
      "status": "modified",
      "additions": 21,
      "deletions": 9,
      "changes": 30,
      "blob_url": "https://github.com/material-components/material-components-android/blob/4b81bb1d1a467d03b6f323639f5358ec14445c67/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fappbar%2FAppBarLayout.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/4b81bb1d1a467d03b6f323639f5358ec14445c67/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fappbar%2FAppBarLayout.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fappbar%2FAppBarLayout.java?ref=4b81bb1d1a467d03b6f323639f5358ec14445c67",
      "patch": "@@ -1745,17 +1745,14 @@ private void updateAccessibilityActions(\n         CoordinatorLayout coordinatorLayout, @NonNull T appBarLayout) {\n       ViewCompat.removeAccessibilityAction(coordinatorLayout, ACTION_SCROLL_FORWARD.getId());\n       ViewCompat.removeAccessibilityAction(coordinatorLayout, ACTION_SCROLL_BACKWARD.getId());\n-      View scrollingView = findFirstScrollingChild(coordinatorLayout);\n-      // Don't add a11y actions if there is no scrolling view that the abl depends on for scrolling\n-      // or the abl has no scroll range.\n-      if (scrollingView == null || appBarLayout.getTotalScrollRange() == 0) {\n+      // Don't add a11y actions if the abl has no scroll range.\n+      if (appBarLayout.getTotalScrollRange() == 0) {\n         return;\n       }\n-      // Don't add actions if the scrolling view doesn't have the behavior that will cause the abl\n-      // to scroll.\n-      CoordinatorLayout.LayoutParams lp =\n-          (CoordinatorLayout.LayoutParams) scrollingView.getLayoutParams();\n-      if (!(lp.getBehavior() instanceof ScrollingViewBehavior)) {\n+      // Don't add actions if a child view doesn't have the behavior that will cause the abl to\n+      // scroll.\n+      View scrollingView = getChildWithScrollingBehavior(coordinatorLayout);\n+      if (scrollingView == null) {\n         return;\n       }\n \n@@ -1782,6 +1779,21 @@ public void onInitializeAccessibilityNodeInfo(\n           addAccessibilityScrollActions(coordinatorLayout, appBarLayout, scrollingView);\n     }\n \n+    @Nullable\n+    private View getChildWithScrollingBehavior(CoordinatorLayout coordinatorLayout) {\n+      final int childCount = coordinatorLayout.getChildCount();\n+      for (int i = 0; i < childCount; i++) {\n+        final View child = coordinatorLayout.getChildAt(i);\n+\n+        CoordinatorLayout.LayoutParams lp =\n+            (CoordinatorLayout.LayoutParams) child.getLayoutParams();\n+        if (lp.getBehavior() instanceof ScrollingViewBehavior) {\n+          return child;\n+        }\n+      }\n+      return null;\n+    }\n+\n     private boolean childrenHaveScrollFlags(AppBarLayout appBarLayout) {\n       final int childCount = appBarLayout.getChildCount();\n       for (int i = 0; i < childCount; i++) {",
      "parent_sha": "d25d18d462402f819576e84058dba257e0b2ab7e"
    }
  },
  {
    "oid": "bf5ef891435e3d5d61c274177507bd33ddf00657",
    "message": "[TextInputLayout] Change getTypeFace annotation to @Nullable\n\nCloses #25\nCloses #26\n\nPiperOrigin-RevId: 169725951",
    "date": "2017-09-22T20:02:43Z",
    "url": "https://github.com/material-components/material-components-android/commit/bf5ef891435e3d5d61c274177507bd33ddf00657",
    "details": {
      "sha": "2f9ae617d541a7b15d26624328c0073495407808",
      "filename": "lib/src/android/support/design/widget/TextInputLayout.java",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/material-components/material-components-android/blob/bf5ef891435e3d5d61c274177507bd33ddf00657/lib%2Fsrc%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTextInputLayout.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/bf5ef891435e3d5d61c274177507bd33ddf00657/lib%2Fsrc%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTextInputLayout.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fsrc%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTextInputLayout.java?ref=bf5ef891435e3d5d61c274177507bd33ddf00657",
      "patch": "@@ -38,7 +38,6 @@\n import android.os.Parcelable;\n import android.support.annotation.DrawableRes;\n import android.support.annotation.IntDef;\n-import android.support.annotation.NonNull;\n import android.support.annotation.Nullable;\n import android.support.annotation.StringRes;\n import android.support.annotation.StyleRes;\n@@ -357,7 +356,7 @@ public void setTypeface(@Nullable Typeface typeface) {\n   /**\n    * Returns the typeface used for the hint and any label views (such as counter and error views).\n    */\n-  @NonNull\n+  @Nullable\n   public Typeface getTypeface() {\n     return mTypeface;\n   }",
      "parent_sha": "6da2b792d78b57c92fbd1ccd7077b8f58cc0b5f1"
    }
  },
  {
    "oid": "b6b895a1e40efbf2e36b2ea5e91bae7bcd0bdb8c",
    "message": "[Button] Fix icon textStart/End alignment with multiline text\n\nWhen calculating text width to decide the icon position with textStart/End alignment, we missed accounting for multiline text. Fixes this by calculating each line's width separately and take the widest one to decide the icon position.\n\nResolves https://github.com/material-components/material-components-android/issues/2007\n\nPiperOrigin-RevId: 440982189",
    "date": "2022-04-11T21:13:57Z",
    "url": "https://github.com/material-components/material-components-android/commit/b6b895a1e40efbf2e36b2ea5e91bae7bcd0bdb8c",
    "details": {
      "sha": "962c76b33e6f39e2db5febb1285f34dbaee8e6fa",
      "filename": "lib/java/com/google/android/material/button/MaterialButton.java",
      "status": "modified",
      "additions": 18,
      "deletions": 3,
      "changes": 21,
      "blob_url": "https://github.com/material-components/material-components-android/blob/b6b895a1e40efbf2e36b2ea5e91bae7bcd0bdb8c/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbutton%2FMaterialButton.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/b6b895a1e40efbf2e36b2ea5e91bae7bcd0bdb8c/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbutton%2FMaterialButton.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbutton%2FMaterialButton.java?ref=b6b895a1e40efbf2e36b2ea5e91bae7bcd0bdb8c",
      "patch": "@@ -568,7 +568,7 @@ private void updateIconPosition(int buttonWidth, int buttonHeight) {\n \n       int localIconSize = iconSize == 0 ? icon.getIntrinsicWidth() : iconSize;\n       int availableWidth = buttonWidth\n-          - getTextWidth()\n+          - getTextLayoutWidth()\n           - ViewCompat.getPaddingEnd(this)\n           - localIconSize\n           - iconPadding\n@@ -612,9 +612,18 @@ private void updateIconPosition(int buttonWidth, int buttonHeight) {\n     }\n   }\n \n-  private int getTextWidth() {\n+  private int getTextLayoutWidth() {\n+    int maxWidth = 0;\n+    int lineCount = getLineCount();\n+    for (int line = 0; line < lineCount; line++) {\n+      maxWidth = max(maxWidth, getTextWidth(getTextInLine(line)));\n+    }\n+    return maxWidth;\n+  }\n+\n+  private int getTextWidth(CharSequence text) {\n     Paint textPaint = getPaint();\n-    String buttonText = getText().toString();\n+    String buttonText = text.toString();\n     if (getTransformationMethod() != null) {\n       // if text is transformed, add that transformation to to ensure correct calculation\n       // of icon padding.\n@@ -643,6 +652,12 @@ private int getTextHeight() {\n     return min(bounds.height(), getLayout().getHeight());\n   }\n \n+  private CharSequence getTextInLine(int line) {\n+    int start = getLayout().getLineStart(line);\n+    int end = getLayout().getLineEnd(line);\n+    return getText().subSequence(start, end);\n+  }\n+\n   private boolean isLayoutRTL() {\n     return ViewCompat.getLayoutDirection(this) == ViewCompat.LAYOUT_DIRECTION_RTL;\n   }",
      "parent_sha": "05be1b92c5720e4c6c6f42f93918bd6554099625"
    }
  },
  {
    "oid": "7b620035a78f15284aed82ec6c09d5f6eb4249dc",
    "message": "[Bottom Sheet] Updated peek height gesture inset behavior to only add extra inset if necessary\n\nPreviously on Q the peek height would have the bottom gesture inset size added to it regardless of whether edge to edge mode or gesture navigation were enabled. Now the extra inset will only be added if it is needed due to a system gesture conflict, in order to give the user some space to drag the sheet.\n\nResolves https://github.com/material-components/material-components-android/issues/1472\n\nPiperOrigin-RevId: 320606747",
    "date": "2020-07-10T18:47:27Z",
    "url": "https://github.com/material-components/material-components-android/commit/7b620035a78f15284aed82ec6c09d5f6eb4249dc",
    "details": {
      "sha": "784b4a20744f7da41f70af48f5889fcaf4eddc15",
      "filename": "lib/java/com/google/android/material/bottomsheet/BottomSheetBehavior.java",
      "status": "modified",
      "additions": 20,
      "deletions": 9,
      "changes": 29,
      "blob_url": "https://github.com/material-components/material-components-android/blob/7b620035a78f15284aed82ec6c09d5f6eb4249dc/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbottomsheet%2FBottomSheetBehavior.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/7b620035a78f15284aed82ec6c09d5f6eb4249dc/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbottomsheet%2FBottomSheetBehavior.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbottomsheet%2FBottomSheetBehavior.java?ref=7b620035a78f15284aed82ec6c09d5f6eb4249dc",
      "patch": "@@ -31,6 +31,7 @@\n import android.os.Parcel;\n import android.os.Parcelable;\n import androidx.core.view.ViewCompat;\n+import androidx.core.view.WindowInsetsCompat;\n import androidx.core.view.accessibility.AccessibilityNodeInfoCompat;\n import androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;\n import androidx.core.view.accessibility.AccessibilityViewCommand;\n@@ -43,7 +44,6 @@\n import android.view.ViewConfiguration;\n import android.view.ViewGroup;\n import android.view.ViewParent;\n-import android.view.WindowInsets;\n import androidx.annotation.FloatRange;\n import androidx.annotation.IntDef;\n import androidx.annotation.NonNull;\n@@ -55,6 +55,8 @@\n import androidx.core.math.MathUtils;\n import androidx.customview.view.AbsSavedState;\n import androidx.customview.widget.ViewDragHelper;\n+import com.google.android.material.internal.ViewUtils;\n+import com.google.android.material.internal.ViewUtils.RelativePadding;\n import com.google.android.material.resources.MaterialResources;\n import com.google.android.material.shape.MaterialShapeDrawable;\n import com.google.android.material.shape.ShapeAppearanceModel;\n@@ -370,7 +372,7 @@ public boolean onLayoutChild(\n       // First layout with this behavior.\n       peekHeightMin =\n           parent.getResources().getDimensionPixelSize(R.dimen.design_bottom_sheet_peek_height_min);\n-      setSystemGestureInsets(parent);\n+      setSystemGestureInsets(child);\n       viewRef = new WeakReference<>(child);\n       // Only set MaterialShapeDrawable as background if shapeTheming is enabled, otherwise will\n       // default to android:background declared in styles or layout.\n@@ -1237,13 +1239,22 @@ public void onAnimationUpdate(@NonNull ValueAnimator animation) {\n         });\n   }\n \n-  private void setSystemGestureInsets(@NonNull CoordinatorLayout parent) {\n-    if (VERSION.SDK_INT >= VERSION_CODES.Q && !isGestureInsetBottomIgnored()) {\n-      WindowInsets windowInsets = parent.getRootWindowInsets();\n-      if (windowInsets != null) {\n-        int systemMandatoryInsetsBottom = windowInsets.getSystemGestureInsets().bottom;\n-        peekHeight += systemMandatoryInsetsBottom;\n-      }\n+  /**\n+   * Ensure the peek height is at least as large as the bottom gesture inset size so that the sheet\n+   * can always be dragged, but only when the inset is required by the system.\n+   */\n+  private void setSystemGestureInsets(@NonNull View child) {\n+    if (VERSION.SDK_INT >= VERSION_CODES.Q && !isGestureInsetBottomIgnored() && !peekHeightAuto) {\n+      ViewUtils.doOnApplyWindowInsets(\n+          child,\n+          new ViewUtils.OnApplyWindowInsetsListener() {\n+            @Override\n+            public WindowInsetsCompat onApplyWindowInsets(\n+                View view, WindowInsetsCompat insets, RelativePadding initialPadding) {\n+              setPeekHeight(peekHeight + insets.getMandatorySystemGestureInsets().bottom);\n+              return insets;\n+            }\n+          });\n     }\n   }\n ",
      "parent_sha": "3dcc3cef988a2101997ae74f74a01bffc18e7c27"
    }
  },
  {
    "oid": "f317d634cf00a65f19a0a3f2945eb7a4be7e40e5",
    "message": "Fixing text overlapping end toggle drawable when app starts.\n\nPiperOrigin-RevId: 212885605",
    "date": "2018-09-14T15:04:37Z",
    "url": "https://github.com/material-components/material-components-android/commit/f317d634cf00a65f19a0a3f2945eb7a4be7e40e5",
    "details": {
      "sha": "e50e5440b16248955cbebbbe27c28914492ad79e",
      "filename": "lib/java/com/google/android/material/textfield/TextInputLayout.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/material-components/material-components-android/blob/f317d634cf00a65f19a0a3f2945eb7a4be7e40e5/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftextfield%2FTextInputLayout.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/f317d634cf00a65f19a0a3f2945eb7a4be7e40e5/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftextfield%2FTextInputLayout.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftextfield%2FTextInputLayout.java?ref=f317d634cf00a65f19a0a3f2945eb7a4be7e40e5",
      "patch": "@@ -1548,8 +1548,8 @@ public void draw(Canvas canvas) {\n \n   @Override\n   protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n-    updatePasswordToggleView();\n     super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n+    updatePasswordToggleView();\n   }\n \n   private void updatePasswordToggleView() {",
      "parent_sha": "20bbf1523bde968df8f1337a6c1e9edf2b7aa4b9"
    }
  },
  {
    "oid": "7b5aea2ca37cc7a17c07c2748846a8ddcd2e9b09",
    "message": "[TextInputLayout] Fixed padding for prefix/suffix and label in RTL being wrong.\n\nPiperOrigin-RevId: 319873647",
    "date": "2020-07-07T14:57:16Z",
    "url": "https://github.com/material-components/material-components-android/commit/7b5aea2ca37cc7a17c07c2748846a8ddcd2e9b09",
    "details": {
      "sha": "0ff2d2b72fef2f102e34723869c91dbdcde3b355",
      "filename": "lib/java/com/google/android/material/textfield/TextInputLayout.java",
      "status": "modified",
      "additions": 14,
      "deletions": 11,
      "changes": 25,
      "blob_url": "https://github.com/material-components/material-components-android/blob/7b5aea2ca37cc7a17c07c2748846a8ddcd2e9b09/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftextfield%2FTextInputLayout.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/7b5aea2ca37cc7a17c07c2748846a8ddcd2e9b09/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftextfield%2FTextInputLayout.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftextfield%2FTextInputLayout.java?ref=7b5aea2ca37cc7a17c07c2748846a8ddcd2e9b09",
      "patch": "@@ -2251,11 +2251,13 @@ private void updatePrefixTextViewPadding() {\n     if (editText == null) {\n       return;\n     }\n-    prefixTextView.setPadding(\n-        isStartIconVisible() ? 0 : editText.getPaddingLeft(),\n-        this.editText.getCompoundPaddingTop(),\n-        prefixTextView.getCompoundPaddingRight(),\n-        this.editText.getCompoundPaddingBottom());\n+    int startPadding = isStartIconVisible() ? 0 : ViewCompat.getPaddingStart(editText);\n+    ViewCompat.setPaddingRelative(\n+        prefixTextView,\n+        startPadding,\n+        editText.getCompoundPaddingTop(),\n+        0,\n+        editText.getCompoundPaddingBottom());\n   }\n \n   /**\n@@ -2338,11 +2340,10 @@ private void updateSuffixTextViewPadding() {\n     if (editText == null) {\n       return;\n     }\n-    suffixTextView.setPadding(\n-        suffixTextView.getPaddingLeft(),\n-        editText.getPaddingTop(),\n-        (isEndIconVisible() || isErrorIconVisible()) ? 0 : editText.getPaddingRight(),\n-        editText.getPaddingBottom());\n+    int endPadding =\n+        (isEndIconVisible() || isErrorIconVisible()) ? 0 : ViewCompat.getPaddingEnd(editText);\n+    ViewCompat.setPaddingRelative(\n+        suffixTextView, 0, editText.getPaddingTop(), endPadding, editText.getPaddingBottom());\n   }\n \n   @Override\n@@ -2482,7 +2483,7 @@ private int getLabelRightBoundAlignedWithSuffix(int rectRight, boolean isRtl) {\n     int right = rectRight - editText.getCompoundPaddingRight();\n     if (prefixText != null && isRtl) {\n       // Label should be vertically aligned with prefix if in RTL\n-      right = right + prefixTextView.getMeasuredWidth() + prefixTextView.getPaddingRight();\n+      right += prefixTextView.getMeasuredWidth() - prefixTextView.getPaddingRight();\n     }\n     return right;\n   }\n@@ -2775,6 +2776,8 @@ public void run() {\n           });\n     }\n     updatePlaceholderMeasurementsBasedOnEditText();\n+    updatePrefixTextViewPadding();\n+    updateSuffixTextViewPadding();\n   }\n \n   private boolean updateEditTextHeightBasedOnIcon() {",
      "parent_sha": "3b396791df3999e4553fe06cb9aeec90c70ae555"
    }
  },
  {
    "oid": "5ef93e9351f04a080fe505d4896bc17f2075d77d",
    "message": "Javadoc updates for BottomNavigationView.\n\nPiperOrigin-RevId: 300567464",
    "date": "2020-03-13T15:05:25Z",
    "url": "https://github.com/material-components/material-components-android/commit/5ef93e9351f04a080fe505d4896bc17f2075d77d",
    "details": {
      "sha": "f82486f8dde0fce000306cf60e52f89e7fcc7742",
      "filename": "lib/java/com/google/android/material/bottomnavigation/BottomNavigationView.java",
      "status": "modified",
      "additions": 7,
      "deletions": 5,
      "changes": 12,
      "blob_url": "https://github.com/material-components/material-components-android/blob/5ef93e9351f04a080fe505d4896bc17f2075d77d/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbottomnavigation%2FBottomNavigationView.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/5ef93e9351f04a080fe505d4896bc17f2075d77d/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbottomnavigation%2FBottomNavigationView.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbottomnavigation%2FBottomNavigationView.java?ref=5ef93e9351f04a080fe505d4896bc17f2075d77d",
      "patch": "@@ -289,7 +289,7 @@ protected void onAttachedToWindow() {\n   /**\n    * Sets the base elevation of this view, in pixels.\n    *\n-   * @attr ref android.R.styleable#View_elevation\n+   * @attr ref R.styleable#BottomNavigationView_elevation\n    */\n   @RequiresApi(VERSION_CODES.LOLLIPOP)\n   @Override\n@@ -445,7 +445,8 @@ public int getItemBackgroundResource() {\n   /**\n    * Set the background of our menu items to the given resource.\n    *\n-   * <p>This will remove any ripple backgrounds created by {@link setItemRippleColor()}.\n+   * <p>This will remove any ripple backgrounds created by {@link\n+   * setItemRippleColor(ColorStateList)}.\n    *\n    * @param resId The identifier of the resource.\n    * @attr ref R.styleable#BottomNavigationView_itemBackground\n@@ -469,7 +470,8 @@ public Drawable getItemBackground() {\n   /**\n    * Set the background of our menu items to the given drawable.\n    *\n-   * <p>This will remove any ripple backgrounds created by {@link setItemRippleColor()}.\n+   * <p>This will remove any ripple backgrounds created by {@link\n+   * setItemRippleColor(ColorStateList)}.\n    *\n    * @param background The drawable for the background.\n    * @attr ref R.styleable#BottomNavigationView_itemBackground\n@@ -481,7 +483,7 @@ public void setItemBackground(@Nullable Drawable background) {\n \n   /**\n    * Returns the color used to create a ripple as the background drawable of the menu items. If a\n-   * background is set using {@link #setItemBackground()}, this will return null.\n+   * background is set using {@link #setItemBackground(Drawable)}, this will return null.\n    *\n    * @see #setItemBackground(Drawable)\n    * @attr ref R.styleable#BottomNavigationView_itemRippleColor\n@@ -496,7 +498,7 @@ public ColorStateList getItemRippleColor() {\n    *\n    * @param itemRippleColor The {@link ColorStateList} for the ripple. This will create a ripple\n    *     background for menu items, replacing any background previously set by {@link\n-   *     #setItemBackground()}.\n+   *     #setItemBackground(Drawable)}.\n    * @attr ref R.styleable#BottomNavigationView_itemRippleColor\n    */\n   public void setItemRippleColor(@Nullable ColorStateList itemRippleColor) {",
      "parent_sha": "f90d1cf10800a0e8e20ecd59f865b27e2c5b62d4"
    }
  },
  {
    "oid": "dac7d5a0bd862e71581a894cf62acb1d723c1262",
    "message": "[Button] Made the \"checked\" state independent to the \"enabled\" state.\n\nPiperOrigin-RevId: 683754074",
    "date": "2024-10-09T16:53:08Z",
    "url": "https://github.com/material-components/material-components-android/commit/dac7d5a0bd862e71581a894cf62acb1d723c1262",
    "details": {
      "sha": "1d8cc625c1e02121468a988af8128c72cf5ce777",
      "filename": "lib/java/com/google/android/material/button/MaterialButton.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/material-components/material-components-android/blob/dac7d5a0bd862e71581a894cf62acb1d723c1262/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbutton%2FMaterialButton.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/dac7d5a0bd862e71581a894cf62acb1d723c1262/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbutton%2FMaterialButton.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbutton%2FMaterialButton.java?ref=dac7d5a0bd862e71581a894cf62acb1d723c1262",
      "patch": "@@ -1257,7 +1257,7 @@ public void clearOnCheckedChangeListeners() {\n \n   @Override\n   public void setChecked(boolean checked) {\n-    if (isCheckable() && isEnabled() && this.checked != checked) {\n+    if (isCheckable() && this.checked != checked) {\n       this.checked = checked;\n \n       refreshDrawableState();\n@@ -1292,7 +1292,7 @@ public void toggle() {\n \n   @Override\n   public boolean performClick() {\n-    if (materialButtonHelper.isToggleCheckedStateOnClick()) {\n+    if (isEnabled() && materialButtonHelper.isToggleCheckedStateOnClick()) {\n       toggle();\n     }\n ",
      "parent_sha": "90ab51eb6db94215ae5af4c42a01821a8cd57e5f"
    }
  },
  {
    "oid": "c7c5c7c625fb701ea02fb520a0613ef0e5aac0ff",
    "message": "[TextInputLayout] Fixed calculateLabelMarginTop() value for filled text field style, which caused getBaseline() to return a wrong offset.\n\nPiperOrigin-RevId: 408655451",
    "date": "2021-11-10T21:06:08Z",
    "url": "https://github.com/material-components/material-components-android/commit/c7c5c7c625fb701ea02fb520a0613ef0e5aac0ff",
    "details": {
      "sha": "be9c764aeedd8be70b36c07ada3cb565e2b06372",
      "filename": "lib/java/com/google/android/material/textfield/TextInputLayout.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/material-components/material-components-android/blob/c7c5c7c625fb701ea02fb520a0613ef0e5aac0ff/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftextfield%2FTextInputLayout.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/c7c5c7c625fb701ea02fb520a0613ef0e5aac0ff/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftextfield%2FTextInputLayout.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftextfield%2FTextInputLayout.java?ref=c7c5c7c625fb701ea02fb520a0613ef0e5aac0ff",
      "patch": "@@ -2702,9 +2702,9 @@ private int calculateLabelMarginTop() {\n     switch (boxBackgroundMode) {\n       case BOX_BACKGROUND_OUTLINE:\n         return (int) (collapsingTextHelper.getCollapsedTextHeight() / 2);\n-      case BOX_BACKGROUND_FILLED:\n       case BOX_BACKGROUND_NONE:\n         return (int) collapsingTextHelper.getCollapsedTextHeight();\n+      case BOX_BACKGROUND_FILLED:\n       default:\n         return 0;\n     }",
      "parent_sha": "c80177d062e0a490bd573edc0413c4e648d0c943"
    }
  },
  {
    "oid": "7e99fcb67d2645e854bab937dc6ccb0f1fda3c83",
    "message": "Fix issue when setting padding and ShapeableImageView background\n\nPiperOrigin-RevId: 299359752",
    "date": "2020-03-06T19:39:32Z",
    "url": "https://github.com/material-components/material-components-android/commit/7e99fcb67d2645e854bab937dc6ccb0f1fda3c83",
    "details": {
      "sha": "377519f6535bcddd1bdbeac570babf3da692c78d",
      "filename": "lib/java/com/google/android/material/imageview/ShapeableImageView.java",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/material-components/material-components-android/blob/7e99fcb67d2645e854bab937dc6ccb0f1fda3c83/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fimageview%2FShapeableImageView.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/7e99fcb67d2645e854bab937dc6ccb0f1fda3c83/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fimageview%2FShapeableImageView.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fimageview%2FShapeableImageView.java?ref=7e99fcb67d2645e854bab937dc6ccb0f1fda3c83",
      "patch": "@@ -59,6 +59,7 @@ public class ShapeableImageView extends AppCompatImageView implements Shapeable\n \n   private final ShapeAppearancePathProvider pathProvider = new ShapeAppearancePathProvider();\n   private final RectF destination;\n+  private final RectF maskRect;\n   private final Paint borderPaint;\n   private final Paint clearPaint;\n   private final Path path = new Path();\n@@ -86,6 +87,7 @@ public ShapeableImageView(Context context, @Nullable AttributeSet attrs, int def\n     clearPaint.setColor(Color.WHITE);\n     clearPaint.setXfermode(new PorterDuffXfermode(Mode.DST_OUT));\n     destination = new RectF();\n+    maskRect = new RectF();\n     maskPath = new Path();\n     TypedArray attributes =\n         context.obtainStyledAttributes(\n@@ -138,7 +140,9 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n     // Remove path from rect to draw with clear paint.\n     maskPath.rewind();\n     maskPath.addPath(path);\n-    maskPath.addRect(destination, Direction.CCW);\n+    // Do not include padding to clip the background too.\n+    maskRect.set(0, 0, getMeasuredWidth(), getMeasuredHeight());\n+    maskPath.addRect(maskRect, Direction.CCW);\n   }\n \n   private void drawStroke(Canvas canvas) {",
      "parent_sha": "6602bf622d83c07e590c2ba739d63e827c3a3574"
    }
  },
  {
    "oid": "64e35a30fbaf20a7ca1e825e8f80390592f5cd59",
    "message": "Update FAB\\'s tX even if it\\'s not shown am: e33473d0e3\nam: 84c1501ab5\n\n* commit '84c1501ab5d85a8f499e8b1cba6f5176f1703bfd':\n  Update FAB's tX even if it's not shown\n\nGitOrigin-RevId=dcebbc1143a1be00a09aa6aa5fb798487cb67d34\n\nPiperOrigin-RevId: 140551504",
    "date": "2016-12-12T23:44:04Z",
    "url": "https://github.com/material-components/material-components-android/commit/64e35a30fbaf20a7ca1e825e8f80390592f5cd59",
    "details": {
      "sha": "c09041925f738cedb41ac14af382fb925950854b",
      "filename": "src/android/support/design/widget/FloatingActionButton.java",
      "status": "modified",
      "additions": 2,
      "deletions": 5,
      "changes": 7,
      "blob_url": "https://github.com/material-components/material-components-android/blob/64e35a30fbaf20a7ca1e825e8f80390592f5cd59/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FFloatingActionButton.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/64e35a30fbaf20a7ca1e825e8f80390592f5cd59/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FFloatingActionButton.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FFloatingActionButton.java?ref=64e35a30fbaf20a7ca1e825e8f80390592f5cd59",
      "patch": "@@ -538,10 +538,6 @@ private boolean updateFabVisibility(CoordinatorLayout parent,\n \n         private void updateFabTranslationForSnackbar(CoordinatorLayout parent,\n                 final FloatingActionButton fab, View snackbar) {\n-            if (fab.getVisibility() != View.VISIBLE) {\n-                return;\n-            }\n-\n             final float targetTransY = getFabTranslationYForSnackbar(parent, fab);\n             if (mFabTranslationY == targetTransY) {\n                 // We're already at (or currently animating to) the target value, return...\n@@ -555,7 +551,8 @@ private void updateFabTranslationForSnackbar(CoordinatorLayout parent,\n                 mFabTranslationYAnimator.cancel();\n             }\n \n-            if (Math.abs(currentTransY - targetTransY) > (fab.getHeight() * 0.667f)) {\n+            if (fab.isShown()\n+                    && Math.abs(currentTransY - targetTransY) > (fab.getHeight() * 0.667f)) {\n                 // If the FAB will be travelling by more than 2/3 of it's height, let's animate\n                 // it instead\n                 if (mFabTranslationYAnimator == null) {",
      "parent_sha": "27015ca7351ed7f914ca160cef2029c5834beab7"
    }
  },
  {
    "oid": "d75c00043ddee452b20486823129a24e51dfb518",
    "message": "Use ViewCompat for getElevation for MaterialAlertDialogBuilder\n\nPiperOrigin-RevId: 238543065",
    "date": "2019-03-22T20:14:19Z",
    "url": "https://github.com/material-components/material-components-android/commit/d75c00043ddee452b20486823129a24e51dfb518",
    "details": {
      "sha": "1ec2392edce3b36a0ecf33a83a1fa4e37500a091",
      "filename": "lib/java/com/google/android/material/dialog/MaterialAlertDialogBuilder.java",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/material-components/material-components-android/blob/d75c00043ddee452b20486823129a24e51dfb518/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fdialog%2FMaterialAlertDialogBuilder.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/d75c00043ddee452b20486823129a24e51dfb518/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fdialog%2FMaterialAlertDialogBuilder.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fdialog%2FMaterialAlertDialogBuilder.java?ref=d75c00043ddee452b20486823129a24e51dfb518",
      "patch": "@@ -124,9 +124,7 @@ public AlertDialog create() {\n      * as it locks in attributes and affects layout. */\n     View decorView = window.getDecorView();\n     if (background instanceof MaterialShapeDrawable) {\n-      if (Build.VERSION.SDK_INT >= VERSION_CODES.LOLLIPOP) {\n-        ((MaterialShapeDrawable) background).setElevation(decorView.getElevation());\n-      }\n+      ((MaterialShapeDrawable) background).setElevation(ViewCompat.getElevation(decorView));\n     }\n \n     Drawable insetDrawable = MaterialDialogs.insetDrawable(background, backgroundInsets);",
      "parent_sha": "b15e5ae3a4311346166b4dbbdb08ae87c519b131"
    }
  },
  {
    "oid": "dc0b45480b1af62a31b9336af7c977bf2479b224",
    "message": "Merge \"Add missing test for min/max tab width limitation in TabLayout\" into mnc-ub-dev am: bf5c215e80\nam: e196deddcc\n\n* commit 'e196deddccbf73fae53ffe63ec101aa4ff06996c':\n  Add missing test for min/max tab width limitation in TabLayout\n\nGitOrigin-RevId=0ab16dda7d0006ace468e4138a526e18249ae6ef\n\nPiperOrigin-RevId: 140559466",
    "date": "2016-12-12T23:45:36Z",
    "url": "https://github.com/material-components/material-components-android/commit/dc0b45480b1af62a31b9336af7c977bf2479b224",
    "details": {
      "sha": "0a86bcee1f667b40c61b779259c8faf2e9e321e1",
      "filename": "tests/src/android/support/design/widget/TabLayoutWithViewPagerTest.java",
      "status": "modified",
      "additions": 54,
      "deletions": 65,
      "changes": 119,
      "blob_url": "https://github.com/material-components/material-components-android/blob/dc0b45480b1af62a31b9336af7c977bf2479b224/tests%2Fsrc%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTabLayoutWithViewPagerTest.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/dc0b45480b1af62a31b9336af7c977bf2479b224/tests%2Fsrc%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTabLayoutWithViewPagerTest.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/tests%2Fsrc%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTabLayoutWithViewPagerTest.java?ref=dc0b45480b1af62a31b9336af7c977bf2479b224",
      "patch": "@@ -15,7 +15,10 @@\n  */\n package android.support.design.widget;\n \n+import android.content.res.Resources;\n import android.graphics.Color;\n+import android.support.annotation.DimenRes;\n+import android.support.annotation.LayoutRes;\n import android.support.design.test.R;\n import android.support.design.testutils.TabLayoutActions;\n import android.support.design.testutils.TestUtilsActions;\n@@ -375,30 +378,47 @@ public void testFixedTabMode() {\n         }\n     }\n \n-    @Test\n-    @MediumTest\n-    public void testMinTabWidth() {\n+    /**\n+     * Helper method to verify support for min and max tab width on TabLayout in scrollable mode.\n+     * It replaces the TabLayout based on the passed layout resource ID and then adds a bunch of\n+     * tab titles to the wired ViewPager with progressively longer texts. After each tab is added\n+     * this method then checks that all tab views respect the minimum and maximum tab width set\n+     * on TabLayout.\n+     *\n+     * @param tabLayoutResId Layout resource for the TabLayout to be wired to the ViewPager.\n+     * @param tabMinWidthResId If non zero, points to the dimension resource to use for tab min\n+     * width check.\n+     * @param tabMaxWidthResId If non zero, points to the dimension resource to use for tab max\n+     * width check.\n+     */\n+    private void verifyMinMaxTabWidth(@LayoutRes int tabLayoutResId, @DimenRes int tabMinWidthResId,\n+            @DimenRes int tabMaxWidthResId) {\n+        assertEquals(\"Scrollable tab mode\", TabLayout.MODE_SCROLLABLE, mTabLayout.getTabMode());\n+\n+        final Resources res = getActivity().getResources();\n+        final int minTabWidth = (tabMinWidthResId == 0) ? -1 :\n+                res.getDimensionPixelSize(tabMinWidthResId);\n+        final int maxTabWidth = (tabMaxWidthResId == 0) ? -1 :\n+                res.getDimensionPixelSize(tabMaxWidthResId);\n+\n         // Create a new adapter (with no content)\n         final TextPagerAdapter newAdapter = new TextPagerAdapter();\n         // And set it on the ViewPager\n         onView(withId(R.id.tabs_viewpager)).perform(ViewPagerActions.setAdapter(newAdapter));\n \n-        // Replace the default TabLayout with the one configured to have min tab width\n-        onView(withId(R.id.container)).perform(\n-                TestUtilsActions.replaceTabLayout(R.layout.tab_layout_bound_min));\n+        // Replace the default TabLayout with the passed one\n+        onView(withId(R.id.container)).perform(TestUtilsActions.replaceTabLayout(tabLayoutResId));\n \n         // Now that we have a new TabLayout, wire it to the new content of our ViewPager\n         onView(withId(R.id.tabs)).perform(TabLayoutActions.setupWithViewPager(mViewPager));\n \n-        // Since TabLayout doesn't expose a getter for fetching the configured min tab width,\n+        // Since TabLayout doesn't expose a getter for fetching the configured max tab width,\n         // start adding a variety of tabs with progressively longer tab titles and test that\n-        // no tab is more narrow than the configured min width. Before we start that test,\n+        // no tab is wider than the configured max width. Before we start that test,\n         // verify that we're in the scrollable mode so that each tab title gets as much width\n         // as needed to display its text.\n         assertEquals(\"Scrollable tab mode\", TabLayout.MODE_SCROLLABLE, mTabLayout.getTabMode());\n \n-        final int minTabWidth = getActivity().getResources().getDimensionPixelSize(\n-                R.dimen.tab_width_limit_medium);\n         final StringBuilder tabTitleBuilder = new StringBuilder();\n         for (int i = 0; i < 40; i++) {\n             final char titleComponent = (char) ('A' + i);\n@@ -411,8 +431,8 @@ public void testMinTabWidth() {\n                     ViewPagerActions.notifyAdapterContentChange());\n \n             int expectedTabCount = i + 1;\n-            // Check that all tabs are at least as wide as min width specified in the XML\n-            // for the newly loaded TabLayout\n+            // Check that all tabs are at least as wide as min width *and* at most as wide as max\n+            // width specified in the XML for the newly loaded TabLayout\n             for (int j = 0; j < expectedTabCount; j++) {\n                 // Find the view that is our tab title. It should be:\n                 // 1. Descendant of our TabLayout\n@@ -424,70 +444,39 @@ public void testMinTabWidth() {\n                         isDescendantOfA(withId(R.id.tabs)),\n                         not(withParent(isAssignableFrom(HorizontalScrollView.class))),\n                         hasDescendant(withText(tabTitle)));\n-                onView(tabMatcher).check(matches(TestUtilsMatchers.isNotNarrowerThan(minTabWidth)));\n+                if (minTabWidth >= 0) {\n+                    onView(tabMatcher).check(matches(\n+                            TestUtilsMatchers.isNotNarrowerThan(minTabWidth)));\n+                }\n+                if (maxTabWidth >= 0) {\n+                    onView(tabMatcher).check(matches(\n+                            TestUtilsMatchers.isNotWiderThan(maxTabWidth)));\n+                }\n             }\n \n             // Reset the title builder for the next tab\n             tabTitleBuilder.setLength(0);\n             tabTitleBuilder.trimToSize();\n         }\n+\n     }\n \n     @Test\n     @MediumTest\n-    public void testMaxTabWidth() {\n-        // Create a new adapter (with no content)\n-        final TextPagerAdapter newAdapter = new TextPagerAdapter();\n-        // And set it on the ViewPager\n-        onView(withId(R.id.tabs_viewpager)).perform(ViewPagerActions.setAdapter(newAdapter));\n-\n-        // Replace the default TabLayout with the one configured to have max tab width\n-        onView(withId(R.id.container)).perform(\n-                TestUtilsActions.replaceTabLayout(R.layout.tab_layout_bound_max));\n-\n-        // Now that we have a new TabLayout, wire it to the new content of our ViewPager\n-        onView(withId(R.id.tabs)).perform(TabLayoutActions.setupWithViewPager(mViewPager));\n-\n-        // Since TabLayout doesn't expose a getter for fetching the configured max tab width,\n-        // start adding a variety of tabs with progressively longer tab titles and test that\n-        // no tab is wider than the configured max width. Before we start that test,\n-        // verify that we're in the scrollable mode so that each tab title gets as much width\n-        // as needed to display its text.\n-        assertEquals(\"Scrollable tab mode\", TabLayout.MODE_SCROLLABLE, mTabLayout.getTabMode());\n-\n-        final int maxTabWidth = getActivity().getResources().getDimensionPixelSize(\n-                R.dimen.tab_width_limit_medium);\n-        final StringBuilder tabTitleBuilder = new StringBuilder();\n-        for (int i = 0; i < 40; i++) {\n-            final char titleComponent = (char) ('A' + i);\n-            for (int j = 0; j <= (i + 1); j++) {\n-                tabTitleBuilder.append(titleComponent);\n-            }\n-            final String tabTitle = tabTitleBuilder.toString();\n-            newAdapter.add(tabTitle, \"Body \" + i);\n-            onView(withId(R.id.tabs_viewpager)).perform(\n-                    ViewPagerActions.notifyAdapterContentChange());\n+    public void testMinTabWidth() {\n+        verifyMinMaxTabWidth(R.layout.tab_layout_bound_min, R.dimen.tab_width_limit_medium, 0);\n+    }\n \n-            int expectedTabCount = i + 1;\n-            // Check that all tabs are at most as wide as max width specified in the XML\n-            // for the newly loaded TabLayout\n-            for (int j = 0; j < expectedTabCount; j++) {\n-                // Find the view that is our tab title. It should be:\n-                // 1. Descendant of our TabLayout\n-                // 2. But not a direct child of the horizontal scroller\n-                // 3. With just-added title text\n-                // These conditions make sure that we're selecting the \"top-level\" tab view\n-                // instead of the inner (and narrower) TextView\n-                Matcher<View> tabMatcher = allOf(\n-                        isDescendantOfA(withId(R.id.tabs)),\n-                        not(withParent(isAssignableFrom(HorizontalScrollView.class))),\n-                        hasDescendant(withText(tabTitle)));\n-                onView(tabMatcher).check(matches(TestUtilsMatchers.isNotWiderThan(maxTabWidth)));\n-            }\n+    @Test\n+    @MediumTest\n+    public void testMaxTabWidth() {\n+        verifyMinMaxTabWidth(R.layout.tab_layout_bound_max, 0, R.dimen.tab_width_limit_medium);\n+    }\n \n-            // Reset the title builder for the next tab\n-            tabTitleBuilder.setLength(0);\n-            tabTitleBuilder.trimToSize();\n-        }\n+    @Test\n+    @MediumTest\n+    public void testMinMaxTabWidth() {\n+        verifyMinMaxTabWidth(R.layout.tab_layout_bound_minmax, R.dimen.tab_width_limit_small,\n+                R.dimen.tab_width_limit_large);\n     }\n }",
      "parent_sha": "4884403741a2dc5c5d58b4b42929e15dafb830ac"
    }
  },
  {
    "oid": "ef60931e2b68f3668a41d312c4906246fd801799",
    "message": "[Tab][a11y] Fix title being announced twice when there's a badge in TalkBack mode.\n\nResolves https://github.com/material-components/material-components-android/issues/3985\n\nPiperOrigin-RevId: 600854666",
    "date": "2024-01-23T20:07:04Z",
    "url": "https://github.com/material-components/material-components-android/commit/ef60931e2b68f3668a41d312c4906246fd801799",
    "details": {
      "sha": "33be8d85c50242040c48325f0af05aa72086474b",
      "filename": "lib/java/com/google/android/material/tabs/TabLayout.java",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/material-components/material-components-android/blob/ef60931e2b68f3668a41d312c4906246fd801799/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftabs%2FTabLayout.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/ef60931e2b68f3668a41d312c4906246fd801799/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftabs%2FTabLayout.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftabs%2FTabLayout.java?ref=ef60931e2b68f3668a41d312c4906246fd801799",
      "patch": "@@ -2678,12 +2678,10 @@ public void setSelected(final boolean selected) {\n     @Override\n     public void onInitializeAccessibilityNodeInfo(@NonNull AccessibilityNodeInfo info) {\n       super.onInitializeAccessibilityNodeInfo(info);\n+      AccessibilityNodeInfoCompat infoCompat = AccessibilityNodeInfoCompat.wrap(info);\n       if (badgeDrawable != null && badgeDrawable.isVisible()) {\n-        CharSequence customContentDescription = getContentDescription();\n-        info.setContentDescription(\n-            customContentDescription + \", \" + badgeDrawable.getContentDescription());\n+        infoCompat.setContentDescription(badgeDrawable.getContentDescription());\n       }\n-      AccessibilityNodeInfoCompat infoCompat = AccessibilityNodeInfoCompat.wrap(info);\n       infoCompat.setCollectionItemInfo(\n           CollectionItemInfoCompat.obtain(\n               /* rowIndex= */ 0,",
      "parent_sha": "d73b3a47be293200a452ac9fc40cee81f982692b"
    }
  },
  {
    "oid": "b8625c6118ee078644b664d7d5b235a755fba718",
    "message": "Fix BottomSheetBehaviorTest\n\nBottomSheetBehaviorTest#testNestedScroll was failing on tablet.\n\nTest: This is the test\nBug: 36855751\nChange-Id: I1ea95d66aa3a3d8b85964428688c29839d067fb7\nPiperOrigin-RevId: 160471346",
    "date": "2017-09-21T15:28:52Z",
    "url": "https://github.com/material-components/material-components-android/commit/b8625c6118ee078644b664d7d5b235a755fba718",
    "details": {
      "sha": "8d76bfd53caace5cdf775e0b17e470d605f25c01",
      "filename": "tests/javatests/android/support/design/widget/BottomSheetBehaviorTest.java",
      "status": "modified",
      "additions": 4,
      "deletions": 14,
      "changes": 18,
      "blob_url": "https://github.com/material-components/material-components-android/blob/b8625c6118ee078644b664d7d5b235a755fba718/tests%2Fjavatests%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FBottomSheetBehaviorTest.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/b8625c6118ee078644b664d7d5b235a755fba718/tests%2Fjavatests%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FBottomSheetBehaviorTest.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/tests%2Fjavatests%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FBottomSheetBehaviorTest.java?ref=b8625c6118ee078644b664d7d5b235a755fba718",
      "patch": "@@ -41,7 +41,6 @@\n import android.view.View;\n import android.view.ViewConfiguration;\n import android.view.ViewGroup;\n-import android.widget.TextView;\n import android.support.test.espresso.Espresso;\n import android.support.test.espresso.IdlingResource;\n import android.support.test.espresso.NoMatchingViewException;\n@@ -533,20 +532,11 @@ public void run() {\n                 scroll,\n                 new ViewGroup.LayoutParams(\n                     ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));\n-            TextView view = new TextView(activityTestRule.getActivity());\n-            StringBuilder sb = new StringBuilder();\n-            for (int i = 0; i < 500; ++i) {\n-              sb.append(\"It is fine today. \");\n-            }\n-            view.setText(sb);\n-            view.setOnClickListener(\n-                new View.OnClickListener() {\n-                  @Override\n-                  public void onClick(View v) {\n-                    // Do nothing\n-                  }\n-                });\n+            View view = new View(activityTestRule.getActivity());\n+            // Make sure that the NestedScrollView is always scrollable\n+            view.setMinimumHeight(bottomSheet.getHeight() + 1000);\n             scroll.addView(view);\n+\n             assertThat(behavior.getState(), is(BottomSheetBehavior.STATE_COLLAPSED));\n             // The scroll offset is 0 at first\n             assertThat(scroll.getScrollY(), is(0));",
      "parent_sha": "d9306c69c17a5e43d1db22fd4eff3b65550ed6c3"
    }
  },
  {
    "oid": "ba1d772575dbdbfa31ed93cd22d32e7c7c5ddc5d",
    "message": "Annotate NavigationView padding setters and getters.\n\nAnnotate with @Dimension, which by default implies a pixel dimension.\n\nPiperOrigin-RevId: 196549450",
    "date": "2018-05-16T15:43:46Z",
    "url": "https://github.com/material-components/material-components-android/commit/ba1d772575dbdbfa31ed93cd22d32e7c7c5ddc5d",
    "details": {
      "sha": "f8b1d011588f2c91916504f2deaa22c8ed385122",
      "filename": "lib/java/com/google/android/material/navigation/NavigationView.java",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/material-components/material-components-android/blob/ba1d772575dbdbfa31ed93cd22d32e7c7c5ddc5d/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fnavigation%2FNavigationView.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/ba1d772575dbdbfa31ed93cd22d32e7c7c5ddc5d/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fnavigation%2FNavigationView.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fnavigation%2FNavigationView.java?ref=ba1d772575dbdbfa31ed93cd22d32e7c7c5ddc5d",
      "patch": "@@ -27,6 +27,7 @@\n import android.os.Parcel;\n import android.os.Parcelable;\n import android.support.annotation.DimenRes;\n+import android.support.annotation.Dimension;\n import android.support.annotation.DrawableRes;\n import android.support.annotation.IdRes;\n import android.support.annotation.LayoutRes;\n@@ -397,6 +398,7 @@ public void setItemBackground(@Nullable Drawable itemBackground) {\n    * @see #setItemHorizontalPadding(int)\n    * @attr ref R.styleable#NavigationView_itemHorizontalPadding\n    */\n+  @Dimension\n   public int getItemHorizontalPadding() {\n     return presenter.getItemHorizontalPadding();\n   }\n@@ -407,7 +409,7 @@ public int getItemHorizontalPadding() {\n    * @param padding The horizontal padding in pixels.\n    * @attr ref R.styleable#NavigationView_itemHorizontalPadding\n    */\n-  public void setItemHorizontalPadding(int padding) {\n+  public void setItemHorizontalPadding(@Dimension int padding) {\n     presenter.setItemHorizontalPadding(padding);\n   }\n \n@@ -427,6 +429,7 @@ public void setItemHorizontalPaddingResource(@DimenRes int paddingResource) {\n    * @see #setItemIconPadding(int)\n    * @attr ref R.styleable#NavigationView_itemIconPadding\n    */\n+  @Dimension\n   public int getItemIconPadding() {\n     return presenter.getItemIconPadding();\n   }\n@@ -437,7 +440,7 @@ public int getItemIconPadding() {\n    * @param padding The padding in pixels.\n    * @attr ref R.styleable#NavigationView_itemIconPadding\n    */\n-  public void setItemIconPadding(int padding) {\n+  public void setItemIconPadding(@Dimension int padding) {\n     presenter.setItemIconPadding(padding);\n   }\n ",
      "parent_sha": "6709e6af1e16966e92f3e87ec33f9f4e9bbec324"
    }
  },
  {
    "oid": "8728f5da5006e523f02d1fa1d396774aed705e97",
    "message": "Separate chip's state from the close icon's state.\nAdd public getters for the touch bounds of the chip and close icon.\n\nThey will be separate touch targets, mouse targets, keyboard targets, and a11y targets.\nThis change paves the way for the two logical sub-views to respond to different states.\n\nThe API was created to mirror existing APIs:\nisStateful() vs isCloseIconStateful()\nsetState() vs setCloseIconState()\ngetState() vs getCloseIconState()\n\nonStateChange() is now responsible for handling both chip and close icon state changes.\n\nPiperOrigin-RevId: 173359199",
    "date": "2017-11-14T18:59:15Z",
    "url": "https://github.com/material-components/material-components-android/commit/8728f5da5006e523f02d1fa1d396774aed705e97",
    "details": {
      "sha": "24dc543844ab7eee51bcd97c872c7127929deceb",
      "filename": "lib/src/android/support/design/chip/ChipDrawable.java",
      "status": "modified",
      "additions": 108,
      "deletions": 19,
      "changes": 127,
      "blob_url": "https://github.com/material-components/material-components-android/blob/8728f5da5006e523f02d1fa1d396774aed705e97/lib%2Fsrc%2Fandroid%2Fsupport%2Fdesign%2Fchip%2FChipDrawable.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/8728f5da5006e523f02d1fa1d396774aed705e97/lib%2Fsrc%2Fandroid%2Fsupport%2Fdesign%2Fchip%2FChipDrawable.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fsrc%2Fandroid%2Fsupport%2Fdesign%2Fchip%2FChipDrawable.java?ref=8728f5da5006e523f02d1fa1d396774aed705e97",
      "patch": "@@ -54,7 +54,9 @@\n import android.text.TextPaint;\n import android.text.style.TextAppearanceSpan;\n import android.util.AttributeSet;\n+import android.util.StateSet;\n import android.view.View;\n+import java.util.Arrays;\n \n /**\n  * ChipDrawable contains all the layout and draw logic for {@link Chip}.\n@@ -92,6 +94,10 @@\n  * <p>Note that the stroke is drawn centered on the edge of the chip, it contributes <code>\n  * chipStrokeWidth/2f</code> pixels on either size.\n  *\n+ * <p>ChipDrawable contains three child drawables: {@link #chipIcon}, {@link #checkedIcon}, and\n+ * {@link #closeIcon}. chipIcon and checkedIcon inherit the state of this drawable, but closeIcon\n+ * contains its own state that you can set with {@link #setCloseIconState(int[])}.\n+ *\n  * @see Chip\n  */\n public class ChipDrawable extends Drawable implements TintAwareDrawable, Callback {\n@@ -178,6 +184,7 @@ public class ChipDrawable extends Drawable implements TintAwareDrawable, Callbac\n   @Nullable private PorterDuffColorFilter tintFilter;\n   @Nullable private ColorStateList tint;\n   @Nullable private Mode tintMode = Mode.SRC_IN;\n+  private int[] closeIconStateSet = StateSet.WILD_CARD;\n \n   /** Returns a ChipDrawable from the given attributes. */\n   public static ChipDrawable createFromAttributes(\n@@ -242,6 +249,22 @@ private void loadFromAttributes(\n     a.recycle();\n   }\n \n+  /**\n+   * Returns the chip's drawable-absolute bounds (top-left is <code>[bounds.left, bounds.top]\n+   * </code>). This is the part of the chip that does not include the close icon.\n+   */\n+  public void getChipTouchBounds(RectF bounds) {\n+    calculateChipTouchBounds(getBounds(), bounds);\n+  }\n+\n+  /**\n+   * Returns the close icon's drawable-absolute bounds (top-left is <code>[bounds.left, bounds.top]\n+   * </code>).\n+   */\n+  public void getCloseIconTouchBounds(RectF bounds) {\n+    calculateCloseIconTouchBounds(getBounds(), bounds);\n+  }\n+\n   /**\n    * Returns the width at which the chip would like to be laid out.\n    *\n@@ -508,10 +531,45 @@ private void calculateCloseIconBounds(Rect bounds, RectF outBounds) {\n     }\n   }\n \n+  private void calculateChipTouchBounds(Rect bounds, RectF outBounds) {\n+    outBounds.set(bounds);\n+\n+    if (closeIcon != null) {\n+      outBounds.right =\n+          bounds.right\n+              - chipStrokeWidth / 2f\n+              - chipEndPadding\n+              - closeIconEndPadding\n+              - closeIconSize\n+              - closeIconStartPadding\n+              - textEndPadding;\n+    }\n+  }\n+\n+  private void calculateCloseIconTouchBounds(Rect bounds, RectF outBounds) {\n+    outBounds.setEmpty();\n+\n+    if (closeIcon != null) {\n+      outBounds.right = bounds.right;\n+      outBounds.left =\n+          outBounds.right\n+              - chipStrokeWidth / 2f\n+              - chipEndPadding\n+              - closeIconEndPadding\n+              - closeIconSize\n+              - closeIconStartPadding\n+              - textEndPadding;\n+\n+      outBounds.top = bounds.top;\n+      outBounds.bottom = bounds.bottom;\n+    }\n+  }\n+\n   /**\n-   * Indicates whether this drawable will change its appearance based on state.\n+   * Indicates whether this chip drawable will change its appearance based on state.\n    *\n-   * <p>The logic here must match {@link #onStateChange(int[])}.\n+   * <p>The logic here and {@link #isCloseIconStateful()} must match {@link #onStateChange(int[],\n+   * int[])}.\n    */\n   @Override\n   public boolean isStateful() {\n@@ -522,22 +580,54 @@ public boolean isStateful() {\n         || checkedIcon != null\n         || isStateful(chipIcon)\n         || isStateful(checkedIcon)\n-        || isStateful(closeIcon)\n         || isStateful(tint);\n   }\n \n   /**\n-   * Changes appearance in response to the specified state.\n+   * Indicates whether the close icon drawable will change its appearance based on state.\n    *\n-   * <p>The logic here must match {@link #isStateful()}.\n+   * <p>The logic here and {@link #isStateful()} must match {@link #onStateChange(int[], int[])}.\n+   */\n+  public boolean isCloseIconStateful() {\n+    return isStateful(closeIcon);\n+  }\n+\n+  /**\n+   * Specify a set of states for the close icon. This is a separate state set than the one used for\n+   * the rest of the chip.\n    */\n+  public boolean setCloseIconState(@NonNull int[] stateSet) {\n+    if (!Arrays.equals(closeIconStateSet, stateSet)) {\n+      closeIconStateSet = stateSet;\n+      if (closeIcon != null) {\n+        return onStateChange(getState(), stateSet);\n+      }\n+    }\n+    return false;\n+  }\n+\n+  /** Describes the current state of the close icon. */\n+  @NonNull\n+  public int[] getCloseIconState() {\n+    return closeIconStateSet;\n+  }\n+\n   @Override\n   protected boolean onStateChange(int[] state) {\n-    boolean invalidate = super.onStateChange(state);\n+    return onStateChange(state, getCloseIconState());\n+  }\n+\n+  /**\n+   * Changes appearance in response to the specified state.\n+   *\n+   * <p>The logic here must match {@link #isStateful()} and {@link #isCloseIconStateful()}.\n+   */\n+  private boolean onStateChange(int[] chipState, int[] closeIconState) {\n+    boolean invalidate = super.onStateChange(chipState);\n \n     int newChipBackgroundColor =\n         chipBackgroundColor != null\n-            ? chipBackgroundColor.getColorForState(state, currentChipBackgroundColor)\n+            ? chipBackgroundColor.getColorForState(chipState, currentChipBackgroundColor)\n             : 0;\n     if (currentChipBackgroundColor != newChipBackgroundColor) {\n       currentChipBackgroundColor = newChipBackgroundColor;\n@@ -546,23 +636,23 @@ protected boolean onStateChange(int[] state) {\n \n     int newChipStrokeColor =\n         chipStrokeColor != null\n-            ? chipStrokeColor.getColorForState(state, currentChipStrokeColor)\n+            ? chipStrokeColor.getColorForState(chipState, currentChipStrokeColor)\n             : 0;\n     if (currentChipStrokeColor != newChipStrokeColor) {\n       currentChipStrokeColor = newChipStrokeColor;\n       invalidate = true;\n     }\n \n     int newRippleAlpha =\n-        rippleAlpha != null ? rippleAlpha.getColorForState(state, currentRippleAlpha) : 0;\n+        rippleAlpha != null ? rippleAlpha.getColorForState(chipState, currentRippleAlpha) : 0;\n     if (currentRippleAlpha != newRippleAlpha) {\n       currentRippleAlpha = newRippleAlpha;\n       invalidate = true;\n     }\n \n     int newChipTextColor =\n         textAppearanceSpan != null && textAppearanceSpan.getTextColor() != null\n-            ? textAppearanceSpan.getTextColor().getColorForState(state, currentChipTextColor)\n+            ? textAppearanceSpan.getTextColor().getColorForState(chipState, currentChipTextColor)\n             : 0;\n     if (currentChipTextColor != newChipTextColor) {\n       currentChipTextColor = newChipTextColor;\n@@ -575,24 +665,23 @@ protected boolean onStateChange(int[] state) {\n       invalidate = true;\n     }\n \n-    int newTint = tint != null ? tint.getColorForState(state, currentTint) : 0;\n+    int newTint = tint != null ? tint.getColorForState(chipState, currentTint) : 0;\n     if (currentTint != newTint) {\n       currentTint = newTint;\n       tintFilter = DrawableUtils.updateTintFilter(this, tint, tintMode);\n       invalidate = true;\n     }\n \n     if (isStateful(chipIcon)) {\n-      invalidate |= chipIcon.setState(state);\n+      invalidate |= chipIcon.setState(chipState);\n     }\n     if (isStateful(checkedIcon)) {\n-      invalidate |= checkedIcon.setState(state);\n+      invalidate |= checkedIcon.setState(chipState);\n     }\n     if (isStateful(closeIcon)) {\n-      invalidate |= closeIcon.setState(state);\n+      invalidate |= closeIcon.setState(closeIconState);\n     }\n \n-\n     if (invalidate) {\n       invalidateSelf();\n     }\n@@ -736,23 +825,23 @@ public void getOutline(@NonNull Outline outline) {\n   public void invalidateDrawable(@NonNull Drawable who) {\n     Callback callback = getCallback();\n     if (callback != null) {\n-      callback.invalidateDrawable(who);\n+      callback.invalidateDrawable(this);\n     }\n   }\n \n   @Override\n   public void scheduleDrawable(@NonNull Drawable who, @NonNull Runnable what, long when) {\n     Callback callback = getCallback();\n     if (callback != null) {\n-      callback.scheduleDrawable(who, what, when);\n+      callback.scheduleDrawable(this, what, when);\n     }\n   }\n \n   @Override\n   public void unscheduleDrawable(@NonNull Drawable who, @NonNull Runnable what) {\n     Callback callback = getCallback();\n     if (callback != null) {\n-      callback.unscheduleDrawable(who, what);\n+      callback.unscheduleDrawable(this, what);\n     }\n   }\n \n@@ -767,7 +856,7 @@ private void applyChildDrawable(@Nullable Drawable drawable) {\n       drawable.setCallback(this);\n       DrawableCompat.setLayoutDirection(drawable, DrawableCompat.getLayoutDirection(this));\n       if (drawable.isStateful()) {\n-        drawable.setState(getState());\n+        drawable.setState(drawable == closeIcon ? getCloseIconState() : getState());\n       }\n       drawable.setLevel(getLevel());\n       drawable.setVisible(isVisible(), false);",
      "parent_sha": "a85ae026a12e78cec8cf9c39ac950a77c933ae11"
    }
  },
  {
    "oid": "3bc66125366e3884d61531eaeecc6eb346d21487",
    "message": "[Slider] Use a uniform way to update labels\n\nResolves https://github.com/material-components/material-components-android/pull/4093\n\nGIT_ORIGIN_REV_ID=7db4936713bd31a070d4bb1d9743d99222840184\nPiperOrigin-RevId: 614741678",
    "date": "2024-03-15T17:28:06Z",
    "url": "https://github.com/material-components/material-components-android/commit/3bc66125366e3884d61531eaeecc6eb346d21487",
    "details": {
      "sha": "c1e02db2840737e73e0a5a7989f5e595d6379cf6",
      "filename": "lib/java/com/google/android/material/slider/BaseSlider.java",
      "status": "modified",
      "additions": 33,
      "deletions": 30,
      "changes": 63,
      "blob_url": "https://github.com/material-components/material-components-android/blob/3bc66125366e3884d61531eaeecc6eb346d21487/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fslider%2FBaseSlider.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/3bc66125366e3884d61531eaeecc6eb346d21487/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fslider%2FBaseSlider.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fslider%2FBaseSlider.java?ref=3bc66125366e3884d61531eaeecc6eb346d21487",
      "patch": "@@ -348,25 +348,7 @@ abstract class BaseSlider<\n \n   @NonNull\n   private final ViewTreeObserver.OnScrollChangedListener onScrollChangedListener =\n-      () -> {\n-        if (shouldAlwaysShowLabel() && isEnabled()) {\n-          Rect contentViewBounds = new Rect();\n-          ViewUtils.getContentView(this).getHitRect(contentViewBounds);\n-          boolean isSliderVisibleOnScreen = getLocalVisibleRect(contentViewBounds);\n-          for (int i = 0; i < labels.size(); i++) {\n-            TooltipDrawable label = labels.get(i);\n-            // Get associated value for label\n-            if (i < values.size()) {\n-              positionLabel(label, values.get(i));\n-            }\n-            if (isSliderVisibleOnScreen) {\n-              ViewUtils.getContentViewOverlay(this).add(label);\n-            } else {\n-              ViewUtils.getContentViewOverlay(this).remove(label);\n-            }\n-          }\n-        }\n-      };\n+      this::updateLabels;\n \n   /**\n    * Determines the behavior of the label which can be any of the following.\n@@ -2029,12 +2011,7 @@ protected void onDraw(@NonNull Canvas canvas) {\n       maybeDrawCompatHalo(canvas, trackWidth, yCenter);\n     }\n \n-    // Draw labels if there is an active thumb or the labels are always visible.\n-    if ((activeThumbIdx != -1 || shouldAlwaysShowLabel()) && isEnabled()) {\n-      ensureLabelsAdded();\n-    } else {\n-      ensureLabelsRemoved();\n-    }\n+    updateLabels();\n \n     drawThumbs(canvas, trackWidth, yCenter);\n   }\n@@ -2660,6 +2637,37 @@ public void onAnimationUpdate(ValueAnimator animation) {\n     return animator;\n   }\n \n+  private void updateLabels() {\n+    switch (labelBehavior) {\n+      case LABEL_GONE:\n+        ensureLabelsRemoved();\n+        break;\n+      case LABEL_VISIBLE:\n+        if (isEnabled() && isSliderVisibleOnScreen()) {\n+          ensureLabelsAdded();\n+        } else {\n+          ensureLabelsRemoved();\n+        }\n+        break;\n+      case LABEL_FLOATING:\n+      case LABEL_WITHIN_BOUNDS:\n+        if (activeThumbIdx != -1 && isEnabled()) {\n+          ensureLabelsAdded();\n+        } else {\n+          ensureLabelsRemoved();\n+        }\n+        break;\n+      default:\n+        throw new IllegalArgumentException(\"Unexpected labelBehavior: \" + labelBehavior);\n+    }\n+  }\n+\n+  private boolean isSliderVisibleOnScreen() {\n+    final Rect contentViewBounds = new Rect();\n+    ViewUtils.getContentView(this).getHitRect(contentViewBounds);\n+    return getLocalVisibleRect(contentViewBounds);\n+  }\n+\n   private void ensureLabelsRemoved() {\n     // If the labels are animated in or in the process of animating in, create and start a new\n     // animator to animate out the labels and remove them once the animation ends.\n@@ -2683,11 +2691,6 @@ public void onAnimationEnd(Animator animation) {\n   }\n \n   private void ensureLabelsAdded() {\n-    if (labelBehavior == LABEL_GONE) {\n-      // If the label shouldn't be drawn we can skip this.\n-      return;\n-    }\n-\n     // If the labels are not animating in, start an animator to show them. ensureLabelsAdded will\n     // be called multiple times by BaseSlider's draw method, making this check necessary to avoid\n     // creating and starting an animator for each draw call.",
      "parent_sha": "22de817c30a493fb7dda46a8bea784d5bdc1dbdb"
    }
  },
  {
    "oid": "4acd57092dbdf09f2d92291215363e54245f6f92",
    "message": "[Catalog] Fix to edge to edge behaviour for catalog\n\nPiperOrigin-RevId: 637973580",
    "date": "2024-06-05T18:23:23Z",
    "url": "https://github.com/material-components/material-components-android/commit/4acd57092dbdf09f2d92291215363e54245f6f92",
    "details": {
      "sha": "bad7ee6e4943a690b89d8f5fdf78fec70374dd0c",
      "filename": "catalog/java/io/material/catalog/windowpreferences/WindowPreferencesManager.java",
      "status": "modified",
      "additions": 6,
      "deletions": 16,
      "changes": 22,
      "blob_url": "https://github.com/material-components/material-components-android/blob/4acd57092dbdf09f2d92291215363e54245f6f92/catalog%2Fjava%2Fio%2Fmaterial%2Fcatalog%2Fwindowpreferences%2FWindowPreferencesManager.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/4acd57092dbdf09f2d92291215363e54245f6f92/catalog%2Fjava%2Fio%2Fmaterial%2Fcatalog%2Fwindowpreferences%2FWindowPreferencesManager.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/catalog%2Fjava%2Fio%2Fmaterial%2Fcatalog%2Fwindowpreferences%2FWindowPreferencesManager.java?ref=4acd57092dbdf09f2d92291215363e54245f6f92",
      "patch": "@@ -18,7 +18,6 @@\n \n import android.content.Context;\n import android.content.SharedPreferences;\n-import android.content.res.Configuration;\n import android.os.Build.VERSION;\n import android.os.Build.VERSION_CODES;\n import android.view.Window;\n@@ -40,23 +39,14 @@ public WindowPreferencesManager(Context context) {\n     this.context = context;\n     this.listener =\n         (v, insets) -> {\n-          if (v.getResources().getConfiguration().orientation\n-              != Configuration.ORIENTATION_LANDSCAPE) {\n-            return insets;\n-          }\n+          int leftInset = insets.getStableInsetLeft();\n+          int rightInset = insets.getStableInsetRight();\n           if (VERSION.SDK_INT >= VERSION_CODES.R) {\n-            v.setPadding(\n-                insets.getInsets(WindowInsets.Type.systemBars()).left,\n-                0,\n-                insets.getInsets(WindowInsets.Type.systemBars()).right,\n-                insets.getInsets(WindowInsets.Type.systemBars()).bottom);\n-          } else {\n-            v.setPadding(\n-                insets.getStableInsetLeft(),\n-                0,\n-                insets.getStableInsetRight(),\n-                insets.getStableInsetBottom());\n+            leftInset = insets.getInsets(WindowInsets.Type.systemBars()).left;\n+            rightInset = insets.getInsets(WindowInsets.Type.systemBars()).right;\n           }\n+\n+          v.setPadding(leftInset, 0, rightInset, 0);\n           return insets;\n         };\n   }",
      "parent_sha": "801ccab0c06e6606b1f3b383a6fd7edb554ea3b7"
    }
  },
  {
    "oid": "71c2312c09f8643ceb1848564bbd18f2b1de0f3b",
    "message": "fix iconPadding when textStart is used as icon gravity\n\nPiperOrigin-RevId: 218442537",
    "date": "2018-10-28T23:11:51Z",
    "url": "https://github.com/material-components/material-components-android/commit/71c2312c09f8643ceb1848564bbd18f2b1de0f3b",
    "details": {
      "sha": "51235e6ed25465587f245884dc16c0ba30809b56",
      "filename": "lib/java/com/google/android/material/button/MaterialButton.java",
      "status": "modified",
      "additions": 11,
      "deletions": 2,
      "changes": 13,
      "blob_url": "https://github.com/material-components/material-components-android/blob/71c2312c09f8643ceb1848564bbd18f2b1de0f3b/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbutton%2FMaterialButton.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/71c2312c09f8643ceb1848564bbd18f2b1de0f3b/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbutton%2FMaterialButton.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbutton%2FMaterialButton.java?ref=71c2312c09f8643ceb1848564bbd18f2b1de0f3b",
      "patch": "@@ -333,8 +333,17 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n     }\n \n     Paint textPaint = getPaint();\n-    int textWidth =\n-        Math.min((int) textPaint.measureText(getText().toString()), getLayout().getWidth());\n+    String buttonText = getText().toString();\n+\n+    if (getTransformationMethod() != null) {\n+      // if text is transformed, add that transformation to to ensure correct calculation\n+      // of icon padding.\n+      buttonText = getTransformationMethod().getTransformation(buttonText, this).toString();\n+    }\n+\n+     int textWidth =\n+        Math.min((int) textPaint.measureText(buttonText), getLayout().getWidth());\n+\n     int localIconSize = iconSize == 0 ? icon.getIntrinsicWidth() : iconSize;\n     int newIconLeft =\n         (getMeasuredWidth()",
      "parent_sha": "985357da268ad1d449cc9824dc9f3aa48876fc6d"
    }
  },
  {
    "oid": "78d2c1f3db44c07fc84e6878fcd56bc2a5db310e",
    "message": "[M3][Color] Fix Resources Loader bug for color harmonization\n\nPiperOrigin-RevId: 449926388",
    "date": "2022-05-23T15:07:01Z",
    "url": "https://github.com/material-components/material-components-android/commit/78d2c1f3db44c07fc84e6878fcd56bc2a5db310e",
    "details": {
      "sha": "cabc900189b7f4bdf48975735897e63fc8bd6fcb",
      "filename": "lib/java/com/google/android/material/color/ColorResourcesTableCreator.java",
      "status": "modified",
      "additions": 22,
      "deletions": 6,
      "changes": 28,
      "blob_url": "https://github.com/material-components/material-components-android/blob/78d2c1f3db44c07fc84e6878fcd56bc2a5db310e/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fcolor%2FColorResourcesTableCreator.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/78d2c1f3db44c07fc84e6878fcd56bc2a5db310e/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fcolor%2FColorResourcesTableCreator.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fcolor%2FColorResourcesTableCreator.java?ref=78d2c1f3db44c07fc84e6878fcd56bc2a5db310e",
      "patch": "@@ -46,11 +46,13 @@ private ColorResourcesTableCreator() {}\n   private static final short HEADER_TYPE_TYPE = 0x0201;\n   private static final short HEADER_TYPE_TYPE_SPEC = 0x0202;\n \n-  private static final byte TYPE_ID_COLOR = 0x06;\n-\n   private static final byte ANDROID_PACKAGE_ID = 0x01;\n   private static final byte APPLICATION_PACKAGE_ID = 0x7F;\n \n+  private static final String RESOURCE_TYPE_NAME_COLOR = \"color\";\n+\n+  private static byte typeIdColor;\n+\n   private static final PackageInfo ANDROID_PACKAGE_INFO =\n       new PackageInfo(ANDROID_PACKAGE_ID, \"android\");\n \n@@ -63,17 +65,24 @@ public int compare(ColorResource res1, ColorResource res2) {\n       };\n \n   static byte[] create(Context context, Map<Integer, Integer> colorMapping) throws IOException {\n+    if (colorMapping.entrySet().isEmpty()) {\n+      throw new IllegalArgumentException(\"No color resources provided for harmonization.\");\n+    }\n     PackageInfo applicationPackageInfo =\n         new PackageInfo(APPLICATION_PACKAGE_ID, context.getPackageName());\n \n     Map<PackageInfo, List<ColorResource>> colorResourceMap = new HashMap<>();\n+    ColorResource colorResource = null;\n     for (Map.Entry<Integer, Integer> entry : colorMapping.entrySet()) {\n-      ColorResource colorResource =\n+      colorResource =\n           new ColorResource(\n               entry.getKey(),\n               context.getResources().getResourceName(entry.getKey()),\n               entry.getValue());\n-      if (colorResource.typeId != TYPE_ID_COLOR) {\n+      if (!context\n+          .getResources()\n+          .getResourceTypeName(entry.getKey())\n+          .equals(RESOURCE_TYPE_NAME_COLOR)) {\n         throw new IllegalArgumentException(\n             \"Non color resource found: name=\"\n                 + colorResource.name\n@@ -94,6 +103,13 @@ static byte[] create(Context context, Map<Integer, Integer> colorMapping) throws\n       }\n       colorResourceMap.get(packageInfo).add(colorResource);\n     }\n+    // Resource Type Ids are assigned by aapt arbitrarily, for each new type the next available\n+    // number is assigned and used. The type id will be the same for resources that are the same\n+    // type.\n+    typeIdColor = colorResource.typeId;\n+    if (typeIdColor == 0) {\n+      throw new IllegalArgumentException(\"No color resources found for harmonization.\");\n+    }\n     ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n     new ResTable(colorResourceMap).writeTo(outputStream);\n     return outputStream.toByteArray();\n@@ -403,7 +419,7 @@ private static class TypeSpecChunk {\n \n     void writeTo(ByteArrayOutputStream outputStream) throws IOException {\n       header.writeTo(outputStream);\n-      outputStream.write(new byte[] {TYPE_ID_COLOR, 0x00, 0x00, 0x00});\n+      outputStream.write(new byte[] {typeIdColor, 0x00, 0x00, 0x00});\n       outputStream.write(intToByteArray(entryCount));\n       for (int entryFlag : entryFlags) {\n         outputStream.write(intToByteArray(entryFlag));\n@@ -465,7 +481,7 @@ private static class TypeChunk {\n \n     void writeTo(ByteArrayOutputStream outputStream) throws IOException {\n       header.writeTo(outputStream);\n-      outputStream.write(new byte[] {TYPE_ID_COLOR, 0x00, 0x00, 0x00});\n+      outputStream.write(new byte[] {typeIdColor, 0x00, 0x00, 0x00});\n       outputStream.write(intToByteArray(entryCount));\n       outputStream.write(intToByteArray(getEntryStart()));\n       outputStream.write(config);",
      "parent_sha": "65120923d590579f3083e05eba542a4ac57e98c5"
    }
  },
  {
    "oid": "21b74f90b2113ef32d093e853d36c867b08cdb2d",
    "message": "[BottomAppBar][BottomNavigationView] Update motion specs for show/hide bar\n\nPiperOrigin-RevId: 470801900",
    "date": "2022-08-30T15:27:36Z",
    "url": "https://github.com/material-components/material-components-android/commit/21b74f90b2113ef32d093e853d36c867b08cdb2d",
    "details": {
      "sha": "b1a979423d5d294bbdcfa0bfcdc07b4ac46ffe24",
      "filename": "lib/java/com/google/android/material/behavior/HideBottomViewOnScrollBehavior.java",
      "status": "modified",
      "additions": 31,
      "deletions": 12,
      "changes": 43,
      "blob_url": "https://github.com/material-components/material-components-android/blob/21b74f90b2113ef32d093e853d36c867b08cdb2d/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbehavior%2FHideBottomViewOnScrollBehavior.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/21b74f90b2113ef32d093e853d36c867b08cdb2d/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbehavior%2FHideBottomViewOnScrollBehavior.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbehavior%2FHideBottomViewOnScrollBehavior.java?ref=21b74f90b2113ef32d093e853d36c867b08cdb2d",
      "patch": "@@ -16,6 +16,8 @@\n \n package com.google.android.material.behavior;\n \n+import com.google.android.material.R;\n+\n import static androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP;\n \n import android.animation.Animator;\n@@ -35,6 +37,7 @@\n import androidx.coordinatorlayout.widget.CoordinatorLayout.Behavior;\n import androidx.core.view.ViewCompat;\n import com.google.android.material.animation.AnimationUtils;\n+import com.google.android.material.motion.MotionUtils;\n import java.util.LinkedHashSet;\n \n /**\n@@ -63,8 +66,16 @@ public interface OnScrollStateChangedListener {\n   private final LinkedHashSet<OnScrollStateChangedListener> onScrollStateChangedListeners =\n       new LinkedHashSet<>();\n \n-  protected static final int ENTER_ANIMATION_DURATION = 225;\n-  protected static final int EXIT_ANIMATION_DURATION = 175;\n+  private static final int DEFAULT_ENTER_ANIMATION_DURATION_MS = 225;\n+  private static final int DEFAULT_EXIT_ANIMATION_DURATION_MS = 175;\n+  private static final int ENTER_ANIM_DURATION_ATTR = R.attr.motionDurationLong2;\n+  private static final int EXIT_ANIM_DURATION_ATTR = R.attr.motionDurationMedium4;\n+  private static final int ENTER_EXIT_ANIM_EASING_ATTR = R.attr.motionEasingEmphasizedInterpolator;\n+\n+  private int enterAnimDuration;\n+  private int exitAnimDuration;\n+  private TimeInterpolator enterAnimInterpolator;\n+  private TimeInterpolator exitAnimInterpolator;\n \n   /** State of the bottom view when it's scrolled down. */\n   public static final int STATE_SCROLLED_DOWN = 1;\n@@ -100,6 +111,22 @@ public boolean onLayoutChild(\n     ViewGroup.MarginLayoutParams paramsCompat =\n         (ViewGroup.MarginLayoutParams) child.getLayoutParams();\n     height = child.getMeasuredHeight() + paramsCompat.bottomMargin;\n+    enterAnimDuration =\n+        MotionUtils.resolveThemeDuration(\n+            child.getContext(), ENTER_ANIM_DURATION_ATTR, DEFAULT_ENTER_ANIMATION_DURATION_MS);\n+    exitAnimDuration =\n+        MotionUtils.resolveThemeDuration(\n+            child.getContext(), EXIT_ANIM_DURATION_ATTR, DEFAULT_EXIT_ANIMATION_DURATION_MS);\n+    enterAnimInterpolator =\n+        MotionUtils.resolveThemeInterpolator(\n+            child.getContext(),\n+            ENTER_EXIT_ANIM_EASING_ATTR,\n+            AnimationUtils.LINEAR_OUT_SLOW_IN_INTERPOLATOR);\n+    exitAnimInterpolator =\n+        MotionUtils.resolveThemeInterpolator(\n+            child.getContext(),\n+            ENTER_EXIT_ANIM_EASING_ATTR,\n+            AnimationUtils.FAST_OUT_LINEAR_IN_INTERPOLATOR);\n     return super.onLayoutChild(parent, child, layoutDirection);\n   }\n \n@@ -177,11 +204,7 @@ public void slideUp(@NonNull V child, boolean animate) {\n     updateCurrentState(child, STATE_SCROLLED_UP);\n     int targetTranslationY = 0;\n     if (animate) {\n-      animateChildTo(\n-          child,\n-          targetTranslationY,\n-          ENTER_ANIMATION_DURATION,\n-          AnimationUtils.LINEAR_OUT_SLOW_IN_INTERPOLATOR);\n+      animateChildTo(child, targetTranslationY, enterAnimDuration, enterAnimInterpolator);\n     } else {\n       child.setTranslationY(targetTranslationY);\n     }\n@@ -218,11 +241,7 @@ public void slideDown(@NonNull V child, boolean animate) {\n     updateCurrentState(child, STATE_SCROLLED_DOWN);\n     int targetTranslationY = height + additionalHiddenOffsetY;\n     if (animate) {\n-      animateChildTo(\n-          child,\n-          targetTranslationY,\n-          EXIT_ANIMATION_DURATION,\n-          AnimationUtils.FAST_OUT_LINEAR_IN_INTERPOLATOR);\n+      animateChildTo(child, targetTranslationY, exitAnimDuration, exitAnimInterpolator);\n     } else {\n       child.setTranslationY(targetTranslationY);\n     }",
      "parent_sha": "5c2eb45fd9eee06374a4e687aec93550a750610f"
    }
  },
  {
    "oid": "58ceeab63ca74d740fb96fbb5e999de325822330",
    "message": "[SnackBar] Handle anchor view properly so no memory leak will happen\n\nThe anchor view can be detached even when the snack bar (or any\ntransient bottom bar) is showing. If this situation happens the\nglobal layout listener it registers with the anchor view will\nbecome not removable due to a bug/intended behavior of Android View's\nimplementation.\n\nWe need to remove the listener when the anchor view is detached to\nfix the issue.\n\nThis CL also refactors the whole implementation of anchor view and consolidates\nthe anchoring/unanchoring logic to improve readability and robustness of it.\n\nResolves https://github.com/material-components/material-components-android/issues/2042\n\nPiperOrigin-RevId: 382603130",
    "date": "2021-07-02T12:15:03Z",
    "url": "https://github.com/material-components/material-components-android/commit/58ceeab63ca74d740fb96fbb5e999de325822330",
    "details": {
      "sha": "9fd726348ee6a97fdc1600cdc2e6ed009a0d7902",
      "filename": "lib/java/com/google/android/material/snackbar/BaseTransientBottomBar.java",
      "status": "modified",
      "additions": 93,
      "deletions": 25,
      "changes": 118,
      "blob_url": "https://github.com/material-components/material-components-android/blob/58ceeab63ca74d740fb96fbb5e999de325822330/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fsnackbar%2FBaseTransientBottomBar.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/58ceeab63ca74d740fb96fbb5e999de325822330/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fsnackbar%2FBaseTransientBottomBar.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fsnackbar%2FBaseTransientBottomBar.java?ref=58ceeab63ca74d740fb96fbb5e999de325822330",
      "patch": "@@ -83,6 +83,7 @@\n import com.google.android.material.resources.MaterialResources;\n import java.lang.annotation.Retention;\n import java.lang.annotation.RetentionPolicy;\n+import java.lang.ref.WeakReference;\n import java.util.ArrayList;\n import java.util.List;\n \n@@ -262,19 +263,11 @@ public boolean handleMessage(@NonNull Message message) {\n \n   private int duration;\n   private boolean gestureInsetBottomIgnored;\n-  @Nullable private View anchorView;\n+\n+  @Nullable\n+  private Anchor anchor;\n+\n   private boolean anchorViewLayoutListenerEnabled = false;\n-  private final OnGlobalLayoutListener anchorViewLayoutListener =\n-      new OnGlobalLayoutListener() {\n-        @Override\n-        public void onGlobalLayout() {\n-          if (!anchorViewLayoutListenerEnabled) {\n-            return;\n-          }\n-          extraBottomMarginAnchorView = calculateBottomMarginForAnchorView();\n-          updateMargins();\n-        }\n-      };\n \n   @RequiresApi(VERSION_CODES.Q)\n   private final Runnable bottomMarginGestureInsetRunnable =\n@@ -451,7 +444,7 @@ private void updateMargins() {\n     }\n \n     int extraBottomMargin =\n-        anchorView != null ? extraBottomMarginAnchorView : extraBottomMarginWindowInset;\n+        getAnchorView() != null ? extraBottomMarginAnchorView : extraBottomMarginWindowInset;\n     MarginLayoutParams marginParams = (MarginLayoutParams) layoutParams;\n     marginParams.bottomMargin = originalMargins.bottom + extraBottomMargin;\n     marginParams.leftMargin = originalMargins.left + extraLeftMarginWindowInset;\n@@ -566,15 +559,16 @@ public B setAnimationMode(@AnimationMode int animationMode) {\n    */\n   @Nullable\n   public View getAnchorView() {\n-    return anchorView;\n+    return anchor == null ? null : anchor.getAnchorView();\n   }\n \n   /** Sets the view the {@link BaseTransientBottomBar} should be anchored above. */\n   @NonNull\n   public B setAnchorView(@Nullable View anchorView) {\n-    ViewUtils.removeOnGlobalLayoutListener(this.anchorView, anchorViewLayoutListener);\n-    this.anchorView = anchorView;\n-    ViewUtils.addOnGlobalLayoutListener(this.anchorView, anchorViewLayoutListener);\n+    if (this.anchor != null) {\n+      this.anchor.unanchor();\n+    }\n+    this.anchor = anchorView == null ? null : Anchor.anchor(this, anchorView);\n     return (B) this;\n   }\n \n@@ -768,8 +762,7 @@ public void run() {\n         setUpBehavior((CoordinatorLayout.LayoutParams) lp);\n       }\n \n-      extraBottomMarginAnchorView = calculateBottomMarginForAnchorView();\n-      updateMargins();\n+      recalculateAndUpdateMargins();\n \n       // Set view to INVISIBLE so it doesn't flash on the screen before the inset adjustment is\n       // handled and the enter animation is started\n@@ -861,18 +854,23 @@ public void onDragStateChanged(int state) {\n     clp.setBehavior(behavior);\n     // Also set the inset edge so that views can dodge the bar correctly, but only if there is\n     // no anchor view.\n-    if (anchorView == null) {\n+    if (getAnchorView() == null) {\n       clp.insetEdge = Gravity.BOTTOM;\n     }\n   }\n \n+  private void recalculateAndUpdateMargins() {\n+    extraBottomMarginAnchorView = calculateBottomMarginForAnchorView();\n+    updateMargins();\n+  }\n+\n   private int calculateBottomMarginForAnchorView() {\n-    if (anchorView == null) {\n+    if (getAnchorView() == null) {\n       return 0;\n     }\n \n     int[] anchorViewLocation = new int[2];\n-    anchorView.getLocationOnScreen(anchorViewLocation);\n+    getAnchorView().getLocationOnScreen(anchorViewLocation);\n     int anchorViewAbsoluteYTop = anchorViewLocation[1];\n \n     int[] targetParentLocation = new int[2];\n@@ -1096,9 +1094,6 @@ void onViewHidden(int event) {\n       }\n     }\n \n-    // Reset anchor view and onGlobalLayoutListener so they won't be leaked.\n-    setAnchorView(null);\n-\n     // Lastly, hide and remove the view from the parent (if attached)\n     ViewParent parent = view.getParent();\n     if (parent instanceof ViewGroup) {\n@@ -1362,4 +1357,77 @@ public void onInterceptTouchEvent(\n       }\n     }\n   }\n+\n+  @SuppressWarnings(\"rawtypes\") // Generic type of BaseTransientBottomBar doesn't matter here.\n+  static class Anchor\n+      implements android.view.View.OnAttachStateChangeListener, OnGlobalLayoutListener {\n+    @NonNull\n+    private final WeakReference<BaseTransientBottomBar> transientBottomBar;\n+\n+    @NonNull\n+    private final WeakReference<View> anchorView;\n+\n+    static Anchor anchor(\n+        @NonNull BaseTransientBottomBar transientBottomBar, @NonNull View anchorView) {\n+      Anchor anchor = new Anchor(transientBottomBar, anchorView);\n+      if (ViewCompat.isAttachedToWindow(anchorView)) {\n+        ViewUtils.addOnGlobalLayoutListener(anchorView, anchor);\n+      }\n+      anchorView.addOnAttachStateChangeListener(anchor);\n+      return anchor;\n+    }\n+\n+    private Anchor(\n+        @NonNull BaseTransientBottomBar transientBottomBar, @NonNull View anchorView) {\n+      this.transientBottomBar = new WeakReference<>(transientBottomBar);\n+      this.anchorView = new WeakReference<>(anchorView);\n+    }\n+\n+    @Override\n+    public void onViewAttachedToWindow(View anchorView) {\n+      if (unanchorIfNoTransientBottomBar()) {\n+        return;\n+      }\n+      ViewUtils.addOnGlobalLayoutListener(anchorView, this);\n+    }\n+\n+    @Override\n+    public void onViewDetachedFromWindow(View anchorView) {\n+      if (unanchorIfNoTransientBottomBar()) {\n+        return;\n+      }\n+      ViewUtils.removeOnGlobalLayoutListener(anchorView, this);\n+    }\n+\n+    @Override\n+    public void onGlobalLayout() {\n+      if (unanchorIfNoTransientBottomBar()\n+          || !transientBottomBar.get().anchorViewLayoutListenerEnabled) {\n+        return;\n+      }\n+      transientBottomBar.get().recalculateAndUpdateMargins();\n+    }\n+\n+    @Nullable\n+    View getAnchorView() {\n+      return anchorView.get();\n+    }\n+\n+    private boolean unanchorIfNoTransientBottomBar() {\n+      if (transientBottomBar.get() == null) {\n+        unanchor();\n+        return true;\n+      }\n+      return false;\n+    }\n+\n+    void unanchor() {\n+      if (anchorView.get() != null) {\n+        anchorView.get().removeOnAttachStateChangeListener(this);\n+        ViewUtils.removeOnGlobalLayoutListener(anchorView.get(), this);\n+      }\n+      anchorView.clear();\n+      transientBottomBar.clear();\n+    }\n+  }\n }",
      "parent_sha": "9ebf1a1387be4dfad00ad2af58ef9f02ec204d10"
    }
  },
  {
    "oid": "74508c89c87f3f17db8f952319ccb4daee60a260",
    "message": "[CollapsingToolbarLayout] Fixed slight misalignment during transition in multiline mode\n\nResolves https://github.com/material-components/material-components-android/pull/1408\n\nGIT_ORIGIN_REV_ID=9b29f85a8f9e9c52b256fbb4ce3148e19ee503fc\nPiperOrigin-RevId: 317322732",
    "date": "2020-06-19T18:09:34Z",
    "url": "https://github.com/material-components/material-components-android/commit/74508c89c87f3f17db8f952319ccb4daee60a260",
    "details": {
      "sha": "e8076878d777274d8c73b4fe6cc4d9429cd6ecfd",
      "filename": "lib/java/com/google/android/material/internal/CollapsingTextHelper.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/material-components/material-components-android/blob/74508c89c87f3f17db8f952319ccb4daee60a260/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Finternal%2FCollapsingTextHelper.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/74508c89c87f3f17db8f952319ccb4daee60a260/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Finternal%2FCollapsingTextHelper.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Finternal%2FCollapsingTextHelper.java?ref=74508c89c87f3f17db8f952319ccb4daee60a260",
      "patch": "@@ -713,7 +713,7 @@ private void drawMultinlineTransition(\n     // Collapsed text\n     textPaint.setAlpha((int) (collapsedTextBlend * originalAlpha));\n     canvas.drawText(\n-        textToDrawCollapsed, 0, textToDrawCollapsed.length(), 0, -ascent / scale, textPaint);\n+        textToDrawCollapsed, 0, textToDrawCollapsed.length(), 0, -ascent, textPaint);\n     // Remove ellipsis for Cross-section animation\n     String tmp = textToDrawCollapsed.toString().trim();\n     if (tmp.endsWith(ELLIPSIS_NORMAL)) {\n@@ -722,7 +722,7 @@ private void drawMultinlineTransition(\n     // Cross-section between both texts (should stay at original alpha)\n     textPaint.setAlpha(originalAlpha);\n     canvas.drawText(\n-        tmp, 0, Math.min(textLayout.getLineEnd(0), tmp.length()), 0, -ascent / scale, textPaint);\n+        tmp, 0, Math.min(textLayout.getLineEnd(0), tmp.length()), 0, -ascent, textPaint);\n   }\n \n   private boolean calculateIsRtl(@NonNull CharSequence text) {",
      "parent_sha": "e855645452077e29d80d8839a8bc30ea1b3d6ecd"
    }
  },
  {
    "oid": "526ce8c6c56dbea789fa8e778dd5a45794fc0f91",
    "message": "[TopAppBar] Fix margins not applied when collapsed and expanded text size and type face are the same\n\nWe missed to check if the available text width is changed when deciding if we should recreate the static text layout. Adds the check to fix the issue.\n\nResolves https://github.com/material-components/material-components-android/issues/2459\n\nPiperOrigin-RevId: 445941276",
    "date": "2022-05-02T15:45:14Z",
    "url": "https://github.com/material-components/material-components-android/commit/526ce8c6c56dbea789fa8e778dd5a45794fc0f91",
    "details": {
      "sha": "b06ccc550e0b382413210c5ca8931d316279bd14",
      "filename": "lib/java/com/google/android/material/internal/CollapsingTextHelper.java",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/material-components/material-components-android/blob/526ce8c6c56dbea789fa8e778dd5a45794fc0f91/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Finternal%2FCollapsingTextHelper.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/526ce8c6c56dbea789fa8e778dd5a45794fc0f91/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Finternal%2FCollapsingTextHelper.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Finternal%2FCollapsingTextHelper.java?ref=526ce8c6c56dbea789fa8e778dd5a45794fc0f91",
      "patch": "@@ -1045,7 +1045,13 @@ private void calculateUsingTextSize(final float fraction, boolean forceRecalcula\n     if (availableWidth > 0) {\n       boolean textSizeChanged = currentTextSize != newTextSize;\n       boolean letterSpacingChanged = currentLetterSpacing != newLetterSpacing;\n-      updateDrawText = textSizeChanged || letterSpacingChanged || boundsChanged || updateDrawText;\n+      boolean availableWidthChanged = textLayout != null && availableWidth != textLayout.getWidth();\n+      updateDrawText =\n+          textSizeChanged\n+              || letterSpacingChanged\n+              || availableWidthChanged\n+              || boundsChanged\n+              || updateDrawText;\n       currentTextSize = newTextSize;\n       currentLetterSpacing = newLetterSpacing;\n       boundsChanged = false;",
      "parent_sha": "8c775cb418afe75ab3e1779880bed73a71b12795"
    }
  },
  {
    "oid": "ccf67f7edf867d26c003aaba63d1b171aa442d61",
    "message": "[Checkbox] Fixed pre 21 issue where the icon did not update its color according to its state properly\n\nPiperOrigin-RevId: 466974893",
    "date": "2022-08-11T16:54:02Z",
    "url": "https://github.com/material-components/material-components-android/commit/ccf67f7edf867d26c003aaba63d1b171aa442d61",
    "details": {
      "sha": "3149429035c9711d41035a8fe43f10a65bc6b4b5",
      "filename": "lib/java/com/google/android/material/checkbox/MaterialCheckBox.java",
      "status": "modified",
      "additions": 23,
      "deletions": 21,
      "changes": 44,
      "blob_url": "https://github.com/material-components/material-components-android/blob/ccf67f7edf867d26c003aaba63d1b171aa442d61/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fcheckbox%2FMaterialCheckBox.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/ccf67f7edf867d26c003aaba63d1b171aa442d61/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fcheckbox%2FMaterialCheckBox.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fcheckbox%2FMaterialCheckBox.java?ref=ccf67f7edf867d26c003aaba63d1b171aa442d61",
      "patch": "@@ -276,15 +276,9 @@ && isButtonDrawableLegacy(attributes)) {\n \n     refreshButtonDrawable();\n \n-    // This is needed due to a KitKat bug where the drawable states don't get updated correctly\n-    // in time.\n-    if (VERSION.SDK_INT < VERSION_CODES.LOLLIPOP) {\n-      post(\n-          () -> {\n-            if (buttonIconDrawable != null) {\n-              buttonIconDrawable.invalidateSelf();\n-            }\n-          });\n+    // This is needed due to a pre-21 bug where the drawable states don't get updated correctly.\n+    if (VERSION.SDK_INT < VERSION_CODES.LOLLIPOP && buttonIconDrawable != null) {\n+      post(() -> buttonIconDrawable.jumpToCurrentState());\n     }\n   }\n \n@@ -338,13 +332,17 @@ protected int[] onCreateDrawableState(int extraSpace) {\n \n     currentStateChecked = DrawableUtils.getCheckedState(drawableStates);\n \n-    if (VERSION.SDK_INT < VERSION_CODES.LOLLIPOP) {\n-      jumpDrawablesToCurrentState();\n-    }\n+    updateIconTintIfNeeded();\n \n     return drawableStates;\n   }\n \n+  @Override\n+  public void setEnabled(boolean enabled) {\n+    super.setEnabled(enabled);\n+    updateIconTintIfNeeded();\n+  }\n+\n   @Override\n   public void setChecked(boolean checked) {\n     setCheckedState(checked ? STATE_CHECKED : STATE_UNCHECKED);\n@@ -468,7 +466,6 @@ public void setErrorShown(boolean errorShown) {\n     }\n     this.errorShown = errorShown;\n     refreshDrawableState();\n-    jumpDrawablesToCurrentState();\n     for (OnErrorChangedListener listener : onErrorChangedListeners) {\n       listener.onErrorChanged(this, this.errorShown);\n     }\n@@ -735,14 +732,6 @@ private void refreshButtonDrawable() {\n     refreshDrawableState();\n   }\n \n-  @Override\n-  public void jumpDrawablesToCurrentState() {\n-    super.jumpDrawablesToCurrentState();\n-    if (buttonIconDrawable != null) {\n-      buttonIconDrawable.jumpToCurrentState();\n-    }\n-  }\n-\n   /**\n    * Set the transition animation from checked to unchecked programmatically so that we can control\n    * the color change between states.\n@@ -782,6 +771,19 @@ private void updateButtonTints() {\n     }\n   }\n \n+  /*\n+   * Update the icon tint due to a pre-21 bug where the drawable states don't get updated correctly.\n+   */\n+  private void updateIconTintIfNeeded() {\n+    if (VERSION.SDK_INT < VERSION_CODES.LOLLIPOP\n+        && buttonIconDrawable != null\n+        && buttonIconTintList != null) {\n+      buttonIconDrawable.setColorFilter(\n+          DrawableUtils.updateTintFilter(\n+              buttonIconDrawable, buttonIconTintList, buttonIconTintMode));\n+    }\n+  }\n+\n   @RequiresApi(VERSION_CODES.R)\n   @Override\n   public void setStateDescription(@Nullable CharSequence stateDescription) {",
      "parent_sha": "7f98ebca5b8abd82abf1b4f2a978834ac43cd463"
    }
  },
  {
    "oid": "0719b6ab15f7f905d4cf9fc9be33365563c34b6c",
    "message": "Merge \"Revert \"Fix build.\"\"\n\nGitOrigin-RevId=085f30f971b173fe61d0051f0cdfd99204e6ac0d\n\nPiperOrigin-RevId: 140551454",
    "date": "2016-12-12T23:43:52Z",
    "url": "https://github.com/material-components/material-components-android/commit/0719b6ab15f7f905d4cf9fc9be33365563c34b6c",
    "details": {
      "sha": "6f45a1317a0edc80c4509f4dfbac5970e3740e18",
      "filename": "src/android/support/design/widget/TextInputLayout.java",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/material-components/material-components-android/blob/0719b6ab15f7f905d4cf9fc9be33365563c34b6c/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTextInputLayout.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/0719b6ab15f7f905d4cf9fc9be33365563c34b6c/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTextInputLayout.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTextInputLayout.java?ref=0719b6ab15f7f905d4cf9fc9be33365563c34b6c",
      "patch": "@@ -744,9 +744,6 @@ public SavedState[] newArray(int size) {\n         };\n     }\n \n-    /**\n-     * @hide\n-     */\n     @Override\n     public Parcelable onSaveInstanceState() {\n         Parcelable superState = super.onSaveInstanceState();\n@@ -924,4 +921,4 @@ private static boolean arrayContains(int[] array, int value) {\n         }\n         return false;\n     }\n-}\n+}\n\\ No newline at end of file",
      "parent_sha": "09c07fa619483727a8b97d8e6c866208ba7811f9"
    }
  },
  {
    "oid": "f0053fd3f95fe235436f8461e14f5a005e4bb8cb",
    "message": "[BottomAppBar] Change Bottom App Bar to place FAB through y translation rather than through margins\n\nResolves https://github.com/material-components/material-components-android/issues/3097\n\nPiperOrigin-RevId: 500806426",
    "date": "2023-01-11T22:52:59Z",
    "url": "https://github.com/material-components/material-components-android/commit/f0053fd3f95fe235436f8461e14f5a005e4bb8cb",
    "details": {
      "sha": "5d9f99bc6c144deed1bc0b43d74007a1a81b352e",
      "filename": "lib/java/com/google/android/material/bottomappbar/BottomAppBar.java",
      "status": "modified",
      "additions": 10,
      "deletions": 12,
      "changes": 22,
      "blob_url": "https://github.com/material-components/material-components-android/blob/f0053fd3f95fe235436f8461e14f5a005e4bb8cb/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbottomappbar%2FBottomAppBar.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/f0053fd3f95fe235436f8461e14f5a005e4bb8cb/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbottomappbar%2FBottomAppBar.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbottomappbar%2FBottomAppBar.java?ref=f0053fd3f95fe235436f8461e14f5a005e4bb8cb",
      "patch": "@@ -1040,7 +1040,12 @@ private float getFabTranslationY() {\n     if (fabAnchorMode == FAB_ANCHOR_MODE_CRADLE) {\n       return -getTopEdgeTreatment().getCradleVerticalOffset();\n     }\n-    return 0;\n+    View fab = findDependentView();\n+    int translationY = 0;\n+    if (fab != null) {\n+      translationY = -(getMeasuredHeight() + getBottomInset() - fab.getMeasuredHeight()) / 2;\n+    }\n+    return translationY;\n   }\n \n   private float getFabTranslationX(@FabAlignmentMode int fabAlignmentMode) {\n@@ -1364,24 +1369,16 @@ public void onLayoutChange(\n             // adds space below the fab if the BottomAppBar is hidden.\n             if (originalBottomMargin == 0) {\n               // Extra padding is added for the fake shadow on API < 21. Ensure we don't add too\n-              // much space by removing that extra padding.\n-              int bottomShadowPadding = (v.getMeasuredHeight() - height) / 2;\n-              int bottomMargin = 0;\n+              // much space by removing that extra padding if the fab mode is cradle.\n               if (child.fabAnchorMode == FAB_ANCHOR_MODE_CRADLE) {\n-                bottomMargin =\n+                int bottomShadowPadding = (v.getMeasuredHeight() - height) / 2;\n+                int bottomMargin =\n                     child\n                         .getResources()\n                         .getDimensionPixelOffset(R.dimen.mtrl_bottomappbar_fab_bottom_margin);\n                 // Should be moved above the bottom insets with space ignoring any shadow padding.\n                 int minBottomMargin = bottomMargin - bottomShadowPadding;\n                 fabLayoutParams.bottomMargin = child.getBottomInset() + minBottomMargin;\n-              } else if (child.fabAnchorMode == FAB_ANCHOR_MODE_EMBED) {\n-                // We want to add a margin of half of the height of the bottom app bar, minus half\n-                // the height of the fab to the bottom of the fab. Since the height of the bottom\n-                // app bar does not include the bottom inset, must add it to the height.\n-                fabLayoutParams.bottomMargin =\n-                    (child.getMeasuredHeight() + child.getBottomInset() - v.getMeasuredHeight())\n-                        / 2;\n               }\n               fabLayoutParams.leftMargin = child.getLeftInset();\n               fabLayoutParams.rightMargin = child.getRightInset();\n@@ -1392,6 +1389,7 @@ public void onLayoutChange(\n                 fabLayoutParams.rightMargin += child.fabOffsetEndMode;\n               }\n             }\n+            child.setCutoutStateAndTranslateFab();\n           }\n         };\n ",
      "parent_sha": "0af0368cd526e9ae2f5722b4ffe4ea8a38c9975b"
    }
  },
  {
    "oid": "982940f4d802e3e0f9dcb9c90366b3fdadc81e71",
    "message": "Merge \"TabLayout + ViewPager improvements\" into nyc-dev\n\nGitOrigin-RevId=641460fbf3bc54026e6dc561dc35224e0aa02a4a\n\nPiperOrigin-RevId: 140560715",
    "date": "2016-12-12T23:53:42Z",
    "url": "https://github.com/material-components/material-components-android/commit/982940f4d802e3e0f9dcb9c90366b3fdadc81e71",
    "details": {
      "sha": "f698bb2b60d5d6d29524416b9ec8a250b79e6557",
      "filename": "src/android/support/design/widget/TabLayout.java",
      "status": "modified",
      "additions": 93,
      "deletions": 14,
      "changes": 107,
      "blob_url": "https://github.com/material-components/material-components-android/blob/982940f4d802e3e0f9dcb9c90366b3fdadc81e71/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTabLayout.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/982940f4d802e3e0f9dcb9c90366b3fdadc81e71/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTabLayout.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTabLayout.java?ref=982940f4d802e3e0f9dcb9c90366b3fdadc81e71",
      "patch": "@@ -85,10 +85,6 @@\n  * </pre>\n  * You should set a listener via {@link #setOnTabSelectedListener(OnTabSelectedListener)} to be\n  * notified when any tab's selection state has been changed.\n- * <p>\n- * If you're using a {@link android.support.v4.view.ViewPager} together\n- * with this layout, you can use {@link #setupWithViewPager(ViewPager)} to link the two together.\n- * This layout will be automatically populated from the {@link PagerAdapter}'s page titles.</p>\n  *\n  * <p>You can also add items to TabLayout in your layout through the use of {@link TabItem}.\n  * An example usage is like so:</p>\n@@ -107,6 +103,28 @@\n  * &lt;/android.support.design.widget.TabLayout&gt;\n  * </pre>\n  *\n+ * <h3>ViewPager integration</h3>\n+ * <p>\n+ * If you're using a {@link android.support.v4.view.ViewPager} together\n+ * with this layout, you can call {@link #setupWithViewPager(ViewPager)} to link the two together.\n+ * This layout will be automatically populated from the {@link PagerAdapter}'s page titles.</p>\n+ *\n+ * <p>\n+ * This view also supports being used as part of a ViewPager's decor, and can be added\n+ * directly to the ViewPager in a layout resource file like so:</p>\n+ *\n+ * <pre>\n+ * &lt;android.support.v4.view.ViewPager\n+ *     android:layout_width=&quot;match_parent&quot;\n+ *     android:layout_height=&quot;match_parent&quot;&gt;\n+ *\n+ *     &lt;android.support.design.widget.TabLayout\n+ *         android:layout_width=&quot;match_parent&quot;\n+ *         android:layout_height=&quot;wrap_content&quot;\n+ *         android:layout_gravity=&quot;top&quot; /&gt;\n+ *\n+ * &lt;/android.support.v4.view.ViewPager&gt;\n+ * </pre>\n  *\n  * @see <a href=\"http://www.google.com/design/spec/components/tabs.html\">Tabs</a>\n  *\n@@ -251,6 +269,8 @@ public interface OnTabSelectedListener {\n     private PagerAdapter mPagerAdapter;\n     private DataSetObserver mPagerAdapterObserver;\n     private TabLayoutOnPageChangeListener mPageChangeListener;\n+    private AdapterChangeListener mAdapterChangeListener;\n+    private boolean mSetupViewPagerImplicitly;\n \n     // Pool we use as a simple RecyclerBin\n     private final Pools.Pool<TabView> mTabViewPool = new Pools.SimplePool<>(12);\n@@ -741,9 +761,19 @@ public void setupWithViewPager(@Nullable ViewPager viewPager) {\n      *                    content changes\n      */\n     public void setupWithViewPager(@Nullable final ViewPager viewPager, boolean autoRefresh) {\n-        if (mViewPager != null && mPageChangeListener != null) {\n+        setupWithViewPager(viewPager, autoRefresh, false);\n+    }\n+\n+    private void setupWithViewPager(@Nullable final ViewPager viewPager, boolean autoRefresh,\n+            boolean implicitSetup) {\n+        if (mViewPager != null) {\n             // If we've already been setup with a ViewPager, remove us from it\n-            mViewPager.removeOnPageChangeListener(mPageChangeListener);\n+            if (mPageChangeListener != null) {\n+                mViewPager.removeOnPageChangeListener(mPageChangeListener);\n+            }\n+            if (mAdapterChangeListener != null) {\n+                mViewPager.removeOnAdapterChangeListener(mAdapterChangeListener);\n+            }\n         }\n \n         if (mCurrentVpSelectedListener != null) {\n@@ -753,11 +783,6 @@ public void setupWithViewPager(@Nullable final ViewPager viewPager, boolean auto\n         }\n \n         if (viewPager != null) {\n-            final PagerAdapter adapter = viewPager.getAdapter();\n-            if (adapter == null) {\n-                throw new IllegalArgumentException(\"ViewPager does not have a PagerAdapter set\");\n-            }\n-\n             mViewPager = viewPager;\n \n             // Add our custom OnPageChangeListener to the ViewPager\n@@ -771,9 +796,19 @@ public void setupWithViewPager(@Nullable final ViewPager viewPager, boolean auto\n             mCurrentVpSelectedListener = new ViewPagerOnTabSelectedListener(viewPager);\n             addOnTabSelectedListener(mCurrentVpSelectedListener);\n \n-            // Now we'll populate ourselves from the pager adapter, adding an observer is\n-            // autoRefresh is enabled\n-            setPagerAdapter(adapter, autoRefresh);\n+            final PagerAdapter adapter = viewPager.getAdapter();\n+            if (adapter != null) {\n+                // Now we'll populate ourselves from the pager adapter, adding an observer if\n+                // autoRefresh is enabled\n+                setPagerAdapter(adapter, autoRefresh);\n+            }\n+\n+            // Add a listener so that we're notified of any adapter changes\n+            if (mAdapterChangeListener == null) {\n+                mAdapterChangeListener = new AdapterChangeListener();\n+            }\n+            mAdapterChangeListener.setAutoRefresh(autoRefresh);\n+            viewPager.addOnAdapterChangeListener(mAdapterChangeListener);\n \n             // Now update the scroll position to match the ViewPager's current item\n             setScrollPosition(viewPager.getCurrentItem(), 0f, true);\n@@ -783,6 +818,8 @@ public void setupWithViewPager(@Nullable final ViewPager viewPager, boolean auto\n             mViewPager = null;\n             setPagerAdapter(null, false);\n         }\n+\n+        mSetupViewPagerImplicitly = implicitSetup;\n     }\n \n     /**\n@@ -801,6 +838,33 @@ public boolean shouldDelayChildPressedState() {\n         return getTabScrollRange() > 0;\n     }\n \n+    @Override\n+    protected void onAttachedToWindow() {\n+        super.onAttachedToWindow();\n+\n+        if (mViewPager == null) {\n+            // If we don't have a ViewPager already, check if our parent is a ViewPager to\n+            // setup with it automatically\n+            final ViewParent vp = getParent();\n+            if (vp instanceof ViewPager) {\n+                // If we have a ViewPager parent and we've been added as part of its decor, let's\n+                // assume that we should automatically setup to display any titles\n+                setupWithViewPager((ViewPager) vp, true, true);\n+            }\n+        }\n+    }\n+\n+    @Override\n+    protected void onDetachedFromWindow() {\n+        super.onDetachedFromWindow();\n+\n+        if (mSetupViewPagerImplicitly) {\n+            // If we've been setup with a ViewPager implicitly, let's clear out any listeners, etc\n+            setupWithViewPager(null);\n+            mSetupViewPagerImplicitly = false;\n+        }\n+    }\n+\n     private int getTabScrollRange() {\n         return Math.max(0, mTabStrip.getWidth() - getWidth() - getPaddingLeft()\n                 - getPaddingRight());\n@@ -2111,4 +2175,19 @@ public void onInvalidated() {\n         }\n     }\n \n+    private class AdapterChangeListener implements ViewPager.OnAdapterChangeListener {\n+        private boolean mAutoRefresh;\n+\n+        @Override\n+        public void onAdapterChanged(@NonNull ViewPager viewPager,\n+                @Nullable PagerAdapter oldAdapter, @Nullable PagerAdapter newAdapter) {\n+            if (mViewPager == viewPager) {\n+                setPagerAdapter(newAdapter, mAutoRefresh);\n+            }\n+        }\n+\n+        void setAutoRefresh(boolean autoRefresh) {\n+            mAutoRefresh = autoRefresh;\n+        }\n+    }\n }",
      "parent_sha": "3001c3bc54537bba6976df0033e258e1853b5e91"
    }
  },
  {
    "oid": "04435855acba4ec20a215964e61051dd14e8ffdf",
    "message": "[Slider] Fixed a scroll demo fragment to have more granular steps.\n\nPiperOrigin-RevId: 677909855",
    "date": "2024-09-25T14:25:00Z",
    "url": "https://github.com/material-components/material-components-android/commit/04435855acba4ec20a215964e61051dd14e8ffdf",
    "details": {
      "sha": "35f91170212e35b2a4d6e627e52a910c312e3e99",
      "filename": "catalog/java/io/material/catalog/slider/SliderScrollContainerDemoFragment.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/material-components/material-components-android/blob/04435855acba4ec20a215964e61051dd14e8ffdf/catalog%2Fjava%2Fio%2Fmaterial%2Fcatalog%2Fslider%2FSliderScrollContainerDemoFragment.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/04435855acba4ec20a215964e61051dd14e8ffdf/catalog%2Fjava%2Fio%2Fmaterial%2Fcatalog%2Fslider%2FSliderScrollContainerDemoFragment.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/catalog%2Fjava%2Fio%2Fmaterial%2Fcatalog%2Fslider%2FSliderScrollContainerDemoFragment.java?ref=04435855acba4ec20a215964e61051dd14e8ffdf",
      "patch": "@@ -41,8 +41,10 @@ public View onCreateDemoView(\n             R.layout.cat_slider_demo_scroll, viewGroup, false /* attachToRoot */);\n     LinearLayout sliderContainer = view.findViewById(R.id.sliderContainer);\n     for (int i = 0; i < 50; i++) {\n+      Slider slider = new Slider(layoutInflater.getContext());\n+      slider.setValueTo(11f);\n       sliderContainer.addView(\n-          new Slider(layoutInflater.getContext()),\n+          slider,\n           ViewGroup.LayoutParams.MATCH_PARENT,\n           ViewGroup.LayoutParams.WRAP_CONTENT);\n     }",
      "parent_sha": "3ce7c2bb1851b10cf43bdc541aa72dd3edf66e95"
    }
  },
  {
    "oid": "3e799428717a8f82b27f753c49f9748175b24121",
    "message": "[DatePicker] Localized numbers in month\n\nResolves https://github.com/material-components/material-components-android/issues/1948\n\nPiperOrigin-RevId: 350567674",
    "date": "2021-01-07T17:10:44Z",
    "url": "https://github.com/material-components/material-components-android/commit/3e799428717a8f82b27f753c49f9748175b24121",
    "details": {
      "sha": "e1478026f4507bf31d9f151c5c3149f52b1f480d",
      "filename": "lib/java/com/google/android/material/datepicker/MonthAdapter.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/material-components/material-components-android/blob/3e799428717a8f82b27f753c49f9748175b24121/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fdatepicker%2FMonthAdapter.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/3e799428717a8f82b27f753c49f9748175b24121/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fdatepicker%2FMonthAdapter.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fdatepicker%2FMonthAdapter.java?ref=3e799428717a8f82b27f753c49f9748175b24121",
      "patch": "@@ -27,6 +27,7 @@\n import androidx.annotation.Nullable;\n import java.util.Calendar;\n import java.util.Collection;\n+import java.util.Locale;\n \n /**\n  * Represents the days of a month with {@link TextView} instances for each day.\n@@ -116,7 +117,8 @@ public TextView getView(int position, @Nullable View convertView, @NonNull ViewG\n       int dayNumber = offsetPosition + 1;\n       // The tag and text uniquely identify the view within the MaterialCalendar for testing\n       day.setTag(month);\n-      day.setText(String.valueOf(dayNumber));\n+      Locale locale = day.getResources().getConfiguration().locale;\n+      day.setText(String.format(locale, \"%d\", dayNumber));\n       long dayInMillis = month.getDay(dayNumber);\n       if (month.year == Month.current().year) {\n         day.setContentDescription(DateStrings.getMonthDayOfWeekDay(dayInMillis));",
      "parent_sha": "bec2de92ac96f7ea061556bdc4ea114a17818eea"
    }
  },
  {
    "oid": "fcc68a2de7b47eed04c767e84f1bc2d6ce39512e",
    "message": "[TimePicker][a11y] Make Talkback announce selected state for clock items\n\nPiperOrigin-RevId: 413955068",
    "date": "2021-12-06T19:44:45Z",
    "url": "https://github.com/material-components/material-components-android/commit/fcc68a2de7b47eed04c767e84f1bc2d6ce39512e",
    "details": {
      "sha": "1e45c6462d06f01fd35fc66e1f8ff7426a1ca6a7",
      "filename": "lib/java/com/google/android/material/timepicker/ClockFaceView.java",
      "status": "modified",
      "additions": 8,
      "deletions": 7,
      "changes": 15,
      "blob_url": "https://github.com/material-components/material-components-android/blob/fcc68a2de7b47eed04c767e84f1bc2d6ce39512e/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftimepicker%2FClockFaceView.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/fcc68a2de7b47eed04c767e84f1bc2d6ce39512e/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftimepicker%2FClockFaceView.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftimepicker%2FClockFaceView.java?ref=fcc68a2de7b47eed04c767e84f1bc2d6ce39512e",
      "patch": "@@ -261,17 +261,18 @@ private void findIntersectingTextView() {\n       offsetDescendantRectToMyCoords(tv, textViewRect);\n \n       scratch.set(textViewRect);\n-      RadialGradient radialGradient = getGradientForTextView(selectorBox, scratch);\n-      tv.getPaint().setShader(radialGradient);\n+      if (RectF.intersects(selectorBox, scratch)) {\n+        tv.getPaint().setShader(getGradient(selectorBox));\n+        tv.setSelected(true);\n+      } else {\n+        tv.getPaint().setShader(null); // clear\n+        tv.setSelected(false);\n+      }\n       tv.invalidate();\n     }\n   }\n \n-  private RadialGradient getGradientForTextView(RectF selectorBox, RectF tvBox) {\n-    if (!RectF.intersects(selectorBox, tvBox)) {\n-      return null;\n-    }\n-\n+  private RadialGradient getGradient(RectF selectorBox) {\n     return new RadialGradient(\n         (selectorBox.centerX() - scratch.left),\n         (selectorBox.centerY() - scratch.top),",
      "parent_sha": "6a3ea94ae0794793c91c11ebafbd87b4a2445112"
    }
  },
  {
    "oid": "3f2d205344c989ed168de8dcb09e740c98beb350",
    "message": "Log a warning rather than an info when setting background on a MaterialButton.\n\nPiperOrigin-RevId: 239880506",
    "date": "2019-03-26T21:29:07Z",
    "url": "https://github.com/material-components/material-components-android/commit/3f2d205344c989ed168de8dcb09e740c98beb350",
    "details": {
      "sha": "4eca3a4bbfa01f3974ec2ada632ab7bc03ca8bfa",
      "filename": "lib/java/com/google/android/material/button/MaterialButton.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/material-components/material-components-android/blob/3f2d205344c989ed168de8dcb09e740c98beb350/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbutton%2FMaterialButton.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/3f2d205344c989ed168de8dcb09e740c98beb350/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbutton%2FMaterialButton.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbutton%2FMaterialButton.java?ref=3f2d205344c989ed168de8dcb09e740c98beb350",
      "patch": "@@ -351,7 +351,9 @@ public void setBackgroundResource(@DrawableRes int backgroundResourceId) {\n   public void setBackgroundDrawable(Drawable background) {\n     if (isUsingOriginalBackground()) {\n       if (background != this.getBackground()) {\n-        Log.i(LOG_TAG, \"Setting a custom background is not supported.\");\n+        Log.w(\n+            LOG_TAG,\n+            \"Do not set the background; MaterialButton manages its own background drawable.\");\n         materialButtonHelper.setBackgroundOverwritten();\n         super.setBackgroundDrawable(background);\n       } else {",
      "parent_sha": "5aebe1a1118029caefc7097749dd94aad4a084e0"
    }
  },
  {
    "oid": "a74675177f3e53a66f9b71b07329625e91f9685e",
    "message": "[Badge] Internal change\n\nPiperOrigin-RevId: 420376250",
    "date": "2022-01-12T16:20:32Z",
    "url": "https://github.com/material-components/material-components-android/commit/a74675177f3e53a66f9b71b07329625e91f9685e",
    "details": {
      "sha": "7f21de6219add818350072ea101008fb447990fa",
      "filename": "lib/java/com/google/android/material/badge/BadgeDrawable.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/material-components/material-components-android/blob/a74675177f3e53a66f9b71b07329625e91f9685e/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbadge%2FBadgeDrawable.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/a74675177f3e53a66f9b71b07329625e91f9685e/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbadge%2FBadgeDrawable.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbadge%2FBadgeDrawable.java?ref=a74675177f3e53a66f9b71b07329625e91f9685e",
      "patch": "@@ -174,7 +174,7 @@ public class BadgeDrawable extends Drawable implements TextDrawableDelegate {\n   @Nullable private WeakReference<FrameLayout> customBadgeParentRef;\n \n   @NonNull\n-  public BadgeState.State getSavedState() {\n+  BadgeState.State getSavedState() {\n     return state.getOverridingState();\n   }\n ",
      "parent_sha": "48741b4e16236ee8ac9dc0052204e6a7be32c0f4"
    }
  },
  {
    "oid": "919f2183f20e81925846b3dc71e5ca29546839df",
    "message": "Change Snackbar to use margin instead of padding for window inset positioning\n\nPiperOrigin-RevId: 210554683",
    "date": "2018-08-28T20:43:13Z",
    "url": "https://github.com/material-components/material-components-android/commit/919f2183f20e81925846b3dc71e5ca29546839df",
    "details": {
      "sha": "a037d1c590086d413e1067fface13753d7fc5cf4",
      "filename": "lib/java/com/google/android/material/snackbar/BaseTransientBottomBar.java",
      "status": "modified",
      "additions": 5,
      "deletions": 7,
      "changes": 12,
      "blob_url": "https://github.com/material-components/material-components-android/blob/919f2183f20e81925846b3dc71e5ca29546839df/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fsnackbar%2FBaseTransientBottomBar.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/919f2183f20e81925846b3dc71e5ca29546839df/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fsnackbar%2FBaseTransientBottomBar.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fsnackbar%2FBaseTransientBottomBar.java?ref=919f2183f20e81925846b3dc71e5ca29546839df",
      "patch": "@@ -272,13 +272,11 @@ protected BaseTransientBottomBar(\n         new android.support.v4.view.OnApplyWindowInsetsListener() {\n           @Override\n           public WindowInsetsCompat onApplyWindowInsets(View v, WindowInsetsCompat insets) {\n-            // Copy over the bottom inset as padding so that we're displayed\n-            // above the navigation bar\n-            v.setPadding(\n-                v.getPaddingLeft(),\n-                v.getPaddingTop(),\n-                v.getPaddingRight(),\n-                insets.getSystemWindowInsetBottom());\n+            // Copy over the bottom inset as bottom margin so that we're displayed above the\n+            // navigation bar\n+            MarginLayoutParams layoutParams = (MarginLayoutParams) v.getLayoutParams();\n+            layoutParams.bottomMargin += insets.getSystemWindowInsetBottom();\n+            v.setLayoutParams(layoutParams);\n             return insets;\n           }\n         });",
      "parent_sha": "14e9a020a128ddcdd54cebd6527d8b8f8e6028ca"
    }
  },
  {
    "oid": "a7a234bf07a26c274711b87958ab4e683f54848e",
    "message": "[Bottom Sheet] Prevents nested scroll from occurring in a scroll session when the bottom sheet is already being resized.\n\nPreviously, the bottom sheet could be fixed at any height while resizing it by triggering a fling in the opposite direction.\n\nPiperOrigin-RevId: 628170687",
    "date": "2024-04-26T17:52:32Z",
    "url": "https://github.com/material-components/material-components-android/commit/a7a234bf07a26c274711b87958ab4e683f54848e",
    "details": {
      "sha": "596d955d5655574e142658a3deb60f3bb8f6ca64",
      "filename": "lib/java/com/google/android/material/bottomsheet/BottomSheetBehavior.java",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/material-components/material-components-android/blob/a7a234bf07a26c274711b87958ab4e683f54848e/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbottomsheet%2FBottomSheetBehavior.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/a7a234bf07a26c274711b87958ab4e683f54848e/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbottomsheet%2FBottomSheetBehavior.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbottomsheet%2FBottomSheetBehavior.java?ref=a7a234bf07a26c274711b87958ab4e683f54848e",
      "patch": "@@ -748,7 +748,10 @@ public void onNestedPreScroll(\n     int currentTop = child.getTop();\n     int newTop = currentTop - dy;\n     if (dy > 0) { // Upward swipe\n-      if (!draggableOnNestedScroll && target == scrollingChild && target.canScrollVertically(1)) {\n+      if (!nestedScrolled\n+          && !draggableOnNestedScroll\n+          && target == scrollingChild\n+          && target.canScrollVertically(1)) {\n         // Prevent dragging if draggableOnNestedScroll=false and we can scroll the scrolling child.\n         draggableOnNestedScrollLastDragIgnored = true;\n         return;\n@@ -769,7 +772,7 @@ public void onNestedPreScroll(\n       }\n     } else if (dy < 0) { // Downward swipe\n       boolean canScrollUp = target.canScrollVertically(-1);\n-      if (!draggableOnNestedScroll && target == scrollingChild && canScrollUp) {\n+      if (!nestedScrolled && !draggableOnNestedScroll && target == scrollingChild && canScrollUp) {\n         // Prevent dragging if draggableOnNestedScroll=false and we can scroll the scrolling child.\n         draggableOnNestedScrollLastDragIgnored = true;\n         return;",
      "parent_sha": "373008ad17ff69b8f3e6b096793d2dd8e0e4fbfd"
    }
  },
  {
    "oid": "c6b554555b5fa54ce48dd0e15146dccaa61ae057",
    "message": "Use deep copies for CornerTreatment and EdgeTreatment convenience methods in\nShapeAppearanceModel.\n\nPrior to this change, ShapeAppearanceModel#setAllCorners() and\nShapeAppearanceModel#setAllEdges() set all four corners or edges to the same\nCornerTreatment or EdgeTreatment. This change creates deep copies for each\ncorner/edge treatment to avoid bugs caused by silently reusing the mutable\nobject.\n\nPiperOrigin-RevId: 222413898",
    "date": "2018-12-06T16:19:04Z",
    "url": "https://github.com/material-components/material-components-android/commit/c6b554555b5fa54ce48dd0e15146dccaa61ae057",
    "details": {
      "sha": "98b4c92e0b7db14a6fddea9dcdc22fa9a38073e2",
      "filename": "lib/java/com/google/android/material/shape/ShapeAppearanceModel.java",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/material-components/material-components-android/blob/c6b554555b5fa54ce48dd0e15146dccaa61ae057/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fshape%2FShapeAppearanceModel.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/c6b554555b5fa54ce48dd0e15146dccaa61ae057/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fshape%2FShapeAppearanceModel.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fshape%2FShapeAppearanceModel.java?ref=c6b554555b5fa54ce48dd0e15146dccaa61ae057",
      "patch": "@@ -136,13 +136,13 @@ public ShapeAppearanceModel(\n   /**\n    * Sets all corner treatments.\n    *\n-   * @param cornerTreatment the corner treatment to use in all four corners.\n+   * @param cornerTreatment the corner treatment to use for all four corners.\n    */\n   public void setAllCorners(CornerTreatment cornerTreatment) {\n-    topLeftCorner = cornerTreatment;\n-    topRightCorner = cornerTreatment;\n-    bottomRightCorner = cornerTreatment;\n-    bottomLeftCorner = cornerTreatment;\n+    topLeftCorner = cornerTreatment.clone();\n+    topRightCorner = cornerTreatment.clone();\n+    bottomRightCorner = cornerTreatment.clone();\n+    bottomLeftCorner = cornerTreatment.clone();\n   }\n \n   public void setAllCorners(@CornerFamily int cornerFamily, @Dimension int cornerSize) {\n@@ -162,10 +162,10 @@ public void setCornerRadius(float cornerRadius) {\n    * @param edgeTreatment the edge treatment to use for all four edges.\n    */\n   public void setAllEdges(EdgeTreatment edgeTreatment) {\n-    leftEdge = edgeTreatment;\n-    topEdge = edgeTreatment;\n-    rightEdge = edgeTreatment;\n-    bottomEdge = edgeTreatment;\n+    leftEdge = edgeTreatment.clone();\n+    topEdge = edgeTreatment.clone();\n+    rightEdge = edgeTreatment.clone();\n+    bottomEdge = edgeTreatment.clone();\n   }\n \n   /**",
      "parent_sha": "98d4b148d13965c255a68ca6b97ad05890564ec0"
    }
  },
  {
    "oid": "784f901135c654e938a4b0a71252b6887a276244",
    "message": "[TextInputLayout] Fixed regression bug of prefix spacing being shown and making expanded label be in the wrong position when text field is not focused.\n\nResolves https://github.com/material-components/material-components-android/issues/2612\n\nPiperOrigin-RevId: 437745108",
    "date": "2022-03-28T16:48:28Z",
    "url": "https://github.com/material-components/material-components-android/commit/784f901135c654e938a4b0a71252b6887a276244",
    "details": {
      "sha": "50ad27fc96daef5b2ddef700d35c454c443a0c55",
      "filename": "lib/java/com/google/android/material/textfield/TextInputLayout.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/material-components/material-components-android/blob/784f901135c654e938a4b0a71252b6887a276244/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftextfield%2FTextInputLayout.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/784f901135c654e938a4b0a71252b6887a276244/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftextfield%2FTextInputLayout.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftextfield%2FTextInputLayout.java?ref=784f901135c654e938a4b0a71252b6887a276244",
      "patch": "@@ -3710,7 +3710,8 @@ boolean updateDummyDrawables() {\n   }\n \n   private boolean shouldUpdateStartDummyDrawable() {\n-    return (getStartIconDrawable() != null || getPrefixText() != null)\n+    return (getStartIconDrawable() != null\n+            || (getPrefixText() != null && getPrefixTextView().getVisibility() == VISIBLE))\n         && (startLayout.getMeasuredWidth() > 0);\n   }\n ",
      "parent_sha": "1c02b62eaf78d498b62dd18e5d0805fed6501c40"
    }
  },
  {
    "oid": "f8d3ee10e695d9dbb6f7f36a67b86ffe1d6ac26d",
    "message": "am e29b33f2: am eb3f54ef: Merge \"Fix TabLayout\\'s flickering for good\" into mnc-ub-dev\n\n* commit 'e29b33f2c09dce897bafa81b889247f743dd50a8':\n  Fix TabLayout's flickering for good\n\nGitOrigin-RevId=5966da4bb6264b54047f426334da33c212ca2e73\n\nPiperOrigin-RevId: 140550088",
    "date": "2016-12-12T23:38:47Z",
    "url": "https://github.com/material-components/material-components-android/commit/f8d3ee10e695d9dbb6f7f36a67b86ffe1d6ac26d",
    "details": {
      "sha": "fcf2f7460400453bccd96bdcd3857dd63e421481",
      "filename": "src/android/support/design/widget/TabLayout.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/material-components/material-components-android/blob/f8d3ee10e695d9dbb6f7f36a67b86ffe1d6ac26d/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTabLayout.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/f8d3ee10e695d9dbb6f7f36a67b86ffe1d6ac26d/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTabLayout.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTabLayout.java?ref=f8d3ee10e695d9dbb6f7f36a67b86ffe1d6ac26d",
      "patch": "@@ -844,11 +844,11 @@ void selectTab(Tab tab, boolean updateIndicator) {\n                 animateToTab(tab.getPosition());\n             }\n         } else {\n-            final int newPosition = tab != null ? tab.getPosition() : Tab.INVALID_POSITION;\n-            if (newPosition != Tab.INVALID_POSITION) {\n-                setSelectedTabView(newPosition);\n-            }\n             if (updateIndicator) {\n+                final int newPosition = tab != null ? tab.getPosition() : Tab.INVALID_POSITION;\n+                if (newPosition != Tab.INVALID_POSITION) {\n+                    setSelectedTabView(newPosition);\n+                }\n                 if ((mSelectedTab == null || mSelectedTab.getPosition() == Tab.INVALID_POSITION)\n                         && newPosition != Tab.INVALID_POSITION) {\n                     // If we don't currently have a tab, just draw the indicator",
      "parent_sha": "928cc599c2ab9cd94bb90de91f082277307528af"
    }
  },
  {
    "oid": "cebb0572a8579a5906f30f42cbd224cbb22d26cc",
    "message": "[Slider][a11y] Limit values to 2 decimals in the content description\n\nPiperOrigin-RevId: 676427467",
    "date": "2024-09-20T19:45:27Z",
    "url": "https://github.com/material-components/material-components-android/commit/cebb0572a8579a5906f30f42cbd224cbb22d26cc",
    "details": {
      "sha": "42cec20943d25c0287e6223667aafe54fd6db605",
      "filename": "lib/java/com/google/android/material/slider/BaseSlider.java",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/material-components/material-components-android/blob/cebb0572a8579a5906f30f42cbd224cbb22d26cc/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fslider%2FBaseSlider.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/cebb0572a8579a5906f30f42cbd224cbb22d26cc/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fslider%2FBaseSlider.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fslider%2FBaseSlider.java?ref=cebb0572a8579a5906f30f42cbd224cbb22d26cc",
      "patch": "@@ -102,6 +102,7 @@\n import java.lang.annotation.Retention;\n import java.lang.annotation.RetentionPolicy;\n import java.math.BigDecimal;\n+import java.text.DecimalFormat;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Iterator;\n@@ -3264,7 +3265,13 @@ protected void onPopulateNodeForVirtualView(\n         }\n       }\n \n-      info.setRangeInfo(RangeInfoCompat.obtain(RANGE_TYPE_FLOAT, valueFrom, valueTo, value));\n+      DecimalFormat df = new DecimalFormat(\"#.##\");\n+      info.setRangeInfo(\n+          RangeInfoCompat.obtain(\n+              RANGE_TYPE_FLOAT,\n+              Float.parseFloat(df.format(valueFrom)),\n+              Float.parseFloat(df.format(valueTo)),\n+              Float.parseFloat(df.format(value))));\n       info.setClassName(SeekBar.class.getName());\n       StringBuilder contentDescription = new StringBuilder();\n       // Add the content description of the slider.",
      "parent_sha": "d049a427c43ff1e95bfd4d2fbe6b68dca2bb37f2"
    }
  },
  {
    "oid": "c7541833b73afd50359b81cf69783071992bc448",
    "message": "[CollapsingToolbarLayout] Updated fade mode to allow expanded title to translate 1:1 with scrolling content.\n\nPiperOrigin-RevId: 372565826",
    "date": "2021-05-07T16:27:54Z",
    "url": "https://github.com/material-components/material-components-android/commit/c7541833b73afd50359b81cf69783071992bc448",
    "details": {
      "sha": "fb13dd611c45ea54c667198ba63c4a1c3b31799d",
      "filename": "lib/java/com/google/android/material/internal/CollapsingTextHelper.java",
      "status": "modified",
      "additions": 8,
      "deletions": 14,
      "changes": 22,
      "blob_url": "https://github.com/material-components/material-components-android/blob/c7541833b73afd50359b81cf69783071992bc448/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Finternal%2FCollapsingTextHelper.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/c7541833b73afd50359b81cf69783071992bc448/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Finternal%2FCollapsingTextHelper.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Finternal%2FCollapsingTextHelper.java?ref=c7541833b73afd50359b81cf69783071992bc448",
      "patch": "@@ -528,19 +528,23 @@ private void calculateCurrentOffsets() {\n \n   private void calculateOffsets(final float fraction) {\n     interpolateBounds(fraction);\n+    float textBlendFraction;\n     if (fadeModeEnabled) {\n       if (fraction < fadeModeThresholdFraction) {\n+        textBlendFraction = 0F;\n         currentDrawX = expandedDrawX;\n-        currentDrawY = lerp(expandedDrawY, collapsedDrawY, fraction, positionInterpolator);\n+        currentDrawY = expandedDrawY;\n \n         setInterpolatedTextSize(expandedTextSize);\n       } else {\n+        textBlendFraction = 1F;\n         currentDrawX = collapsedDrawX;\n         currentDrawY = collapsedDrawY - currentOffsetY;\n \n         setInterpolatedTextSize(collapsedTextSize);\n       }\n     } else {\n+      textBlendFraction = fraction;\n       currentDrawX = lerp(expandedDrawX, collapsedDrawX, fraction, positionInterpolator);\n       currentDrawY = lerp(expandedDrawY, collapsedDrawY, fraction, positionInterpolator);\n \n@@ -556,7 +560,8 @@ private void calculateOffsets(final float fraction) {\n       // If the collapsed and expanded text colors are different, blend them based on the\n       // fraction\n       textPaint.setColor(\n-          blendColors(getCurrentExpandedTextColor(), getCurrentCollapsedTextColor(), fraction));\n+          blendColors(\n+              getCurrentExpandedTextColor(), getCurrentCollapsedTextColor(), textBlendFraction));\n     } else {\n       textPaint.setColor(getCurrentCollapsedTextColor());\n     }\n@@ -726,18 +731,7 @@ private void calculateBaseOffsets() {\n \n   private void interpolateBounds(float fraction) {\n     if (fadeModeEnabled) {\n-      if (fraction < fadeModeThresholdFraction) {\n-        currentBounds.left = expandedBounds.left;\n-        currentBounds.top = lerp(expandedDrawY, collapsedDrawY, fraction, positionInterpolator);\n-        currentBounds.right = expandedBounds.right;\n-        currentBounds.bottom =\n-            lerp(expandedBounds.bottom, collapsedBounds.bottom, fraction, positionInterpolator);\n-      } else {\n-        currentBounds.left = collapsedBounds.left;\n-        currentBounds.top = collapsedBounds.top;\n-        currentBounds.right = collapsedBounds.right;\n-        currentBounds.bottom = collapsedBounds.bottom;\n-      }\n+      currentBounds.set(fraction < fadeModeThresholdFraction ? expandedBounds : collapsedBounds);\n     } else {\n       currentBounds.left =\n           lerp(expandedBounds.left, collapsedBounds.left, fraction, positionInterpolator);",
      "parent_sha": "87b50c6aee240659841a7d5f2e52c1a6324d611f"
    }
  },
  {
    "oid": "67fc0c9ff8f2081953cd8b6709c454c63faaac09",
    "message": "Allow collapsed bottom sheet to settle to half expanded state on dragging up.\n\nPiperOrigin-RevId: 286554369",
    "date": "2019-12-21T13:48:14Z",
    "url": "https://github.com/material-components/material-components-android/commit/67fc0c9ff8f2081953cd8b6709c454c63faaac09",
    "details": {
      "sha": "975aef3049b5b3a3a9cac97b53ac246c8d635d89",
      "filename": "lib/java/com/google/android/material/bottomsheet/BottomSheetBehavior.java",
      "status": "modified",
      "additions": 13,
      "deletions": 2,
      "changes": 15,
      "blob_url": "https://github.com/material-components/material-components-android/blob/67fc0c9ff8f2081953cd8b6709c454c63faaac09/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbottomsheet%2FBottomSheetBehavior.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/67fc0c9ff8f2081953cd8b6709c454c63faaac09/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbottomsheet%2FBottomSheetBehavior.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbottomsheet%2FBottomSheetBehavior.java?ref=67fc0c9ff8f2081953cd8b6709c454c63faaac09",
      "patch": "@@ -577,8 +577,19 @@ public void onStopNestedScroll(\n     int top;\n     int targetState;\n     if (lastNestedScrollDy > 0) {\n-      top = getExpandedOffset();\n-      targetState = STATE_EXPANDED;\n+      if (fitToContents) {\n+        top = fitToContentsOffset;\n+        targetState = STATE_EXPANDED;\n+      } else {\n+        int currentTop = child.getTop();\n+        if (currentTop > halfExpandedOffset) {\n+          top = halfExpandedOffset;\n+          targetState = STATE_HALF_EXPANDED;\n+        } else {\n+          top = expandedOffset;\n+          targetState = STATE_EXPANDED;\n+        }\n+      }\n     } else if (hideable && shouldHide(child, getYVelocity())) {\n       top = parentHeight;\n       targetState = STATE_HIDDEN;",
      "parent_sha": "3e212efdc21dc65b45dcf7276b87e6f5f9d4ff61"
    }
  },
  {
    "oid": "40cfb07e1f6d915e0e22863d9a6e75069a95a5ba",
    "message": "[TimePicker] Prevent setting wrong time while the clock is animating\n\nPiperOrigin-RevId: 650636506",
    "date": "2024-07-09T15:43:36Z",
    "url": "https://github.com/material-components/material-components-android/commit/40cfb07e1f6d915e0e22863d9a6e75069a95a5ba",
    "details": {
      "sha": "8764556489ea82ba5a53b6e90011024f38d4feb6",
      "filename": "lib/java/com/google/android/material/timepicker/TimePickerClockPresenter.java",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/material-components/material-components-android/blob/40cfb07e1f6d915e0e22863d9a6e75069a95a5ba/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftimepicker%2FTimePickerClockPresenter.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/40cfb07e1f6d915e0e22863d9a6e75069a95a5ba/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftimepicker%2FTimePickerClockPresenter.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftimepicker%2FTimePickerClockPresenter.java?ref=40cfb07e1f6d915e0e22863d9a6e75069a95a5ba",
      "patch": "@@ -47,16 +47,18 @@ class TimePickerClockPresenter\n         OnActionUpListener,\n         TimePickerPresenter {\n \n-  private static final String[] HOUR_CLOCK_VALUES =\n-      {\"12\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\"};\n+  private static final String[] HOUR_CLOCK_VALUES = {\n+    \"12\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\"\n+  };\n \n   private static final String[] HOUR_CLOCK_24_VALUES = {\n     \"00\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\",\n     \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\"\n   };\n \n-  private static final  String[] MINUTE_CLOCK_VALUES =\n-      {\"00\", \"5\", \"10\", \"15\", \"20\", \"25\", \"30\", \"35\", \"40\", \"45\", \"50\", \"55\"};\n+  private static final String[] MINUTE_CLOCK_VALUES = {\n+    \"00\", \"5\", \"10\", \"15\", \"20\", \"25\", \"30\", \"35\", \"40\", \"45\", \"50\", \"55\"\n+  };\n \n   private static final int DEGREES_PER_HOUR = 30;\n   private static final int DEGREES_PER_MINUTE = 6;\n@@ -112,7 +114,8 @@ private String[] getHourClockValues() {\n \n   @Override\n   public void onRotate(float rotation, boolean animating) {\n-    if (broadcasting) {\n+    // Do not update the displayed and actual time during an animation\n+    if (broadcasting || animating) {\n       return;\n     }\n \n@@ -138,11 +141,8 @@ public void onRotate(float rotation, boolean animating) {\n       hourRotation = getHourRotation();\n     }\n \n-    // Do not update the display during an animation\n-    if (!animating) {\n-      updateTime();\n-      performHapticFeedback(prevHour, prevMinute);\n-    }\n+    updateTime();\n+    performHapticFeedback(prevHour, prevMinute);\n   }\n \n   private void performHapticFeedback(int prevHour, int prevMinute) {",
      "parent_sha": "c7143282a70846ab0d8dd8a994ce44c1ec2f819a"
    }
  },
  {
    "oid": "0c9094a1eb724dd633fdfbad075d092c7666a5ae",
    "message": "[AppBarLayout] Update AppBarLayout to use the 3-arg view constructor\n\nWithout this fix, it is impossible for developers to properly make proper use of the `defStyleAttr` view constructor argument.\n\nThis PR fixes the bug filed here: https://issuetracker.google.com/issues/117316283\n\nResolves https://github.com/material-components/material-components-android/pull/212\n\nPiperOrigin-RevId: 216750232",
    "date": "2018-10-11T22:31:34Z",
    "url": "https://github.com/material-components/material-components-android/commit/0c9094a1eb724dd633fdfbad075d092c7666a5ae",
    "details": {
      "sha": "41f9adb7bf5dd57941963deb23256c50db69c2f4",
      "filename": "lib/java/com/google/android/material/appbar/AppBarLayout.java",
      "status": "modified",
      "additions": 11,
      "deletions": 3,
      "changes": 14,
      "blob_url": "https://github.com/material-components/material-components-android/blob/0c9094a1eb724dd633fdfbad075d092c7666a5ae/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fappbar%2FAppBarLayout.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/0c9094a1eb724dd633fdfbad075d092c7666a5ae/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fappbar%2FAppBarLayout.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fappbar%2FAppBarLayout.java?ref=0c9094a1eb724dd633fdfbad075d092c7666a5ae",
      "patch": "@@ -177,7 +177,11 @@ public AppBarLayout(Context context) {\n   }\n \n   public AppBarLayout(Context context, AttributeSet attrs) {\n-    super(context, attrs);\n+    this(context, attrs, 0);\n+  }\n+\n+  public AppBarLayout(Context context, AttributeSet attrs, int defStyleAttr) {\n+    super(context, attrs, defStyleAttr);\n     setOrientation(VERTICAL);\n \n     if (Build.VERSION.SDK_INT >= 21) {\n@@ -188,12 +192,16 @@ public AppBarLayout(Context context, AttributeSet attrs) {\n       // If we're running on API 21+, we should reset any state list animator from our\n       // default style\n       ViewUtilsLollipop.setStateListAnimatorFromAttrs(\n-          this, attrs, 0, R.style.Widget_Design_AppBarLayout);\n+          this, attrs, defStyleAttr, R.style.Widget_Design_AppBarLayout);\n     }\n \n     final TypedArray a =\n         ThemeEnforcement.obtainStyledAttributes(\n-            context, attrs, R.styleable.AppBarLayout, 0, R.style.Widget_Design_AppBarLayout);\n+            context,\n+            attrs,\n+            R.styleable.AppBarLayout,\n+            defStyleAttr,\n+            R.style.Widget_Design_AppBarLayout);\n     ViewCompat.setBackground(this, a.getDrawable(R.styleable.AppBarLayout_android_background));\n     if (a.hasValue(R.styleable.AppBarLayout_expanded)) {\n       setExpanded(",
      "parent_sha": "9ab0e36ee4ad00db8cd229903d938b94a266fa22"
    }
  },
  {
    "oid": "2130d8655098b26525221ece30b0fef8ef70ea4a",
    "message": "Automated g4 rollback of changelist 248530748\n\nPiperOrigin-RevId: 248597424",
    "date": "2019-05-17T20:27:01Z",
    "url": "https://github.com/material-components/material-components-android/commit/2130d8655098b26525221ece30b0fef8ef70ea4a",
    "details": {
      "sha": "864d6a390a379efe0ef5211de9ed9cc7b312c8ee",
      "filename": "lib/java/com/google/android/material/chip/ChipDrawable.java",
      "status": "modified",
      "additions": 1,
      "deletions": 35,
      "changes": 36,
      "blob_url": "https://github.com/material-components/material-components-android/blob/2130d8655098b26525221ece30b0fef8ef70ea4a/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fchip%2FChipDrawable.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/2130d8655098b26525221ece30b0fef8ef70ea4a/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fchip%2FChipDrawable.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fchip%2FChipDrawable.java?ref=2130d8655098b26525221ece30b0fef8ef70ea4a",
      "patch": "@@ -41,9 +41,6 @@\n import android.graphics.RectF;\n import android.graphics.drawable.Drawable;\n import android.graphics.drawable.Drawable.Callback;\n-import android.graphics.drawable.RippleDrawable;\n-import android.graphics.drawable.ShapeDrawable;\n-import android.graphics.drawable.shapes.OvalShape;\n import android.os.Build.VERSION_CODES;\n import androidx.annotation.AnimatorRes;\n import androidx.annotation.AttrRes;\n@@ -178,7 +175,6 @@ public class ChipDrawable extends MaterialShapeDrawable\n         new int[] {android.R.attr.state_enabled},\n         new int[] {} // default\n       };\n-  private static final ShapeDrawable closeIconRippleMask = new ShapeDrawable(new OvalShape());\n \n   // Visuals\n   @Nullable private ColorStateList chipSurfaceColor;\n@@ -201,7 +197,6 @@ public class ChipDrawable extends MaterialShapeDrawable\n   // Close icon\n   private boolean closeIconVisible;\n   @Nullable private Drawable closeIcon;\n-  @Nullable private RippleDrawable closeIconRipple;\n   @Nullable private ColorStateList closeIconTint;\n   private float closeIconSize;\n   @Nullable private CharSequence closeIconContentDescription;\n@@ -348,11 +343,6 @@ private ChipDrawable(\n     setState(DEFAULT_STATE);\n     setCloseIconState(DEFAULT_STATE);\n     shouldDrawText = true;\n-\n-    if (RippleUtils.USE_FRAMEWORK_RIPPLE) {\n-      //noinspection NewApi\n-      closeIconRippleMask.setTint(Color.WHITE);\n-    }\n   }\n \n   private void loadFromAttributes(\n@@ -739,13 +729,7 @@ private void drawCloseIcon(@NonNull Canvas canvas, Rect bounds) {\n       canvas.translate(tx, ty);\n \n       closeIcon.setBounds(0, 0, (int) rectF.width(), (int) rectF.height());\n-\n-      if (RippleUtils.USE_FRAMEWORK_RIPPLE) {\n-        closeIconRipple.setBounds(closeIcon.getBounds());\n-        closeIconRipple.draw(canvas);\n-      } else {\n-        closeIcon.draw(canvas);\n-      }\n+      closeIcon.draw(canvas);\n \n       canvas.translate(-tx, -ty);\n     }\n@@ -1082,10 +1066,6 @@ private boolean onStateChange(int[] chipState, int[] closeIconState) {\n     if (isStateful(closeIcon)) {\n       invalidate |= closeIcon.setState(closeIconState);\n     }\n-    //noinspection NewApi\n-    if (RippleUtils.USE_FRAMEWORK_RIPPLE && isStateful(closeIconRipple)) {\n-      invalidate |= closeIconRipple.setState(closeIconState);\n-    }\n \n     if (invalidate) {\n       invalidateSelf();\n@@ -1799,9 +1779,6 @@ public void setCloseIcon(@Nullable Drawable closeIcon) {\n     if (oldCloseIcon != closeIcon) {\n       float oldCloseIconWidth = calculateCloseIconWidth();\n       this.closeIcon = closeIcon != null ? DrawableCompat.wrap(closeIcon).mutate() : null;\n-      if (RippleUtils.USE_FRAMEWORK_RIPPLE) {\n-        updateFrameworkCloseIconRipple();\n-      }\n       float newCloseIconWidth = calculateCloseIconWidth();\n \n       unapplyChildDrawable(oldCloseIcon);\n@@ -1816,17 +1793,6 @@ public void setCloseIcon(@Nullable Drawable closeIcon) {\n     }\n   }\n \n-  private void updateFrameworkCloseIconRipple() {\n-    //noinspection NewApi\n-    closeIconRipple =\n-        new RippleDrawable(\n-            RippleUtils.convertToRippleDrawableColor(getRippleColor()),\n-            closeIcon,\n-            // A separate drawable with a solid background is needed for the mask because by\n-            // default, the close icon has a transparent background.\n-            closeIconRippleMask);\n-  }\n-\n   @Nullable\n   public ColorStateList getCloseIconTint() {\n     return closeIconTint;",
      "parent_sha": "7c76b7db93ab1ce30b2c645d667a1d12fa18986e"
    }
  },
  {
    "oid": "93f572268ed27fd406812cd41260006c12b5fa77",
    "message": "Make FloatingActionButton implement TintableBackgroundView.\n\nThis allows FAB to receive background tinting calls from ViewCompat for pre-21 devices.\n\nPiperOrigin-RevId: 167190536",
    "date": "2017-09-21T18:42:59Z",
    "url": "https://github.com/material-components/material-components-android/commit/93f572268ed27fd406812cd41260006c12b5fa77",
    "details": {
      "sha": "7427dd3c0965e5bb584669f9ef6fee7ddda6fdf6",
      "filename": "lib/src/android/support/design/widget/FloatingActionButton.java",
      "status": "modified",
      "additions": 46,
      "deletions": 8,
      "changes": 54,
      "blob_url": "https://github.com/material-components/material-components-android/blob/93f572268ed27fd406812cd41260006c12b5fa77/lib%2Fsrc%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FFloatingActionButton.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/93f572268ed27fd406812cd41260006c12b5fa77/lib%2Fsrc%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FFloatingActionButton.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fsrc%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FFloatingActionButton.java?ref=93f572268ed27fd406812cd41260006c12b5fa77",
      "patch": "@@ -23,6 +23,7 @@\n import android.content.res.Resources;\n import android.content.res.TypedArray;\n import android.graphics.PorterDuff;\n+import android.graphics.PorterDuff.Mode;\n import android.graphics.Rect;\n import android.graphics.drawable.Drawable;\n import android.os.Build;\n@@ -40,6 +41,7 @@\n import android.support.design.widget.FloatingActionButtonImpl.InternalVisibilityChangedListener;\n import android.support.design.widget.expandable.ExpandableTransformationWidget;\n import android.support.design.widget.expandable.ExpandableWidgetHelper;\n+import android.support.v4.view.TintableBackgroundView;\n import android.support.v4.view.ViewCompat;\n import android.support.v7.widget.AppCompatImageHelper;\n import android.util.AttributeSet;\n@@ -70,7 +72,7 @@\n  */\n @CoordinatorLayout.DefaultBehavior(FloatingActionButton.Behavior.class)\n public class FloatingActionButton extends VisibilityAwareImageButton\n-    implements ExpandableTransformationWidget {\n+    implements TintableBackgroundView, ExpandableTransformationWidget {\n \n   private static final String LOG_TAG = \"FloatingActionButton\";\n   private static final String EXPANDABLE_WIDGET_HELPER_KEY = \"expandableWidgetHelper\";\n@@ -291,6 +293,44 @@ public void setBackgroundTintMode(@Nullable PorterDuff.Mode tintMode) {\n     }\n   }\n \n+  /**\n+   * Compat method to support {@link TintableBackgroundView}. Use {@link\n+   * #setBackgroundTintList(ColorStateList)} directly instead.\n+   */\n+  @Override\n+  public void setSupportBackgroundTintList(@Nullable ColorStateList tint) {\n+    setBackgroundTintList(tint);\n+  }\n+\n+  /**\n+   * Compat method to support {@link TintableBackgroundView}. Use {@link #getBackgroundTintList()}\n+   * directly instead.\n+   */\n+  @Nullable\n+  @Override\n+  public ColorStateList getSupportBackgroundTintList() {\n+    return getBackgroundTintList();\n+  }\n+\n+  /**\n+   * Compat method to support {@link TintableBackgroundView}. Use {@link\n+   * #setBackgroundTintMode(Mode)} directly instead.\n+   */\n+  @Override\n+  public void setSupportBackgroundTintMode(@Nullable Mode tintMode) {\n+    setBackgroundTintMode(tintMode);\n+  }\n+\n+  /**\n+   * Compat method to support {@link TintableBackgroundView}. Use {@link #getBackgroundTintMode()}\n+   * directly instead.\n+   */\n+  @Nullable\n+  @Override\n+  public Mode getSupportBackgroundTintMode() {\n+    return getBackgroundTintMode();\n+  }\n+\n   @Override\n   public void setBackgroundDrawable(Drawable background) {\n     Log.i(LOG_TAG, \"Setting a custom background is not supported.\");\n@@ -578,13 +618,11 @@ private static int resolveAdjustedSize(int desiredSize, int measureSpec) {\n \n   @Override\n   public boolean onTouchEvent(MotionEvent ev) {\n-    switch (ev.getAction()) {\n-      case MotionEvent.ACTION_DOWN:\n-        // Skipping the gesture if it doesn't start in in the FAB 'content' area\n-        if (getContentRect(mTouchArea) && !mTouchArea.contains((int) ev.getX(), (int) ev.getY())) {\n-          return false;\n-        }\n-        break;\n+    if (ev.getAction() == MotionEvent.ACTION_DOWN) {\n+      // Skipping the gesture if it doesn't start in the FAB 'content' area\n+      if (getContentRect(mTouchArea) && !mTouchArea.contains((int) ev.getX(), (int) ev.getY())) {\n+        return false;\n+      }\n     }\n     return super.onTouchEvent(ev);\n   }",
      "parent_sha": "1a4f43b81342f66ea66863b257613ca9b6478d76"
    }
  },
  {
    "oid": "71f65908fa848c5c0c105ddc6617b111a12cadc1",
    "message": "Remove final from BottomSheetBehavior (set/get)State\n\nPiperOrigin-RevId: 265685873",
    "date": "2019-08-29T16:09:31Z",
    "url": "https://github.com/material-components/material-components-android/commit/71f65908fa848c5c0c105ddc6617b111a12cadc1",
    "details": {
      "sha": "fddf419b28873833e613a116adc3d8c778eb49f8",
      "filename": "lib/java/com/google/android/material/bottomsheet/BottomSheetBehavior.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/material-components/material-components-android/blob/71f65908fa848c5c0c105ddc6617b111a12cadc1/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbottomsheet%2FBottomSheetBehavior.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/71f65908fa848c5c0c105ddc6617b111a12cadc1/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbottomsheet%2FBottomSheetBehavior.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbottomsheet%2FBottomSheetBehavior.java?ref=71f65908fa848c5c0c105ddc6617b111a12cadc1",
      "patch": "@@ -880,7 +880,7 @@ public BottomSheetCallback getBottomSheetCallback() {\n    * @param state One of {@link #STATE_COLLAPSED}, {@link #STATE_EXPANDED}, {@link #STATE_HIDDEN},\n    *     or {@link #STATE_HALF_EXPANDED}.\n    */\n-  public final void setState(@State int state) {\n+  public void setState(@State int state) {\n     if (state == this.state) {\n       return;\n     }\n@@ -925,7 +925,7 @@ public void run() {\n    *     {@link #STATE_DRAGGING}, {@link #STATE_SETTLING}, or {@link #STATE_HALF_EXPANDED}.\n    */\n   @State\n-  public final int getState() {\n+  public int getState() {\n     return state;\n   }\n ",
      "parent_sha": "e89564aaddffe67fcc77ce128a36544555454a1d"
    }
  },
  {
    "oid": "52f1737dd8f4fe3dad9e12512475c360002126d3",
    "message": "[Predictive Back][Side Sheets] Fix subtle detached side sheet glitch where after predictive back the sheet does not fully slide off screen\n\nPiperOrigin-RevId: 527577382",
    "date": "2023-04-27T20:37:18Z",
    "url": "https://github.com/material-components/material-components-android/commit/52f1737dd8f4fe3dad9e12512475c360002126d3",
    "details": {
      "sha": "543a97ad9be9eec2cae512e454c3d2c67d47eee0",
      "filename": "lib/java/com/google/android/material/motion/MaterialSideContainerBackHelper.java",
      "status": "modified",
      "additions": 12,
      "deletions": 1,
      "changes": 13,
      "blob_url": "https://github.com/material-components/material-components-android/blob/52f1737dd8f4fe3dad9e12512475c360002126d3/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fmotion%2FMaterialSideContainerBackHelper.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/52f1737dd8f4fe3dad9e12512475c360002126d3/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fmotion%2FMaterialSideContainerBackHelper.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fmotion%2FMaterialSideContainerBackHelper.java?ref=52f1737dd8f4fe3dad9e12512475c360002126d3",
      "patch": "@@ -30,6 +30,8 @@\n import android.view.Gravity;\n import android.view.View;\n import android.view.ViewGroup;\n+import android.view.ViewGroup.LayoutParams;\n+import android.view.ViewGroup.MarginLayoutParams;\n import android.window.BackEvent;\n import androidx.annotation.GravityInt;\n import androidx.annotation.NonNull;\n@@ -130,7 +132,7 @@ public void finishBackProgress(\n       @Nullable AnimatorUpdateListener finishAnimatorUpdateListener) {\n     boolean leftSwipeEdge = backEvent.getSwipeEdge() == BackEvent.EDGE_LEFT;\n     boolean leftGravity = checkAbsoluteGravity(gravity, Gravity.LEFT);\n-    float scaledWidth = view.getWidth() * view.getScaleX();\n+    float scaledWidth = view.getWidth() * view.getScaleX() + getEdgeMargin(leftGravity);\n     ObjectAnimator finishAnimator =\n         ObjectAnimator.ofFloat(view, View.TRANSLATION_X, leftGravity ? -scaledWidth : scaledWidth);\n     if (finishAnimatorUpdateListener != null) {\n@@ -179,4 +181,13 @@ private boolean checkAbsoluteGravity(@GravityInt int gravity, @GravityInt int ch\n         GravityCompat.getAbsoluteGravity(gravity, ViewCompat.getLayoutDirection(view));\n     return (absoluteGravity & checkFor) == checkFor;\n   }\n+\n+  private int getEdgeMargin(boolean leftGravity) {\n+    LayoutParams layoutParams = view.getLayoutParams();\n+    if (layoutParams instanceof MarginLayoutParams) {\n+      MarginLayoutParams marginLayoutParams = (MarginLayoutParams) layoutParams;\n+      return leftGravity ? marginLayoutParams.leftMargin : marginLayoutParams.rightMargin;\n+    }\n+    return 0;\n+  }\n }",
      "parent_sha": "d8c5c2c87d4eef9b919542eb5f80aae5e3e97476"
    }
  },
  {
    "oid": "4ecc93e94ee1b78921936af4a5bde4586d776ad3",
    "message": "Merge \"Use colorControlActivated for an active item\" into mnc-ub-dev am: 68c36ca06a\nam: d2c57d085b\n\n* commit 'd2c57d085bc699ddb6c1f5a25adfdbe274fd4060':\n  Use colorControlActivated for an active item\n\nGitOrigin-RevId=795682dbbd48cff248dfa101c86d4d70359f497e\n\nPiperOrigin-RevId: 140559346",
    "date": "2016-12-12T23:44:48Z",
    "url": "https://github.com/material-components/material-components-android/commit/4ecc93e94ee1b78921936af4a5bde4586d776ad3",
    "details": {
      "sha": "a73dc65e5706bd30a731fe517d60304d6fb0c425",
      "filename": "src/android/support/design/widget/NavigationView.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/material-components/material-components-android/blob/4ecc93e94ee1b78921936af4a5bde4586d776ad3/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FNavigationView.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/4ecc93e94ee1b78921936af4a5bde4586d776ad3/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FNavigationView.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FNavigationView.java?ref=4ecc93e94ee1b78921936af4a5bde4586d776ad3",
      "patch": "@@ -408,18 +408,18 @@ private ColorStateList createDefaultColorStateList(int baseColorThemeAttr) {\n             return null;\n         }\n         ColorStateList baseColor = getResources().getColorStateList(value.resourceId);\n-        if (!getContext().getTheme().resolveAttribute(R.attr.colorPrimary, value, true)) {\n+        if (!getContext().getTheme().resolveAttribute(R.attr.colorControlActivated, value, true)) {\n             return null;\n         }\n-        int colorPrimary = value.data;\n+        int colorControlActivated = value.data;\n         int defaultColor = baseColor.getDefaultColor();\n         return new ColorStateList(new int[][]{\n                 DISABLED_STATE_SET,\n                 CHECKED_STATE_SET,\n                 EMPTY_STATE_SET\n         }, new int[]{\n                 baseColor.getColorForState(DISABLED_STATE_SET, defaultColor),\n-                colorPrimary,\n+                colorControlActivated,\n                 defaultColor\n         });\n     }",
      "parent_sha": "2c8e5ffbdfc09bab354b3a23b044bd6fd45791b5"
    }
  },
  {
    "oid": "20c3ad04130b9bbd6ca554268412d2acebb7e5cf",
    "message": "[a11y][TextInputLayout] Removed TextInputLayout's placeholder text duplicated announcement.\n\nBefore, when swiping with TalkBack on, the placeholder text would be mistakenly announced. This change makes it so it's only announced when it appears, for API >= 16. It's still announced as part of the description announcement when the text field is selected, as before, so it's still accessible for APIs < 16.\n\nPiperOrigin-RevId: 405668594",
    "date": "2021-10-27T18:54:35Z",
    "url": "https://github.com/material-components/material-components-android/commit/20c3ad04130b9bbd6ca554268412d2acebb7e5cf",
    "details": {
      "sha": "bef402e324181ed10c37c7253b25cf675140960a",
      "filename": "lib/java/com/google/android/material/textfield/TextInputLayout.java",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/material-components/material-components-android/blob/20c3ad04130b9bbd6ca554268412d2acebb7e5cf/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftextfield%2FTextInputLayout.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/20c3ad04130b9bbd6ca554268412d2acebb7e5cf/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftextfield%2FTextInputLayout.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftextfield%2FTextInputLayout.java?ref=20c3ad04130b9bbd6ca554268412d2acebb7e5cf",
      "patch": "@@ -2300,15 +2300,14 @@ private void setPlaceholderTextEnabled(boolean placeholderEnabled) {\n     if (placeholderEnabled) {\n       placeholderTextView = new AppCompatTextView(getContext());\n       placeholderTextView.setId(R.id.textinput_placeholder);\n+      ViewCompat.setImportantForAccessibility(\n+          placeholderTextView, ViewCompat.IMPORTANT_FOR_ACCESSIBILITY_NO);\n \n       placeholderFadeIn = createPlaceholderFadeTransition();\n       placeholderFadeIn.setStartDelay(PLACEHOLDER_START_DELAY);\n \n       placeholderFadeOut = createPlaceholderFadeTransition();\n \n-      ViewCompat.setAccessibilityLiveRegion(\n-          placeholderTextView, ViewCompat.ACCESSIBILITY_LIVE_REGION_POLITE);\n-\n       setPlaceholderTextAppearance(placeholderTextAppearance);\n       setPlaceholderTextColor(placeholderTextColor);\n       addPlaceholderTextView();\n@@ -2339,11 +2338,14 @@ private void updatePlaceholderText(int inputTextLength) {\n   }\n \n   private void showPlaceholderText() {\n-    if (placeholderTextView != null && placeholderEnabled) {\n+    if (placeholderTextView != null && placeholderEnabled && !TextUtils.isEmpty(placeholderText)) {\n       placeholderTextView.setText(placeholderText);\n       TransitionManager.beginDelayedTransition(inputFrame, placeholderFadeIn);\n       placeholderTextView.setVisibility(VISIBLE);\n       placeholderTextView.bringToFront();\n+      if (VERSION.SDK_INT >= VERSION_CODES.JELLY_BEAN) {\n+        announceForAccessibility(placeholderText);\n+      }\n     }\n   }\n ",
      "parent_sha": "dbd37d27917530d3fd79cf05bfabfad2804e9a40"
    }
  },
  {
    "oid": "84c6020605a8585785a25e16c09ee168ef4c3842",
    "message": "Check if a user explicitly set any of the deprecated xml attributes but not the updated counterparts:\n    chipIconEnabled vs. chipIconVisible\n    closeIconEnabled vs. closeIconVisible\n    checkedIconEnabled vs. checkedIconVisible\n\nPiperOrigin-RevId: 203804667",
    "date": "2018-07-09T19:01:40Z",
    "url": "https://github.com/material-components/material-components-android/commit/84c6020605a8585785a25e16c09ee168ef4c3842",
    "details": {
      "sha": "5a1ed909b34ddafe490d6fbc5e5809b069f7f2b0",
      "filename": "lib/java/com/google/android/material/chip/ChipDrawable.java",
      "status": "modified",
      "additions": 24,
      "deletions": 9,
      "changes": 33,
      "blob_url": "https://github.com/material-components/material-components-android/blob/84c6020605a8585785a25e16c09ee168ef4c3842/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fchip%2FChipDrawable.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/84c6020605a8585785a25e16c09ee168ef4c3842/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fchip%2FChipDrawable.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fchip%2FChipDrawable.java?ref=84c6020605a8585785a25e16c09ee168ef4c3842",
      "patch": "@@ -159,6 +159,7 @@ public class ChipDrawable extends Drawable implements TintAwareDrawable, Callbac\n \n   private static final boolean DEBUG = false;\n   private static final int[] DEFAULT_STATE = new int[] {android.R.attr.state_enabled};\n+  private static final String NAMESPACE_APP = \"http://schemas.android.com/apk/res-auto\";\n \n   // Visuals\n   @Nullable private ColorStateList chipBackgroundColor;\n@@ -373,25 +374,39 @@ private void loadFromAttributes(\n         break;\n     }\n \n-    setChipIconVisible(\n-        a.getBoolean(R.styleable.Chip_chipIconVisible, false)\n-            || a.getBoolean(R.styleable.Chip_chipIconEnabled, false));\n+    setChipIconVisible(a.getBoolean(R.styleable.Chip_chipIconVisible, false));\n+    // If the user explicitly sets the deprecated attribute (chipIconEnabled) but NOT the\n+    // replacement attribute (chipIconVisible), use the value specified in the deprecated attribute.\n+    if (attrs.getAttributeValue(NAMESPACE_APP, \"chipIconEnabled\") != null\n+        && attrs.getAttributeValue(NAMESPACE_APP, \"chipIconVisible\") == null) {\n+      setChipIconVisible(a.getBoolean(R.styleable.Chip_chipIconEnabled, false));\n+    }\n     setChipIcon(MaterialResources.getDrawable(context, a, R.styleable.Chip_chipIcon));\n     setChipIconTint(MaterialResources.getColorStateList(context, a, R.styleable.Chip_chipIconTint));\n     setChipIconSize(a.getDimension(R.styleable.Chip_chipIconSize, 0f));\n \n-    setCloseIconVisible(\n-        a.getBoolean(R.styleable.Chip_closeIconVisible, false)\n-            || a.getBoolean(R.styleable.Chip_closeIconEnabled, false));\n+    setCloseIconVisible(a.getBoolean(R.styleable.Chip_closeIconVisible, false));\n+    // If the user explicitly sets the deprecated attribute (closeIconEnabled) but NOT the\n+    // replacement attribute (closeIconVisible), use the value specified in the deprecated\n+    // attribute.\n+    if (attrs.getAttributeValue(NAMESPACE_APP, \"closeIconEnabled\") != null\n+        && attrs.getAttributeValue(NAMESPACE_APP, \"closeIconVisible\") == null) {\n+      setCloseIconVisible(a.getBoolean(R.styleable.Chip_closeIconEnabled, false));\n+    }\n     setCloseIcon(MaterialResources.getDrawable(context, a, R.styleable.Chip_closeIcon));\n     setCloseIconTint(\n         MaterialResources.getColorStateList(context, a, R.styleable.Chip_closeIconTint));\n     setCloseIconSize(a.getDimension(R.styleable.Chip_closeIconSize, 0f));\n \n     setCheckable(a.getBoolean(R.styleable.Chip_android_checkable, false));\n-    setCheckedIconVisible(\n-        a.getBoolean(R.styleable.Chip_checkedIconVisible, false)\n-            || a.getBoolean(R.styleable.Chip_checkedIconEnabled, false));\n+    setCheckedIconVisible(a.getBoolean(R.styleable.Chip_checkedIconVisible, false));\n+    // If the user explicitly sets the deprecated attribute (checkedIconEnabled) but NOT the\n+    // replacement attribute (checkedIconVisible), use the value specified in the deprecated\n+    // attribute.\n+    if (attrs.getAttributeValue(NAMESPACE_APP, \"checkedIconEnabled\") != null\n+        && attrs.getAttributeValue(NAMESPACE_APP, \"checkedIconVisible\") == null) {\n+      setCheckedIconVisible(a.getBoolean(R.styleable.Chip_checkedIconEnabled, false));\n+    }\n     setCheckedIcon(MaterialResources.getDrawable(context, a, R.styleable.Chip_checkedIcon));\n \n     setShowMotionSpec(MotionSpec.createFromAttribute(context, a, R.styleable.Chip_showMotionSpec));",
      "parent_sha": "631301e4b1e3748f9a606a0112781389467ff0cf"
    }
  },
  {
    "oid": "3b57d0908a83890321acbd90a91a41b8d25041bd",
    "message": "Add non-focused error state for stroke width and color.\n\nThe outline box behaves slightly differently in the error state based on whether or not it has focus. When the text field loses focus, it retains its error color, but its stroke width changes back to the non-focused default stroke width.\n\nPiperOrigin-RevId: 172541052",
    "date": "2017-11-14T18:50:42Z",
    "url": "https://github.com/material-components/material-components-android/commit/3b57d0908a83890321acbd90a91a41b8d25041bd",
    "details": {
      "sha": "f4664e9eda19a369a626112b4010e78671f3016e",
      "filename": "lib/src/android/support/design/widget/TextInputLayout.java",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/material-components/material-components-android/blob/3b57d0908a83890321acbd90a91a41b8d25041bd/lib%2Fsrc%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTextInputLayout.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/3b57d0908a83890321acbd90a91a41b8d25041bd/lib%2Fsrc%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTextInputLayout.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fsrc%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTextInputLayout.java?ref=3b57d0908a83890321acbd90a91a41b8d25041bd",
      "patch": "@@ -1738,6 +1738,8 @@ void updateTextInputBoxState() {\n       return;\n     }\n \n+    final boolean hasFocus = mEditText != null && mEditText.hasFocus();\n+\n     // Update the text box's stroke based on the current state.\n     if (mBoxBackgroundMode == BOX_BACKGROUND_OUTLINE) {\n       if (!isEnabled()) {\n@@ -1746,8 +1748,8 @@ void updateTextInputBoxState() {\n         mBoxStrokeWidthPx = mBoxStrokeWidthDefaultPx;\n       } else if (indicatorViewController.errorShouldBeShown()) {\n         mBoxStrokeColor = indicatorViewController.getErrorViewCurrentTextColor();\n-        mBoxStrokeWidthPx = mBoxStrokeWidthFocusedPx;\n-      } else if (mEditText != null && mEditText.hasFocus()) {\n+        mBoxStrokeWidthPx = hasFocus ? mBoxStrokeWidthFocusedPx : mBoxStrokeWidthDefaultPx;\n+      } else if (hasFocus) {\n         // Set the box's stroke color to the provided color.\n         mBoxStrokeColor = mBoxStrokeColorFromUser;\n         mBoxStrokeWidthPx = mBoxStrokeWidthFocusedPx;",
      "parent_sha": "b65e4559ed22240284dd2e36fd23f3c094b2190d"
    }
  },
  {
    "oid": "f062532d6dd0a7b1b85f01cb105725538dd1bab1",
    "message": "Fixed deprecated link in [LabelVisibilityMode.java](https://developer.android.com/reference/com/google/android/material/bottomnavigation/LabelVisibilityMode) source file.\n\nPiperOrigin-RevId: 741255340",
    "date": "2025-03-31T14:44:14Z",
    "url": "https://github.com/material-components/material-components-android/commit/f062532d6dd0a7b1b85f01cb105725538dd1bab1",
    "details": {
      "sha": "b766b40fe3d48c8af381320ced1bcc613fa84d26",
      "filename": "lib/java/com/google/android/material/bottomnavigation/LabelVisibilityMode.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/material-components/material-components-android/blob/f062532d6dd0a7b1b85f01cb105725538dd1bab1/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbottomnavigation%2FLabelVisibilityMode.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/f062532d6dd0a7b1b85f01cb105725538dd1bab1/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbottomnavigation%2FLabelVisibilityMode.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fbottomnavigation%2FLabelVisibilityMode.java?ref=f062532d6dd0a7b1b85f01cb105725538dd1bab1",
      "patch": "@@ -33,8 +33,8 @@\n  * the label to behave as \"labeled\" when there are 3 items or less, or \"selected\" when there are 4\n  * items or more.\n  *\n- * @deprecated Please use {@link\n- *     com.google.android.material.navigation.NavigationBarView.LabelVisibility instead}.\n+ * @deprecated To set the label visibility mode, see:\n+ *     <p>{@link com.google.android.material.navigation.NavigationBarView.setLabelVisibilityMode}\n  */\n @IntDef({\n   LabelVisibilityMode.LABEL_VISIBILITY_AUTO,",
      "parent_sha": "6db122b3fcc011e431c1ca51406f01204d992fde"
    }
  },
  {
    "oid": "88c448ed19673e7b5d9f53690b3482a6bed06fd2",
    "message": "[NavigationView] Fix subheaderInsetEnd setter\n\nResolves https://github.com/material-components/material-components-android/pull/2979\nResolves https://github.com/material-components/material-components-android/issues/2975\nResolves https://github.com/material-components/material-components-android/issues/2976\n\nGIT_ORIGIN_REV_ID=47659c14a2bc72f5c383e3b59dd9d45b60f6af95\nPiperOrigin-RevId: 475868928",
    "date": "2022-09-22T17:36:02Z",
    "url": "https://github.com/material-components/material-components-android/commit/88c448ed19673e7b5d9f53690b3482a6bed06fd2",
    "details": {
      "sha": "bd17b3e7653caf2c8eb8551192e1890d8f8db753",
      "filename": "lib/java/com/google/android/material/navigation/NavigationView.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/material-components/material-components-android/blob/88c448ed19673e7b5d9f53690b3482a6bed06fd2/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fnavigation%2FNavigationView.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/88c448ed19673e7b5d9f53690b3482a6bed06fd2/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fnavigation%2FNavigationView.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fnavigation%2FNavigationView.java?ref=88c448ed19673e7b5d9f53690b3482a6bed06fd2",
      "patch": "@@ -911,7 +911,7 @@ public int getSubheaderInsetEnd() {\n    * Set the distance between the end of a menu subheader and the end of the NavigationView.\n    */\n   public void setSubheaderInsetEnd(@Px int subheaderInsetEnd) {\n-    presenter.setSubheaderInsetStart(subheaderInsetEnd);\n+    presenter.setSubheaderInsetEnd(subheaderInsetEnd);\n   }\n \n   private MenuInflater getMenuInflater() {",
      "parent_sha": "4a1e6bc42aced9d0eb949bccb3b1a8be8102982b"
    }
  },
  {
    "oid": "45f4fa0ac8cc5092d3c212c3bb46f438dc62dfa6",
    "message": "[MaterialTimePicker] Add some defensive null checks for internal views\n\nPiperOrigin-RevId: 390608782",
    "date": "2021-08-16T20:43:58Z",
    "url": "https://github.com/material-components/material-components-android/commit/45f4fa0ac8cc5092d3c212c3bb46f438dc62dfa6",
    "details": {
      "sha": "72289f8f9497f9b7c366a5f9bb8ac04c295336c9",
      "filename": "lib/java/com/google/android/material/timepicker/MaterialTimePicker.java",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/material-components/material-components-android/blob/45f4fa0ac8cc5092d3c212c3bb46f438dc62dfa6/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftimepicker%2FMaterialTimePicker.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/45f4fa0ac8cc5092d3c212c3bb46f438dc62dfa6/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftimepicker%2FMaterialTimePicker.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftimepicker%2FMaterialTimePicker.java?ref=45f4fa0ac8cc5092d3c212c3bb46f438dc62dfa6",
      "patch": "@@ -305,11 +305,16 @@ public void setCancelable(boolean cancelable) {\n   }\n \n   private void updateInputMode(MaterialButton modeButton) {\n+    if (modeButton == null || timePickerView == null || textInputStub == null) {\n+      return;\n+    }\n+\n     if (activePresenter != null) {\n       activePresenter.hide();\n     }\n \n-    activePresenter = initializeOrRetrieveActivePresenterForMode(inputMode);\n+    activePresenter =\n+        initializeOrRetrieveActivePresenterForMode(inputMode, timePickerView, textInputStub);\n     activePresenter.show();\n     activePresenter.invalidate();\n     Pair<Integer, Integer> buttonData = dataForMode(inputMode);\n@@ -323,7 +328,8 @@ private void updateCancelButtonVisibility() {\n     }\n   }\n \n-  private TimePickerPresenter initializeOrRetrieveActivePresenterForMode(int mode) {\n+  private TimePickerPresenter initializeOrRetrieveActivePresenterForMode(\n+      int mode, @NonNull TimePickerView timePickerView, @NonNull ViewStub textInputStub) {\n     if (mode == INPUT_MODE_CLOCK) {\n       timePickerClockPresenter =\n           timePickerClockPresenter == null",
      "parent_sha": "10edc29b4fef32692171dbb25cffecdbb8bb046a"
    }
  },
  {
    "oid": "42144f3a7e6af28a4fe6aa03e04db6df562e58b2",
    "message": "Fix implementation of ExploreByTouchHelper for chips.\n\nThere is still a bug in ExploreByTouchHelper which will prevent accessibility focus again after the first time a chip gets focus.\n\nPiperOrigin-RevId: 193393825",
    "date": "2018-04-30T15:31:25Z",
    "url": "https://github.com/material-components/material-components-android/commit/42144f3a7e6af28a4fe6aa03e04db6df562e58b2",
    "details": {
      "sha": "f59916992b2436133ca26d1e8ba5cb447bb6979b",
      "filename": "lib/java/com/google/android/material/chip/Chip.java",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/material-components/material-components-android/blob/42144f3a7e6af28a4fe6aa03e04db6df562e58b2/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fchip%2FChip.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/42144f3a7e6af28a4fe6aa03e04db6df562e58b2/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fchip%2FChip.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fchip%2FChip.java?ref=42144f3a7e6af28a4fe6aa03e04db6df562e58b2",
      "patch": "@@ -330,6 +330,11 @@ protected boolean dispatchHoverEvent(MotionEvent event) {\n     return touchHelper.dispatchHoverEvent(event) || super.dispatchHoverEvent(event);\n   }\n \n+  @Override\n+  public boolean dispatchKeyEvent(KeyEvent event) {\n+    return touchHelper.dispatchKeyEvent(event) || super.dispatchKeyEvent(event);\n+  }\n+\n   @Override\n   protected void onFocusChanged(boolean focused, int direction, Rect previouslyFocusedRect) {\n     if (focused) {\n@@ -341,6 +346,7 @@ protected void onFocusChanged(boolean focused, int direction, Rect previouslyFoc\n     invalidate();\n \n     super.onFocusChanged(focused, direction, previouslyFocusedRect);\n+    touchHelper.onFocusChanged(focused, direction, previouslyFocusedRect);\n   }\n \n   @Override\n@@ -604,7 +610,7 @@ protected void onPopulateNodeForVirtualView(\n     protected void onPopulateNodeForHost(AccessibilityNodeInfoCompat node) {\n       node.setCheckable(chipDrawable != null && chipDrawable.isCheckable());\n       node.setClassName(Chip.class.getName());\n-      node.setContentDescription(chipDrawable != null ? chipDrawable.getChipText() : \"\");\n+      node.setText(chipDrawable != null ? chipDrawable.getChipText() : \"\");\n     }\n \n     @Override",
      "parent_sha": "0f6afed7b93fc6b9a7bd77bb223f935f54f5872a"
    }
  },
  {
    "oid": "aee43328f2b02eaf4e7fc49a95fb468c4501407d",
    "message": "Merge \"Fix for AppBarLayout\\'s scrolling view not laying out WIP\" into nyc-dev\nam: 95c069158d\n\n* commit '95c069158d8fa777c4f930dad27c2a6ac59ec741':\n  Fix for AppBarLayout's scrolling view not laying out WIP\n\nChange-Id: I42c75bc97bf73e2c1047f7d834a2431dfda5c905\n\nGitOrigin-RevId=2400816160739eb13b55a91f790df19d8a267d10\n\nPiperOrigin-RevId: 140561031",
    "date": "2016-12-12T23:55:10Z",
    "url": "https://github.com/material-components/material-components-android/commit/aee43328f2b02eaf4e7fc49a95fb468c4501407d",
    "details": {
      "sha": "129521a16e1d5079b8c14fa872e942a2ff8ba9fb",
      "filename": "src/android/support/design/widget/HeaderScrollingViewBehavior.java",
      "status": "modified",
      "additions": 15,
      "deletions": 17,
      "changes": 32,
      "blob_url": "https://github.com/material-components/material-components-android/blob/aee43328f2b02eaf4e7fc49a95fb468c4501407d/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FHeaderScrollingViewBehavior.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/aee43328f2b02eaf4e7fc49a95fb468c4501407d/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FHeaderScrollingViewBehavior.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FHeaderScrollingViewBehavior.java?ref=aee43328f2b02eaf4e7fc49a95fb468c4501407d",
      "patch": "@@ -72,26 +72,24 @@ public boolean onMeasureChild(CoordinatorLayout parent, View child,\n                     }\n                 }\n \n-                if (ViewCompat.isLaidOut(header)) {\n-                    int availableHeight = View.MeasureSpec.getSize(parentHeightMeasureSpec);\n-                    if (availableHeight == 0) {\n-                        // If the measure spec doesn't specify a size, use the current height\n-                        availableHeight = parent.getHeight();\n-                    }\n+                int availableHeight = View.MeasureSpec.getSize(parentHeightMeasureSpec);\n+                if (availableHeight == 0) {\n+                    // If the measure spec doesn't specify a size, use the current height\n+                    availableHeight = parent.getHeight();\n+                }\n \n-                    final int height = availableHeight - header.getMeasuredHeight()\n-                            + getScrollRange(header);\n-                    final int heightMeasureSpec = View.MeasureSpec.makeMeasureSpec(height,\n-                            childLpHeight == ViewGroup.LayoutParams.MATCH_PARENT\n-                                    ? View.MeasureSpec.EXACTLY\n-                                    : View.MeasureSpec.AT_MOST);\n+                final int height = availableHeight - header.getMeasuredHeight()\n+                        + getScrollRange(header);\n+                final int heightMeasureSpec = View.MeasureSpec.makeMeasureSpec(height,\n+                        childLpHeight == ViewGroup.LayoutParams.MATCH_PARENT\n+                                ? View.MeasureSpec.EXACTLY\n+                                : View.MeasureSpec.AT_MOST);\n \n-                    // Now measure the scrolling view with the correct height\n-                    parent.onMeasureChild(child, parentWidthMeasureSpec,\n-                            widthUsed, heightMeasureSpec, heightUsed);\n+                // Now measure the scrolling view with the correct height\n+                parent.onMeasureChild(child, parentWidthMeasureSpec,\n+                        widthUsed, heightMeasureSpec, heightUsed);\n \n-                    return true;\n-                }\n+                return true;\n             }\n         }\n         return false;",
      "parent_sha": "bfe05a65b38cb7829ae997439f164de3f57a7ab2"
    }
  },
  {
    "oid": "4ded01ed3ff5f6669080b6330c3d6dce8869cdca",
    "message": "[TextInputLayout] Add a new custom length counter field and getters/setters to switch how text length is calculated for the counter.\n\nResolves https://github.com/material-components/material-components-android/issues/2418\n\nPiperOrigin-RevId: 449842640",
    "date": "2022-05-23T14:21:23Z",
    "url": "https://github.com/material-components/material-components-android/commit/4ded01ed3ff5f6669080b6330c3d6dce8869cdca",
    "details": {
      "sha": "2a651a610b57c681ad6ebe0adb3dac6573379e86",
      "filename": "lib/java/com/google/android/material/textfield/TextInputLayout.java",
      "status": "modified",
      "additions": 45,
      "deletions": 8,
      "changes": 53,
      "blob_url": "https://github.com/material-components/material-components-android/blob/4ded01ed3ff5f6669080b6330c3d6dce8869cdca/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftextfield%2FTextInputLayout.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/4ded01ed3ff5f6669080b6330c3d6dce8869cdca/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftextfield%2FTextInputLayout.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Ftextfield%2FTextInputLayout.java?ref=4ded01ed3ff5f6669080b6330c3d6dce8869cdca",
      "patch": "@@ -219,9 +219,25 @@ public class TextInputLayout extends LinearLayout {\n \n   private final IndicatorViewController indicatorViewController = new IndicatorViewController(this);\n \n+  /** Interface definition for a length counter. */\n+  public interface LengthCounter {\n+\n+    /**\n+     * Counts the length of the text and returns it.\n+     *\n+     * @param text The text to count the length for.\n+     * @return The count that the counter should be updated with.\n+     */\n+    int countLength(@Nullable Editable text);\n+  }\n+\n   boolean counterEnabled;\n   private int counterMaxLength;\n   private boolean counterOverflowed;\n+\n+  @NonNull\n+  private LengthCounter lengthCounter = (Editable text) -> text != null ? text.length() : 0;\n+\n   @Nullable private TextView counterView;\n   private int counterOverflowTextAppearance;\n   private int counterTextAppearance;\n@@ -1334,6 +1350,24 @@ public Typeface getTypeface() {\n     return typeface;\n   }\n \n+  /**\n+   * Set the counting method used to count the length of a text.\n+   *\n+   * @param lengthCounter the length counter to use.\n+   */\n+  public void setLengthCounter(@NonNull LengthCounter lengthCounter) {\n+    this.lengthCounter = lengthCounter;\n+  }\n+\n+  /**\n+   * Returns the counting method used to count the length of the text. The default counter will\n+   * count the number of characters.\n+   */\n+  @NonNull\n+  public LengthCounter getLengthCounter() {\n+    return lengthCounter;\n+  }\n+\n   @Override\n   @TargetApi(VERSION_CODES.O)\n   public void dispatchProvideAutofillStructure(@NonNull ViewStructure structure, int flags) {\n@@ -1422,10 +1456,10 @@ private void setEditText(EditText editText) {\n           public void afterTextChanged(@NonNull Editable s) {\n             updateLabelState(!restoringSavedState);\n             if (counterEnabled) {\n-              updateCounter(s.length());\n+              updateCounter(s);\n             }\n             if (placeholderEnabled) {\n-              updatePlaceholderText(s.length());\n+              updatePlaceholderText(s);\n             }\n           }\n \n@@ -1454,7 +1488,7 @@ public void onTextChanged(CharSequence s, int start, int before, int count) {}\n     }\n \n     if (counterView != null) {\n-      updateCounter(this.editText.getText().length());\n+      updateCounter(this.editText.getText());\n     }\n     updateEditTextBackground();\n \n@@ -2209,11 +2243,13 @@ public void setCounterMaxLength(int maxLength) {\n \n   private void updateCounter() {\n     if (counterView != null) {\n-      updateCounter(editText == null ? 0 : editText.getText().length());\n+      updateCounter(editText == null ? null : editText.getText());\n     }\n   }\n \n-  void updateCounter(int length) {\n+  void updateCounter(@Nullable Editable text) {\n+    int length = lengthCounter.countLength(text);\n+\n     boolean wasCounterOverflowed = counterOverflowed;\n     if (counterMaxLength == INVALID_MAX_LENGTH) {\n       counterView.setText(String.valueOf(length));\n@@ -2326,11 +2362,12 @@ private Fade createPlaceholderFadeTransition() {\n   }\n \n   private void updatePlaceholderText() {\n-    updatePlaceholderText(editText == null ? 0 : editText.getText().length());\n+    updatePlaceholderText(editText == null ? null : editText.getText());\n   }\n \n-  private void updatePlaceholderText(int inputTextLength) {\n-    if (inputTextLength == 0 && !hintExpanded) {\n+  private void updatePlaceholderText(@Nullable Editable text) {\n+    int length = lengthCounter.countLength(text);\n+    if (length == 0 && !hintExpanded) {\n       showPlaceholderText();\n     } else {\n       hidePlaceholderText();",
      "parent_sha": "c3406dc3abedb0190e7a10e8d745c09587690d6e"
    }
  },
  {
    "oid": "21a7aff545956972a06b6fa6e81199a26a185803",
    "message": "[AppBarLayout] Fix bug in AppBarLayout that refreshes all its children's drawables instead of just its own\n\nResolves https://github.com/material-components/material-components-android/issues/3233\n\nPiperOrigin-RevId: 512678371",
    "date": "2023-02-27T20:48:34Z",
    "url": "https://github.com/material-components/material-components-android/commit/21a7aff545956972a06b6fa6e81199a26a185803",
    "details": {
      "sha": "ca7a989390b1023b15e9cfe2f6087f2161b19725",
      "filename": "lib/java/com/google/android/material/appbar/AppBarLayout.java",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/material-components/material-components-android/blob/21a7aff545956972a06b6fa6e81199a26a185803/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fappbar%2FAppBarLayout.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/21a7aff545956972a06b6fa6e81199a26a185803/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fappbar%2FAppBarLayout.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fappbar%2FAppBarLayout.java?ref=21a7aff545956972a06b6fa6e81199a26a185803",
      "patch": "@@ -2214,7 +2214,15 @@ private void updateAppBarLayoutDrawableState(\n       if (forceJump || (changed && shouldJumpElevationState(parent, layout))) {\n         // If the collapsed state changed, we may need to\n         // jump to the current state if we have an overlapping view\n-        layout.jumpDrawablesToCurrentState();\n+        if (layout.getBackground() != null) {\n+          layout.getBackground().jumpToCurrentState();\n+        }\n+        if (VERSION.SDK_INT >= VERSION_CODES.M && layout.getForeground() != null) {\n+          layout.getForeground().jumpToCurrentState();\n+        }\n+        if (VERSION.SDK_INT >= VERSION_CODES.LOLLIPOP && layout.getStateListAnimator() != null) {\n+          layout.getStateListAnimator().jumpToCurrentState();\n+        }\n       }\n     }\n ",
      "parent_sha": "d8c01c185994574dd67af4d78c1fd8fe425425ae"
    }
  },
  {
    "oid": "ea9cce8c29afa3bd1f81328c9bb4f2402a0d8f40",
    "message": "[ProgressIndicator] Fixed incorrect visibility change when the component's parent is not visible.\n\nPiperOrigin-RevId: 322771684",
    "date": "2020-07-23T15:42:07Z",
    "url": "https://github.com/material-components/material-components-android/commit/ea9cce8c29afa3bd1f81328c9bb4f2402a0d8f40",
    "details": {
      "sha": "bdea667d741f4efc715e878a72799d5de1a5586f",
      "filename": "lib/java/com/google/android/material/progressindicator/ProgressIndicator.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/material-components/material-components-android/blob/ea9cce8c29afa3bd1f81328c9bb4f2402a0d8f40/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fprogressindicator%2FProgressIndicator.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/ea9cce8c29afa3bd1f81328c9bb4f2402a0d8f40/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fprogressindicator%2FProgressIndicator.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fprogressindicator%2FProgressIndicator.java?ref=ea9cce8c29afa3bd1f81328c9bb4f2402a0d8f40",
      "patch": "@@ -350,7 +350,7 @@ protected void onAttachedToWindow() {\n   protected void onDetachedFromWindow() {\n     // Removes the delayedHide runnable from the queue if it has been scheduled.\n     removeCallbacks(delayedHide);\n-    getCurrentDrawable().setVisible(/*visible=*/ false, /*restart=*/ false);\n+    getCurrentDrawable().hideNow();\n     unregisterAnimationCallbacks();\n     super.onDetachedFromWindow();\n   }\n@@ -1005,9 +1005,9 @@ public void onAnimationEnd(Drawable drawable) {\n         @Override\n         public void onAnimationEnd(Drawable drawable) {\n           super.onAnimationEnd(drawable);\n-          if (!isIndeterminateModeChangeRequested) {\n+          if (!isIndeterminateModeChangeRequested && visibleToUser()) {\n             // Don't hide the component if under transition from indeterminate mode to\n-            // determinate mode.\n+            // determinate mode or the component is current not visible to users.\n             setVisibility(INVISIBLE);\n           }\n         }",
      "parent_sha": "5229b3f94c7f42a8ebae2d35e354368883fc76c6"
    }
  },
  {
    "oid": "2289e60d74befac76115e1c1e9f9cbe728ab3c5f",
    "message": "Merge \"Fix crash on L+ when using TextInputLayout\" into mnc-ub-dev\nam: b786d9a334\n\n* commit 'b786d9a33450b42bf937ca193041e35a11be7ca2':\n  Fix crash on L+ when using TextInputLayout\n\nGitOrigin-RevId=0137c5c3b6a97a48403c3a8eb76919bdb47d27ee\n\nPiperOrigin-RevId: 140559965",
    "date": "2016-12-12T23:49:27Z",
    "url": "https://github.com/material-components/material-components-android/commit/2289e60d74befac76115e1c1e9f9cbe728ab3c5f",
    "details": {
      "sha": "511c92747de2f67b8c26fd5ea95ce3af9a661978",
      "filename": "src/android/support/design/widget/TextInputLayout.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/material-components/material-components-android/blob/2289e60d74befac76115e1c1e9f9cbe728ab3c5f/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTextInputLayout.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/2289e60d74befac76115e1c1e9f9cbe728ab3c5f/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTextInputLayout.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTextInputLayout.java?ref=2289e60d74befac76115e1c1e9f9cbe728ab3c5f",
      "patch": "@@ -485,7 +485,7 @@ public void setErrorEnabled(boolean enabled) {\n                 mErrorView = new TextView(getContext());\n                 try {\n                     mErrorView.setTextAppearance(getContext(), mErrorTextAppearance);\n-                } catch (Resources.NotFoundException nfe) {\n+                } catch (Exception e) {\n                     // Probably caused by our theme not extending from Theme.Design*. Instead\n                     // we manually set something appropriate\n                     mErrorView.setTextAppearance(getContext(),",
      "parent_sha": "644452d2ceda0f3ab5fdc33582bee8a258ed2d7a"
    }
  },
  {
    "oid": "96117da2db001ac5c608756d8d6085862da6f596",
    "message": "Remove unnecessary @hide\n\nPiperOrigin-RevId: 261971189",
    "date": "2019-08-16T19:26:29Z",
    "url": "https://github.com/material-components/material-components-android/commit/96117da2db001ac5c608756d8d6085862da6f596",
    "details": {
      "sha": "2b9e227b09766f302a7e0c5a38e05e797c05fbd5",
      "filename": "lib/java/com/google/android/material/internal/ScrimInsetsFrameLayout.java",
      "status": "modified",
      "additions": 1,
      "deletions": 5,
      "changes": 6,
      "blob_url": "https://github.com/material-components/material-components-android/blob/96117da2db001ac5c608756d8d6085862da6f596/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Finternal%2FScrimInsetsFrameLayout.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/96117da2db001ac5c608756d8d6085862da6f596/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Finternal%2FScrimInsetsFrameLayout.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Finternal%2FScrimInsetsFrameLayout.java?ref=96117da2db001ac5c608756d8d6085862da6f596",
      "patch": "@@ -87,11 +87,7 @@ public WindowInsetsCompat onApplyWindowInsets(View v, WindowInsetsCompat insets)\n         });\n   }\n \n-  /**\n-   * Sets the drawable used for the inset foreground.\n-   *\n-   * @hide\n-   */\n+  /** Sets the drawable used for the inset foreground. */\n   public void setScrimInsetForeground(@Nullable Drawable drawable) {\n     insetForeground = drawable;\n   }",
      "parent_sha": "94d2928c17a95969436de88a485dd55ce81e5942"
    }
  },
  {
    "oid": "de9c33f84a19673a13632149f894f7b0d00deda1",
    "message": "am 5506d33b: am 028202cf: am 5b5ca2a4: am a59da11d: Improve the offsetTopAndBottom workaround\n\n* commit '5506d33bc32b8b4702ead821267157b88ff139f2':\n  Improve the offsetTopAndBottom workaround\n\nGitOrigin-RevId=404ed7efdf62b9247f5d86bf3bcc3cc0364c5bcc\n\nPiperOrigin-RevId: 140548684",
    "date": "2016-12-10T02:17:17Z",
    "url": "https://github.com/material-components/material-components-android/commit/de9c33f84a19673a13632149f894f7b0d00deda1",
    "details": {
      "sha": "942dadbf423297eb7a3ed91b323d72f858115ead",
      "filename": "src/android/support/design/widget/ViewOffsetHelper.java",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/material-components/material-components-android/blob/de9c33f84a19673a13632149f894f7b0d00deda1/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FViewOffsetHelper.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/de9c33f84a19673a13632149f894f7b0d00deda1/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FViewOffsetHelper.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FViewOffsetHelper.java?ref=de9c33f84a19673a13632149f894f7b0d00deda1",
      "patch": "@@ -57,10 +57,17 @@ private void updateOffsets() {\n         // Manually invalidate the parent to make sure we get drawn\n         ViewParent parent = mView.getParent();\n         if (parent instanceof View) {\n-            ((View) parent).invalidate();\n+            tickleParentInvalidationFlag((View) parent);\n         }\n     }\n \n+    private static void tickleParentInvalidationFlag(View view) {\n+        // TODO Bug: 21413554\n+        final float x = ViewCompat.getTranslationX(view);\n+        ViewCompat.setTranslationX(view, x + 1);\n+        ViewCompat.setTranslationX(view, x);\n+    }\n+\n     /**\n      * Set the top and bottom offset for this {@link ViewOffsetHelper}'s view.\n      *",
      "parent_sha": "0a62378d9a550a26572505de744645d33ac51da6"
    }
  },
  {
    "oid": "c74a374cc6686d502ed6dc751457ed640f2c0d05",
    "message": "[ProgressIndicator] Automated g4 rollback of changelist 321297596.\n\n*** Reason for rollback ***\n\nIncompatible API change.\n\n*** Original change description ***\n\n[ProgressIndicator] Updated drawable setters.\n- Added new setters with non-framework drawable types.\n- Replaced IllegalArgumentException with UnsupportedOperationException.\n\nPiperOrigin-RevId: 321365984",
    "date": "2020-07-15T16:54:16Z",
    "url": "https://github.com/material-components/material-components-android/commit/c74a374cc6686d502ed6dc751457ed640f2c0d05",
    "details": {
      "sha": "f2dd2093de505789f875344eaa9767853046c8ff",
      "filename": "lib/java/com/google/android/material/progressindicator/ProgressIndicator.java",
      "status": "modified",
      "additions": 15,
      "deletions": 49,
      "changes": 64,
      "blob_url": "https://github.com/material-components/material-components-android/blob/c74a374cc6686d502ed6dc751457ed640f2c0d05/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fprogressindicator%2FProgressIndicator.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/c74a374cc6686d502ed6dc751457ed640f2c0d05/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fprogressindicator%2FProgressIndicator.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fprogressindicator%2FProgressIndicator.java?ref=c74a374cc6686d502ed6dc751457ed640f2c0d05",
      "patch": "@@ -558,64 +558,30 @@ public DrawingDelegate getCurrentDrawingDelegate() {\n         : getProgressDrawable().getDrawingDelegate();\n   }\n \n-  /**\n-   * Sets a new {@link DeterminateDrawable} to this progress indicator.\n-   *\n-   * @param drawable The new determinate drawable for determinate mode.\n-   */\n-  public void setProgressDrawable(@Nullable DeterminateDrawable drawable) {\n-    super.setProgressDrawable(drawable);\n-    if (drawable != null) {\n+  /** Blocks any attempts to set the progress drawable for this progress indicator. */\n+  @Override\n+  public void setProgressDrawable(@NonNull Drawable drawable) {\n+    if (drawable == null || drawable instanceof DeterminateDrawable) {\n+      super.setProgressDrawable(drawable);\n       // Every time ProgressBar sets progress drawable, it refreshes the drawable's level with\n       // progress then secondary progress. Since secondary progress is not used here. We need to set\n       // the level actively to overcome the affects from secondary progress.\n-      drawable.setLevelByFraction((float) getProgress() / getMax());\n-    }\n-  }\n-\n-  /**\n-   * Blocks the setter in {@link ProgressBar} by throwing an {@link UnsupportedOperationException}\n-   * if trying to set a non-null {@link Drawable}, as the drawable object has to inherit from {@link\n-   * DeterminateDrawable}.\n-   *\n-   * @throws UnsupportedOperationException when the argument drawable is not null.\n-   * @see #setProgressDrawable(DeterminateDrawable)\n-   */\n-  @Override\n-  public void setProgressDrawable(Drawable drawable) {\n-    if (drawable == null) {\n-      super.setProgressDrawable(null);\n+      if (drawable != null) {\n+        ((DeterminateDrawable) drawable).setLevelByFraction((float) getProgress() / getMax());\n+      }\n     } else {\n-      throw new UnsupportedOperationException(\n-          \"Progress indicator doesn't support using framework drawable for the determinate types.\");\n+      throw new IllegalArgumentException(\"Cannot set framework drawable as progress drawable.\");\n     }\n   }\n \n-  /**\n-   * Sets a new {@link IndeterminateDrawable} to this progress indicator.\n-   *\n-   * @param drawable The new indeterminate drawable for indeterminate mode.\n-   */\n-  public void setIndeterminateDrawable(IndeterminateDrawable drawable) {\n-    super.setIndeterminateDrawable(drawable);\n-  }\n-\n-  /**\n-   * Blocks the setter in {@link ProgressBar} by throwing an {@link UnsupportedOperationException}\n-   * if trying to set a non-null {@link Drawable}, as the drawable object has to inherit from {@link\n-   * IndeterminateDrawable}.\n-   *\n-   * @throws UnsupportedOperationException when the argument drawable is not null.\n-   * @see #setIndeterminateDrawable(IndeterminateDrawable)\n-   */\n+  /** Blocks any attempts to set the indeterminate drawable for this progress indicator. */\n   @Override\n-  public void setIndeterminateDrawable(Drawable drawable) {\n-    if (drawable == null) {\n-      super.setIndeterminateDrawable(null);\n+  public void setIndeterminateDrawable(@NonNull Drawable drawable) {\n+    if (drawable == null || drawable instanceof IndeterminateDrawable) {\n+      super.setIndeterminateDrawable(drawable);\n     } else {\n-      throw new UnsupportedOperationException(\n-          \"Progress indicator doesn't support using framework drawable for the indeterminate\"\n-              + \" types.\");\n+      throw new IllegalArgumentException(\n+          \"Cannot set framework drawable as indeterminate drawable.\");\n     }\n   }\n ",
      "parent_sha": "d4d9b97518be3e6f1b3f38be2f95c80f9e6eada1"
    }
  },
  {
    "oid": "0c8c6f6249839a19165209c0634da143c862cb37",
    "message": "Update Snackbar to respect left/right system window insets\n\nPiperOrigin-RevId: 272667571",
    "date": "2019-10-03T15:45:22Z",
    "url": "https://github.com/material-components/material-components-android/commit/0c8c6f6249839a19165209c0634da143c862cb37",
    "details": {
      "sha": "25f8bc293bdaf44c51120fdf16149e4d0c2a395f",
      "filename": "lib/java/com/google/android/material/snackbar/BaseTransientBottomBar.java",
      "status": "modified",
      "additions": 47,
      "deletions": 18,
      "changes": 65,
      "blob_url": "https://github.com/material-components/material-components-android/blob/0c8c6f6249839a19165209c0634da143c862cb37/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fsnackbar%2FBaseTransientBottomBar.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/0c8c6f6249839a19165209c0634da143c862cb37/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fsnackbar%2FBaseTransientBottomBar.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fsnackbar%2FBaseTransientBottomBar.java?ref=0c8c6f6249839a19165209c0634da143c862cb37",
      "patch": "@@ -35,6 +35,7 @@\n import android.content.res.ColorStateList;\n import android.content.res.TypedArray;\n import android.graphics.PorterDuff;\n+import android.graphics.Rect;\n import android.graphics.drawable.Drawable;\n import android.graphics.drawable.GradientDrawable;\n import android.os.Build;\n@@ -60,6 +61,7 @@\n import androidx.core.view.accessibility.AccessibilityNodeInfoCompat;\n import android.util.AttributeSet;\n import android.util.DisplayMetrics;\n+import android.util.Log;\n import android.view.Gravity;\n import android.view.LayoutInflater;\n import android.view.MotionEvent;\n@@ -227,6 +229,8 @@ public interface ContentViewCallback\n \n   private static final int[] SNACKBAR_STYLE_ATTR = new int[] {R.attr.snackbarStyle};\n \n+  private static final String TAG = BaseTransientBottomBar.class.getSimpleName();\n+\n   static {\n     handler =\n         new Handler(\n@@ -270,15 +274,25 @@ public void run() {\n             return;\n           }\n \n+          LayoutParams layoutParams = view.getLayoutParams();\n+          if (!(layoutParams instanceof MarginLayoutParams)) {\n+            Log.w(\n+                TAG,\n+                \"Unable to apply gesture inset because layout params are not MarginLayoutParams\");\n+            return;\n+          }\n+\n           // Move view outside of bottom gesture area\n-          MarginLayoutParams layoutParams = (MarginLayoutParams) view.getLayoutParams();\n-          layoutParams.bottomMargin += extraBottomMarginGestureInset - currentInsetBottom;\n+          MarginLayoutParams marginParams = (MarginLayoutParams) layoutParams;\n+          marginParams.bottomMargin += extraBottomMarginGestureInset - currentInsetBottom;\n           view.requestLayout();\n         }\n       };\n \n-  private final int originalBottomMargin;\n+  @Nullable private Rect originalMargins;\n   private int extraBottomMarginWindowInset;\n+  private int extraLeftMarginWindowInset;\n+  private int extraRightMarginWindowInset;\n   private int extraBottomMarginGestureInset;\n   private int extraBottomMarginAnchorView;\n \n@@ -342,7 +356,16 @@ protected BaseTransientBottomBar(\n     }\n     view.addView(content);\n \n-    originalBottomMargin = ((MarginLayoutParams) view.getLayoutParams()).bottomMargin;\n+    LayoutParams layoutParams = view.getLayoutParams();\n+    if (layoutParams instanceof MarginLayoutParams) {\n+      MarginLayoutParams marginParams = (MarginLayoutParams) layoutParams;\n+      originalMargins =\n+          new Rect(\n+              marginParams.leftMargin,\n+              marginParams.topMargin,\n+              marginParams.rightMargin,\n+              marginParams.bottomMargin);\n+    }\n \n     ViewCompat.setAccessibilityLiveRegion(view, ViewCompat.ACCESSIBILITY_LIVE_REGION_POLITE);\n     ViewCompat.setImportantForAccessibility(view, ViewCompat.IMPORTANT_FOR_ACCESSIBILITY_YES);\n@@ -356,10 +379,11 @@ protected BaseTransientBottomBar(\n           @Override\n           public WindowInsetsCompat onApplyWindowInsets(\n               View v, @NonNull WindowInsetsCompat insets) {\n-            // Copy over the bottom inset as bottom margin so that we're displayed above the\n-            // navigation bar.\n+            // Save window insets for additional margins, e.g., to dodge the system navigation bar\n             extraBottomMarginWindowInset = insets.getSystemWindowInsetBottom();\n-            updateBottomMargin();\n+            extraLeftMarginWindowInset = insets.getSystemWindowInsetLeft();\n+            extraRightMarginWindowInset = insets.getSystemWindowInsetRight();\n+            updateMargins();\n             return insets;\n           }\n         });\n@@ -390,11 +414,19 @@ public boolean performAccessibilityAction(View host, int action, Bundle args) {\n         (AccessibilityManager) context.getSystemService(Context.ACCESSIBILITY_SERVICE);\n   }\n \n-  private void updateBottomMargin() {\n-    MarginLayoutParams layoutParams = (MarginLayoutParams) view.getLayoutParams();\n-    layoutParams.bottomMargin =\n-        originalBottomMargin\n-            + (anchorView != null ? extraBottomMarginAnchorView : extraBottomMarginWindowInset);\n+  private void updateMargins() {\n+    LayoutParams layoutParams = view.getLayoutParams();\n+    if (!(layoutParams instanceof MarginLayoutParams) || originalMargins == null) {\n+      Log.w(TAG, \"Unable to update margins because layout params are not MarginLayoutParams\");\n+      return;\n+    }\n+\n+    int extraBottomMargin =\n+        anchorView != null ? extraBottomMarginAnchorView : extraBottomMarginWindowInset;\n+    MarginLayoutParams marginParams = (MarginLayoutParams) layoutParams;\n+    marginParams.bottomMargin = originalMargins.bottom + extraBottomMargin;\n+    marginParams.leftMargin = originalMargins.left + extraLeftMarginWindowInset;\n+    marginParams.rightMargin = originalMargins.right + extraRightMarginWindowInset;\n     view.requestLayout();\n \n     if (VERSION.SDK_INT >= VERSION_CODES.Q && shouldUpdateGestureInset()) {\n@@ -648,7 +680,7 @@ public void onViewAttachedToWindow(View v) {\n               WindowInsets insets = view.getRootWindowInsets();\n               if (insets != null) {\n                 extraBottomMarginGestureInset = insets.getMandatorySystemGestureInsets().bottom;\n-                updateBottomMargin();\n+                updateMargins();\n               }\n             }\n           }\n@@ -679,7 +711,7 @@ public void run() {\n       }\n \n       extraBottomMarginAnchorView = calculateBottomMarginForAnchorView();\n-      updateBottomMargin();\n+      updateMargins();\n \n       // Set view to INVISIBLE so it doesn't flash on the screen before the inset adjustment is\n       // handled and the enter animation is started\n@@ -1178,10 +1210,7 @@ private Drawable createThemedBackground() {\n \n       int backgroundColor =\n           MaterialColors.layer(\n-              this,\n-              R.attr.colorSurface,\n-              R.attr.colorOnSurface,\n-              getBackgroundOverlayColorAlpha());\n+              this, R.attr.colorSurface, R.attr.colorOnSurface, getBackgroundOverlayColorAlpha());\n       background.setColor(backgroundColor);\n       if (backgroundTint != null) {\n         Drawable wrappedDrawable = DrawableCompat.wrap(background);",
      "parent_sha": "4f8bc435c4011718f336f7deb27c3d834951a422"
    }
  },
  {
    "oid": "9e9db602654c57b2111a7b8d6927d7e6c248a0e5",
    "message": "Allow selecting start date = end date in date range picker\n\nPiperOrigin-RevId: 250596249",
    "date": "2019-05-30T21:01:22Z",
    "url": "https://github.com/material-components/material-components-android/commit/9e9db602654c57b2111a7b8d6927d7e6c248a0e5",
    "details": {
      "sha": "8339e9cf943b486b5cd961da010613d860990c5c",
      "filename": "lib/java/com/google/android/material/picker/DateRangeGridSelector.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/material-components/material-components-android/blob/9e9db602654c57b2111a7b8d6927d7e6c248a0e5/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fpicker%2FDateRangeGridSelector.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/9e9db602654c57b2111a7b8d6927d7e6c248a0e5/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fpicker%2FDateRangeGridSelector.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fpicker%2FDateRangeGridSelector.java?ref=9e9db602654c57b2111a7b8d6927d7e6c248a0e5",
      "patch": "@@ -85,7 +85,8 @@ private void initializeStyles(Context context) {\n   public void select(Calendar selection) {\n     if (selectedStartItem == null) {\n       selectedStartItem = selection;\n-    } else if (selectedEndItem == null && selection.after(selectedStartItem)) {\n+    } else if (selectedEndItem == null\n+        && (selection.after(selectedStartItem) || selection.equals(selectedStartItem))) {\n       selectedEndItem = selection;\n     } else {\n       selectedEndItem = null;",
      "parent_sha": "cb71e2d582b9b0d320ec01e49c6cea56765bfb24"
    }
  },
  {
    "oid": "575d1cb48f5d97b6706b9dec1b58c77a97f17cd8",
    "message": "Update EdgeTreatment docs\n\nPiperOrigin-RevId: 214647748",
    "date": "2018-09-28T20:29:56Z",
    "url": "https://github.com/material-components/material-components-android/commit/575d1cb48f5d97b6706b9dec1b58c77a97f17cd8",
    "details": {
      "sha": "80b4838e9c512f77f247400992fa66e0fcbfd21d",
      "filename": "lib/java/com/google/android/material/shape/EdgeTreatment.java",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/material-components/material-components-android/blob/575d1cb48f5d97b6706b9dec1b58c77a97f17cd8/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fshape%2FEdgeTreatment.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/575d1cb48f5d97b6706b9dec1b58c77a97f17cd8/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fshape%2FEdgeTreatment.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fshape%2FEdgeTreatment.java?ref=575d1cb48f5d97b6706b9dec1b58c77a97f17cd8",
      "patch": "@@ -26,13 +26,14 @@ public class EdgeTreatment {\n    * Generates a {@link ShapePath} for this edge treatment.\n    *\n    * <p>EdgeTreatments have an origin of (0, 0) and a destination of (0, length) (i.e. they\n-   * represent the top edge), and are be automatically rotated and scaled as necessary when applied\n-   * to other edges. Only the horizontal, top EdgeTreatment needs to be defined in order to apply it\n-   * to all four edges.\n+   * represent the top edge), and are automatically rotated and scaled as necessary when applied to\n+   * other edges. Only the horizontal, top EdgeTreatment needs to be defined in order to apply it to\n+   * all four edges.\n    *\n    * @param length the length of the edge.\n-   * @param center the distance to the center of the shape. This takes into account any offset added\n-   *     by the proceeding corner.\n+   * @param center the distance to the center of the edge. This takes into account any offset added\n+   *     by the proceeding corner. Drawing anything at (center, 0) will be center aligned with the\n+   *     shape. Normally you'll want to use this instead of length / 2.\n    * @param interpolation the interpolation of the edge treatment. Ranges between 0 (none) and 1\n    *     (fully) interpolated. Custom edge treatments can implement interpolation to support shape\n    *     transition between two arbitrary states. Typically, a value of 0 indicates that the custom",
      "parent_sha": "c6a08a4b68d6c892b5f917d3d8c69aa62e1c111b"
    }
  },
  {
    "oid": "71bfc93bb6d5a0c4dc981b959afd65f7fd356aaa",
    "message": "[DatePicker] Fix bug causing undesired screenshot changes\n\nPiperOrigin-RevId: 746583803",
    "date": "2025-04-17T23:56:05Z",
    "url": "https://github.com/material-components/material-components-android/commit/71bfc93bb6d5a0c4dc981b959afd65f7fd356aaa",
    "details": {
      "sha": "0c60c07f77561820a5c652c2ba6c86e678d4b6b0",
      "filename": "tests/javatests/com/google/android/material/datepicker/TestBackgroundHighlightDecorator.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/material-components/material-components-android/blob/71bfc93bb6d5a0c4dc981b959afd65f7fd356aaa/tests%2Fjavatests%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fdatepicker%2FTestBackgroundHighlightDecorator.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/71bfc93bb6d5a0c4dc981b959afd65f7fd356aaa/tests%2Fjavatests%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fdatepicker%2FTestBackgroundHighlightDecorator.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/tests%2Fjavatests%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fdatepicker%2FTestBackgroundHighlightDecorator.java?ref=71bfc93bb6d5a0c4dc981b959afd65f7fd356aaa",
      "patch": "@@ -17,6 +17,7 @@\n \n import android.content.Context;\n import android.content.res.ColorStateList;\n+import android.graphics.Color;\n import android.os.Parcel;\n import androidx.annotation.ColorInt;\n import androidx.annotation.NonNull;\n@@ -73,7 +74,7 @@ private int getBackgroundHighlightColor(Context context) {\n \n   @ColorInt\n   private int getTextHighlightColor(Context context) {\n-    return MaterialColors.getColor(context, R.attr.colorOnTertiary, R.attr.colorControlNormal);\n+    return MaterialColors.getColor(context, R.attr.colorOnTertiary, Color.BLACK);\n   }\n \n   @ColorInt",
      "parent_sha": "39dd3a4235d88a9aca426c8e8a7f6a3801359737"
    }
  },
  {
    "oid": "b083f2d0ff577c862d8e611c2dcbf81647178fbd",
    "message": "Introduce ViewCompat.setTooltip\n\nThis calls View.setTooltip on API26+. The fallback\nimplementation is a Toast-based tooltip.\n\nUse the new method in ActionMenuItemView,\nMediaRouteButton, ScrollingTabContainerView and\nTabLayout.\n\nBug: 31516506\nTest: manual in Support7Demos and SupportDesignDemos\nChange-Id: I23832a2fd5b589769225a0542c2a0ce4778e673c\nPiperOrigin-RevId: 177072898",
    "date": "2018-01-03T19:48:16Z",
    "url": "https://github.com/material-components/material-components-android/commit/b083f2d0ff577c862d8e611c2dcbf81647178fbd",
    "details": {
      "sha": "ca39610348f7c1e02068501175db122c742c3c27",
      "filename": "lib/src/android/support/design/widget/TabLayout.java",
      "status": "modified",
      "additions": 2,
      "deletions": 39,
      "changes": 41,
      "blob_url": "https://github.com/material-components/material-components-android/blob/b083f2d0ff577c862d8e611c2dcbf81647178fbd/lib%2Fsrc%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTabLayout.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/b083f2d0ff577c862d8e611c2dcbf81647178fbd/lib%2Fsrc%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTabLayout.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fsrc%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTabLayout.java?ref=b083f2d0ff577c862d8e611c2dcbf81647178fbd",
      "patch": "@@ -33,7 +33,6 @@\n import android.graphics.Canvas;\n import android.graphics.Color;\n import android.graphics.Paint;\n-import android.graphics.Rect;\n import android.graphics.drawable.Drawable;\n import android.graphics.drawable.GradientDrawable;\n import android.graphics.drawable.LayerDrawable;\n@@ -82,7 +81,6 @@\n import android.widget.ImageView;\n import android.widget.LinearLayout;\n import android.widget.TextView;\n-import android.widget.Toast;\n import java.lang.annotation.Retention;\n import java.lang.annotation.RetentionPolicy;\n import java.lang.ref.WeakReference;\n@@ -1687,7 +1685,7 @@ void reset() {\n     }\n   }\n \n-  class TabView extends LinearLayout implements OnLongClickListener {\n+  class TabView extends LinearLayout {\n     private Tab mTab;\n     private TextView mTextView;\n     private ImageView mIconView;\n@@ -2055,42 +2053,7 @@ private void updateTextAndIcon(\n         }\n       }\n \n-      if (!hasText && !TextUtils.isEmpty(contentDesc)) {\n-        setOnLongClickListener(this);\n-      } else {\n-        setOnLongClickListener(null);\n-        setLongClickable(false);\n-      }\n-    }\n-\n-    @Override\n-    public boolean onLongClick(final View v) {\n-      final int[] screenPos = new int[2];\n-      final Rect displayFrame = new Rect();\n-      getLocationOnScreen(screenPos);\n-      getWindowVisibleDisplayFrame(displayFrame);\n-\n-      final Context context = getContext();\n-      final int width = getWidth();\n-      final int height = getHeight();\n-      final int midy = screenPos[1] + height / 2;\n-      int referenceX = screenPos[0] + width / 2;\n-      if (ViewCompat.getLayoutDirection(v) == ViewCompat.LAYOUT_DIRECTION_LTR) {\n-        final int screenWidth = context.getResources().getDisplayMetrics().widthPixels;\n-        referenceX = screenWidth - referenceX; // mirror\n-      }\n-\n-      Toast cheatSheet = Toast.makeText(context, mTab.getContentDescription(), Toast.LENGTH_SHORT);\n-      if (midy < displayFrame.height()) {\n-        // Show below the tab view\n-        cheatSheet.setGravity(\n-            Gravity.TOP | GravityCompat.END, referenceX, screenPos[1] + height - displayFrame.top);\n-      } else {\n-        // Show along the bottom center\n-        cheatSheet.setGravity(Gravity.BOTTOM | Gravity.CENTER_HORIZONTAL, 0, height);\n-      }\n-      cheatSheet.show();\n-      return true;\n+      ViewCompat.setTooltipText(this, hasText ? null : contentDesc);\n     }\n \n     public Tab getTab() {",
      "parent_sha": "9a2fde4aa33f9a494bc0acb5061918ffbb446f60"
    }
  },
  {
    "oid": "5b701669ac5fcae4abc762df8683a0317758344f",
    "message": "Reuse text color from ChipDrawable#getTextAppearance instead of using additional resources to refetch it.\n\nPiperOrigin-RevId: 212803097",
    "date": "2018-09-14T15:02:17Z",
    "url": "https://github.com/material-components/material-components-android/commit/5b701669ac5fcae4abc762df8683a0317758344f",
    "details": {
      "sha": "bdd5cc7f7ea218dc66cd8018962069108bb658db",
      "filename": "lib/java/com/google/android/material/chip/Chip.java",
      "status": "modified",
      "additions": 1,
      "deletions": 10,
      "changes": 11,
      "blob_url": "https://github.com/material-components/material-components-android/blob/5b701669ac5fcae4abc762df8683a0317758344f/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fchip%2FChip.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/5b701669ac5fcae4abc762df8683a0317758344f/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fchip%2FChip.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fchip%2FChip.java?ref=5b701669ac5fcae4abc762df8683a0317758344f",
      "patch": "@@ -53,7 +53,6 @@\n import com.google.android.material.internal.ThemeEnforcement;\n import com.google.android.material.internal.TouchTargetUtils;\n import com.google.android.material.internal.ViewUtils;\n-import com.google.android.material.resources.MaterialResources;\n import com.google.android.material.resources.TextAppearance;\n import com.google.android.material.ripple.RippleUtils;\n import android.support.v4.content.res.ResourcesCompat.FontCallback;\n@@ -197,15 +196,7 @@ public Chip(Context context, AttributeSet attrs, int defStyleAttr) {\n             context, attrs, defStyleAttr, R.style.Widget_MaterialComponents_Chip_Action);\n     setChipDrawable(drawable);\n \n-    TypedArray a =\n-        ThemeEnforcement.obtainStyledAttributes(\n-            context,\n-            attrs,\n-            R.styleable.Chip,\n-            defStyleAttr,\n-            R.style.Widget_MaterialComponents_Chip_Action);\n-    setTextColor(\n-        MaterialResources.getColorStateList(context, a, R.styleable.Chip_android_textColor));\n+    setTextColor(drawable.getTextAppearance().textColor);\n \n     touchHelper = new ChipTouchHelper(this);\n     if (VERSION.SDK_INT >= VERSION_CODES.N) {",
      "parent_sha": "8005572becc2ed0ef7af4d0011a13650ea31611e"
    }
  },
  {
    "oid": "cfffaeecb614d67b17dbfd7630493788bf5e0821",
    "message": "am 83e60f1b: am bca00ffa: Merge \"Make sure that we reset the EditText backgroud tint\" into mnc-ub-dev\n\n* commit '83e60f1bbb345b753d49613687ef4bb3976dcd84':\n  Make sure that we reset the EditText backgroud tint\n\nGitOrigin-RevId=b3140f0b62e15e7d4f548e9efe1538907d0a1194\n\nPiperOrigin-RevId: 140550025",
    "date": "2016-12-12T23:38:39Z",
    "url": "https://github.com/material-components/material-components-android/commit/cfffaeecb614d67b17dbfd7630493788bf5e0821",
    "details": {
      "sha": "3fb8b65835854d2bb10bd9bb89b6c963b8d9a4c9",
      "filename": "src/android/support/design/widget/TextInputLayout.java",
      "status": "modified",
      "additions": 15,
      "deletions": 7,
      "changes": 22,
      "blob_url": "https://github.com/material-components/material-components-android/blob/cfffaeecb614d67b17dbfd7630493788bf5e0821/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTextInputLayout.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/cfffaeecb614d67b17dbfd7630493788bf5e0821/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTextInputLayout.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/src%2Fandroid%2Fsupport%2Fdesign%2Fwidget%2FTextInputLayout.java?ref=cfffaeecb614d67b17dbfd7630493788bf5e0821",
      "patch": "@@ -309,6 +309,7 @@ public void setErrorEnabled(boolean enabled) {\n                             0, ViewCompat.getPaddingEnd(mEditText), mEditText.getPaddingBottom());\n                 }\n             } else {\n+                updateEditTextBackground(false);\n                 removeView(mErrorView);\n                 mErrorView = null;\n             }\n@@ -364,11 +365,8 @@ public void onAnimationStart(View view) {\n                     .start();\n \n             // Set the EditText's background tint to the error color\n-            ViewCompat.setBackgroundTintList(mEditText,\n-                    ColorStateList.valueOf(mErrorView.getCurrentTextColor()));\n-\n+            updateEditTextBackground(true);\n             updateLabelVisibility(true);\n-\n         } else {\n             if (mErrorView.getVisibility() == VISIBLE) {\n                 ViewCompat.animate(mErrorView)\n@@ -385,15 +383,25 @@ public void onAnimationEnd(View view) {\n                         }).start();\n \n                 // Restore the 'original' tint, using colorControlNormal and colorControlActivated\n-                final TintManager tintManager = TintManager.get(getContext());\n-                ViewCompat.setBackgroundTintList(mEditText,\n-                        tintManager.getTintList(R.drawable.abc_edit_text_material));\n+                updateEditTextBackground(false);\n             }\n         }\n \n         sendAccessibilityEvent(AccessibilityEvent.TYPE_WINDOW_CONTENT_CHANGED);\n     }\n \n+    private void updateEditTextBackground(boolean errorShown) {\n+        if (errorShown && mErrorView != null) {\n+            // Set the EditText's background tint to the error color\n+            ViewCompat.setBackgroundTintList(mEditText,\n+                    ColorStateList.valueOf(mErrorView.getCurrentTextColor()));\n+        } else {\n+            final TintManager tintManager = TintManager.get(getContext());\n+            ViewCompat.setBackgroundTintList(mEditText,\n+                    tintManager.getTintList(R.drawable.abc_edit_text_material));\n+        }\n+    }\n+\n     /**\n      * Returns the error message that was set to be displayed with\n      * {@link #setError(CharSequence)}, or <code>null</code> if no error was set",
      "parent_sha": "ba00002ac72f55146bc576e8233869705832c5ef"
    }
  },
  {
    "oid": "31ca1106ab5478ee34fbb3113bfd5205595899a7",
    "message": "[Chip] Report a11y class name as RadioButton in single selection mode\n\nAlso consolidates the logic of reporting a11y class name.\n\nResolves https://github.com/material-components/material-components-android/issues/2154\n\nPiperOrigin-RevId: 383849367",
    "date": "2021-07-12T19:38:32Z",
    "url": "https://github.com/material-components/material-components-android/commit/31ca1106ab5478ee34fbb3113bfd5205595899a7",
    "details": {
      "sha": "dd4bdade8c26df787756fa7aa64ec6158286c7e2",
      "filename": "lib/java/com/google/android/material/chip/Chip.java",
      "status": "modified",
      "additions": 22,
      "deletions": 16,
      "changes": 38,
      "blob_url": "https://github.com/material-components/material-components-android/blob/31ca1106ab5478ee34fbb3113bfd5205595899a7/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fchip%2FChip.java",
      "raw_url": "https://github.com/material-components/material-components-android/raw/31ca1106ab5478ee34fbb3113bfd5205595899a7/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fchip%2FChip.java",
      "contents_url": "https://api.github.com/repos/material-components/material-components-android/contents/lib%2Fjava%2Fcom%2Fgoogle%2Fandroid%2Fmaterial%2Fchip%2FChip.java?ref=31ca1106ab5478ee34fbb3113bfd5205595899a7",
      "patch": "@@ -54,6 +54,7 @@\n import android.view.SoundEffectConstants;\n import android.view.View;\n import android.view.ViewOutlineProvider;\n+import android.view.ViewParent;\n import android.view.accessibility.AccessibilityEvent;\n import android.view.accessibility.AccessibilityNodeInfo;\n import androidx.annotation.AnimatorRes;\n@@ -164,6 +165,8 @@ public class Chip extends AppCompatCheckBox implements Delegate, Shapeable {\n   private static final String BUTTON_ACCESSIBILITY_CLASS_NAME = \"android.widget.Button\";\n   private static final String COMPOUND_BUTTON_ACCESSIBILITY_CLASS_NAME =\n       \"android.widget.CompoundButton\";\n+  private static final String RADIO_BUTTON_ACCESSIBILITY_CLASS_NAME =\n+      \"android.widget.RadioButton\";\n   private static final String GENERIC_VIEW_ACCESSIBILITY_CLASS_NAME = \"android.view.View\";\n \n   @NonNull private final ChipTouchHelper touchHelper;\n@@ -266,14 +269,7 @@ public void setElevation(float elevation) {\n   @Override\n   public void onInitializeAccessibilityNodeInfo(@NonNull AccessibilityNodeInfo info) {\n     super.onInitializeAccessibilityNodeInfo(info);\n-    if (isCheckable() || isClickable()) {\n-      info.setClassName(\n-          isCheckable()\n-              ? COMPOUND_BUTTON_ACCESSIBILITY_CLASS_NAME\n-              : BUTTON_ACCESSIBILITY_CLASS_NAME);\n-    } else {\n-      info.setClassName(GENERIC_VIEW_ACCESSIBILITY_CLASS_NAME);\n-    }\n+    info.setClassName(getAccessibilityClassName());\n     info.setCheckable(isCheckable());\n     info.setClickable(isClickable());\n \n@@ -1051,14 +1047,7 @@ protected void onPopulateNodeForVirtualView(\n     protected void onPopulateNodeForHost(@NonNull AccessibilityNodeInfoCompat node) {\n       node.setCheckable(isCheckable());\n       node.setClickable(isClickable());\n-      if (isCheckable() || isClickable()) {\n-        node.setClassName(\n-            isCheckable()\n-                ? COMPOUND_BUTTON_ACCESSIBILITY_CLASS_NAME\n-                : BUTTON_ACCESSIBILITY_CLASS_NAME);\n-      } else {\n-        node.setClassName(GENERIC_VIEW_ACCESSIBILITY_CLASS_NAME);\n-      }\n+      node.setClassName(getAccessibilityClassName());\n       CharSequence chipText = getText();\n       if (VERSION.SDK_INT >= VERSION_CODES.M) {\n         node.setText(chipText);\n@@ -2337,6 +2326,23 @@ public boolean ensureAccessibleTouchTarget(@Dimension int minTargetPx) {\n     return true;\n   }\n \n+  @Override\n+  @NonNull\n+  public CharSequence getAccessibilityClassName() {\n+    if (isCheckable()) {\n+      ViewParent parent = getParent();\n+      if (parent instanceof ChipGroup && ((ChipGroup) parent).isSingleSelection()) {\n+        return RADIO_BUTTON_ACCESSIBILITY_CLASS_NAME;\n+      } else {\n+        return COMPOUND_BUTTON_ACCESSIBILITY_CLASS_NAME;\n+      }\n+    } else if (isClickable()) {\n+      return BUTTON_ACCESSIBILITY_CLASS_NAME;\n+    } else {\n+      return GENERIC_VIEW_ACCESSIBILITY_CLASS_NAME;\n+    }\n+  }\n+\n   private void removeBackgroundInset() {\n     if (insetBackgroundDrawable != null) {\n       insetBackgroundDrawable = null;",
      "parent_sha": "b06446006c2af909acf4b107c547d7ac191390e5"
    }
  }
]