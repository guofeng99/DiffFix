[
  {
    "oid": "95c04eb0859b0aca213b6e9fa1e14c25f3709314",
    "message": "Minor sector damage calculation changes",
    "date": "2021-01-13T22:09:18Z",
    "url": "https://github.com/Anuken/Mindustry/commit/95c04eb0859b0aca213b6e9fa1e14c25f3709314",
    "details": {
      "sha": "7bac886a65bacc879495c3e2dddf1ae8d09c1cfc",
      "filename": "core/src/mindustry/maps/SectorDamage.java",
      "status": "modified",
      "additions": 4,
      "deletions": 6,
      "changes": 10,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/95c04eb0859b0aca213b6e9fa1e14c25f3709314/core%2Fsrc%2Fmindustry%2Fmaps%2FSectorDamage.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/95c04eb0859b0aca213b6e9fa1e14c25f3709314/core%2Fsrc%2Fmindustry%2Fmaps%2FSectorDamage.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fmaps%2FSectorDamage.java?ref=95c04eb0859b0aca213b6e9fa1e14c25f3709314",
      "patch": "@@ -363,13 +363,11 @@ public static void writeParameters(SectorInfo info){\n         info.waveDpsBase = reg.intercept;\n         info.waveDpsSlope = reg.slope;\n \n-        //enemy units like to aim for a lot of non-essential things, so increase resulting health slightly\n-        info.sumHealth = sumHealth * 1.05f;\n-        //players tend to have longer range units/turrets, so assume DPS is higher\n-        info.sumDps = sumDps * 1.05f;\n+        info.sumHealth = sumHealth * 0.9f;\n+        info.sumDps = sumDps;\n         info.sumRps = sumRps;\n \n-        float cmult = 1.5f;\n+        float cmult = 1.6f;\n \n         info.curEnemyDps = curEnemyDps*cmult;\n         info.curEnemyHealth = curEnemyHealth*cmult;\n@@ -524,7 +522,7 @@ public static void apply(float fraction){\n     static float cost(Tile tile){\n         return 1f +\n             (tile.block().isStatic() && tile.solid() ? 200f : 0f) +\n-            (tile.build != null ? tile.build.health / 40f : 0f) +\n+            (tile.build != null ? tile.build.health / (tile.build.block.size * tile.build.block.size) / 20f : 0f) +\n             (tile.floor().isLiquid ? 10f : 0f);\n     }\n }",
      "parent_sha": "c2602fe6a0125ff7768ebefa24e05b0ba8e4ba82"
    }
  },
  {
    "oid": "d4f26e034046dabbe19ae0e711d68bce39ce9266",
    "message": "Fixed sound crackle",
    "date": "2019-07-30T18:15:10Z",
    "url": "https://github.com/Anuken/Mindustry/commit/d4f26e034046dabbe19ae0e711d68bce39ce9266",
    "details": {
      "sha": "653d8bc8c90af0d2df0429bc3746c7558e2088b6",
      "filename": "core/src/io/anuke/mindustry/type/Weapon.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/d4f26e034046dabbe19ae0e711d68bce39ce9266/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Ftype%2FWeapon.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/d4f26e034046dabbe19ae0e711d68bce39ce9266/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Ftype%2FWeapon.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Ftype%2FWeapon.java?ref=d4f26e034046dabbe19ae0e711d68bce39ce9266",
      "patch": "@@ -54,7 +54,7 @@ public class Weapon{\n     /** whether shooter rotation is ignored when shooting. */\n     public boolean ignoreRotation = false;\n \n-    public Sound shootSound = Sounds.die;\n+    public Sound shootSound = Sounds.bang2;\n \n     public TextureRegion region;\n ",
      "parent_sha": "a00a208ff82be986af49978cc636fe3ed8dcc967"
    }
  },
  {
    "oid": "8a19663e54a4d22024058223ab83f3c1df1b82bb",
    "message": "tweaked second map's objectives",
    "date": "2022-04-15T04:28:56Z",
    "url": "https://github.com/Anuken/Mindustry/commit/8a19663e54a4d22024058223ab83f3c1df1b82bb",
    "details": {
      "sha": "fff9d980320324b5fabec35c7286a3bfaa1bf7f8",
      "filename": "core/src/mindustry/content/SectorPresets.java",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/8a19663e54a4d22024058223ab83f3c1df1b82bb/core%2Fsrc%2Fmindustry%2Fcontent%2FSectorPresets.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/8a19663e54a4d22024058223ab83f3c1df1b82bb/core%2Fsrc%2Fmindustry%2Fcontent%2FSectorPresets.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fcontent%2FSectorPresets.java?ref=8a19663e54a4d22024058223ab83f3c1df1b82bb",
      "patch": "@@ -181,7 +181,10 @@ public static void load(){\n                         new BuildCountObjective(Blocks.breach, 1).withMarkers(\n                                 new TextMarker(\"Units are effective, but [accent]turrets[] provide better defensive capabilities if used effectively.\\n Place a [accent]Breach[] turret.\\nTurrets require [accent]ammo[].\", 276f * 8f, 133f * 8f)\n                         ).withFlags(\"defDone\"),\n-                        new BuildCountObjective(Blocks.coreBastion, 2).withMarkers(\n+                        new BuildCountObjective(Blocks.berylliumWall, 6).withMarkers(\n+                                new TextMarker(\"[accent]Walls[] can prevent oncoming damage from reaching your buildings\\nPlace some [accent]beryllium walls[] around the turret.\", 276f * 8f, 133f * 8f)\n+                        ),\n+                        new BuildCountObjective(Blocks.coreBastion, 1).withMarkers(\n                                 new TextMarker(\"You must expand.\\nBuild more units and go on the offensive\", 276f * 8f, 133f * 8f),\n                                 new TextMarker(\"Cores can only be placed in special zone tiles.\", 287 * 8f, 201 * 8f)\n                         ).withFlags(\"def2Done\")",
      "parent_sha": "193ec10c5656e7a878f14c5a78209890c58cd282"
    }
  },
  {
    "oid": "230f98fbb4fd1ffed46396b5847549f108a95aec",
    "message": "Fix abstractness",
    "date": "2019-11-02T19:51:31Z",
    "url": "https://github.com/Anuken/Mindustry/commit/230f98fbb4fd1ffed46396b5847549f108a95aec",
    "details": {
      "sha": "e53be5fcf20bc2add3f6028f62962bef6b883a26",
      "filename": "core/src/io/anuke/mindustry/entities/bullet/FlakBulletType.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/230f98fbb4fd1ffed46396b5847549f108a95aec/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fentities%2Fbullet%2FFlakBulletType.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/230f98fbb4fd1ffed46396b5847549f108a95aec/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fentities%2Fbullet%2FFlakBulletType.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fentities%2Fbullet%2FFlakBulletType.java?ref=230f98fbb4fd1ffed46396b5847549f108a95aec",
      "patch": "@@ -6,7 +6,7 @@\n import io.anuke.mindustry.entities.Units;\n import io.anuke.mindustry.entities.type.Bullet;\n \n-public abstract class FlakBulletType extends BasicBulletType{\n+public class FlakBulletType extends BasicBulletType{\n     protected static Rectangle rect = new Rectangle();\n     protected float explodeRange = 30f;\n ",
      "parent_sha": "6f9811498a5c958049ff3a76ad958a09776651f2"
    }
  },
  {
    "oid": "acd695a46977a6405439b3185a1bc8ac14f37823",
    "message": "Messy cleanup",
    "date": "2020-03-05T12:40:44Z",
    "url": "https://github.com/Anuken/Mindustry/commit/acd695a46977a6405439b3185a1bc8ac14f37823",
    "details": {
      "sha": "86179948025cce38dd2a91ba1bbf106ee169507d",
      "filename": "core/src/mindustry/world/blocks/distribution/CraterConveyor.java",
      "status": "modified",
      "additions": 14,
      "deletions": 12,
      "changes": 26,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/acd695a46977a6405439b3185a1bc8ac14f37823/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fdistribution%2FCraterConveyor.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/acd695a46977a6405439b3185a1bc8ac14f37823/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fdistribution%2FCraterConveyor.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fdistribution%2FCraterConveyor.java?ref=acd695a46977a6405439b3185a1bc8ac14f37823",
      "patch": "@@ -84,30 +84,28 @@ public void draw(Tile tile, int bit){\n     public void drawLayer(Tile tile){\n         CraterConveyorEntity entity = tile.ent();\n \n-        //     no from == no crater\n         if(entity.from == Pos.invalid) return;\n \n+        // position\n         Tile from = world.tile(entity.from);\n         Tmp.v1.set(from.getX(), from.getY());\n         Tmp.v2.set(tile.drawx(), tile.drawy());\n         Tmp.v1.interpolate(Tmp.v2, 1f - entity.reload, Interpolation.linear);\n \n-        // rotating smoothly\n+        // fixme\n         float a = from.rotation() * 90;\n         float b = tile.rotation() * 90;\n         if(from.rotation() == 3 && tile.rotation() == 0) a = -1 * 90;\n         if(from.rotation() == 0 && tile.rotation() == 3) a = 4 * 90;\n+\n+        // rotation\n         float rotation = Mathf.lerp(a, b, Interpolation.smooth.apply(1f - Mathf.clamp(entity.reload * 2, 0f, 1f)));\n \n-        // draw crater\n+        // crater\n         Draw.rect(regions[7], Tmp.v1.x, Tmp.v1.y, rotation);\n \n-        // failsafe\n-        if(entity.items.first() == null) return;\n-\n-        // draw resource\n-        float size = itemSize / 2f;\n-        size += entity.items.total() * 0.1f / (itemCapacity / 8f);\n+        // item\n+        float size = (itemSize / 2f) + entity.items.total() * 0.1f / (itemCapacity / 8f);\n         Draw.rect(entity.items.first().icon(Cicon.medium), Tmp.v1.x, Tmp.v1.y, size, size, 0);\n     }\n \n@@ -159,8 +157,8 @@ public void update(Tile tile){\n                 entity.sleep();\n                 return;\n             }\n-            Effects.effect(Fx.plasticburn, tile.drawx(), tile.drawy());\n             entity.from = tile.pos();\n+            Effects.effect(Fx.plasticburn, tile.drawx(), tile.drawy());\n         }else{\n             // poof out crater\n             if(entity.items.total() == 0){\n@@ -177,6 +175,7 @@ public void update(Tile tile){\n                 while(true) if(!tryDump(tile)) break; // unload as much as possible\n                 if(entity.items.total() == 0){\n                     Effects.effect(Fx.plasticburn, tile.drawx(), tile.drawy());\n+                    entity.from = Pos.invalid;\n                     bump(tile);\n                 }\n             }\n@@ -231,8 +230,11 @@ public void handleItem(Item item, Tile tile, Tile source){\n     @Override\n     public int removeStack(Tile tile, Item item, int amount){\n         int i = super.removeStack(tile, item, amount);\n-        if(tile.entity.items.total() == 0) Effects.effect(Fx.plasticburn, tile.drawx(), tile.drawy());\n-        if(tile.entity.items.total() == 0) bump(tile);\n+        if(tile.entity.items.total() == 0){\n+            Effects.effect(Fx.plasticburn, tile.drawx(), tile.drawy());\n+            tile.<CraterConveyorEntity>ent().from = Pos.invalid;\n+            bump(tile);\n+        }\n         return i;\n     }\n ",
      "parent_sha": "503650654737dfeccc3a91cf66b179370ce89149"
    }
  },
  {
    "oid": "f1b1009728312f2f39df12b622e2409f024e4e26",
    "message": "Made canvas block require beryllium",
    "date": "2022-10-05T10:06:35Z",
    "url": "https://github.com/Anuken/Mindustry/commit/f1b1009728312f2f39df12b622e2409f024e4e26",
    "details": {
      "sha": "26102dbebbd1319e8d21d2259df3448cb4259fb4",
      "filename": "core/src/mindustry/content/Blocks.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/f1b1009728312f2f39df12b622e2409f024e4e26/core%2Fsrc%2Fmindustry%2Fcontent%2FBlocks.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/f1b1009728312f2f39df12b622e2409f024e4e26/core%2Fsrc%2Fmindustry%2Fcontent%2FBlocks.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fcontent%2FBlocks.java?ref=f1b1009728312f2f39df12b622e2409f024e4e26",
      "patch": "@@ -5818,7 +5818,7 @@ Items.surgeAlloy, new BasicBulletType(7f, 250){{\n         }};\n \n         canvas = new CanvasBlock(\"canvas\"){{\n-            requirements(Category.logic, BuildVisibility.shown, with(Items.silicon, 40, Items.graphite, 10));\n+            requirements(Category.logic, BuildVisibility.shown, with(Items.silicon, 30, Items.beryllium, 10));\n \n             canvasSize = 12;\n             padding = 7f / 4f * 2f;",
      "parent_sha": "5e6d40d6cc4b844788171c27d847f044398400ba"
    }
  },
  {
    "oid": "0bd1b4eedcdf7cdbbb3f90cebe21c3f2825ba678",
    "message": "Skip loading team regions for teams without palettes",
    "date": "2021-06-27T16:28:40Z",
    "url": "https://github.com/Anuken/Mindustry/commit/0bd1b4eedcdf7cdbbb3f90cebe21c3f2825ba678",
    "details": {
      "sha": "2fccf0130bd9553db28c5caa30e3d7753d3e6607",
      "filename": "core/src/mindustry/world/Block.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/0bd1b4eedcdf7cdbbb3f90cebe21c3f2825ba678/core%2Fsrc%2Fmindustry%2Fworld%2FBlock.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/0bd1b4eedcdf7cdbbb3f90cebe21c3f2825ba678/core%2Fsrc%2Fmindustry%2Fworld%2FBlock.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fworld%2FBlock.java?ref=0bd1b4eedcdf7cdbbb3f90cebe21c3f2825ba678",
      "patch": "@@ -843,7 +843,7 @@ public void load(){\n         //load specific team regions\n         teamRegions = new TextureRegion[Team.all.length];\n         for(Team team : Team.all){\n-            teamRegions[team.id] = teamRegion.found() ? Core.atlas.find(name + \"-team-\" + team.name, teamRegion) : teamRegion;\n+            teamRegions[team.id] = teamRegion.found() && team.hasPalette ? Core.atlas.find(name + \"-team-\" + team.name, teamRegion) : teamRegion;\n         }\n \n         if(variants != 0){",
      "parent_sha": "d401d7838c7f3bb89222f136ecb865e43178e8b9"
    }
  },
  {
    "oid": "ecaa0a4eaa9b8365fba2d2e6a36b85511dc5eea0",
    "message": "Some liquid turrets are not caring enough",
    "date": "2020-10-30T07:44:54Z",
    "url": "https://github.com/Anuken/Mindustry/commit/ecaa0a4eaa9b8365fba2d2e6a36b85511dc5eea0",
    "details": {
      "sha": "8ab8b5cb412919ccb788a25095a24818ec2b434e",
      "filename": "core/src/mindustry/world/blocks/defense/turrets/LiquidTurret.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/ecaa0a4eaa9b8365fba2d2e6a36b85511dc5eea0/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fdefense%2Fturrets%2FLiquidTurret.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/ecaa0a4eaa9b8365fba2d2e6a36b85511dc5eea0/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fdefense%2Fturrets%2FLiquidTurret.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fdefense%2Fturrets%2FLiquidTurret.java?ref=ecaa0a4eaa9b8365fba2d2e6a36b85511dc5eea0",
      "patch": "@@ -19,6 +19,7 @@ public class LiquidTurret extends Turret{\n     public ObjectMap<Liquid, BulletType> ammoTypes = new ObjectMap<>();\n     public @Load(\"@-liquid\") TextureRegion liquidRegion;\n     public @Load(\"@-top\") TextureRegion topRegion;\n+    public boolean extinguish = true;\n \n     public LiquidTurret(String name){\n         super(name);\n@@ -86,7 +87,7 @@ public void updateTile(){\n \n         @Override\n         protected void findTarget(){\n-            if(liquids.current().canExtinguish()){\n+            if(extinguish && liquids.current().canExtinguish()){\n                 int tr = (int)(range / tilesize);\n                 for(int x = -tr; x <= tr; x++){\n                     for(int y = -tr; y <= tr; y++){",
      "parent_sha": "a9f5aa9220f8aab5ae676933193921727727d5f5"
    }
  },
  {
    "oid": "86aeabc9115a6efe21913e20fadcccf758c0b118",
    "message": "Fixed item display being too close to top left of screen",
    "date": "2019-02-17T16:36:54Z",
    "url": "https://github.com/Anuken/Mindustry/commit/86aeabc9115a6efe21913e20fadcccf758c0b118",
    "details": {
      "sha": "83a42a18b82398c49d11ac34cdc74106b61a64ca",
      "filename": "core/src/io/anuke/mindustry/ui/ItemsDisplay.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/86aeabc9115a6efe21913e20fadcccf758c0b118/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fui%2FItemsDisplay.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/86aeabc9115a6efe21913e20fadcccf758c0b118/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fui%2FItemsDisplay.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fui%2FItemsDisplay.java?ref=86aeabc9115a6efe21913e20fadcccf758c0b118",
      "patch": "@@ -26,7 +26,7 @@ public void rebuild(){\n         margin(0);\n \n         table(\"flat\", t -> {\n-            t.margin(2);\n+            t.margin(10).marginLeft(15).marginTop(15f);\n             ObjectIntMap<Item> items = data.items();\n             for(Item item : content.items()){\n                 if(item.type == ItemType.material && data.isUnlocked(item)){",
      "parent_sha": "5e2a45504559b53a79f5c57ecd8543d50ebb5352"
    }
  },
  {
    "oid": "5037c4e00e51b70fcfd9f817233736fdcd6c04cf",
    "message": "Fix a few issues w/ double tap mining (#4798)\n\nCurrently, double tap mining consumes clicks so it prevents the player from configuring any block if they click twice within 500ms. The double tap mining was also using the `selected` var which could have been null causing a crash. This is a very messy solution but it does the job good enough",
    "date": "2021-02-27T15:12:00Z",
    "url": "https://github.com/Anuken/Mindustry/commit/5037c4e00e51b70fcfd9f817233736fdcd6c04cf",
    "details": {
      "sha": "a5114a4832457d9ea68dbcdccd06909c1b0f35ca",
      "filename": "core/src/mindustry/input/DesktopInput.java",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/5037c4e00e51b70fcfd9f817233736fdcd6c04cf/core%2Fsrc%2Fmindustry%2Finput%2FDesktopInput.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/5037c4e00e51b70fcfd9f817233736fdcd6c04cf/core%2Fsrc%2Fmindustry%2Finput%2FDesktopInput.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Finput%2FDesktopInput.java?ref=5037c4e00e51b70fcfd9f817233736fdcd6c04cf",
      "patch": "@@ -491,12 +491,10 @@ void pollInput(){\n                 sreq = req;\n             }else if(req != null && req.breaking){\n                 deleting = true;\n-            }else if(Core.settings.getBool(\"doubletapmine\") && selected == prevSelected && Time.timeSinceMillis(selectMillis) < 500){\n-                tryBeginMine(selected);\n             }else if(selected != null){\n                 //only begin shooting if there's no cursor event\n                 if(!tryTapPlayer(Core.input.mouseWorld().x, Core.input.mouseWorld().y) && !tileTapped(selected.build) && !player.unit().activelyBuilding() && !droppingItem\n-                    && (Core.settings.getBool(\"doubletapmine\") ? !tryStopMine(selected) : !tryBeginMine(selected)) && !Core.scene.hasKeyboard()){\n+                    && !((!settings.getBool(\"doubletapmine\") || selected == prevSelected && Time.timeSinceMillis(selectMillis) < 500) && tryBeginMine(selected)) && !Core.scene.hasKeyboard()){\n                     player.shooting = shouldShoot;\n                 }\n             }else if(!Core.scene.hasKeyboard()){ //if it's out of bounds, shooting is just fine",
      "parent_sha": "e4ecfc4ee7b1d4b65ebbbd231314ecc77ad837b1"
    }
  },
  {
    "oid": "18a382b07abd9817863e2ec893b1715cb6bf72ba",
    "message": "Draw Conveyor Items under Blocks (#4372)\n\n* Draw Conveyor Items under Blocks\r\n\r\n* Remove new layer in favor of subtraction\r\n\r\nCo-authored-by: Leonwang4234 <62972692+Leonwang4234@users.noreply.github.com>",
    "date": "2021-01-18T22:34:17Z",
    "url": "https://github.com/Anuken/Mindustry/commit/18a382b07abd9817863e2ec893b1715cb6bf72ba",
    "details": {
      "sha": "4e59952084ea3f17be0b2ab1062fa919eb324948",
      "filename": "core/src/mindustry/world/blocks/distribution/Conveyor.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/18a382b07abd9817863e2ec893b1715cb6bf72ba/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fdistribution%2FConveyor.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/18a382b07abd9817863e2ec893b1715cb6bf72ba/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fdistribution%2FConveyor.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fdistribution%2FConveyor.java?ref=18a382b07abd9817863e2ec893b1715cb6bf72ba",
      "patch": "@@ -127,11 +127,11 @@ public void draw(){\n                 }\n             }\n \n-            Draw.z(Layer.block);\n+            Draw.z(Layer.block - 0.2f);\n \n             Draw.rect(regions[blendbits][frame], x, y, tilesize * blendsclx, tilesize * blendscly, rotation * 90);\n \n-            Draw.z(Layer.blockOver);\n+            Draw.z(Layer.block - 0.1f);\n \n             for(int i = 0; i < len; i++){\n                 Item item = ids[i];",
      "parent_sha": "83a4f56679697dcf188c5dbf94d25ac793de6508"
    }
  },
  {
    "oid": "b0c4486b7cd5d241a4880ca6af1a510501123030",
    "message": "Fixed #6874",
    "date": "2022-06-08T15:01:28Z",
    "url": "https://github.com/Anuken/Mindustry/commit/b0c4486b7cd5d241a4880ca6af1a510501123030",
    "details": {
      "sha": "a7824571125fd4dfb2c94819ffb76bd4e9fd7722",
      "filename": "core/src/mindustry/world/blocks/payloads/PayloadRouter.java",
      "status": "modified",
      "additions": 10,
      "deletions": 1,
      "changes": 11,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/b0c4486b7cd5d241a4880ca6af1a510501123030/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fpayloads%2FPayloadRouter.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/b0c4486b7cd5d241a4880ca6af1a510501123030/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fpayloads%2FPayloadRouter.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fpayloads%2FPayloadRouter.java?ref=b0c4486b7cd5d241a4880ca6af1a510501123030",
      "patch": "@@ -89,30 +89,39 @@ public void pickNext(){\n                         //\"accept from self\" conditions are for dropped payloads and are less restrictive\n                     }while((blocked || next == null || !next.acceptPayload(next, item)) && ++rotations < 4);\n                 }\n+            }else{\n+                onProximityUpdate();\n             }\n         }\n \n         @Override\n         public void control(LAccess type, double p1, double p2, double p3, double p4){\n             super.control(type, p1, p2, p3, p4);\n             if(type == LAccess.config){\n+                int prev = rotation;\n                 rotation = (int)p1;\n                 //when manually controlled, routers do not turn automatically for a while, same as turrets\n                 controlTime = 60f * 6f;\n+                if(prev != (int)p1){\n+                    onProximityUpdate();\n+                }\n             }\n         }\n \n         @Override\n         public void onControlSelect(Unit player){\n             super.onControlSelect(player);\n+            //this will immediately snap back if logic controlled\n             recDir = rotation;\n             checkMatch();\n         }\n \n         @Override\n         public void handlePayload(Building source, Payload payload){\n             super.handlePayload(source, payload);\n-            recDir = source == null ? rotation : source.relativeTo(this);\n+            if(controlTime < 0f){ //don't overwrite logic recDir\n+                recDir = source == null ? rotation : source.relativeTo(this);\n+            }\n             checkMatch();\n             pickNext();\n         }",
      "parent_sha": "ab9027091712960a1a371219885d1e6a9bc6d912"
    }
  },
  {
    "oid": "80bd1daea438659878683f949f79db2e0f36553f",
    "message": "typo",
    "date": "2020-10-21T20:34:38Z",
    "url": "https://github.com/Anuken/Mindustry/commit/80bd1daea438659878683f949f79db2e0f36553f",
    "details": {
      "sha": "3d904c182669daa0f5f01b696e36bf954d40dff1",
      "filename": "core/src/mindustry/core/Control.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/80bd1daea438659878683f949f79db2e0f36553f/core%2Fsrc%2Fmindustry%2Fcore%2FControl.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/80bd1daea438659878683f949f79db2e0f36553f/core%2Fsrc%2Fmindustry%2Fcore%2FControl.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fcore%2FControl.java?ref=80bd1daea438659878683f949f79db2e0f36553f",
      "patch": "@@ -35,7 +35,7 @@\n \n /**\n  * Control module.\n- * Handles all input, saving, keybinds and keybinds.\n+ * Handles all input, saving and keybinds.\n  * Should <i>not</i> handle any logic-critical state.\n  * This class is not created in the headless server.\n  */",
      "parent_sha": "a80d0cc457eca4f5fd4d07796cb803acb999c5ca"
    }
  },
  {
    "oid": "f609ee77a4fdc56c9794e1fd3c591632afa797d7",
    "message": "Bridge align fix",
    "date": "2020-09-15T17:56:42Z",
    "url": "https://github.com/Anuken/Mindustry/commit/f609ee77a4fdc56c9794e1fd3c591632afa797d7",
    "details": {
      "sha": "7fa0f21987ce587d575adb75e05a0bb7ee8fc0ba",
      "filename": "core/src/mindustry/world/blocks/distribution/ItemBridge.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/f609ee77a4fdc56c9794e1fd3c591632afa797d7/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fdistribution%2FItemBridge.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/f609ee77a4fdc56c9794e1fd3c591632afa797d7/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fdistribution%2FItemBridge.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fdistribution%2FItemBridge.java?ref=f609ee77a4fdc56c9794e1fd3c591632afa797d7",
      "patch": "@@ -62,7 +62,7 @@ public void drawRequestConfigTop(BuildPlan req, Eachable<BuildPlan> list){\n \n         Lines.stroke(8f);\n \n-        Tmp.v1.set(otherReq.drawx(), otherReq.drawx()).sub(req.drawx(), req.drawy()).setLength(-tilesize/2f);\n+        Tmp.v1.set(otherReq.drawx(), otherReq.drawy()).sub(req.drawx(), req.drawy()).setLength(tilesize/2f);\n \n         Lines.line(\n         bridgeRegion,",
      "parent_sha": "d1b5b7eb3c9182239d59d01b4f9015ed49559ad1"
    }
  },
  {
    "oid": "a511b885f67179d82998af7c9ba068d9b0c4b340",
    "message": "Tweaked research costs",
    "date": "2022-03-02T20:32:31Z",
    "url": "https://github.com/Anuken/Mindustry/commit/a511b885f67179d82998af7c9ba068d9b0c4b340",
    "details": {
      "sha": "77f2cefa86843addc88b8f48762d7b647c6c835b",
      "filename": "core/src/mindustry/content/Blocks.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/a511b885f67179d82998af7c9ba068d9b0c4b340/core%2Fsrc%2Fmindustry%2Fcontent%2FBlocks.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/a511b885f67179d82998af7c9ba068d9b0c4b340/core%2Fsrc%2Fmindustry%2Fcontent%2FBlocks.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fcontent%2FBlocks.java?ref=a511b885f67179d82998af7c9ba068d9b0c4b340",
      "patch": "@@ -2080,7 +2080,7 @@ public static void load(){\n             liquidCapacity = 20f;\n             liquidPressure = 1.03f;\n             health = 250;\n-            researchCostMultiplier = 6;\n+            researchCostMultiplier = 3;\n         }};\n \n         //TODO is this necessary? junctions are not good design\n@@ -2090,14 +2090,14 @@ public static void load(){\n             buildCostMultiplier = 3f;\n             health = 260;\n             ((Conduit)reinforcedConduit).junctionReplacement = this;\n-            researchCostMultiplier = 6;\n+            researchCostMultiplier = 1;\n         }};\n \n         reinforcedBridgeConduit = new DirectionLiquidBridge(\"reinforced-bridge-conduit\"){{\n             requirements(Category.liquid, with(Items.graphite, 6, Items.beryllium, 10));\n             range = 4;\n             hasPower = false;\n-            researchCostMultiplier = 6;\n+            researchCostMultiplier = 1;\n \n             ((Conduit)reinforcedConduit).rotBridgeReplacement = this;\n         }};",
      "parent_sha": "b05874ccf72d084e33c1ca8f1e651ed2f8f77cfe"
    }
  },
  {
    "oid": "3414026828a931379fd3a21e31f4686b599b59e8",
    "message": "Crash fix",
    "date": "2019-08-31T13:50:05Z",
    "url": "https://github.com/Anuken/Mindustry/commit/3414026828a931379fd3a21e31f4686b599b59e8",
    "details": {
      "sha": "932045d016463becb088211784f51506012f180b",
      "filename": "core/src/io/anuke/mindustry/maps/Maps.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/3414026828a931379fd3a21e31f4686b599b59e8/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fmaps%2FMaps.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/3414026828a931379fd3a21e31f4686b599b59e8/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fmaps%2FMaps.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fmaps%2FMaps.java?ref=3414026828a931379fd3a21e31f4686b599b59e8",
      "patch": "@@ -60,7 +60,9 @@ public Maps(){\n             maps.sort();\n         });\n \n-        ((CustomLoader)Core.assets.getLoader(Content.class)).loaded = this::createAllPreviews;\n+        if(Core.assets != null){\n+            ((CustomLoader)Core.assets.getLoader(Content.class)).loaded = this::createAllPreviews;\n+        }\n     }\n \n     /**",
      "parent_sha": "7089fae0d54bd6a195c8d3068f3f8e470252e2c6"
    }
  },
  {
    "oid": "fb35adb4946b3aaec7a37c4fbf33bb7a395e66ba",
    "message": "Added AttributeCrafter env calculation",
    "date": "2021-07-08T15:06:46Z",
    "url": "https://github.com/Anuken/Mindustry/commit/fb35adb4946b3aaec7a37c4fbf33bb7a395e66ba",
    "details": {
      "sha": "d1480f6a16009379f3bc86fc40be39887a7e0cba",
      "filename": "core/src/mindustry/world/blocks/production/AttributeCrafter.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/fb35adb4946b3aaec7a37c4fbf33bb7a395e66ba/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fproduction%2FAttributeCrafter.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/fb35adb4946b3aaec7a37c4fbf33bb7a395e66ba/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fproduction%2FAttributeCrafter.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fproduction%2FAttributeCrafter.java?ref=fb35adb4946b3aaec7a37c4fbf33bb7a395e66ba",
      "patch": "@@ -45,7 +45,7 @@ public class AttributeCrafterBuild extends GenericCrafterBuild{\n \n         @Override\n         public float efficiency(){\n-            return (baseEfficiency + Math.min(maxBoost, boostScale * attrsum)) * super.efficiency();\n+            return (baseEfficiency + Math.min(maxBoost, boostScale * attrsum) + attribute.env()) * super.efficiency();\n         }\n \n         @Override",
      "parent_sha": "22813b71ffd067696197620573ed35c7560404d2"
    }
  },
  {
    "oid": "f1cf1efe321d80c5d0b4c787b77b810f80a9c5e5",
    "message": "Build retry",
    "date": "2021-06-03T18:23:16Z",
    "url": "https://github.com/Anuken/Mindustry/commit/f1cf1efe321d80c5d0b4c787b77b810f80a9c5e5",
    "details": {
      "sha": "b286a3f2d6b64a44d5ba2324bb6cb1397c3d3be3",
      "filename": "core/src/mindustry/graphics/MultiPacker.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/f1cf1efe321d80c5d0b4c787b77b810f80a9c5e5/core%2Fsrc%2Fmindustry%2Fgraphics%2FMultiPacker.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/f1cf1efe321d80c5d0b4c787b77b810f80a9c5e5/core%2Fsrc%2Fmindustry%2Fgraphics%2FMultiPacker.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fgraphics%2FMultiPacker.java?ref=f1cf1efe321d80c5d0b4c787b77b810f80a9c5e5",
      "patch": "@@ -74,8 +74,9 @@ public void dispose(){\n     //main page (sprites.png) - all sprites for units, weapons, placeable blocks, effects, bullets, etc\n     //environment page (sprites2.png) - all sprites for things in the environmental cache layer\n     //editor page (sprites3.png) - all sprites needed for rendering in the editor, including block icons and a few minor sprites\n-    //zone page (sprites4.png) - zone previews\n-    //ui page (sprites5.png) - content icons, white icons and UI elements\n+    //zone page (sprites4.png) - zone preview\n+    //rubble page - scorch textures for unit deaths & wrecks\n+    //ui page (sprites5.png) - content icons, white icons, fonts and UI elements\n     public enum PageType{\n         main(4096),\n         environment,",
      "parent_sha": "c345ad37b9e325f5958b7283523259761ee2de45"
    }
  },
  {
    "oid": "be2a745d78bf0058ab91ba3a62c2e243e67a282d",
    "message": "Increased ore generation amount",
    "date": "2018-07-11T23:58:49Z",
    "url": "https://github.com/Anuken/Mindustry/commit/be2a745d78bf0058ab91ba3a62c2e243e67a282d",
    "details": {
      "sha": "453764efe214566e522a3021390b88f23afa2185",
      "filename": "core/src/io/anuke/mindustry/world/mapgen/WorldGenerator.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/be2a745d78bf0058ab91ba3a62c2e243e67a282d/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fworld%2Fmapgen%2FWorldGenerator.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/be2a745d78bf0058ab91ba3a62c2e243e67a282d/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fworld%2Fmapgen%2FWorldGenerator.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fworld%2Fmapgen%2FWorldGenerator.java?ref=be2a745d78bf0058ab91ba3a62c2e243e67a282d",
      "patch": "@@ -132,8 +132,8 @@ public static void prepareTiles(Tile[][] tiles, int seed, boolean genOres){\n \t\t\t\t\tfor(int i = ores.size-1; i >= 0; i --){\n \t\t\t\t\t\tOreEntry entry = ores.get(i);\n \t\t\t\t\t\tif(entry.noise.octaveNoise2D(1, 0.7, 1f / (4 + i*2), x, y)/4f +\n-\t\t\t\t\t\t\t\tMath.abs(0.5f-entry.noise.octaveNoise2D(2, 0.7, 1f / (50 + i*2), x, y)) > 0.5f &&\n-\t\t\t\t\t\t\t\tMath.abs(0.5f-entry.noise.octaveNoise2D(1, 1, 1f / (55 + i*4), x, y)) > 0.25f){\n+\t\t\t\t\t\t\t\tMath.abs(0.5f-entry.noise.octaveNoise2D(2, 0.7, 1f / (50 + i*2), x, y)) > 0.48f &&\n+\t\t\t\t\t\t\t\tMath.abs(0.5f-entry.noise.octaveNoise2D(1, 1, 1f / (55 + i*4), x, y)) > 0.22f){\n \t\t\t\t\t\t\ttile.setFloor((Floor) OreBlocks.get(tile.floor(), entry.item));\n \t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\t}",
      "parent_sha": "d89feb2c757237da54339e979e2fcddf2281ea83"
    }
  },
  {
    "oid": "5bed0f3bcca50cab233ae57ac3a056214738f29f",
    "message": "Update LoadDialog.java",
    "date": "2019-09-09T04:03:55Z",
    "url": "https://github.com/Anuken/Mindustry/commit/5bed0f3bcca50cab233ae57ac3a056214738f29f",
    "details": {
      "sha": "4ee58e10af976a396d0ebbf49a067334e400a679",
      "filename": "core/src/io/anuke/mindustry/ui/dialogs/LoadDialog.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/5bed0f3bcca50cab233ae57ac3a056214738f29f/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fui%2Fdialogs%2FLoadDialog.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/5bed0f3bcca50cab233ae57ac3a056214738f29f/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fui%2Fdialogs%2FLoadDialog.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fui%2Fdialogs%2FLoadDialog.java?ref=5bed0f3bcca50cab233ae57ac3a056214738f29f",
      "patch": "@@ -178,7 +178,7 @@ public void addSetup(){\n                         setup();\n                     }catch(IOException e){\n                         e.printStackTrace();\n-                        ui.showException(\"save.import.fail\", e);\n+                        ui.showException(\"$save.import.fail\", e);\n                     }\n                 }else{\n                     ui.showErrorMessage(\"$save.import.invalid\");",
      "parent_sha": "87f6ff7be68526cf9c307e22aeb6808c06604dce"
    }
  },
  {
    "oid": "af47e7662fc3b065d92a7b31b2fc5dc1d67fc138",
    "message": "Reduced ridiculous wave spacing in campaign",
    "date": "2020-09-04T01:23:36Z",
    "url": "https://github.com/Anuken/Mindustry/commit/af47e7662fc3b065d92a7b31b2fc5dc1d67fc138",
    "details": {
      "sha": "f136d81e8f522368f0a26998973f01ee1dd17a3c",
      "filename": "core/src/mindustry/maps/planet/SerpuloPlanetGenerator.java",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/af47e7662fc3b065d92a7b31b2fc5dc1d67fc138/core%2Fsrc%2Fmindustry%2Fmaps%2Fplanet%2FSerpuloPlanetGenerator.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/af47e7662fc3b065d92a7b31b2fc5dc1d67fc138/core%2Fsrc%2Fmindustry%2Fmaps%2Fplanet%2FSerpuloPlanetGenerator.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fmaps%2Fplanet%2FSerpuloPlanetGenerator.java?ref=af47e7662fc3b065d92a7b31b2fc5dc1d67fc138",
      "patch": "@@ -293,11 +293,14 @@ void connect(Room to){\n \n         state.rules.waves = true;\n \n+        //TODO better waves\n+        state.rules.spawns = defaultWaves.get();\n+\n         //scale up the spawning base on difficulty (this is just for testing)\n         for(SpawnGroup group : state.rules.spawns){\n             group.unitAmount *= difficulty;\n             if(group.unitScaling != SpawnGroup.never){\n-                group.unitScaling *= difficulty;\n+                group.unitScaling /= difficulty;\n             }\n         }\n     }",
      "parent_sha": "ba1363895e014bbd181d09b36ed51dc1cdf044f2"
    }
  },
  {
    "oid": "c6f6b8e46e952c757ebf7e04dc15a167729746bb",
    "message": "Fixed legged units using wrong pathfinder",
    "date": "2021-10-18T13:58:01Z",
    "url": "https://github.com/Anuken/Mindustry/commit/c6f6b8e46e952c757ebf7e04dc15a167729746bb",
    "details": {
      "sha": "f147217c57d12bd9dfbb510a028f252318f8ea66",
      "filename": "core/src/mindustry/entities/comp/LegsComp.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/c6f6b8e46e952c757ebf7e04dc15a167729746bb/core%2Fsrc%2Fmindustry%2Fentities%2Fcomp%2FLegsComp.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/c6f6b8e46e952c757ebf7e04dc15a167729746bb/core%2Fsrc%2Fmindustry%2Fentities%2Fcomp%2FLegsComp.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fentities%2Fcomp%2FLegsComp.java?ref=c6f6b8e46e952c757ebf7e04dc15a167729746bb",
      "patch": "@@ -36,7 +36,7 @@ public SolidPred solidity(){\n     @Override\n     @Replace\n     public int pathType(){\n-        return type.allowLegStep ? Pathfinder.costGround : Pathfinder.costLegs;\n+        return type.allowLegStep ? Pathfinder.costLegs : Pathfinder.costGround;\n     }\n \n     @Override",
      "parent_sha": "3a9c0377acf105692029ee8087ce3a99e7994339"
    }
  },
  {
    "oid": "5b27f4786d048bead5aed3a4464666d5bce080f3",
    "message": "ItemBuffer struct",
    "date": "2021-08-09T13:37:45Z",
    "url": "https://github.com/Anuken/Mindustry/commit/5b27f4786d048bead5aed3a4464666d5bce080f3",
    "details": {
      "sha": "d91da022ce4ca749164958cf8fc4438ddf777b23",
      "filename": "core/src/mindustry/world/ItemBuffer.java",
      "status": "modified",
      "additions": 12,
      "deletions": 3,
      "changes": 15,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/5b27f4786d048bead5aed3a4464666d5bce080f3/core%2Fsrc%2Fmindustry%2Fworld%2FItemBuffer.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/5b27f4786d048bead5aed3a4464666d5bce080f3/core%2Fsrc%2Fmindustry%2Fworld%2FItemBuffer.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fworld%2FItemBuffer.java?ref=5b27f4786d048bead5aed3a4464666d5bce080f3",
      "patch": "@@ -2,6 +2,8 @@\n \n import arc.util.*;\n import arc.util.io.*;\n+import mindustry.annotations.Annotations.*;\n+import mindustry.gen.*;\n import mindustry.type.*;\n \n import static mindustry.Vars.*;\n@@ -20,7 +22,7 @@ public boolean accepts(){\n \n     public void accept(Item item, short data){\n         //if(!accepts()) return;\n-        buffer[index++] = Pack.longInt(Float.floatToIntBits(Time.time), Pack.shortInt(item.id, data));\n+        buffer[index++] = TimeItem.get(data, item.id, Time.time);\n     }\n \n     public void accept(Item item){\n@@ -30,10 +32,10 @@ public void accept(Item item){\n     public Item poll(float speed){\n         if(index > 0){\n             long l = buffer[0];\n-            float time = Float.intBitsToFloat(Pack.leftInt(l));\n+            float time = TimeItem.time(l);\n \n             if(Time.time >= time + speed || Time.time < time){\n-                return content.item(Pack.leftShort(Pack.rightInt(l)));\n+                return content.item(TimeItem.item(l));\n             }\n         }\n         return null;\n@@ -63,4 +65,11 @@ public void read(Reads read){\n         }\n         index = Math.min(index, length - 1);\n     }\n+\n+    @Struct\n+    class TimeItemStruct{\n+        short data;\n+        short item;\n+        float time;\n+    }\n }",
      "parent_sha": "01f759a99278c08f0876d03701fe28d367ee7cff"
    }
  },
  {
    "oid": "fa92c7ed3e39a10967c85d2436963923993f8605",
    "message": "Fixed crash",
    "date": "2022-04-27T18:18:53Z",
    "url": "https://github.com/Anuken/Mindustry/commit/fa92c7ed3e39a10967c85d2436963923993f8605",
    "details": {
      "sha": "6c97239273b5892176c63d1e28c055459c6532aa",
      "filename": "core/src/mindustry/entities/comp/BuildingComp.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/fa92c7ed3e39a10967c85d2436963923993f8605/core%2Fsrc%2Fmindustry%2Fentities%2Fcomp%2FBuildingComp.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/fa92c7ed3e39a10967c85d2436963923993f8605/core%2Fsrc%2Fmindustry%2Fentities%2Fcomp%2FBuildingComp.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fentities%2Fcomp%2FBuildingComp.java?ref=fa92c7ed3e39a10967c85d2436963923993f8605",
      "patch": "@@ -272,11 +272,12 @@ public void addPlan(boolean checkPrevious, boolean ignoreConditions){\n         if(!ignoreConditions && (!block.rebuildable || (team == state.rules.defaultTeam && state.isCampaign() && !block.isVisible()))) return;\n \n         Object overrideConfig = null;\n+        Block toAdd = this.block;\n \n         if(self() instanceof ConstructBuild entity){\n             //update block to reflect the fact that something was being constructed\n             if(entity.current != null && entity.current.synthetic() && entity.wasConstructing){\n-                block = entity.current;\n+                toAdd = entity.current;\n                 overrideConfig = entity.lastConfig;\n             }else{\n                 //otherwise this was a deconstruction that was interrupted, don't want to rebuild that\n@@ -298,7 +299,7 @@ public void addPlan(boolean checkPrevious, boolean ignoreConditions){\n             }\n         }\n \n-        data.blocks.addFirst(new BlockPlan(tile.x, tile.y, (short)rotation, block.id, overrideConfig == null ? config() : overrideConfig));\n+        data.blocks.addFirst(new BlockPlan(tile.x, tile.y, (short)rotation, toAdd.id, overrideConfig == null ? config() : overrideConfig));\n     }\n \n     public @Nullable Tile findClosestEdge(Position to, Boolf<Tile> solid){",
      "parent_sha": "8ab584c33b8f5d4af0efa7f2dde390995f5b18dd"
    }
  },
  {
    "oid": "1f9838353563ea148166eec24c125a171b6b61f3",
    "message": "EEEEEEEEEEEEEENERGYYYYYYYYYY",
    "date": "2021-11-09T03:21:04Z",
    "url": "https://github.com/Anuken/Mindustry/commit/1f9838353563ea148166eec24c125a171b6b61f3",
    "details": {
      "sha": "0dd5b7859818580bac3f923d66d2746f21ffdcfb",
      "filename": "core/src/mindustry/content/Blocks.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/1f9838353563ea148166eec24c125a171b6b61f3/core%2Fsrc%2Fmindustry%2Fcontent%2FBlocks.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/1f9838353563ea148166eec24c125a171b6b61f3/core%2Fsrc%2Fmindustry%2Fcontent%2FBlocks.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fcontent%2FBlocks.java?ref=1f9838353563ea148166eec24c125a171b6b61f3",
      "patch": "@@ -122,7 +122,7 @@ public class Blocks implements ContentList{\n     nuclearWarhead, warheadAssembler, ballisticSilo //TODO\n     ;\n \n-    /** @deprecated use the blocks with proper names, */\n+    /** @deprecated use the blocks with proper names */\n     @Deprecated\n     public static Block blockForge, blockLoader, blockUnloader;\n ",
      "parent_sha": "5f3b3ea559183aefdee4d12e2c75c3a2cf9212d4"
    }
  },
  {
    "oid": "fd0d4fb09720b4fdf32eddd9ac872b6702417c62",
    "message": "why is this hardcoded anyway (#7617)",
    "date": "2022-09-24T11:49:54Z",
    "url": "https://github.com/Anuken/Mindustry/commit/fd0d4fb09720b4fdf32eddd9ac872b6702417c62",
    "details": {
      "sha": "7c42f9c228a81b10a14580c25293a037df38eb64",
      "filename": "core/src/mindustry/world/draw/DrawHeatRegion.java",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/fd0d4fb09720b4fdf32eddd9ac872b6702417c62/core%2Fsrc%2Fmindustry%2Fworld%2Fdraw%2FDrawHeatRegion.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/fd0d4fb09720b4fdf32eddd9ac872b6702417c62/core%2Fsrc%2Fmindustry%2Fworld%2Fdraw%2FDrawHeatRegion.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fworld%2Fdraw%2FDrawHeatRegion.java?ref=fd0d4fb09720b4fdf32eddd9ac872b6702417c62",
      "patch": "@@ -12,10 +12,15 @@\n public class DrawHeatRegion extends DrawBlock{\n     public Color color = new Color(1f, 0.22f, 0.22f, 0.8f);\n     public float pulse = 0.3f, pulseScl = 10f;\n+    public float layer = Layer.blockAdditive;\n \n     public TextureRegion heat;\n     public String suffix = \"-glow\";\n \n+    public DrawHeatRegion(float layer){\n+        this.layer = layer;\n+    }\n+\n     public DrawHeatRegion(String suffix){\n         this.suffix = suffix;\n     }\n@@ -27,13 +32,16 @@ public DrawHeatRegion(){\n     public void draw(Building build){\n         Draw.z(Layer.blockAdditive);\n         if(build instanceof HeatCrafterBuild hc && hc.heat > 0){\n+\n+            float z = Draw.z();\n+            if(layer > 0) Draw.z(layer);\n             Draw.blend(Blending.additive);\n             Draw.color(color, Mathf.clamp(hc.heat / hc.heatRequirement()) * (color.a * (1f - pulse + Mathf.absin(pulseScl, pulse))));\n             Draw.rect(heat, build.x, build.y);\n             Draw.blend();\n             Draw.color();\n+            Draw.z(z);\n         }\n-        Draw.z(Layer.block);\n     }\n \n     @Override",
      "parent_sha": "c818611bb444fd041519f343141fa3594aa31c7f"
    }
  },
  {
    "oid": "f9fe396d1fdc63424135968d7c066c4b7a3f8501",
    "message": "Fixed #4044",
    "date": "2020-12-19T18:02:20Z",
    "url": "https://github.com/Anuken/Mindustry/commit/f9fe396d1fdc63424135968d7c066c4b7a3f8501",
    "details": {
      "sha": "9cc5f8487a104b27db5f8c5c9220ca9b877b875a",
      "filename": "core/src/mindustry/entities/comp/WeaponsComp.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/f9fe396d1fdc63424135968d7c066c4b7a3f8501/core%2Fsrc%2Fmindustry%2Fentities%2Fcomp%2FWeaponsComp.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/f9fe396d1fdc63424135968d7c066c4b7a3f8501/core%2Fsrc%2Fmindustry%2Fentities%2Fcomp%2FWeaponsComp.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fentities%2Fcomp%2FWeaponsComp.java?ref=f9fe396d1fdc63424135968d7c066c4b7a3f8501",
      "patch": "@@ -139,7 +139,7 @@ public void update(){\n \n             //flip weapon shoot side for alternating weapons at half reload\n             if(weapon.otherSide != -1 && weapon.alternate && mount.side == weapon.flipSprite &&\n-                mount.reload + Time.delta > weapon.reload/2f && mount.reload <= weapon.reload/2f){\n+                mount.reload + Time.delta * reloadMultiplier > weapon.reload/2f && mount.reload <= weapon.reload/2f){\n                 mounts[weapon.otherSide].side = !mounts[weapon.otherSide].side;\n                 mount.side = !mount.side;\n             }",
      "parent_sha": "a4f4b9367f85cfe003ff6d861be9d9570c54bf1e"
    }
  },
  {
    "oid": "a77f64f2d0e9fdc35e0513448f7300d5c251edb0",
    "message": "Cleanup 2",
    "date": "2025-02-09T02:28:02Z",
    "url": "https://github.com/Anuken/Mindustry/commit/a77f64f2d0e9fdc35e0513448f7300d5c251edb0",
    "details": {
      "sha": "65202fd0cd9f002f80aded3f2c6bc58c05690b8a",
      "filename": "core/src/mindustry/world/blocks/campaign/LandingPad.java",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/a77f64f2d0e9fdc35e0513448f7300d5c251edb0/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fcampaign%2FLandingPad.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/a77f64f2d0e9fdc35e0513448f7300d5c251edb0/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fcampaign%2FLandingPad.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fcampaign%2FLandingPad.java?ref=a77f64f2d0e9fdc35e0513448f7300d5c251edb0",
      "patch": "@@ -130,12 +130,6 @@ public class LandingPadBuild extends Building{\n         public @Nullable Item arriving;\n         public float liquidRemoved;\n \n-        @Override\n-        public void drawSelect(){\n-            super.drawSelect();\n-            drawItemSelection(config);\n-        }\n-\n         public void handleLanding(){\n             if(config == null) return;\n \n@@ -348,6 +342,8 @@ public boolean canDump(Building to, Item item){\n         @Override\n         public void drawSelect(){\n             if(config != null){\n+                drawItemSelection(config);\n+\n                 float dx = x - size * tilesize/2f, dy = y + size * tilesize/2f, s = iconSmall / 4f;\n                 Draw.mixcol(Color.darkGray, 1f);\n                 Draw.rect(config.fullIcon, dx, dy - 1, s, s);",
      "parent_sha": "5bb0951422a99f7c75df69860128370f468910b0"
    }
  },
  {
    "oid": "3e2fcfa30fc721713e3c6566ee752a00db427741",
    "message": "Fixed #2529",
    "date": "2020-09-10T13:20:54Z",
    "url": "https://github.com/Anuken/Mindustry/commit/3e2fcfa30fc721713e3c6566ee752a00db427741",
    "details": {
      "sha": "6fb8b32f4f4c5a063f82a431ff2ae0401ea36ae2",
      "filename": "core/src/mindustry/mod/Mods.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/3e2fcfa30fc721713e3c6566ee752a00db427741/core%2Fsrc%2Fmindustry%2Fmod%2FMods.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/3e2fcfa30fc721713e3c6566ee752a00db427741/core%2Fsrc%2Fmindustry%2Fmod%2FMods.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fmod%2FMods.java?ref=3e2fcfa30fc721713e3c6566ee752a00db427741",
      "patch": "@@ -709,7 +709,7 @@ public boolean hasContentErrors(){\n         public boolean isSupported(){\n             if(isOutdated()) return false;\n \n-            int major = getMinMinor(), minor = getMinMinor();\n+            int major = getMinMajor(), minor = getMinMinor();\n \n             if(Version.build <= 0) return true;\n \n@@ -719,7 +719,7 @@ public boolean isSupported(){\n         /** @return whether this mod is outdated, e.g. not compatible with v6. */\n         public boolean isOutdated(){\n             //must be at least 105 to indicate v6 compat\n-            return getMinMinor() < 105;\n+            return getMinMajor() < 105;\n         }\n \n         public int getMinMajor(){\n@@ -749,7 +749,7 @@ public int getMinMinor(){\n                 }\n             }\n \n-            return Strings.parseInt(ver, 0);\n+            return 0;\n         }\n \n         @Override",
      "parent_sha": "3b5d6860d65788b5ef6d442a280664c52530dd89"
    }
  },
  {
    "oid": "7662174dc41c52fbfdb019633bf278fc9a56f5d4",
    "message": "oki doki",
    "date": "2020-10-11T19:58:50Z",
    "url": "https://github.com/Anuken/Mindustry/commit/7662174dc41c52fbfdb019633bf278fc9a56f5d4",
    "details": {
      "sha": "703833594ab7648b9a6748ef52ebdd8008c52552",
      "filename": "core/src/mindustry/world/blocks/defense/turrets/Turret.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/7662174dc41c52fbfdb019633bf278fc9a56f5d4/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fdefense%2Fturrets%2FTurret.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/7662174dc41c52fbfdb019633bf278fc9a56f5d4/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fdefense%2Fturrets%2FTurret.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fdefense%2Fturrets%2FTurret.java?ref=7662174dc41c52fbfdb019633bf278fc9a56f5d4",
      "patch": "@@ -432,7 +432,7 @@ protected void effects(){\n \n             fshootEffect.at(x + tr.x, y + tr.y, rotation);\n             fsmokeEffect.at(x + tr.x, y + tr.y, rotation);\n-            shootSound.at(x + tr.x, y + tr.y, 1);\n+            shootSound.at(x + tr.x, y + tr.y, Mathf.random(0.9f, 1.1f));\n \n             if(shootShake > 0){\n                 Effect.shake(shootShake, shootShake, this);",
      "parent_sha": "5600f96a37c6e87a55132281ebae20f83f3c9cb8"
    }
  },
  {
    "oid": "49f68be2cb8114c1f939b5d55fd0fa01fce28a03",
    "message": "Closes #6790",
    "date": "2025-02-08T02:19:25Z",
    "url": "https://github.com/Anuken/Mindustry/commit/49f68be2cb8114c1f939b5d55fd0fa01fce28a03",
    "details": {
      "sha": "572f4ceee16c33b05b6eccf05dc5b5a543018b31",
      "filename": "core/src/mindustry/mod/Mods.java",
      "status": "modified",
      "additions": 7,
      "deletions": 16,
      "changes": 23,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/49f68be2cb8114c1f939b5d55fd0fa01fce28a03/core%2Fsrc%2Fmindustry%2Fmod%2FMods.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/49f68be2cb8114c1f939b5d55fd0fa01fce28a03/core%2Fsrc%2Fmindustry%2Fmod%2FMods.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fmod%2FMods.java?ref=49f68be2cb8114c1f939b5d55fd0fa01fce28a03",
      "patch": "@@ -476,13 +476,7 @@ public void load(){\n             ModMeta meta = null;\n \n             try{\n-                Fi zip = file.isDirectory() ? file : new ZipFi(file);\n-\n-                if(zip.list().length == 1 && zip.list()[0].isDirectory()){\n-                    zip = zip.list()[0];\n-                }\n-\n-                meta = findMeta(zip);\n+                meta = findMeta(resolveRoot(file.isDirectory() ? file : new ZipFi(file)));\n             }catch(Throwable ignored){\n             }\n \n@@ -507,7 +501,7 @@ public void load(){\n                 if(steam) mod.addSteamID(file.name());\n             }catch(Throwable e){\n                 if(e instanceof ClassNotFoundException && e.getMessage().contains(\"mindustry.plugin.Plugin\")){\n-                    Log.info(\"Plugin '@' is outdated and needs to be ported to 6.0! Update its main class to inherit from 'mindustry.mod.Plugin'. See https://mindustrygame.github.io/wiki/modding/6-migrationv6/\", file.name());\n+                    Log.warn(\"Plugin '@' is outdated and needs to be ported to v7! Update its main class to inherit from 'mindustry.mod.Plugin'.\", file.name());\n                 }else if(steam){\n                     Log.err(\"Failed to load mod workshop file @. Skipping.\", file);\n                     Log.err(e);\n@@ -935,10 +929,10 @@ private boolean resolve(String element, ModResolutionContext context){\n         return true;\n     }\n \n-    /** Loads a mod file+meta, but does not add it to the list.\n-     * Note that directories can be loaded as mods. */\n-    private LoadedMod loadMod(Fi sourceFile) throws Exception{\n-        return loadMod(sourceFile, false, true);\n+    private Fi resolveRoot(Fi fi){\n+        if(OS.isMac && (!(fi instanceof ZipFi))) fi.child(\".DS_Store\").delete();\n+        Fi[] files = fi.list();\n+        return files.length == 1 && files[0].isDirectory() ? files[0] : fi;\n     }\n \n     /** Loads a mod file+meta, but does not add it to the list.\n@@ -949,10 +943,7 @@ private LoadedMod loadMod(Fi sourceFile, boolean overwrite, boolean initialize)\n         ZipFi rootZip = null;\n \n         try{\n-            Fi zip = sourceFile.isDirectory() ? sourceFile : (rootZip = new ZipFi(sourceFile));\n-            if(zip.list().length == 1 && zip.list()[0].isDirectory()){\n-                zip = zip.list()[0];\n-            }\n+            Fi zip = resolveRoot(sourceFile.isDirectory() ? sourceFile : (rootZip = new ZipFi(sourceFile)));\n \n             ModMeta meta = findMeta(zip);\n ",
      "parent_sha": "88cfb106219c39cf705073669104486ffda873cf"
    }
  },
  {
    "oid": "a69595ee4ee6d57563c86554bbe27c060f8f13ff",
    "message": "Fixed naval pathfinding somehow",
    "date": "2022-04-17T23:33:11Z",
    "url": "https://github.com/Anuken/Mindustry/commit/a69595ee4ee6d57563c86554bbe27c060f8f13ff",
    "details": {
      "sha": "4e6c8485baf942638d1cee96280d066f3cd0590f",
      "filename": "core/src/mindustry/ai/ControlPathfinder.java",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/a69595ee4ee6d57563c86554bbe27c060f8f13ff/core%2Fsrc%2Fmindustry%2Fai%2FControlPathfinder.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/a69595ee4ee6d57563c86554bbe27c060f8f13ff/core%2Fsrc%2Fmindustry%2Fai%2FControlPathfinder.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fai%2FControlPathfinder.java?ref=a69595ee4ee6d57563c86554bbe27c060f8f13ff",
      "patch": "@@ -45,8 +45,7 @@ public class ControlPathfinder{\n \n     costNaval = (team, tile) ->\n     (PathTile.solid(tile) || !PathTile.liquid(tile) ? impassable : 1) +\n-    (PathTile.nearGround(tile) || PathTile.nearSolid(tile) ? 2 : 0) +\n-    (PathTile.deep(tile) ? 0 : 1);\n+    (PathTile.nearGround(tile) || PathTile.nearSolid(tile) ? 6 : 0);\n \n     public static boolean showDebug = false;\n ",
      "parent_sha": "9af256fffacc9941ce438b33007779d40ac6a67c"
    }
  },
  {
    "oid": "cab71958d0948c900114a8a2d096768b4436bd83",
    "message": "Implementation of #4921",
    "date": "2021-08-06T23:40:27Z",
    "url": "https://github.com/Anuken/Mindustry/commit/cab71958d0948c900114a8a2d096768b4436bd83",
    "details": {
      "sha": "ad2b3e075a59bde02042eb73bf5d88334c3f8e44",
      "filename": "core/src/mindustry/world/blocks/units/CommandCenter.java",
      "status": "modified",
      "additions": 18,
      "deletions": 1,
      "changes": 19,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/cab71958d0948c900114a8a2d096768b4436bd83/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Funits%2FCommandCenter.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/cab71958d0948c900114a8a2d096768b4436bd83/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Funits%2FCommandCenter.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Funits%2FCommandCenter.java?ref=cab71958d0948c900114a8a2d096768b4436bd83",
      "patch": "@@ -26,12 +26,13 @@ public class CommandCenter extends Block{\n     public Color topColor = null, bottomColor = Color.valueOf(\"5e5e5e\");\n     public Effect effect = Fx.commandSend;\n     public float effectSize = 150f;\n+    public float forceRadius = 31f, forceStrength = 0.2f;\n \n     public CommandCenter(String name){\n         super(name);\n \n         flags = EnumSet.of(BlockFlag.rally);\n-        destructible = true;\n+        update = true;\n         solid = true;\n         configurable = true;\n         drawDisabled = false;\n@@ -72,6 +73,22 @@ public Object config(){\n             return team.data().command;\n         }\n \n+        @Override\n+        public void updateTile(){\n+            super.updateTile();\n+\n+            //push away allied units\n+            team.data().tree().intersect(x - forceRadius/2f, y - forceRadius/2f, forceRadius, forceRadius, u -> {\n+                if(!u.isPlayer()){\n+                    float dst = dst(u);\n+                    float rs = forceRadius + u.hitSize/2f;\n+                    if(dst < rs){\n+                        u.vel.add(Tmp.v1.set(u).sub(x, y).setLength(1f - dst / rs).scl(forceStrength));\n+                    }\n+                }\n+            });\n+        }\n+\n         @Override\n         public void draw(){\n             super.draw();",
      "parent_sha": "9c995be22e78b26e404830ac62ea4529b7a0003e"
    }
  },
  {
    "oid": "2e586c440325ed131590f8bc7a1964b94e545999",
    "message": "Update ConstructBlock.java",
    "date": "2020-12-02T17:54:46Z",
    "url": "https://github.com/Anuken/Mindustry/commit/2e586c440325ed131590f8bc7a1964b94e545999",
    "details": {
      "sha": "17210fefe3f7244f7023aef9b8083e5da8c45677",
      "filename": "core/src/mindustry/world/blocks/ConstructBlock.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/2e586c440325ed131590f8bc7a1964b94e545999/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2FConstructBlock.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/2e586c440325ed131590f8bc7a1964b94e545999/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2FConstructBlock.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2FConstructBlock.java?ref=2e586c440325ed131590f8bc7a1964b94e545999",
      "patch": "@@ -289,7 +289,7 @@ public void deconstruct(Unit builder, @Nullable Building core, float amount){\n \n             progress = Mathf.clamp(progress - amount);\n \n-            if(progress <= previous.deconstructThreshold || state.rules.infiniteResources){\n+            if(progress <= (previous == null ? 0 : previous.deconstructThreshold) || state.rules.infiniteResources){\n                 if(lastBuilder == null) lastBuilder = builder;\n                 Call.deconstructFinish(tile, this.cblock == null ? previous : this.cblock, lastBuilder);\n             }",
      "parent_sha": "129f21e3a946f8d98159c0bb5f56aff4fb7c7a50"
    }
  },
  {
    "oid": "8282a1e1bb0783ee222089bae7279d4030298991",
    "message": "Fixed #9269",
    "date": "2023-11-12T14:49:07Z",
    "url": "https://github.com/Anuken/Mindustry/commit/8282a1e1bb0783ee222089bae7279d4030298991",
    "details": {
      "sha": "7b31d1071193b7143200770c1a0659b857fea236",
      "filename": "core/src/mindustry/service/GameService.java",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/8282a1e1bb0783ee222089bae7279d4030298991/core%2Fsrc%2Fmindustry%2Fservice%2FGameService.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/8282a1e1bb0783ee222089bae7279d4030298991/core%2Fsrc%2Fmindustry%2Fservice%2FGameService.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fservice%2FGameService.java?ref=8282a1e1bb0783ee222089bae7279d4030298991",
      "patch": "@@ -10,7 +10,6 @@\n import mindustry.gen.*;\n import mindustry.type.*;\n import mindustry.world.*;\n-import mindustry.world.blocks.defense.*;\n import mindustry.world.blocks.defense.Wall.*;\n import mindustry.world.blocks.defense.turrets.Turret.*;\n import mindustry.world.blocks.distribution.*;\n@@ -225,8 +224,8 @@ private void registerEvents(){\n                     }\n                 }\n \n-                if(e.tile.block() instanceof MendProjector || e.tile.block() instanceof RegenProjector) buildMendProjector.complete();\n-                if(e.tile.block() instanceof OverdriveProjector) buildOverdriveProjector.complete();\n+                if(e.tile.block() == Blocks.mendProjector) buildMendProjector.complete();\n+                if(e.tile.block() == Blocks.overdriveProjector) buildOverdriveProjector.complete();\n \n                 if(e.tile.block() == Blocks.waterExtractor){\n                     if(e.tile.getLinkedTiles(tmpTiles).contains(t -> t.floor().liquidDrop == Liquids.water)){",
      "parent_sha": "2ab3ad0330cdf3ddec9d5527c584cd164c192f79"
    }
  },
  {
    "oid": "5a258d2830d8b27bf1dc5ce7ea32ff04a8569146",
    "message": "Fixed #4461",
    "date": "2021-01-28T15:23:02Z",
    "url": "https://github.com/Anuken/Mindustry/commit/5a258d2830d8b27bf1dc5ce7ea32ff04a8569146",
    "details": {
      "sha": "abfdfbdaa39744cbbd54b0e5a9d95e22e03c7ebc",
      "filename": "core/src/mindustry/world/blocks/power/PowerGraph.java",
      "status": "modified",
      "additions": 1,
      "deletions": 10,
      "changes": 11,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/5a258d2830d8b27bf1dc5ce7ea32ff04a8569146/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fpower%2FPowerGraph.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/5a258d2830d8b27bf1dc5ce7ea32ff04a8569146/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fpower%2FPowerGraph.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fpower%2FPowerGraph.java?ref=5a258d2830d8b27bf1dc5ce7ea32ff04a8569146",
      "patch": "@@ -291,15 +291,8 @@ public void reflow(Building tile){\n         }\n     }\n \n-    private void removeSingle(Building tile){\n-        all.remove(tile, true);\n-        producers.remove(tile, true);\n-        consumers.remove(tile, true);\n-        batteries.remove(tile, true);\n-    }\n-\n     public void remove(Building tile){\n-        removeSingle(tile);\n+\n         //begin by clearing the closed set\n         closedSet.clear();\n \n@@ -317,8 +310,6 @@ public void remove(Building tile){\n             while(queue.size > 0){\n                 //get child from queue\n                 Building child = queue.removeFirst();\n-                //remove it from this graph\n-                removeSingle(child);\n                 //add it to the new branch graph\n                 graph.add(child);\n                 //go through connections",
      "parent_sha": "d0572a2a0dbb3a9186c836d103daa7285e6be126"
    }
  },
  {
    "oid": "5f4a3e341f09cb8094de2ccd4824131b8a6ef56c",
    "message": "#5785",
    "date": "2021-08-23T18:47:11Z",
    "url": "https://github.com/Anuken/Mindustry/commit/5f4a3e341f09cb8094de2ccd4824131b8a6ef56c",
    "details": {
      "sha": "157c30edbe7028da1361e6928ad515e2107274b4",
      "filename": "core/src/mindustry/ui/fragments/PlacementFragment.java",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/5f4a3e341f09cb8094de2ccd4824131b8a6ef56c/core%2Fsrc%2Fmindustry%2Fui%2Ffragments%2FPlacementFragment.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/5f4a3e341f09cb8094de2ccd4824131b8a6ef56c/core%2Fsrc%2Fmindustry%2Fui%2Ffragments%2FPlacementFragment.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fui%2Ffragments%2FPlacementFragment.java?ref=5f4a3e341f09cb8094de2ccd4824131b8a6ef56c",
      "patch": "@@ -192,8 +192,10 @@ boolean gridUpdate(InputHandler input){\n         }\n \n         if(Core.input.keyTap(Binding.block_info)){\n-            Block displayBlock = menuHoverBlock != null ? menuHoverBlock : input.block;\n-            if(displayBlock != null){\n+            var build = world.buildWorld(Core.input.mouseWorld().x, Core.input.mouseWorld().y);\n+            Block hovering = build == null ? null : build instanceof ConstructBuild c ? c.current : build.block;\n+            Block displayBlock = menuHoverBlock != null ? menuHoverBlock : input.block != null ? input.block : hovering;\n+            if(displayBlock != null && displayBlock.unlockedNow()){\n                 ui.content.show(displayBlock);\n                 Events.fire(new BlockInfoEvent());\n             }",
      "parent_sha": "b52d645459e077fc4a978d3dd0883dc50634657d"
    }
  },
  {
    "oid": "fecaf768ab10659b7a441526ed728eedd9e6a221",
    "message": "Allow 3x3 blocks on payload conveyors",
    "date": "2021-07-01T15:24:23Z",
    "url": "https://github.com/Anuken/Mindustry/commit/fecaf768ab10659b7a441526ed728eedd9e6a221",
    "details": {
      "sha": "38f15582331cd79fdc5e637cfbbae308c036b6cf",
      "filename": "core/src/mindustry/world/blocks/distribution/PayloadConveyor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/fecaf768ab10659b7a441526ed728eedd9e6a221/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fdistribution%2FPayloadConveyor.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/fecaf768ab10659b7a441526ed728eedd9e6a221/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fdistribution%2FPayloadConveyor.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fdistribution%2FPayloadConveyor.java?ref=fecaf768ab10659b7a441526ed728eedd9e6a221",
      "patch": "@@ -20,7 +20,7 @@ public class PayloadConveyor extends Block{\n     public @Load(\"@-top\") TextureRegion topRegion;\n     public @Load(\"@-edge\") TextureRegion edgeRegion;\n     public Interp interp = Interp.pow5;\n-    public float payloadLimit = 2.9f;\n+    public float payloadLimit = 3f;\n \n     public PayloadConveyor(String name){\n         super(name);",
      "parent_sha": "ec59cb602cfe980bf4697399218647e1e2e11baa"
    }
  },
  {
    "oid": "28203ca6e917c876cc0cdba92c4c6070038fd455",
    "message": "Fixed regression introduced in #5361",
    "date": "2021-06-09T01:58:56Z",
    "url": "https://github.com/Anuken/Mindustry/commit/28203ca6e917c876cc0cdba92c4c6070038fd455",
    "details": {
      "sha": "f09c5967f761b4436e2d81497f791f2cb9d0b7e9",
      "filename": "core/src/mindustry/entities/bullet/BulletType.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/28203ca6e917c876cc0cdba92c4c6070038fd455/core%2Fsrc%2Fmindustry%2Fentities%2Fbullet%2FBulletType.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/28203ca6e917c876cc0cdba92c4c6070038fd455/core%2Fsrc%2Fmindustry%2Fentities%2Fbullet%2FBulletType.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fentities%2Fbullet%2FBulletType.java?ref=28203ca6e917c876cc0cdba92c4c6070038fd455",
      "patch": "@@ -407,10 +407,10 @@ public void init(){\n             if(status == StatusEffects.none){\n                 status = StatusEffects.shocked;\n             }\n+        }\n \n-            if(lightningType == null){\n-                lightningType = !collidesAir ? Bullets.damageLightningGround : Bullets.damageLightning;\n-            }\n+        if(lightningType == null){\n+            lightningType = !collidesAir ? Bullets.damageLightningGround : Bullets.damageLightning;\n         }\n     }\n ",
      "parent_sha": "95da46bfa24e6b4d60411816548ca4e223200f63"
    }
  },
  {
    "oid": "6cd778783ea01a061add608751b48e277e894dc5",
    "message": "Shift swarmer shoot barrels to match the chutes (#8624)\n\nSimilar to how cyclone shoot barrels match the ends of each barrel.",
    "date": "2023-05-19T14:53:06Z",
    "url": "https://github.com/Anuken/Mindustry/commit/6cd778783ea01a061add608751b48e277e894dc5",
    "details": {
      "sha": "6ad0a5b3ddad61cbd8d2f428da563f1a47d13138",
      "filename": "core/src/mindustry/content/Blocks.java",
      "status": "modified",
      "additions": 7,
      "deletions": 4,
      "changes": 11,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/6cd778783ea01a061add608751b48e277e894dc5/core%2Fsrc%2Fmindustry%2Fcontent%2FBlocks.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/6cd778783ea01a061add608751b48e277e894dc5/core%2Fsrc%2Fmindustry%2Fcontent%2FBlocks.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fcontent%2FBlocks.java?ref=6cd778783ea01a061add608751b48e277e894dc5",
      "patch": "@@ -3413,11 +3413,14 @@ Items.surgeAlloy, new MissileBulletType(3.7f, 18){{\n                     lightningLength = 10;\n                 }}\n             );\n-\n-            shoot = new ShootAlternate(){{\n+            \n+            shoot = new ShootBarrel(){{\n+                barrels = new float[]{\n+                    -4, -1.25f, 0,\n+                    0, 0, 0,\n+                    4, -1.25f, 0\n+                };\n                 shots = 4;\n-                barrels = 3;\n-                spread = 3.5f;\n                 shotDelay = 5f;\n             }};\n ",
      "parent_sha": "5db4c67477cfa47735a5b8b57af1bd90e72397dc"
    }
  },
  {
    "oid": "ca70b9c705fc9fd32fa0d3e7ef5ec30b5fe8947d",
    "message": "fix\n\n(again)",
    "date": "2020-10-03T01:28:36Z",
    "url": "https://github.com/Anuken/Mindustry/commit/ca70b9c705fc9fd32fa0d3e7ef5ec30b5fe8947d",
    "details": {
      "sha": "814fb489ef7b8e4d0e94f06ce0f53444aba49878",
      "filename": "core/src/mindustry/entities/bullet/BulletType.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/ca70b9c705fc9fd32fa0d3e7ef5ec30b5fe8947d/core%2Fsrc%2Fmindustry%2Fentities%2Fbullet%2FBulletType.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/ca70b9c705fc9fd32fa0d3e7ef5ec30b5fe8947d/core%2Fsrc%2Fmindustry%2Fentities%2Fbullet%2FBulletType.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fentities%2Fbullet%2FBulletType.java?ref=ca70b9c705fc9fd32fa0d3e7ef5ec30b5fe8947d",
      "patch": "@@ -191,7 +191,7 @@ public void hit(Bullet b, float x, float y){\n             }\n \n             if(status == StatusEffects.burning) {\n-                indexer.eachBlock(null, x, y, splashDamageRadius, other -> other.team != team, other -> {\n+                indexer.eachBlock(null, x, y, splashDamageRadius, other -> other.team != b.team, other -> {\n                     Damage.createIncend(x, y, damage / 10f, (int)damage / 10);\n                 });\n             }",
      "parent_sha": "5aa0ce97b82aeac34cd01dd41331e8ebb9e278b4"
    }
  },
  {
    "oid": "56afe6a10bd38921e3e987f96e8ee372cdfb2fc2",
    "message": "Hide \"Boost Effect\" when liquidBoostIntensity == 1 (#2108)",
    "date": "2020-05-25T17:03:43Z",
    "url": "https://github.com/Anuken/Mindustry/commit/56afe6a10bd38921e3e987f96e8ee372cdfb2fc2",
    "details": {
      "sha": "ec5b825d7d0c8b92a46441ce3e6757303fb167ed",
      "filename": "core/src/mindustry/world/blocks/production/Drill.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/56afe6a10bd38921e3e987f96e8ee372cdfb2fc2/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fproduction%2FDrill.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/56afe6a10bd38921e3e987f96e8ee372cdfb2fc2/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fproduction%2FDrill.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fproduction%2FDrill.java?ref=56afe6a10bd38921e3e987f96e8ee372cdfb2fc2",
      "patch": "@@ -158,7 +158,7 @@ public void setStats(){\n         });\n \n         stats.add(BlockStat.drillSpeed, 60f / drillTime * size * size, StatUnit.itemsSecond);\n-        if(liquidBoostIntensity > 0){\n+        if(liquidBoostIntensity != 1){\n             stats.add(BlockStat.boostEffect, liquidBoostIntensity * liquidBoostIntensity, StatUnit.timesSpeed);\n         }\n     }",
      "parent_sha": "0e59a22cbecf544205c5f9918e214086800c7f15"
    }
  },
  {
    "oid": "9a88426ff75e38b9d691d2b2201228d79629aec6",
    "message": "raw strings for SurfaceShaders  (#4004)\n\n* SurfaceShaders thing\r\n\r\n* Update core/src/mindustry/graphics/Shaders.java\r\n\r\nspacing fix\r\n\r\nCo-authored-by: Antsiferov Andrew <summet.dev@gmail.com>\r\n\r\n* star import\r\n\r\nCo-authored-by: Antsiferov Andrew <summet.dev@gmail.com>",
    "date": "2020-12-17T00:39:08Z",
    "url": "https://github.com/Anuken/Mindustry/commit/9a88426ff75e38b9d691d2b2201228d79629aec6",
    "details": {
      "sha": "c72aa9e5b11e7047f4c902fb9bb31a5c2f719fb2",
      "filename": "core/src/mindustry/graphics/Shaders.java",
      "status": "modified",
      "additions": 16,
      "deletions": 5,
      "changes": 21,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/9a88426ff75e38b9d691d2b2201228d79629aec6/core%2Fsrc%2Fmindustry%2Fgraphics%2FShaders.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/9a88426ff75e38b9d691d2b2201228d79629aec6/core%2Fsrc%2Fmindustry%2Fgraphics%2FShaders.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fgraphics%2FShaders.java?ref=9a88426ff75e38b9d691d2b2201228d79629aec6",
      "patch": "@@ -1,6 +1,7 @@\n package mindustry.graphics;\n \n import arc.*;\n+import arc.files.*;\n import arc.graphics.*;\n import arc.graphics.Texture.*;\n import arc.graphics.g2d.*;\n@@ -225,11 +226,18 @@ public void apply(){\n         }\n     }\n \n-    public static class SurfaceShader extends LoadShader{\n-\n+    public static class SurfaceShader extends Shader{\n         public SurfaceShader(String frag){\n-            super(frag, \"screenspace\");\n+            super(getShaderFi(\"screenspace.vert\"), getShaderFi(frag + \".frag\"));\n+            loadNoise();\n+        }\n+\n+        public SurfaceShader(String vertRaw, String fragRaw){\n+            super(vertRaw, fragRaw);\n+            loadNoise();\n+        }\n \n+        public void loadNoise(){\n             Core.assets.load(\"sprites/noise.png\", Texture.class).loaded = t -> {\n                 ((Texture)t).setFilter(TextureFilter.linear);\n                 ((Texture)t).setWrap(TextureWrap.repeat);\n@@ -252,9 +260,12 @@ public void apply(){\n     }\n \n     public static class LoadShader extends Shader{\n-\n         public LoadShader(String frag, String vert){\n-            super(Core.files.internal(\"shaders/\" + vert + \".vert\"), Core.files.internal(\"shaders/\" + frag + \".frag\"));\n+            super(getShaderFi(vert + \".vert\"), getShaderFi(frag + \".frag\"));\n         }\n     }\n+\n+    public static Fi getShaderFi(String file){\n+        return Core.files.internal(\"shaders/\" + file);\n+    }\n }",
      "parent_sha": "d0bf3d6fa105060044d99bc4ee5ca88e44449f7b"
    }
  },
  {
    "oid": "eaaa4f9bd848abfb8a8107daefc21fe07b6766fd",
    "message": "Possible door config fix",
    "date": "2025-02-07T02:05:49Z",
    "url": "https://github.com/Anuken/Mindustry/commit/eaaa4f9bd848abfb8a8107daefc21fe07b6766fd",
    "details": {
      "sha": "7a48b6bb098eba29fc6b62de06a11ce272a14906",
      "filename": "core/src/mindustry/world/blocks/defense/Door.java",
      "status": "modified",
      "additions": 9,
      "deletions": 4,
      "changes": 13,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/eaaa4f9bd848abfb8a8107daefc21fe07b6766fd/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fdefense%2FDoor.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/eaaa4f9bd848abfb8a8107daefc21fe07b6766fd/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fdefense%2FDoor.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fdefense%2FDoor.java?ref=eaaa4f9bd848abfb8a8107daefc21fe07b6766fd",
      "patch": "@@ -36,18 +36,23 @@ public Door(String name){\n         consumesTap = true;\n \n         config(Boolean.class, (DoorBuild base, Boolean open) -> {\n-            doorSound.at(base);\n-            base.effect();\n+            if(!world.isGenerating()){\n+                doorSound.at(base);\n+                base.effect();\n+            }\n+\n+            doorQueue.clear();\n+            doorQueue.add(base);\n \n-            for(DoorBuild entity : base.chained){\n+            for(DoorBuild entity : base.chained.isEmpty() ? doorQueue : base.chained){\n                 //skip doors with things in them\n                 if((Units.anyEntities(entity.tile) && !open) || entity.open == open){\n                     continue;\n                 }\n \n                 if(chainEffect) entity.effect();\n                 entity.open = open;\n-                pathfinder.updateTile(entity.tile());\n+                if(!world.isGenerating()) pathfinder.updateTile(entity.tile());\n             }\n         });\n     }",
      "parent_sha": "e630f21aae3028fa384d8be7704082b35cba15f5"
    }
  },
  {
    "oid": "9f510f61c7b362341243a0a71087b72ff0112ec8",
    "message": "Fixed #4584",
    "date": "2021-02-04T14:25:52Z",
    "url": "https://github.com/Anuken/Mindustry/commit/9f510f61c7b362341243a0a71087b72ff0112ec8",
    "details": {
      "sha": "850abb3e28d7b4f0cffcaee6491a425580007ef6",
      "filename": "core/src/mindustry/logic/LExecutor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/9f510f61c7b362341243a0a71087b72ff0112ec8/core%2Fsrc%2Fmindustry%2Flogic%2FLExecutor.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/9f510f61c7b362341243a0a71087b72ff0112ec8/core%2Fsrc%2Fmindustry%2Flogic%2FLExecutor.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Flogic%2FLExecutor.java?ref=9f510f61c7b362341243a0a71087b72ff0112ec8",
      "patch": "@@ -434,7 +434,7 @@ public void run(LExecutor exec){\n                     }\n                     case build -> {\n                         if(unit.canBuild() && exec.obj(p3) instanceof Block block){\n-                            int x = World.toTile(x1), y = World.toTile(y1);\n+                            int x = World.toTile(x1 - block.offset/tilesize), y = World.toTile(y1 - block.offset/tilesize);\n                             int rot = exec.numi(p4);\n \n                             //reset state of last request when necessary",
      "parent_sha": "3ae48b87537688110c9c415cd1c45b8d4c25e6cd"
    }
  },
  {
    "oid": "792fdef95d03ab7caf211ff56199f99fbc90064a",
    "message": "Minor parse fix",
    "date": "2021-01-22T02:25:04Z",
    "url": "https://github.com/Anuken/Mindustry/commit/792fdef95d03ab7caf211ff56199f99fbc90064a",
    "details": {
      "sha": "48e59cf0c1d0234da1553b6731843237b281dd38",
      "filename": "core/src/mindustry/logic/LAssembler.java",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/792fdef95d03ab7caf211ff56199f99fbc90064a/core%2Fsrc%2Fmindustry%2Flogic%2FLAssembler.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/792fdef95d03ab7caf211ff56199f99fbc90064a/core%2Fsrc%2Fmindustry%2Flogic%2FLAssembler.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Flogic%2FLAssembler.java?ref=792fdef95d03ab7caf211ff56199f99fbc90064a",
      "patch": "@@ -71,6 +71,7 @@ public static Seq<LStatement> read(String data, int max){\n \n             try{\n                 String[] arr;\n+                if(line.startsWith(\"#\")) continue;\n \n                 //yes, I am aware that this can be split with regex, but that's slow and even more incomprehensible\n                 if(line.contains(\" \")){\n@@ -133,7 +134,10 @@ public static Seq<LStatement> read(String data, int max){\n                     String first = arr[0];\n                     if(customParsers.containsKey(first)){\n                         statements.add(customParsers.get(first).get(arr));\n-                    } //unparseable statement, skip\n+                    }else{\n+                        //unparseable statement\n+                        statements.add(new InvalidStatement());\n+                    }\n                 }\n             }catch(Exception parseFailed){\n                 parseFailed.printStackTrace();",
      "parent_sha": "457514a2c8099cab7f29b95bbdc6bcdbd1d6fd40"
    }
  },
  {
    "oid": "031b6e0bf8aaff2ce8205090751a16157b0463a0",
    "message": "Fixed #1565",
    "date": "2020-02-12T18:26:29Z",
    "url": "https://github.com/Anuken/Mindustry/commit/031b6e0bf8aaff2ce8205090751a16157b0463a0",
    "details": {
      "sha": "2e621619579923d944a1124aa466036250803b7d",
      "filename": "core/src/mindustry/ui/dialogs/JoinDialog.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/031b6e0bf8aaff2ce8205090751a16157b0463a0/core%2Fsrc%2Fmindustry%2Fui%2Fdialogs%2FJoinDialog.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/031b6e0bf8aaff2ce8205090751a16157b0463a0/core%2Fsrc%2Fmindustry%2Fui%2Fdialogs%2FJoinDialog.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fui%2Fdialogs%2FJoinDialog.java?ref=031b6e0bf8aaff2ce8205090751a16157b0463a0",
      "patch": "@@ -242,6 +242,9 @@ void buildServer(Host host, Table content){\n     }\n \n     void setup(){\n+        local.clear();\n+        remote.clear();\n+        global.clear();\n         float w = targetWidth();\n \n         hosts.clear();\n@@ -255,7 +258,6 @@ void setup(){\n         pane.setScrollingDisabled(true, false);\n \n         setupRemote();\n-        refreshRemote();\n \n         cont.clear();\n         cont.table(t -> {",
      "parent_sha": "258945a45a94589a103e1af62515242f04cb7af6"
    }
  },
  {
    "oid": "0cc1f974503e63c26b8197558f7fc79d049ec350",
    "message": "Fix non-continuous bullets being removed (#7423)",
    "date": "2022-08-23T12:04:35Z",
    "url": "https://github.com/Anuken/Mindustry/commit/0cc1f974503e63c26b8197558f7fc79d049ec350",
    "details": {
      "sha": "e3de8b484aebbb20bf5e75185a3217f77d9b8f55",
      "filename": "core/src/mindustry/entities/comp/WeaponsComp.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/0cc1f974503e63c26b8197558f7fc79d049ec350/core%2Fsrc%2Fmindustry%2Fentities%2Fcomp%2FWeaponsComp.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/0cc1f974503e63c26b8197558f7fc79d049ec350/core%2Fsrc%2Fmindustry%2Fentities%2Fcomp%2FWeaponsComp.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fentities%2Fcomp%2FWeaponsComp.java?ref=0cc1f974503e63c26b8197558f7fc79d049ec350",
      "patch": "@@ -82,7 +82,7 @@ boolean canShoot(){\n     @Override\n     public void remove(){\n         for(WeaponMount mount : mounts){\n-            if(mount.bullet != null && mount.bullet.owner == self()){\n+            if(mount.weapon.continuous && mount.bullet != null && mount.bullet.owner == self()){\n                 mount.bullet.time = mount.bullet.lifetime - 10f;\n                 mount.bullet = null;\n             }",
      "parent_sha": "b3e94c8425315d82bcb6ba19d9644d486fba6f16"
    }
  },
  {
    "oid": "526f1106fb9b06d7f02666f30c3e9c55aa7b1b1b",
    "message": "Initial path refactor",
    "date": "2020-08-21T18:32:35Z",
    "url": "https://github.com/Anuken/Mindustry/commit/526f1106fb9b06d7f02666f30c3e9c55aa7b1b1b",
    "details": {
      "sha": "956377354510f81f58472ae65dc8ac284535dbac",
      "filename": "core/src/mindustry/ai/Pathfinder.java",
      "status": "modified",
      "additions": 7,
      "deletions": 5,
      "changes": 12,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/526f1106fb9b06d7f02666f30c3e9c55aa7b1b1b/core%2Fsrc%2Fmindustry%2Fai%2FPathfinder.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/526f1106fb9b06d7f02666f30c3e9c55aa7b1b1b/core%2Fsrc%2Fmindustry%2Fai%2FPathfinder.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fai%2FPathfinder.java?ref=526f1106fb9b06d7f02666f30c3e9c55aa7b1b1b",
      "patch": "@@ -464,13 +464,15 @@ static class Flowfield{\n     /** Holds a copy of tile data for a specific tile position. */\n     @Struct\n     class PathTileStruct{\n-        //traversal cost\n+        //base traversal cost\n         short cost;\n         //team of block, if applicable (0 by default)\n         byte team;\n-        //whether it's viable to pass this block\n-        boolean passable;\n-        //whether it's viable to pass this block through water\n-        boolean passableWater;\n+        //general solid state\n+        boolean solid;\n+        //whether this block is a liquid that boats can move on\n+        boolean water;\n+        //whether this block is solid for leg units that can move over some solid blocks\n+        boolean legSolid;\n     }\n }",
      "parent_sha": "467d995aed0b9c308f6d9f55e0d2ac84e66a8a4d"
    }
  },
  {
    "oid": "7b3d65feca5384f9942c8f0e01bc3fcb6923c23e",
    "message": "Triggering Arc update",
    "date": "2019-09-26T20:09:20Z",
    "url": "https://github.com/Anuken/Mindustry/commit/7b3d65feca5384f9942c8f0e01bc3fcb6923c23e",
    "details": {
      "sha": "4b67274cb413b2891f823b1be7d5ebd6e3b5bf6d",
      "filename": "core/src/io/anuke/mindustry/entities/type/FlyingUnit.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/7b3d65feca5384f9942c8f0e01bc3fcb6923c23e/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fentities%2Ftype%2FFlyingUnit.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/7b3d65feca5384f9942c8f0e01bc3fcb6923c23e/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fentities%2Ftype%2FFlyingUnit.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fentities%2Ftype%2FFlyingUnit.java?ref=7b3d65feca5384f9942c8f0e01bc3fcb6923c23e",
      "patch": "@@ -16,7 +16,7 @@\n import static io.anuke.mindustry.Vars.*;\n \n public abstract class FlyingUnit extends BaseUnit{\n-    protected float[] weaponAngles = {0, 0};\n+    protected float[] weaponAngles = {0,0};\n \n     protected final UnitState\n ",
      "parent_sha": "9230be87d4ed77ea94af88778724ad2e306cf8c4"
    }
  },
  {
    "oid": "65607ba6bfc5b4a681f10ca68f277e0f15d0977e",
    "message": "better stats",
    "date": "2020-09-30T18:13:14Z",
    "url": "https://github.com/Anuken/Mindustry/commit/65607ba6bfc5b4a681f10ca68f277e0f15d0977e",
    "details": {
      "sha": "9af25488eb90fe6778028e444ad5951219446287",
      "filename": "core/src/mindustry/content/Bullets.java",
      "status": "modified",
      "additions": 17,
      "deletions": 9,
      "changes": 26,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/65607ba6bfc5b4a681f10ca68f277e0f15d0977e/core%2Fsrc%2Fmindustry%2Fcontent%2FBullets.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/65607ba6bfc5b4a681f10ca68f277e0f15d0977e/core%2Fsrc%2Fmindustry%2Fcontent%2FBullets.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fcontent%2FBullets.java?ref=65607ba6bfc5b4a681f10ca68f277e0f15d0977e",
      "patch": "@@ -474,30 +474,38 @@ public void update(Bullet b){\n             drag = 0.03f;\n         }};\n \n-        heavyWaterShot = new LiquidBulletType(Liquids.water){{\n-           knockback = 1.0f;\n-           puddleSize = 10f;\n-           damage = 4f;\n+        heavyWaterShot = new LiquidBulletType(Liquids.water) {{\n+            lifetime = 60f;\n+            speed = 4f;\n+            knockback = 1.0f;\n+            puddleSize = 8f;\n+            damage = 4f;\n         }};\n \n         heavyCryoShot = new LiquidBulletType(Liquids.cryofluid){{\n+            lifetime = 60f;\n+            speed = 4f;\n             knockback = 0.75f;\n-            puddleSize = 10f;\n+            puddleSize = 8f;\n             damage = 4f;\n         }};\n \n         heavySlagShot = new LiquidBulletType(Liquids.slag){{\n+            lifetime = 60f;\n+            speed = 4f;\n             knockback = 0.75f;\n-            puddleSize = 10f;\n+            puddleSize = 8f;\n             damage = 8f;\n-            drag = 0.03f;\n+            drag = 0.015f;\n         }};\n \n         heavyOilShot = new LiquidBulletType(Liquids.oil){{\n+            lifetime = 60f;\n+            speed = 4f;\n             knockback = 0.75f;\n-            puddleSize = 10f;\n+            puddleSize = 8f;\n             damage = 4f;\n-            drag = 0.03f;\n+            drag = 0.015f;\n         }};\n \n         driverBolt = new MassDriverBolt();",
      "parent_sha": "a806d7c019f19debbc28a1f93b273eaf978c4a92"
    }
  },
  {
    "oid": "0d084d380d648a939997a1efcfd288a5110527bd",
    "message": "Fixed map resize not preserving links",
    "date": "2021-02-12T13:56:40Z",
    "url": "https://github.com/Anuken/Mindustry/commit/0d084d380d648a939997a1efcfd288a5110527bd",
    "details": {
      "sha": "9b62ae40a69af21361c95e7749074e8f28b29886",
      "filename": "core/src/mindustry/editor/MapEditor.java",
      "status": "modified",
      "additions": 12,
      "deletions": 1,
      "changes": 13,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/0d084d380d648a939997a1efcfd288a5110527bd/core%2Fsrc%2Fmindustry%2Feditor%2FMapEditor.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/0d084d380d648a939997a1efcfd288a5110527bd/core%2Fsrc%2Fmindustry%2Feditor%2FMapEditor.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Feditor%2FMapEditor.java?ref=0d084d380d648a939997a1efcfd288a5110527bd",
      "patch": "@@ -8,6 +8,7 @@\n import arc.struct.*;\n import mindustry.content.*;\n import mindustry.editor.DrawOperation.*;\n+import mindustry.entities.units.*;\n import mindustry.game.*;\n import mindustry.gen.*;\n import mindustry.io.*;\n@@ -259,7 +260,7 @@ public void resize(int width, int height){\n         clearOp();\n \n         Tiles previous = world.tiles;\n-        int offsetX = -(width - width()) / 2, offsetY = -(height - height()) / 2;\n+        int offsetX = (width() - width) / 2, offsetY = (height() - height) / 2;\n         loading = true;\n \n         Tiles tiles = world.resize(width, height);\n@@ -275,7 +276,17 @@ public void resize(int width, int height){\n                     if(tile.build != null && tile.isCenter()){\n                         tile.build.x = x * tilesize + tile.block().offset;\n                         tile.build.y = y * tilesize + tile.block().offset;\n+\n+                        //shift links to account for map resize\n+                        Object config = tile.build.config();\n+                        if(config != null){\n+                            Object out = BuildPlan.pointConfig(tile.block(), config, p -> p.sub(offsetX, offsetY));\n+                            if(out != config){\n+                                tile.build.configureAny(out);\n+                            }\n+                        }\n                     }\n+\n                 }else{\n                     tiles.set(x, y, new EditorTile(x, y, Blocks.stone.id, (short)0, (short)0));\n                 }",
      "parent_sha": "0cc64c6a8d80d1338e8bedb4133f5fe8fb9cb9de"
    }
  },
  {
    "oid": "e9df883e1018a0c74ddb67784b6bcd399c90d928",
    "message": "Further RTS tweaks",
    "date": "2022-09-29T01:29:28Z",
    "url": "https://github.com/Anuken/Mindustry/commit/e9df883e1018a0c74ddb67784b6bcd399c90d928",
    "details": {
      "sha": "10c771e7abb8eab2a5103a5d0a257388e884f673",
      "filename": "core/src/mindustry/ai/RtsAI.java",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/e9df883e1018a0c74ddb67784b6bcd399c90d928/core%2Fsrc%2Fmindustry%2Fai%2FRtsAI.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/e9df883e1018a0c74ddb67784b6bcd399c90d928/core%2Fsrc%2Fmindustry%2Fai%2FRtsAI.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fai%2FRtsAI.java?ref=e9df883e1018a0c74ddb67784b6bcd399c90d928",
      "patch": "@@ -130,6 +130,8 @@ void assignSquads(){\n     }\n \n     boolean handleSquad(Seq<Unit> units, boolean noDefenders){\n+        if(units.isEmpty()) return false;\n+\n         float health = 0f, dps = 0f;\n         float ax = 0f, ay = 0f;\n         boolean targetAir = true, targetGround = true;\n@@ -226,7 +228,7 @@ boolean handleSquad(Seq<Unit> units, boolean noDefenders){\n \n         boolean anyDefend = defendPos != null || defendTarget != null;\n \n-        var build = anyDefend ? null : findTarget(ax, ay, units.size, dps, health);\n+        var build = anyDefend ? null : findTarget(ax, ay, units.size, dps, health, units.first().flag == 0);\n \n         if(build != null || anyDefend){\n             for(var unit : units){\n@@ -246,7 +248,7 @@ boolean handleSquad(Seq<Unit> units, boolean noDefenders){\n         return anyDefend;\n     }\n \n-    @Nullable Building findTarget(float x, float y, int total, float dps, float health){\n+    @Nullable Building findTarget(float x, float y, int total, float dps, float health, boolean checkWeight){\n         if(total < data.team.rules().rtsMinSquad) return null;\n \n         //flag priority?\n@@ -281,7 +283,7 @@ boolean handleSquad(Seq<Unit> units, boolean noDefenders){\n         );\n \n         float weight = weights.get(result, 0f);\n-        if(weight < data.team.rules().rtsMinWeight && total < Units.getCap(data.team)){\n+        if(checkWeight && weight < data.team.rules().rtsMinWeight && total < Units.getCap(data.team)){\n             return null;\n         }\n ",
      "parent_sha": "7557a57266778043b680f48e555ed0e2e51bc093"
    }
  },
  {
    "oid": "2b6856634c3a82fa5d82ff82e7cadbc4579f2c79",
    "message": "Fixed #5864",
    "date": "2021-08-25T17:22:19Z",
    "url": "https://github.com/Anuken/Mindustry/commit/2b6856634c3a82fa5d82ff82e7cadbc4579f2c79",
    "details": {
      "sha": "ea4de86c2690869205781fea6cbb4d56d4c0fed7",
      "filename": "core/src/mindustry/world/blocks/payloads/PayloadBlock.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/2b6856634c3a82fa5d82ff82e7cadbc4579f2c79/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fpayloads%2FPayloadBlock.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/2b6856634c3a82fa5d82ff82e7cadbc4579f2c79/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fpayloads%2FPayloadBlock.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fpayloads%2FPayloadBlock.java?ref=2b6856634c3a82fa5d82ff82e7cadbc4579f2c79",
      "patch": "@@ -79,7 +79,7 @@ public boolean acceptUnitPayload(Unit unit){\n \n         @Override\n         public boolean canControlSelect(Player player){\n-            return !player.unit().spawnedByCore && this.payload == null && acceptUnitPayload(player.unit()) && player.tileOn().build == this;\n+            return !player.unit().spawnedByCore && this.payload == null && acceptUnitPayload(player.unit()) && player.tileOn() != null && player.tileOn().build == this;\n         }\n \n         @Override",
      "parent_sha": "9e16d7385aae1211d8ee24ac2a9f7afbd57d3065"
    }
  },
  {
    "oid": "471c8728a05220458cfe092d7bb6cd817bacab27",
    "message": "Let units without weapons patrol",
    "date": "2023-10-22T03:04:12Z",
    "url": "https://github.com/Anuken/Mindustry/commit/471c8728a05220458cfe092d7bb6cd817bacab27",
    "details": {
      "sha": "a8623a6d65c1617b89d83b1d6b5fd7c3de0f01a9",
      "filename": "core/src/mindustry/type/UnitType.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/471c8728a05220458cfe092d7bb6cd817bacab27/core%2Fsrc%2Fmindustry%2Ftype%2FUnitType.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/471c8728a05220458cfe092d7bb6cd817bacab27/core%2Fsrc%2Fmindustry%2Ftype%2FUnitType.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Ftype%2FUnitType.java?ref=471c8728a05220458cfe092d7bb6cd817bacab27",
      "patch": "@@ -845,7 +845,7 @@ public void init(){\n                 }\n                 stances = seq.toArray(UnitStance.class);\n             }else{\n-                stances = new UnitStance[]{UnitStance.stop};\n+                stances = new UnitStance[]{UnitStance.stop, UnitStance.patrol};\n             }\n         }\n ",
      "parent_sha": "5ec2ee042842d2c1de7afc73c6850c2b59f59690"
    }
  },
  {
    "oid": "48fdae754ed93747c521b3b263e7cc28b89eabf9",
    "message": "Fixed a bug where sector buttons would not be updated after abandoning it (#301)",
    "date": "2018-11-04T14:22:15Z",
    "url": "https://github.com/Anuken/Mindustry/commit/48fdae754ed93747c521b3b263e7cc28b89eabf9",
    "details": {
      "sha": "5899832d308d1789b8736406a9697ee2519d47b6",
      "filename": "core/src/io/anuke/mindustry/ui/dialogs/SectorsDialog.java",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/48fdae754ed93747c521b3b263e7cc28b89eabf9/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fui%2Fdialogs%2FSectorsDialog.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/48fdae754ed93747c521b3b263e7cc28b89eabf9/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fui%2Fdialogs%2FSectorsDialog.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fui%2Fdialogs%2FSectorsDialog.java?ref=48fdae754ed93747c521b3b263e7cc28b89eabf9",
      "patch": "@@ -107,7 +107,11 @@ void selectSector(Sector sector){\n \n             if(selected.hasSave()){\n                 t.addImageTextButton(\"$text.sector.abandon\", \"icon-cancel\", 16 * 2, () ->\n-                    Vars.ui.showConfirm(\"$text.confirm\", \"$text.sector.abandon.confirm\", () -> world.sectors.abandonSector(selected))\n+                    Vars.ui.showConfirm(\"$text.confirm\", \"$text.sector.abandon.confirm\", () -> {\n+                        world.sectors.abandonSector(selected);\n+                        // Simulate a sector selection so the buttons get updated.\n+                        selectSector(selected);\n+                        })\n                 ).width(sectorSize).height(60f);\n             }\n         }).pad(-5).growX().padTop(0);",
      "parent_sha": "64f2ee67b2e34e2cbb93b2ed2b54c9efb6072816"
    }
  },
  {
    "oid": "1674b2dfd614732225582de846c0b80e00859217",
    "message": "Fixed #5609",
    "date": "2021-07-18T20:31:13Z",
    "url": "https://github.com/Anuken/Mindustry/commit/1674b2dfd614732225582de846c0b80e00859217",
    "details": {
      "sha": "da604532cb2e028e1e58384e71f782d338b7222d",
      "filename": "core/src/mindustry/logic/LCanvas.java",
      "status": "modified",
      "additions": 11,
      "deletions": 1,
      "changes": 12,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/1674b2dfd614732225582de846c0b80e00859217/core%2Fsrc%2Fmindustry%2Flogic%2FLCanvas.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/1674b2dfd614732225582de846c0b80e00859217/core%2Fsrc%2Fmindustry%2Flogic%2FLCanvas.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Flogic%2FLCanvas.java?ref=1674b2dfd614732225582de846c0b80e00859217",
      "patch": "@@ -16,6 +16,7 @@\n import mindustry.*;\n import mindustry.gen.*;\n import mindustry.graphics.*;\n+import mindustry.logic.LStatements.*;\n import mindustry.ui.*;\n \n public class LCanvas extends Table{\n@@ -395,11 +396,20 @@ public void touchUp(InputEvent event, float x, float y, int pointer, KeyCode but\n         }\n \n         public void copy(){\n+            st.saveUI();\n             LStatement copy = st.copy();\n+\n+            if(copy instanceof JumpStatement st && st.destIndex != -1){\n+                int index = statements.getChildren().indexOf(this);\n+                if(index != -1 && index < st.destIndex){\n+                    st.destIndex ++;\n+                }\n+            }\n+\n             if(copy != null){\n                 StatementElem s = new StatementElem(copy);\n \n-                statements.addChildAfter(StatementElem.this,s);\n+                statements.addChildAfter(StatementElem.this, s);\n                 statements.layout();\n                 copy.elem = s;\n                 copy.setupUI();",
      "parent_sha": "96de7c83217402dc4895aeeb5e0ca3a299807f8f"
    }
  },
  {
    "oid": "6d9029fb2345e7a7216122b8af8b61e2a070dbc8",
    "message": "some JSON fixes",
    "date": "2022-05-23T02:27:53Z",
    "url": "https://github.com/Anuken/Mindustry/commit/6d9029fb2345e7a7216122b8af8b61e2a070dbc8",
    "details": {
      "sha": "3d2d1cb2a071e302a9d52fc846a7b51791e81600",
      "filename": "core/src/mindustry/mod/ContentParser.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/6d9029fb2345e7a7216122b8af8b61e2a070dbc8/core%2Fsrc%2Fmindustry%2Fmod%2FContentParser.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/6d9029fb2345e7a7216122b8af8b61e2a070dbc8/core%2Fsrc%2Fmindustry%2Fmod%2FContentParser.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fmod%2FContentParser.java?ref=6d9029fb2345e7a7216122b8af8b61e2a070dbc8",
      "patch": "@@ -108,9 +108,9 @@ public class ContentParser{\n             if(data.isString()){\n                 return field(Bullets.class, data);\n             }\n-            var bc = resolve(data.getString(\"type\", \"\"), BasicBulletType.class);\n+            Class<?> bc = resolve(data.getString(\"type\", \"\"), BasicBulletType.class);\n             data.remove(\"type\");\n-            BulletType result = make(bc);\n+            BulletType result = (BulletType)make(bc);\n             readFields(result, data);\n             return result;\n         });\n@@ -150,7 +150,7 @@ public class ContentParser{\n             return result;\n         });\n         put(DrawPart.class, (type, data) -> {\n-            var bc = resolve(data.getString(\"type\", \"\"), RegionPart.class);\n+            Class<?> bc = resolve(data.getString(\"type\", \"\"), RegionPart.class);\n             data.remove(\"type\");\n             var result = make(bc);\n             readFields(result, data);",
      "parent_sha": "2236771b22f5c4ae522c3d42f7f3dee17c543836"
    }
  },
  {
    "oid": "ddb0d7eff2127da55cc80013fc80dad11751015c",
    "message": "Fixed #1304",
    "date": "2020-01-01T17:16:23Z",
    "url": "https://github.com/Anuken/Mindustry/commit/ddb0d7eff2127da55cc80013fc80dad11751015c",
    "details": {
      "sha": "aa6048d833945b77b809a9c97377a59f09b2a4f2",
      "filename": "core/src/mindustry/mod/ContentParser.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/ddb0d7eff2127da55cc80013fc80dad11751015c/core%2Fsrc%2Fmindustry%2Fmod%2FContentParser.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/ddb0d7eff2127da55cc80013fc80dad11751015c/core%2Fsrc%2Fmindustry%2Fmod%2FContentParser.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fmod%2FContentParser.java?ref=ddb0d7eff2127da55cc80013fc80dad11751015c",
      "patch": "@@ -333,8 +333,8 @@ private <T extends Content> TypeParser<T> parser(ContentType type, Func<String,\n     }\n \n     private void readBundle(ContentType type, String name, JsonValue value){\n-        UnlockableContent cont = Vars.content.getByName(type, name) instanceof UnlockableContent ?\n-                                Vars.content.getByName(type, name) : null;\n+        UnlockableContent cont = locate(type, name) instanceof UnlockableContent ?\n+            locate(type, name) : null;\n \n         String entryName = cont == null ? type + \".\" + currentMod.name + \"-\" + name + \".\" : type + \".\" + cont.name + \".\";\n         I18NBundle bundle = Core.bundle;",
      "parent_sha": "7a29877a2d7f154195ef1ea9d352dfadc2073a15"
    }
  },
  {
    "oid": "4494503e6b0d941d2f88ffd57e353525b411ae62",
    "message": "Get rid of computed boolean",
    "date": "2020-01-05T09:31:51Z",
    "url": "https://github.com/Anuken/Mindustry/commit/4494503e6b0d941d2f88ffd57e353525b411ae62",
    "details": {
      "sha": "cc3df44b79522cd30e9618abeb44c7fed11dc88e",
      "filename": "core/src/mindustry/world/blocks/distribution/CraterConveyor.java",
      "status": "modified",
      "additions": 6,
      "deletions": 12,
      "changes": 18,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/4494503e6b0d941d2f88ffd57e353525b411ae62/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fdistribution%2FCraterConveyor.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/4494503e6b0d941d2f88ffd57e353525b411ae62/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fdistribution%2FCraterConveyor.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fdistribution%2FCraterConveyor.java?ref=4494503e6b0d941d2f88ffd57e353525b411ae62",
      "patch": "@@ -63,7 +63,7 @@ public void draw(Tile tile){\n     public void drawLayer(Tile tile){\n         CraterConveyorEntity entity = tile.ent();\n \n-        if(!entity.crater) return;\n+        if(entity.link == Pos.invalid) return;\n         \n         Tile from = world.tile(entity.link);\n         Tmp.v1.set(from.getX(), from.getY());\n@@ -103,17 +103,15 @@ public void update(Tile tile){\n         entity.reload = Mathf.clamp(entity.reload - speed, 0f, 1f);\n \n         // ensure a crater exists below this block\n-        if(!entity.crater){\n+        if(entity.link == Pos.invalid){\n             // poof in crater\n             if(entity.items.total() <= 0 || entity.reload > 0) return;\n             Effects.effect(Fx.plasticburn, tile.drawx(), tile.drawy());\n-            entity.crater = true;\n-            entity.link = tile.back().pos();\n+            entity.link = tile.pos();\n         }else{\n             // poof out crater\n             if(entity.items.total() == 0){\n                 Effects.effect(Fx.plasticburn, tile.drawx(), tile.drawy());\n-                entity.crater = false;\n                 entity.link = Pos.invalid;\n                 return;\n             }\n@@ -140,8 +138,8 @@ public void update(Tile tile){\n                     // check if next crater conveyor is not occupied\n                     if(e.items.total() == 0){\n                         // transfer ownership of crater\n-                        e.crater = true;\n-                        entity.crater = false;\n+                        entity.link = Pos.invalid;\n+                        e.link = tile.pos();\n \n                         // prevent this tile from spawning a new crater to avoid collisions\n                         entity.reload = 1;\n@@ -151,7 +149,6 @@ public void update(Tile tile){\n                         entity.items.clear();\n \n                         e.reload = 1;\n-                        e.link = tile.pos();\n                     }\n                 }\n             }\n@@ -161,17 +158,15 @@ public void update(Tile tile){\n     class CraterConveyorEntity extends BaseConveyorEntity{\n         float lastFrameUpdated = -1;\n \n-        int link = Pos.invalid;\n+        int link;\n         float reload;\n-        boolean crater;\n \n         @Override\n         public void write(DataOutput stream) throws IOException{\n             super.write(stream);\n \n             stream.writeInt(link);\n             stream.writeFloat(reload);\n-            stream.writeBoolean(crater);\n         }\n \n         @Override\n@@ -180,7 +175,6 @@ public void read(DataInput stream, byte revision) throws IOException{\n \n             link = stream.readInt();\n             reload = stream.readFloat();\n-            crater = stream.readBoolean();\n         }\n \n         public Item dominant(){",
      "parent_sha": "2948738e330e498350041b229a376bd6d7c3804b"
    }
  },
  {
    "oid": "c9beb3d158bee8d17fe4e057418710294f7eef65",
    "message": "add `@server` to logic (#9018)\n\n* add @master to logic\r\n\r\n* remove `Vars.`\r\n\r\n* Update GlobalVars.java\r\n\r\n* Update GlobalVars.java",
    "date": "2023-09-05T16:43:17Z",
    "url": "https://github.com/Anuken/Mindustry/commit/c9beb3d158bee8d17fe4e057418710294f7eef65",
    "details": {
      "sha": "57b30bcd7bab28592d4970a5fb1fac7f3e41a58a",
      "filename": "core/src/mindustry/logic/GlobalVars.java",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/c9beb3d158bee8d17fe4e057418710294f7eef65/core%2Fsrc%2Fmindustry%2Flogic%2FGlobalVars.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/c9beb3d158bee8d17fe4e057418710294f7eef65/core%2Fsrc%2Fmindustry%2Flogic%2FGlobalVars.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Flogic%2FGlobalVars.java?ref=c9beb3d158bee8d17fe4e057418710294f7eef65",
      "patch": "@@ -27,7 +27,7 @@ public class GlobalVars{\n     public static final Rand rand = new Rand();\n \n     //non-constants that depend on state\n-    private static int varTime, varTick, varSecond, varMinute, varWave, varWaveTime;\n+    private static int varTime, varTick, varSecond, varMinute, varWave, varWaveTime, varServer;\n \n     private ObjectIntMap<String> namesToIds = new ObjectIntMap<>();\n     private Seq<Var> vars = new Seq<>(Var.class);\n@@ -56,6 +56,8 @@ public void init(){\n         varWave = put(\"@waveNumber\", 0);\n         varWaveTime = put(\"@waveTime\", 0);\n \n+        varServer = put(\"@server\", 0);\n+\n         //special enums\n         put(\"@ctrlProcessor\", ctrlProcessor);\n         put(\"@ctrlPlayer\", ctrlPlayer);\n@@ -147,6 +149,9 @@ public void update(){\n         //wave state\n         vars.items[varWave].numval = state.wave;\n         vars.items[varWaveTime].numval = state.wavetime / 60f;\n+\n+        //network\n+        vars.items[varServer].numval = (net.server() || !net.active()) ? 1 : 0;\n     }\n \n     /** @return a piece of content based on its logic ID. This is not equivalent to content ID. */",
      "parent_sha": "7fa002c626b1f6ac9b683935a24ee2237f137cef"
    }
  },
  {
    "oid": "b68734d67993b00ee676bc81ba09dcc6e28822cb",
    "message": "iOS-specific format loading",
    "date": "2019-08-14T15:03:36Z",
    "url": "https://github.com/Anuken/Mindustry/commit/b68734d67993b00ee676bc81ba09dcc6e28822cb",
    "details": {
      "sha": "32bd471288fc69587c0a761bcf6073d8d7abe08d",
      "filename": "annotations/src/main/java/io/anuke/annotations/AssetsAnnotationProcessor.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/b68734d67993b00ee676bc81ba09dcc6e28822cb/annotations%2Fsrc%2Fmain%2Fjava%2Fio%2Fanuke%2Fannotations%2FAssetsAnnotationProcessor.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/b68734d67993b00ee676bc81ba09dcc6e28822cb/annotations%2Fsrc%2Fmain%2Fjava%2Fio%2Fanuke%2Fannotations%2FAssetsAnnotationProcessor.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/annotations%2Fsrc%2Fmain%2Fjava%2Fio%2Fanuke%2Fannotations%2FAssetsAnnotationProcessor.java?ref=b68734d67993b00ee676bc81ba09dcc6e28822cb",
      "patch": "@@ -79,7 +79,8 @@ void process(String classname, String path, String rtype, String loadMethod) thr\n                 name = name + \"s\";\n             }\n \n-            load.addStatement(name + \" = io.anuke.arc.Core.audio.\"+loadMethod+\"(io.anuke.arc.Core.files.internal($S))\", path.substring(path.lastIndexOf(\"/\") + 1) + \"/\" + fname);\n+            load.addStatement(name + \" = io.anuke.arc.Core.audio.\"+loadMethod+\"(io.anuke.arc.Core.files.internal(io.anuke.arc.Core.app.getType() != io.anuke.arc.Application.ApplicationType.iOS ? $S : $S))\",\n+                path.substring(path.lastIndexOf(\"/\") + 1) + \"/\" + fname, (path.substring(path.lastIndexOf(\"/\") + 1) + \"/\" + fname).replace(\".ogg\", \".caf\"));\n             dispose.addStatement(name + \".dispose()\");\n             dispose.addStatement(name + \" = null\");\n             type.addField(FieldSpec.builder(ClassName.bestGuess(rtype), name, Modifier.STATIC, Modifier.PUBLIC).initializer(\"new io.anuke.arc.audio.mock.Mock\" + rtype.substring(rtype.lastIndexOf(\".\") + 1)+ \"()\").build());",
      "parent_sha": "bf21c94bd7db867aeed3857b765beab896318674"
    }
  },
  {
    "oid": "ff35e6a7d81b43f2fd3327f8a5969d09b0ce8bcf",
    "message": "mythril that's a seq, NOT an objectmap",
    "date": "2024-05-27T15:13:43Z",
    "url": "https://github.com/Anuken/Mindustry/commit/ff35e6a7d81b43f2fd3327f8a5969d09b0ce8bcf",
    "details": {
      "sha": "2823c8c771d97b4268b7659e66d3a6af747b642f",
      "filename": "core/src/mindustry/logic/GlobalVars.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/ff35e6a7d81b43f2fd3327f8a5969d09b0ce8bcf/core%2Fsrc%2Fmindustry%2Flogic%2FGlobalVars.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/ff35e6a7d81b43f2fd3327f8a5969d09b0ce8bcf/core%2Fsrc%2Fmindustry%2Flogic%2FGlobalVars.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Flogic%2FGlobalVars.java?ref=ff35e6a7d81b43f2fd3327f8a5969d09b0ce8bcf",
      "patch": "@@ -98,7 +98,7 @@ public void init(){\n         for(Sound sound : Core.assets.getAll(Sound.class, new Seq<>(Sound.class))){\n             if(sound != Sounds.none && sound != Sounds.swish){\n                 String name = sound.file.nameWithoutExtension();\n-                soundNames.put(name);\n+                soundNames.add(name);\n                 put(\"@sfx-\" + name, Sounds.getSoundId(sound));\n             }\n         }",
      "parent_sha": "dbb62bd87cff823feb85148a76fc9c4347756b08"
    }
  },
  {
    "oid": "d8cf65e24c5f4135bd13159235bfd4dd7a663b8b",
    "message": "More permissive json type re-declarations",
    "date": "2021-10-15T01:59:02Z",
    "url": "https://github.com/Anuken/Mindustry/commit/d8cf65e24c5f4135bd13159235bfd4dd7a663b8b",
    "details": {
      "sha": "2134b21fec279f57557d268a779c3f9b49a1b651",
      "filename": "core/src/mindustry/mod/ContentParser.java",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/d8cf65e24c5f4135bd13159235bfd4dd7a663b8b/core%2Fsrc%2Fmindustry%2Fmod%2FContentParser.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/d8cf65e24c5f4135bd13159235bfd4dd7a663b8b/core%2Fsrc%2Fmindustry%2Fmod%2FContentParser.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fmod%2FContentParser.java?ref=d8cf65e24c5f4135bd13159235bfd4dd7a663b8b",
      "patch": "@@ -236,10 +236,11 @@ private <T> T internalRead(Class<T> type, Class elementType, JsonValue jsonData,\n             Block block;\n \n             if(locate(ContentType.block, name) != null){\n-                block = locate(ContentType.block, name);\n-\n                 if(value.has(\"type\")){\n-                    throw new IllegalArgumentException(\"When defining properties for an existing block, you must not re-declare its type. The original type will be used. Block: \" + name);\n+                    Log.warn(\"Warning: '\" + name + \"' re-declares a type. This will be interpreted as a new block. If you wish to override a vanilla block, omit the 'type' section, as vanilla block `type`s cannot be changed.\");\n+                    block = make(resolve(value.getString(\"type\", \"\"), Block.class), mod + \"-\" + name);\n+                }else{\n+                    block = locate(ContentType.block, name);\n                 }\n             }else{\n                 block = make(resolve(value.getString(\"type\", \"\"), Block.class), mod + \"-\" + name);",
      "parent_sha": "3de9cfa1d7b584747c0fd04bafe18fd53fcbdddf"
    }
  },
  {
    "oid": "fc058476ed285ba0fb9689e8796ba005af39a0d4",
    "message": "Made drone more intelligent",
    "date": "2018-06-22T19:38:14Z",
    "url": "https://github.com/Anuken/Mindustry/commit/fc058476ed285ba0fb9689e8796ba005af39a0d4",
    "details": {
      "sha": "3b5dc1a283f1a41ec20c0f679a27a072fde455e4",
      "filename": "core/src/io/anuke/mindustry/entities/units/types/Drone.java",
      "status": "modified",
      "additions": 17,
      "deletions": 5,
      "changes": 22,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/fc058476ed285ba0fb9689e8796ba005af39a0d4/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fentities%2Funits%2Ftypes%2FDrone.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/fc058476ed285ba0fb9689e8796ba005af39a0d4/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fentities%2Funits%2Ftypes%2FDrone.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fentities%2Funits%2Ftypes%2FDrone.java?ref=fc058476ed285ba0fb9689e8796ba005af39a0d4",
      "patch": "@@ -1,6 +1,7 @@\n package io.anuke.mindustry.entities.units.types;\n \n import com.badlogic.gdx.graphics.Color;\n+import com.badlogic.gdx.utils.ObjectSet;\n import com.badlogic.gdx.utils.Queue;\n import io.anuke.mindustry.content.Items;\n import io.anuke.mindustry.entities.TileEntity;\n@@ -15,6 +16,7 @@\n import io.anuke.mindustry.gen.CallEntity;\n import io.anuke.mindustry.graphics.Palette;\n import io.anuke.mindustry.type.Item;\n+import io.anuke.mindustry.type.ItemStack;\n import io.anuke.mindustry.world.Tile;\n import io.anuke.mindustry.world.blocks.BuildBlock;\n import io.anuke.mindustry.world.blocks.BuildBlock.BuildEntity;\n@@ -32,7 +34,7 @@\n public class Drone extends FlyingUnit implements BuilderTrait {\n     public static int typeID = -1;\n \n-    protected static Item[] toMine;\n+    protected static ObjectSet<Item> toMine;\n     protected static float healSpeed = 0.1f;\n     protected static float discoverRange = 120f;\n     protected static boolean initialized;\n@@ -46,7 +48,7 @@ public class Drone extends FlyingUnit implements BuilderTrait {\n     private static void initEvents(){\n         if(initialized) return;\n \n-        toMine = new Item[]{Items.lead, Items.tungsten};\n+        toMine = ObjectSet.with(Items.lead, Items.tungsten);\n \n         Events.on(BlockBuildEvent.class, (team, tile) -> {\n             EntityGroup<BaseUnit> group = unitGroups[team.ordinal()];\n@@ -180,12 +182,25 @@ protected void findItem(){\n \n         public void update() {\n             BuildEntity entity = (BuildEntity)target;\n+            TileEntity core = getClosestCore();\n+\n+            if(core == null) return;\n \n             if(entity.progress() < 1f && entity.tile.block() instanceof BuildBlock){ //building is valid\n                 if(!isBuilding() && distanceTo(target) < placeDistance * 0.9f){ //within distance, begin placing\n                     getPlaceQueue().addLast(new BuildRequest(entity.tile.x, entity.tile.y, entity.tile.getRotation(), entity.recipe));\n                 }\n \n+                //if it's missing requirements, try and mine them\n+                for(ItemStack stack : entity.recipe.requirements){\n+                    if(!core.items.hasItem(stack.item, stack.amount) && toMine.contains(stack.item)){\n+                        targetItem = stack.item;\n+                        getPlaceQueue().clear();\n+                        setState(mine);\n+                        return;\n+                    }\n+                }\n+\n                 circle(placeDistance * 0.7f);\n             }else{ //building isn't valid\n                 setState(repair);\n@@ -223,9 +238,6 @@ public void update() {\n         }\n     },\n     mine = new UnitState() {\n-        public void entered() {\n-            setMineTile(null);\n-        }\n \n         public void update() {\n             if(targetItem == null) {",
      "parent_sha": "c24eb231abc54d833734fe2aab3de94192baa06c"
    }
  },
  {
    "oid": "9ac8d9a821618b3521909550a2692dc4089b6a62",
    "message": "Fixes",
    "date": "2024-05-27T21:29:04Z",
    "url": "https://github.com/Anuken/Mindustry/commit/9ac8d9a821618b3521909550a2692dc4089b6a62",
    "details": {
      "sha": "7c2860ea8413eba707fcf01883f4a10ba72a9173",
      "filename": "core/src/mindustry/core/Platform.java",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/9ac8d9a821618b3521909550a2692dc4089b6a62/core%2Fsrc%2Fmindustry%2Fcore%2FPlatform.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/9ac8d9a821618b3521909550a2692dc4089b6a62/core%2Fsrc%2Fmindustry%2Fcore%2FPlatform.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fcore%2FPlatform.java?ref=9ac8d9a821618b3521909550a2692dc4089b6a62",
      "patch": "@@ -143,6 +143,8 @@ default void export(String name, String extension, FileWriter writer){\n      */\n     default void showFileChooser(boolean open, String title, String extension, Cons<Fi> cons){\n         if(OS.isWindows || OS.isMac){\n+            String formatted = (title.startsWith(\"@\") ? Core.bundle.get(title.substring(1)) : title).replaceAll(\"\\\"\", \"'\");\n+\n             //native file dialog\n             Threads.daemon(() -> {\n                 try{\n@@ -151,9 +153,9 @@ default void showFileChooser(boolean open, String title, String extension, Cons<\n                     String result;\n \n                     if(open){\n-                        result = FileDialogs.openFileDialog(title, FileChooser.getLastDirectory().absolutePath(), new String[]{\"*.\" + extension}, \".\" + extension + \" files\", false);\n+                        result = FileDialogs.openFileDialog(formatted, FileChooser.getLastDirectory().absolutePath(), new String[]{\"*.\" + extension}, \".\" + extension + \" files\", false);\n                     }else{\n-                        result = FileDialogs.saveFileDialog(title, FileChooser.getLastDirectory().absolutePath(), new String[]{\"*.\" + extension}, \".\" + extension + \" files\");\n+                        result = FileDialogs.saveFileDialog(formatted, FileChooser.getLastDirectory().absolutePath(), new String[]{\"*.\" + extension}, \".\" + extension + \" files\");\n                     }\n \n                     if(result == null) return;",
      "parent_sha": "e7d7890891af0c6eede925e82014e3e5e5211675"
    }
  },
  {
    "oid": "25f98fdeb0a645d3735d76beba44d2c94a032643",
    "message": "engineColor (#6360)\n\nCo-authored-by: Lele567 <48808663+Lele567@users.noreply.github.com>",
    "date": "2021-11-22T15:11:03Z",
    "url": "https://github.com/Anuken/Mindustry/commit/25f98fdeb0a645d3735d76beba44d2c94a032643",
    "details": {
      "sha": "24d4438be833d75e125bf339195acae7ce0be6f1",
      "filename": "core/src/mindustry/type/UnitType.java",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/25f98fdeb0a645d3735d76beba44d2c94a032643/core%2Fsrc%2Fmindustry%2Ftype%2FUnitType.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/25f98fdeb0a645d3735d76beba44d2c94a032643/core%2Fsrc%2Fmindustry%2Ftype%2FUnitType.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Ftype%2FUnitType.java?ref=25f98fdeb0a645d3735d76beba44d2c94a032643",
      "patch": "@@ -120,6 +120,8 @@ public class UnitType extends UnlockableContent{\n     public boolean canDrown = true, naval = false;\n     public float drownTimeMultiplier = 1f;\n     public float engineOffset = 5f, engineSize = 2.5f;\n+    public @Nullable Color engineColor = null;\n+    public Color engineColorInner = Color.white;\n     public float strafePenalty = 0.5f;\n     public float hitSize = 6f;\n     public float itemOffsetY = 3f;\n@@ -766,13 +768,13 @@ public void drawEngine(Unit unit){\n             trail.draw(unit.team.color, (engineSize + Mathf.absin(Time.time, 2f, engineSize / 4f) * scale) * trailScl);\n         }\n \n-        Draw.color(unit.team.color);\n+        Draw.color(engineColor == null ? unit.team.color : engineColor);\n         Fill.circle(\n             unit.x + Angles.trnsx(unit.rotation + 180, offset),\n             unit.y + Angles.trnsy(unit.rotation + 180, offset),\n             (engineSize + Mathf.absin(Time.time, 2f, engineSize / 4f)) * scale\n         );\n-        Draw.color(Color.white);\n+        Draw.color(engineColorInner);\n         Fill.circle(\n             unit.x + Angles.trnsx(unit.rotation + 180, offset - 1f),\n             unit.y + Angles.trnsy(unit.rotation + 180, offset - 1f),",
      "parent_sha": "f1e9d051630feac9a70cc93db805beef140f9589"
    }
  },
  {
    "oid": "54b0d308bed46dab324f9be9eb3d6ea84e2235c3",
    "message": "h",
    "date": "2020-10-17T11:16:47Z",
    "url": "https://github.com/Anuken/Mindustry/commit/54b0d308bed46dab324f9be9eb3d6ea84e2235c3",
    "details": {
      "sha": "07147b5cd919a14351c1b5577bd3019b227cfb53",
      "filename": "core/src/mindustry/type/Planet.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/54b0d308bed46dab324f9be9eb3d6ea84e2235c3/core%2Fsrc%2Fmindustry%2Ftype%2FPlanet.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/54b0d308bed46dab324f9be9eb3d6ea84e2235c3/core%2Fsrc%2Fmindustry%2Ftype%2FPlanet.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Ftype%2FPlanet.java?ref=54b0d308bed46dab324f9be9eb3d6ea84e2235c3",
      "patch": "@@ -269,7 +269,7 @@ public boolean visible(){\n         return true;\n     }\n \n-    public void draw(Mat3D projection, Mat3d Transform){\n+    public void draw(Mat3D projection, Mat3D Transform){\n         mesh.render(projection, transform);\n     }\n }",
      "parent_sha": "05b77d787e109c38cd2f9a714b71abb80bd151aa"
    }
  },
  {
    "oid": "65156e440953297b1bc9a41a4a0c5ef12bf85b73",
    "message": "Cyano Boost Requirement Nerfed\n1.5 -> 3 cyano/s\nI knew it felt too high, this should be better by a long shot",
    "date": "2024-03-04T14:39:08Z",
    "url": "https://github.com/Anuken/Mindustry/commit/65156e440953297b1bc9a41a4a0c5ef12bf85b73",
    "details": {
      "sha": "1463c0be0f59693f3458114e30ba1caa444eb86f",
      "filename": "core/src/mindustry/content/Blocks.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/65156e440953297b1bc9a41a4a0c5ef12bf85b73/core%2Fsrc%2Fmindustry%2Fcontent%2FBlocks.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/65156e440953297b1bc9a41a4a0c5ef12bf85b73/core%2Fsrc%2Fmindustry%2Fcontent%2FBlocks.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fcontent%2FBlocks.java?ref=65156e440953297b1bc9a41a4a0c5ef12bf85b73",
      "patch": "@@ -2884,7 +2884,7 @@ public static void load(){\n             //TODO different requirements\n             consumePower(6f);\n             consumeLiquid(Liquids.hydrogen, 4f / 60f);\n-            consumeLiquid(Liquids.cyanogen, 1.5f / 60f).boost();\n+            consumeLiquid(Liquids.cyanogen, 3f / 60f).boost();\n         }};\n \n         //endregion",
      "parent_sha": "edd235774c17ff359e2ee5a0a39bb976d80a852c"
    }
  },
  {
    "oid": "b734fb948d6844dbc0b92c298d9d60e68426ea76",
    "message": "Fixed #8159",
    "date": "2023-01-12T13:36:47Z",
    "url": "https://github.com/Anuken/Mindustry/commit/b734fb948d6844dbc0b92c298d9d60e68426ea76",
    "details": {
      "sha": "f7dc7a067e37e1f2f71ab5d831359d5e1334f922",
      "filename": "core/src/mindustry/game/MapObjectives.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/b734fb948d6844dbc0b92c298d9d60e68426ea76/core%2Fsrc%2Fmindustry%2Fgame%2FMapObjectives.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/b734fb948d6844dbc0b92c298d9d60e68426ea76/core%2Fsrc%2Fmindustry%2Fgame%2FMapObjectives.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fgame%2FMapObjectives.java?ref=b734fb948d6844dbc0b92c298d9d60e68426ea76",
      "patch": "@@ -761,7 +761,7 @@ public void draw(){\n                 Lines.poly(pos.x, pos.y, sides, radius + 1f, rotation);\n             }else{\n                 Draw.color(color);\n-                Fill.poly(pos.x, pos.y, sides, radius);\n+                Fill.poly(pos.x, pos.y, sides, radius, rotation);\n             }\n \n             Draw.reset();",
      "parent_sha": "9c63165ef5975875591eee78b8c6415d2aa038d5"
    }
  },
  {
    "oid": "a2094ddf75650b728e4f59b519fcd79a636b3ee1",
    "message": "Command Center mode label. (#296)",
    "date": "2018-11-02T21:47:42Z",
    "url": "https://github.com/Anuken/Mindustry/commit/a2094ddf75650b728e4f59b519fcd79a636b3ee1",
    "details": {
      "sha": "9154a9205fe3f15300c3c400e19bd6fe7fb60a02",
      "filename": "core/src/io/anuke/mindustry/world/blocks/units/CommandCenter.java",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/a2094ddf75650b728e4f59b519fcd79a636b3ee1/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fworld%2Fblocks%2Funits%2FCommandCenter.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/a2094ddf75650b728e4f59b519fcd79a636b3ee1/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fworld%2Fblocks%2Funits%2FCommandCenter.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fworld%2Fblocks%2Funits%2FCommandCenter.java?ref=a2094ddf75650b728e4f59b519fcd79a636b3ee1",
      "patch": "@@ -81,11 +81,18 @@ public void draw(Tile tile){\n     public void buildTable(Tile tile, Table table){\n         CommandCenterEntity entity = tile.entity();\n         ButtonGroup<ImageButton> group = new ButtonGroup<>();\n+        Table buttons = new Table();\n \n         for(UnitCommand cmd : UnitCommand.values()){\n-            table.addImageButton(\"command-\" + cmd.name(), \"toggle\", 8*3, () -> threads.run(() -> Call.onCommandCenterSet(players[0], tile, cmd))).size(40f, 44f)\n+            buttons.addImageButton(\"command-\" + cmd.name(), \"toggle\", 8*3, () -> threads.run(() -> Call.onCommandCenterSet(players[0], tile, cmd))).size(40f, 44f)\n                 .checked(entity.command == cmd).group(group);\n         }\n+        table.add(buttons);\n+        table.row();\n+        Table lab = new Table(\"pane\");\n+        lab.label(() -> entity.command.localized()).center().width(group.getButtons().size * 40 - 20);\n+        table.add(lab);\n+\n     }\n \n     @Remote(called = Loc.server, forward = true, targets = Loc.both)",
      "parent_sha": "b6b39974989c1a9ad6a3bf8bcd1a52c24df635d0"
    }
  },
  {
    "oid": "9a95754007078a50c24b5e9e03613ca44462eb52",
    "message": "Fixed incorrect scaling with command layout",
    "date": "2022-08-02T00:56:37Z",
    "url": "https://github.com/Anuken/Mindustry/commit/9a95754007078a50c24b5e9e03613ca44462eb52",
    "details": {
      "sha": "b5a3c169eeaae851cb09e7ce64dd1d5d08afe91c",
      "filename": "core/src/mindustry/ui/fragments/PlacementFragment.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/9a95754007078a50c24b5e9e03613ca44462eb52/core%2Fsrc%2Fmindustry%2Fui%2Ffragments%2FPlacementFragment.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/9a95754007078a50c24b5e9e03613ca44462eb52/core%2Fsrc%2Fmindustry%2Fui%2Ffragments%2FPlacementFragment.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fui%2Ffragments%2FPlacementFragment.java?ref=9a95754007078a50c24b5e9e03613ca44462eb52",
      "patch": "@@ -412,7 +412,7 @@ public void build(Group parent){\n \n                         //hacky, but forces command table to be same width as blocks\n                         if(control.input.commandMode){\n-                            commandTable.getCells().peek().width(blockCatTable.getWidth());\n+                            commandTable.getCells().peek().width(blockCatTable.getWidth() / Scl.scl(1f));\n                         }\n \n                         wasCommandMode = control.input.commandMode;",
      "parent_sha": "d301f6ebe3ae55a37fb4e26824a42ace486efdfb"
    }
  },
  {
    "oid": "c8eee3b82588be8be3baf17025d225c6bb9dcacf",
    "message": "Made solar panels less efficient in darkness",
    "date": "2019-11-17T16:35:32Z",
    "url": "https://github.com/Anuken/Mindustry/commit/c8eee3b82588be8be3baf17025d225c6bb9dcacf",
    "details": {
      "sha": "248bc2d1047b2b012489732199e9088f023e8309",
      "filename": "core/src/io/anuke/mindustry/world/blocks/power/SolarGenerator.java",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/c8eee3b82588be8be3baf17025d225c6bb9dcacf/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fworld%2Fblocks%2Fpower%2FSolarGenerator.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/c8eee3b82588be8be3baf17025d225c6bb9dcacf/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fworld%2Fblocks%2Fpower%2FSolarGenerator.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fworld%2Fblocks%2Fpower%2FSolarGenerator.java?ref=c8eee3b82588be8be3baf17025d225c6bb9dcacf",
      "patch": "@@ -2,8 +2,11 @@\n \n import io.anuke.arc.collection.EnumSet;\n import io.anuke.mindustry.entities.type.TileEntity;\n+import io.anuke.mindustry.world.*;\n import io.anuke.mindustry.world.meta.StatUnit;\n \n+import static io.anuke.mindustry.Vars.state;\n+\n public class SolarGenerator extends PowerGenerator{\n \n     public SolarGenerator(String name){\n@@ -12,6 +15,11 @@ public SolarGenerator(String name){\n         flags = EnumSet.of();\n     }\n \n+    @Override\n+    public void update(Tile tile){\n+        tile.<GeneratorEntity>entity().productionEfficiency = state.rules.lighting ? 1f - state.rules.ambientLight.a : 1f;\n+    }\n+\n     @Override\n     public void setStats(){\n         super.setStats();\n@@ -22,7 +30,7 @@ public void setStats(){\n \n     @Override\n     public TileEntity newEntity(){\n-        return new PowerGenerator.GeneratorEntity(){{\n+        return new GeneratorEntity(){{\n             productionEfficiency = 1.0f;\n         }};\n     }",
      "parent_sha": "73b6cc73ff6e745121a873cdc4437abf67e9386b"
    }
  },
  {
    "oid": "d7dc180a3fd1227349fe3ff6a24bc4753a25c953",
    "message": "Fixed #9628",
    "date": "2024-03-09T02:04:35Z",
    "url": "https://github.com/Anuken/Mindustry/commit/d7dc180a3fd1227349fe3ff6a24bc4753a25c953",
    "details": {
      "sha": "a3e65423dd3b4ab8e07a3e42e0e47bfd1fe6ecbd",
      "filename": "core/src/mindustry/input/InputHandler.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/d7dc180a3fd1227349fe3ff6a24bc4753a25c953/core%2Fsrc%2Fmindustry%2Finput%2FInputHandler.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/d7dc180a3fd1227349fe3ff6a24bc4753a25c953/core%2Fsrc%2Fmindustry%2Finput%2FInputHandler.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Finput%2FInputHandler.java?ref=d7dc180a3fd1227349fe3ff6a24bc4753a25c953",
      "patch": "@@ -1179,7 +1179,7 @@ protected void showSchematicSave(){\n \n         var last = lastSchematic;\n \n-        ui.showTextInput(\"@schematic.add\", \"@name\", \"\", text -> {\n+        ui.showTextInput(\"@schematic.add\", \"@name\", 1000, \"\", text -> {\n             Schematic replacement = schematics.all().find(s -> s.name().equals(text));\n             if(replacement != null){\n                 ui.showConfirm(\"@confirm\", \"@schematic.replace\", () -> {",
      "parent_sha": "9e503efd2f4a0fa1720cb90bcd3874a0b2662f7f"
    }
  },
  {
    "oid": "cd88400154ac20a6b774e6ce36e7bbb78f0c9084",
    "message": "Better Mod/Plugin dependencies handling (#6328)\n\n* Dependencies goes brrrr\r\n\r\n* mmh, maybe voiding exception in findMeta ?\r\n\r\n* Let Anuke code handle everything\r\n\r\nI trust the Cat :^)\r\n\r\n* My god, I sleep too much...\r\n\r\n* Forgot that one...",
    "date": "2022-01-11T04:43:11Z",
    "url": "https://github.com/Anuken/Mindustry/commit/cd88400154ac20a6b774e6ce36e7bbb78f0c9084",
    "details": {
      "sha": "538a3450d59790149e00576a983743d433f29719",
      "filename": "core/src/mindustry/mod/Mods.java",
      "status": "modified",
      "additions": 89,
      "deletions": 12,
      "changes": 101,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/cd88400154ac20a6b774e6ce36e7bbb78f0c9084/core%2Fsrc%2Fmindustry%2Fmod%2FMods.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/cd88400154ac20a6b774e6ce36e7bbb78f0c9084/core%2Fsrc%2Fmindustry%2Fmod%2FMods.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fmod%2FMods.java?ref=cd88400154ac20a6b774e6ce36e7bbb78f0c9084",
      "patch": "@@ -355,10 +355,13 @@ public boolean skipModLoading(){\n \n     /** Loads all mods from the folder, but does not call any methods on them.*/\n     public void load(){\n-        for(Fi file : modDirectory.list()){\n-            if(!file.extension().equals(\"jar\") && !file.extension().equals(\"zip\") && !(file.isDirectory() && (file.child(\"mod.json\").exists() || file.child(\"mod.hjson\").exists()))) continue;\n+        var files = resolveDependencies(Seq.with(modDirectory.list()).filter(f ->\n+            f.extension().equals(\"jar\") || f.extension().equals(\"zip\") || (f.isDirectory() && (f.child(\"mod.json\").exists() || f.child(\"mod.hjson\").exists()))\n+        ));\n \n+        for(Fi file : files){\n             Log.debug(\"[Mods] Loading mod @\", file);\n+\n             try{\n                 LoadedMod mod = loadMod(file);\n                 mods.add(mod);\n@@ -373,7 +376,7 @@ public void load(){\n         }\n \n         //load workshop mods now\n-        for(Fi file : platform.getWorkshopContent(LoadedMod.class)){\n+        for(Fi file : resolveDependencies(platform.getWorkshopContent(LoadedMod.class))){\n             try{\n                 LoadedMod mod = loadMod(file);\n                 mods.add(mod);\n@@ -708,6 +711,86 @@ public void contextRun(LoadedMod mod, Runnable run){\n         }\n     }\n \n+    /** Tries to find the config file of a mod/plugin. */\n+    @Nullable\n+    public ModMeta findMeta(Fi file){\n+        Fi metaFile =\n+            file.child(\"mod.json\").exists() ?       file.child(\"mod.json\") :\n+            file.child(\"mod.hjson\").exists() ?      file.child(\"mod.hjson\") :\n+            file.child(\"plugin.json\").exists() ?    file.child(\"plugin.json\") :\n+            file.child(\"plugin.hjson\");\n+\n+        if(!metaFile.exists()){\n+            return null;\n+        }\n+\n+        ModMeta meta = json.fromJson(ModMeta.class, Jval.read(metaFile.readString()).toString(Jformat.plain));\n+        meta.cleanup();\n+        return meta;\n+    }\n+\n+    /** Resolves the loading order of a list mods/plugins using their internal names.\n+     * It also skips non-mods files or folders. */\n+    public Seq<Fi> resolveDependencies(Seq<Fi> files){\n+        ObjectMap<String, Fi> fileMapping = new ObjectMap<>();\n+        ObjectMap<String, Seq<String>> dependencies = new ObjectMap<>();\n+\n+        for(Fi file : files){\n+            Fi zip = file.isDirectory() ? file : new ZipFi(file);\n+\n+            if(zip.list().length == 1 && zip.list()[0].isDirectory()){\n+                zip = zip.list()[0];\n+            }\n+\n+            ModMeta meta = null;\n+            try{\n+                meta = findMeta(zip);\n+            }catch(Exception ignored){\n+            }\n+\n+            if(meta == null) continue;\n+            dependencies.put(meta.name, meta.dependencies);\n+            fileMapping.put(meta.name, file);\n+        }\n+\n+        ObjectSet<String> visited = new ObjectSet<>();\n+        OrderedSet<String> ordered = new OrderedSet<>();\n+\n+        for(String modName : dependencies.keys()){\n+            if(!ordered.contains(modName)){\n+                // Adds the loaded mods at the beginning of the list\n+                ordered.add(modName, 0);\n+                resolveDependencies(modName, dependencies, ordered, visited);\n+                visited.clear();\n+            }\n+        }\n+\n+        // Adds the invalid mods\n+        for(String missingMod : dependencies.keys()){\n+            if(!ordered.contains(missingMod)) ordered.add(missingMod, 0);\n+        }\n+\n+        Seq<Fi> resolved = ordered.orderedItems().map(fileMapping::get);\n+        // Since the resolver explores the dependencies from leaves to the root, reverse the seq\n+        resolved.reverse();\n+        return resolved;\n+    }\n+\n+    /** Recursive search of dependencies */\n+    public void resolveDependencies(String modName, ObjectMap<String, Seq<String>> dependencies, OrderedSet<String> ordered, ObjectSet<String> visited){\n+        visited.add(modName);\n+\n+        for(String dependency : dependencies.get(modName)){\n+            // Checks if the dependency tree isn't circular and that the dependency is not missing\n+            if(!visited.contains(dependency) && dependencies.containsKey(dependency)){\n+                // Skips if the dependency was already explored in a separate tree\n+                if(ordered.contains(dependency)) continue;\n+                ordered.add(dependency);\n+                resolveDependencies(dependency, dependencies, ordered, visited);\n+            }\n+        }\n+    }\n+\n     /** Loads a mod file+meta, but does not add it to the list.\n      * Note that directories can be loaded as mods. */\n     private LoadedMod loadMod(Fi sourceFile) throws Exception{\n@@ -727,19 +810,13 @@ private LoadedMod loadMod(Fi sourceFile, boolean overwrite) throws Exception{\n                 zip = zip.list()[0];\n             }\n \n-            Fi metaf =\n-                zip.child(\"mod.json\").exists() ? zip.child(\"mod.json\") :\n-                zip.child(\"mod.hjson\").exists() ? zip.child(\"mod.hjson\") :\n-                zip.child(\"plugin.json\").exists() ? zip.child(\"plugin.json\") :\n-                zip.child(\"plugin.hjson\");\n+            ModMeta meta = findMeta(zip);\n \n-            if(!metaf.exists()){\n-                Log.warn(\"Mod @ doesn't have a '[mod/plugin].[h]json' file, skipping.\", sourceFile);\n+            if(meta == null){\n+                Log.warn(\"Mod @ doesn't have a '[mod/plugin].[h]json' file, skipping.\", zip);\n                 throw new ModLoadException(\"Invalid file: No mod.json found.\");\n             }\n \n-            ModMeta meta = json.fromJson(ModMeta.class, Jval.read(metaf.readString()).toString(Jformat.plain));\n-            meta.cleanup();\n             String camelized = meta.name.replace(\" \", \"\");\n             String mainClass = meta.main == null ? camelized.toLowerCase(Locale.ROOT) + \".\" + camelized + \"Mod\" : meta.main;\n             String baseName = meta.name.toLowerCase(Locale.ROOT).replace(\" \", \"-\");",
      "parent_sha": "1d14fa78bf9ebc1f33d895cebd870795599c1728"
    }
  },
  {
    "oid": "2dd234d96029f871fa5130b1024a61608b901d34",
    "message": "oopeth",
    "date": "2020-10-22T02:32:29Z",
    "url": "https://github.com/Anuken/Mindustry/commit/2dd234d96029f871fa5130b1024a61608b901d34",
    "details": {
      "sha": "633ad1e3692bb6ac9e3dae8ea8eb38dad0adda62",
      "filename": "core/src/mindustry/entities/abilities/MovementLightningAbility.java",
      "status": "modified",
      "additions": 8,
      "deletions": 6,
      "changes": 14,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/2dd234d96029f871fa5130b1024a61608b901d34/core%2Fsrc%2Fmindustry%2Fentities%2Fabilities%2FMovementLightningAbility.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/2dd234d96029f871fa5130b1024a61608b901d34/core%2Fsrc%2Fmindustry%2Fentities%2Fabilities%2FMovementLightningAbility.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fentities%2Fabilities%2FMovementLightningAbility.java?ref=2dd234d96029f871fa5130b1024a61608b901d34",
      "patch": "@@ -5,15 +5,17 @@\n import mindustry.content.*;\n import mindustry.entities.*;\n import mindustry.gen.*;\n+import static mindustry.Vars.*;\n \n public class MovementLightningAbility extends Ability{\n-    public float damage = 35f, length = 10f, reload = 0.15;\n+    public float damage = 35f, reload = 0.15f;\n+    public int length = 12f;\n     public float minSpeed = 0.8f, maxSpeed = 1.2f;\n     public Effect shootEffect = Fx.lightningShoot;\n     \n     MovementLightningAbility(){}\n     \n-    public MovementLightningAbility(float damage, float length, float reload, float minSpeed, float maxSpeed){\n+    public MovementLightningAbility(float damage, int length, float reload, float minSpeed, float maxSpeed){\n         this.damage = damage;\n         this.length = length;\n         this.reload = reload;\n@@ -23,10 +25,10 @@ public MovementLightningAbility(float damage, float length, float reload, float\n     \n     @Override\n     public void update(Unit unit){\n-        scl = Mathf.clamp((unit.velocity().len() - minSpeed) / (maxSpeed - minSpeed));\n-        if(Mathf.chance(Time.delta() * (reload * scl))){\n-            shootEffect.at(unit.x, unit.y, unit.rotation, unit.team.color());\n-            Lightning.create(unit.team, unit.team.color(), damage, unit.x + unit.velocity().x, unit.y + unit.velocity().y, unit.rotation, length);\n+        float scl = Mathf.clamp((unit.vel().len() - minSpeed) / (maxSpeed - minSpeed));\n+        if(Mathf.chance(Time.delta * (reload * scl))){\n+            shootEffect.at(unit.x, unit.y, unit.rotation, unit.team.color);\n+            Lightning.create(unit.team, unit.team.color, damage * Vars.state.rules.playerDamageMultiplie, unit.x + unit.vel().x, unit.y + unit.vel().y, unit.rotation, length);\n         }\n     }\n }\n\\ No newline at end of file",
      "parent_sha": "43d1f363e56cd64026f17bc21ee2a43255f767b2"
    }
  },
  {
    "oid": "d8cd07127c0d476e964b8731723b77fdd56817df",
    "message": "print mod load time to log",
    "date": "2020-08-19T06:07:56Z",
    "url": "https://github.com/Anuken/Mindustry/commit/d8cd07127c0d476e964b8731723b77fdd56817df",
    "details": {
      "sha": "0b80960ba7b6ad7eb48cedecb5080b3986022dff",
      "filename": "core/src/mindustry/mod/Mods.java",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/d8cd07127c0d476e964b8731723b77fdd56817df/core%2Fsrc%2Fmindustry%2Fmod%2FMods.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/d8cd07127c0d476e964b8731723b77fdd56817df/core%2Fsrc%2Fmindustry%2Fmod%2FMods.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fmod%2FMods.java?ref=d8cd07127c0d476e964b8731723b77fdd56817df",
      "patch": "@@ -454,7 +454,7 @@ public void loadScripts(){\n             content.setCurrentMod(null);\n         }\n \n-        Log.debug(\"Time to initialize modded scripts: @\", Time.elapsed());\n+        Log.info(\"Time to initialize modded scripts: @\", Time.elapsed());\n     }\n \n     /** Creates all the content found in mod files. */\n@@ -586,6 +586,8 @@ public void contextRun(LoadedMod mod, Runnable run){\n     /** Loads a mod file+meta, but does not add it to the list.\n      * Note that directories can be loaded as mods.*/\n     private LoadedMod loadMod(Fi sourceFile) throws Exception{\n+        Time.mark();\n+\n         Fi zip = sourceFile.isDirectory() ? sourceFile : new ZipFi(sourceFile);\n         if(zip.list().length == 1 && zip.list()[0].isDirectory()){\n             zip = zip.list()[0];\n@@ -637,6 +639,7 @@ private LoadedMod loadMod(Fi sourceFile) throws Exception{\n             meta.hidden = true;\n         }\n \n+        Log.info(\"Loaded mod '@' in @\", meta.name, Time.elapsed());\n         return new LoadedMod(sourceFile, zip, mainMod, meta);\n     }\n ",
      "parent_sha": "7ebe84cc0ee8713ea184d49045354e13dbe1c4c7"
    }
  },
  {
    "oid": "3d8d84177b2d820b982d3e4391f72acfeb8fcb88",
    "message": "Map listing improvements",
    "date": "2021-07-05T01:30:47Z",
    "url": "https://github.com/Anuken/Mindustry/commit/3d8d84177b2d820b982d3e4391f72acfeb8fcb88",
    "details": {
      "sha": "e25d44d6f526d485d256af8e8e7a3bbac54ab34a",
      "filename": "server/src/mindustry/server/ServerControl.java",
      "status": "modified",
      "additions": 21,
      "deletions": 9,
      "changes": 30,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/3d8d84177b2d820b982d3e4391f72acfeb8fcb88/server%2Fsrc%2Fmindustry%2Fserver%2FServerControl.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/3d8d84177b2d820b982d3e4391f72acfeb8fcb88/server%2Fsrc%2Fmindustry%2Fserver%2FServerControl.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/server%2Fsrc%2Fmindustry%2Fserver%2FServerControl.java?ref=3d8d84177b2d820b982d3e4391f72acfeb8fcb88",
      "patch": "@@ -345,16 +345,28 @@ protected void registerCommands(){\n             }\n         });\n \n-        handler.register(\"maps\", \"[all]\", \"Display available maps. 'all' to include default maps.\", arg -> {\n-            boolean all = arg.length > 0 && arg[0].equalsIgnoreCase(\"all\");\n+        handler.register(\"maps\", \"[all/custom/default]\", \"Display available maps. Displays only custom maps by default.\", arg -> {\n+            boolean custom = arg.length == 0 || arg[0].equals(\"custom\") || arg[0].equals(\"all\");\n+            boolean def = arg.length > 0 && (arg[0].equals(\"default\") || arg[0].equals(\"all\"));\n+\n             if(!maps.all().isEmpty()){\n-                info(\"Maps:\");\n-                for(Map map : all ? maps.all() : maps.customMaps()){\n-                    String mapName = Strings.stripColors(map.name()).replace(' ', '_');\n-                    if(map.custom){\n-                        info(\"  @ (@): &fiCustom / @x@\", mapName, map.file.name(), map.width, map.height);\n-                    }else{\n-                        info(\"  @: &fiDefault / @x@\", mapName, map.width, map.height);\n+                Seq<Map> all = new Seq<>();\n+\n+                if(custom) all.addAll(maps.customMaps());\n+                if(def) all.addAll(maps.defaultMaps());\n+\n+                if(all.isEmpty()){\n+                    info(\"No custom maps loaded. &fiTo display built-in maps, use the \\\"@\\\" argument.\", \"all\");\n+                }else{\n+                    info(\"Maps:\");\n+\n+                    for(Map map : all){\n+                        String mapName = Strings.stripColors(map.name()).replace(' ', '_');\n+                        if(map.custom){\n+                            info(\"  @ (@): &fiCustom / @x@\", mapName, map.file.name(), map.width, map.height);\n+                        }else{\n+                            info(\"  @: &fiDefault / @x@\", mapName, map.width, map.height);\n+                        }\n                     }\n                 }\n             }else{",
      "parent_sha": "789e35440028f32ae087633eb68521da8c605ba8"
    }
  },
  {
    "oid": "af81000d26cbe64f3754deeb06529800e4672d85",
    "message": "Unit requirements tweaks",
    "date": "2022-02-07T22:54:19Z",
    "url": "https://github.com/Anuken/Mindustry/commit/af81000d26cbe64f3754deeb06529800e4672d85",
    "details": {
      "sha": "b3f2362d99bb3adde91f770cd0e9328ab7dadae0",
      "filename": "core/src/mindustry/content/Blocks.java",
      "status": "modified",
      "additions": 7,
      "deletions": 10,
      "changes": 17,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/af81000d26cbe64f3754deeb06529800e4672d85/core%2Fsrc%2Fmindustry%2Fcontent%2FBlocks.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/af81000d26cbe64f3754deeb06529800e4672d85/core%2Fsrc%2Fmindustry%2Fcontent%2FBlocks.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fcontent%2FBlocks.java?ref=af81000d26cbe64f3754deeb06529800e4672d85",
      "patch": "@@ -3488,41 +3488,38 @@ Items.fissileMatter, new ArtilleryBulletType(2.5f, 300, \"shell\"){{\n         //endregion\n         //region units - erekir\n \n-        //TODO requirements\n         tankAssembler = new UnitAssembler(\"tank-assembler\"){{\n             requirements(Category.units, with(Items.graphite, 600, Items.beryllium, 600, Items.oxide, 200, Items.tungsten, 500));\n             size = 5;\n-            plans.add(new AssemblerUnitPlan(UnitTypes.vanquish, 60f * 10f, BlockStack.list(Blocks.tungstenWallLarge, 6, Blocks.duct, 14, Blocks.cliffCrusher, 10)));\n+            //TODO requirements?\n+            plans.add(new AssemblerUnitPlan(UnitTypes.vanquish, 60f * 35f, BlockStack.list(Blocks.tungstenWallLarge, 6, Blocks.duct, 14, Blocks.cliffCrusher, 10)));\n             consumes.power(3f);\n             areaSize = 13;\n \n-            //TODO unit production is rarely continuous, can be double\n-            consumes.liquid(Liquids.gallium, 1f / 60f);\n+            consumes.liquid(Liquids.gallium, 2f / 60f);\n         }};\n \n         //TODO requirements\n         shipAssembler = new UnitAssembler(\"ship-assembler\"){{\n             requirements(Category.units, with(Items.beryllium, 700, Items.oxide, 150, Items.tungsten, 500, Items.silicon, 800));\n             size = 5;\n-            plans.add(new AssemblerUnitPlan(UnitTypes.quell, 60f * 4f, BlockStack.list(Blocks.tungstenWallLarge, 5, Blocks.plasmaBore, 2)));\n+            plans.add(new AssemblerUnitPlan(UnitTypes.quell, 60f * 25f, BlockStack.list(Blocks.tungstenWallLarge, 5, Blocks.plasmaBore, 2)));\n             consumes.power(2f);\n             areaSize = 13;\n \n-            //TODO unit production is rarely continuous, can be double\n-            consumes.liquid(Liquids.gallium, 1f / 60f);\n+            consumes.liquid(Liquids.gallium, 2f / 60f);\n \n         }};\n \n         //TODO requirements\n         mechAssembler = new UnitAssembler(\"mech-assembler\"){{\n             requirements(Category.units, with(Items.graphite, 600, Items.carbide, 600, Items.oxide, 200, Items.tungsten, 500));\n             size = 5;\n-            plans.add(new AssemblerUnitPlan(UnitTypes.bulwark, 60f * 4f, BlockStack.list(Blocks.tungstenWallLarge, 5, Blocks.duct, 2)));\n+            plans.add(new AssemblerUnitPlan(UnitTypes.bulwark, 60f * 40f, BlockStack.list(Blocks.tungstenWallLarge, 5, Blocks.duct, 2)));\n             consumes.power(2f);\n             areaSize = 13;\n \n-            //TODO unit production is rarely continuous, can be double\n-            consumes.liquid(Liquids.gallium, 1f / 60f);\n+            consumes.liquid(Liquids.gallium, 2f / 60f);\n \n         }};\n ",
      "parent_sha": "eddac79c540d6c1eb191dc6db09e58d0a071046c"
    }
  },
  {
    "oid": "9bd494504e7b4480f5469d0974d241c1a59e75f4",
    "message": "angleOffset is added twice in Weapon shoot (#9332)",
    "date": "2023-11-30T12:18:40Z",
    "url": "https://github.com/Anuken/Mindustry/commit/9bd494504e7b4480f5469d0974d241c1a59e75f4",
    "details": {
      "sha": "51136e5a6b181355a81064298da4e4cac12025d7",
      "filename": "core/src/mindustry/type/Weapon.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/9bd494504e7b4480f5469d0974d241c1a59e75f4/core%2Fsrc%2Fmindustry%2Ftype%2FWeapon.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/9bd494504e7b4480f5469d0974d241c1a59e75f4/core%2Fsrc%2Fmindustry%2Ftype%2FWeapon.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Ftype%2FWeapon.java?ref=9bd494504e7b4480f5469d0974d241c1a59e75f4",
      "patch": "@@ -468,7 +468,7 @@ protected void bullet(Unit unit, WeaponMount mount, float xOffset, float yOffset\n         bulletY = mountY + Angles.trnsy(weaponRotation, this.shootX + xOffset + xSpread, this.shootY + yOffset),\n         shootAngle = bulletRotation(unit, mount, bulletX, bulletY) + angleOffset,\n         lifeScl = bullet.scaleLife ? Mathf.clamp(Mathf.dst(bulletX, bulletY, mount.aimX, mount.aimY) / bullet.range) : 1f,\n-        angle = angleOffset + shootAngle + Mathf.range(inaccuracy + bullet.inaccuracy);\n+        angle = shootAngle + Mathf.range(inaccuracy + bullet.inaccuracy);\n \n         Entityc shooter = unit.controller() instanceof MissileAI ai ? ai.shooter : unit; //Pass the missile's shooter down to its bullets\n         mount.bullet = bullet.create(unit, shooter, unit.team, bulletX, bulletY, angle, -1f, (1f - velocityRnd) + Mathf.random(velocityRnd), lifeScl, null, mover, mount.aimX, mount.aimY);",
      "parent_sha": "871209d88050428e4917dad7c73b9f61ef7c2100"
    }
  },
  {
    "oid": "77a8cfa89423365a73256c57307e36b7af358447",
    "message": "Changes how building selection keybindings are generated (#6916)\n\nCo-authored-by: Garen7 <Garen7@users.noreply.github.com>",
    "date": "2022-06-08T13:02:39Z",
    "url": "https://github.com/Anuken/Mindustry/commit/77a8cfa89423365a73256c57307e36b7af358447",
    "details": {
      "sha": "121137b2747d7691fc8b82432abb5895478579d5",
      "filename": "core/src/mindustry/ui/fragments/PlacementFragment.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/77a8cfa89423365a73256c57307e36b7af358447/core%2Fsrc%2Fmindustry%2Fui%2Ffragments%2FPlacementFragment.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/77a8cfa89423365a73256c57307e36b7af358447/core%2Fsrc%2Fmindustry%2Fui%2Ffragments%2FPlacementFragment.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fui%2Ffragments%2FPlacementFragment.java?ref=77a8cfa89423365a73256c57307e36b7af358447",
      "patch": "@@ -547,7 +547,7 @@ Seq<Category> getCategories(){\n     }\n \n     Seq<Block> getByCategory(Category cat){\n-        return returnArray.selectFrom(content.blocks(), block -> block.category == cat && block.isVisible());\n+        return returnArray.selectFrom(content.blocks(), block -> block.category == cat && block.isVisible() && block.environmentBuildable());\n     }\n \n     Seq<Block> getUnlockedByCategory(Category cat){",
      "parent_sha": "81753047ebc4fe95f6397490ac5388b964e58df9"
    }
  },
  {
    "oid": "8f39def9935bc40e90ea781336603b7922068101",
    "message": "Changed wiki link to point to unfinished 4.0 wiki",
    "date": "2019-06-08T14:56:47Z",
    "url": "https://github.com/Anuken/Mindustry/commit/8f39def9935bc40e90ea781336603b7922068101",
    "details": {
      "sha": "41a1196d70b7d3494a6708fac331f514aed992fe",
      "filename": "core/src/io/anuke/mindustry/ui/Links.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/8f39def9935bc40e90ea781336603b7922068101/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fui%2FLinks.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/8f39def9935bc40e90ea781336603b7922068101/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fui%2FLinks.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fui%2FLinks.java?ref=8f39def9935bc40e90ea781336603b7922068101",
      "patch": "@@ -10,7 +10,7 @@ private static void createLinks(){\n         links = new LinkEntry[]{\n         new LinkEntry(\"discord\", \"https://discord.gg/mindustry\", Color.valueOf(\"7289da\")),\n         new LinkEntry(\"trello\", \"https://trello.com/b/aE2tcUwF\", Color.valueOf(\"026aa7\")),\n-        new LinkEntry(\"wiki\", \"http://mindustry.wikia.com/wiki/Mindustry_Wiki\", Color.valueOf(\"0f142f\")),\n+        new LinkEntry(\"wiki\", \"https://mindustrygame.github.io/wiki/\", Color.valueOf(\"0f142f\")),\n         new LinkEntry(\"itch.io\", \"https://anuke.itch.io/mindustry\", Color.valueOf(\"fa5c5c\")),\n         new LinkEntry(\"google-play\", \"https://play.google.com/store/apps/details?id=io.anuke.mindustry\", Color.valueOf(\"689f38\")),\n         new LinkEntry(\"github\", \"https://github.com/Anuken/Mindustry/\", Color.valueOf(\"24292e\")),",
      "parent_sha": "0be674d7af65d8ad2e5959930b88190fd2612db4"
    }
  },
  {
    "oid": "1c0d148607889286c736ee6dcb701f43a9fafa4a",
    "message": "Removed same if statement. (#4607)\n\nRemoved an if statement that was the same of the one up.",
    "date": "2021-02-06T23:13:48Z",
    "url": "https://github.com/Anuken/Mindustry/commit/1c0d148607889286c736ee6dcb701f43a9fafa4a",
    "details": {
      "sha": "85499dd1d29d991bc47a957be8e4a2c64ec87e79",
      "filename": "core/src/mindustry/net/Net.java",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/1c0d148607889286c736ee6dcb701f43a9fafa4a/core%2Fsrc%2Fmindustry%2Fnet%2FNet.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/1c0d148607889286c736ee6dcb701f43a9fafa4a/core%2Fsrc%2Fmindustry%2Fnet%2FNet.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fnet%2FNet.java?ref=1c0d148607889286c736ee6dcb701f43a9fafa4a",
      "patch": "@@ -274,9 +274,7 @@ public void handleClientReceived(Object object){\n     public void handleServerReceived(NetConnection connection, Object object){\n \n         if(serverListeners.get(object.getClass()) != null){\n-            if(serverListeners.get(object.getClass()) != null){\n-                serverListeners.get(object.getClass()).get(connection, object);\n-            }\n+            serverListeners.get(object.getClass()).get(connection, object);\n             Pools.free(object);\n         }else{\n             Log.err(\"Unhandled packet type: '@'!\", object.getClass());",
      "parent_sha": "95c8b7ae604d0a03519be4602cf5c61b98a41cdc"
    }
  },
  {
    "oid": "227fb388b853a4cfdcf01d4b93dd2f35d69184ed",
    "message": "Update building consume module before main update",
    "date": "2021-09-05T15:18:31Z",
    "url": "https://github.com/Anuken/Mindustry/commit/227fb388b853a4cfdcf01d4b93dd2f35d69184ed",
    "details": {
      "sha": "1462800774903b835510ef250480c856f1916913",
      "filename": "core/src/mindustry/entities/comp/BuildingComp.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/227fb388b853a4cfdcf01d4b93dd2f35d69184ed/core%2Fsrc%2Fmindustry%2Fentities%2Fcomp%2FBuildingComp.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/227fb388b853a4cfdcf01d4b93dd2f35d69184ed/core%2Fsrc%2Fmindustry%2Fentities%2Fcomp%2FBuildingComp.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fentities%2Fcomp%2FBuildingComp.java?ref=227fb388b853a4cfdcf01d4b93dd2f35d69184ed",
      "patch": "@@ -1509,6 +1509,10 @@ public void update(){\n             }\n         }\n \n+        if(cons != null){\n+            cons.update();\n+        }\n+\n         if(enabled || !block.noUpdateDisabled){\n             updateTile();\n         }\n@@ -1521,10 +1525,6 @@ public void update(){\n             liquids.update(updateFlow);\n         }\n \n-        if(cons != null){\n-            cons.update();\n-        }\n-\n         if(power != null){\n             power.graph.update();\n         }",
      "parent_sha": "89d495fdb1583998a0966bf634bfcfd21e50abb0"
    }
  },
  {
    "oid": "8eb4d25638eb51891a326fd1de3adc072a633849",
    "message": "Fixed error on exiting with custom map on server",
    "date": "2019-08-19T13:42:45Z",
    "url": "https://github.com/Anuken/Mindustry/commit/8eb4d25638eb51891a326fd1de3adc072a633849",
    "details": {
      "sha": "124b90df6d792a25d4423fe6360504510e920f51",
      "filename": "core/src/io/anuke/mindustry/ui/dialogs/PausedDialog.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/8eb4d25638eb51891a326fd1de3adc072a633849/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fui%2Fdialogs%2FPausedDialog.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/8eb4d25638eb51891a326fd1de3adc072a633849/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fui%2Fdialogs%2FPausedDialog.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fui%2Fdialogs%2FPausedDialog.java?ref=8eb4d25638eb51891a326fd1de3adc072a633849",
      "patch": "@@ -106,7 +106,7 @@ public void runExitSave(){\n             return;\n         }\n \n-        if(control.saves.getCurrent() == null || !control.saves.getCurrent().isAutosave() || state.rules.tutorial){\n+        if(control.saves.getCurrent() == null || !control.saves.getCurrent().isAutosave() || state.rules.tutorial || Net.client()){\n             state.set(State.menu);\n             logic.reset();\n             return;",
      "parent_sha": "191c6e90161e81e0a09949c1f1cf956033c5ea48"
    }
  },
  {
    "oid": "e4d3c8fb0571b56e0675de8c15469aacaa0804d5",
    "message": "Cleanup",
    "date": "2025-04-04T17:39:56Z",
    "url": "https://github.com/Anuken/Mindustry/commit/e4d3c8fb0571b56e0675de8c15469aacaa0804d5",
    "details": {
      "sha": "5425212ea4b00324c546c9b820f3759693620366",
      "filename": "core/src/mindustry/type/UnitType.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/e4d3c8fb0571b56e0675de8c15469aacaa0804d5/core%2Fsrc%2Fmindustry%2Ftype%2FUnitType.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/e4d3c8fb0571b56e0675de8c15469aacaa0804d5/core%2Fsrc%2Fmindustry%2Ftype%2FUnitType.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Ftype%2FUnitType.java?ref=e4d3c8fb0571b56e0675de8c15469aacaa0804d5",
      "patch": "@@ -758,7 +758,7 @@ protected void validateWeapons(){\n         }\n     }\n \n-    protected void checkEntityMapping(){\n+    protected void checkEntityMapping(Unit example){\n         if(constructor == null) throw new IllegalArgumentException(Strings.format(\"\"\"\n             No constructor set up for unit '@': Assign `constructor = [your unit constructor]`. Vanilla defaults are:\n               \"flying\": UnitEntity::create\n@@ -777,8 +777,6 @@ protected void checkEntityMapping(){\n         // In most cases, if the constructor is a Vanilla class, things should work just fine.\n         if(EntityMapping.map(name) == null) EntityMapping.nameMap.put(name, constructor);\n \n-        Unit example = constructor.get();\n-\n         // Sanity checks; this is an EXTREMELY COMMON pitfalls Java modders fall into.\n         int classId = example.classId();\n         if(\n@@ -801,7 +799,9 @@ protected void checkEntityMapping(){\n     public void init(){\n         super.init();\n \n-        checkEntityMapping();\n+        Unit example = constructor.get();\n+\n+        checkEntityMapping(example);\n \n         allowLegStep = example instanceof Legsc || example instanceof Crawlc;\n ",
      "parent_sha": "7472fe5c12a3f71885cc2b82fedc4b81610f4fbf"
    }
  },
  {
    "oid": "7954788da31ebbdcda0fa9630ac0f6022a87340a",
    "message": "changed phase radius boost\n\nSplit into phase radius boost and phase shield boost.",
    "date": "2020-08-22T16:00:50Z",
    "url": "https://github.com/Anuken/Mindustry/commit/7954788da31ebbdcda0fa9630ac0f6022a87340a",
    "details": {
      "sha": "6497f448d58e8d8fc8cf6a32a4830677b94a7c2d",
      "filename": "core/src/mindustry/world/blocks/defense/ForceProjector.java",
      "status": "modified",
      "additions": 7,
      "deletions": 6,
      "changes": 13,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/7954788da31ebbdcda0fa9630ac0f6022a87340a/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fdefense%2FForceProjector.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/7954788da31ebbdcda0fa9630ac0f6022a87340a/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fdefense%2FForceProjector.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fdefense%2FForceProjector.java?ref=7954788da31ebbdcda0fa9630ac0f6022a87340a",
      "patch": "@@ -22,7 +22,8 @@ public class ForceProjector extends Block{\n     public final int timerUse = timers++;\n     public float phaseUseTime = 350f;\n \n-    public float phaseBoost = 80f;\n+    public float phaseRadiusBoost = 80f;\n+    public float phaseShieldBoost = 400f;\n     public float radius = 101.7f;\n     public float breakage = 550f;\n     public float cooldownNormal = 1.75f;\n@@ -63,8 +64,8 @@ public void setStats(){\n         stats.add(BlockStat.shieldHealth, breakage, StatUnit.none);\n         stats.add(BlockStat.cooldownTime, (int) (breakage / cooldownBrokenBase / 60f), StatUnit.seconds);\n         stats.add(BlockStat.powerUse, basePowerDraw * 60f, StatUnit.powerSecond);\n-        stats.add(BlockStat.boostEffect, phaseBoost / tilesize, StatUnit.blocks);\n-        stats.add(BlockStat.boostEffect, phaseBoost * 5f, StatUnit.shieldHealth);\n+        stats.add(BlockStat.boostEffect, phaseRadiusBoost / tilesize, StatUnit.blocks);\n+        stats.add(BlockStat.boostEffect, phaseShieldBoost * 5f, StatUnit.shieldHealth);\n     }\n \n     @Override\n@@ -79,7 +80,7 @@ public void drawPlace(int x, int y, int rotation, boolean valid){\n         Lines.poly(x * tilesize, y * tilesize, 6, radius);\n         Draw.color();\n \n-        float phaseBoostedRadius = radius + phaseBoost;\n+        float phaseBoostedRadius = radius + phaseRadiusBoost;\n         Draw.color(Pal.gray);\n         Lines.stroke(3f);\n         Lines.poly(x * tilesize, y * tilesize, 6, phaseBoostedRadius);\n@@ -130,7 +131,7 @@ public void updateTile(){\n                 broken = false;\n             }\n \n-            if(buildup >= breakage + (phaseBoost * 5f) && !broken){\n+            if(buildup >= breakage + phaseShieldBoost && !broken){\n                 broken = true;\n                 buildup = breakage;\n                 Fx.shieldBreak.at(x, y, radius, team.color);\n@@ -149,7 +150,7 @@ public void updateTile(){\n         }\n \n         float realRadius(){\n-            return (radius + phaseHeat * phaseBoost) * radscl;\n+            return (radius + phaseHeat * phaseRadiusBoost) * radscl;\n         }\n \n         @Override",
      "parent_sha": "0c4e58ee2ba815d3408d6f7a9bf886a9a53827d8"
    }
  },
  {
    "oid": "2a7e56460354a4cc017b456d8b3ff78e001812f6",
    "message": "Cleanup",
    "date": "2024-10-31T22:15:02Z",
    "url": "https://github.com/Anuken/Mindustry/commit/2a7e56460354a4cc017b456d8b3ff78e001812f6",
    "details": {
      "sha": "575d5ffc0bfc40f78d61a4704c00b118ded7558d",
      "filename": "core/src/mindustry/entities/comp/BuilderComp.java",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/2a7e56460354a4cc017b456d8b3ff78e001812f6/core%2Fsrc%2Fmindustry%2Fentities%2Fcomp%2FBuilderComp.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/2a7e56460354a4cc017b456d8b3ff78e001812f6/core%2Fsrc%2Fmindustry%2Fentities%2Fcomp%2FBuilderComp.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fentities%2Fcomp%2FBuilderComp.java?ref=2a7e56460354a4cc017b456d8b3ff78e001812f6",
      "patch": "@@ -1,7 +1,6 @@\n package mindustry.entities.comp;\n \n import arc.*;\n-import arc.func.*;\n import arc.graphics.*;\n import arc.graphics.g2d.*;\n import arc.math.*;\n@@ -143,7 +142,7 @@ public void updateBuildLogic(){\n                         //derelict repair\n                         (tile.team() == Team.derelict && tile.block() == current.block && tile.build != null && tile.block().allowDerelictRepair && state.rules.derelictRepair) ||\n                         //make sure there's at least 1 item of each type first\n-                        !Structs.contains(current.block.requirements, i -> core != null && !core.items.has(i.item, Math.min(Mathf.round(i.amount * state.rules.buildCostMultiplier), 1)));\n+                        !Structs.contains(current.block.requirements, i -> !core.items.has(i.item, Math.min(Mathf.round(i.amount * state.rules.buildCostMultiplier), 1)));\n \n                         if(hasAll){\n                             Call.beginPlace(self(), current.block, team, current.x, current.y, current.rotation);\n@@ -200,11 +199,10 @@ public void updateBuildLogic(){\n \n     /** Draw all current build plans. Does not draw the beam effect, only the positions. */\n     void drawBuildPlans(){\n-        Boolf<BuildPlan> skip = plan -> plan.progress > 0.01f || (buildPlan() == plan && plan.initialized && (within(plan.x * tilesize, plan.y * tilesize, type.buildRange) || state.isEditor()));\n \n         for(int i = 0; i < 2; i++){\n             for(BuildPlan plan : plans){\n-                if(skip.get(plan)) continue;\n+                if(plan.progress > 0.01f || (buildPlan() == plan && plan.initialized && (within(plan.x * tilesize, plan.y * tilesize, type.buildRange) || state.isEditor()))) continue;\n                 if(i == 0){\n                     drawPlan(plan, 1f);\n                 }else{",
      "parent_sha": "8b48113764972d4229f78460c1dfc27e7d22ceb9"
    }
  },
  {
    "oid": "6e7613dee31776d0990fb2fa6c1e22a7b4cf5597",
    "message": "Fixes",
    "date": "2024-05-27T21:34:34Z",
    "url": "https://github.com/Anuken/Mindustry/commit/6e7613dee31776d0990fb2fa6c1e22a7b4cf5597",
    "details": {
      "sha": "09b89f79a82793613233536c1e508fdbe88a4ded",
      "filename": "core/src/mindustry/core/Platform.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/6e7613dee31776d0990fb2fa6c1e22a7b4cf5597/core%2Fsrc%2Fmindustry%2Fcore%2FPlatform.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/6e7613dee31776d0990fb2fa6c1e22a7b4cf5597/core%2Fsrc%2Fmindustry%2Fcore%2FPlatform.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fcore%2FPlatform.java?ref=6e7613dee31776d0990fb2fa6c1e22a7b4cf5597",
      "patch": "@@ -155,7 +155,7 @@ default void showFileChooser(boolean open, String title, String extension, Cons<\n                     if(open){\n                         result = FileDialogs.openFileDialog(formatted, FileChooser.getLastDirectory().absolutePath(), new String[]{\"*.\" + extension}, \".\" + extension + \" files\", false);\n                     }else{\n-                        result = FileDialogs.saveFileDialog(formatted, FileChooser.getLastDirectory().absolutePath(), new String[]{\"*.\" + extension}, \".\" + extension + \" files\");\n+                        result = FileDialogs.saveFileDialog(formatted, FileChooser.getLastDirectory().child(\"file.\" + extension).absolutePath(), new String[]{\"*.\" + extension}, \".\" + extension + \" files\");\n                     }\n \n                     if(result == null) return;",
      "parent_sha": "9ac8d9a821618b3521909550a2692dc4089b6a62"
    }
  },
  {
    "oid": "b5bec065fe89b3d58a998aa10f52868ecdedf1a9",
    "message": "Fix mis-coloring of entity \"tile\"",
    "date": "2019-10-12T17:15:47Z",
    "url": "https://github.com/Anuken/Mindustry/commit/b5bec065fe89b3d58a998aa10f52868ecdedf1a9",
    "details": {
      "sha": "47d496e463d3856b9130f9b78baa7d107a216afc",
      "filename": "core/src/io/anuke/mindustry/graphics/MinimapRenderer.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/b5bec065fe89b3d58a998aa10f52868ecdedf1a9/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fgraphics%2FMinimapRenderer.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/b5bec065fe89b3d58a998aa10f52868ecdedf1a9/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fgraphics%2FMinimapRenderer.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fgraphics%2FMinimapRenderer.java?ref=b5bec065fe89b3d58a998aa10f52868ecdedf1a9",
      "patch": "@@ -84,8 +84,8 @@ public void drawEntities(float x, float y, float w, float h, boolean withLabels)\n         rect.set((dx - sz) * tilesize, (dy - sz) * tilesize, sz * 2 * tilesize, sz * 2 * tilesize);\n \n         for(Unit unit : units){\n-            float rx = (unit.x - rect.x) / rect.width * w, ry = (unit.y - rect.y) / rect.width * h;\n-            Draw.color(unit.getTeam().color);\n+            float rx = (unit.x - rect.x) / rect.width * w;\n+            float ry = (unit.y - rect.y) / rect.width * h;\n \n             if (withLabels && unit instanceof Player) {\n                 Player pl = (Player) unit;\n@@ -95,6 +95,7 @@ public void drawEntities(float x, float y, float w, float h, boolean withLabels)\n                 }\n             }\n \n+            Draw.color(unit.getTeam().color);\n             Fill.rect(x + rx, y + ry, Scl.scl(baseSize / 2f), Scl.scl(baseSize / 2f));\n         }\n ",
      "parent_sha": "243862804a60239d49c6e3f8e2228bffb9fbd164"
    }
  },
  {
    "oid": "82f0d6a542ea1f987fb34eb0d0433b74d8466c33",
    "message": "Fixed core capture crash",
    "date": "2021-07-20T14:28:58Z",
    "url": "https://github.com/Anuken/Mindustry/commit/82f0d6a542ea1f987fb34eb0d0433b74d8466c33",
    "details": {
      "sha": "7cc16ad30690019dbd1e238e07b8973a304209b3",
      "filename": "core/src/mindustry/world/blocks/storage/CoreBlock.java",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/82f0d6a542ea1f987fb34eb0d0433b74d8466c33/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fstorage%2FCoreBlock.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/82f0d6a542ea1f987fb34eb0d0433b74d8466c33/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fstorage%2FCoreBlock.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fstorage%2FCoreBlock.java?ref=82f0d6a542ea1f987fb34eb0d0433b74d8466c33",
      "patch": "@@ -282,8 +282,11 @@ public void onDestroyed(){\n         public void afterDestroyed(){\n             if(state.rules.coreCapture){\n                 tile.setNet(block, lastDamage, 0);\n-                //core is invincible for several seconds to prevent recapture\n-                ((CoreBuild)tile.build).iframes = captureInvicibility;\n+                //building does not exist on client yet\n+                if(!net.client()){\n+                    //core is invincible for several seconds to prevent recapture\n+                    ((CoreBuild)tile.build).iframes = captureInvicibility;\n+                }\n             }\n         }\n ",
      "parent_sha": "40e0303786598e9dec992d980f71ff2d10902d18"
    }
  },
  {
    "oid": "00ecf372762eaa10fbb76f51945c961da31c9be9",
    "message": "Fixed #9539",
    "date": "2024-02-12T01:14:48Z",
    "url": "https://github.com/Anuken/Mindustry/commit/00ecf372762eaa10fbb76f51945c961da31c9be9",
    "details": {
      "sha": "cd62301fae9b8efbab189e92f91834436ad89af2",
      "filename": "core/src/mindustry/service/Achievement.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/00ecf372762eaa10fbb76f51945c961da31c9be9/core%2Fsrc%2Fmindustry%2Fservice%2FAchievement.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/00ecf372762eaa10fbb76f51945c961da31c9be9/core%2Fsrc%2Fmindustry%2Fservice%2FAchievement.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fservice%2FAchievement.java?ref=00ecf372762eaa10fbb76f51945c961da31c9be9",
      "patch": "@@ -39,7 +39,7 @@ public enum Achievement{\n     issueAttackCommand,\n     active100Units(SStat.maxUnitActive, 100),\n     build1000Units(SStat.unitsBuilt, 1000),\n-    buildAllUnits(SStat.unitTypesBuilt, 30),\n+    buildAllUnits(SStat.unitTypesBuilt, 50),\n     buildT5,\n     pickupT5,\n     active10Polys,",
      "parent_sha": "da0bcdcca3be4c07b2713993c53d83f143557306"
    }
  },
  {
    "oid": "6e3cc13a26cf6660f92e734ad1d63f2ef62950e5",
    "message": "Fixed logic scroll bar glitch",
    "date": "2024-08-24T20:01:06Z",
    "url": "https://github.com/Anuken/Mindustry/commit/6e3cc13a26cf6660f92e734ad1d63f2ef62950e5",
    "details": {
      "sha": "3a49fcb8bfdd72b158628ab8c5b825f96f2763f4",
      "filename": "core/src/mindustry/logic/LCanvas.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/6e3cc13a26cf6660f92e734ad1d63f2ef62950e5/core%2Fsrc%2Fmindustry%2Flogic%2FLCanvas.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/6e3cc13a26cf6660f92e734ad1d63f2ef62950e5/core%2Fsrc%2Fmindustry%2Flogic%2FLCanvas.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Flogic%2FLCanvas.java?ref=6e3cc13a26cf6660f92e734ad1d63f2ef62950e5",
      "patch": "@@ -128,6 +128,8 @@ public void rebuild(){\n         if(toLoad != null){\n             load(toLoad);\n         }\n+\n+        Core.app.post(() -> statements.invalidateHierarchy());\n     }\n \n     @Override\n@@ -257,7 +259,7 @@ public void layout(){\n                 }\n             }\n \n-            invalidateHierarchy();\n+            if(parent != null) parent.invalidateHierarchy();\n \n             if(parent != null && parent instanceof Table){\n                 setCullingArea(parent.getCullingArea());",
      "parent_sha": "22bd8c634fd043352eb57095ddc16b2d21451177"
    }
  },
  {
    "oid": "31ad220fef84ab1e6d284087623b16ccd3935fc1",
    "message": "Fixed #10186",
    "date": "2024-10-04T18:24:55Z",
    "url": "https://github.com/Anuken/Mindustry/commit/31ad220fef84ab1e6d284087623b16ccd3935fc1",
    "details": {
      "sha": "1889e0ac9244015fbddfc9a12040e6d2db80e756",
      "filename": "core/src/mindustry/world/blocks/environment/StaticWall.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/31ad220fef84ab1e6d284087623b16ccd3935fc1/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fenvironment%2FStaticWall.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/31ad220fef84ab1e6d284087623b16ccd3935fc1/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fenvironment%2FStaticWall.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fenvironment%2FStaticWall.java?ref=31ad220fef84ab1e6d284087623b16ccd3935fc1",
      "patch": "@@ -33,7 +33,7 @@ public void drawBase(Tile tile){\n         int rx = tile.x / 2 * 2;\n         int ry = tile.y / 2 * 2;\n \n-        if(Core.atlas.isFound(large) && eq(rx, ry) && Mathf.randomSeed(Point2.pack(rx, ry)) < 0.5){\n+        if(Core.atlas.isFound(large) && eq(rx, ry) && Mathf.randomSeed(Point2.pack(rx, ry)) < 0.5 && split.length >= 2 && split[0].length >= 2){\n             Draw.rect(split[tile.x % 2][1 - tile.y % 2], tile.worldx(), tile.worldy());\n         }else if(variants > 0){\n             Draw.rect(variantRegions[Mathf.randomSeed(tile.pos(), 0, Math.max(0, variantRegions.length - 1))], tile.worldx(), tile.worldy());",
      "parent_sha": "2ad1044d7317ccde9a1221796f0c2f8bc23374ad"
    }
  },
  {
    "oid": "d4111b8e768f4bf78f4390e89e8c013f36ba5843",
    "message": "Fixed #8854",
    "date": "2023-07-28T03:40:48Z",
    "url": "https://github.com/Anuken/Mindustry/commit/d4111b8e768f4bf78f4390e89e8c013f36ba5843",
    "details": {
      "sha": "70034869a9487dd8b4451cc9354a83d5f0354eaa",
      "filename": "core/src/mindustry/world/blocks/units/UnitAssembler.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/d4111b8e768f4bf78f4390e89e8c013f36ba5843/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Funits%2FUnitAssembler.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/d4111b8e768f4bf78f4390e89e8c013f36ba5843/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Funits%2FUnitAssembler.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Funits%2FUnitAssembler.java?ref=d4111b8e768f4bf78f4390e89e8c013f36ba5843",
      "patch": "@@ -594,7 +594,7 @@ public PayloadSeq getPayloads(){\n         public boolean acceptPayload(Building source, Payload payload){\n             var plan = plan();\n             return (this.payload == null || source instanceof UnitAssemblerModuleBuild) &&\n-                    plan.requirements.contains(b -> b.item == payload.content() && blocks.get(payload.content()) < Mathf.round(b.amount * team.rules().unitCostMultiplier));\n+                    plan.requirements.contains(b -> b.item == payload.content() && blocks.get(payload.content()) < Mathf.round(b.amount * state.rules.unitCost(team)));\n         }\n \n         @Override",
      "parent_sha": "2bae95d2a86c3619767f753de0a7a33c4654b023"
    }
  },
  {
    "oid": "b8d7c64a5fbfa070ca70ff341f3325529461beac",
    "message": "PlasmaBore efficiency increase",
    "date": "2021-12-06T19:39:40Z",
    "url": "https://github.com/Anuken/Mindustry/commit/b8d7c64a5fbfa070ca70ff341f3325529461beac",
    "details": {
      "sha": "e44118bc3c6bf49251cfaca5537a864f3edff1e1",
      "filename": "core/src/mindustry/content/Blocks.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/b8d7c64a5fbfa070ca70ff341f3325529461beac/core%2Fsrc%2Fmindustry%2Fcontent%2FBlocks.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/b8d7c64a5fbfa070ca70ff341f3325529461beac/core%2Fsrc%2Fmindustry%2Fcontent%2FBlocks.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fcontent%2FBlocks.java?ref=b8d7c64a5fbfa070ca70ff341f3325529461beac",
      "patch": "@@ -2199,7 +2199,7 @@ public static void load(){\n         plasmaBore = new BeamDrill(\"plasma-bore\"){{\n             requirements(Category.production, with(Items.graphite, 20, Items.beryllium, 30));\n             consumes.power(0.2f);\n-            drillTime = 200f;\n+            drillTime = 150f;\n             tier = 4;\n             size = 2;\n             range = 3; //TODO make it 2?\n@@ -2212,7 +2212,7 @@ public static void load(){\n             //TODO requirements\n             requirements(Category.production, with(Items.graphite, 30, Items.oxide, 30, Items.beryllium, 20, Items.carbide, 30));\n             consumes.power(0.6f);\n-            drillTime = 170f;\n+            drillTime = 110f;\n             tier = 5;\n             size = 3;\n             range = 6;",
      "parent_sha": "26692a31992b2b28a793f9bbd67c2abc54d82cc2"
    }
  },
  {
    "oid": "e9131b4631acf548f320b7155459640c082875bc",
    "message": "Minor payload acceptor fixes",
    "date": "2020-10-17T21:05:34Z",
    "url": "https://github.com/Anuken/Mindustry/commit/e9131b4631acf548f320b7155459640c082875bc",
    "details": {
      "sha": "3b4693c250298d06b2b7005ef969d4fbbbc0293c",
      "filename": "core/src/mindustry/world/blocks/production/PayloadAcceptor.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/e9131b4631acf548f320b7155459640c082875bc/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fproduction%2FPayloadAcceptor.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/e9131b4631acf548f320b7155459640c082875bc/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fproduction%2FPayloadAcceptor.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fworld%2Fblocks%2Fproduction%2FPayloadAcceptor.java?ref=e9131b4631acf548f320b7155459640c082875bc",
      "patch": "@@ -95,7 +95,7 @@ public boolean moveInPayload(){\n             updatePayload();\n \n             payRotation = Mathf.slerpDelta(payRotation, rotate ? rotdeg() : 90f, 0.3f);\n-            payVector.approachDelta(Vec2.ZERO, payloadSpeed);\n+            payVector.approach(Vec2.ZERO, payloadSpeed * delta());\n \n             return hasArrived();\n         }\n@@ -105,7 +105,7 @@ public void moveOutPayload(){\n \n             updatePayload();\n \n-            payVector.trns(rotdeg(), payVector.len() + edelta() * payloadSpeed);\n+            payVector.trns(rotdeg(), payVector.len() + delta() * payloadSpeed);\n             payRotation = rotdeg();\n \n             if(payVector.len() >= size * tilesize/2f){",
      "parent_sha": "5d9beb4c28e1bdb8c9df867a4a1bd7782fdc1045"
    }
  },
  {
    "oid": "3dae157a5e7e3cd863688a631e49748449cd645b",
    "message": "Extra validation",
    "date": "2020-10-28T23:35:15Z",
    "url": "https://github.com/Anuken/Mindustry/commit/3dae157a5e7e3cd863688a631e49748449cd645b",
    "details": {
      "sha": "4f5e632def4ed7aa0296dd229949fde90c166b2f",
      "filename": "core/src/mindustry/game/Schematics.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/3dae157a5e7e3cd863688a631e49748449cd645b/core%2Fsrc%2Fmindustry%2Fgame%2FSchematics.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/3dae157a5e7e3cd863688a631e49748449cd645b/core%2Fsrc%2Fmindustry%2Fgame%2FSchematics.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fgame%2FSchematics.java?ref=3dae157a5e7e3cd863688a631e49748449cd645b",
      "patch": "@@ -296,10 +296,11 @@ public ObjectMap<CoreBlock, Seq<Schematic>> getLoadouts(){\n     /** Checks a schematic for deployment validity and adds it to the cache. */\n     private void checkLoadout(Schematic s, boolean validate){\n         Stile core = s.tiles.find(t -> t.block instanceof CoreBlock);\n+        int cores = s.tiles.count(t -> t.block instanceof CoreBlock);\n \n         //make sure a core exists, and that the schematic is small enough.\n         if(core == null || (validate && (s.width > core.block.size + maxLoadoutSchematicPad *2 || s.height > core.block.size + maxLoadoutSchematicPad *2\n-            || s.tiles.contains(t -> t.block.buildVisibility == BuildVisibility.sandboxOnly)))) return;\n+            || s.tiles.contains(t -> t.block.buildVisibility == BuildVisibility.sandboxOnly || !t.block.unlocked()) || cores > 1))) return;\n \n         //place in the cache\n         loadouts.get((CoreBlock)core.block, Seq::new).add(s);",
      "parent_sha": "55a7089a3db9c1ea21f8dff48409dda7ca9ea895"
    }
  },
  {
    "oid": "230428f2e020693f2eeb679bd523833302e0002d",
    "message": "Update CoreBlock.java",
    "date": "2019-11-14T17:35:59Z",
    "url": "https://github.com/Anuken/Mindustry/commit/230428f2e020693f2eeb679bd523833302e0002d",
    "details": {
      "sha": "b5d7188d02581fcb62efda2a6e5d72014c372bfd",
      "filename": "core/src/io/anuke/mindustry/world/blocks/storage/CoreBlock.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/230428f2e020693f2eeb679bd523833302e0002d/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fworld%2Fblocks%2Fstorage%2FCoreBlock.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/230428f2e020693f2eeb679bd523833302e0002d/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fworld%2Fblocks%2Fstorage%2FCoreBlock.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fio%2Fanuke%2Fmindustry%2Fworld%2Fblocks%2Fstorage%2FCoreBlock.java?ref=230428f2e020693f2eeb679bd523833302e0002d",
      "patch": "@@ -132,7 +132,7 @@ public boolean isContainer(Tile tile){\n \n     @Override\n     public float handleDamage(Tile tile, float amount){\n-        it(player != null && tile.getTeam() == player.getTeam()){\n+        if(player != null && tile.getTeam() == player.getTeam()){\n             Events.fire(Trigger.teamCoreDamage);\n         }\n         return amount;",
      "parent_sha": "1a26a1bf63c12e6fdce0df0cfa5f7785a4d2eafc"
    }
  },
  {
    "oid": "7b686d56a867956437f191f269adc72583d23704",
    "message": "Scepter buff (#9226)\n\n* Update UnitTypes.java\r\n\r\n* Update UnitTypes.java\r\n\r\n* nevermind",
    "date": "2023-11-02T13:01:59Z",
    "url": "https://github.com/Anuken/Mindustry/commit/7b686d56a867956437f191f269adc72583d23704",
    "details": {
      "sha": "f35ae0d9f9cf26f5fda315adcaaab0d353f500ba",
      "filename": "core/src/mindustry/content/UnitTypes.java",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/Anuken/Mindustry/blob/7b686d56a867956437f191f269adc72583d23704/core%2Fsrc%2Fmindustry%2Fcontent%2FUnitTypes.java",
      "raw_url": "https://github.com/Anuken/Mindustry/raw/7b686d56a867956437f191f269adc72583d23704/core%2Fsrc%2Fmindustry%2Fcontent%2FUnitTypes.java",
      "contents_url": "https://api.github.com/repos/Anuken/Mindustry/contents/core%2Fsrc%2Fmindustry%2Fcontent%2FUnitTypes.java?ref=7b686d56a867956437f191f269adc72583d23704",
      "patch": "@@ -197,6 +197,8 @@ public static void load(){\n             singleTarget = true;\n             drownTimeMultiplier = 4f;\n \n+            abilities.add(new ShieldRegenFieldAbility(25f, 500f, 60f * 1, 60f));\n+\n             BulletType smallBullet = new BasicBulletType(3f, 10){{\n                 width = 7f;\n                 height = 9f;\n@@ -219,10 +221,10 @@ public static void load(){\n                 shoot.shots = 3;\n                 shoot.shotDelay = 4f;\n \n-                bullet = new BasicBulletType(7f, 50){{\n+                bullet = new BasicBulletType(8f, 80){{\n                     width = 11f;\n                     height = 20f;\n-                    lifetime = 25f;\n+                    lifetime = 27f;\n                     shootEffect = Fx.shootBig;\n                     lightning = 2;\n                     lightningLength = 6;",
      "parent_sha": "1cdbb562f890c56019959f76ce411c338b599a08"
    }
  }
]