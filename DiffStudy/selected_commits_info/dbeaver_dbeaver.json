[
  {
    "oid": "d113eb8ea4ee63f130e1f08bab6dbebc979829a9",
    "message": "#6345 Expand nodes in the detached job\n\n\nFormer-commit-id: 9f2bfeb6a78f47cec6f32931b695907520b1c0bf",
    "date": "2019-08-29T14:57:10Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/d113eb8ea4ee63f130e1f08bab6dbebc979829a9",
    "details": {
      "sha": "2e3537a38efbe8751e7682e186782e7dc83f71bc",
      "filename": "plugins/org.jkiss.dbeaver.ui.navigator/src/org/jkiss/dbeaver/ui/navigator/NavigatorStatePersistor.java",
      "status": "modified",
      "additions": 37,
      "deletions": 8,
      "changes": 45,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/d113eb8ea4ee63f130e1f08bab6dbebc979829a9/plugins%2Forg.jkiss.dbeaver.ui.navigator%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fnavigator%2FNavigatorStatePersistor.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/d113eb8ea4ee63f130e1f08bab6dbebc979829a9/plugins%2Forg.jkiss.dbeaver.ui.navigator%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fnavigator%2FNavigatorStatePersistor.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ui.navigator%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fnavigator%2FNavigatorStatePersistor.java?ref=d113eb8ea4ee63f130e1f08bab6dbebc979829a9",
      "patch": "@@ -16,17 +16,20 @@\n  */\n package org.jkiss.dbeaver.ui.navigator;\n \n+import org.eclipse.core.runtime.IStatus;\n+import org.eclipse.core.runtime.Status;\n import org.eclipse.jface.viewers.TreeViewer;\n import org.eclipse.ui.IMemento;\n import org.jkiss.dbeaver.DBException;\n import org.jkiss.dbeaver.Log;\n import org.jkiss.dbeaver.model.DBPDataSourceContainer;\n import org.jkiss.dbeaver.model.navigator.DBNDataSource;\n import org.jkiss.dbeaver.model.navigator.DBNNode;\n+import org.jkiss.dbeaver.model.runtime.AbstractJob;\n import org.jkiss.dbeaver.model.runtime.DBRProgressMonitor;\n import org.jkiss.dbeaver.model.runtime.DBRRunnableWithProgress;\n-import org.jkiss.dbeaver.runtime.DBWorkbench;\n import org.jkiss.dbeaver.ui.UIUtils;\n+import org.jkiss.utils.ArrayUtils;\n \n import java.lang.reflect.InvocationTargetException;\n \n@@ -41,27 +44,53 @@ public void saveState(Object[] expandedElements, IMemento memento) {\n     }\n \n     public void restoreState(final TreeViewer navigatorViewer, final DBNNode rootNode, int maxDepth, final IMemento memento) {\n+        if (memento == null || ArrayUtils.isEmpty(memento.getAttributeKeys())) {\n+            return;\n+        }\n+\n         DBRRunnableWithProgress runnable = (monitor) -> {\n             try {\n                 if (memento != null) {\n+                    monitor.beginTask(\"Expan navigator nodes\", memento.getAttributeKeys().length);\n                     for (int i = 0; i < memento.getAttributeKeys().length; i++) {\n+                        if (monitor.isCanceled()) {\n+                            break;\n+                        }\n                         String nodeIdentifier = memento.getString(KEY_PREFIX + i);\n+                        monitor.subTask(\"Expan node \" + nodeIdentifier);\n                         DBNNode node = findNode(nodeIdentifier, rootNode, 1, maxDepth, monitor);\n                         if (node != null && !node.isDisposed()) {\n-                            navigatorViewer.setExpandedState(node, true);\n+                            UIUtils.syncExec(() -> {\n+                                navigatorViewer.setExpandedState(node, true);\n+                            });\n                         }\n                     }\n+                    monitor.done();\n                 }\n             } catch (Exception e) {\n                 throw new InvocationTargetException(e);\n             }\n         };\n-        try {\n-            UIUtils.runInUI(runnable);\n-        } catch (Exception e) {\n-            // this operation should be fail-safe\n-            log.error(\"Can't restore navigator tree state\", e);\n-        }\n+\n+        AbstractJob expandJob = new AbstractJob(\"Expand navigator nodes\") {\n+            {\n+                setSystem(false);\n+                setUser(true);\n+            }\n+\n+            @Override\n+            protected IStatus run(DBRProgressMonitor monitor) {\n+                try {\n+                    runnable.run(monitor);\n+                } catch (InvocationTargetException e) {\n+                    log.error(e);\n+                } catch (InterruptedException e) {\n+                    // ignore\n+                }\n+                return Status.OK_STATUS;\n+            }\n+        };\n+        UIUtils.asyncExec(expandJob::schedule);\n     }\n \n     private DBNNode findNode(String nodeIdentifier, DBNNode rootNode, int currentDepth, int maxDepth, DBRProgressMonitor monitor) throws DBException {",
      "parent_sha": "3d69a06fdcc6106a58bfd667b086ffe29760777b"
    }
  },
  {
    "oid": "4d2337dd1a8e4ef6329adbc5eb4c6a82b355e14d",
    "message": "Compile fix\n\n\nFormer-commit-id: fb83a9a0e7cb5b72a8897fd82e37f1f9f8d51e83",
    "date": "2019-12-30T14:28:08Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/4d2337dd1a8e4ef6329adbc5eb4c6a82b355e14d",
    "details": {
      "sha": "0dc03128cd0aced5cb59f73d5a391f7224f69f1e",
      "filename": "plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/sql/PostgreDollarQuoteRule.java",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/4d2337dd1a8e4ef6329adbc5eb4c6a82b355e14d/plugins%2Forg.jkiss.dbeaver.ext.postgresql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fpostgresql%2Fsql%2FPostgreDollarQuoteRule.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/4d2337dd1a8e4ef6329adbc5eb4c6a82b355e14d/plugins%2Forg.jkiss.dbeaver.ext.postgresql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fpostgresql%2Fsql%2FPostgreDollarQuoteRule.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ext.postgresql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fpostgresql%2Fsql%2FPostgreDollarQuoteRule.java?ref=4d2337dd1a8e4ef6329adbc5eb4c6a82b355e14d",
      "patch": "@@ -16,7 +16,6 @@\n  */\n package org.jkiss.dbeaver.ext.postgresql.sql;\n \n-import org.eclipse.jface.text.rules.ICharacterScanner;\n import org.jkiss.dbeaver.ext.postgresql.PostgreConstants;\n import org.jkiss.dbeaver.model.DBPDataSourceContainer;\n import org.jkiss.dbeaver.model.sql.parser.tokens.SQLBlockToggleToken;\n@@ -79,7 +78,7 @@ public TPToken evaluate(TPCharacterScanner scanner, boolean resume) {\n                         for (;;) {\n                             c = scanner.read();\n                             totalRead++;\n-                            if (c == ICharacterScanner.EOF) {\n+                            if (c == TPCharacterScanner.EOF) {\n                                 break;\n                             }\n                             if (c == '$') {",
      "parent_sha": "6ed598bf69e6b5db923dcae909f191a9a4fb8031"
    }
  },
  {
    "oid": "2334dcc63fdcc09212727e56408675270c24a0f6",
    "message": "PG source viewer lister refactoring\n\n\nFormer-commit-id: 3e5e1adcbfef2c26873e59c5997c91c11a5df48f",
    "date": "2018-04-09T09:28:52Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/2334dcc63fdcc09212727e56408675270c24a0f6",
    "details": {
      "sha": "cc5bbbcc8f8a8007e5b0c5ae31c1cdd6a6393be3",
      "filename": "plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/ui/editors/PostgreSourceViewEditor.java",
      "status": "modified",
      "additions": 25,
      "deletions": 19,
      "changes": 44,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/2334dcc63fdcc09212727e56408675270c24a0f6/plugins%2Forg.jkiss.dbeaver.ext.postgresql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fpostgresql%2Fui%2Feditors%2FPostgreSourceViewEditor.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/2334dcc63fdcc09212727e56408675270c24a0f6/plugins%2Forg.jkiss.dbeaver.ext.postgresql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fpostgresql%2Fui%2Feditors%2FPostgreSourceViewEditor.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ext.postgresql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fpostgresql%2Fui%2Feditors%2FPostgreSourceViewEditor.java?ref=2334dcc63fdcc09212727e56408675270c24a0f6",
      "patch": "@@ -46,42 +46,48 @@\n /**\n  * PostgreSourceViewEditor\n  */\n-public class PostgreSourceViewEditor extends SQLSourceViewer<PostgreScriptObject> implements EventHandler {\n+public class PostgreSourceViewEditor extends SQLSourceViewer<PostgreScriptObject> {\n     \n     private static final String TOPIC_DEBUGGER_SOURCE = GeneralUtils.encodeTopic(DBPScriptObject.OPTION_DEBUGGER_SOURCE);\n     private Button omitHeaderCheck;\n     private boolean showPermissions = true;\n     private boolean showColumnComments = true;\n \n     private IEventBroker eventBroker;\n+    private TopicEventHandler topicEventHandler = new TopicEventHandler();\n \n     public PostgreSourceViewEditor()\n     {\n     }\n-    \n-    @Override\n-    public void handleEvent(Event event) {\n-        String topic = event.getTopic();\n-        if (TOPIC_DEBUGGER_SOURCE.equals(topic)) {\n-            Object data = event.getProperty(IEventBroker.DATA);\n-            if (data instanceof String) {\n-                String nodePath = (String) data;\n-                IDatabaseEditorInput editorInput = getEditorInput();\n-                if (nodePath.equals(editorInput.getNavigatorNode().getNodeItemPath())) {\n-                    Object omitValue = editorInput.getAttribute(DBPScriptObject.OPTION_DEBUGGER_SOURCE);\n-                    boolean omitHeader = Boolean.parseBoolean(String.valueOf(omitValue));\n-                    if (!omitHeader) {\n-                        setOmitHeader(true);\n+\n+    private class TopicEventHandler implements EventHandler {\n+\n+        @Override\n+        public void handleEvent(Event event) {\n+            String topic = event.getTopic();\n+            if (TOPIC_DEBUGGER_SOURCE.equals(topic)) {\n+                Object data = event.getProperty(IEventBroker.DATA);\n+                if (data instanceof String) {\n+                    String nodePath = (String) data;\n+                    IDatabaseEditorInput editorInput = getEditorInput();\n+                    if (nodePath.equals(editorInput.getNavigatorNode().getNodeItemPath())) {\n+                        Object omitValue = editorInput.getAttribute(DBPScriptObject.OPTION_DEBUGGER_SOURCE);\n+                        boolean omitHeader = Boolean.parseBoolean(String.valueOf(omitValue));\n+                        if (!omitHeader) {\n+                            setOmitHeader(true);\n+                        }\n                     }\n                 }\n             }\n         }\n+\n     }\n-    \n+\n     @Override\n     public void dispose() {\n         if (eventBroker != null) {\n-            eventBroker.unsubscribe(this);\n+            eventBroker.unsubscribe(topicEventHandler);\n+            eventBroker = null;\n         }\n         super.dispose();\n     }\n@@ -104,7 +110,7 @@ protected void contributeEditorCommands(IContributionManager contributionManager\n         super.contributeEditorCommands(contributionManager);\n         if (eventBroker == null) {\n             eventBroker = PostgreActivator.getDefault().getEventBroker();\n-            eventBroker.subscribe(TOPIC_DEBUGGER_SOURCE, this);\n+            eventBroker.subscribe(TOPIC_DEBUGGER_SOURCE, topicEventHandler);\n         }\n         PostgreScriptObject sourceObject = getSourceObject();\n         if (sourceObject instanceof PostgreProcedure) {\n@@ -160,7 +166,7 @@ public void widgetSelected(SelectionEvent e) {\n         }\n     }\n \n-    public void setOmitHeader(boolean omitHeader) {\n+    private void setOmitHeader(boolean omitHeader) {\n         Display.getDefault().syncExec(new Runnable() {\n             \n             @Override",
      "parent_sha": "994bf83266e11fafc7e1c851b827b5b3ff2884b8"
    }
  },
  {
    "oid": "0af52a63a07cf126080852f0ede8ca7c53dcf54d",
    "message": "#17036 Fix cursor position on right-clicking (#18067)",
    "date": "2022-10-31T15:15:43Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/0af52a63a07cf126080852f0ede8ca7c53dcf54d",
    "details": {
      "sha": "7ff0fe42911a813a0b0da44823847445d761e710",
      "filename": "plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/SQLEditorBase.java",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/0af52a63a07cf126080852f0ede8ca7c53dcf54d/plugins%2Forg.jkiss.dbeaver.ui.editors.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2FSQLEditorBase.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/0af52a63a07cf126080852f0ede8ca7c53dcf54d/plugins%2Forg.jkiss.dbeaver.ui.editors.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2FSQLEditorBase.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ui.editors.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2FSQLEditorBase.java?ref=0af52a63a07cf126080852f0ede8ca7c53dcf54d",
      "patch": "@@ -339,7 +339,12 @@ public void mouseUp(MouseEvent e) {\n                     int offset = widget.getOffsetAtPoint(new Point(e.x, e.y));\n \n                     if (offset < 0) {\n-                        offset = widget.getOffsetAtLine(widget.getLineIndex(e.y));\n+                        int lineIndex = widget.getLineIndex(e.y);\n+                        if (lineIndex + 1 >= widget.getLineCount()) {\n+                            offset = widget.getCharCount();\n+                        } else {\n+                            offset = widget.getOffsetAtLine(lineIndex + 1) - widget.getLineDelimiter().length();\n+                        }\n                     }\n \n                     if (offset < 0) {\n@@ -365,7 +370,7 @@ public void mouseUp(MouseEvent e) {\n                 }\n \n                 private boolean within(@NotNull IRegion region, int index) {\n-                    return region.getOffset() <= index && index < region.getOffset() + region.getLength();\n+                    return region.getLength() > 0 && region.getOffset() >= index && index < region.getOffset() + region.getLength();\n                 }\n             });\n         }",
      "parent_sha": "43059fdc81ba9e37b562fd1f38a955e1c9c7aa46"
    }
  },
  {
    "oid": "b1deb88946b75370a5406316dde43fcc156a7106",
    "message": "Connection keep-alive fix (force disconnect + ignore)\n\n\nFormer-commit-id: acffcfc034bfc2f02b00bc9257e0e1fa158c5e4d",
    "date": "2021-05-17T22:07:35Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/b1deb88946b75370a5406316dde43fcc156a7106",
    "details": {
      "sha": "385028a3e9ee2d10c31c63b0e62757c1bde580c3",
      "filename": "plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/runtime/jobs/KeepAlivePingJob.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/b1deb88946b75370a5406316dde43fcc156a7106/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fruntime%2Fjobs%2FKeepAlivePingJob.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/b1deb88946b75370a5406316dde43fcc156a7106/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fruntime%2Fjobs%2FKeepAlivePingJob.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fruntime%2Fjobs%2FKeepAlivePingJob.java?ref=b1deb88946b75370a5406316dde43fcc156a7106",
      "patch": "@@ -73,7 +73,7 @@ protected IStatus run(DBRProgressMonitor monitor) {\n                 () -> DBWorkbench.getPlatformUI().openConnectionEditor(dataSource.getContainer()));\n             synchronized (failedAttempts) {\n                 String dsId = dataSource.getContainer().getId();\n-                if (isSuccess(results)) {\n+                if (isSuccess(results) || disconnectOnError) {\n                     log.debug(\"Datasource \" + dataSource.getName() + \" invalidated: \" + results);\n                     failedAttempts.remove(dsId);\n                 } else {",
      "parent_sha": "2fe073f913335778841979ae48b30679155e43f4"
    }
  },
  {
    "oid": "3a8e69d3308b77fb78de80129f3b5a6ca487f20c",
    "message": "#4919 SQL Server: catalog search fix (with explicit schema)\n\n\nFormer-commit-id: 1b3e48ae58b1b1a62bed5398606cc98cc0cb1ef6",
    "date": "2019-01-09T09:51:18Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/3a8e69d3308b77fb78de80129f3b5a6ca487f20c",
    "details": {
      "sha": "b0d8891136f26d58dbe7437a2054ab3b077b9289",
      "filename": "plugins/org.jkiss.dbeaver.ext.mssql/src/org/jkiss/dbeaver/ext/mssql/model/SQLServerStructureAssistant.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/3a8e69d3308b77fb78de80129f3b5a6ca487f20c/plugins%2Forg.jkiss.dbeaver.ext.mssql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fmssql%2Fmodel%2FSQLServerStructureAssistant.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/3a8e69d3308b77fb78de80129f3b5a6ca487f20c/plugins%2Forg.jkiss.dbeaver.ext.mssql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fmssql%2Fmodel%2FSQLServerStructureAssistant.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ext.mssql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fmssql%2Fmodel%2FSQLServerStructureAssistant.java?ref=3a8e69d3308b77fb78de80129f3b5a6ca487f20c",
      "patch": "@@ -144,11 +144,11 @@ private void searchAllObjects(final JDBCSession session, final SQLServerDatabase\n         try (JDBCPreparedStatement dbStat = session.prepareStatement(\n             \"SELECT * FROM \" + SQLServerUtils.getSystemTableName(database, \"all_objects\") + \" o \" +\n                 \"WHERE o.type IN (\" + objectTypeClause.toString() + \") AND o.name LIKE ?\" +\n-                (schema == null ? \"\" : \"AND o.schema_id=? \")))\n+                (schema == null ? \"\" : \" AND o.schema_id=? \")))\n         {\n             dbStat.setString(1, objectNameMask);\n             if (schema != null) {\n-                dbStat.setString(2, schema.getName());\n+                dbStat.setLong(2, schema.getObjectId());\n             }\n             dbStat.setFetchSize(DBConstants.METADATA_FETCH_SIZE);\n             try (JDBCResultSet dbResult = dbStat.executeQuery()) {",
      "parent_sha": "5d4ec521cc66ae9771a8050658a3887018217de1"
    }
  },
  {
    "oid": "f8977b4dd245af9e0d454603f71ae2ff048a850f",
    "message": "SQL editor - partial column name completion support\n\nFormer-commit-id: d06f923a88385c336673cf0c281bad6c70a2f5d4",
    "date": "2013-08-19T08:23:41Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/f8977b4dd245af9e0d454603f71ae2ff048a850f",
    "details": {
      "sha": "b7a69bb44314f88bff64eb1ffadf73120cb7614c",
      "filename": "plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/editors/sql/syntax/SQLCompletionProcessor.java",
      "status": "modified",
      "additions": 11,
      "deletions": 4,
      "changes": 15,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/f8977b4dd245af9e0d454603f71ae2ff048a850f/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2Fsyntax%2FSQLCompletionProcessor.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/f8977b4dd245af9e0d454603f71ae2ff048a850f/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2Fsyntax%2FSQLCompletionProcessor.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2Fsyntax%2FSQLCompletionProcessor.java?ref=f8977b4dd245af9e0d454603f71ae2ff048a850f",
      "patch": "@@ -189,11 +189,18 @@ private void makeStructureProposals(\n                     makeProposalsFromChildren(monitor, rootObject, null, proposals);\r\n                 }\r\n             } else {\r\n-                // Get root object or objects from active database (if any)\r\n-                makeStructureProposals(monitor, dataSource, proposals);\r\n+                DBSObject rootObject = null;\r\n+                if (queryType == QueryType.COLUMN) {\r\n+                    // Part of column name\r\n+                    rootObject = getTableFromAlias(monitor, (DBSObjectContainer)dataSource, null);\r\n+                }\r\n+                if (rootObject != null) {\r\n+                    makeProposalsFromChildren(monitor, rootObject, wordPart, proposals);\r\n+                } else {\r\n+                    // Get root object or objects from active database (if any)\r\n+                    makeStructureProposals(monitor, dataSource, proposals);\r\n+                }\r\n             }\r\n-        //} else if (queryType == QueryType.COLUMN) {\r\n-\r\n         } else {\r\n             // Get list of sub-objects (filtered by wordPart)\r\n             makeStructureProposals(monitor, dataSource, proposals);\r",
      "parent_sha": "3a807ba8b7172abba294d760609ac4e0ab42616b"
    }
  },
  {
    "oid": "eb5be4646d7f4d77f5d3df94c4277f8b0f3b017a",
    "message": "Unit test fix\n\n\nFormer-commit-id: 59defdd889e22e83d3a4814eca8a0c660c560fa9",
    "date": "2020-10-21T17:53:32Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/eb5be4646d7f4d77f5d3df94c4277f8b0f3b017a",
    "details": {
      "sha": "9ba15a81f299cbb292bb562e96bdc3d4f49e7cd1",
      "filename": "test/org.jkiss.dbeaver.ext.postgresql.test/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreTableBaseTest.java",
      "status": "modified",
      "additions": 16,
      "deletions": 15,
      "changes": 31,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/eb5be4646d7f4d77f5d3df94c4277f8b0f3b017a/test%2Forg.jkiss.dbeaver.ext.postgresql.test%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fpostgresql%2Fmodel%2FPostgreTableBaseTest.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/eb5be4646d7f4d77f5d3df94c4277f8b0f3b017a/test%2Forg.jkiss.dbeaver.ext.postgresql.test%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fpostgresql%2Fmodel%2FPostgreTableBaseTest.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/test%2Forg.jkiss.dbeaver.ext.postgresql.test%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fpostgresql%2Fmodel%2FPostgreTableBaseTest.java?ref=eb5be4646d7f4d77f5d3df94c4277f8b0f3b017a",
      "patch": "@@ -45,9 +45,11 @@ public class PostgreTableBaseTest {\n     @Mock\n     PostgreDataSource mockDataSource;\n \n-    PostgreDatabase mockDatabase;\n-    PostgreRole mockUser;\n-    PostgreSchema mockSchema;\n+    PostgreDatabase testDatabase;\n+    PostgreRole testUSer;\n+    PostgreSchema testSchema;\n+    private PostgreView testView;\n+\n     @Mock\n     JDBCResultSet mockResults;\n     @Mock\n@@ -57,42 +59,41 @@ public class PostgreTableBaseTest {\n     @Mock\n     DBPDataSourceContainer mockDataSourceContainer;\n \n-    private PostgreView postgreView;\n     private final long sampleId = 111111;\n \n     @Before\n     public void setUp() throws Exception {\n         Mockito.when(mockDataSource.getSQLDialect()).thenReturn(new PostgreDialect());\n         Mockito.when(mockDataSource.isServerVersionAtLeast(Mockito.anyInt(), Mockito.anyInt())).thenReturn(false);\n-        Mockito.when(mockDataSource.getDefaultInstance()).thenReturn(mockDatabase);\n+        Mockito.when(mockDataSource.getDefaultInstance()).thenReturn(testDatabase);\n         Mockito.when(mockDataSource.getServerType()).thenReturn(mockPostgreServer);\n         Mockito.when(mockDataSource.getContainer()).thenReturn(mockDataSourceContainer);\n \n-        mockUser = new PostgreRole(null, \"tester\", \"test\", true);\n-        mockDatabase = new PostgreDatabase(new VoidProgressMonitor(), mockDataSource, \"testdb\", mockUser, null, null, null);\n-        mockSchema = new PostgreSchema(mockDatabase, \"test\", mockUser);\n+        testUSer = new PostgreRole(null, \"tester\", \"test\", true);\n+        testDatabase = new PostgreDatabase(new VoidProgressMonitor(), mockDataSource, \"testdb\", testUSer, null, null, null);\n+        testSchema = new PostgreSchema(testDatabase, \"test\", testUSer);\n \n         Mockito.when(mockDataSourceContainer.getPlatform()).thenReturn(DBWorkbench.getPlatform());\n \n         Mockito.when(mockResults.getString(\"relname\")).thenReturn(\"sampleTable\");\n         Mockito.when(mockResults.getLong(\"oid\")).thenReturn(sampleId);\n         Mockito.when(mockResults.getLong(\"relowner\")).thenReturn(sampleId);\n \n-        postgreView = new PostgreView(mockSchema);\n-        postgreView.setName(\"sampleView\");\n+        testView = new PostgreView(testSchema);\n+        testView.setName(\"sampleView\");\n     }\n \n     @Test\n     public void generateChangeOwnerQuery_whenProvidedView_thenShouldGenerateQuerySuccessfully() {\n-        Assert.assertEquals(\"ALTER TABLE sampleSchema.sampleView OWNER TO someOwner\",\n-                postgreView.generateChangeOwnerQuery(\"someOwner\"));\n+        Assert.assertEquals(\"ALTER TABLE \" + testSchema.getName() + \".\" + testView.getName() + \" OWNER TO someOwner\",\n+                testView.generateChangeOwnerQuery(\"someOwner\"));\n     }\n \n     @Test\n     public void generateTableDDL_whenTableHasOneColumn_returnDDLForASingleColumn() throws Exception {\n         PostgreTableColumn mockPostgreTableColumn = mockDbColumn(\"column1\", \"int4\", 1);\n         List<PostgreTableColumn> tableColumns = Collections.singletonList(mockPostgreTableColumn);\n-        PostgreTableRegular tableRegular = new PostgreTableRegular(mockSchema);\n+        PostgreTableRegular tableRegular = new PostgreTableRegular(testSchema);\n         tableRegular.setPartition(false);\n         addMockColumnsToTableCache(tableColumns, tableRegular);\n         String expectedDDL =\n@@ -111,7 +112,7 @@ public void generateTableDDL_whenTableHasOneColumn_returnDDLForASingleColumn() t\n \n     @Test\n     public void generateExtensionDDL_whenExtensionHasPublicSchemaAndNoVersion_returnDDLForExtensionWithPublicSchemaAndWithoutVersion() throws Exception {\n-        PostgreExtension postgreExtension = new PostgreExtension(mockDatabase);\n+        PostgreExtension postgreExtension = new PostgreExtension(testDatabase);\n         postgreExtension.setName(\"extName\");\n         String expectedDDL = \"-- Extension: extName\\n\\n\" +\n                                 \"-- DROP EXTENSION extName;\\n\\n\" +\n@@ -132,7 +133,7 @@ private PostgreTableColumn mockDbColumn(String columnName, String columnType, in\n \n     private void addMockColumnsToTableCache(List<PostgreTableColumn> tableColumns, PostgreTableRegular table)\n             throws DBException {\n-        Mockito.when(mockTableCache.getChildren(monitor, mockSchema, table)).thenReturn(tableColumns);\n+        Mockito.when(mockTableCache.getChildren(monitor, testSchema, table)).thenReturn(tableColumns);\n     }\n \n }\n\\ No newline at end of file",
      "parent_sha": "e2adfa5e15ce0704b845103a19c5cddceedba80a"
    }
  },
  {
    "oid": "b4ebc1640fa6837f124756db3f08e40bb2d9651c",
    "message": "Bring back connection folder setting\n\n\nFormer-commit-id: 867ee88d16db36f9809ade2c6680ee0de4243ebf",
    "date": "2020-04-13T16:35:18Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/b4ebc1640fa6837f124756db3f08e40bb2d9651c",
    "details": {
      "sha": "ed55144719fc1b3979ff2986490e843ca83fcb59",
      "filename": "plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/dialogs/connection/ConnectionPageGeneral.java",
      "status": "modified",
      "additions": 4,
      "deletions": 14,
      "changes": 18,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/b4ebc1640fa6837f124756db3f08e40bb2d9651c/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fdialogs%2Fconnection%2FConnectionPageGeneral.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/b4ebc1640fa6837f124756db3f08e40bb2d9651c/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fdialogs%2Fconnection%2FConnectionPageGeneral.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fdialogs%2Fconnection%2FConnectionPageGeneral.java?ref=b4ebc1640fa6837f124756db3f08e40bb2d9651c",
      "patch": "@@ -29,10 +29,7 @@\n import org.eclipse.swt.widgets.*;\n import org.jkiss.code.NotNull;\n import org.jkiss.dbeaver.core.CoreMessages;\n-import org.jkiss.dbeaver.model.DBPDataSourceContainer;\n-import org.jkiss.dbeaver.model.DBPDataSourceFolder;\n-import org.jkiss.dbeaver.model.DBPDataSourcePermission;\n-import org.jkiss.dbeaver.model.DBPDataSourceProvider;\n+import org.jkiss.dbeaver.model.*;\n import org.jkiss.dbeaver.model.connection.DBPConnectionConfiguration;\n import org.jkiss.dbeaver.model.connection.DBPConnectionType;\n import org.jkiss.dbeaver.model.navigator.DBNBrowseSettings;\n@@ -47,6 +44,7 @@\n import org.jkiss.dbeaver.ui.IHelpContextIds;\n import org.jkiss.dbeaver.ui.UIUtils;\n import org.jkiss.dbeaver.ui.controls.CSmartCombo;\n+import org.jkiss.dbeaver.ui.internal.UINavigatorMessages;\n import org.jkiss.dbeaver.ui.navigator.dialogs.EditObjectFilterDialog;\n import org.jkiss.dbeaver.ui.preferences.PrefPageConnectionTypes;\n import org.jkiss.utils.CommonUtils;\n@@ -79,7 +77,7 @@ private FilterInfo(Class<?> type, String title) {\n     private Text connectionNameText;\n     private CSmartCombo<DBPConnectionType> connectionTypeCombo;\n     private Combo navigatorSettingsCombo;\n-    //private Combo connectionFolderCombo;\n+    private Combo connectionFolderCombo;\n     private Text descriptionText;\n \n     private boolean connectionNameChanged = false;\n@@ -156,14 +154,12 @@ public void activatePage()\n                 connectionTypeCombo.select(conConfig.getConnectionType());\n                 updateNavigatorSettingsPreset();\n \n-                /*\n                 dataSourceFolder = dataSourceDescriptor.getFolder();\n                 if (dataSourceDescriptor.getFolder() == null) {\n                     connectionFolderCombo.select(0);\n                 } else {\n                     connectionFolderCombo.select(connectionFolders.indexOf(dataSourceFolder));\n                 }\n-*/\n \n                 if (dataSourceDescriptor.getDescription() != null) {\n                     descriptionText.setText(dataSourceDescriptor.getDescription());\n@@ -176,13 +172,11 @@ public void activatePage()\n         } else {\n             // Default settings\n             connectionTypeCombo.select(0);\n-/*\n             if (dataSourceFolder != null) {\n                 connectionFolderCombo.select(connectionFolders.indexOf(dataSourceFolder));\n             } else {\n                 connectionFolderCombo.select(0);\n             }\n-*/\n \n             readOnlyConnection.setSelection(false);\n         }\n@@ -370,7 +364,6 @@ public void widgetSelected(SelectionEvent e) {\n                 });\n             }\n \n-    /*\n             {\n                 UIUtils.createControlLabel(miscGroup, CoreMessages.dialog_connection_wizard_final_label_connection_folder);\n \n@@ -386,7 +379,6 @@ public void widgetSelected(SelectionEvent e) {\n                     }\n                 });\n             }\n-    */\n \n             {\n                 Label descLabel = UIUtils.createControlLabel(miscGroup, CoreMessages.dialog_connection_wizard_description);\n@@ -526,7 +518,6 @@ private void loadConnectionTypes()\n         }\n     }\n \n-/*\n     private void loadConnectionFolders()\n     {\n         connectionFolderCombo.removeAll();\n@@ -550,7 +541,6 @@ private void loadConnectionFolder(int level, DBPDataSourceFolder folder) {\n             loadConnectionFolder(level + 1, child);\n         }\n     }\n-*/\n \n     @Override\n     public boolean isPageComplete()\n@@ -568,7 +558,7 @@ public void saveSettings(DBPDataSourceContainer dataSource) {\n \n         String name = connectionNameChanged ? connectionNameText.getText() : generateConnectionName(getWizard().getPageSettings());\n         dataSource.setName(name);\n-        //dataSource.setFolder(dataSourceFolder);\n+        dataSource.setFolder(dataSourceFolder);\n \n         if (connectionTypeCombo.getSelectionIndex() >= 0) {\n             confConfig.setConnectionType(connectionTypeCombo.getItem(connectionTypeCombo.getSelectionIndex()));",
      "parent_sha": "6f39c036d66c8c1c8dbe1a93c139de563813b964"
    }
  },
  {
    "oid": "bbd14713fbee4b08d5ead47a200fd75968fbdbe1",
    "message": "SSH handler invalidate fix (keep first open port number)\n\n\nFormer-commit-id: 83d3e2ea051cd86b2fc86b640e375c873fff2845",
    "date": "2018-05-05T18:41:35Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/bbd14713fbee4b08d5ead47a200fd75968fbdbe1",
    "details": {
      "sha": "916977665b34cc403af416014af810cc487f2cf3",
      "filename": "plugins/org.jkiss.dbeaver.net.ssh/src/org/jkiss/dbeaver/model/net/ssh/SSHImplementationAbstract.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/bbd14713fbee4b08d5ead47a200fd75968fbdbe1/plugins%2Forg.jkiss.dbeaver.net.ssh%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fnet%2Fssh%2FSSHImplementationAbstract.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/bbd14713fbee4b08d5ead47a200fd75968fbdbe1/plugins%2Forg.jkiss.dbeaver.net.ssh%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fnet%2Fssh%2FSSHImplementationAbstract.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.net.ssh%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fnet%2Fssh%2FSSHImplementationAbstract.java?ref=bbd14713fbee4b08d5ead47a200fd75968fbdbe1",
      "patch": "@@ -36,7 +36,7 @@ public abstract class SSHImplementationAbstract implements SSHImplementation {\n     private static final Log log = Log.getLog(SSHImplementationAbstract.class);\n \n     // Saved config - used for tunnel invalidate\n-    private transient int savedLocalPort;\n+    private transient int savedLocalPort = 0;\n     protected transient DBWHandlerConfiguration savedConfiguration;\n     protected transient DBPConnectionConfiguration savedConnectionInfo;\n \n@@ -108,7 +108,7 @@ public DBPConnectionConfiguration initTunnel(DBRProgressMonitor monitor, DBPPlat\n             throw new DBException(\"Bad database port number: \" + dbPortString);\n         }\n         int localPort = savedLocalPort;\n-        if (platform != null) {\n+        if (localPort == 0 && platform != null) {\n             localPort = SSHUtils.findFreePort(platform);\n         }\n         if (!CommonUtils.isEmpty(sshLocalPort)) {",
      "parent_sha": "0ecc3d6c7c635c9ac6f3898bf333dd044fe8b87a"
    }
  },
  {
    "oid": "2d63f640b51d61b956c975af09c716d09ef7d30d",
    "message": "Object property edit fix (for property groups)\n\nFormer-commit-id: 32a2897c59a1a5da22c1375111485a56d1e398f8",
    "date": "2013-01-24T13:32:26Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/2d63f640b51d61b956c975af09c716d09ef7d30d",
    "details": {
      "sha": "d958774593735af7a256be2a9935c6b591851acb",
      "filename": "plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/properties/ObjectPropertyDescriptor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/2d63f640b51d61b956c975af09c716d09ef7d30d/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fproperties%2FObjectPropertyDescriptor.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/2d63f640b51d61b956c975af09c716d09ef7d30d/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fproperties%2FObjectPropertyDescriptor.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fproperties%2FObjectPropertyDescriptor.java?ref=2d63f640b51d61b956c975af09c716d09ef7d30d",
      "patch": "@@ -74,7 +74,7 @@ public ObjectPropertyDescriptor(\n         this.propInfo = propInfo;\r\n \r\n         final String propertyName = BeanUtils.getPropertyNameFromGetter(getter.getName());\r\n-        declaringClass = parent == null ? getter.getDeclaringClass() : parent.getDeclaringClass();\r\n+        declaringClass = getter.getDeclaringClass();\r\n         Class<?> c = declaringClass;\r\n         while (setter == null && c != Object.class && c != null) {\r\n             this.setter = BeanUtils.getSetMethod(\r",
      "parent_sha": "0436ead5c78e3e1aeb60186f943dc428863bf259"
    }
  },
  {
    "oid": "4e7b921a9b513a243ec12affb2dea92f65636203",
    "message": "#2372 Task view: progress monitoring fixes.\n\n\nFormer-commit-id: a74978d16a3891389ad2047ebea782e98af9393f",
    "date": "2019-09-22T11:16:51Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/4e7b921a9b513a243ec12affb2dea92f65636203",
    "details": {
      "sha": "e528604f6fa33e0ff91507c7eab5912eee25beb2",
      "filename": "plugins/org.jkiss.dbeaver.ui.navigator/src/org/jkiss/dbeaver/ui/task/TaskProcessorUI.java",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/4e7b921a9b513a243ec12affb2dea92f65636203/plugins%2Forg.jkiss.dbeaver.ui.navigator%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Ftask%2FTaskProcessorUI.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/4e7b921a9b513a243ec12affb2dea92f65636203/plugins%2Forg.jkiss.dbeaver.ui.navigator%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Ftask%2FTaskProcessorUI.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ui.navigator%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Ftask%2FTaskProcessorUI.java?ref=4e7b921a9b513a243ec12affb2dea92f65636203",
      "patch": "@@ -17,17 +17,18 @@\n package org.jkiss.dbeaver.ui.task;\n \n import org.eclipse.core.runtime.IStatus;\n-import org.eclipse.swt.SWT;\n import org.eclipse.swt.widgets.Display;\n import org.jkiss.code.NotNull;\n import org.jkiss.code.Nullable;\n import org.jkiss.dbeaver.DBException;\n import org.jkiss.dbeaver.Log;\n+import org.jkiss.dbeaver.model.DBPMessageType;\n import org.jkiss.dbeaver.model.runtime.DBRRunnableContext;\n import org.jkiss.dbeaver.model.runtime.DBRRunnableWithProgress;\n import org.jkiss.dbeaver.model.task.DBTTask;\n import org.jkiss.dbeaver.model.task.DBTTaskExecutionListener;\n import org.jkiss.dbeaver.runtime.DBWorkbench;\n+import org.jkiss.dbeaver.runtime.DBeaverNotifications;\n import org.jkiss.dbeaver.runtime.ui.DBPPlatformUI;\n import org.jkiss.dbeaver.ui.UIUtils;\n import org.jkiss.dbeaver.utils.RuntimeUtils;\n@@ -104,11 +105,14 @@ public void taskFinished(@NotNull Object task, @Nullable Throwable error) {\n             }\n             if (isShowFinalMessage() && !hasErrors) {\n                 // Show message box\n-                UIUtils.showMessageBox(\n-                    null,\n+                DBeaverNotifications.showNotification(\n+                    \"task\",\n                     getTaskName(),\n                     getTaskType() + \" task completed (\" + RuntimeUtils.formatExecutionTime(elapsedTime) + \")\",\n-                    SWT.ICON_INFORMATION);\n+                    DBPMessageType.INFORMATION,\n+                    null);\n+            } else if (error != null) {\n+                DBWorkbench.getPlatformUI().showError(\"Data transfer error\", \"Data transfer failed\", error);\n             }\n         });\n ",
      "parent_sha": "3af5c6fcc9832f0e0280ddd762879923b9c60e9d"
    }
  },
  {
    "oid": "411fddac65a92fc7685df6a34adffd90506be5be",
    "message": "#9649 ORacle: use DB_ view to read tables and columns (if enabled)\n\n\nFormer-commit-id: 08a5e6f97f31bf48a9447497252e8b0110bde13f",
    "date": "2020-08-28T04:38:38Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/411fddac65a92fc7685df6a34adffd90506be5be",
    "details": {
      "sha": "8f3ed332ee1a44eeaad27b382f1e24802051336d",
      "filename": "plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/OracleSchema.java",
      "status": "modified",
      "additions": 9,
      "deletions": 17,
      "changes": 26,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/411fddac65a92fc7685df6a34adffd90506be5be/plugins%2Forg.jkiss.dbeaver.ext.oracle%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Foracle%2Fmodel%2FOracleSchema.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/411fddac65a92fc7685df6a34adffd90506be5be/plugins%2Forg.jkiss.dbeaver.ext.oracle%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Foracle%2Fmodel%2FOracleSchema.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ext.oracle%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Foracle%2Fmodel%2FOracleSchema.java?ref=411fddac65a92fc7685df6a34adffd90506be5be",
      "patch": "@@ -501,22 +501,12 @@ public JDBCStatement prepareLookupStatement(@NotNull JDBCSession session, @NotNu\n             String tablesSource = hasAllAllTables ? \"ALL_TABLES\" : \"TABLES\";\n             String tableTypeColumns = hasAllAllTables ? \"t.TABLE_TYPE_OWNER,t.TABLE_TYPE\" : \"NULL as TABLE_TYPE_OWNER, NULL as TABLE_TYPE\";\n \n-/*\n-            final JDBCPreparedStatement dbStat = session.prepareStatement(\n-                \"SELECT \" + OracleUtils.getSysCatalogHint(owner.getDataSource()) + \" t.OWNER,t.TABLE_NAME as TABLE_NAME,'TABLE' as OBJECT_TYPE,'VALID' as STATUS,\" + tableTypeColumns + \",t.TABLESPACE_NAME,t.PARTITIONED,t.IOT_TYPE,t.IOT_NAME,t.TEMPORARY,t.SECONDARY,t.NESTED,t.NUM_ROWS \\n\" +\n-                    \"\\tFROM \" + OracleUtils.getAdminAllViewPrefix(session.getProgressMonitor(), owner.getDataSource(), tablesSource) + \" t\\n\" +\n-                    \"\\tWHERE t.OWNER=? AND NESTED='NO'\" + (object == null && objectName == null ? \"\": \" AND t.TABLE_NAME\"+ tableOper + \"?\") + \"\\n\" +\n-                \"UNION ALL\\n\" +\n-                    \"\\tSELECT \" + OracleUtils.getSysCatalogHint(owner.getDataSource()) + \" o.OWNER,o.OBJECT_NAME as TABLE_NAME,'VIEW' as OBJECT_TYPE,o.STATUS,NULL,NULL,NULL,'NO',NULL,NULL,o.TEMPORARY,o.SECONDARY,'NO',0 \\n\" +\n-                    \"\\tFROM \" + OracleUtils.getAdminAllViewPrefix(session.getProgressMonitor(), owner.getDataSource(), \"OBJECTS\") + \" o \\n\" +\n-                    \"\\tWHERE o.OWNER=? AND o.OBJECT_TYPE='VIEW'\" + (object == null && objectName == null  ? \"\": \" AND o.OBJECT_NAME\" + tableOper + \"?\") + \"\\n\"\n-                );\n-*/\n             final JDBCPreparedStatement dbStat = session.prepareStatement(\"SELECT \" + OracleUtils.getSysCatalogHint(owner.getDataSource()) +\n                 \" O.*,\\n\" +\n                 tableTypeColumns + \",t.TABLESPACE_NAME,t.PARTITIONED,t.IOT_TYPE,t.IOT_NAME,t.TEMPORARY,t.SECONDARY,t.NESTED,t.NUM_ROWS\\n\" +\n-                \"FROM ALL_OBJECTS O\\n\" +\n-                \"LEFT OUTER JOIN \" + OracleUtils.getAdminAllViewPrefix(session.getProgressMonitor(), owner.getDataSource(), tablesSource) + \" t ON (t.OWNER = O.OWNER AND t.TABLE_NAME = o.OBJECT_NAME AND o.OBJECT_TYPE = 'TABLE')\\n\" +\n+                \"FROM \" + OracleUtils.getAdminAllViewPrefix(session.getProgressMonitor(), getDataSource(), \"OBJECTS\") + \" O\\n\" +\n+                \"LEFT OUTER JOIN \" + OracleUtils.getAdminAllViewPrefix(session.getProgressMonitor(), owner.getDataSource(), tablesSource) +\n+                    \" t ON (t.OWNER = O.OWNER AND t.TABLE_NAME = o.OBJECT_NAME AND o.OBJECT_TYPE = 'TABLE')\\n\" +\n                 \"WHERE O.OWNER=? AND O.OBJECT_TYPE IN ('TABLE', 'VIEW', 'MATERIALIZED VIEW')\" +\n                 (object == null && objectName == null ? \"\": \" AND O.OBJECT_NAME\" + tableOper + \"?\") +\n                 (object instanceof OracleTable ? \" AND O.OBJECT_TYPE='TABLE'\" : \"\") +\n@@ -545,14 +535,16 @@ protected OracleTableBase fetchObject(@NotNull JDBCSession session, @NotNull Ora\n         protected JDBCStatement prepareChildrenStatement(@NotNull JDBCSession session, @NotNull OracleSchema owner, @Nullable OracleTableBase forTable)\n             throws SQLException\n         {\n-            String colsView = \"ALL_TAB_COLS\";\n-            if (!owner.getDataSource().isViewAvailable(session.getProgressMonitor(), OracleConstants.SCHEMA_SYS, colsView)) {\n-                colsView = \"ALL_TAB_COLUMNS\";\n+            String colsView;\n+            if (!owner.getDataSource().isViewAvailable(session.getProgressMonitor(), OracleConstants.SCHEMA_SYS, \"ALL_TAB_COLS\")) {\n+                colsView = \"TAB_COLUMNS\";\n+            } else {\n+                colsView = \"TAB_COLS\";\n             }\n             StringBuilder sql = new StringBuilder(500);\n             sql\n                 .append(\"SELECT \").append(OracleUtils.getSysCatalogHint(owner.getDataSource())).append(\"\\nc.*,c.TABLE_NAME as OBJECT_NAME \" +\n-                    \"FROM \").append(OracleUtils.getSysSchemaPrefix(owner.getDataSource())).append(colsView).append(\" c\\n\" +\n+                    \"FROM \").append(OracleUtils.getAdminAllViewPrefix(session.getProgressMonitor(), getDataSource(), colsView)).append(\" c\\n\" +\n //                    \"LEFT OUTER JOIN \" + OracleUtils.getSysSchemaPrefix(getDataSource()) + \"ALL_COL_COMMENTS cc ON CC.OWNER=c.OWNER AND cc.TABLE_NAME=c.TABLE_NAME AND cc.COLUMN_NAME=c.COLUMN_NAME\\n\" +\n                     \"WHERE c.OWNER=?\");\n             if (forTable != null) {",
      "parent_sha": "51a2075441f0d2628db1b400566901319d0cfa49"
    }
  },
  {
    "oid": "3f954751c2c971507086c91e1de2d7cc9cd1ee66",
    "message": "#11533 Variable value edit",
    "date": "2021-07-08T15:03:26Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/3f954751c2c971507086c91e1de2d7cc9cd1ee66",
    "details": {
      "sha": "35df7bea68a1aa70fad8f9f3b5185321e5529771",
      "filename": "plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/variables/SQLVariablesPanel.java",
      "status": "modified",
      "additions": 20,
      "deletions": 8,
      "changes": 28,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/3f954751c2c971507086c91e1de2d7cc9cd1ee66/plugins%2Forg.jkiss.dbeaver.ui.editors.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2Fvariables%2FSQLVariablesPanel.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/3f954751c2c971507086c91e1de2d7cc9cd1ee66/plugins%2Forg.jkiss.dbeaver.ui.editors.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2Fvariables%2FSQLVariablesPanel.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ui.editors.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2Fvariables%2FSQLVariablesPanel.java?ref=3f954751c2c971507086c91e1de2d7cc9cd1ee66",
      "patch": "@@ -66,6 +66,8 @@ public class SQLVariablesPanel extends Composite implements DBCScriptContextList\n     private SQLEditorBase valueEditor;\n     private TableViewer varsTable;\n     private boolean showParameters;\n+    private boolean saveInProgress;\n+    private DBCScriptContext.VariableInfo curVariable;\n \n     public SQLVariablesPanel(Composite parent, SQLEditor editor)\n     {\n@@ -134,6 +136,7 @@ public boolean isFoldingEnabled() {\n \n             valueEditor.getEditorControlWrapper().setLayoutData(new GridData(GridData.FILL_BOTH));\n             StyledText editorControl = valueEditor.getEditorControl();\n+            TextEditorUtils.enableHostEditorKeyBindingsSupport(mainEditor.getSite(), editorControl);\n             if (editorControl != null) {\n                 editorControl.addFocusListener(new FocusAdapter() {\n                     @Override\n@@ -151,13 +154,16 @@ public void focusLost(FocusEvent e) {\n     private void saveVariableValue(StyledText editorControl) {\n         String varValue = editorControl.getText();\n \n-        if (!varsTable.getSelection().isEmpty()) {\n-            Object varElement = ((IStructuredSelection) varsTable.getSelection()).getFirstElement();\n-            if (varElement instanceof DBCScriptContext.VariableInfo) {\n-                ((DBCScriptContext.VariableInfo) varElement).value = varValue;\n+        if (curVariable != null) {\n+            saveInProgress = true;\n+            try {\n+                curVariable.value = varValue;\n                 mainEditor.getGlobalScriptContext().setVariable(\n-                    ((DBCScriptContext.VariableInfo) varElement).name,\n+                    curVariable.name,\n                     varValue);\n+                varsTable.refresh();\n+            } finally {\n+                saveInProgress = false;\n             }\n         }\n     }\n@@ -170,11 +176,11 @@ private void editCurrentVariable() {\n         }\n         if (!selection.isEmpty()) {\n             //TableItem item = varsTable.getItem(selectionIndex);\n-            DBCScriptContext.VariableInfo variable = (DBCScriptContext.VariableInfo) ((IStructuredSelection)selection).getFirstElement();\n+            curVariable = (DBCScriptContext.VariableInfo) ((IStructuredSelection)selection).getFirstElement();\n \n             StringEditorInput sqlInput = new StringEditorInput(\n-                \"Variable \" + variable.name,\n-                CommonUtils.toString(variable.value),\n+                \"Variable \" + curVariable.name,\n+                CommonUtils.toString(curVariable.value),\n                 false,\n                 GeneralUtils.DEFAULT_ENCODING\n                 );\n@@ -222,11 +228,17 @@ public void refreshVariables() {\n \n     @Override\n     public void variableChanged(ContextAction action, DBCScriptContext.VariableInfo variable) {\n+        if (saveInProgress) {\n+            return;\n+        }\n         UIUtils.asyncExec(this::refreshVariables);\n     }\n \n     @Override\n     public void parameterChanged(ContextAction action, String name, Object value) {\n+        if (saveInProgress) {\n+            return;\n+        }\n         UIUtils.asyncExec(this::refreshVariables);\n     }\n ",
      "parent_sha": "23d259a37807b7dad5d46b48a018cbf8ad5783ab"
    }
  },
  {
    "oid": "c93f31a1fae176fb3369067b92aa2758ec6a2169",
    "message": "#11304 Disable save button for tasks without descriptors",
    "date": "2021-10-19T10:37:01Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/c93f31a1fae176fb3369067b92aa2758ec6a2169",
    "details": {
      "sha": "706d83c59edd6998d1198b5572c6493f86272547",
      "filename": "plugins/org.jkiss.dbeaver.tasks.ui/src/org/jkiss/dbeaver/tasks/ui/wizard/TaskConfigurationWizard.java",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/c93f31a1fae176fb3369067b92aa2758ec6a2169/plugins%2Forg.jkiss.dbeaver.tasks.ui%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Ftasks%2Fui%2Fwizard%2FTaskConfigurationWizard.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/c93f31a1fae176fb3369067b92aa2758ec6a2169/plugins%2Forg.jkiss.dbeaver.tasks.ui%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Ftasks%2Fui%2Fwizard%2FTaskConfigurationWizard.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.tasks.ui%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Ftasks%2Fui%2Fwizard%2FTaskConfigurationWizard.java?ref=c93f31a1fae176fb3369067b92aa2758ec6a2169",
      "patch": "@@ -418,10 +418,7 @@ protected void saveTaskContext(DBCExecutionContext executionContext) {\n \n     public void updateSaveTaskButtons() {\n         if (saveAsTaskButton != null) {\n-            // TODO: we should be able to save/run task immediately if it was saved before.\n-            // TODO: There is a bug in DT wizard which doesn't let to do it (producers/consumers are initialized only on the last page).\n-            // TODO: init transfer for all deserialized producers/consumers\n-            saveAsTaskButton.setEnabled(/*(getTaskWizard() != null && getTaskWizard().isCurrentTaskSaved()) || */canFinish());\n+            saveAsTaskButton.setEnabled(canFinish() && getTaskType() != null);\n         }\n     }\n ",
      "parent_sha": "09665d8fd69ff1633b03585f76471af4489ab8d1"
    }
  },
  {
    "oid": "fb694a174eb0a2ede13b164bf5bd0e71e7de8d61",
    "message": "Project resources prefs\n\n\nFormer-commit-id: a3a03d61f39f0ac54b9a14df896614bc3bf40c60",
    "date": "2016-05-14T14:29:58Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/fb694a174eb0a2ede13b164bf5bd0e71e7de8d61",
    "details": {
      "sha": "826eeecea13cb0db441987eae12ef62e051adc5a",
      "filename": "plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/preferences/PrefPageProjectSettings.java",
      "status": "modified",
      "additions": 52,
      "deletions": 26,
      "changes": 78,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/fb694a174eb0a2ede13b164bf5bd0e71e7de8d61/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fpreferences%2FPrefPageProjectSettings.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/fb694a174eb0a2ede13b164bf5bd0e71e7de8d61/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fpreferences%2FPrefPageProjectSettings.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fpreferences%2FPrefPageProjectSettings.java?ref=fb694a174eb0a2ede13b164bf5bd0e71e7de8d61",
      "patch": "@@ -18,39 +18,31 @@\n  */\n package org.jkiss.dbeaver.ui.preferences;\n \n+import org.eclipse.core.resources.IFolder;\n import org.eclipse.core.resources.IProject;\n import org.eclipse.core.runtime.IAdaptable;\n-import org.eclipse.jface.preference.ColorSelector;\n-import org.eclipse.jface.preference.PreferencePage;\n-import org.eclipse.jface.resource.StringConverter;\n-import org.eclipse.jface.util.IPropertyChangeListener;\n-import org.eclipse.jface.util.PropertyChangeEvent;\n+import org.eclipse.core.runtime.IPath;\n+import org.eclipse.jface.dialogs.IDialogConstants;\n import org.eclipse.swt.SWT;\n import org.eclipse.swt.custom.TableEditor;\n-import org.eclipse.swt.events.*;\n-import org.eclipse.swt.graphics.Color;\n+import org.eclipse.swt.events.FocusAdapter;\n+import org.eclipse.swt.events.FocusEvent;\n+import org.eclipse.swt.events.MouseAdapter;\n+import org.eclipse.swt.events.MouseEvent;\n import org.eclipse.swt.graphics.Point;\n import org.eclipse.swt.layout.GridData;\n import org.eclipse.swt.widgets.*;\n import org.eclipse.ui.IWorkbench;\n import org.eclipse.ui.IWorkbenchPreferencePage;\n import org.eclipse.ui.IWorkbenchPropertyPage;\n-import org.eclipse.ui.dialogs.ResourceSelectionDialog;\n+import org.eclipse.ui.dialogs.ContainerSelectionDialog;\n+import org.eclipse.ui.dialogs.ISelectionValidator;\n import org.jkiss.dbeaver.core.DBeaverCore;\n import org.jkiss.dbeaver.model.DBUtils;\n-import org.jkiss.dbeaver.model.connection.DBPConnectionType;\n-import org.jkiss.dbeaver.registry.DataSourceProviderRegistry;\n-import org.jkiss.dbeaver.registry.ProjectRegistry;\n import org.jkiss.dbeaver.registry.ResourceHandlerDescriptor;\n-import org.jkiss.dbeaver.ui.DBeaverIcons;\n-import org.jkiss.dbeaver.ui.UIIcon;\n import org.jkiss.dbeaver.ui.UIUtils;\n-import org.jkiss.utils.CommonUtils;\n-import org.jkiss.utils.SecurityUtils;\n \n-import java.util.ArrayList;\n-import java.util.HashMap;\n-import java.util.Map;\n+import java.io.File;\n \n /**\n  * PrefPageConnectionTypes\n@@ -96,7 +88,7 @@ public void mouseUp(MouseEvent e)\n                 {\n                     disposeOldEditor();\n \n-                    TableItem item = resourceTable.getItem(new Point(0, e.y));\n+                    final TableItem item = resourceTable.getItem(new Point(0, e.y));\n                     if (item == null) {\n                         return;\n                     }\n@@ -105,13 +97,47 @@ public void mouseUp(MouseEvent e)\n                         return;\n                     }\n                     if (columnIndex == 1) {\n-                        ResourceSelectionDialog dialog = new ResourceSelectionDialog(resourceTable.getShell(), project, \"Select \" + item.getText(0) + \" root folder\");\n-                        dialog.open();\n-                        final Text editor = new Text(resourceTable, SWT.NONE);\n-                        editor.setText(item.getText(1));\n-                        editor.selectAll();\n-                        handlerTableEditor.setEditor(editor, item, 1);\n-                        editor.setFocus();\n+                        final String resourcePath = item.getText(1);\n+                        if (project != null) {\n+                            final IFolder folder = project.getFolder(resourcePath);\n+                            ContainerSelectionDialog dialog = new ContainerSelectionDialog(resourceTable.getShell(), folder, true, \"Select \" + item.getText(0) + \" root folder\");\n+                            dialog.showClosedProjects(false);\n+                            dialog.setValidator(new ISelectionValidator() {\n+                                @Override\n+                                public String isValid(Object selection) {\n+                                    if (selection instanceof IPath) {\n+                                        final File file = ((IPath) selection).toFile();\n+                                        if (file.isHidden() || file.getName().startsWith(\".\")) {\n+                                            return \"Can't use hidden folders\";\n+                                        }\n+                                        final String[] segments = ((IPath) selection).segments();\n+                                        if (!project.getName().equals(segments[0])) {\n+                                            return \"Can't store resources in another project\";\n+                                        }\n+                                    }\n+                                    return null;\n+                                }\n+                            });\n+                            if (dialog.open() == IDialogConstants.OK_ID) {\n+                                final Object[] result = dialog.getResult();\n+                                if (result.length == 1 && result[0] instanceof IPath) {\n+                                    final IPath plainPath = ((IPath) result[0]).removeFirstSegments(1).removeTrailingSeparator();\n+                                    item.setText(1, plainPath.toString());\n+                                }\n+                            }\n+                        } else {\n+                            final Text editor = new Text(resourceTable, SWT.NONE);\n+                            editor.setText(resourcePath);\n+                            editor.selectAll();\n+                            handlerTableEditor.setEditor(editor, item, 1);\n+                            editor.setFocus();\n+                            editor.addFocusListener(new FocusAdapter() {\n+                                @Override\n+                                public void focusLost(FocusEvent e) {\n+                                    item.setText(1, editor.getText());\n+                                }\n+                            });\n+                        }\n                     }\n                 }\n             });",
      "parent_sha": "3db7b64f6210fed4cb5f5f5f460bcb708a91451c"
    }
  },
  {
    "oid": "7d5f1054d638e1fb8fed7d517f26490b2be79931",
    "message": "Nullable annotation fixed",
    "date": "2024-07-16T13:54:47Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/7d5f1054d638e1fb8fed7d517f26490b2be79931",
    "details": {
      "sha": "e136c6433c28f67bb6d24f5d58c6f5fe0f3a2e3a",
      "filename": "plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/struct/DBSObjectContainer.java",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/7d5f1054d638e1fb8fed7d517f26490b2be79931/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fstruct%2FDBSObjectContainer.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/7d5f1054d638e1fb8fed7d517f26490b2be79931/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fstruct%2FDBSObjectContainer.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fstruct%2FDBSObjectContainer.java?ref=7d5f1054d638e1fb8fed7d517f26490b2be79931",
      "patch": "@@ -51,9 +51,7 @@ public interface DBSObjectContainer extends DBSObject\n      * @return collection of child objects (not null).\r\n      *  Objects type depends on implementor (catalogs, schemas, tables, etc)\r\n      * @throws DBException on any DB error\r\n-     * @param monitor progress monitor. If null passed then implementation\r\n-     *                mustn't perform any expensive operations like cache reading.\r\n-     *                In this case it can return null as a result (but also may return some cached collection)\r\n+     * @param monitor progress monitor\r\n      */\r\n     @DPIElement\r\n     Collection<? extends DBSObject> getChildren(@NotNull DBRProgressMonitor monitor) throws DBException;\r",
      "parent_sha": "70514a884c958ac48e7e1c0dfce205fff841d70c"
    }
  },
  {
    "oid": "e7d38a7cf039b4520a699c3a2896561d1033a48a",
    "message": "SQL editor fix (multiple queries exec)\n\n\nFormer-commit-id: 4e5062a1b4ae6b8fc402241b5fb45375d387bf32",
    "date": "2016-09-23T17:19:48Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/e7d38a7cf039b4520a699c3a2896561d1033a48a",
    "details": {
      "sha": "6ca4e07e5d8f7acdb8e79fb91b6b933f06b4368e",
      "filename": "plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/editors/sql/SQLEditor.java",
      "status": "modified",
      "additions": 13,
      "deletions": 11,
      "changes": 24,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/e7d38a7cf039b4520a699c3a2896561d1033a48a/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2FSQLEditor.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/e7d38a7cf039b4520a699c3a2896561d1033a48a/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2FSQLEditor.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2FSQLEditor.java?ref=e7d38a7cf039b4520a699c3a2896561d1033a48a",
      "patch": "@@ -1404,17 +1404,19 @@ public void run() {\n                     if (statement != null && !resultTabs.isDisposed()) {\n                         resultsProvider.query = statement;\n                         resultsProvider.lastGoodQuery = statement;\n-                        resultsProvider.tabItem.setToolTipText(CommonUtils.truncateString(statement.getQuery(), 1000));\n-                        // Special statements (not real statements) have their name in data\n-                        if (isStatsResult) {\n-                            String tabName = \"Statistics\";\n-                            int queryIndex = queryProcessors.indexOf(QueryProcessor.this);\n-                            if (queryIndex > 0) {\n-                                tabName += \" - \" + (queryIndex + 1);\n-                            }\n-                            resultsProvider.tabItem.setText(tabName);\n-                            if (!CommonUtils.isEmpty(statement.getQuery())) {\n-                                resultsProvider.tabItem.setToolTipText(statement.getQuery());\n+                        if (!resultsProvider.tabItem.isDisposed()) {\n+                            resultsProvider.tabItem.setToolTipText(CommonUtils.truncateString(statement.getQuery(), 1000));\n+                            // Special statements (not real statements) have their name in data\n+                            if (isStatsResult) {\n+                                String tabName = \"Statistics\";\n+                                int queryIndex = queryProcessors.indexOf(QueryProcessor.this);\n+                                if (queryIndex > 0) {\n+                                    tabName += \" - \" + (queryIndex + 1);\n+                                }\n+                                resultsProvider.tabItem.setText(tabName);\n+                                if (!CommonUtils.isEmpty(statement.getQuery())) {\n+                                    resultsProvider.tabItem.setToolTipText(statement.getQuery());\n+                                }\n                             }\n                         }\n                     }",
      "parent_sha": "c32e5c97939242da4f2d9521fdbb6bd23cdf33b8"
    }
  },
  {
    "oid": "abbaaa75b5bbcc93de7f6b6668cc44ae3629662f",
    "message": "dbeaver/dbeaver-ee#734 Fix batch usage evaluation logic\n\n\nFormer-commit-id: 34718f3faa39086d7e639fcc4b2ad9aaacb9b05b",
    "date": "2020-12-28T15:51:17Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/abbaaa75b5bbcc93de7f6b6668cc44ae3629662f",
    "details": {
      "sha": "74f6d9c7f8b95ec2aba0c55828d2c31aaf533d35",
      "filename": "plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/impl/data/ExecuteBatchImpl.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/abbaaa75b5bbcc93de7f6b6668cc44ae3629662f/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fimpl%2Fdata%2FExecuteBatchImpl.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/abbaaa75b5bbcc93de7f6b6668cc44ae3629662f/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fimpl%2Fdata%2FExecuteBatchImpl.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fimpl%2Fdata%2FExecuteBatchImpl.java?ref=abbaaa75b5bbcc93de7f6b6668cc44ae3629662f",
      "patch": "@@ -108,7 +108,8 @@ private DBCStatistics processBatch(@NotNull DBCSession session, @Nullable List<D\n             }\n         }\n \n-        boolean useBatch = session.getDataSource().getInfo().supportsBatchUpdates() && reuseStatement && Boolean.FALSE.equals(options.get(DBSDataManipulator.OPTION_DISABLE_BATCHES));\n+        Object disableBatchesOption = options.get(DBSDataManipulator.OPTION_DISABLE_BATCHES);\n+        boolean useBatch = session.getDataSource().getInfo().supportsBatchUpdates() && reuseStatement && (Boolean.FALSE.equals(disableBatchesOption) || disableBatchesOption == null);\n         if (values.size() <= 1) {\n             useBatch = false;\n         }",
      "parent_sha": "e5c0fd1857ec4f56c22ce777686ec053c888d577"
    }
  },
  {
    "oid": "88da6b2208d0a05b95f51d0a599ab1bc586ed46e",
    "message": "Read-only key columns support\n\nFormer-commit-id: 66187b62ad003460d204bd4776a14ff0556d4867",
    "date": "2014-06-13T16:36:01Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/88da6b2208d0a05b95f51d0a599ab1bc586ed46e",
    "details": {
      "sha": "70680f92f2b3d62162a445b13c6f2ebed6c9a0db",
      "filename": "plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/controls/resultset/ResultSetViewer.java",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/88da6b2208d0a05b95f51d0a599ab1bc586ed46e/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2Fresultset%2FResultSetViewer.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/88da6b2208d0a05b95f51d0a599ab1bc586ed46e/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2Fresultset%2FResultSetViewer.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2Fresultset%2FResultSetViewer.java?ref=88da6b2208d0a05b95f51d0a599ab1bc586ed46e",
      "patch": "@@ -1021,7 +1021,13 @@ void scrollToRow(RowPosition position)\n \r\n     boolean isColumnReadOnly(DBDAttributeBinding column)\r\n     {\r\n-        return isReadOnly() || model.isColumnReadOnly(column);\r\n+        if (isReadOnly()) {\r\n+            return true;\r\n+        }\r\n+        if (!model.isColumnReadOnly(column) || (curRow != null && curRow.getState() == RowData.STATE_ADDED)) {\r\n+            return false;\r\n+        }\r\n+        return true;\r\n     }\r\n \r\n     public StateItem getCurrentState() {\r",
      "parent_sha": "b5a3931841936aa583ade9287c23884a979796bb"
    }
  },
  {
    "oid": "4b7a50a271504b9b84915e78d2330d8c6735b1e0",
    "message": "Generic driver: active object detection fix\n\n\nFormer-commit-id: 42622e6239ede2ada1c38d393f7e5c7426a6f22f",
    "date": "2018-10-04T10:59:43Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/4b7a50a271504b9b84915e78d2330d8c6735b1e0",
    "details": {
      "sha": "698a5e1896b29a447c1b19ae21589a49288120de",
      "filename": "plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericDataSource.java",
      "status": "modified",
      "additions": 10,
      "deletions": 8,
      "changes": 18,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/4b7a50a271504b9b84915e78d2330d8c6735b1e0/plugins%2Forg.jkiss.dbeaver.ext.generic%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fgeneric%2Fmodel%2FGenericDataSource.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/4b7a50a271504b9b84915e78d2330d8c6735b1e0/plugins%2Forg.jkiss.dbeaver.ext.generic%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fgeneric%2Fmodel%2FGenericDataSource.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ext.generic%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fgeneric%2Fmodel%2FGenericDataSource.java?ref=4b7a50a271504b9b84915e78d2330d8c6735b1e0",
      "patch": "@@ -695,15 +695,17 @@ private void determineSelectedEntity(JDBCSession session) {\n         // Get selected entity (catalog or schema)\r\n         selectedEntityName = null;\r\n         if (CommonUtils.isEmpty(queryGetActiveDB)) {\r\n-            try {\r\n-                selectedEntityName = session.getCatalog();\r\n-                if (selectedEntityType == null && !CommonUtils.isEmpty(selectedEntityName)) {\r\n-                    selectedEntityType = GenericConstants.ENTITY_TYPE_CATALOG;\r\n-                    selectedEntityFromAPI = true;\r\n+            if (!CommonUtils.isEmpty(catalogs)) {\r\n+                try {\r\n+                    selectedEntityName = session.getCatalog();\r\n+                    if (selectedEntityType == null && !CommonUtils.isEmpty(selectedEntityName)) {\r\n+                        selectedEntityType = GenericConstants.ENTITY_TYPE_CATALOG;\r\n+                        selectedEntityFromAPI = true;\r\n+                    }\r\n+                } catch (SQLException e) {\r\n+                    // Seems to be not supported\r\n+                    log.debug(e);\r\n                 }\r\n-            } catch (SQLException e) {\r\n-                // Seems to be not supported\r\n-                log.debug(e);\r\n             }\r\n             if (CommonUtils.isEmpty(selectedEntityName)) {\r\n                 // Try to use current schema\r",
      "parent_sha": "204da3e182009f47c5dd1dad3ff39355a34e1a0c"
    }
  },
  {
    "oid": "482ee7fcc0e5ffe4649e873d597473abfcec6582",
    "message": "#14705 Fix edit not working properly in EditMavenArtifactDialog",
    "date": "2021-11-30T10:02:14Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/482ee7fcc0e5ffe4649e873d597473abfcec6582",
    "details": {
      "sha": "99ed52b767b5ed1499db09df82619720e3d4dd29",
      "filename": "plugins/org.jkiss.dbeaver.ui.editors.connection/src/org/jkiss/dbeaver/ui/dialogs/driver/EditMavenArtifactDialog.java",
      "status": "modified",
      "additions": 14,
      "deletions": 8,
      "changes": 22,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/482ee7fcc0e5ffe4649e873d597473abfcec6582/plugins%2Forg.jkiss.dbeaver.ui.editors.connection%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fdialogs%2Fdriver%2FEditMavenArtifactDialog.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/482ee7fcc0e5ffe4649e873d597473abfcec6582/plugins%2Forg.jkiss.dbeaver.ui.editors.connection%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fdialogs%2Fdriver%2FEditMavenArtifactDialog.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ui.editors.connection%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fdialogs%2Fdriver%2FEditMavenArtifactDialog.java?ref=482ee7fcc0e5ffe4649e873d597473abfcec6582",
      "patch": "@@ -105,16 +105,15 @@ protected Composite createDialogArea(Composite parent) {\n                 @Override\n                 public void widgetSelected(SelectionEvent e) {\n                     artifacts.clear();\n-                    //check if we are on raw tab. When trues to parse\n-                    if (tabFolder.getSelectionIndex() == 0 && tabFolder.getItemCount() != 1){\n+                    if (tabFolder.getSelection()[0].getData() == TabType.DEPENDENCY_DECLARATION){\n                         UIUtils.asyncExec(EditMavenArtifactDialog.this::parseArtifactText);\n                     }\n                 }\n             });\n             if (originalArtifact == null) {\n-                createRawTab(tabFolder);\n+                createDependencyDeclarationTab(tabFolder);\n             }\n-            createManualTab(tabFolder);\n+            createDeclareArtifactManuallyTab(tabFolder);\n         }\n         {\n             Group settingsGroup = UIUtils.createControlGroup(composite, UIConnectionMessages.dialog_edit_driver_edit_maven_settings, 1, GridData.FILL_HORIZONTAL, 0);\n@@ -182,7 +181,7 @@ private void setStatus(boolean error, String message) {\n         }\n     }\n \n-    private void createRawTab(@NotNull TabFolder folder) {\n+    private void createDependencyDeclarationTab(@NotNull TabFolder folder) {\n \n         Composite container = new Composite(folder, SWT.NONE);\n         container.setLayout(new GridLayout(1, true));\n@@ -205,9 +204,10 @@ private void createRawTab(@NotNull TabFolder folder) {\n         TabItem item = new TabItem(folder, SWT.NONE);\n         item.setText(UIConnectionMessages.dialog_edit_driver_edit_maven_raw);\n         item.setControl(container);\n+        item.setData(TabType.DEPENDENCY_DECLARATION);\n     }\n \n-    private void createManualTab(@NotNull TabFolder folder) {\n+    private void createDeclareArtifactManuallyTab(@NotNull TabFolder folder) {\n         Composite container = new Composite(folder, SWT.NONE);\n         container.setLayout(new GridLayout(2, false));\n         GridData gd = new GridData(GridData.FILL_HORIZONTAL);\n@@ -225,6 +225,7 @@ private void createManualTab(@NotNull TabFolder folder) {\n         TabItem item = new TabItem(folder, SWT.NONE);\n         item.setText(UIConnectionMessages.dialog_edit_driver_edit_maven_manual);\n         item.setControl(container);\n+        item.setData(TabType.DECLARE_ARTIFACT_MANUALLY);\n \n \n         ModifyListener ml = e -> updateButtons();\n@@ -361,6 +362,11 @@ public void saxText(SAXReader reader, String data) {\n \n     }\n \n+    private enum TabType {\n+        DEPENDENCY_DECLARATION,\n+        DECLARE_ARTIFACT_MANUALLY\n+    }\n+\n     private enum State {\n         DEPENDENCIES,\n         DEPENDENCY,\n@@ -371,10 +377,10 @@ private enum State {\n \n     @Override\n     protected void okPressed() {\n-        if (tabFolder.getSelectionIndex() == 1) {\n+        if (tabFolder.getSelection()[0].getData() == TabType.DECLARE_ARTIFACT_MANUALLY) {\n             if (originalArtifact != null) {\n                 originalArtifact.setReference(new MavenArtifactReference(groupText.getText(), artifactText.getText(), null, defaultVersionText.getText()));\n-                originalArtifact.setPreferredVersion(defaultVersionText.getText());\n+                originalArtifact.setPreferredVersion(preferredVersionText.getText());\n                 originalArtifact.setIgnoreDependencies(ignoreDependencies);\n                 originalArtifact.setLoadOptionalDependencies(loadOptionalDependencies);\n             } else {",
      "parent_sha": "0bac4ff4c2ec7eeef9e4dea1ced07d5ede2666b7"
    }
  },
  {
    "oid": "38307fbe12c8efa712fa8bae04f9a480a0691150",
    "message": "#19866 Handle empty path (#20819)",
    "date": "2023-08-07T11:09:31Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/38307fbe12c8efa712fa8bae04f9a480a0691150",
    "details": {
      "sha": "7b63bf46458379471b7690d85be7905c3f686267",
      "filename": "plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/navigator/DBNModel.java",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/38307fbe12c8efa712fa8bae04f9a480a0691150/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fnavigator%2FDBNModel.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/38307fbe12c8efa712fa8bae04f9a480a0691150/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fnavigator%2FDBNModel.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fnavigator%2FDBNModel.java?ref=38307fbe12c8efa712fa8bae04f9a480a0691150",
      "patch": "@@ -401,8 +401,9 @@ public DBNResource getNodeByResource(IResource resource) {\n     private DBNNode findNodeByPath(DBRProgressMonitor monitor, NodePath nodePath, DBNNode curNode, int firstItem) throws DBException {\n         //log.debug(\"findNodeByPath '\" + nodePath + \"' in '\" + curNode.getNodeItemPath() + \"'/\" + firstItem);\n \n-        for (int i = firstItem, itemsSize = nodePath.pathItems.size(); i < itemsSize; i++) {\n-            String item = nodePath.pathItems.get(i).replace(SLASH_ESCAPE_TOKEN, \"/\");\n+        final List<String> items = nodePath.pathItems;\n+        for (int i = firstItem, itemsSize = items.size(); i < itemsSize; i++) {\n+            String item = items.get(i).replace(SLASH_ESCAPE_TOKEN, \"/\");\n \n             DBNNode[] children = curNode.getChildren(monitor);\n             DBNNode nextChild = null;\n@@ -431,7 +432,7 @@ private DBNNode findNodeByPath(DBRProgressMonitor monitor, NodePath nodePath, DB\n                 curNode = nextChild;\n             }\n         }\n-        if (!nodeMatchesPath(nodePath, curNode, nodePath.pathItems.get(nodePath.pathItems.size() - 1))) {\n+        if (items.size() > 1 && !nodeMatchesPath(nodePath, curNode, items.get(items.size() - 1))) {\n             // Tail node doesn't match tail node from the desired path\n             return null;\n         }",
      "parent_sha": "6579f237a3fda069d8aec21197cd8a3bad688551"
    }
  },
  {
    "oid": "82ce0a1173cb6935fa6bd4e54c9252a89145ca9f",
    "message": "CB-2349 mysql dialect accessibility fix",
    "date": "2022-08-08T12:21:55Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/82ce0a1173cb6935fa6bd4e54c9252a89145ca9f",
    "details": {
      "sha": "d8baa2432b1e6254ec5f3495038c7ecb96b15cec",
      "filename": "plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/model/MySQLDialect.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/82ce0a1173cb6935fa6bd4e54c9252a89145ca9f/plugins%2Forg.jkiss.dbeaver.ext.mysql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fmysql%2Fmodel%2FMySQLDialect.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/82ce0a1173cb6935fa6bd4e54c9252a89145ca9f/plugins%2Forg.jkiss.dbeaver.ext.mysql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fmysql%2Fmodel%2FMySQLDialect.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ext.mysql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fmysql%2Fmodel%2FMySQLDialect.java?ref=82ce0a1173cb6935fa6bd4e54c9252a89145ca9f",
      "patch": "@@ -37,7 +37,7 @@\n /**\n * MySQL dialect\n */\n-class MySQLDialect extends JDBCSQLDialect {\n+public class MySQLDialect extends JDBCSQLDialect {\n \n     public static final String[] MYSQL_NON_TRANSACTIONAL_KEYWORDS = ArrayUtils.concatArrays(\n         BasicSQLDialect.NON_TRANSACTIONAL_KEYWORDS,",
      "parent_sha": "6cf91571e379404d73d9b6df3c5b22c57afc6326"
    }
  },
  {
    "oid": "e661f15608ba044e377a6fa896e06bedca72ae8f",
    "message": "dbeaver/pro#2542 Connection close warning fix",
    "date": "2024-08-20T13:27:44Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/e661f15608ba044e377a6fa896e06bedca72ae8f",
    "details": {
      "sha": "28fd4491796d9648b5468d8ba2c8b81751a5142b",
      "filename": "plugins/org.jkiss.dbeaver.model.jdbc/src/org/jkiss/dbeaver/model/impl/jdbc/JDBCDataSource.java",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/e661f15608ba044e377a6fa896e06bedca72ae8f/plugins%2Forg.jkiss.dbeaver.model.jdbc%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fimpl%2Fjdbc%2FJDBCDataSource.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/e661f15608ba044e377a6fa896e06bedca72ae8f/plugins%2Forg.jkiss.dbeaver.model.jdbc%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fimpl%2Fjdbc%2FJDBCDataSource.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.model.jdbc%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fimpl%2Fjdbc%2FJDBCDataSource.java?ref=e661f15608ba044e377a6fa896e06bedca72ae8f",
      "patch": "@@ -366,8 +366,13 @@ public boolean closeConnection(final Connection connection, String purpose, bool\n                             // so here we do it just in case to avoid error messages on close with open transaction\n                             connection.rollback();\n                         } catch (Throwable e) {\n-                            // Do not write warning because connection maybe broken before the moment of close\n-                            log.debug(\"Error closing active transaction\", e);\n+                            if (e instanceof SQLException se && JDBCUtils.isRollbackWarning(se)) {\n+                                // ignore\n+                                log.debug(\"Warning during active transaction close: \" + e.getMessage());\n+                            } else {\n+                                // Do not write warning because connection maybe broken before the moment of close\n+                                log.debug(\"Error closing active transaction\", e);\n+                            }\n                         }\n                     }\n                     try {",
      "parent_sha": "1d079c92f1c6eed84f05a110814c590e58bcfaa0"
    }
  },
  {
    "oid": "e6906c023ad82f4d95d94efc11dc86f7a015fb59",
    "message": "dbeaver/pro#1343 Preference hints",
    "date": "2023-01-21T18:44:17Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/e6906c023ad82f4d95d94efc11dc86f7a015fb59",
    "details": {
      "sha": "26c576238eac467f9f79ca73c345fad300d59616",
      "filename": "plugins/org.jkiss.dbeaver.ui.editors.sql.ai/src/org/jkiss/dbeaver/ui/editors/sql/ai/preferences/GPTPreferencePage.java",
      "status": "modified",
      "additions": 17,
      "deletions": 1,
      "changes": 18,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/e6906c023ad82f4d95d94efc11dc86f7a015fb59/plugins%2Forg.jkiss.dbeaver.ui.editors.sql.ai%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2Fai%2Fpreferences%2FGPTPreferencePage.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/e6906c023ad82f4d95d94efc11dc86f7a015fb59/plugins%2Forg.jkiss.dbeaver.ui.editors.sql.ai%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2Fai%2Fpreferences%2FGPTPreferencePage.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ui.editors.sql.ai%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2Fai%2Fpreferences%2FGPTPreferencePage.java?ref=e6906c023ad82f4d95d94efc11dc86f7a015fb59",
      "patch": "@@ -17,6 +17,8 @@\n package org.jkiss.dbeaver.ui.editors.sql.ai.preferences;\n \n import org.eclipse.swt.SWT;\n+import org.eclipse.swt.events.SelectionAdapter;\n+import org.eclipse.swt.events.SelectionEvent;\n import org.eclipse.swt.layout.GridData;\n import org.eclipse.swt.widgets.*;\n import org.eclipse.ui.IWorkbench;\n@@ -37,6 +39,7 @@\n public class GPTPreferencePage extends AbstractPrefPage implements IWorkbenchPreferencePage {\n     private static final Log log = Log.getLog(GPTPreferencePage.class);\n     public static final String PAGE_ID = \"org.jkiss.dbeaver.preferences.gpt\";\n+    private static final String API_KEY_URL = \"https://beta.openai.com/account/api-keys\";\n \n     private Text tokenText;\n \n@@ -63,7 +66,9 @@ public boolean performOk() {\n         store.setValue(GPTPreferences.GPT_MODEL, modelCombo.getText());\n         store.setValue(GPTPreferences.GPT_MODEL_TEMPERATURE, temperatureText.getText());\n         store.setValue(GPTPreferences.GPT_MODEL_MAX_TOKENS, maxTokensText.getText());\n-        if (!tokenText.getText().equals(store.getString(GPTPreferences.GPT_API_TOKEN))) {\n+        if (!modelCombo.getText().equals(store.getString(GPTPreferences.GPT_MODEL)) ||\n+            !tokenText.getText().equals(store.getString(GPTPreferences.GPT_API_TOKEN))\n+        ) {\n             GPTClient.resetServices();\n         }\n         store.setValue(GPTPreferences.GPT_API_TOKEN, tokenText.getText());\n@@ -87,6 +92,15 @@ protected Control createPreferenceContent(@NotNull Composite parent) {\n             tokenText = UIUtils.createLabelText(authorizationGroup, GPTMessages.gpt_preference_page_selector_token,\n                 \"\", SWT.BORDER | SWT.PASSWORD);\n             tokenText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n+            Link link = UIUtils.createLink(authorizationGroup, \"Copy-paste API token from <a>\" + API_KEY_URL + \"</a>\", new SelectionAdapter() {\n+                @Override\n+                public void widgetSelected(SelectionEvent e) {\n+                    UIUtils.openWebBrowser(API_KEY_URL);\n+                }\n+            });\n+            GridData gd = new GridData(GridData.FILL_HORIZONTAL);\n+            gd.horizontalSpan = 2;\n+            link.setLayoutData(gd);\n             authorizationGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n         }\n         {\n@@ -104,6 +118,7 @@ protected Control createPreferenceContent(@NotNull Composite parent) {\n             for (GPTModel model : GPTModel.values()) {\n                 modelCombo.add(model.getName());\n             }\n+            UIUtils.createInfoLabel(modelGroup, \"code-davinci model suits the best for SQL code completion\", GridData.FILL_HORIZONTAL, 2);\n             {\n                 Group modelAdvancedGroup = UIUtils.createControlGroup(placeholder,\n                     GPTMessages.gpt_preference_page_group_model_advanced,\n@@ -117,6 +132,7 @@ protected Control createPreferenceContent(@NotNull Composite parent) {\n                     \"0.0\"\n                 );\n                 temperatureText.addVerifyListener(UIUtils.getNumberVerifyListener(Locale.getDefault()));\n+                UIUtils.createInfoLabel(modelAdvancedGroup, \"Lower temperatures give more precise results\", GridData.FILL_HORIZONTAL, 2);\n \n                 maxTokensText = UIUtils.createLabelText(modelAdvancedGroup,\n                     GPTMessages.gpt_preference_page_text_max_tokens,",
      "parent_sha": "5d4e73c50d71cff62777700b8c16b1f4d95bc3d9"
    }
  },
  {
    "oid": "5678d845d9cdd8fa2298dd3cba4bc0a8f9148501",
    "message": "Columns data type resolve fix\n\n\nFormer-commit-id: 5a59dc7a33cdfc340de5bcebbe000b076c1318cb",
    "date": "2019-02-02T15:33:38Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/5678d845d9cdd8fa2298dd3cba4bc0a8f9148501",
    "details": {
      "sha": "e8984e1ebed1ae1b387a03c9a4891fea13810f59",
      "filename": "plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/impl/sql/BasicSQLDialect.java",
      "status": "modified",
      "additions": 7,
      "deletions": 5,
      "changes": 12,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/5678d845d9cdd8fa2298dd3cba4bc0a8f9148501/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fimpl%2Fsql%2FBasicSQLDialect.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/5678d845d9cdd8fa2298dd3cba4bc0a8f9148501/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fimpl%2Fsql%2FBasicSQLDialect.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fimpl%2Fsql%2FBasicSQLDialect.java?ref=5678d845d9cdd8fa2298dd3cba4bc0a8f9148501",
      "patch": "@@ -24,10 +24,7 @@\n import org.jkiss.dbeaver.model.impl.data.formatters.BinaryFormatterHexNative;\r\n import org.jkiss.dbeaver.model.sql.*;\r\n import org.jkiss.dbeaver.model.sql.parser.SQLSemanticProcessor;\r\n-import org.jkiss.dbeaver.model.struct.DBSAttributeBase;\r\n-import org.jkiss.dbeaver.model.struct.DBSDataType;\r\n-import org.jkiss.dbeaver.model.struct.DBSObject;\r\n-import org.jkiss.dbeaver.model.struct.DBSTypedObject;\r\n+import org.jkiss.dbeaver.model.struct.*;\r\n import org.jkiss.dbeaver.model.struct.rdb.DBSProcedure;\r\n import org.jkiss.dbeaver.model.struct.rdb.DBSProcedureParameter;\r\n import org.jkiss.dbeaver.model.struct.rdb.DBSProcedureParameterKind;\r\n@@ -515,7 +512,12 @@ public String getColumnTypeModifiers(@NotNull DBPDataSource dataSource, @NotNull\n         if (column instanceof DBSObject) {\r\n             // If type is UDT (i.e. we can find it in type list) and type precision == column precision\r\n             // then do not use explicit precision in column definition\r\n-            final DBSDataType dataType = DBUtils.getLocalDataType(((DBSObject) column).getDataSource(), column.getTypeName());\r\n+            final DBSDataType dataType;\r\n+            if (column instanceof DBSTypedObjectEx) {\r\n+                dataType = ((DBSTypedObjectEx) column).getDataType();\r\n+            } else {\r\n+                dataType = DBUtils.getLocalDataType(((DBSObject) column).getDataSource(), column.getTypeName());\r\n+            }\r\n             if (dataType != null && CommonUtils.equalObjects(dataType.getScale(), column.getScale()) &&\r\n                     ((CommonUtils.toInt(dataType.getPrecision()) > 0 && CommonUtils.equalObjects(dataType.getPrecision(), column.getPrecision())) ||\r\n                             (dataType.getMaxLength() > 0 && dataType.getMaxLength() == column.getMaxLength())))\r",
      "parent_sha": "a800d420a19fd69906f8bc328e2947fd0fa0aaad"
    }
  },
  {
    "oid": "d53645afe3d39fb7ce1e5c8e22d4c337e2f725f4",
    "message": "dbeaver/pro#2657 Fix notification text wrapping (#33257)\n\nCo-authored-by: MashaKorax <84867187+MashaKorax@users.noreply.github.com>",
    "date": "2024-05-22T16:07:31Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/d53645afe3d39fb7ce1e5c8e22d4c337e2f725f4",
    "details": {
      "sha": "88023e9a5395d63bb414c0c3bf5b679f97294e9e",
      "filename": "plugins/org.jkiss.dbeaver.ui/src/org/jkiss/dbeaver/ui/notifications/DBeaverNotificationPopup.java",
      "status": "modified",
      "additions": 15,
      "deletions": 2,
      "changes": 17,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/d53645afe3d39fb7ce1e5c8e22d4c337e2f725f4/plugins%2Forg.jkiss.dbeaver.ui%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fnotifications%2FDBeaverNotificationPopup.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/d53645afe3d39fb7ce1e5c8e22d4c337e2f725f4/plugins%2Forg.jkiss.dbeaver.ui%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fnotifications%2FDBeaverNotificationPopup.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ui%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fnotifications%2FDBeaverNotificationPopup.java?ref=d53645afe3d39fb7ce1e5c8e22d4c337e2f725f4",
      "patch": "@@ -16,14 +16,18 @@\n import org.eclipse.swt.SWT;\n import org.eclipse.swt.accessibility.AccessibleAdapter;\n import org.eclipse.swt.accessibility.AccessibleEvent;\n+import org.eclipse.swt.events.ControlAdapter;\n+import org.eclipse.swt.events.ControlEvent;\n import org.eclipse.swt.graphics.Color;\n+import org.eclipse.swt.layout.GridData;\n import org.eclipse.swt.layout.GridLayout;\n import org.eclipse.swt.widgets.*;\n import org.eclipse.ui.IWorkbenchWindow;\n import org.eclipse.ui.PlatformUI;\n import org.eclipse.ui.forms.events.HyperlinkAdapter;\n import org.eclipse.ui.forms.events.HyperlinkEvent;\n import org.jkiss.dbeaver.ui.internal.UIMessages;\n+import org.jkiss.utils.CommonUtils;\n \n import java.util.ArrayList;\n import java.util.List;\n@@ -97,7 +101,7 @@ public void linkActivated(HyperlinkEvent e) {\n                 if (notification.getDescription() != null) {\n                     descriptionText = notification.getDescription();\n                 }\n-                if (descriptionText != null && !descriptionText.trim().equals(\"\")) { //$NON-NLS-1$\n+                if (!CommonUtils.isEmptyTrimmed(descriptionText)) { //$NON-NLS-1$\n                     Text descriptionLabel = new Text(notificationComposite, SWT.READ_ONLY | SWT.WRAP | SWT.MULTI);\n                     descriptionLabel.setText(LegacyActionTools.escapeMnemonics(descriptionText));\n                     descriptionLabel.setBackground(parent.getBackground());\n@@ -106,12 +110,21 @@ public void linkActivated(HyperlinkEvent e) {\n                         .grab(true, true)\n                         .align(SWT.FILL, SWT.FILL)\n                         .applyTo(descriptionLabel);\n+                    descriptionLabel.addControlListener(new ControlAdapter() {\n+                        @Override\n+                        public void controlResized(ControlEvent e) {\n+                            final Text label = (Text) e.widget;\n+                            label.removeControlListener(this);\n+                            ((GridData) label.getLayoutData()).widthHint = label.getSize().x;\n+                            initializeBounds(); // will force the shell to resize\n+                        }\n+                    });\n                     descriptionLabel.getAccessible().addAccessibleListener(new AccessibleAdapter() {\n                         @Override\n                         public void getName(final AccessibleEvent event) {\n                             event.result = NLS.bind(UIMessages.notification_popup_context_message, descriptionLabel.getText());\n                         }\n-                    });  \n+                    });\n                 }\n             } else {\n                 int numNotificationsRemain = notifications.size() - count;",
      "parent_sha": "208b94d6d18a8141221f46ca0c3a986316c512af"
    }
  },
  {
    "oid": "b706afe5e428b77c471e073469f64c10b5b0bc22",
    "message": "Mongo functions & system collections\n\nFormer-commit-id: f32f1f33cec63797f131f9d4b402cb2cc2a07aea",
    "date": "2015-03-04T12:20:25Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/b706afe5e428b77c471e073469f64c10b5b0bc22",
    "details": {
      "sha": "d41d61e51828bef3eb572f7d5fddd082bcc271f7",
      "filename": "plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/model/impl/AbstractSession.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/b706afe5e428b77c471e073469f64c10b5b0bc22/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fimpl%2FAbstractSession.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/b706afe5e428b77c471e073469f64c10b5b0bc22/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fimpl%2FAbstractSession.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fimpl%2FAbstractSession.java?ref=b706afe5e428b77c471e073469f64c10b5b0bc22",
      "patch": "@@ -154,7 +154,9 @@ public boolean isAutoCommit()\n         public void setAutoCommit(boolean autoCommit)\r\n             throws DBCException\r\n         {\r\n-            throw new DBCException(\"Auto-commit change not supported\");\r\n+            if (!autoCommit) {\r\n+                throw new DBCException(\"Transactional mode not supported\");\r\n+            }\r\n         }\r\n \r\n         @Override\r",
      "parent_sha": "2f05d64c91037842fd4f0010b36e0879dfc4871a"
    }
  },
  {
    "oid": "8a6f8cdc417e24d0cf49e76ea0473c382e953b15",
    "message": "#6579 Query execution statistics fix\n\n\nFormer-commit-id: 92baeefdf5be29e858f18f0aecd1b81740019a62",
    "date": "2019-08-21T18:17:43Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/8a6f8cdc417e24d0cf49e76ea0473c382e953b15",
    "details": {
      "sha": "cf237282e19657f80956806690f7fbf9508f971e",
      "filename": "plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/execute/SQLQueryJob.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/8a6f8cdc417e24d0cf49e76ea0473c382e953b15/plugins%2Forg.jkiss.dbeaver.ui.editors.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2Fexecute%2FSQLQueryJob.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/8a6f8cdc417e24d0cf49e76ea0473c382e953b15/plugins%2Forg.jkiss.dbeaver.ui.editors.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2Fexecute%2FSQLQueryJob.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ui.editors.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2Fexecute%2FSQLQueryJob.java?ref=8a6f8cdc417e24d0cf49e76ea0473c382e953b15",
      "patch": "@@ -470,10 +470,12 @@ private void executeStatement(@NotNull DBCSession session, SQLQuery sqlQuery, lo\n         // Execute statement\n         try {\n             session.getProgressMonitor().subTask(\"Execute query\");\n+\n+            boolean hasResultSet = dbcStatement.executeStatement();\n+\n             statistics.addExecuteTime(System.currentTimeMillis() - startTime);\n             statistics.addStatementsCount();\n \n-            boolean hasResultSet = dbcStatement.executeStatement();\n             curResult.setHasResultSet(hasResultSet);\n \n             long updateCount = -1;",
      "parent_sha": "c2b97fb440f02d2f3a35e321344b0543374847ed"
    }
  },
  {
    "oid": "faf589e2babf632d5b8a5e8dccde6d418f23405f",
    "message": "#5572 PG: load array data types\n\n\nFormer-commit-id: c9f199e1c00bdb51d870ca855071891835b8d39e",
    "date": "2019-11-26T22:03:07Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/faf589e2babf632d5b8a5e8dccde6d418f23405f",
    "details": {
      "sha": "f78cb416718eaf8f9071c665a12ab4b158c827eb",
      "filename": "plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreDataTypeCache.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/faf589e2babf632d5b8a5e8dccde6d418f23405f/plugins%2Forg.jkiss.dbeaver.ext.postgresql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fpostgresql%2Fmodel%2FPostgreDataTypeCache.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/faf589e2babf632d5b8a5e8dccde6d418f23405f/plugins%2Forg.jkiss.dbeaver.ext.postgresql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fpostgresql%2Fmodel%2FPostgreDataTypeCache.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ext.postgresql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fpostgresql%2Fmodel%2FPostgreDataTypeCache.java?ref=faf589e2babf632d5b8a5e8dccde6d418f23405f",
      "patch": "@@ -120,7 +120,7 @@ protected JDBCStatement prepareObjectsStatement(@NotNull JDBCSession session, @N\n             \"\\nLEFT OUTER JOIN pg_class c ON c.oid=t.typrelid\" +\r\n             \"\\nWHERE typnamespace=? \");\r\n         if (PostgreUtils.supportsTypeCategory(session.getDataSource())) {\r\n-            sql.append(\"AND t.typcategory <> 'A'\");\r\n+            //sql.append(\"AND t.typcategory <> 'A'\");\r\n         }\r\n         sql.append(\"\\nORDER by t.oid\");\r\n         final JDBCPreparedStatement dbStat = session.prepareStatement(sql.toString());\r",
      "parent_sha": "45de3ea21dfb78f55530022c87d6f8945aee561b"
    }
  },
  {
    "oid": "5aa04f069262dccdb5f66a896271ce54cc007341",
    "message": "#16270 Fix marker attributes that caused annotation to de-sync from it (#16271)",
    "date": "2022-04-22T13:03:32Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/5aa04f069262dccdb5f66a896271ce54cc007341",
    "details": {
      "sha": "193d4ad474e21203cf1d47a711d207607b7a8a11",
      "filename": "plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/SQLEditorBase.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/5aa04f069262dccdb5f66a896271ce54cc007341/plugins%2Forg.jkiss.dbeaver.ui.editors.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2FSQLEditorBase.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/5aa04f069262dccdb5f66a896271ce54cc007341/plugins%2Forg.jkiss.dbeaver.ui.editors.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2FSQLEditorBase.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ui.editors.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2FSQLEditorBase.java?ref=5aa04f069262dccdb5f66a896271ce54cc007341",
      "patch": "@@ -895,8 +895,9 @@ protected boolean addProblem(@Nullable String message, @NotNull Position positio\n             marker.setAttribute(IMarker.SEVERITY, IMarker.SEVERITY_ERROR);\n             marker.setAttribute(IMarker.MESSAGE, message);\n             marker.setAttribute(IMarker.TRANSIENT, true);\n-            MarkerUtilities.setCharStart(marker, position.offset);\n-            MarkerUtilities.setCharEnd(marker, position.offset + position.length);\n+            // For some reason, these two cause the annotation to de-sync from this marker:\n+            // MarkerUtilities.setCharStart(marker, position.offset);\n+            // MarkerUtilities.setCharEnd(marker, position.offset + position.length);\n             annotationModel.addAnnotation(new SQLProblemAnnotation(marker), position);\n         } catch (CoreException e) {\n             log.error(\"Error creating problem marker\", e);",
      "parent_sha": "466d5216f356122a06134dae3d828709b4de24a3"
    }
  },
  {
    "oid": "0ed01887f44e3c5d085e4cbf38b1be3d225facba",
    "message": "SQL script create error handle fix",
    "date": "2022-08-30T16:39:55Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/0ed01887f44e3c5d085e4cbf38b1be3d225facba",
    "details": {
      "sha": "3032536b33f8862bf8b76a433fccc60c86f41706",
      "filename": "plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/handlers/SQLEditorHandlerOpenEditor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/0ed01887f44e3c5d085e4cbf38b1be3d225facba/plugins%2Forg.jkiss.dbeaver.ui.editors.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2Fhandlers%2FSQLEditorHandlerOpenEditor.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/0ed01887f44e3c5d085e4cbf38b1be3d225facba/plugins%2Forg.jkiss.dbeaver.ui.editors.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2Fhandlers%2FSQLEditorHandlerOpenEditor.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ui.editors.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2Fhandlers%2FSQLEditorHandlerOpenEditor.java?ref=0ed01887f44e3c5d085e4cbf38b1be3d225facba",
      "patch": "@@ -125,7 +125,7 @@ public Object execute(ExecutionEvent event) throws ExecutionException {\n         } catch (InterruptedException e) {\n             return null;\n         } catch (Throwable e) {\n-            DBWorkbench.getPlatformUI().showError(\"Open editor\", \"Can execute command '\" + actionId + \"'\", e);\n+            DBWorkbench.getPlatformUI().showError(\"Open editor\", null, e);\n         }\n         return null;\n     }",
      "parent_sha": "283c3c131ddd2f78a1b9277ca8645932c235d34e"
    }
  },
  {
    "oid": "edffaa82b2d9b15aea99ae3445d085a729f08f0f",
    "message": "#17222 Fix script named parameter parser to allow quoted string literals as names",
    "date": "2022-12-28T01:35:02Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/edffaa82b2d9b15aea99ae3445d085a729f08f0f",
    "details": {
      "sha": "72b29181eafb19c18dd11efd1b0a05f3b8aa8c5b",
      "filename": "plugins/org.jkiss.dbeaver.model.sql/src/org/jkiss/dbeaver/model/sql/parser/rules/ScriptParameterRule.java",
      "status": "modified",
      "additions": 25,
      "deletions": 9,
      "changes": 34,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/edffaa82b2d9b15aea99ae3445d085a729f08f0f/plugins%2Forg.jkiss.dbeaver.model.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fsql%2Fparser%2Frules%2FScriptParameterRule.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/edffaa82b2d9b15aea99ae3445d085a729f08f0f/plugins%2Forg.jkiss.dbeaver.model.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fsql%2Fparser%2Frules%2FScriptParameterRule.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.model.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fsql%2Fparser%2Frules%2FScriptParameterRule.java?ref=edffaa82b2d9b15aea99ae3445d085a729f08f0f",
      "patch": "@@ -27,6 +27,9 @@\n * SQL parameter rule\n */\n public class ScriptParameterRule implements TPRule {\n+    \n+    private final static char QUOTE_CHAR = '\"';\n+    \n     private final SQLSyntaxManager syntaxManager;\n     private final SQLParameterToken parameterToken;\n     private final StringBuilder buffer;\n@@ -55,10 +58,24 @@ public TPToken evaluate(TPCharacterScanner scanner)\n         int c = scanner.read();\n         if (c != TPCharacterScanner.EOF && (c == anonymousParameterMark || c == namedPrefix)) {\n             buffer.setLength(0);\n-            do {\n-                buffer.append((char) c);\n-                c = scanner.read();\n-            } while (c != TPCharacterScanner.EOF && isValidChar(c));\n+            buffer.append((char) c);\n+            c = scanner.read();\n+            if (c == QUOTE_CHAR) {\n+                do {\n+                    buffer.append((char) c);\n+                    c = scanner.read();\n+                    if (c == QUOTE_CHAR) {\n+                        buffer.append((char) c);\n+                        c = scanner.read();\n+                        break;\n+                    }\n+                } while (c != TPCharacterScanner.EOF);\n+            } else {\n+                while (c != TPCharacterScanner.EOF && Character.isJavaIdentifierPart(c)) {\n+                    buffer.append((char) c);\n+                    c = scanner.read();\n+                }\n+            }\n             scanner.unread();\n \n             // Check for parameters\n@@ -69,9 +86,12 @@ public TPToken evaluate(TPCharacterScanner scanner)\n             }\n             if (syntaxManager.isParametersEnabled()) {\n                 if (buffer.charAt(0) == namedPrefix && buffer.length() > 1) {\n+                    if (buffer.charAt(1) == QUOTE_CHAR) {\n+                        return parameterToken;\n+                    }\n                     boolean validChars = true;\n                     for (int i = 1; i < buffer.length(); i++) {\n-                        if (!isValidChar(buffer.charAt(i))) {\n+                        if (!Character.isJavaIdentifierPart(buffer.charAt(i))) {\n                             validChars = false;\n                             break;\n                         }\n@@ -90,8 +110,4 @@ public TPToken evaluate(TPCharacterScanner scanner)\n         }\n         return TPTokenAbstract.UNDEFINED;\n     }\n-    \n-    private boolean isValidChar(int character) {\n-        return Character.isJavaIdentifierPart(character) || character == '\"' || character == '\\'';\n-    }\n }",
      "parent_sha": "9b097ca31b18d3fcc8141c433019ad6eb90e9a20"
    }
  },
  {
    "oid": "e937808170bdfcc603e1740f71f2db9dd0335acd",
    "message": "#15663 disable button for plaintext (#15770)",
    "date": "2022-03-11T11:22:57Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/e937808170bdfcc603e1740f71f2db9dd0335acd",
    "details": {
      "sha": "e65490f4261934b9125bc4ba32cf03c7f2ec6bc0",
      "filename": "plugins/org.jkiss.dbeaver.ui.editors.data/src/org/jkiss/dbeaver/ui/controls/resultset/handler/ResultSetPropertyTester.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/e937808170bdfcc603e1740f71f2db9dd0335acd/plugins%2Forg.jkiss.dbeaver.ui.editors.data%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2Fresultset%2Fhandler%2FResultSetPropertyTester.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/e937808170bdfcc603e1740f71f2db9dd0335acd/plugins%2Forg.jkiss.dbeaver.ui.editors.data%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2Fresultset%2Fhandler%2FResultSetPropertyTester.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ui.editors.data%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2Fresultset%2Fhandler%2FResultSetPropertyTester.java?ref=e937808170bdfcc603e1740f71f2db9dd0335acd",
      "patch": "@@ -24,6 +24,7 @@\n import org.jkiss.dbeaver.model.struct.DBSDataContainer;\n import org.jkiss.dbeaver.runtime.DBWorkbench;\n import org.jkiss.dbeaver.ui.ActionUtils;\n+import org.jkiss.dbeaver.ui.controls.resultset.IResultSetEditor;\n import org.jkiss.dbeaver.ui.controls.resultset.ResultSetRow;\n import org.jkiss.dbeaver.ui.controls.resultset.ResultSetViewer;\n import org.jkiss.utils.CommonUtils;\n@@ -106,7 +107,7 @@ private boolean checkResultSetProperty(ResultSetViewer rsv, String property, Obj\n                 }\n                 if (\"edit\".equals(expectedValue) || \"inline\".equals(expectedValue)) {\n                     DBDAttributeBinding attr = rsv.getActivePresentation().getCurrentAttribute();\n-                    if (attr == null) {\n+                    if (attr == null || !(rsv.getActivePresentation() instanceof IResultSetEditor)) {\n                         return false;\n                     }\n                     if (\"inline\".equals(expectedValue)) {",
      "parent_sha": "fadbb2cae23ff4aa66242c86751f7c2614ff3c1f"
    }
  },
  {
    "oid": "0f831abaea7ad102a2123fc74140acbd3d77c1f9",
    "message": "#10071 Schemas/Users link disabled in Connection page\n\n\nFormer-commit-id: 48d9ccbeb53e722b688f5a3b1fb81a631e3796b1",
    "date": "2020-11-26T15:24:49Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/0f831abaea7ad102a2123fc74140acbd3d77c1f9",
    "details": {
      "sha": "b5c106bc96c55e3dea40ad698556d744188e4cba",
      "filename": "plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/MySQLDataSourceProvider.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/0f831abaea7ad102a2123fc74140acbd3d77c1f9/plugins%2Forg.jkiss.dbeaver.ext.mysql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fmysql%2FMySQLDataSourceProvider.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/0f831abaea7ad102a2123fc74140acbd3d77c1f9/plugins%2Forg.jkiss.dbeaver.ext.mysql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fmysql%2FMySQLDataSourceProvider.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ext.mysql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fmysql%2FMySQLDataSourceProvider.java?ref=0f831abaea7ad102a2123fc74140acbd3d77c1f9",
      "patch": "@@ -94,7 +94,7 @@ protected String getConnectionPropertyDefaultValue(String name, String value) {\n     @Override\r\n     public long getFeatures()\r\n     {\r\n-        return FEATURE_CATALOGS | FEATURE_SCHEMAS;\r\n+        return FEATURE_CATALOGS;\r\n     }\r\n \r\n     @Override\r",
      "parent_sha": "47565380c15eb5d039a85609710b980074916327"
    }
  },
  {
    "oid": "4b7e9c0a38c648c961cc2a19993883c647805499",
    "message": "Form editor: links layout fix\n\n\nFormer-commit-id: f9817ecd1f2a4c47121e87e2a6eef926d92f51e5",
    "date": "2018-11-15T11:49:04Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/4b7e9c0a38c648c961cc2a19993883c647805499",
    "details": {
      "sha": "4147854c7305c3ec42253711840152b8f351d72c",
      "filename": "plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/editors/entity/properties/TabbedFolderPageForm.java",
      "status": "modified",
      "additions": 3,
      "deletions": 5,
      "changes": 8,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/4b7e9c0a38c648c961cc2a19993883c647805499/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fentity%2Fproperties%2FTabbedFolderPageForm.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/4b7e9c0a38c648c961cc2a19993883c647805499/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fentity%2Fproperties%2FTabbedFolderPageForm.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fentity%2Fproperties%2FTabbedFolderPageForm.java?ref=4b7e9c0a38c648c961cc2a19993883c647805499",
      "patch": "@@ -529,8 +529,8 @@ public Control createEditorControl(Composite parent, Object object, DBPPropertyD\n             UIUtils.createControlLabel(\n                 parent,\n                 property.getDisplayName());\n-            Composite linkPH = new Composite(parent, SWT.BORDER);\n-            if (!DBSObject.class.isAssignableFrom(propType)) {\n+            Composite linkPH = new Composite(parent, SWT.NONE);\n+            {\n                 linkPH.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n             }\n             GridLayout layout = new GridLayout(1, false);\n@@ -548,9 +548,7 @@ public void widgetSelected(SelectionEvent e) {\n                     }\n                 }\n             });\n-            if (!DBSObject.class.isAssignableFrom(propType)) {\n-                link.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n-            }\n+            link.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n             return link;\n         } else {\n             return UIUtils.createLabelText(",
      "parent_sha": "da15eaa3eec0faf452c6ea2d3a4bd5c547fef2dc"
    }
  },
  {
    "oid": "7f9a9aaa4171bc8ab6a18c31fe8c836b40f2acdd",
    "message": "#2654 Add \"Unique Key\" in constraint list in Generic driver\n\n\nFormer-commit-id: 5184232f39390cdbce769a43a18d104aaab19912",
    "date": "2017-12-17T16:18:55Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/7f9a9aaa4171bc8ab6a18c31fe8c836b40f2acdd",
    "details": {
      "sha": "99710062152668b05da9fee2fc37b975db1a33e4",
      "filename": "plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/edit/GenericPrimaryKeyManager.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/7f9a9aaa4171bc8ab6a18c31fe8c836b40f2acdd/plugins%2Forg.jkiss.dbeaver.ext.generic%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fgeneric%2Fedit%2FGenericPrimaryKeyManager.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/7f9a9aaa4171bc8ab6a18c31fe8c836b40f2acdd/plugins%2Forg.jkiss.dbeaver.ext.generic%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fgeneric%2Fedit%2FGenericPrimaryKeyManager.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ext.generic%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fgeneric%2Fedit%2FGenericPrimaryKeyManager.java?ref=7f9a9aaa4171bc8ab6a18c31fe8c836b40f2acdd",
      "patch": "@@ -51,7 +51,7 @@ protected GenericPrimaryKey runTask() {\n                 EditConstraintPage editPage = new EditConstraintPage(\r\n                     \"Create constraint\",\r\n                     parent,\r\n-                    new DBSEntityConstraintType[] {DBSEntityConstraintType.PRIMARY_KEY} );\r\n+                    new DBSEntityConstraintType[] {DBSEntityConstraintType.PRIMARY_KEY, DBSEntityConstraintType.UNIQUE_KEY} );\r\n                 if (!editPage.edit()) {\r\n                     return null;\r\n                 }\r",
      "parent_sha": "46b4cb704d327375e316f472edc5015fbb316805"
    }
  },
  {
    "oid": "e1f67d8217679e103b8d1926384e388aa8698ad9",
    "message": "DB2 : Fix package statements sort\n\nFormer-commit-id: 0fef60296164e30fa416d03d878cfe11bc9e913f",
    "date": "2013-09-28T00:09:30Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/e1f67d8217679e103b8d1926384e388aa8698ad9",
    "details": {
      "sha": "8d67377050bc487ff78ae5af59378f1df127ae7f",
      "filename": "plugins/org.jkiss.dbeaver.db2/src/org/jkiss/dbeaver/ext/db2/model/DB2Package.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/e1f67d8217679e103b8d1926384e388aa8698ad9/plugins%2Forg.jkiss.dbeaver.db2%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fdb2%2Fmodel%2FDB2Package.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/e1f67d8217679e103b8d1926384e388aa8698ad9/plugins%2Forg.jkiss.dbeaver.db2%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fdb2%2Fmodel%2FDB2Package.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.db2%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fdb2%2Fmodel%2FDB2Package.java?ref=e1f67d8217679e103b8d1926384e388aa8698ad9",
      "patch": "@@ -43,7 +43,7 @@\n public class DB2Package extends DB2SchemaObject implements DBPRefreshableObject {\n \n     private static final String C_DEP = \"SELECT * FROM SYSCAT.PACKAGEDEP WHERE PKGSCHEMA = ? AND PKGNAME = ? ORDER BY BSCHEMA,BNAME WITH UR\";\n-    private static final String C_STM = \"SELECT * FROM SYSCAT.STATEMENTS WHERE PKGSCHEMA = ? AND PKGNAME = ? ORDER BY STMTNO WITH UR\";\n+    private static final String C_STM = \"SELECT * FROM SYSCAT.STATEMENTS WHERE PKGSCHEMA = ? AND PKGNAME = ? ORDER BY SECTNO WITH UR\";\n \n     private final DBSObjectCache<DB2Package, DB2PackageDep> packageDepCache;\n     private final DBSObjectCache<DB2Package, DB2PackageStatement> packageStatementsCache;",
      "parent_sha": "7c90ebcdba5573786f2dada4bac1cc1f2cf2b45c"
    }
  },
  {
    "oid": "4feacf7b6020fe5ee61c7863273b139be4edc9b2",
    "message": "Grid hover fix (order column cursor)\n\n\nFormer-commit-id: 7e9591d8e6a0aceb9bc4c00b0472d16d532e8014",
    "date": "2017-01-31T20:01:26Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/4feacf7b6020fe5ee61c7863273b139be4edc9b2",
    "details": {
      "sha": "bad4441261744f67c934967ebc2375c5f5160d74",
      "filename": "plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/controls/lightgrid/LightGrid.java",
      "status": "modified",
      "additions": 17,
      "deletions": 15,
      "changes": 32,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/4feacf7b6020fe5ee61c7863273b139be4edc9b2/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2Flightgrid%2FLightGrid.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/4feacf7b6020fe5ee61c7863273b139be4edc9b2/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2Flightgrid%2FLightGrid.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2Flightgrid%2FLightGrid.java?ref=4feacf7b6020fe5ee61c7863273b139be4edc9b2",
      "patch": "@@ -1949,23 +1949,25 @@ private void handleHoverOnColumnHeader(int x, int y)\n                     overSorter = true;\r\n                 }\r\n             } else {\r\n-                for (GridColumn column : columns) {\r\n-                    if (x >= x2 && x <= x2 + column.getWidth()) {\r\n-                        hoveringOnHeader = true;\r\n-                        if (column.isOverSortArrow(x - x2, y)) {\r\n-                            overSorter = true;\r\n-                            columnBeingSorted = column;\r\n-                            break;\r\n-                        }\r\n-                        x2 += column.getWidth();\r\n-                        if (x2 >= (x - COLUMN_RESIZER_THRESHOLD) && x2 <= (x + COLUMN_RESIZER_THRESHOLD)) {\r\n-                            overResizer = true;\r\n+                if (x > getRowHeaderWidth()) {\r\n+                    for (GridColumn column : columns) {\r\n+                        if (x >= x2 && x <= x2 + column.getWidth()) {\r\n+                            hoveringOnHeader = true;\r\n+                            if (column.isOverSortArrow(x - x2, y)) {\r\n+                                overSorter = true;\r\n+                                columnBeingSorted = column;\r\n+                                break;\r\n+                            }\r\n+                            x2 += column.getWidth();\r\n+                            if (x2 >= (x - COLUMN_RESIZER_THRESHOLD) && x2 <= (x + COLUMN_RESIZER_THRESHOLD)) {\r\n+                                overResizer = true;\r\n \r\n-                            columnBeingResized = column;\r\n-                            break;\r\n+                                columnBeingResized = column;\r\n+                                break;\r\n+                            }\r\n+                        } else {\r\n+                            x2 += column.getWidth();\r\n                         }\r\n-                    } else {\r\n-                        x2 += column.getWidth();\r\n                     }\r\n                 }\r\n             }\r",
      "parent_sha": "8b518ca507fd3fddd84b4b3cbc9677ffa57627e5"
    }
  },
  {
    "oid": "96da0eb96289163b5e9d5e2a27a2ffa685a237bb",
    "message": "Smart combo - missing image fix\n\n\nFormer-commit-id: c4ee029dc290891e0997f522e0b66b1e63d59be9",
    "date": "2018-04-29T14:17:42Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/96da0eb96289163b5e9d5e2a27a2ffa685a237bb",
    "details": {
      "sha": "d1f42809fd07d2820c3085b3063563037a8cc610",
      "filename": "plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/controls/CSmartCombo.java",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/96da0eb96289163b5e9d5e2a27a2ffa685a237bb/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2FCSmartCombo.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/96da0eb96289163b5e9d5e2a27a2ffa685a237bb/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2FCSmartCombo.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2FCSmartCombo.java?ref=96da0eb96289163b5e9d5e2a27a2ffa685a237bb",
      "patch": "@@ -344,7 +344,7 @@ public void select(int index)\n         checkWidget();\n \n         String itemText;\n-        Image itemImage;\n+        Image itemImage = null;\n         Color itemBackground = null;\n         if (index < 0) {\n             selectedItem = null;\n@@ -354,7 +354,11 @@ public void select(int index)\n         } else {\n             selectedItem = this.items.get(index);\n             itemText = labelProvider.getText(selectedItem);\n-            itemImage = labelProvider.getImage(selectedItem);\n+            try {\n+                itemImage = labelProvider.getImage(selectedItem);\n+            } catch (Exception e) {\n+                // No image\n+            }\n             if (labelProvider instanceof IColorProvider) {\n                 itemBackground = ((IColorProvider) labelProvider).getBackground(selectedItem);\n             }",
      "parent_sha": "04835d0c1326a32aa6e4b7ee7cfbe74d4ca5fa8e"
    }
  },
  {
    "oid": "3aacb5b8dc94feb7cd414f7488c11ac4d6a49ec1",
    "message": "#12182 Cache fix (invalidate if cannot find the desired table)",
    "date": "2021-06-29T09:25:51Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/3aacb5b8dc94feb7cd414f7488c11ac4d6a49ec1",
    "details": {
      "sha": "4d74e8189282d9770c858accbce3ae2629c6cb25",
      "filename": "plugins/org.jkiss.dbeaver.ext.mssql/src/org/jkiss/dbeaver/ext/mssql/model/SQLServerStructureAssistant.java",
      "status": "modified",
      "additions": 9,
      "deletions": 8,
      "changes": 17,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/3aacb5b8dc94feb7cd414f7488c11ac4d6a49ec1/plugins%2Forg.jkiss.dbeaver.ext.mssql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fmssql%2Fmodel%2FSQLServerStructureAssistant.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/3aacb5b8dc94feb7cd414f7488c11ac4d6a49ec1/plugins%2Forg.jkiss.dbeaver.ext.mssql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fmssql%2Fmodel%2FSQLServerStructureAssistant.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ext.mssql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fmssql%2Fmodel%2FSQLServerStructureAssistant.java?ref=3aacb5b8dc94feb7cd414f7488c11ac4d6a49ec1",
      "patch": "@@ -236,11 +236,8 @@ private void searchTempTables(@NotNull JDBCSession session, @NotNull ObjectsSear\n         final SQLServerDatabase database = dataSource.getDatabase(session.getProgressMonitor(), SQLServerConstants.TEMPDB_DATABASE);\n         final SQLServerSchema schema = database.getSchema(session.getProgressMonitor(), SQLServerConstants.DEFAULT_SCHEMA_NAME);\n \n-        // Otherwise reference resolution will fail if tables are not cached. Is there any better solution for that?\n-        schema.getTableCache().setFullCache(false);\n-\n         final StringBuilder sql = new StringBuilder()\n-            .append(\"SELECT TOP \").append(params.getMaxResults() - objects.size()).append(\" * \")\n+            .append(\"SELECT TOP \").append(params.getMaxResults() - objects.size()).append(\" *\")\n             .append(\"\\nFROM \").append(SQLServerUtils.getSystemTableName(database, \"all_objects\"))\n             .append(\"\\nWHERE type = '\").append(SQLServerObjectType.U.name())\n             .append(\"' AND name LIKE '#%' AND name LIKE ? AND OBJECT_ID(CONCAT('\").append(SQLServerConstants.TEMPDB_DATABASE).append(\"..', QUOTENAME(name))) <> 0\");\n@@ -253,15 +250,19 @@ private void searchTempTables(@NotNull JDBCSession session, @NotNull ObjectsSear\n                 while (dbResult.next() && !session.getProgressMonitor().isCanceled()) {\n                     final String objectName = JDBCUtils.safeGetString(dbResult, \"name\");\n                     final String objectNameTrimmed = extractTempTableName(objectName);\n-                    final String objectTypeName = JDBCUtils.safeGetStringTrimmed(dbResult, \"type\");\n-                    final SQLServerObjectType objectType = SQLServerObjectType.valueOf(objectTypeName);\n+                    final SQLServerObjectType objectType = SQLServerObjectType.valueOf(JDBCUtils.safeGetStringTrimmed(dbResult, \"type\"));\n \n                     objects.add(new AbstractObjectReference(objectName, database, null, objectType.getTypeClass(), objectType) {\n                         @Override\n                         public DBSObject resolveObject(DBRProgressMonitor monitor) throws DBException {\n-                            final DBSObject object = objectType.findObject(session.getProgressMonitor(), database, schema, objectName);\n+                            DBSObject object = schema.getChild(session.getProgressMonitor(), objectName);\n+                            if (object == null) {\n+                                // Likely not cached, invalidate and try again\n+                                schema.getTableCache().setFullCache(false);\n+                                object = schema.getChild(session.getProgressMonitor(), objectName);\n+                            }\n                             if (object == null) {\n-                                throw new DBException(objectTypeName + \" '\" + objectName + \"' not found\");\n+                                throw new DBException(objectType.name() + \" '\" + objectName + \"' not found\");\n                             }\n                             return object;\n                         }",
      "parent_sha": "209c6e798a2addfffc8beaca21f7c5921bdd5524"
    }
  },
  {
    "oid": "c89e18dccd0199097773d8fe6d72431e48de53f6",
    "message": "#14953 turn off autocomplete window for drop-down lists (#15873)",
    "date": "2022-03-17T13:31:04Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/c89e18dccd0199097773d8fe6d72431e48de53f6",
    "details": {
      "sha": "7a54bf964434d34eac23aa751339d6c5001b2dcc",
      "filename": "plugins/org.jkiss.dbeaver.ui/src/org/jkiss/dbeaver/ui/controls/CustomComboBoxCellEditor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/c89e18dccd0199097773d8fe6d72431e48de53f6/plugins%2Forg.jkiss.dbeaver.ui%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2FCustomComboBoxCellEditor.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/c89e18dccd0199097773d8fe6d72431e48de53f6/plugins%2Forg.jkiss.dbeaver.ui%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2FCustomComboBoxCellEditor.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ui%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2FCustomComboBoxCellEditor.java?ref=c89e18dccd0199097773d8fe6d72431e48de53f6",
      "patch": "@@ -80,7 +80,7 @@ protected Control createControl(Composite parent) {\n         comboBox.setFont(parent.getFont());\n         comboBox.setBackground(parent.getDisplay().getSystemColor(SWT.COLOR_LIST_BACKGROUND));\n \n-        if ((getStyle() & SWT.READ_ONLY) == 0) {\n+        if ((getStyle() & (SWT.READ_ONLY | SWT.DROP_DOWN)) == 0) {\n             // Install proposal provider for editable combos\n             // In fact it was a bad idea to use proposals in inline combo editors (#2409)\n             proposalProvider = new StringContentProposalProvider(true, comboBox.getItems());",
      "parent_sha": "9a2b38cb802d82c1da5dcbd00c9bdb39c593ddbd"
    }
  },
  {
    "oid": "2004c06e4c1a88d65f750456c53945af8de346cc",
    "message": "#12965 change default scale value for date/time columns",
    "date": "2021-06-24T07:58:43Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/2004c06e4c1a88d65f750456c53945af8de346cc",
    "details": {
      "sha": "6a6bbe9024c5845c518b8f0b7827ac19b05820c5",
      "filename": "plugins/org.jkiss.dbeaver.ext.mssql/src/org/jkiss/dbeaver/ext/mssql/model/SQLServerDialect.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/2004c06e4c1a88d65f750456c53945af8de346cc/plugins%2Forg.jkiss.dbeaver.ext.mssql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fmssql%2Fmodel%2FSQLServerDialect.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/2004c06e4c1a88d65f750456c53945af8de346cc/plugins%2Forg.jkiss.dbeaver.ext.mssql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fmssql%2Fmodel%2FSQLServerDialect.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ext.mssql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fmssql%2Fmodel%2FSQLServerDialect.java?ref=2004c06e4c1a88d65f750456c53945af8de346cc",
      "patch": "@@ -196,7 +196,7 @@ public String getColumnTypeModifiers(@NotNull DBPDataSource dataSource, @NotNull\n                     SQLServerConstants.TYPE_TIME.equalsIgnoreCase(typeName) ||\n                     SQLServerConstants.TYPE_DATETIMEOFFSET.equalsIgnoreCase(typeName)) {\n                 Integer scale = column.getScale();\n-                if (scale != null && scale != 0) {\n+                if (scale != null && scale >= 0 && scale < 7) {\n                     return \"(\" + scale + ')';\n                 }\n             }",
      "parent_sha": "f38520c895471ed3fa8cb08049572df77261c3ba"
    }
  },
  {
    "oid": "c5a633b118fb5d05c41f83721cd37c80db669265",
    "message": "Generic connection page fix (NPE)\n\n\nFormer-commit-id: 6504b1e84b7aec9e341fdc659671b8c93636debc",
    "date": "2020-08-24T08:30:43Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/c5a633b118fb5d05c41f83721cd37c80db669265",
    "details": {
      "sha": "eff098fea51c84bd14150889af787b0efaa5948d",
      "filename": "plugins/org.jkiss.dbeaver.ext.generic.ui/src/org/jkiss/dbeaver/ext/generic/views/GenericConnectionPage.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/c5a633b118fb5d05c41f83721cd37c80db669265/plugins%2Forg.jkiss.dbeaver.ext.generic.ui%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fgeneric%2Fviews%2FGenericConnectionPage.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/c5a633b118fb5d05c41f83721cd37c80db669265/plugins%2Forg.jkiss.dbeaver.ext.generic.ui%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fgeneric%2Fviews%2FGenericConnectionPage.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ext.generic.ui%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fgeneric%2Fviews%2FGenericConnectionPage.java?ref=c5a633b118fb5d05c41f83721cd37c80db669265",
      "patch": "@@ -343,7 +343,7 @@ public void loadSettings()\n             if (portText != null) {\n                 if (site.isNew() && CommonUtils.isEmpty(connectionInfo.getHostPort())) {\n                     portText.setText(CommonUtils.notEmpty(site.getDriver().getDefaultPort()));\n-                } else {\n+                } else if (!CommonUtils.isEmpty(connectionInfo.getHostPort())) {\n                     portText.setText(connectionInfo.getHostPort());\n                 }\n             }",
      "parent_sha": "f154502ba43c58fd12c6fc4815297456fc48b1e5"
    }
  },
  {
    "oid": "45b2a930c97626426df5eb6e1e8429717b794e36",
    "message": "#2156 code cleanup\n\n\nFormer-commit-id: 27cc40f7ac5d5162f1be98d82c1438677760d553",
    "date": "2020-11-09T13:51:54Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/45b2a930c97626426df5eb6e1e8429717b794e36",
    "details": {
      "sha": "3fc38bec5d1a2195db4c3aefe6055373b91e442e",
      "filename": "plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/syntax/SQLReconcilingStrategy.java",
      "status": "modified",
      "additions": 23,
      "deletions": 156,
      "changes": 179,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/45b2a930c97626426df5eb6e1e8429717b794e36/plugins%2Forg.jkiss.dbeaver.ui.editors.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2Fsyntax%2FSQLReconcilingStrategy.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/45b2a930c97626426df5eb6e1e8429717b794e36/plugins%2Forg.jkiss.dbeaver.ui.editors.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2Fsyntax%2FSQLReconcilingStrategy.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ui.editors.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2Fsyntax%2FSQLReconcilingStrategy.java?ref=45b2a930c97626426df5eb6e1e8429717b794e36",
      "patch": "@@ -28,7 +28,6 @@\n import org.eclipse.jface.text.source.projection.ProjectionAnnotation;\n import org.eclipse.jface.text.source.projection.ProjectionAnnotationModel;\n import org.jkiss.code.Nullable;\n-import org.jkiss.dbeaver.Log;\n import org.jkiss.dbeaver.model.sql.SQLScriptElement;\n import org.jkiss.dbeaver.ui.editors.sql.SQLEditorBase;\n \n@@ -38,15 +37,15 @@\n  * SQLReconcilingStrategy\n  */\n public class SQLReconcilingStrategy implements IReconcilingStrategy, IReconcilingStrategyExtension {\n-    private static final Log log = Log.getLog(SQLReconcilingStrategy.class);\n+    private static final boolean ACTIVATE_FOLDS_WHEN_STATEMENT_IS_LONGER_THAN_TWO_LINES_AND_THERE_IS_SOMETHING_ELSE_OTHER_THAT_WHITESPACES_ON_THE_LINE_AFTER_THE_STATEMENT = false;\n \n     private Collection<Annotation> oldAnnotations = new ArrayList<>();\n \n     private SQLEditorBase editor;\n \n     private IDocument document;\n \n-    private IProgressMonitor monitor;\n+    private IProgressMonitor monitor; //TODO use me\n \n     public SQLEditorBase getEditor() {\n         return editor;\n@@ -81,12 +80,6 @@ public void initialReconcile() {\n         reconcile();\n     }\n \n-    private void logDebug(int... values) { //fixme delete\n-        for (int i: values) {\n-            log.debug(\"i=+\" + i + \", ch=\" + unsafeGetChar(i));\n-        }\n-    }\n-\n     private void reconcile() {\n         if (!editor.isFoldingEnabled()) {\n             return;\n@@ -99,23 +92,31 @@ private void reconcile() {\n         Map<Annotation, Position> newAnnotations = new HashMap<>();\n         Collection<Annotation> annotations = new ArrayList<>();\n         for (SQLScriptElement element: queries) {\n-            int numberOfLines = getNumberOfLines(element);\n-            if (numberOfLines == 1) {\n-                continue;\n+            if (deservesFolding(element)) {\n+                Annotation annotation = new ProjectionAnnotation();\n+                Position position = new Position(element.getOffset(), expandQueryLength(element));\n+                newAnnotations.put(annotation, position);\n+                annotations.add(annotation);\n             }\n-            int newLength = calcLengthOfExpandedQueryToTheEndOfTheLine(element); //fixme needs rename\n-            if (numberOfLines == 2 && newLength == element.getLength() && element.getOffset() + element.getLength() != document.getLength()) {\n-                continue;\n-            }\n-            Annotation annotation = new ProjectionAnnotation();\n-            Position position = new Position(element.getOffset(), newLength);\n-            newAnnotations.put(annotation, position);\n-            annotations.add(annotation);\n         }\n         model.modifyAnnotations(oldAnnotations.toArray(new Annotation[0]), newAnnotations, null);\n         oldAnnotations = annotations;\n     }\n \n+    private boolean deservesFolding(SQLScriptElement element) {\n+        int numberOfLines = getNumberOfLines(element);\n+        if (numberOfLines == 1) {\n+            return false;\n+        }\n+        if (numberOfLines == 2 && expandQueryLength(element) == element.getLength() && element.getOffset() + element.getLength() != document.getLength()) {\n+            return false;\n+        }\n+        if (numberOfLines > 2 && expandQueryLength(element) == element.getLength()) {\n+            return ACTIVATE_FOLDS_WHEN_STATEMENT_IS_LONGER_THAN_TWO_LINES_AND_THERE_IS_SOMETHING_ELSE_OTHER_THAT_WHITESPACES_ON_THE_LINE_AFTER_THE_STATEMENT;\n+        }\n+        return true;\n+    }\n+\n     private int getNumberOfLines(SQLScriptElement element) {\n         try {\n             return document.getLineOfOffset(element.getOffset() + element.getLength()) - document.getLineOfOffset(element.getOffset()) + 1;\n@@ -124,8 +125,8 @@ private int getNumberOfLines(SQLScriptElement element) {\n         }\n     }\n \n-    //todo rename\n-    private int calcLengthOfExpandedQueryToTheEndOfTheLine(SQLScriptElement element) {\n+    //expands query to the end of the line if there are only whitespaces after it. Returns desired length.\n+    private int expandQueryLength(SQLScriptElement element) {\n         int position = element.getOffset() + element.getLength();\n         while (position < document.getLength()) {\n             char c = unsafeGetChar(position);\n@@ -170,138 +171,4 @@ private SQLReconcilingStrategyException(Throwable cause) {\n             super(cause);\n         }\n     }\n-\n-//    protected void calculatePositions(IRegion partition)\n-//    {\n-//        if (!editor.isFoldingEnabled()) {\n-//            return;\n-//        }\n-//\n-//        List<Annotation> removedAnnotations = null;\n-//        Map<Annotation, Position> addedAnnotations = null;\n-//\n-//        if (partition == null) {\n-//            regionOffset = 0;\n-//            regionLength = document.getLength();\n-//        } else {\n-//            regionOffset = partition.getOffset();\n-//            regionLength = partition.getLength();\n-//\n-//            for (int i = 0; i < parsedPositions.size(); i++) {\n-//                SQLScriptPosition sp = parsedPositions.get(i);\n-//                if (sp.getOffset() <= regionOffset + regionLength && sp.getOffset() + sp.getLength() >= regionOffset + regionLength) {\n-//                    SQLScriptPosition startPos = i > 0 ? parsedPositions.get(i - 1) : sp;\n-//                    SQLScriptPosition endPos = i < parsedPositions.size() - 1 ? parsedPositions.get(i + 1) : sp;\n-//                    regionOffset = i == 0 ? 0 : startPos.getOffset();\n-//                    regionLength = endPos.getOffset() + endPos.getLength() + regionLength;\n-//                    break;\n-//                }\n-//            }\n-//\n-///*\n-//            if (partition instanceof DirtyRegion) {\n-//                // Modify positions\n-//                DirtyRegion dirtyRegion = (DirtyRegion)partition;\n-//                // Shift parsed positions\n-//                boolean insert = DirtyRegion.INSERT.equals(dirtyRegion.getType());\n-//                for (SQLScriptPosition sp : parsedPositions) {\n-//                    if (dirtyRegion.getOffset() > sp.getOffset() && dirtyRegion.getOffset() < sp.getOffset() + sp.getLength()) {\n-//                        // In this position\n-//                        if (insert) {\n-//                            sp.setLength(sp.getLength() + dirtyRegion.getLength());\n-//                        } else {\n-//                            sp.setLength(sp.getLength() - dirtyRegion.getLength());\n-//                        }\n-//                    } else if (sp.getOffset() >= dirtyRegion.getOffset()) {\n-//                        // After this position\n-//                        if (insert) {\n-//                            sp.setOffset(sp.getOffset() + dirtyRegion.getLength());\n-//                        } else {\n-//                            sp.setOffset(sp.getOffset() - dirtyRegion.getLength());\n-//                        }\n-//                    }\n-//                }\n-//            }\n-//*/\n-//        }\n-//        ProjectionAnnotationModel annotationModel = editor.getAnnotationModel();\n-//        if (annotationModel == null) {\n-//            return;\n-//        }\n-//        List<SQLScriptElement> queries;\n-//        try {\n-//            queries = editor.extractScriptQueries(regionOffset, document.getLength() - regionOffset, false, true, false);\n-//        } catch (Exception e) {\n-//            log.error(\"Error parsing script queries\", e);\n-//            return;\n-//        }\n-//\n-//        {\n-//            List<SQLScriptPosition> removedPositions = new ArrayList<>();\n-//            for (SQLScriptPosition sp : parsedPositions) {\n-//                if (sp.getOffset() >= regionOffset/* && sp.getOffset() <= regionOffset + regionLength*/) {\n-//                    removedPositions.add(sp);\n-//                }\n-//            }\n-//            if (!removedPositions.isEmpty()) {\n-//                parsedPositions.removeAll(removedPositions);\n-//                removedAnnotations = new ArrayList<>();\n-//                for (SQLScriptPosition removedPosition : removedPositions) {\n-//                    if (removedPosition.isMultiline()) {\n-//                        removedAnnotations.add(removedPosition.getFoldingAnnotation());\n-//                    }\n-//                }\n-//            }\n-//        }\n-//\n-//        try {\n-//            List<SQLScriptPosition> addedPositions = new ArrayList<>();\n-//            int documentLength = document.getLength();\n-//            for (SQLScriptElement se : queries) {\n-//                int queryOffset = se.getOffset();\n-//                int queryLength = se.getLength();\n-//\n-//                boolean isMultiline = document.getLineOfOffset(queryOffset) != document.getLineOfOffset(queryOffset + queryLength);\n-//\n-//                // Expand query to the end of line\n-//                for (int i = queryOffset + queryLength; i < documentLength; i++) {\n-//                    char ch = document.getChar(i);\n-//                    if (Character.isWhitespace(ch)) {\n-//                        queryLength++;\n-//                    }\n-//                    if (ch == '\\n') {\n-//                        break;\n-//                    }\n-//                }\n-//                addedPositions.add(new SQLScriptPosition(queryOffset, queryLength, isMultiline, new ProjectionAnnotation()));\n-//            }\n-//            if (!addedPositions.isEmpty()) {\n-//                final int firstQueryPos = addedPositions.get(0).getOffset();\n-//                int posBeforeFirst = 0;\n-//                for (int i = 0; i < parsedPositions.size(); i++) {\n-//                    SQLScriptPosition sp = parsedPositions.get(i);\n-//                    if (sp.getOffset() >= firstQueryPos) {\n-//                        break;\n-//                    }\n-//                    posBeforeFirst = i;\n-//                }\n-//                parsedPositions.addAll(posBeforeFirst, addedPositions);\n-//\n-//                addedAnnotations = new HashMap<>();\n-//                for (SQLScriptPosition pos : addedPositions) {\n-//                    if (pos.isMultiline()) {\n-//                        addedAnnotations.put(pos.getFoldingAnnotation(), pos);\n-//                    }\n-//                }\n-//            }\n-//        } catch (Exception e) {\n-//            log.error(e);\n-//        }\n-//        if (removedAnnotations != null || !CommonUtils.isEmpty(addedAnnotations)) {\n-//            annotationModel.modifyAnnotations(\n-//                removedAnnotations == null ? null : removedAnnotations.toArray(new Annotation[removedAnnotations.size()]),\n-//                addedAnnotations,\n-//                null);\n-//        }\n-//    }\n }",
      "parent_sha": "c8a11a0853f7f95481f8a4a7e45d3545118bc4da"
    }
  },
  {
    "oid": "ebd35b56858c03a6204463c9dbddf5a0fa315617",
    "message": "Grid width compute fix (for single row)\n\nFormer-commit-id: 6c0ea1524c34044086636d0a5d2ae03b82737080",
    "date": "2012-11-06T21:09:59Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/ebd35b56858c03a6204463c9dbddf5a0fa315617",
    "details": {
      "sha": "04ef9d97b7629da6ed62657ea661ed19451e9d3e",
      "filename": "plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/controls/lightgrid/GridColumn.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/ebd35b56858c03a6204463c9dbddf5a0fa315617/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2Flightgrid%2FGridColumn.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/ebd35b56858c03a6204463c9dbddf5a0fa315617/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2Flightgrid%2FGridColumn.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2Flightgrid%2FGridColumn.java?ref=ebd35b56858c03a6204463c9dbddf5a0fa315617",
      "patch": "@@ -383,7 +383,7 @@ public void pack() {\n             int columnIndex = getIndex();\r\n             int topIndex = parent.getTopIndex();\r\n             int bottomIndex = parent.getBottomIndex();\r\n-            if (topIndex >= 0 && bottomIndex > topIndex) {\r\n+            if (topIndex >= 0 && bottomIndex >= topIndex) {\r\n                 for (int i = topIndex; i <= bottomIndex; i++) {\r\n                     newWidth = Math.max(newWidth, computeCellWidth(columnIndex, i));\r\n                 }\r",
      "parent_sha": "5e1ecb8c67ee4075b1e69269b45477bfa9576ff7"
    }
  },
  {
    "oid": "29bd4c94b419b0e1f115bab180ac4a927d095275",
    "message": "CB-2660 Return empty properties",
    "date": "2022-10-13T13:05:22Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/29bd4c94b419b0e1f115bab180ac4a927d095275",
    "details": {
      "sha": "87b98eacabbb2040e60d2fda12fe762d80f437e4",
      "filename": "plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/rm/RMResource.java",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/29bd4c94b419b0e1f115bab180ac4a927d095275/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Frm%2FRMResource.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/29bd4c94b419b0e1f115bab180ac4a927d095275/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Frm%2FRMResource.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Frm%2FRMResource.java?ref=29bd4c94b419b0e1f115bab180ac4a927d095275",
      "patch": "@@ -19,7 +19,6 @@\n import org.jkiss.code.NotNull;\n import org.jkiss.dbeaver.model.meta.Property;\n \n-import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n \n@@ -85,7 +84,7 @@ public void setChanges(List<RMResourceChange> changes) {\n     }\n \n     public Map<String, Object> getProperties() {\n-        return properties == null ? Collections.emptyMap() : properties;\n+        return properties;\n     }\n \n     public void setProperties(Map<String, Object> properties) {",
      "parent_sha": "eacf3f039c2fb677d7256b40c7fd4a4911a3aa79"
    }
  },
  {
    "oid": "7315405a8dce2c5dae0d9369d543672da0210710",
    "message": "dbeaver/pro#1198 Rearrange dashboard context menu elements (#18742)",
    "date": "2023-01-16T12:59:00Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/7315405a8dce2c5dae0d9369d543672da0210710",
    "details": {
      "sha": "74fd6481b649c61f8822ce2a5c42d72c38016357",
      "filename": "plugins/org.jkiss.dbeaver.ui.dashboard/src/org/jkiss/dbeaver/ui/dashboard/control/DashboardChartComposite.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/7315405a8dce2c5dae0d9369d543672da0210710/plugins%2Forg.jkiss.dbeaver.ui.dashboard%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fdashboard%2Fcontrol%2FDashboardChartComposite.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/7315405a8dce2c5dae0d9369d543672da0210710/plugins%2Forg.jkiss.dbeaver.ui.dashboard%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fdashboard%2Fcontrol%2FDashboardChartComposite.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ui.dashboard%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fdashboard%2Fcontrol%2FDashboardChartComposite.java?ref=7315405a8dce2c5dae0d9369d543672da0210710",
      "patch": "@@ -72,9 +72,7 @@ protected void fillContextMenu(IMenuManager manager) {\n             manager.add(ActionUtils.makeCommandContribution(UIUtils.getActiveWorkbenchWindow(), DashboardConstants.CMD_VIEW_DASHBOARD));\n             manager.add(new Separator());\n         }\n-        super.fillContextMenu(manager);\n         if (!UIUtils.isInDialog(this)) {\n-            manager.add(new Separator());\n             MenuManager viewMenu = new MenuManager(UIDashboardMessages.dashboard_chart_composite_menu_manager_text);\n             List<DashboardViewType> viewTypes = DashboardRegistry.getInstance().getSupportedViewTypes(dashboardContainer.getDashboardDataType());\n             for (DashboardViewType viewType : viewTypes) {\n@@ -104,6 +102,8 @@ public void runWithEvent(Event event) {\n             manager.add(ActionUtils.makeCommandContribution(UIUtils.getActiveWorkbenchWindow(), DashboardConstants.CMD_REMOVE_DASHBOARD));\n             manager.add(ActionUtils.makeCommandContribution(UIUtils.getActiveWorkbenchWindow(), DashboardConstants.CMD_RESET_DASHBOARD));\n         }\n+        manager.add(new Separator());\n+        super.fillContextMenu(manager);\n     }\n \n     @Override",
      "parent_sha": "5de56d2cb4735617064d04f9bc4df35540f18152"
    }
  },
  {
    "oid": "1d2d5b85bc34c758f2a3d067f75bf01408701764",
    "message": "Oracle nullable columns creation fix\n\nFormer-commit-id: f59d497122cc856caf63d44e106b6f159abb9e9f",
    "date": "2014-02-16T10:17:38Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/1d2d5b85bc34c758f2a3d067f75bf01408701764",
    "details": {
      "sha": "bafc1e3a89acbc27e46aeb86a451280da0f9cc78",
      "filename": "plugins/org.jkiss.dbeaver.oracle/src/org/jkiss/dbeaver/ext/oracle/edit/OracleTableColumnManager.java",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/1d2d5b85bc34c758f2a3d067f75bf01408701764/plugins%2Forg.jkiss.dbeaver.oracle%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Foracle%2Fedit%2FOracleTableColumnManager.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/1d2d5b85bc34c758f2a3d067f75bf01408701764/plugins%2Forg.jkiss.dbeaver.oracle%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Foracle%2Fedit%2FOracleTableColumnManager.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.oracle%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Foracle%2Fedit%2FOracleTableColumnManager.java?ref=1d2d5b85bc34c758f2a3d067f75bf01408701764",
      "patch": "@@ -43,6 +43,13 @@\n  */\r\n public class OracleTableColumnManager extends JDBCTableColumnManager<OracleTableColumn, OracleTableBase> {\r\n \r\n+    protected final ColumnModifier<OracleTableColumn> OracleNotNullModifier = new ColumnModifier<OracleTableColumn>() {\r\n+        @Override\r\n+        public void appendModifier(OracleTableColumn column, StringBuilder sql) {\r\n+            sql.append(column.isRequired() ? \" NOT NULL\" : \" NULL\");\r\n+        }\r\n+    };\r\n+\r\n     @Override\r\n     public DBSObjectCache<? extends DBSObject, OracleTableColumn> getObjectsCache(OracleTableColumn object)\r\n     {\r\n@@ -51,7 +58,7 @@ public DBSObjectCache<? extends DBSObject, OracleTableColumn> getObjectsCache(Or\n \r\n     protected ColumnModifier<OracleTableColumn>[] getSupportedModifiers()\r\n     {\r\n-        return new ColumnModifier[] {DataTypeModifier, DefaultModifier, NotNullModifier};\r\n+        return new ColumnModifier[] {DataTypeModifier, DefaultModifier, OracleNotNullModifier};\r\n     }\r\n \r\n     @Override\r",
      "parent_sha": "575cacc4c21632b82d48ffef395e6c9ead480774"
    }
  },
  {
    "oid": "36e1392600c7caf64be6d070d4678931017c896f",
    "message": "#15433 Fix string value representation in GIS (#15435)",
    "date": "2022-02-09T16:15:09Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/36e1392600c7caf64be6d070d4678931017c896f",
    "details": {
      "sha": "e3a66ae642ca2a82e6e5abb5a2e9672cc683fb43",
      "filename": "plugins/org.jkiss.dbeaver.data.gis.view/src/org/jkiss/dbeaver/ui/gis/GeometryDataUtils.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/36e1392600c7caf64be6d070d4678931017c896f/plugins%2Forg.jkiss.dbeaver.data.gis.view%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fgis%2FGeometryDataUtils.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/36e1392600c7caf64be6d070d4678931017c896f/plugins%2Forg.jkiss.dbeaver.data.gis.view%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fgis%2FGeometryDataUtils.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.data.gis.view%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fgis%2FGeometryDataUtils.java?ref=36e1392600c7caf64be6d070d4678931017c896f",
      "patch": "@@ -25,6 +25,7 @@\n import org.jkiss.dbeaver.model.DBPEvaluationContext;\n import org.jkiss.dbeaver.model.DBUtils;\n import org.jkiss.dbeaver.model.data.DBDAttributeBinding;\n+import org.jkiss.dbeaver.model.data.DBDDisplayFormat;\n import org.jkiss.dbeaver.model.gis.DBGeometry;\n import org.jkiss.dbeaver.model.gis.GisConstants;\n import org.jkiss.dbeaver.ui.UIColors;\n@@ -88,8 +89,8 @@ public static void setGeometryProperties(@NotNull IResultSetController controlle\n         final Map<String, Object> info = new LinkedHashMap<>();\n         for (DBDAttributeBinding binding : geomAttrs.descAttrs) {\n             final Object description = model.getCellValue(binding, row);\n-            if (!DBUtils.isNullValue(description) && !(description instanceof String && ((String) description).isEmpty())) {\n-                info.put(binding.getName(), description);\n+            if (!DBUtils.isNullValue(description)) {\n+                info.put(binding.getName(), binding.getValueHandler().getValueDisplayString(binding, description, DBDDisplayFormat.NATIVE));\n             }\n         }\n         final Map<String, Object> properties = new LinkedHashMap<>();",
      "parent_sha": "fa247787c917c5a45fb9d788d3be7dd0bd167e1e"
    }
  },
  {
    "oid": "55f7766080220b25c2d43879f6f1c33b3763dda5",
    "message": "dbeaver/dbeaver-ee#1681 Auth modules code style",
    "date": "2022-06-02T07:51:38Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/55f7766080220b25c2d43879f6f1c33b3763dda5",
    "details": {
      "sha": "48c3fd330459a988a4900516af1ebf9c3dfae1f1",
      "filename": "plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/security/SMController.java",
      "status": "modified",
      "additions": 20,
      "deletions": 6,
      "changes": 26,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/55f7766080220b25c2d43879f6f1c33b3763dda5/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fsecurity%2FSMController.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/55f7766080220b25c2d43879f6f1c33b3763dda5/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fsecurity%2FSMController.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fsecurity%2FSMController.java?ref=55f7766080220b25c2d43879f6f1c33b3763dda5",
      "patch": "@@ -50,12 +50,12 @@ public interface SMController extends SMAuthCredentialsManager {\n     /**\n      * Sets user credentials for specified provider\n      */\n-    void setUserCredentials(String userId, String authProviderId, Map<String, Object> credentials) throws DBException;\n+    void setUserCredentials(@NotNull String userId, @NotNull String authProviderId, @NotNull Map<String, Object> credentials) throws DBException;\n \n     /**\n      * Returns list of auth provider IDs associated with this user\n      */\n-    String[] getUserLinkedProviders(String userId) throws DBException;\n+    String[] getUserLinkedProviders(@NotNull String userId) throws DBException;\n \n     ///////////////////////////////////////////\n     // Permissions\n@@ -71,11 +71,22 @@ public interface SMController extends SMAuthCredentialsManager {\n \n     boolean isSessionPersisted(String id) throws DBException;\n \n-    SMAuthInfo authenticateAnonymousUser(@NotNull String appSessionId, @NotNull Map<String, Object> sessionParameters, @NotNull SMSessionType sessionType) throws DBException;\n+    SMAuthInfo authenticateAnonymousUser(\n+        @NotNull String appSessionId,\n+        @NotNull Map<String, Object> sessionParameters,\n+        @NotNull SMSessionType sessionType) throws DBException;\n \n-    SMAuthInfo authenticate(@NotNull String appSessionId, @NotNull Map<String, Object> sessionParameters, @NotNull SMSessionType sessionType, @NotNull String authProviderId, @NotNull Map<String, Object> userCredentials) throws DBException;\n+    SMAuthInfo authenticate(\n+        @NotNull String appSessionId,\n+        @NotNull Map<String, Object> sessionParameters,\n+        @NotNull SMSessionType sessionType,\n+        @NotNull String authProviderId,\n+        @NotNull Map<String, Object> userCredentials) throws DBException;\n \n-    void updateSession(@NotNull String sessionId, @Nullable String userId, Map<String, Object> parameters) throws DBException;\n+    void updateSession(\n+        @NotNull String sessionId,\n+        @Nullable String userId,\n+        Map<String, Object> parameters) throws DBException;\n \n     ///////////////////////////////////////////\n     // Permissions\n@@ -86,7 +97,10 @@ public interface SMController extends SMAuthCredentialsManager {\n     @NotNull\n     SMDataSourceGrant[] getConnectionSubjectAccess(String connectionId) throws DBException;\n \n-    void setConnectionSubjectAccess(@NotNull String connectionId, @Nullable String[] subjects, @Nullable String grantorId) throws DBException;\n+    void setConnectionSubjectAccess(\n+        @NotNull String connectionId,\n+        @Nullable String[] subjects,\n+        @Nullable String grantorId) throws DBException;\n \n     SMAuthPermissions getTokenPermissions(String token) throws DBException;\n }",
      "parent_sha": "559ab9aa2dd8d2fe626b74e0871867234cfff9bd"
    }
  },
  {
    "oid": "b7fb9220871df3c86bcb9ae458ac2350e4185194",
    "message": "#16963 recreate gc for drawUnfocusedCaret (#16981)",
    "date": "2022-07-06T15:45:21Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/b7fb9220871df3c86bcb9ae458ac2350e4185194",
    "details": {
      "sha": "235479c2a198c479563bb176d52e957bd5659638",
      "filename": "plugins/org.jkiss.dbeaver.ui.editors.hex/src/org/jkiss/dbeaver/ui/editors/binary/HexEditControl.java",
      "status": "modified",
      "additions": 24,
      "deletions": 22,
      "changes": 46,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/b7fb9220871df3c86bcb9ae458ac2350e4185194/plugins%2Forg.jkiss.dbeaver.ui.editors.hex%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fbinary%2FHexEditControl.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/b7fb9220871df3c86bcb9ae458ac2350e4185194/plugins%2Forg.jkiss.dbeaver.ui.editors.hex%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fbinary%2FHexEditControl.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ui.editors.hex%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fbinary%2FHexEditControl.java?ref=b7fb9220871df3c86bcb9ae458ac2350e4185194",
      "patch": "@@ -135,8 +135,6 @@ public class HexEditControl extends Composite {\n     private Font fontDefault = null;  // disposed internally\n     private GridData textGridData = null;\n     private GridData previewGridData = null;\n-    private GC styledText1GC = null;\n-    private GC styledText2GC = null;\n     private Text linesTextSeparator = null;\n     private StyledText linesText = null;\n \n@@ -677,7 +675,6 @@ public void focusGained(FocusEvent e) {\n             if (readOnly) {\n                 hexText.setEditable(false);\n             }\n-            styledText1GC = new GC(hexText);\n             int width = bytesPerLine * 3 * fontCharWidth;\n             textGridData = new GridData();\n             textGridData.horizontalIndent = 1;\n@@ -752,7 +749,6 @@ public void focusGained(FocusEvent e) {\n             nonDefaultCaret = new Caret(defaultCaret.getParent(), defaultCaret.getStyle());\n             nonDefaultCaret.setBounds(defaultCaret.getBounds());\n             previewText.setCaret(nonDefaultCaret);\n-            styledText2GC = new GC(previewText);\n             setCharset(null);\n \n             UIUtils.addFocusTracker(UIUtils.getActiveWorkbenchWindow(), CONTROL_ID, previewText);\n@@ -1047,29 +1043,35 @@ private long doNavigateKeyPressed(boolean ctrlKey, int keyCode, long oldPos, boo\n     }\n \n \n-    void drawUnfocusedCaret(boolean visible)\n-    {\n+    void drawUnfocusedCaret(boolean visible) {\n         if (hexText.isDisposed()) return;\n \n-        GC unfocusedGC;\n+        GC unfocusedGC = null;\n         Caret unfocusedCaret;\n         int chars = 0;\n         int shift = 0;\n-        if (lastFocusedTextArea == 1) {\n-            unfocusedCaret = previewText.getCaret();\n-            unfocusedGC = styledText2GC;\n-        } else {\n-            unfocusedCaret = hexText.getCaret();\n-            unfocusedGC = styledText1GC;\n-            chars = 1;\n-            if (hexText.getCaretOffset() % 3 == 1)\n-                shift = -1;\n-        }\n-        if (unfocusedCaret.getVisible()) {\n-            Rectangle unfocused = unfocusedCaret.getBounds();\n-            unfocusedGC.setForeground(visible ? COLOR_NORMAL_SHADOW : colorCaretLine);\n-            unfocusedGC.drawRectangle(unfocused.x + shift * unfocused.width, unfocused.y,\n-                unfocused.width << chars, unfocused.height - 1);\n+        try {\n+            if (lastFocusedTextArea == 1) {\n+                unfocusedCaret = previewText.getCaret();\n+                unfocusedGC = new GC(previewText);\n+            } else {\n+                unfocusedCaret = hexText.getCaret();\n+                unfocusedGC = new GC(hexText);\n+                chars = 1;\n+                if (hexText.getCaretOffset() % 3 == 1) shift = -1;\n+            }\n+            if (unfocusedCaret.getVisible()) {\n+                Rectangle unfocused = unfocusedCaret.getBounds();\n+                unfocusedGC.setForeground(visible ? COLOR_NORMAL_SHADOW : colorCaretLine);\n+                unfocusedGC.drawRectangle(unfocused.x + shift * unfocused.width,\n+                    unfocused.y,\n+                    unfocused.width << chars,\n+                    unfocused.height - 1);\n+            }\n+        } finally {\n+            if (unfocusedGC != null) {\n+                unfocusedGC.dispose();\n+            }\n         }\n     }\n ",
      "parent_sha": "a06537c78312a53991cbac2fa1b18e2f6381cdda"
    }
  },
  {
    "oid": "6c582d6798da047ef000b98cfc0cd827612622e7",
    "message": "No explicit NULLs in inserts\n\nFormer-commit-id: e141b49825367f9761ab724b9c471e6ba175c2ef",
    "date": "2015-02-04T22:38:48Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/6c582d6798da047ef000b98cfc0cd827612622e7",
    "details": {
      "sha": "ea46cb2a6c9721c525f1e420fb3df87227897b5e",
      "filename": "plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/model/impl/jdbc/struct/JDBCTable.java",
      "status": "modified",
      "additions": 8,
      "deletions": 6,
      "changes": 14,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/6c582d6798da047ef000b98cfc0cd827612622e7/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fimpl%2Fjdbc%2Fstruct%2FJDBCTable.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/6c582d6798da047ef000b98cfc0cd827612622e7/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fimpl%2Fjdbc%2Fstruct%2FJDBCTable.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fimpl%2Fjdbc%2Fstruct%2FJDBCTable.java?ref=6c582d6798da047ef000b98cfc0cd827612622e7",
      "patch": "@@ -297,7 +297,7 @@ public long countData(@NotNull DBCSession session, @Nullable DBDDataFilter dataF\n \r\n     @NotNull\r\n     @Override\r\n-    public ExecuteBatch insertData(@NotNull DBCSession session, @NotNull DBSAttributeBase[] attributes, @Nullable DBDDataReceiver keysReceiver)\r\n+    public ExecuteBatch insertData(@NotNull DBCSession session, @NotNull final DBSAttributeBase[] attributes, @Nullable DBDDataReceiver keysReceiver)\r\n         throws DBCException\r\n     {\r\n         readRequiredMeta(session.getProgressMonitor());\r\n@@ -310,8 +310,9 @@ protected DBCStatement prepareStatement(@NotNull DBCSession session, Object[] at\n                 query.append(\"INSERT INTO \").append(getFullQualifiedName()).append(\" (\"); //$NON-NLS-1$ //$NON-NLS-2$\r\n \r\n                 boolean hasKey = false;\r\n-                for (DBSAttributeBase attribute : attributes) {\r\n-                    if (attribute.isPseudoAttribute() || attribute.isAutoGenerated()) {\r\n+                for (int i = 0; i < attributes.length; i++) {\r\n+                    DBSAttributeBase attribute = attributes[i];\r\n+                    if (attribute.isPseudoAttribute() || attribute.isAutoGenerated() || DBUtils.isNullValue(attributeValues[i])) {\r\n                         continue;\r\n                     }\r\n                     if (hasKey) query.append(\",\"); //$NON-NLS-1$\r\n@@ -320,8 +321,9 @@ protected DBCStatement prepareStatement(@NotNull DBCSession session, Object[] at\n                 }\r\n                 query.append(\") VALUES (\"); //$NON-NLS-1$\r\n                 hasKey = false;\r\n-                for (DBSAttributeBase attribute : attributes) {\r\n-                    if (attribute.isPseudoAttribute() || attribute.isAutoGenerated()) {\r\n+                for (int i = 0; i < attributes.length; i++) {\r\n+                    DBSAttributeBase attribute = attributes[i];\r\n+                    if (attribute.isPseudoAttribute() || attribute.isAutoGenerated() || DBUtils.isNullValue(attributeValues[i])) {\r\n                         continue;\r\n                     }\r\n                     if (hasKey) query.append(\",\"); //$NON-NLS-1$\r\n@@ -341,7 +343,7 @@ protected void bindStatement(@NotNull DBDValueHandler[] handlers, @NotNull DBCSt\n                 int paramIndex = 0;\r\n                 for (int k = 0; k < handlers.length; k++) {\r\n                     DBSAttributeBase attribute = attributes[k];\r\n-                    if (attribute.isPseudoAttribute() || attribute.isAutoGenerated()) {\r\n+                    if (attribute.isPseudoAttribute() || attribute.isAutoGenerated() || DBUtils.isNullValue(attributeValues[k])) {\r\n                         continue;\r\n                     }\r\n                     handlers[k].bindValueObject(statement.getSession(), statement, attribute, paramIndex++, attributeValues[k]);\r",
      "parent_sha": "4907c83d95ae347a5eccfaccf69e1410e556e6d4"
    }
  },
  {
    "oid": "328c723e284e0b032e5fe0707e8cc5a4d60c8223",
    "message": "#16677 Loading finish fix (avoid flickering)",
    "date": "2022-06-02T12:51:55Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/328c723e284e0b032e5fe0707e8cc5a4d60c8223",
    "details": {
      "sha": "03dec93b41a8071f6397e32a4213477215f0cfca",
      "filename": "plugins/org.jkiss.dbeaver.ui.navigator/src/org/jkiss/dbeaver/ui/navigator/database/DatabaseNavigatorTree.java",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/328c723e284e0b032e5fe0707e8cc5a4d60c8223/plugins%2Forg.jkiss.dbeaver.ui.navigator%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fnavigator%2Fdatabase%2FDatabaseNavigatorTree.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/328c723e284e0b032e5fe0707e8cc5a4d60c8223/plugins%2Forg.jkiss.dbeaver.ui.navigator%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fnavigator%2Fdatabase%2FDatabaseNavigatorTree.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ui.navigator%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fnavigator%2Fdatabase%2FDatabaseNavigatorTree.java?ref=328c723e284e0b032e5fe0707e8cc5a4d60c8223",
      "patch": "@@ -89,7 +89,7 @@ public class DatabaseNavigatorTree extends Composite implements INavigatorListen\n     private boolean filterShowConnected = false;\n     private String filterPlaceholderText = UINavigatorMessages.actions_navigator_search_tip;\n     private DatabaseNavigatorTreeFilterObjectType filterObjectType = DatabaseNavigatorTreeFilterObjectType.table;\n-    private PaintListener treeLoadingListener;\n+    private volatile PaintListener treeLoadingListener;\n \n     public static DatabaseNavigatorTree getFromShell(Display display) {\n         if (display == null) {\n@@ -157,6 +157,9 @@ public DatabaseNavigatorTree(Composite parent, DBNNode rootNode, int style, bool\n \n                 @Override\n                 public void paintControl(PaintEvent e) {\n+                    if (treeLoadingListener == null) {\n+                        return;\n+                    }\n                     drawCount++;\n                     Image image = DBeaverIcons.getImage(ProgressLoaderVisualizer.PROGRESS_IMAGES[drawCount % ProgressLoaderVisualizer.PROGRESS_IMAGES.length]);\n                     Rectangle bounds = tree.getBounds();",
      "parent_sha": "8cd1ed896dd471760581672629091940d7ea388a"
    }
  },
  {
    "oid": "90ae09cc890f1170d9d5923dd4bf9d19e4632903",
    "message": "#10086 assume no action button is active when scrollbar is visible\n\n\nFormer-commit-id: 7dfd1204bb8d22556e36d8fb02a42561cebb6bf1",
    "date": "2020-11-24T13:47:27Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/90ae09cc890f1170d9d5923dd4bf9d19e4632903",
    "details": {
      "sha": "aaa815812dc6212ff8fb42ad2f60eb7078e485c9",
      "filename": "plugins/org.jkiss.dbeaver.ui.navigator/src/org/jkiss/dbeaver/ui/navigator/database/StatisticsNavigatorNodeRenderer.java",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/90ae09cc890f1170d9d5923dd4bf9d19e4632903/plugins%2Forg.jkiss.dbeaver.ui.navigator%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fnavigator%2Fdatabase%2FStatisticsNavigatorNodeRenderer.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/90ae09cc890f1170d9d5923dd4bf9d19e4632903/plugins%2Forg.jkiss.dbeaver.ui.navigator%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fnavigator%2Fdatabase%2FStatisticsNavigatorNodeRenderer.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ui.navigator%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fnavigator%2Fdatabase%2FStatisticsNavigatorNodeRenderer.java?ref=90ae09cc890f1170d9d5923dd4bf9d19e4632903",
      "patch": "@@ -192,7 +192,10 @@ private String getDetailsTipText(DBNNode element, Tree tree, Event event) {\n \n     private INavigatorNodeActionHandler getActionButtonFor(DBNNode element, Tree tree, Event event) {\n         List<INavigatorNodeActionHandler> nodeActions = NavigatorExtensionsRegistry.getInstance().getNodeActions(getView(), element);\n-        int treeWidth = getTreeWidth(tree);\n+        ScrollBar horizontalScrollBar = tree.getHorizontalBar();\n+        if (horizontalScrollBar != null && horizontalScrollBar.isVisible()) {\n+            return null;\n+        }\n         int widthOccupied = 0;\n         for (INavigatorNodeActionHandler nah : nodeActions) {\n             if (!nah.isSticky(view, element)) {\n@@ -213,7 +216,7 @@ private INavigatorNodeActionHandler getActionButtonFor(DBNNode element, Tree tre\n                 int imageSize = imageBounds.height;\n                 widthOccupied += imageSize;\n \n-                if (event.x > treeWidth - widthOccupied) {\n+                if (event.x > tree.getClientArea().width - widthOccupied) {\n                     return nah;\n                 }\n             }",
      "parent_sha": "108dda2dcb3d13d8bbbcfceffe11c6c0885cbd82"
    }
  },
  {
    "oid": "9eee9a7580dd477ad6ab570842a690067537b392",
    "message": "#8463 Exasol FK create fix\n\n\nFormer-commit-id: f55fc7fb340f3624cf57743b71474facf8f172f7",
    "date": "2020-04-17T09:14:39Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/9eee9a7580dd477ad6ab570842a690067537b392",
    "details": {
      "sha": "6413e475d2c477885e3860be0553819c239b9227",
      "filename": "plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/manager/ExasolForeignKeyManager.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/9eee9a7580dd477ad6ab570842a690067537b392/plugins%2Forg.jkiss.dbeaver.ext.exasol%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fexasol%2Fmanager%2FExasolForeignKeyManager.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/9eee9a7580dd477ad6ab570842a690067537b392/plugins%2Forg.jkiss.dbeaver.ext.exasol%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fexasol%2Fmanager%2FExasolForeignKeyManager.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ext.exasol%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fexasol%2Fmanager%2FExasolForeignKeyManager.java?ref=9eee9a7580dd477ad6ab570842a690067537b392",
      "patch": "@@ -57,6 +57,9 @@ protected ExasolTableForeignKey runTask() {\n                 if (!editPage.edit()) {\n                     return null;\n                 }\n+                foreignKey.setName(editPage.getName());\n+                foreignKey.setReferencedConstraint((ExasolTableUniqueKey)editPage.getUniqueConstraint());\n+                foreignKey.setEnabled(editPage.isEnabled());\n \n                 List<ExasolTableForeignKeyColumn> columns = new ArrayList<>();\n                 int cnt = 0;\n@@ -74,9 +77,6 @@ protected ExasolTableForeignKey runTask() {\n                     }\n                 }\n \n-                foreignKey.setName(editPage.getName());\n-                foreignKey.setReferencedConstraint((ExasolTableUniqueKey)editPage.getUniqueConstraint());\n-                foreignKey.setEnabled(editPage.isEnabled());\n                 foreignKey.setColumns(columns);\n \n                 return foreignKey;",
      "parent_sha": "a5a21cfe8374c3cfd6cc7b47d92e23dc89617984"
    }
  },
  {
    "oid": "04c0cbdd3edf904d6af1daf9329d273283d299d4",
    "message": "dbeaver/dbeaver-ee#1312 Delegate error handling to the caller",
    "date": "2022-01-13T14:42:17Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/04c0cbdd3edf904d6af1daf9329d273283d299d4",
    "details": {
      "sha": "72301dc1637534a9f54d1d3ed702de3745aba8ae",
      "filename": "plugins/org.jkiss.dbeaver.registry/src/org/jkiss/dbeaver/registry/BaseWorkspaceImpl.java",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/04c0cbdd3edf904d6af1daf9329d273283d299d4/plugins%2Forg.jkiss.dbeaver.registry%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fregistry%2FBaseWorkspaceImpl.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/04c0cbdd3edf904d6af1daf9329d273283d299d4/plugins%2Forg.jkiss.dbeaver.registry%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fregistry%2FBaseWorkspaceImpl.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.registry%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fregistry%2FBaseWorkspaceImpl.java?ref=04c0cbdd3edf904d6af1daf9329d273283d299d4",
      "patch": "@@ -76,7 +76,13 @@ protected BaseWorkspaceImpl(DBPPlatform platform, IWorkspace eclipseWorkspace) {\n         this.platform = platform;\n         this.eclipseWorkspace = eclipseWorkspace;\n         this.workspaceAuthContext = new SessionContextImpl(null);\n-        this.workspaceAuthContext.addSession(acquireWorkspaceSession());\n+\n+        try {\n+            this.workspaceAuthContext.addSession(acquireWorkspaceSession(new VoidProgressMonitor()));\n+        } catch (DBException e) {\n+            DBWorkbench.getPlatformUI().showError(\"Can't obtain workspace session\", \"Error obtaining workspace session\", e);\n+            System.exit(101);\n+        }\n \n         String activeProjectName = platform.getPreferenceStore().getString(PROP_PROJECT_ACTIVE);\n \n@@ -117,7 +123,7 @@ protected BaseWorkspaceImpl(DBPPlatform platform, IWorkspace eclipseWorkspace) {\n     }\n \n     @NotNull\n-    protected DBASession acquireWorkspaceSession() {\n+    protected DBASession acquireWorkspaceSession(@NotNull DBRProgressMonitor monitor) throws DBException {\n         return new BasicWorkspaceSession(this);\n     }\n ",
      "parent_sha": "d85bc8f2f4cb839de792a1fbf25a9525c153c3e3"
    }
  },
  {
    "oid": "2cfbc5f38ce4a4100f03d3a18be175bd1af8e42e",
    "message": "#2372 Pipes page redesign\n\n\nFormer-commit-id: 0a2809d321ef8bc5aa6a5c86a521d30406c1e047",
    "date": "2019-09-17T21:16:36Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/2cfbc5f38ce4a4100f03d3a18be175bd1af8e42e",
    "details": {
      "sha": "a5ca87c70943314a0fe185c46f0dc586feea6acc",
      "filename": "plugins/org.jkiss.dbeaver.data.transfer.ui/src/org/jkiss/dbeaver/tools/transfer/ui/wizard/DataTransferPagePipes.java",
      "status": "modified",
      "additions": 17,
      "deletions": 11,
      "changes": 28,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/2cfbc5f38ce4a4100f03d3a18be175bd1af8e42e/plugins%2Forg.jkiss.dbeaver.data.transfer.ui%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Ftools%2Ftransfer%2Fui%2Fwizard%2FDataTransferPagePipes.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/2cfbc5f38ce4a4100f03d3a18be175bd1af8e42e/plugins%2Forg.jkiss.dbeaver.data.transfer.ui%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Ftools%2Ftransfer%2Fui%2Fwizard%2FDataTransferPagePipes.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.data.transfer.ui%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Ftools%2Ftransfer%2Fui%2Fwizard%2FDataTransferPagePipes.java?ref=2cfbc5f38ce4a4100f03d3a18be175bd1af8e42e",
      "patch": "@@ -23,6 +23,7 @@\n import org.eclipse.swt.events.SelectionListener;\n import org.eclipse.swt.layout.GridData;\n import org.eclipse.swt.widgets.Composite;\n+import org.eclipse.swt.widgets.Text;\n import org.jkiss.dbeaver.model.DBPEvaluationContext;\n import org.jkiss.dbeaver.model.DBPImage;\n import org.jkiss.dbeaver.model.DBUtils;\n@@ -74,18 +75,12 @@ public void createControl(Composite parent) {\n         Composite composite = UIUtils.createComposite(parent, 1);\n         composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n \n-        SashForm sash = new SashForm(composite, SWT.HORIZONTAL);\n+        SashForm sash = new SashForm(composite, SWT.VERTICAL);\n         sash.setLayoutData(new GridData(GridData.FILL_BOTH));\n \n-        if (getWizard().getSettings().isConsumerOptional()) {\n-            createInputsTable(sash);\n-            createNodesTable(sash);\n-            sash.setWeights(new int[]{50, 50});\n-        } else {\n-            createNodesTable(sash);\n-            createInputsTable(sash);\n-            sash.setWeights(new int[]{50, 50});\n-        }\n+        createNodesTable(sash);\n+        createInputsTable(sash);\n+        sash.setWeights(new int[]{80, 20});\n \n         updatePageCompletion();\n \n@@ -96,7 +91,7 @@ private void createNodesTable(Composite composite) {\n         Composite panel = UIUtils.createComposite(composite, 1);\n         panel.setLayoutData(new GridData(GridData.FILL_BOTH));\n \n-        UIUtils.createControlLabel(panel, getWizard().getSettings().isConsumerOptional() ? DTMessages.data_transfer_wizard_final_column_target : DTMessages.data_transfer_wizard_final_column_source);\n+        //UIUtils.createControlLabel(panel, getWizard().getSettings().isConsumerOptional() ? DTMessages.data_transfer_wizard_final_column_target : DTMessages.data_transfer_wizard_final_column_source);\n \n         nodesTable = new TableViewer(panel, SWT.BORDER | SWT.SINGLE | SWT.FULL_SELECTION);\n         nodesTable.getTable().setLayoutData(new GridData(GridData.FILL_BOTH));\n@@ -222,6 +217,16 @@ private void createInputsTable(Composite composite) {\n         Composite panel = UIUtils.createComposite(composite, 1);\n         panel.setLayoutData(new GridData(GridData.FILL_BOTH));\n \n+        Text inputsText = new Text(panel, SWT.READ_ONLY | SWT.BORDER | SWT.MULTI | SWT.WRAP | SWT.V_SCROLL);\n+        inputsText.setLayoutData(new GridData(GridData.FILL_BOTH));\n+\n+        StringBuilder txt = new StringBuilder();\n+        for (DBSObject input : getWizard().getSettings().getSourceObjects()) {\n+            if (txt.length() > 0) txt.append(\", \");\n+            txt.append(DBUtils.getObjectFullName(input, DBPEvaluationContext.UI));\n+        }\n+        inputsText.setText(txt.toString());\n+/*\n         UIUtils.createControlLabel(panel, !getWizard().getSettings().isConsumerOptional() ? DTMessages.data_transfer_wizard_final_column_target : DTMessages.data_transfer_wizard_final_column_source);\n         inputsTable = new TableViewer(panel, SWT.BORDER | SWT.SINGLE | SWT.FULL_SELECTION);\n         inputsTable.getTable().setLayoutData(new GridData(GridData.FILL_BOTH));\n@@ -257,6 +262,7 @@ public void update(ViewerCell cell) {\n             UIUtils.packColumns(inputsTable.getTable());\n             UIUtils.maxTableColumnsWidth(inputsTable.getTable());\n         });\n+*/\n     }\n \n     private void loadConsumers()",
      "parent_sha": "59b07006e64df26c59da8bdad6387067941246b3"
    }
  },
  {
    "oid": "343298c335c257894b027da8958aeec1e761fb34",
    "message": "Oracle: patch client app name\n\nFormer-commit-id: 9fa3a2b54b146cd977ea3c30318081f77b9b592d",
    "date": "2018-12-11T11:23:23Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/343298c335c257894b027da8958aeec1e761fb34",
    "details": {
      "sha": "f7fd51b8c6e41625c510f6c01e34b1e0c8055b50",
      "filename": "plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/OracleDataSource.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/343298c335c257894b027da8958aeec1e761fb34/plugins%2Forg.jkiss.dbeaver.ext.oracle%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Foracle%2Fmodel%2FOracleDataSource.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/343298c335c257894b027da8958aeec1e761fb34/plugins%2Forg.jkiss.dbeaver.ext.oracle%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Foracle%2Fmodel%2FOracleDataSource.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ext.oracle%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Foracle%2Fmodel%2FOracleDataSource.java?ref=343298c335c257894b027da8958aeec1e761fb34",
      "patch": "@@ -269,7 +269,9 @@ protected Map<String, String> getInternalConnectionProperties(DBRProgressMonitor\n         Map<String, String> connectionsProps = new HashMap<>();\r\n         if (!getContainer().getPreferenceStore().getBoolean(ModelPreferences.META_CLIENT_NAME_DISABLE)) {\r\n             // Program name\r\n-            connectionsProps.put(\"v$session.program\", CommonUtils.truncateString(DBUtils.getClientApplicationName(getContainer(), purpose), 48));\r\n+            String appName = DBUtils.getClientApplicationName(getContainer(), purpose);\r\n+            appName = appName.replace('(', '_').replace(')', '_'); // Replace brackets - Oracle don't like them\r\n+            connectionsProps.put(\"v$session.program\", CommonUtils.truncateString(appName, 48));\r\n         }\r\n         if (CommonUtils.toBoolean(connectionInfo.getProviderProperty(OracleConstants.OS_AUTH_PROP))) {\r\n             connectionsProps.put(\"v$session.osuser\", System.getProperty(StandardConstants.ENV_USER_NAME));\r",
      "parent_sha": "4b7b7356ce45affa7e858419b141335fdcacf866"
    }
  },
  {
    "oid": "4adef49097c44160dc50a383452c829d87c67e0d",
    "message": "#2877 PG: sequence permissions\n\n\nFormer-commit-id: 43df33093f2a642f03be1368e77721e0861e4f39",
    "date": "2018-01-29T01:03:43Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/4adef49097c44160dc50a383452c829d87c67e0d",
    "details": {
      "sha": "033894035d711940ddbf8f573a4cc69a789b35c9",
      "filename": "plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/ui/editors/PostgresRolePrivilegesEditor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/4adef49097c44160dc50a383452c829d87c67e0d/plugins%2Forg.jkiss.dbeaver.ext.postgresql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fpostgresql%2Fui%2Feditors%2FPostgresRolePrivilegesEditor.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/4adef49097c44160dc50a383452c829d87c67e0d/plugins%2Forg.jkiss.dbeaver.ext.postgresql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fpostgresql%2Fui%2Feditors%2FPostgresRolePrivilegesEditor.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ext.postgresql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fpostgresql%2Fui%2Feditors%2FPostgresRolePrivilegesEditor.java?ref=4adef49097c44160dc50a383452c829d87c67e0d",
      "patch": "@@ -163,7 +163,7 @@ public void mouseDown(MouseEvent e) {\n             });\n \n             for (PostgrePrivilegeType pt : PostgrePrivilegeType.values()) {\n-                if (!pt.isValid()) {\n+                if (!pt.isValid() || !pt.getTargetType().isAssignableFrom(getDatabaseObject().getClass())) {\n                     continue;\n                 }\n                 TableItem privItem = new TableItem(permissionTable, SWT.LEFT);",
      "parent_sha": "47ecf5b71e674c2082a40738772abd7c8eda1f58"
    }
  },
  {
    "oid": "0472a3c4d6b10a694ab34a311eda4c2630a6119a",
    "message": "#2213 Env processing config (pref page)\n\n\nFormer-commit-id: 1a978fa8d59c9fdeda52da6e586641165d7393c8",
    "date": "2017-11-27T21:22:10Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/0472a3c4d6b10a694ab34a311eda4c2630a6119a",
    "details": {
      "sha": "e9c373d457afcb48199d28ed6a19c87328458e10",
      "filename": "plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/preferences/PrefPageConnections.java",
      "status": "modified",
      "additions": 16,
      "deletions": 1,
      "changes": 17,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/0472a3c4d6b10a694ab34a311eda4c2630a6119a/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fpreferences%2FPrefPageConnections.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/0472a3c4d6b10a694ab34a311eda4c2630a6119a/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fpreferences%2FPrefPageConnections.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fpreferences%2FPrefPageConnections.java?ref=0472a3c4d6b10a694ab34a311eda4c2630a6119a",
      "patch": "@@ -39,6 +39,8 @@ public class PrefPageConnections extends TargetPrefPage\n     private Button overrideClientApplicationNameCheck;\n     private Text clientApplicationNameText;\n \n+    private Button connUseEnvVariables;\n+\n     public PrefPageConnections()\n     {\n         super();\n@@ -51,7 +53,9 @@ protected boolean hasDataSourceSpecificOptions(DBPDataSourceContainer dataSource\n         return\n             store.contains(ModelPreferences.META_CLIENT_NAME_DISABLE) ||\n             store.contains(ModelPreferences.META_CLIENT_NAME_OVERRIDE) ||\n-            store.contains(ModelPreferences.META_CLIENT_NAME_VALUE)\n+            store.contains(ModelPreferences.META_CLIENT_NAME_VALUE) ||\n+\n+            store.contains(ModelPreferences.CONNECT_USE_ENV_VARS)\n             ;\n     }\n \n@@ -85,6 +89,11 @@ public void widgetSelected(SelectionEvent e) {\n             clientApplicationNameText = UIUtils.createLabelText(clientNameGroup, CoreMessages.pref_page_database_label_client_application_name, \"\");\n         }\n \n+        {\n+            Group connGroup = UIUtils.createControlGroup(composite, \"General\", 2, GridData.FILL_HORIZONTAL, 0);\n+\n+            connUseEnvVariables = UIUtils.createCheckbox(connGroup, \"Use environment variables in connection parameters\", null, false, 2);\n+        }\n         return composite;\n     }\n \n@@ -100,6 +109,8 @@ protected void loadPreferences(DBPPreferenceStore store)\n             overrideClientApplicationNameCheck.setSelection(store.getBoolean(ModelPreferences.META_CLIENT_NAME_OVERRIDE));\n             clientApplicationNameText.setText(store.getString(ModelPreferences.META_CLIENT_NAME_VALUE));\n \n+            connUseEnvVariables.setSelection(store.getBoolean(ModelPreferences.CONNECT_USE_ENV_VARS));\n+\n             updateClientAppEnablement();\n         } catch (Exception e) {\n             log.warn(e);\n@@ -113,6 +124,8 @@ protected void savePreferences(DBPPreferenceStore store)\n             store.setValue(ModelPreferences.META_CLIENT_NAME_DISABLE, disableClientApplicationNameCheck.getSelection());\n             store.setValue(ModelPreferences.META_CLIENT_NAME_OVERRIDE, overrideClientApplicationNameCheck.getSelection());\n             store.setValue(ModelPreferences.META_CLIENT_NAME_VALUE, clientApplicationNameText.getText());\n+\n+            store.setValue(ModelPreferences.CONNECT_USE_ENV_VARS, connUseEnvVariables.getSelection());\n         } catch (Exception e) {\n             log.warn(e);\n         }\n@@ -125,6 +138,8 @@ protected void clearPreferences(DBPPreferenceStore store)\n         store.setToDefault(ModelPreferences.META_CLIENT_NAME_DISABLE);\n         store.setToDefault(ModelPreferences.META_CLIENT_NAME_OVERRIDE);\n         store.setToDefault(ModelPreferences.META_CLIENT_NAME_VALUE);\n+\n+        store.setToDefault(ModelPreferences.CONNECT_USE_ENV_VARS);\n     }\n \n     @Override",
      "parent_sha": "31d037bd12b984978b6f9cd8672f0a5139be994b"
    }
  },
  {
    "oid": "5e890a4dfcf5cfa33802cc50e159fb9bf340b577",
    "message": "#17545 Fix inline editor for attributes with URL transformer set (#17558)",
    "date": "2022-09-05T12:15:19Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/5e890a4dfcf5cfa33802cc50e159fb9bf340b577",
    "details": {
      "sha": "bcd365fff27ab8a0fbc62a4095f88e5bb1899c0a",
      "filename": "plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/impl/data/transformers/URLAttributeTransformer.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/5e890a4dfcf5cfa33802cc50e159fb9bf340b577/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fimpl%2Fdata%2Ftransformers%2FURLAttributeTransformer.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/5e890a4dfcf5cfa33802cc50e159fb9bf340b577/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fimpl%2Fdata%2Ftransformers%2FURLAttributeTransformer.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fimpl%2Fdata%2Ftransformers%2FURLAttributeTransformer.java?ref=5e890a4dfcf5cfa33802cc50e159fb9bf340b577",
      "patch": "@@ -83,10 +83,10 @@ public URLValueHandler(DBDValueHandler target, String pattern) {\n         @NotNull\n         @Override\n         public String getValueDisplayString(@NotNull DBSTypedObject column, @Nullable Object value, @NotNull DBDDisplayFormat format) {\n-            if (pattern == null) {\n-                return DBValueFormatting.getDefaultValueDisplayString(value, format);\n-            } else {\n+            if (pattern != null && format == DBDDisplayFormat.UI) {\n                 return messageFormat.format(new Object[] { value } );\n+            } else {\n+                return DBValueFormatting.getDefaultValueDisplayString(value, format);\n             }\n         }\n ",
      "parent_sha": "100e58602e9c78b03fe7f504ddd4bb25467843b9"
    }
  },
  {
    "oid": "550b4a750ddde00b4809e81111a6e88e42e3f843",
    "message": "#7731 SQL query data container fix (query offset)\n\n\nFormer-commit-id: 3df66759e964f31bf17c17eab42813c6672cbfb0",
    "date": "2020-02-11T15:58:42Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/550b4a750ddde00b4809e81111a6e88e42e3f843",
    "details": {
      "sha": "dee3fb60206da040cbbebaea6bf1525a2b7c6627",
      "filename": "plugins/org.jkiss.dbeaver.model.sql/src/org/jkiss/dbeaver/model/sql/data/SQLQueryDataContainer.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/550b4a750ddde00b4809e81111a6e88e42e3f843/plugins%2Forg.jkiss.dbeaver.model.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fsql%2Fdata%2FSQLQueryDataContainer.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/550b4a750ddde00b4809e81111a6e88e42e3f843/plugins%2Forg.jkiss.dbeaver.model.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fsql%2Fdata%2FSQLQueryDataContainer.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.model.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fsql%2Fdata%2FSQLQueryDataContainer.java?ref=550b4a750ddde00b4809e81111a6e88e42e3f843",
      "patch": "@@ -90,7 +90,7 @@ public DBCStatistics readData(@NotNull DBCExecutionSource source, @NotNull DBCSe\n             SQLRuleManager ruleManager = new SQLRuleManager(syntaxManager);\n             ruleManager.loadRules(dataSource, false);\n             SQLParserContext parserContext = new SQLParserContext(this, syntaxManager, ruleManager, new Document(query.getText()));\n-            sqlQuery.setParameters(SQLScriptParser.parseParameters(parserContext, sqlQuery.getOffset(), sqlQuery.getLength()));\n+            sqlQuery.setParameters(SQLScriptParser.parseParameters(parserContext, 0, sqlQuery.getLength()));\n             if (!scriptContext.fillQueryParameters(sqlQuery, CommonUtils.isBitSet(flags, DBSDataContainer.FLAG_REFRESH))) {\n                 // User canceled\n                 return statistics;",
      "parent_sha": "415af525f7d9ad0d0cbc8ee6c71cb50cf1136cd0"
    }
  },
  {
    "oid": "c62efd840264de124d363011afb8084a24a9b332",
    "message": "#22175 decrease the stored procedure availability flag for Redshift (#22627)",
    "date": "2024-01-31T12:57:42Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/c62efd840264de124d363011afb8084a24a9b332",
    "details": {
      "sha": "212851710fb3cc547d11fa276bcd09ef7ff8d388",
      "filename": "plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/impls/redshift/PostgreServerRedshift.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/c62efd840264de124d363011afb8084a24a9b332/plugins%2Forg.jkiss.dbeaver.ext.postgresql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fpostgresql%2Fmodel%2Fimpls%2Fredshift%2FPostgreServerRedshift.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/c62efd840264de124d363011afb8084a24a9b332/plugins%2Forg.jkiss.dbeaver.ext.postgresql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fpostgresql%2Fmodel%2Fimpls%2Fredshift%2FPostgreServerRedshift.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ext.postgresql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fpostgresql%2Fmodel%2Fimpls%2Fredshift%2FPostgreServerRedshift.java?ref=c62efd840264de124d363011afb8084a24a9b332",
      "patch": "@@ -331,7 +331,7 @@ public PostgreTableBase createRelationOfClass(PostgreSchema schema, PostgreClass\n \n     @Override\n     public boolean supportsStoredProcedures() {\n-        return isRedshiftVersionAtLeast(1, 0, 7562);\n+        return isRedshiftVersionAtLeast(1, 0, 6118);\n     }\n \n     @Override",
      "parent_sha": "1c80dca6fe9b5d512b2b0e062ee7c105cf292058"
    }
  },
  {
    "oid": "521479276b605dcc9d8540544e77b751f5c845b7",
    "message": "#2169 Identifiers split function fix\n\n\nFormer-commit-id: ca11f3c3b4e1948c23210d0099af0ba4ed83012e",
    "date": "2017-09-18T19:37:38Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/521479276b605dcc9d8540544e77b751f5c845b7",
    "details": {
      "sha": "f220addfc8bf4877a791e178d2894cf4dcb8af04",
      "filename": "plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/sql/SQLUtils.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/521479276b605dcc9d8540544e77b751f5c845b7/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fsql%2FSQLUtils.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/521479276b605dcc9d8540544e77b751f5c845b7/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fsql%2FSQLUtils.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fsql%2FSQLUtils.java?ref=521479276b605dcc9d8540544e77b751f5c845b7",
      "patch": "@@ -776,7 +776,7 @@ public static String[] splitFullIdentifier(final String fullName, String nameSep\n                 String startQuote = quotePair[0];\r\n                 String endQuote = quotePair[1];\r\n                 if (!CommonUtils.isEmpty(startQuote) && !CommonUtils.isEmpty(endQuote) && name.startsWith(startQuote)) {\r\n-                    int endPos = name.indexOf(endQuote);\r\n+                    int endPos = name.indexOf(endQuote, startQuote.length());\r\n                     if (endPos != -1) {\r\n                         // Quoted part\r\n                         nameList.add(name.substring(startQuote.length(), endPos));\r",
      "parent_sha": "28612026369eb163684d375c1aacc2ed58a40e1a"
    }
  },
  {
    "oid": "87967e7e2552209640d69830fa4dab60a373b7ea",
    "message": "Object cache logging\n\n\nFormer-commit-id: 9c37dcae27a4c4ec753f97f4da66123175c8d684",
    "date": "2015-11-25T14:08:53Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/87967e7e2552209640d69830fa4dab60a373b7ea",
    "details": {
      "sha": "4f633a9330bc921ea0f5e774a8ed4bb048afd611",
      "filename": "plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/impl/AbstractObjectCache.java",
      "status": "modified",
      "additions": 19,
      "deletions": 10,
      "changes": 29,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/87967e7e2552209640d69830fa4dab60a373b7ea/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fimpl%2FAbstractObjectCache.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/87967e7e2552209640d69830fa4dab60a373b7ea/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fimpl%2FAbstractObjectCache.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fimpl%2FAbstractObjectCache.java?ref=87967e7e2552209640d69830fa4dab60a373b7ea",
      "patch": "@@ -20,8 +20,10 @@\n import org.jkiss.code.NotNull;\r\n import org.jkiss.code.Nullable;\r\n import org.jkiss.dbeaver.DBException;\r\n+import org.jkiss.dbeaver.Log;\r\n import org.jkiss.dbeaver.model.DBPDataSource;\r\n import org.jkiss.dbeaver.model.DBPIdentifierCase;\r\n+import org.jkiss.dbeaver.model.DBUtils;\r\n import org.jkiss.dbeaver.model.runtime.DBRProgressMonitor;\r\n import org.jkiss.dbeaver.model.sql.SQLDataSource;\r\n import org.jkiss.dbeaver.model.struct.DBSObject;\r\n@@ -33,6 +35,7 @@\n  */\r\n public abstract class AbstractObjectCache<OWNER extends DBSObject, OBJECT extends DBSObject> implements DBSObjectCache<OWNER, OBJECT>\r\n {\r\n+    static final Log log = Log.getLog(AbstractObjectCache.class);\r\n \r\n     private List<OBJECT> objectList;\r\n     private Map<String, OBJECT> objectMap;\r\n@@ -95,11 +98,11 @@ public void cacheObject(@NotNull OBJECT object)\n                 detectCaseSensitivity(object);\r\n                 this.objectList.add(object);\r\n                 if (this.objectMap != null) {\r\n-                    this.objectMap.put(\r\n-                        caseSensitive ?\r\n-                            object.getName() :\r\n-                            object.getName().toUpperCase(),\r\n-                        object);\r\n+                    String name = caseSensitive ?\r\n+                        object.getName() :\r\n+                        object.getName().toUpperCase();\r\n+                    checkDuplicateName(name, object);\r\n+                    this.objectMap.put(name, object);\r\n                 }\r\n             }\r\n         }\r\n@@ -158,16 +161,22 @@ private synchronized Map<String, OBJECT> getObjectMap()\n         if (objectMap == null) {\r\n             this.objectMap = new HashMap<>();\r\n             for (OBJECT object : objectList) {\r\n-                this.objectMap.put(\r\n-                    caseSensitive ?\r\n-                        object.getName() :\r\n-                        object.getName().toUpperCase(),\r\n-                    object);\r\n+                String name = caseSensitive ?\r\n+                    object.getName() :\r\n+                    object.getName().toUpperCase();\r\n+                checkDuplicateName(name, object);\r\n+                this.objectMap.put(name, object);\r\n             }\r\n         }\r\n         return objectMap;\r\n     }\r\n \r\n+    private void checkDuplicateName(String name, OBJECT object) {\r\n+        if (this.objectMap.containsKey(name)) {\r\n+            log.warn(\"Duplicate object name '\" + name + \"' in cache \" + this.getClass().getSimpleName() + \". Last value: \" + DBUtils.getObjectFullName(object));\r\n+        }\r\n+    }\r\n+\r\n     protected void detectCaseSensitivity(DBSObject object) {\r\n         if (this.caseSensitive) {\r\n             DBPDataSource dataSource = object.getDataSource();\r",
      "parent_sha": "3e9c045ead518a98220b00d105b18a2efae46444"
    }
  },
  {
    "oid": "4c6d5b2b4f498aabdaa4845cf7ae42fba6d52354",
    "message": "dbeaver/dbeaver#20364 fix maven artifact corruption (#20604)",
    "date": "2023-07-19T14:59:36Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/4c6d5b2b4f498aabdaa4845cf7ae42fba6d52354",
    "details": {
      "sha": "81654b9f330bb1ca9c732020b7880800907cf3e8",
      "filename": "plugins/org.jkiss.dbeaver.ui.editors.connection/src/org/jkiss/dbeaver/ui/dialogs/driver/EditMavenArtifactDialog.java",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/4c6d5b2b4f498aabdaa4845cf7ae42fba6d52354/plugins%2Forg.jkiss.dbeaver.ui.editors.connection%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fdialogs%2Fdriver%2FEditMavenArtifactDialog.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/4c6d5b2b4f498aabdaa4845cf7ae42fba6d52354/plugins%2Forg.jkiss.dbeaver.ui.editors.connection%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fdialogs%2Fdriver%2FEditMavenArtifactDialog.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ui.editors.connection%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fdialogs%2Fdriver%2FEditMavenArtifactDialog.java?ref=4c6d5b2b4f498aabdaa4845cf7ae42fba6d52354",
      "patch": "@@ -76,6 +76,7 @@ public class EditMavenArtifactDialog extends BaseDialog {\n \n     private CLabel errorLabel;\n     private TabFolder tabFolder;\n+    private boolean isReadOnly = false;\n \n     public EditMavenArtifactDialog(@NotNull Shell shell, @NotNull DriverDescriptor driver, @Nullable DriverLibraryMavenArtifact library) {\n         super(shell, UIConnectionMessages.dialog_edit_driver_edit_maven_title, DBIcon.TREE_USER);\n@@ -246,7 +247,7 @@ private void createDeclareArtifactManuallyTab(@NotNull TabFolder folder) {\n             classifierText.setEditable(false);\n             preferredVersionText.setEditable(false);\n             fallbackVersionText.setEnabled(false);\n-\n+            isReadOnly = true;\n             UIUtils.createInfoLabel(container, \"Predefined Maven artifacts are read-only\", GridData.FILL_HORIZONTAL, 2);\n         }\n \n@@ -414,6 +415,10 @@ private enum State {\n \n     @Override\n     protected void okPressed() {\n+        if (isReadOnly) {\n+            super.okPressed();\n+            return;\n+        }\n         if (tabFolder.getSelection()[0].getData() == TabType.DECLARE_ARTIFACT_MANUALLY) {\n             if (originalArtifact != null) {\n                 originalArtifact.setReference(new MavenArtifactReference(",
      "parent_sha": "512b329e42111d273d84312546ba83fd57a8b4e7"
    }
  },
  {
    "oid": "311f41fbd85d8b77fda790465bcd9e948bca6ba5",
    "message": "dbeaver/dbeaver-ee#664 arguments fix\n\n\nFormer-commit-id: 38f073c61a461da71faf981e6467283036b3df6c",
    "date": "2020-12-03T13:40:38Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/311f41fbd85d8b77fda790465bcd9e948bca6ba5",
    "details": {
      "sha": "ed6ec4290680e28e70e22f4ad395da6da3000aba",
      "filename": "plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericDataSource.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/311f41fbd85d8b77fda790465bcd9e948bca6ba5/plugins%2Forg.jkiss.dbeaver.ext.generic%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fgeneric%2Fmodel%2FGenericDataSource.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/311f41fbd85d8b77fda790465bcd9e948bca6ba5/plugins%2Forg.jkiss.dbeaver.ext.generic%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fgeneric%2Fmodel%2FGenericDataSource.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ext.generic%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fgeneric%2Fmodel%2FGenericDataSource.java?ref=311f41fbd85d8b77fda790465bcd9e948bca6ba5",
      "patch": "@@ -109,9 +109,9 @@ public GenericDataSource(@NotNull DBRProgressMonitor monitor, @NotNull DBPDataSo\n \n     // Constructor for tests\n     @ForTest\n-    public GenericDataSource(@NotNull DBRProgressMonitor monitor, @NotNull DBPDataSourceContainer container, @NotNull GenericMetaModel metaModel, @NotNull SQLDialect dialect, boolean initContext)\n+    public GenericDataSource(@NotNull DBRProgressMonitor monitor, @NotNull GenericMetaModel metaModel, @NotNull DBPDataSourceContainer container, @NotNull SQLDialect dialect)\n             throws DBException {\n-        super(monitor, container, dialect, initContext);\n+        super(monitor, container, dialect, false);\n         this.metaModel = metaModel;\n         this.dataTypeCache = metaModel.createDataTypeCache(this);\n         this.tableTypeCache = new TableTypeCache();",
      "parent_sha": "ccfe58e2d7d3b19bd2c02d6c556bae954fbc7b7b"
    }
  },
  {
    "oid": "23c379c614d6a8ffba25038737cca155381b0b39",
    "message": "Entity editor opening fix (set def folder)\n\n\nFormer-commit-id: 9c77a29f2e93e0013c3e3c1f31e4f299a58aada4",
    "date": "2016-09-08T20:25:39Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/23c379c614d6a8ffba25038737cca155381b0b39",
    "details": {
      "sha": "6a79f6a2378bbcb1d7e0501d278d7d76d78a221e",
      "filename": "plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/editors/entity/EntityEditor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/23c379c614d6a8ffba25038737cca155381b0b39/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fentity%2FEntityEditor.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/23c379c614d6a8ffba25038737cca155381b0b39/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fentity%2FEntityEditor.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fentity%2FEntityEditor.java?ref=23c379c614d6a8ffba25038737cca155381b0b39",
      "patch": "@@ -481,6 +481,7 @@ public void propertyChanged(Object source, int propId)\n         addContributions(EntityEditorDescriptor.POSITION_END);\r\n \r\n         String defPageId = editorInput.getDefaultPageId();\r\n+        String defFolderId = editorInput.getDefaultFolderId();\r\n         if (defPageId == null && editorDefaults != null) {\r\n             defPageId = editorDefaults.pageId;\r\n         }\r\n@@ -492,7 +493,6 @@ public void propertyChanged(Object source, int propId)\n         }\r\n         this.activeEditor = getActiveEditor();\r\n         if (activeEditor instanceof ITabbedFolderContainer) {\r\n-            String defFolderId = editorInput.getDefaultFolderId();\r\n             if (defFolderId == null && editorDefaults != null) {\r\n                 defFolderId = editorDefaults.folderId;\r\n             }\r",
      "parent_sha": "81707e29d5a1a29dc1560621d788528d4b4fe368"
    }
  },
  {
    "oid": "2fbcf20316ada2fe3ff2f97b5079646bd3aa07df",
    "message": "dbeaver/pro#2478 Revert tree refresh on database task execution event (#33150)",
    "date": "2024-05-16T17:01:14Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/2fbcf20316ada2fe3ff2f97b5079646bd3aa07df",
    "details": {
      "sha": "aab62d73385cd70c3b5692094dd4c4548a6669fe",
      "filename": "plugins/org.jkiss.dbeaver.tasks.ui.view/src/org/jkiss/dbeaver/tasks/ui/view/DatabaseTasksView.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/2fbcf20316ada2fe3ff2f97b5079646bd3aa07df/plugins%2Forg.jkiss.dbeaver.tasks.ui.view%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Ftasks%2Fui%2Fview%2FDatabaseTasksView.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/2fbcf20316ada2fe3ff2f97b5079646bd3aa07df/plugins%2Forg.jkiss.dbeaver.tasks.ui.view%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Ftasks%2Fui%2Fview%2FDatabaseTasksView.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.tasks.ui.view%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Ftasks%2Fui%2Fview%2FDatabaseTasksView.java?ref=2fbcf20316ada2fe3ff2f97b5079646bd3aa07df",
      "patch": "@@ -351,10 +351,10 @@ public void handleTaskEvent(DBTTaskEvent event) {\n                 }\n                 case TASK_REMOVE -> refresh();\n                 case TASK_UPDATE -> {\n+                    tasksTree.getViewer().refresh(task);\n                     if (task == tasksTree.getSelectedTask()) {\n                         loadTaskRuns(true);\n                     }\n-                    tasksTree.refresh();\n                 }\n                 case TASK_EXECUTE -> refresh();\n             }",
      "parent_sha": "649fdb4d3df6323154a2fb21f72c254c444719e8"
    }
  },
  {
    "oid": "4825ab2de5f77602845fee9284d1fd65cdb3a435",
    "message": "Filters enablement fix\n\n\nFormer-commit-id: ba3aab2f0477514d0bc4ff83836e3c23111fc416",
    "date": "2019-12-12T19:07:02Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/4825ab2de5f77602845fee9284d1fd65cdb3a435",
    "details": {
      "sha": "8eea4c88cf9a575bfd0ff17fdf30a8ff36e738b5",
      "filename": "plugins/org.jkiss.dbeaver.ui.editors.data/src/org/jkiss/dbeaver/ui/controls/resultset/ResultSetViewer.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/4825ab2de5f77602845fee9284d1fd65cdb3a435/plugins%2Forg.jkiss.dbeaver.ui.editors.data%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2Fresultset%2FResultSetViewer.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/4825ab2de5f77602845fee9284d1fd65cdb3a435/plugins%2Forg.jkiss.dbeaver.ui.editors.data%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2Fresultset%2FResultSetViewer.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ui.editors.data%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2Fresultset%2FResultSetViewer.java?ref=4825ab2de5f77602845fee9284d1fd65cdb3a435",
      "patch": "@@ -3525,10 +3525,10 @@ private void afterDataRead() {\n                                 // Update status (update execution statistics)\n                                 updateStatusMessage();\n                             }\n-                            updateFiltersText(true);\n-                            updateToolbar();\n                             fireResultSetLoad();\n                         }\n+                        updateFiltersText(true);\n+                        updateToolbar();\n                         // auto-refresh\n                         autoRefreshControl.scheduleAutoRefresh(error != null);\n                     } finally {",
      "parent_sha": "a5c411febe8a63e8c7d11b2c5e477530a6b6e6d5"
    }
  },
  {
    "oid": "f4a5f5932ad3819e931c082beabe21fb1e97efa5",
    "message": "Oracle data type resolution fix (public synonyms)\n\n\nFormer-commit-id: f8624134feb13fcbc3951558eb65c04d14e0e710",
    "date": "2019-07-23T18:56:29Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/f4a5f5932ad3819e931c082beabe21fb1e97efa5",
    "details": {
      "sha": "1dbf3a67aed5ac29befb7eac6ce50177db3c6dba",
      "filename": "plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/OracleSchema.java",
      "status": "modified",
      "additions": 16,
      "deletions": 10,
      "changes": 26,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/f4a5f5932ad3819e931c082beabe21fb1e97efa5/plugins%2Forg.jkiss.dbeaver.ext.oracle%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Foracle%2Fmodel%2FOracleSchema.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/f4a5f5932ad3819e931c082beabe21fb1e97efa5/plugins%2Forg.jkiss.dbeaver.ext.oracle%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Foracle%2Fmodel%2FOracleSchema.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ext.oracle%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Foracle%2Fmodel%2FOracleSchema.java?ref=f4a5f5932ad3819e931c082beabe21fb1e97efa5",
      "patch": "@@ -196,19 +196,25 @@ public Collection<OracleDataType> getDataTypes(DBRProgressMonitor monitor)\n     public OracleDataType getDataType(DBRProgressMonitor monitor, String name)\n         throws DBException\n     {\n-        OracleDataType type = dataTypeCache.getObject(monitor, this, name);\n+        OracleDataType type = isPublic() ? getTypeBySynonym(monitor, name) : dataTypeCache.getObject(monitor, this, name);\n         if (type == null) {\n-            final OracleSynonym synonym = synonymCache.getObject(monitor, this, name);\n-            if (synonym != null && synonym.getObjectType() == OracleObjectType.TYPE) {\n-                Object object = synonym.getObject(monitor);\n-                if (object instanceof OracleDataType) {\n-                    return (OracleDataType)object;\n-                }\n+            if (!isPublic()) {\n+                return getTypeBySynonym(monitor, name);\n             }\n-            return null;\n-        } else {\n-            return type;\n         }\n+        return type;\n+    }\n+\n+    @Nullable\n+    private OracleDataType getTypeBySynonym(DBRProgressMonitor monitor, String name) throws DBException {\n+        final OracleSynonym synonym = synonymCache.getObject(monitor, this, name);\n+        if (synonym != null && (synonym.getObjectType() == OracleObjectType.TYPE || synonym.getObjectType() == OracleObjectType.TYPE_BODY)) {\n+            Object object = synonym.getObject(monitor);\n+            if (object instanceof OracleDataType) {\n+                return (OracleDataType)object;\n+            }\n+        }\n+        return null;\n     }\n \n     @Association",
      "parent_sha": "512d0fe6bcded3a5bbdad97affdb185b30bb3f71"
    }
  },
  {
    "oid": "a61063e387980bf44d46db585459146b5d52396a",
    "message": "Agent notifier fix (show script name)\n\nFormer-commit-id: 8f0e116b2ada307f319e812e671c10e54b0c4007",
    "date": "2013-02-01T15:17:36Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/a61063e387980bf44d46db585459146b5d52396a",
    "details": {
      "sha": "daa35f9d0b06a32825c4e63b9b6376b179f0df6e",
      "filename": "plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/editors/sql/SQLEditor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/a61063e387980bf44d46db585459146b5d52396a/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2FSQLEditor.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/a61063e387980bf44d46db585459146b5d52396a/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2FSQLEditor.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2FSQLEditor.java?ref=a61063e387980bf44d46db585459146b5d52396a",
      "patch": "@@ -579,7 +579,7 @@ private void processQueryResult(SQLQueryResult result)\n \n                     if (result.getQueryTime() > DBeaverCore.getGlobalPreferenceStore().getLong(PrefConstants.AGENT_LONG_OPERATION_TIMEOUT) * 1000) {\n                         DBeaverUI.notifyAgent(\n-                            \"Query completed\" + ContentUtils.getDefaultLineSeparator() +\n+                            \"Query completed [\" + getEditorInput().getPath().lastSegment() + \"]\" + ContentUtils.getDefaultLineSeparator() +\n                                 CommonUtils.truncateString(result.getStatement().getQuery(), 200), !result.hasError() ? IStatus.INFO : IStatus.ERROR);\n                     }\n                 }",
      "parent_sha": "5bcca632ccffa8d45bfb35eea068656b1c00fbcf"
    }
  },
  {
    "oid": "87437c9a1c2b019820f3659da4f34e0f882e0512",
    "message": "#2246 MySQL/MariaDB tables read fix (quote identifiers)\n\n\nFormer-commit-id: cfbaca8144e6d4118bcb79627cd84c0d14bb3b60",
    "date": "2017-10-12T19:18:49Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/87437c9a1c2b019820f3659da4f34e0f882e0512",
    "details": {
      "sha": "16d365ad130747f252857aa6d45bee21ae0794a8",
      "filename": "plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/model/MySQLCatalog.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/87437c9a1c2b019820f3659da4f34e0f882e0512/plugins%2Forg.jkiss.dbeaver.ext.mysql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fmysql%2Fmodel%2FMySQLCatalog.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/87437c9a1c2b019820f3659da4f34e0f882e0512/plugins%2Forg.jkiss.dbeaver.ext.mysql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fmysql%2Fmodel%2FMySQLCatalog.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ext.mysql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fmysql%2Fmodel%2FMySQLCatalog.java?ref=87437c9a1c2b019820f3659da4f34e0f882e0512",
      "patch": "@@ -362,7 +362,7 @@ public JDBCStatement prepareLookupStatement(@NotNull JDBCSession session, @NotNu\n                 }\n             } else {\n                 sql.append(\"SHOW FULL TABLES FROM \").append(DBUtils.getQuotedIdentifier(owner));\n-                String tableNameCol = \"Tables_in_\" + owner.getName();\n+                String tableNameCol = \"Tables_in_\" + DBUtils.getQuotedIdentifier(owner);\n                 if (object != null || objectName != null) {\n                     sql.append(\" WHERE \").append(tableNameCol).append(\" LIKE \").append(SQLUtils.quoteString(session.getDataSource(), object != null ? object.getName() : objectName));\n                 } else {",
      "parent_sha": "372aa4d5761536a4d72f98dfc5642936eb0ce762"
    }
  },
  {
    "oid": "53b1551e18c1af74ff4b20377411c4c257286877",
    "message": "SQL editor config fix (parenthesis matching, etc)\n\nFormer-commit-id: d009eab3538dd112061dfbe87fd54b3c153a5dad",
    "date": "2015-07-17T09:31:41Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/53b1551e18c1af74ff4b20377411c4c257286877",
    "details": {
      "sha": "2ad9400d641a96dcee274330f113b35bb793a3d5",
      "filename": "plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/editors/sql/SQLEditorBase.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/53b1551e18c1af74ff4b20377411c4c257286877/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2FSQLEditorBase.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/53b1551e18c1af74ff4b20377411c4c257286877/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2FSQLEditorBase.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2FSQLEditorBase.java?ref=53b1551e18c1af74ff4b20377411c4c257286877",
      "patch": "@@ -248,7 +248,7 @@ protected ISourceViewer createSourceViewer(Composite parent,\n             true,\n             styles);\n \n-        if (hasAnnotations()) {\n+        {\n             char[] matchChars = {'(', ')', '[', ']', '{', '}'}; //which brackets to match\n             ICharacterPairMatcher matcher;\n             try {",
      "parent_sha": "120fe3c6fe3be604adf153d78e56ad8419378450"
    }
  },
  {
    "oid": "9d19a78da767bcbd75ddff50dc5fdce863c4e44c",
    "message": "#10083 Result set fetch size check fixed (Preference page)\n\n\nFormer-commit-id: ed6a415e7e0e53d9cfef2ee617d922a2481b260b",
    "date": "2020-10-16T12:44:04Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/9d19a78da767bcbd75ddff50dc5fdce863c4e44c",
    "details": {
      "sha": "93f64be89c8308057bfd30c52a009afc5a16be38",
      "filename": "plugins/org.jkiss.dbeaver.ui.editors.data/src/org/jkiss/dbeaver/ui/editors/data/preferences/PrefPageResultSetMain.java",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/9d19a78da767bcbd75ddff50dc5fdce863c4e44c/plugins%2Forg.jkiss.dbeaver.ui.editors.data%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fdata%2Fpreferences%2FPrefPageResultSetMain.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/9d19a78da767bcbd75ddff50dc5fdce863c4e44c/plugins%2Forg.jkiss.dbeaver.ui.editors.data%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fdata%2Fpreferences%2FPrefPageResultSetMain.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ui.editors.data%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fdata%2Fpreferences%2FPrefPageResultSetMain.java?ref=9d19a78da767bcbd75ddff50dc5fdce863c4e44c",
      "patch": "@@ -34,6 +34,7 @@\n import org.jkiss.dbeaver.ui.internal.UIMessages;\n import org.jkiss.dbeaver.ui.preferences.TargetPrefPage;\n import org.jkiss.dbeaver.utils.PrefUtils;\n+import org.jkiss.utils.CommonUtils;\n \n import java.util.Locale;\n \n@@ -121,9 +122,9 @@ protected Control createPreferenceContent(Composite parent)\n             resultSetSize.addFocusListener(new FocusAdapter() {\n                 @Override\n                 public void focusLost(FocusEvent e) {\n-                    String realValue = String.valueOf(ResultSetPreferences.MIN_SEGMENT_SIZE);\n-                    if (!realValue.equals(resultSetSize.getText())) {\n-                        resultSetSize.setText(realValue);\n+                    int newValue = CommonUtils.toInt(resultSetSize.getText());\n+                    if (newValue < ResultSetPreferences.MIN_SEGMENT_SIZE) {\n+                        resultSetSize.setText(String.valueOf(ResultSetPreferences.MIN_SEGMENT_SIZE));\n                     }\n                 }\n             });",
      "parent_sha": "778b6d2d70195d9db869e7c6d9901faf62c9f86a"
    }
  },
  {
    "oid": "868c2d0ecc53faddbd1483078af818337db2b47e",
    "message": "Edit connection wizard: do nate save active page between sessions\n\n\nFormer-commit-id: 25cd98b9566755a4906bcbb608f5cae7a2e6acd2",
    "date": "2018-11-28T17:23:44Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/868c2d0ecc53faddbd1483078af818337db2b47e",
    "details": {
      "sha": "e91256f7ad4cb23f1aeee5b9b887495e55b41f2b",
      "filename": "plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/dialogs/connection/EditConnectionDialog.java",
      "status": "modified",
      "additions": 5,
      "deletions": 8,
      "changes": 13,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/868c2d0ecc53faddbd1483078af818337db2b47e/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fdialogs%2Fconnection%2FEditConnectionDialog.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/868c2d0ecc53faddbd1483078af818337db2b47e/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fdialogs%2Fconnection%2FEditConnectionDialog.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fdialogs%2Fconnection%2FEditConnectionDialog.java?ref=868c2d0ecc53faddbd1483078af818337db2b47e",
      "patch": "@@ -16,7 +16,6 @@\n  */\r\n package org.jkiss.dbeaver.ui.dialogs.connection;\r\n \r\n-import org.eclipse.jface.dialogs.IDialogConstants;\r\n import org.eclipse.jface.dialogs.IDialogSettings;\r\n import org.eclipse.osgi.util.NLS;\r\n import org.eclipse.swt.widgets.Button;\r\n@@ -37,6 +36,8 @@ public class EditConnectionDialog extends MultiPageWizardDialog\n {\r\n \r\n     public static final int TEST_BUTTON_ID = 2000;\r\n+    private static String lastActivePage;\r\n+\r\n     private Button testButton;\r\n \r\n     public EditConnectionDialog(IWorkbenchWindow window, ConnectionWizard wizard)\r\n@@ -63,9 +64,8 @@ protected Control createContents(Composite parent)\n         getShell().setText(NLS.bind( CoreMessages.dialog_connection_edit_title, activeDataSource.getName()));\r\n         getShell().setImage(DBeaverIcons.getImage(activeDataSource.getObjectImage()));\r\n \r\n-        String activePage = getDialogBoundsSettings().get(\"activePage\");\r\n-        if (!CommonUtils.isEmpty(activePage)) {\r\n-            getWizard().openSettingsPage(activePage);\r\n+        if (!CommonUtils.isEmpty(lastActivePage)) {\r\n+            getWizard().openSettingsPage(lastActivePage);\r\n         }\r\n \r\n         return contents;\r\n@@ -93,10 +93,7 @@ protected void buttonPressed(int buttonId)\n     @Override\r\n     public boolean close() {\r\n         if (getCurrentPage() != null) {\r\n-            String currentPageName = getCurrentPage().getName();\r\n-            if (!CommonUtils.isEmptyTrimmed(currentPageName)) {\r\n-                getDialogBoundsSettings().put(\"activePage\", currentPageName);\r\n-            }\r\n+            lastActivePage = getCurrentPage().getName();\r\n         }\r\n         return super.close();\r\n     }\r",
      "parent_sha": "356ab37ea23d751a6757510a66dd8b5e3eb48106"
    }
  },
  {
    "oid": "02dfb16763634d4d1b1a43979db244a7a3e95f64",
    "message": "Grouping panel message update\n\n\nFormer-commit-id: 00b59c2cc1c45bf86efdb86c56e7985079d6cd9b",
    "date": "2019-01-20T16:14:50Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/02dfb16763634d4d1b1a43979db244a7a3e95f64",
    "details": {
      "sha": "e9c068a42ed29f56981a1edd331a14479d18403a",
      "filename": "plugins/org.jkiss.dbeaver.ui.editors.data/src/org/jkiss/dbeaver/ui/controls/resultset/panel/grouping/GroupingResultsDecorator.java",
      "status": "modified",
      "additions": 10,
      "deletions": 2,
      "changes": 12,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/02dfb16763634d4d1b1a43979db244a7a3e95f64/plugins%2Forg.jkiss.dbeaver.ui.editors.data%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2Fresultset%2Fpanel%2Fgrouping%2FGroupingResultsDecorator.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/02dfb16763634d4d1b1a43979db244a7a3e95f64/plugins%2Forg.jkiss.dbeaver.ui.editors.data%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2Fresultset%2Fpanel%2Fgrouping%2FGroupingResultsDecorator.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ui.editors.data%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2Fresultset%2Fpanel%2Fgrouping%2FGroupingResultsDecorator.java?ref=02dfb16763634d4d1b1a43979db244a7a3e95f64",
      "patch": "@@ -55,7 +55,11 @@ public long getDecoratorFeatures() {\n \n     @Override\n     public String getEmptyDataMessage() {\n-        return \"No Groupings\";\n+        if (container.getGroupAttributes().isEmpty()) {\n+            return \"No Groupings\";\n+        } else {\n+            return \"Grouping failed\";\n+        }\n     }\n \n     @Override\n@@ -68,7 +72,11 @@ public String getEmptyDataDescription() {\n         if (dialect == null || !dialect.supportsSubqueries()) {\n             return \"Grouping is not supported\\nby datasource '\" + dataSource.getContainer().getDriver().getFullName() + \"'\";\n         } else {\n-            return \"Drag-and-drop results column(s) here to create grouping\\nPress CONTROL to configure grouping settings\";\n+            if (container.getGroupAttributes().isEmpty()) {\n+                return \"Drag-and-drop results column(s) here to create grouping\\nPress CONTROL to configure grouping settings\";\n+            } else {\n+                return \"Grouping attempt failed. Clear grouping to proceed.\";\n+            }\n         }\n     }\n ",
      "parent_sha": "85571829c38438d1f10b5353706c51f069c8b819"
    }
  },
  {
    "oid": "644526f577bb074541a3d142493c84d1531f4e42",
    "message": "#12 PostgreSQL class cache\n\n\nFormer-commit-id: 32d1d311c0867818530b693588c49e29650a39f0",
    "date": "2015-12-26T14:48:33Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/644526f577bb074541a3d142493c84d1531f4e42",
    "details": {
      "sha": "d971aa21c0304215d06c1f5d6dd8e279e1ea64e7",
      "filename": "plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreSchema.java",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/644526f577bb074541a3d142493c84d1531f4e42/plugins%2Forg.jkiss.dbeaver.ext.postgresql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fpostgresql%2Fmodel%2FPostgreSchema.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/644526f577bb074541a3d142493c84d1531f4e42/plugins%2Forg.jkiss.dbeaver.ext.postgresql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fpostgresql%2Fmodel%2FPostgreSchema.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ext.postgresql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fpostgresql%2Fmodel%2FPostgreSchema.java?ref=644526f577bb074541a3d142493c84d1531f4e42",
      "patch": "@@ -299,12 +299,19 @@ protected JDBCStatement prepareChildrenStatement(@NotNull JDBCSession session, @\n             throws SQLException\n         {\n             StringBuilder sql = new StringBuilder();\n-            sql.append(\"SELECT c.relname,a.* FROM pg_catalog.pg_attribute a,pg_catalog.pg_class c WHERE a.attrelid=c.oid AND c.oid=?\");\n+            sql.append(\"SELECT c.relname,a.* FROM pg_catalog.pg_attribute a,pg_catalog.pg_class c WHERE a.attrelid=c.oid\");\n+            if (forTable != null) {\n+                sql.append(\" AND c.oid=?\");\n+            } else {\n+                sql.append(\" AND c.relnamespace=?\");\n+            }\n             sql.append(\" ORDER BY a.attnum\");\n \n             JDBCPreparedStatement dbStat = session.prepareStatement(sql.toString());\n             if (forTable != null) {\n                 dbStat.setInt(1, forTable.getObjectId());\n+            } else {\n+                dbStat.setInt(1, PostgreSchema.this.getObjectId());\n             }\n             return dbStat;\n         }",
      "parent_sha": "b5ed4df8d9bdfebc422f0a9ddda4a054b3d7aaad"
    }
  },
  {
    "oid": "1d4092dfc54d948173f21b6956f15a5b98bb7630",
    "message": "#336 Filter IN: label fix\n\n\nFormer-commit-id: 2cf4b7b02c2954cbe3c759f40dc2d7e64b333702",
    "date": "2016-06-12T07:00:37Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/1d4092dfc54d948173f21b6956f15a5b98bb7630",
    "details": {
      "sha": "9b0d12ff0c37782685d7a8abe61e2f1b30047686",
      "filename": "plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/controls/resultset/FilterValueEditDialog.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/1d4092dfc54d948173f21b6956f15a5b98bb7630/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2Fresultset%2FFilterValueEditDialog.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/1d4092dfc54d948173f21b6956f15a5b98bb7630/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2Fresultset%2FFilterValueEditDialog.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2Fresultset%2FFilterValueEditDialog.java?ref=1d4092dfc54d948173f21b6956f15a5b98bb7630",
      "patch": "@@ -336,7 +336,7 @@ private void loadMultiValueList(@NotNull Collection<DBDLabelValuePair> values) {\n             TableItem item = new TableItem(table, SWT.LEFT);\r\n             item.setData(cellValue);\r\n             item.setText(0, itemString);\r\n-            if (!CommonUtils.isEmpty(row.getLabel()) && !itemString.equals(row.getLabel())) {\r\n+            if (!CommonUtils.isEmpty(row.getLabel())) {\r\n                 item.setText(1, row.getLabel());\r\n             }\r\n             if (checkedValues.contains(cellValue)) {\r",
      "parent_sha": "8ebff7c6f80756ca2b640978c7b2cf2cc3688ff9"
    }
  },
  {
    "oid": "04e21a1932797fc7fa9e86d713fd4dbbcdf212fe",
    "message": "#2556 remove generics\n\nFormer-commit-id: 9e0e3cdc8aeb082f0b6f1a130f3cdf8cf7968c1e",
    "date": "2018-01-08T17:54:20Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/04e21a1932797fc7fa9e86d713fd4dbbcdf212fe",
    "details": {
      "sha": "f004c9595e873d0c2165a1279dfc02b7a24b0089",
      "filename": "plugins/org.jkiss.dbeaver.debug.core/src/org/jkiss/dbeaver/debug/core/DatabaseLaunchDelegate.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/04e21a1932797fc7fa9e86d713fd4dbbcdf212fe/plugins%2Forg.jkiss.dbeaver.debug.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fdebug%2Fcore%2FDatabaseLaunchDelegate.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/04e21a1932797fc7fa9e86d713fd4dbbcdf212fe/plugins%2Forg.jkiss.dbeaver.debug.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fdebug%2Fcore%2FDatabaseLaunchDelegate.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.debug.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fdebug%2Fcore%2FDatabaseLaunchDelegate.java?ref=04e21a1932797fc7fa9e86d713fd4dbbcdf212fe",
      "patch": "@@ -51,7 +51,7 @@ public void launch(ILaunchConfiguration configuration, String mode, ILaunch laun\n         Map<String, Object> attributes = extractAttributes(configuration);\n         DBGController controller = createController(datasourceDescriptor, databaseName, attributes);\n         DatabaseProcess process = createProcess(launch, configuration.getName());\n-        DatabaseDebugTarget<DBGController> target = createDebugTarget(launch, controller, process);\n+        DatabaseDebugTarget target = createDebugTarget(launch, controller, process);\n         launch.addDebugTarget(target);\n         DefaultProgressMonitor progress = new DefaultProgressMonitor(monitor);\n         try {\n@@ -70,6 +70,6 @@ protected Map<String, Object> extractAttributes(ILaunchConfiguration configurati\n \n     protected abstract DatabaseProcess createProcess(ILaunch launch, String name);\n \n-    protected abstract DatabaseDebugTarget<DBGController> createDebugTarget(ILaunch launch, DBGController controller, DatabaseProcess process);\n+    protected abstract DatabaseDebugTarget createDebugTarget(ILaunch launch, DBGController controller, DatabaseProcess process);\n \n }",
      "parent_sha": "60d29e624df50bbc763fb48a85eae5a2ddbaf6ef"
    }
  },
  {
    "oid": "8732c29446a4f79db518d9cd74e3f05881e28fd6",
    "message": "#2107 RSV columns dnd fix\n\n\nFormer-commit-id: 7678f9ac001b19e2072829033b3775a689cacefa",
    "date": "2017-10-04T20:19:07Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/8732c29446a4f79db518d9cd74e3f05881e28fd6",
    "details": {
      "sha": "c35f4b2242500bd9c0102f00c5172b22c5d25fe2",
      "filename": "plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/controls/lightgrid/LightGrid.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/8732c29446a4f79db518d9cd74e3f05881e28fd6/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2Flightgrid%2FLightGrid.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/8732c29446a4f79db518d9cd74e3f05881e28fd6/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2Flightgrid%2FLightGrid.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2Flightgrid%2FLightGrid.java?ref=8732c29446a4f79db518d9cd74e3f05881e28fd6",
      "patch": "@@ -4359,7 +4359,7 @@ public void dropAccept(DropTargetEvent event)\n \r\n             private void handleDragEvent(DropTargetEvent event)\r\n             {\r\n-                event.detail = isDropSupported(event) ? DND.DROP_MOVE : DND.DROP_NONE;\r\n+                event.detail = isDropSupported(event) ? event.detail : DND.DROP_NONE;\r\n                 event.feedback = DND.FEEDBACK_SELECT;\r\n             }\r\n \r",
      "parent_sha": "9965db970d2e1315d34621bd37a5b05ba2401268"
    }
  },
  {
    "oid": "6157e1323c9b9a623d36c72f403cae70df028dfc",
    "message": "#3462 PG schema create fix (owner name quote)\n\n\nFormer-commit-id: 054e2fa5515a6cc97b2b1411004972fb37129ce4",
    "date": "2018-05-12T21:38:19Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/6157e1323c9b9a623d36c72f403cae70df028dfc",
    "details": {
      "sha": "d26210b786c639f79f7a132029a1b18a2a9810bc",
      "filename": "plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/edit/PostgreSchemaManager.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/6157e1323c9b9a623d36c72f403cae70df028dfc/plugins%2Forg.jkiss.dbeaver.ext.postgresql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fpostgresql%2Fedit%2FPostgreSchemaManager.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/6157e1323c9b9a623d36c72f403cae70df028dfc/plugins%2Forg.jkiss.dbeaver.ext.postgresql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fpostgresql%2Fedit%2FPostgreSchemaManager.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ext.postgresql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fpostgresql%2Fedit%2FPostgreSchemaManager.java?ref=6157e1323c9b9a623d36c72f403cae70df028dfc",
      "patch": "@@ -81,7 +81,7 @@ protected void addObjectCreateActions(List<DBEPersistAction> actions, ObjectCrea\n         try {\n             final PostgreRole owner = schema.getOwner(new VoidProgressMonitor());\n             if (owner != null) {\n-                script.append(\"\\nAUTHORIZATION \").append(owner.getName());\n+                script.append(\"\\nAUTHORIZATION \").append(DBUtils.getQuotedIdentifier(owner));\n             }\n         } catch (DBException e) {\n             log.error(e);",
      "parent_sha": "5d9b5f074f29d355d4d90d658d4d1ebfb2b9896f"
    }
  },
  {
    "oid": "c58de67cdecaa25959578b0d2af3e0c62f9275c4",
    "message": "Node name in status line: add node type",
    "date": "2024-05-28T13:04:12Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/c58de67cdecaa25959578b0d2af3e0c62f9275c4",
    "details": {
      "sha": "45cecc543b46bdd2272b0c62da173563331f7734",
      "filename": "plugins/org.jkiss.dbeaver.ui.navigator/src/org/jkiss/dbeaver/ui/navigator/database/NavigatorViewBase.java",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/c58de67cdecaa25959578b0d2af3e0c62f9275c4/plugins%2Forg.jkiss.dbeaver.ui.navigator%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fnavigator%2Fdatabase%2FNavigatorViewBase.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/c58de67cdecaa25959578b0d2af3e0c62f9275c4/plugins%2Forg.jkiss.dbeaver.ui.navigator%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fnavigator%2Fdatabase%2FNavigatorViewBase.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ui.navigator%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fnavigator%2Fdatabase%2FNavigatorViewBase.java?ref=c58de67cdecaa25959578b0d2af3e0c62f9275c4",
      "patch": "@@ -249,9 +249,12 @@ private void onSelectionChange(IStructuredSelection structSel) {\n             if (lastSelection instanceof DBNRoot) {\n                 // Don't display status message for root node - it has no meaningful information\n                 getViewSite().getActionBars().getStatusLineManager().setMessage(null);\n-            } else if (lastSelection instanceof DBNNode) {\n-                final String name = ((DBNNode) lastSelection).getNodeDisplayName();\n-                final String desc = ((DBNNode) lastSelection).getNodeDescription();\n+            } else if (lastSelection instanceof DBNNode node) {\n+                String name = node.getNodeDisplayName();\n+                String desc = node.getNodeDescription();\n+                if (node instanceof DBNDatabaseNode && !(node instanceof DBNDatabaseFolder)) {\n+                    name = node.getNodeTypeLabel() + \": \" + name;\n+                }\n                 if (CommonUtils.isEmpty(desc)) {\n                     getViewSite().getActionBars().getStatusLineManager().setMessage(name);\n                 } else {",
      "parent_sha": "282666ca2934447485ab23e6ab52f11906acfde1"
    }
  },
  {
    "oid": "8da6b1e66f1481a564f4beba3a363fb10d5d5a1e",
    "message": "dbeaver/pro#4237 Remove procedures from proposals for table completions (#37321)",
    "date": "2025-02-25T14:51:31Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/8da6b1e66f1481a564f4beba3a363fb10d5d5a1e",
    "details": {
      "sha": "0fa34350e4979baf7c731fa018cbdb22047c4fd1",
      "filename": "plugins/org.jkiss.dbeaver.model.sql/src/org/jkiss/dbeaver/model/sql/semantics/completion/SQLQueryCompletionContext.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/8da6b1e66f1481a564f4beba3a363fb10d5d5a1e/plugins%2Forg.jkiss.dbeaver.model.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fsql%2Fsemantics%2Fcompletion%2FSQLQueryCompletionContext.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/8da6b1e66f1481a564f4beba3a363fb10d5d5a1e/plugins%2Forg.jkiss.dbeaver.model.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fsql%2Fsemantics%2Fcompletion%2FSQLQueryCompletionContext.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.model.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fsql%2Fsemantics%2Fcompletion%2FSQLQueryCompletionContext.java?ref=8da6b1e66f1481a564f4beba3a363fb10d5d5a1e",
      "patch": "@@ -1037,7 +1037,8 @@ private void prepareTableCompletions(\n                     try {\n                         Collection<DBSObjectContainer> containers = this.obtainDefaultContext(monitor, request);\n                         this.collectTables(monitor, context, containers, null, filterOrNull, completions);\n-                        this.collectProcedures(monitor, request, containers, null, filterOrNull, completions);\n+                        // usually we don't want procedures in FROM\n+                        //this.collectProcedures(monitor, request, containers, null, filterOrNull, completions);\n                         this.collectPackages(monitor, request, context, this.exposedContexts,  null, filterOrNull, completions);\n                     } catch (DBException e) {\n                         log.error(e);",
      "parent_sha": "70131479b607236628cf56fa7ac02c121d7d9b22"
    }
  },
  {
    "oid": "7cbaaa1a0bbebcd9a91d23a2f5e3d8d3d339db4c",
    "message": "Revert \"dbeaver/pro#3281 Resolve object aliases on semantic analysis (#35751)\"\n\nThis reverts commit 1e816ad0fb63de98f14a71f0b0c862a3b1768ad6.",
    "date": "2024-10-02T09:57:38Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/7cbaaa1a0bbebcd9a91d23a2f5e3d8d3d339db4c",
    "details": {
      "sha": "7c5d5c3e66b7bd2b28386c2977a14420b21120b6",
      "filename": "plugins/org.jkiss.dbeaver.model.sql/src/org/jkiss/dbeaver/model/sql/semantics/context/SQLQueryDataSourceContext.java",
      "status": "modified",
      "additions": 6,
      "deletions": 22,
      "changes": 28,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/7cbaaa1a0bbebcd9a91d23a2f5e3d8d3d339db4c/plugins%2Forg.jkiss.dbeaver.model.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fsql%2Fsemantics%2Fcontext%2FSQLQueryDataSourceContext.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/7cbaaa1a0bbebcd9a91d23a2f5e3d8d3d339db4c/plugins%2Forg.jkiss.dbeaver.model.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fsql%2Fsemantics%2Fcontext%2FSQLQueryDataSourceContext.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.model.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fsql%2Fsemantics%2Fcontext%2FSQLQueryDataSourceContext.java?ref=7cbaaa1a0bbebcd9a91d23a2f5e3d8d3d339db4c",
      "patch": "@@ -18,8 +18,6 @@\n \n import org.jkiss.code.NotNull;\n import org.jkiss.code.Nullable;\n-import org.jkiss.dbeaver.DBException;\n-import org.jkiss.dbeaver.Log;\n import org.jkiss.dbeaver.model.exec.DBCExecutionContext;\n import org.jkiss.dbeaver.model.runtime.DBRProgressMonitor;\n import org.jkiss.dbeaver.model.sql.SQLDialect;\n@@ -28,7 +26,10 @@\n import org.jkiss.dbeaver.model.sql.semantics.model.select.SQLQueryRowsSourceModel;\n import org.jkiss.dbeaver.model.sql.semantics.model.select.SQLQueryRowsTableValueModel;\n import org.jkiss.dbeaver.model.stm.STMTreeNode;\n-import org.jkiss.dbeaver.model.struct.*;\n+import org.jkiss.dbeaver.model.struct.DBSEntity;\n+import org.jkiss.dbeaver.model.struct.DBSObject;\n+import org.jkiss.dbeaver.model.struct.DBSObjectContainer;\n+import org.jkiss.dbeaver.model.struct.DBSObjectType;\n import org.jkiss.dbeaver.model.struct.rdb.DBSTable;\n import org.jkiss.dbeaver.model.struct.rdb.DBSView;\n \n@@ -42,8 +43,6 @@\n  * Represents underlying database context having real tables\n  */\n public class SQLQueryDataSourceContext extends SQLQueryDataContext {\n-    private static final Log log = Log.getLog(SQLQueryDataSourceContext.class);\n-\n     @NotNull\n     private final SQLDialect dialect;\n     @NotNull\n@@ -96,10 +95,9 @@ public DBSEntity findRealTable(@NotNull DBRProgressMonitor monitor, @NotNull Lis\n                 container,\n                 this.executionContext,\n                 tableName2,\n-                true,\n+                false,\n                 identifierDetector\n             );\n-            obj = expandAliases(monitor, obj);\n             return obj instanceof DBSTable table ? table : (obj instanceof DBSView view ? view : null);\n         } else {\n             // Semantic analyser should never be used for databases, which doesn't support table lookup\n@@ -123,10 +121,9 @@ public DBSObject findRealObject(\n                 container,\n                 this.executionContext,\n                 objectName2,\n-                true,\n+                false,\n                 identifierDetector\n             );\n-            obj = expandAliases(monitor, obj);\n             return objectType.getTypeClass().isInstance(obj) ? obj : null;\n         } else {\n             // Semantic analyser should never be used for databases, which doesn't support table lookup\n@@ -136,19 +133,6 @@ public DBSObject findRealObject(\n         }\n     }\n \n-    @Nullable\n-    private static DBSObject expandAliases(@NotNull DBRProgressMonitor monitor, @Nullable DBSObject obj) {\n-        while (obj instanceof DBSAlias aliasObject) {\n-            try {\n-                obj = aliasObject.getTargetObject(monitor);\n-            } catch (DBException e) {\n-                obj = null;\n-                log.debug(\"Can't resolve target object for alias '\" + aliasObject.getName() + \"'\", e);\n-            }\n-        }\n-        return obj;\n-    }\n-\n     @Nullable\n     @Override\n     public SQLQueryRowsSourceModel findRealSource(@NotNull DBSEntity table) {",
      "parent_sha": "e3c5a07e981b9ad1f3fd44a51a2ae2f9e3e04915"
    }
  },
  {
    "oid": "237f351f57d1fce284dbfb11722e726103f3b585",
    "message": "#18541 Fix NPE on reference panel opening (#20280)",
    "date": "2023-06-15T13:43:34Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/237f351f57d1fce284dbfb11722e726103f3b585",
    "details": {
      "sha": "e0ac12e717e339d72e681ed6766a82d1b3f29ad9",
      "filename": "plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/impl/sql/StandardSQLDialectQueryGenerator.java",
      "status": "modified",
      "additions": 8,
      "deletions": 3,
      "changes": 11,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/237f351f57d1fce284dbfb11722e726103f3b585/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fimpl%2Fsql%2FStandardSQLDialectQueryGenerator.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/237f351f57d1fce284dbfb11722e726103f3b585/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fimpl%2Fsql%2FStandardSQLDialectQueryGenerator.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fimpl%2Fsql%2FStandardSQLDialectQueryGenerator.java?ref=237f351f57d1fce284dbfb11722e726103f3b585",
      "patch": "@@ -340,9 +340,14 @@ public String getConstraintCondition(\n                     Object[] array = ((Object[]) value);\n                     for (int i = 0; i < array.length; i++) {\n                         if (i > 0) {\n-                            conString.append(\" OR\");\n-                            conString.append(' ').append(DBUtils.getQuotedIdentifier(dataSource,\n-                                constraint.getAttributeLabel())).append(' ');\n+                            conString.append(\" OR \");\n+                            conString.append(DBUtils.getQuotedIdentifier(\n+                                dataSource,\n+                                CommonUtils.isEmpty(constraint.getAttributeLabel()) ?\n+                                    constraint.getAttributeName() :\n+                                    constraint.getAttributeLabel()\n+                            ));\n+                            conString.append(' ');\n                         }\n                         conString.append(operator.getExpression());\n                         String strValue = getStringValue(dataSource, constraint, inlineCriteria, array[i]);",
      "parent_sha": "e4b5d5bfe46a2757f94244095dbe680186d78d73"
    }
  },
  {
    "oid": "2d5e968e9468211572a890465a1e956e2dc6d575",
    "message": "dbeaver/pro#1238 Respect mouse position when zooming charts in/out (#18467)\n\n* dbeaver/pro#1238 Respect mouse position when zooming charts in/out\r\n\r\n* dbeaver/pro#1238 Rename `zoom` -> `doZoom` so it matches other methods",
    "date": "2022-12-09T10:20:40Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/2d5e968e9468211572a890465a1e956e2dc6d575",
    "details": {
      "sha": "b59cf79b23ec1e6438aa90537df76dfc5ab70e6a",
      "filename": "plugins/org.jkiss.dbeaver.ui.charts/src/org/jkiss/dbeaver/ui/charts/BaseChartComposite.java",
      "status": "modified",
      "additions": 21,
      "deletions": 4,
      "changes": 25,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/2d5e968e9468211572a890465a1e956e2dc6d575/plugins%2Forg.jkiss.dbeaver.ui.charts%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcharts%2FBaseChartComposite.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/2d5e968e9468211572a890465a1e956e2dc6d575/plugins%2Forg.jkiss.dbeaver.ui.charts%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcharts%2FBaseChartComposite.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ui.charts%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcharts%2FBaseChartComposite.java?ref=2d5e968e9468211572a890465a1e956e2dc6d575",
      "patch": "@@ -32,13 +32,17 @@\n import org.eclipse.swt.widgets.*;\n import org.eclipse.ui.ExtensionFactory;\n import org.eclipse.ui.dialogs.PreferencesUtil;\n+import org.jfree.chart.plot.PlotRenderingInfo;\n import org.jfree.chart.plot.Zoomable;\n import org.jfree.chart.swt.ChartComposite;\n+import org.jkiss.code.NotNull;\n import org.jkiss.dbeaver.runtime.DBWorkbench;\n import org.jkiss.dbeaver.ui.DBeaverIcons;\n import org.jkiss.dbeaver.ui.UIIcon;\n import org.jkiss.dbeaver.ui.charts.internal.UIChartsMessages;\n+import org.jkiss.dbeaver.utils.GeneralUtils;\n \n+import java.awt.geom.Point2D;\n import java.io.IOException;\n \n /**\n@@ -77,18 +81,18 @@ protected Menu createPopupMenu(boolean properties, boolean save, boolean print,\n     }\n \n     protected void fillContextMenu(IMenuManager manager) {\n-        boolean zoomable = getChart().getPlot() instanceof Zoomable;\n-        if (zoomable) {\n+        final Zoomable zoomable = GeneralUtils.adapt(getChart().getPlot(), Zoomable.class);\n+        if (zoomable != null) {\n             manager.add(new Action(UIChartsMessages.base_chart_composite_action_zoom_in, DBeaverIcons.getImageDescriptor(UIIcon.ZOOM_IN)) {\n                 @Override\n                 public void runWithEvent(Event e) {\n-                    zoomInBoth(e.x, e.y);\n+                    doZoom(zoomable, getChartCanvas().toControl(getDisplay().getCursorLocation()), getZoomInFactor());\n                 }\n             });\n             manager.add(new Action(UIChartsMessages.base_chart_composite_action_zoom_out, DBeaverIcons.getImageDescriptor(UIIcon.ZOOM_OUT)) {\n                 @Override\n                 public void runWithEvent(Event e) {\n-                    zoomOutBoth(e.x, e.y);\n+                    doZoom(zoomable, getChartCanvas().toControl(getDisplay().getCursorLocation()), getZoomOutFactor());\n                 }\n             });\n             manager.add(new Action(UIChartsMessages.base_chart_composite_action_zoom_reset, DBeaverIcons.getImageDescriptor(UIIcon.ZOOM)) {\n@@ -147,6 +151,19 @@ public void run() {\n         }\n     }\n \n+    private void doZoom(@NotNull Zoomable zoomable, @NotNull Point origin, double factor) {\n+        final PlotRenderingInfo info = getChartRenderingInfo().getPlotInfo();\n+        final Point2D anchor = translateScreenToJava2D(new java.awt.Point(origin.x, origin.y));\n+\n+        if (zoomable.isDomainZoomable()) {\n+            zoomable.zoomDomainAxes(factor, info, anchor, true);\n+        }\n+\n+        if (zoomable.isRangeZoomable()) {\n+            zoomable.zoomRangeAxes(factor, info, anchor, true);\n+        }\n+    }\n+\n     protected void doCopyToClipboard() {\n         Image image = new Image(Display.getDefault(), this.getBounds());\n         GC gc = new GC(image);",
      "parent_sha": "a764b2b7db9e9163589b3869e5bb5329256b4e85"
    }
  },
  {
    "oid": "8d88ea58ff4737403a2def437b6ea4f66f90b991",
    "message": "#15860 search by attributes case insensitive for tasks columns names (#17685)",
    "date": "2022-09-21T11:58:37Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/8d88ea58ff4737403a2def437b6ea4f66f90b991",
    "details": {
      "sha": "e0f57f94f5e4b02027c02238f2c63025b2cf02d9",
      "filename": "plugins/org.jkiss.dbeaver.data.transfer/src/org/jkiss/dbeaver/tools/transfer/database/DatabaseMappingAttribute.java",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/8d88ea58ff4737403a2def437b6ea4f66f90b991/plugins%2Forg.jkiss.dbeaver.data.transfer%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Ftools%2Ftransfer%2Fdatabase%2FDatabaseMappingAttribute.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/8d88ea58ff4737403a2def437b6ea4f66f90b991/plugins%2Forg.jkiss.dbeaver.data.transfer%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Ftools%2Ftransfer%2Fdatabase%2FDatabaseMappingAttribute.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.data.transfer%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Ftools%2Ftransfer%2Fdatabase%2FDatabaseMappingAttribute.java?ref=8d88ea58ff4737403a2def437b6ea4f66f90b991",
      "patch": "@@ -348,8 +348,13 @@ public void loadSettings(Map<String, Object> settings) {\n                 if (!CommonUtils.isEmpty(targetName)) {\n                     DBSDataManipulator targetEntity = parent.getTarget();\n                     if (targetEntity instanceof DBSEntity) {\n-                        this.target = ((DBSEntity) targetEntity).getAttribute(new VoidProgressMonitor(),\n-                            DBUtils.getUnQuotedIdentifier(((DBSEntity) targetEntity).getDataSource(), targetName));\n+                        DBSEntity dbsEntity = (DBSEntity) targetEntity;\n+                        if (dbsEntity.getDataSource() != null) {\n+                            this.target = CommonUtils.findBestCaseAwareMatch(\n+                                CommonUtils.safeCollection(dbsEntity.getAttributes(new VoidProgressMonitor())),\n+                                DBUtils.getUnQuotedIdentifier(dbsEntity.getDataSource(), targetName),\n+                                DBSEntityAttribute::getName);\n+                        }\n                     }\n                 }\n ",
      "parent_sha": "d2f0c7ce91b319687b6084a123ebe7278faaaebc"
    }
  },
  {
    "oid": "abddd2704f592b6b82f807cd4c4eab591b01cd06",
    "message": "SWT error handle\n\n\nFormer-commit-id: 15158a3128ea0bf85b1e9d1af7c2f23a991729b8",
    "date": "2018-06-08T14:20:43Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/abddd2704f592b6b82f807cd4c4eab591b01cd06",
    "details": {
      "sha": "c681f746343748ba8937fd3a3daedfdcea746083",
      "filename": "plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/editors/DatabaseEditorUtils.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/abddd2704f592b6b82f807cd4c4eab591b01cd06/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2FDatabaseEditorUtils.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/abddd2704f592b6b82f807cd4c4eab591b01cd06/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2FDatabaseEditorUtils.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2FDatabaseEditorUtils.java?ref=abddd2704f592b6b82f807cd4c4eab591b01cd06",
      "patch": "@@ -57,7 +57,7 @@ public static void setPartBackground(IEditorPart editor, Composite composite)\n         CTabFolder tabFolder = null;\r\n         Composite rootComposite = null;\r\n         for (Composite c = composite; c != null; c = c.getParent()) {\r\n-            if (c.getParent() instanceof CTabFolder) {\r\n+            if (!c.isDisposed() && c.getParent() instanceof CTabFolder) {\r\n                 tabFolder = (CTabFolder) c.getParent();\r\n                 rootComposite = c;\r\n                 break;\r",
      "parent_sha": "d97b1b06188e5a0176dbc3d94e641f2914c2478f"
    }
  },
  {
    "oid": "646e48098079a549077713a634632c88cde63dd3",
    "message": "SQL indent fix\n\n\nFormer-commit-id: 35070d8c42187775d859d704b2688ee65b0191da",
    "date": "2019-04-10T10:22:45Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/646e48098079a549077713a634632c88cde63dd3",
    "details": {
      "sha": "c9a71bbd98d17d70411221c985a2da46e77270b5",
      "filename": "plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/indent/SQLAutoIndentStrategy.java",
      "status": "modified",
      "additions": 11,
      "deletions": 10,
      "changes": 21,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/646e48098079a549077713a634632c88cde63dd3/plugins%2Forg.jkiss.dbeaver.ui.editors.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2Findent%2FSQLAutoIndentStrategy.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/646e48098079a549077713a634632c88cde63dd3/plugins%2Forg.jkiss.dbeaver.ui.editors.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2Findent%2FSQLAutoIndentStrategy.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ui.editors.sql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Feditors%2Fsql%2Findent%2FSQLAutoIndentStrategy.java?ref=646e48098079a549077713a634632c88cde63dd3",
      "patch": "@@ -322,16 +322,17 @@ private void smartIndentAfterNewLine(IDocument document, DocumentCommand command\n             }\n         } else {\n             indent = indenter.getReferenceIndentation(command.offset);\n-\n-            lastTokenString = lastTokenString.trim();\n-            if (lastTokenString.length() > 0) {\n-                char lastTokenChar = lastTokenString.charAt(lastTokenString.length() - 1);\n-                if (lastTokenChar == ',' || lastTokenChar == ':' || lastTokenChar == '-') {\n-                    // Keep current indent\n-                } else {\n-                    // Last token seems to be some identifier (table or column or function name)\n-                    // Next line shoudl contain some keyword then - let's unindent\n-                    indent = indenter.unindent(beginIndentaion, 1);\n+            if (lastTokenString != null) {\n+                lastTokenString = lastTokenString.trim();\n+                if (lastTokenString.length() > 0) {\n+                    char lastTokenChar = lastTokenString.charAt(lastTokenString.length() - 1);\n+                    if (lastTokenChar == ',' || lastTokenChar == ':' || lastTokenChar == '-') {\n+                        // Keep current indent\n+                    } else {\n+                        // Last token seems to be some identifier (table or column or function name)\n+                        // Next line shoudl contain some keyword then - let's unindent\n+                        indent = indenter.unindent(beginIndentaion, 1);\n+                    }\n                 }\n             }\n         }",
      "parent_sha": "83654e9ebf413e3b23fe405829fb19c837944ccb"
    }
  },
  {
    "oid": "4805994f83837765c477f961ceb4ab414d88082f",
    "message": "Colors cache fix\n\nFormer-commit-id: d742b7f7a9ce150dfbaf8e6daf44857aa2ccecb1",
    "date": "2015-01-25T13:59:47Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/4805994f83837765c477f961ceb4ab414d88082f",
    "details": {
      "sha": "8d2d9c5176b4cebfcb604f3dddaa01affa837644",
      "filename": "plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/controls/lightgrid/LightGrid.java",
      "status": "modified",
      "additions": 23,
      "deletions": 8,
      "changes": 31,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/4805994f83837765c477f961ceb4ab414d88082f/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2Flightgrid%2FLightGrid.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/4805994f83837765c477f961ceb4ab414d88082f/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2Flightgrid%2FLightGrid.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fcontrols%2Flightgrid%2FLightGrid.java?ref=4805994f83837765c477f961ceb4ab414d88082f",
      "patch": "@@ -20,6 +20,7 @@\n \r\n import org.apache.commons.logging.Log;\r\n import org.apache.commons.logging.LogFactory;\r\n+import org.eclipse.jface.resource.JFaceColors;\r\n import org.eclipse.swt.SWT;\r\n import org.eclipse.swt.events.*;\r\n import org.eclipse.swt.graphics.*;\r\n@@ -355,9 +356,15 @@ public LightGrid(Composite parent, int style)\n         cellRenderer = new GridCellRenderer(this);\r\n \r\n         final Display display = getDisplay();\r\n-        setLineColor(display.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));\r\n-        setForeground(display.getSystemColor(SWT.COLOR_LIST_FOREGROUND));\r\n-        setBackground(display.getSystemColor(SWT.COLOR_LIST_BACKGROUND));\r\n+        setLineColor(JFaceColors.getErrorBackground(display));\r\n+        setForeground(JFaceColors.getBannerForeground(display));\r\n+        setBackground(JFaceColors.getBannerBackground(display));\r\n+/*\r\n+        ColorRegistry colorRegistry = PlatformUI.getWorkbench().getThemeManager().getCurrentTheme().getColorRegistry();\r\n+        setLineColor(colorRegistry.get(JFacePreferences.QUALIFIER_COLOR));\r\n+        setForeground(colorRegistry.get(JFacePreferences.CONTENT_ASSIST_FOREGROUND_COLOR));\r\n+        setBackground(colorRegistry.get(JFacePreferences.CONTENT_ASSIST_BACKGROUND_COLOR));\r\n+*/\r\n         sortCursor = display.getSystemCursor(SWT.CURSOR_HAND);\r\n \r\n         if ((style & SWT.MULTI) != 0) {\r\n@@ -581,8 +588,10 @@ public Color getBackground()\n     @Override\r\n     public void setBackground(Color color)\r\n     {\r\n-        backgroundColor = color;\r\n-        redraw();\r\n+        super.setBackground(backgroundColor = color);\r\n+        if (backgroundColor == null) {\r\n+            backgroundColor = super.getBackground();\r\n+        }\r\n     }\r\n \r\n     ///////////////////////////////////\r\n@@ -595,8 +604,10 @@ public Color getForeground() {\n \r\n     @Override\r\n     public void setForeground(Color color) {\r\n-        foregroundColor = color;\r\n-        super.setForeground(color);\r\n+        super.setForeground(foregroundColor = color);\r\n+        if (foregroundColor == null) {\r\n+            foregroundColor = super.getForeground();\r\n+        }\r\n     }\r\n \r\n \r\n@@ -1928,6 +1939,7 @@ private void onPaint(@NotNull PaintEvent e)\n     {\r\n         final GC gc = e.gc;\r\n         gc.setBackground(getBackground());\r\n+\r\n         this.drawBackground(gc, 0, 0, getSize().x, getSize().y);\r\n \r\n         if (scrollValuesObsolete) {\r\n@@ -4118,7 +4130,10 @@ public void drawEmptyCell(GC gc, int x, int y, int width, int height, boolean se\n             gc.setForeground(getDisplay().getSystemColor(SWT.COLOR_LIST_SELECTION_TEXT));\r\n         } else {\r\n             if (isEnabled()) {\r\n-                gc.setBackground(getBackground());\r\n+                Color background = getBackground();\r\n+                if (background != null) {\r\n+                    gc.setBackground(background);\r\n+                }\r\n             } else {\r\n                 gc.setBackground(getDisplay().getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));\r\n             }\r",
      "parent_sha": "73f0d54afe54141f940e4bc0aebf78c2984f3ecf"
    }
  },
  {
    "oid": "cb3815ebaeb1a6115556984a76dd13ca1ebc36eb",
    "message": "#5068 Procedure search fix\n\n\nFormer-commit-id: 8d1f37ee8ef6a14dfa80242b66af70e4bb69fa72",
    "date": "2019-01-30T10:46:40Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/cb3815ebaeb1a6115556984a76dd13ca1ebc36eb",
    "details": {
      "sha": "ff92044af4465b92bef0e5d1fd30ec66f2699d89",
      "filename": "plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/impl/jdbc/exec/JDBCCallableStatementImpl.java",
      "status": "modified",
      "additions": 15,
      "deletions": 6,
      "changes": 21,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/cb3815ebaeb1a6115556984a76dd13ca1ebc36eb/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fimpl%2Fjdbc%2Fexec%2FJDBCCallableStatementImpl.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/cb3815ebaeb1a6115556984a76dd13ca1ebc36eb/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fimpl%2Fjdbc%2Fexec%2FJDBCCallableStatementImpl.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.model%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fmodel%2Fimpl%2Fjdbc%2Fexec%2FJDBCCallableStatementImpl.java?ref=cb3815ebaeb1a6115556984a76dd13ca1ebc36eb",
      "patch": "@@ -22,6 +22,7 @@\n import org.jkiss.dbeaver.Log;\r\n import org.jkiss.dbeaver.model.DBPDataKind;\r\n import org.jkiss.dbeaver.model.DBPDataSource;\r\n+import org.jkiss.dbeaver.model.DBUtils;\r\n import org.jkiss.dbeaver.model.exec.DBCException;\r\n import org.jkiss.dbeaver.model.exec.DBCSession;\r\n import org.jkiss.dbeaver.model.exec.jdbc.JDBCCallableStatement;\r\n@@ -174,12 +175,20 @@ private static DBSProcedure findProcedureByNames(@NotNull DBCSession session, @N\n             return null;\r\n         }\r\n         DBSObjectContainer container = (DBSObjectContainer) session.getDataSource();\r\n-        for (int i = 0; i < names.length - 1; i++) {\r\n-            DBSObject child = container.getChild(session.getProgressMonitor(), DBObjectNameCaseTransformer.transformName(session.getDataSource(), names[i]));\r\n-            if (child instanceof DBSObjectContainer) {\r\n-                container = (DBSObjectContainer) child;\r\n-            } else {\r\n-                return null;\r\n+        if (names.length == 1) {\r\n+            DBSObject[] selectedObjects = DBUtils.getSelectedObjects(session.getProgressMonitor(), container);\r\n+            if (selectedObjects.length > 0 && selectedObjects[selectedObjects.length - 1] instanceof DBSObjectContainer) {\r\n+                container = (DBSObjectContainer) selectedObjects[selectedObjects.length - 1];\r\n+            }\r\n+        } else {\r\n+            container = (DBSObjectContainer) session.getDataSource();\r\n+            for (int i = 0; i < names.length - 1; i++) {\r\n+                DBSObject child = container.getChild(session.getProgressMonitor(), DBObjectNameCaseTransformer.transformName(session.getDataSource(), names[i]));\r\n+                if (child instanceof DBSObjectContainer) {\r\n+                    container = (DBSObjectContainer) child;\r\n+                } else {\r\n+                    return null;\r\n+                }\r\n             }\r\n         }\r\n         if (container instanceof DBSProcedureContainer) {\r",
      "parent_sha": "c2a092cb0b902d6853a2f525d949d9ed69585f2a"
    }
  },
  {
    "oid": "0a97ad7fb5de991f68dd34b5c4b006fcb513997a",
    "message": "#6397 Structure modify estrict: extra check\n\n\nFormer-commit-id: 1585269ce89e298ea64ab5e306bcb3ce9350bbcc",
    "date": "2019-08-11T17:56:40Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/0a97ad7fb5de991f68dd34b5c4b006fcb513997a",
    "details": {
      "sha": "27a696c3fba9fc4532b2ca2b293348ee509f7400",
      "filename": "plugins/org.jkiss.dbeaver.ui.navigator/src/org/jkiss/dbeaver/ui/navigator/actions/NavigatorHandlerObjectCreateNew.java",
      "status": "modified",
      "additions": 2,
      "deletions": 5,
      "changes": 7,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/0a97ad7fb5de991f68dd34b5c4b006fcb513997a/plugins%2Forg.jkiss.dbeaver.ui.navigator%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fnavigator%2Factions%2FNavigatorHandlerObjectCreateNew.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/0a97ad7fb5de991f68dd34b5c4b006fcb513997a/plugins%2Forg.jkiss.dbeaver.ui.navigator%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fnavigator%2Factions%2FNavigatorHandlerObjectCreateNew.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ui.navigator%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fnavigator%2Factions%2FNavigatorHandlerObjectCreateNew.java?ref=0a97ad7fb5de991f68dd34b5c4b006fcb513997a",
      "patch": "@@ -37,10 +37,7 @@\n import org.eclipse.ui.menus.UIElement;\n import org.jkiss.code.Nullable;\n import org.jkiss.dbeaver.Log;\n-import org.jkiss.dbeaver.model.DBIcon;\n-import org.jkiss.dbeaver.model.DBPDataSource;\n-import org.jkiss.dbeaver.model.DBPDataSourceContainer;\n-import org.jkiss.dbeaver.model.DBPImage;\n+import org.jkiss.dbeaver.model.*;\n import org.jkiss.dbeaver.model.app.DBPResourceCreator;\n import org.jkiss.dbeaver.model.app.DBPResourceHandler;\n import org.jkiss.dbeaver.model.app.DBPWorkspace;\n@@ -228,7 +225,7 @@ private static void addDatabaseNodeCreateItems(@Nullable IWorkbenchPartSite site\n                         site, nodeItemClass.getName(), node.getNodeType(), nodeIcon, false));\n             }\n \n-            if (isReadOnly(node.getObject())) {\n+            if (!node.getDataSourceContainer().hasModifyPermission(DBPDataSourcePermission.PERMISSION_EDIT_METADATA)) {\n                 // Do not add child folders\n                 return;\n             }",
      "parent_sha": "20deb0b36100537c0290d7f66136d47871858213"
    }
  },
  {
    "oid": "1751b81ed46f8d5b77f3cd684618b11b416c44bc",
    "message": "#6136 Update title on part input change\n\n\nFormer-commit-id: 4ca7213794020c0d7610e30beba791aea2fbd58a",
    "date": "2019-12-14T12:42:15Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/1751b81ed46f8d5b77f3cd684618b11b416c44bc",
    "details": {
      "sha": "d568c925eb76d61cf79890d0997d7b101a004b7c",
      "filename": "plugins/org.jkiss.dbeaver.core.application/src/org/jkiss/dbeaver/core/application/ApplicationWorkbenchWindowAdvisor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/1751b81ed46f8d5b77f3cd684618b11b416c44bc/plugins%2Forg.jkiss.dbeaver.core.application%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fcore%2Fapplication%2FApplicationWorkbenchWindowAdvisor.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/1751b81ed46f8d5b77f3cd684618b11b416c44bc/plugins%2Forg.jkiss.dbeaver.core.application%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fcore%2Fapplication%2FApplicationWorkbenchWindowAdvisor.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.core.application%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fcore%2Fapplication%2FApplicationWorkbenchWindowAdvisor.java?ref=1751b81ed46f8d5b77f3cd684618b11b416c44bc",
      "patch": "@@ -201,7 +201,7 @@ public void partVisible(IWorkbenchPartReference ref) {\n \n                 @Override\n                 public void partInputChanged(IWorkbenchPartReference partRef) {\n-\n+                    recomputeTitle();\n                 }\n             });\n     }",
      "parent_sha": "ebfaf5e41e92d3afcc54ed125b5fd685cf11af8f"
    }
  },
  {
    "oid": "e3bd591a68f4c607485019f37a965c7c94667687",
    "message": "SQL INSERT exporter: column names quoting\n\n\nFormer-commit-id: 80b728c69f8baaa920914a02bbbd1845a94aeddf",
    "date": "2015-10-30T15:35:26Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/e3bd591a68f4c607485019f37a965c7c94667687",
    "details": {
      "sha": "f1b3215e3554feb5bf2587424431fd07b2265753",
      "filename": "plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/tools/transfer/stream/impl/DataExporterSQL.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/e3bd591a68f4c607485019f37a965c7c94667687/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Ftools%2Ftransfer%2Fstream%2Fimpl%2FDataExporterSQL.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/e3bd591a68f4c607485019f37a965c7c94667687/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Ftools%2Ftransfer%2Fstream%2Fimpl%2FDataExporterSQL.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Ftools%2Ftransfer%2Fstream%2Fimpl%2FDataExporterSQL.java?ref=e3bd591a68f4c607485019f37a965c7c94667687",
      "patch": "@@ -120,7 +120,7 @@ public void exportRow(DBRProgressMonitor monitor, Object[] row) throws DBExcepti\n                 if (i > 0) {\r\n                     sqlBuffer.append(',');\r\n                 }\r\n-                sqlBuffer.append(column.getName());\r\n+                sqlBuffer.append(DBUtils.getQuotedIdentifier(column));\r\n             }\r\n             sqlBuffer.append(\") VALUES \");\r\n             if (insertMode != SQLDialect.MultiValueInsertMode.GROUP_ROWS) {\r",
      "parent_sha": "c6cbf2931cdcfccfdfdb4995993d827a26c734f5"
    }
  },
  {
    "oid": "4c68b0765038f5f0ffda23a3699f67e0c5b8ab57",
    "message": "Driver libraries model\n\nFormer-commit-id: ed31c5b229f60d539bb891cbada3944cfe8510d0",
    "date": "2015-10-06T20:07:00Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/4c68b0765038f5f0ffda23a3699f67e0c5b8ab57",
    "details": {
      "sha": "53931f65cab35173550b04c6f7f0afbdae822233",
      "filename": "plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/dialogs/driver/DriverDownloadAutoPage.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/4c68b0765038f5f0ffda23a3699f67e0c5b8ab57/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fdialogs%2Fdriver%2FDriverDownloadAutoPage.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/4c68b0765038f5f0ffda23a3699f67e0c5b8ab57/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fdialogs%2Fdriver%2FDriverDownloadAutoPage.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.core%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fui%2Fdialogs%2Fdriver%2FDriverDownloadAutoPage.java?ref=4c68b0765038f5f0ffda23a3699f67e0c5b8ab57",
      "patch": "@@ -161,7 +161,7 @@ public void run()\n         {\n             DownloadErrorDialog dialog = new DownloadErrorDialog(\n                 null,\n-                file.getPath(),\n+                file.getDisplayName(),\n                 \"Driver file download failed.\\nDo you want to retry?\",\n                 error);\n             result = dialog.open();",
      "parent_sha": "7d2ce192a3cb31a94fc0e0b20a21bee00ff7316e"
    }
  },
  {
    "oid": "60c96f7602ef701a06df72a43128b70d16655494",
    "message": "MySQL collation props fix\n\n\nFormer-commit-id: 76f5bdad270b6e9b413eed2e1fdc31abb97e9a1a",
    "date": "2018-07-11T19:26:42Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/60c96f7602ef701a06df72a43128b70d16655494",
    "details": {
      "sha": "edae6c1eedebe36264736e86c29819abf90222b5",
      "filename": "plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/model/MySQLCollation.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/60c96f7602ef701a06df72a43128b70d16655494/plugins%2Forg.jkiss.dbeaver.ext.mysql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fmysql%2Fmodel%2FMySQLCollation.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/60c96f7602ef701a06df72a43128b70d16655494/plugins%2Forg.jkiss.dbeaver.ext.mysql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fmysql%2Fmodel%2FMySQLCollation.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ext.mysql%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Fmysql%2Fmodel%2FMySQLCollation.java?ref=60c96f7602ef701a06df72a43128b70d16655494",
      "patch": "@@ -56,15 +56,15 @@ private void loadInfo(ResultSet dbResult)\n         this.sortLength = JDBCUtils.safeGetInt(dbResult, MySQLConstants.COL_SORT_LENGTH);\n     }\n \n-    @Property(viewable = true, order = 1)\n+    @Property(viewable = true, order = 2)\n     public MySQLCharset getCharset()\n     {\n         return charset;\n     }\n \n     @NotNull\n     @Override\n-    @Property(viewable = true, order = 2)\n+    @Property(viewable = true, order = 1)\n     public String getName()\n     {\n         return name;",
      "parent_sha": "96341e090d71835402757c0c80c5e6a3ace388b8"
    }
  },
  {
    "oid": "c0405304c43bb2396d1544c294b2400644da2d59",
    "message": "#5879 FB: SET DEFAULT and DROP DEFAULT fixes\n\n\nFormer-commit-id: 33e3f6e4b649028e1e6e0a78a6e11a8dd21004d8",
    "date": "2019-05-13T16:35:56Z",
    "url": "https://github.com/dbeaver/dbeaver/commit/c0405304c43bb2396d1544c294b2400644da2d59",
    "details": {
      "sha": "452f10a4cbced44e0156f6b5536b3e27d332254f",
      "filename": "plugins/org.jkiss.dbeaver.ext.firebird/src/org/jkiss/dbeaver/ext/firebird/edit/FireBirdTableColumnManager.java",
      "status": "modified",
      "additions": 1,
      "deletions": 10,
      "changes": 11,
      "blob_url": "https://github.com/dbeaver/dbeaver/blob/c0405304c43bb2396d1544c294b2400644da2d59/plugins%2Forg.jkiss.dbeaver.ext.firebird%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Ffirebird%2Fedit%2FFireBirdTableColumnManager.java",
      "raw_url": "https://github.com/dbeaver/dbeaver/raw/c0405304c43bb2396d1544c294b2400644da2d59/plugins%2Forg.jkiss.dbeaver.ext.firebird%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Ffirebird%2Fedit%2FFireBirdTableColumnManager.java",
      "contents_url": "https://api.github.com/repos/dbeaver/dbeaver/contents/plugins%2Forg.jkiss.dbeaver.ext.firebird%2Fsrc%2Forg%2Fjkiss%2Fdbeaver%2Fext%2Ffirebird%2Fedit%2FFireBirdTableColumnManager.java?ref=c0405304c43bb2396d1544c294b2400644da2d59",
      "patch": "@@ -44,15 +44,6 @@ public class FireBirdTableColumnManager extends GenericTableColumnManager\n     implements DBEObjectRenamer<GenericTableColumn>, DBEObjectReorderer<GenericTableColumn>\n {\n \n-    protected final ColumnModifier<GenericTableColumn> FBDefaultModifier = (monitor, column, sql, command) -> {\n-        if (CommonUtils.isEmpty(command.getObject().getDefaultValue())) {\n-            sql.append(\" DROP DEFAULT\");\n-        } else {\n-            sql.append(\" SET DEFAULT \");\n-            DefaultModifier.appendModifier(monitor, column, sql, command);\n-        }\n-    };\n-\n     @Override\n     public StringBuilder getNestedDeclaration(DBRProgressMonitor monitor, GenericTable owner, DBECommandAbstract<GenericTableColumn> command, Map<String, Object> options)\n     {\n@@ -70,7 +61,7 @@ public StringBuilder getNestedDeclaration(DBRProgressMonitor monitor, GenericTab\n     @Override\n     protected ColumnModifier[] getSupportedModifiers(GenericTableColumn column, Map<String, Object> options) {\n         // According to SQL92 DEFAULT comes before constraints\n-        return new ColumnModifier[] {DataTypeModifier, FBDefaultModifier, NotNullModifier};\n+        return new ColumnModifier[] {DataTypeModifier, DefaultModifier, NotNullModifier};\n     }\n \n     /**",
      "parent_sha": "86a95fe91f742d8f1b0784e2ef06d319df7aaa7f"
    }
  }
]