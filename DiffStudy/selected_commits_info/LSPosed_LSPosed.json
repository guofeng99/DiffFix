[
  {
    "oid": "1cb05638bd0a6e3fe7e16644b90123f6bde3f29d",
    "message": "[app] Revert module list sorting changes (#99)",
    "date": "2021-02-08T10:56:23Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/1cb05638bd0a6e3fe7e16644b90123f6bde3f29d",
    "details": {
      "sha": "b6601929fbf5cfda1c6dbe52249d8f01e0db25e3",
      "filename": "app/src/main/java/io/github/lsposed/manager/ui/activity/ModulesActivity.java",
      "status": "modified",
      "additions": 11,
      "deletions": 1,
      "changes": 12,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/1cb05638bd0a6e3fe7e16644b90123f6bde3f29d/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Fui%2Factivity%2FModulesActivity.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/1cb05638bd0a6e3fe7e16644b90123f6bde3f29d/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Fui%2Factivity%2FModulesActivity.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Fui%2Factivity%2FModulesActivity.java?ref=1cb05638bd0a6e3fe7e16644b90123f6bde3f29d",
      "patch": "@@ -74,7 +74,17 @@ public void run() {\n                 }\n             }\n             Comparator<PackageInfo> cmp = AppHelper.getAppListComparator(0, pm);\n-            fullList.sort((a, b) -> cmp.compare(a.pkg, b.pkg));\n+            fullList.sort((a, b) -> {\n+                boolean aChecked = moduleUtil.isModuleEnabled(a.packageName);\n+                boolean bChecked = moduleUtil.isModuleEnabled(b.packageName);\n+                if (aChecked == bChecked) {\n+                    return cmp.compare(a.pkg, b.pkg);\n+                } else if (aChecked) {\n+                    return -1;\n+                } else {\n+                    return 1;\n+                }\n+            });\n             adapter.addAll(showList);\n             adapter.notifyDataSetChanged();\n             moduleUtil.updateModulesList();",
      "parent_sha": "2ffc8fefd59b056254d1ea1513d39e0856220aca"
    }
  },
  {
    "oid": "430192a021137373b8d8691b198686771250ff9d",
    "message": "Fixes #46: hooking failed for methods with returned value type of double",
    "date": "2019-01-30T08:52:16Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/430192a021137373b8d8691b198686771250ff9d",
    "details": {
      "sha": "472c8347c3c1c712c5a59f53ed589479abf7036d",
      "filename": "Bridge/src/main/java/com/elderdrivers/riru/xposed/dexmaker/DexMakerUtils.java",
      "status": "modified",
      "additions": 8,
      "deletions": 6,
      "changes": 14,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/430192a021137373b8d8691b198686771250ff9d/Bridge%2Fsrc%2Fmain%2Fjava%2Fcom%2Felderdrivers%2Friru%2Fxposed%2Fdexmaker%2FDexMakerUtils.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/430192a021137373b8d8691b198686771250ff9d/Bridge%2Fsrc%2Fmain%2Fjava%2Fcom%2Felderdrivers%2Friru%2Fxposed%2Fdexmaker%2FDexMakerUtils.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/Bridge%2Fsrc%2Fmain%2Fjava%2Fcom%2Felderdrivers%2Friru%2Fxposed%2Fdexmaker%2FDexMakerUtils.java?ref=430192a021137373b8d8691b198686771250ff9d",
      "patch": "@@ -153,19 +153,21 @@ public static Map<TypeId, Local> createResultLocals(Code code) {\n         Local<Object> voidObjLocal = code.newLocal(TypeId.get(\"Ljava/lang/Void;\"));\n \n         // backup need initialized locals\n-        code.loadConstant(booleanLocal, Boolean.valueOf(false));\n-        code.loadConstant(byteLocal, Byte.valueOf(\"0\"));\n-        code.loadConstant(charLocal, Character.valueOf('\\0'));\n-        code.loadConstant(floatLocal, Float.valueOf(0));\n+        code.loadConstant(booleanLocal, false);\n+        code.loadConstant(byteLocal, (byte) 0);\n+        code.loadConstant(charLocal, '\\0');\n+        code.loadConstant(doubleLocal,0.0);\n+        code.loadConstant(floatLocal,0.0f);\n         code.loadConstant(intLocal, 0);\n-        code.loadConstant(longLocal, Long.valueOf(0));\n-        code.loadConstant(shortLocal, Short.valueOf(\"0\"));\n+        code.loadConstant(longLocal, 0L);\n+        code.loadConstant(shortLocal, (short) 0);\n         code.loadConstant(voidLocal, null);\n         code.loadConstant(objectLocal, null);\n         // all to null\n         code.loadConstant(booleanObjLocal, null);\n         code.loadConstant(byteObjLocal, null);\n         code.loadConstant(charObjLocal, null);\n+        code.loadConstant(doubleObjLocal, null);\n         code.loadConstant(floatObjLocal, null);\n         code.loadConstant(intObjLocal, null);\n         code.loadConstant(longObjLocal, null);",
      "parent_sha": "5a5eaf74c6afcba5b70911a14f28e3fddb4ba8d1"
    }
  },
  {
    "oid": "bde68a44cb31f6bc078347d41e76978c41e0c67a",
    "message": "[app] Restart activity with recreate on Android S (#959)",
    "date": "2021-08-20T06:26:30Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/bde68a44cb31f6bc078347d41e76978c41e0c67a",
    "details": {
      "sha": "a361785de7956912433348299c5b2fc7cbf3d61c",
      "filename": "app/src/main/java/org/lsposed/manager/ui/activity/MainActivity.java",
      "status": "modified",
      "additions": 11,
      "deletions": 6,
      "changes": 17,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/bde68a44cb31f6bc078347d41e76978c41e0c67a/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Factivity%2FMainActivity.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/bde68a44cb31f6bc078347d41e76978c41e0c67a/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Factivity%2FMainActivity.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Factivity%2FMainActivity.java?ref=bde68a44cb31f6bc078347d41e76978c41e0c67a",
      "patch": "@@ -29,6 +29,7 @@\n import android.view.View;\n \n import androidx.annotation.NonNull;\n+import androidx.core.os.BuildCompat;\n import androidx.navigation.NavController;\n import androidx.navigation.Navigation;\n import androidx.navigation.fragment.NavHostFragment;\n@@ -124,12 +125,16 @@ public boolean onSupportNavigateUp() {\n     }\n \n     public void restart() {\n-        Bundle savedInstanceState = new Bundle();\n-        onSaveInstanceState(savedInstanceState);\n-        finish();\n-        startActivity(newIntent(savedInstanceState, this));\n-        overridePendingTransition(android.R.anim.fade_in, android.R.anim.fade_out);\n-        restarting = true;\n+        if (BuildCompat.isAtLeastS()) {\n+            recreate();\n+        } else {\n+            Bundle savedInstanceState = new Bundle();\n+            onSaveInstanceState(savedInstanceState);\n+            finish();\n+            startActivity(newIntent(savedInstanceState, this));\n+            overridePendingTransition(android.R.anim.fade_in, android.R.anim.fade_out);\n+            restarting = true;\n+        }\n     }\n \n     @Override",
      "parent_sha": "4b02172fd9029837881e7bfb9ee073c77758bb92"
    }
  },
  {
    "oid": "ceb70aea3b3e63573bce0c7647bb02dd9e8f2bcf",
    "message": "[app] Temporarily fix #169",
    "date": "2021-02-23T00:44:35Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/ceb70aea3b3e63573bce0c7647bb02dd9e8f2bcf",
    "details": {
      "sha": "1c2b25cc27f3ad7c9add284efcb39a643f24ed50",
      "filename": "app/src/main/java/io/github/lsposed/manager/repo/RepoLoader.java",
      "status": "modified",
      "additions": 24,
      "deletions": 16,
      "changes": 40,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/ceb70aea3b3e63573bce0c7647bb02dd9e8f2bcf/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Frepo%2FRepoLoader.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/ceb70aea3b3e63573bce0c7647bb02dd9e8f2bcf/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Frepo%2FRepoLoader.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Frepo%2FRepoLoader.java?ref=ceb70aea3b3e63573bce0c7647bb02dd9e8f2bcf",
      "patch": "@@ -25,6 +25,7 @@\n import androidx.annotation.NonNull;\n \n import com.google.gson.Gson;\n+import com.google.gson.JsonSyntaxException;\n \n import java.io.IOException;\n import java.nio.charset.StandardCharsets;\n@@ -86,22 +87,29 @@ public void onFailure(@NonNull Call call, @NonNull IOException e) {\n \n             @Override\n             public void onResponse(@NonNull Call call, @NonNull Response response) throws IOException {\n-                ResponseBody body = response.body();\n-                if (body != null) {\n-                    String bodyString = body.string();\n-                    Gson gson = new Gson();\n-                    Map<String, OnlineModule> modules = new HashMap<>();\n-                    OnlineModule[] repoModules = gson.fromJson(bodyString, OnlineModule[].class);\n-                    Arrays.stream(repoModules).forEach(onlineModule -> modules.put(onlineModule.getName(), onlineModule));\n-                    onlineModules = modules;\n-                    Files.write(repoFile, bodyString.getBytes(StandardCharsets.UTF_8));\n-                }\n-                for (Listener listener : listeners) {\n-                    listener.repoLoaded();\n-                }\n-                synchronized (this) {\n-                    isLoading = false;\n-                    repoLoaded = true;\n+                try {\n+                    ResponseBody body = response.body();\n+                    if (body != null) {\n+                        String bodyString = body.string();\n+                        Gson gson = new Gson();\n+                        Map<String, OnlineModule> modules = new HashMap<>();\n+                        OnlineModule[] repoModules = gson.fromJson(bodyString, OnlineModule[].class);\n+                        Arrays.stream(repoModules).forEach(onlineModule -> modules.put(onlineModule.getName(), onlineModule));\n+                        onlineModules = modules;\n+                        Files.write(repoFile, bodyString.getBytes(StandardCharsets.UTF_8));\n+                    }\n+                    for (Listener listener : listeners) {\n+                        listener.repoLoaded();\n+                    }\n+                    synchronized (this) {\n+                        isLoading = false;\n+                        repoLoaded = true;\n+                    }\n+                } catch (Throwable e) {\n+                    if (e instanceof IOException)\n+                        throw e;\n+                    else\n+                        throw new IOException(e.getMessage(), e.getCause());\n                 }\n             }\n         });",
      "parent_sha": "a556880228013727f6b8b15a73fa713027d056fc"
    }
  },
  {
    "oid": "6e036f49dabfcac1af3bcf582ec4a7785488963c",
    "message": "[core] public loadModule (#1059)",
    "date": "2021-09-05T08:29:30Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/6e036f49dabfcac1af3bcf582ec4a7785488963c",
    "details": {
      "sha": "badb6244d47a0bfcfdace96981e8aadad66464a5",
      "filename": "core/src/main/java/org/lsposed/lspd/service/ConfigFileManager.java",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/6e036f49dabfcac1af3bcf582ec4a7785488963c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigFileManager.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/6e036f49dabfcac1af3bcf582ec4a7785488963c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigFileManager.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigFileManager.java?ref=6e036f49dabfcac1af3bcf582ec4a7785488963c",
      "patch": "@@ -40,7 +40,7 @@\n import java.util.Map;\n import java.util.zip.ZipFile;\n \n-class ConfigFileManager {\n+public class ConfigFileManager {\n     static final Path basePath = Paths.get(\"/data/adb/lspd\");\n     static final File managerApkPath = basePath.resolve(\"manager.apk\").toFile();\n     private static final Path lockPath = basePath.resolve(\"lock\");\n@@ -64,6 +64,9 @@ class ConfigFileManager {\n         }\n     }\n \n+    private ConfigFileManager() {\n+    }\n+\n     static void deleteFolderIfExists(Path target) throws IOException {\n         if (Files.notExists(target)) return;\n         Files.walkFileTree(target, new SimpleFileVisitor<>() {\n@@ -169,7 +172,7 @@ private static void readName(ZipFile apkFile, String initName, List<String> name\n     }\n \n     @Nullable\n-    static PreLoadedApk loadModule(String path) {\n+    public static PreLoadedApk loadModule(String path) {\n         if (path == null) return null;\n         var file = new PreLoadedApk();\n         var preLoadedDexes = new ArrayList<SharedMemory>();",
      "parent_sha": "6cb3eacea89ea8175de3de31c1dc20226fd0b2c7"
    }
  },
  {
    "oid": "66a20e227537fce6c841425fef19ace1babe71ca",
    "message": "Fix checked apps disappearing in the list (#2282)",
    "date": "2022-12-06T09:37:17Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/66a20e227537fce6c841425fef19ace1babe71ca",
    "details": {
      "sha": "dcc669c73cc8fddb6135a0273212fb191552773f",
      "filename": "app/src/main/java/org/lsposed/manager/adapters/ScopeAdapter.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/66a20e227537fce6c841425fef19ace1babe71ca/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fadapters%2FScopeAdapter.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/66a20e227537fce6c841425fef19ace1babe71ca/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fadapters%2FScopeAdapter.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fadapters%2FScopeAdapter.java?ref=66a20e227537fce6c841425fef19ace1babe71ca",
      "patch": "@@ -164,11 +164,11 @@ public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n         return new ViewHolder(ItemModuleBinding.inflate(activity.getLayoutInflater(), parent, false));\n     }\n \n-    private boolean shouldHideApp(PackageInfo info, ApplicationWithEquals app) {\n+    private boolean shouldHideApp(PackageInfo info, ApplicationWithEquals app, HashSet<ScopeAdapter.ApplicationWithEquals> tmpChkList) {\n         if (info.packageName.equals(\"android\")) {\n             return false;\n         }\n-        if (checkedList.contains(app)) {\n+        if (tmpChkList.contains(app)) {\n             return false;\n         }\n         if (preferences.getBoolean(\"filter_denylist\", false)) {\n@@ -547,7 +547,7 @@ public void refresh(boolean force) {\n                             tmpChkList.add(application);\n                         }\n                     }\n-                } else if (shouldHideApp(info, application)) {\n+                } else if (shouldHideApp(info, application, tmpChkList)) {\n                     return;\n                 }\n ",
      "parent_sha": "2294fc8c34e537364d598bc52d4312c6dc4537ef"
    }
  },
  {
    "oid": "37dd63be81bed3f57d4daa1fb73d42ac74c2001f",
    "message": "[core] Correct process name for android in module log (#651)\n\n * It can only be NULL for system_server.",
    "date": "2021-05-22T11:13:46Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/37dd63be81bed3f57d4daa1fb73d42ac74c2001f",
    "details": {
      "sha": "5cad5e82c80b1daadd3413ab261a196a480e912a",
      "filename": "core/src/main/java/org/lsposed/lspd/nativebridge/ModuleLogger.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/37dd63be81bed3f57d4daa1fb73d42ac74c2001f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fnativebridge%2FModuleLogger.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/37dd63be81bed3f57d4daa1fb73d42ac74c2001f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fnativebridge%2FModuleLogger.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fnativebridge%2FModuleLogger.java?ref=37dd63be81bed3f57d4daa1fb73d42ac74c2001f",
      "patch": "@@ -58,7 +58,7 @@ public static void log(String str, boolean isThrowable) {\n         sb.append(' ');\n         sb.append(isThrowable ? \"E\" : \"I\");\n         sb.append('/');\n-        sb.append(processName == null ? \"?\" : processName);\n+        sb.append(processName == null ? \"android\" : processName);\n         sb.append('(');\n         sb.append(Process.myPid());\n         sb.append('-');",
      "parent_sha": "fb05d85a9bab91f33623ec29a13c9a13975f2a95"
    }
  },
  {
    "oid": "25736b2c1559b2c86699e5906f49e232c686ece0",
    "message": "[app] Fix repo",
    "date": "2021-03-25T13:52:06Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/25736b2c1559b2c86699e5906f49e232c686ece0",
    "details": {
      "sha": "661939fcd19bdc8b25dd73ef49db607705c86bac",
      "filename": "app/src/main/java/org/lsposed/manager/ui/activity/RepoActivity.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/25736b2c1559b2c86699e5906f49e232c686ece0/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Factivity%2FRepoActivity.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/25736b2c1559b2c86699e5906f49e232c686ece0/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Factivity%2FRepoActivity.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Factivity%2FRepoActivity.java?ref=25736b2c1559b2c86699e5906f49e232c686ece0",
      "patch": "@@ -64,7 +64,7 @@ public class RepoActivity extends ListActivity implements RepoLoader.Listener {\n     public void onCreate(@Nullable Bundle savedInstanceState) {\n         repoLoader.addListener(this);\n         super.onCreate(savedInstanceState);\n-        if (!ConfigManager.isMagiskInstalled()) {\n+        if (ConfigManager.getXposedVersionName() == null && !ConfigManager.isMagiskInstalled()) {\n             Toast.makeText(this, R.string.lsposed_not_active, Toast.LENGTH_LONG).show();\n             finish();\n         }",
      "parent_sha": "aa99350ee9090d1ff7acc0c3c1febf4fd0053331"
    }
  },
  {
    "oid": "84c8da994b2536f0fb171dff498e8ce87b29ee82",
    "message": "[core] Don't filter `android` (#259)",
    "date": "2021-03-03T13:59:48Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/84c8da994b2536f0fb171dff498e8ce87b29ee82",
    "details": {
      "sha": "9fb2f976e1ec9bd9f1d48e0e641c135f2b85860d",
      "filename": "core/src/main/java/io/github/lsposed/lspd/service/PackageService.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/84c8da994b2536f0fb171dff498e8ce87b29ee82/core%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Flspd%2Fservice%2FPackageService.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/84c8da994b2536f0fb171dff498e8ce87b29ee82/core%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Flspd%2Fservice%2FPackageService.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Flspd%2Fservice%2FPackageService.java?ref=84c8da994b2536f0fb171dff498e8ce87b29ee82",
      "patch": "@@ -172,7 +172,7 @@ private static PackageInfo getPackageInfoWithComponents(String packageName, int\n \n             }\n         }\n-        if (pkgInfo == null || pkgInfo.applicationInfo == null || pkgInfo.applicationInfo.sourceDir == null || pkgInfo.applicationInfo.deviceProtectedDataDir == null || !new File(pkgInfo.applicationInfo.sourceDir).exists() || !new File(pkgInfo.applicationInfo.deviceProtectedDataDir).exists())\n+        if (pkgInfo == null || pkgInfo.applicationInfo == null || (!pkgInfo.packageName.equals(\"android\") && (pkgInfo.applicationInfo.sourceDir == null || pkgInfo.applicationInfo.deviceProtectedDataDir == null || !new File(pkgInfo.applicationInfo.sourceDir).exists() || !new File(pkgInfo.applicationInfo.deviceProtectedDataDir).exists())))\n             return null;\n         return pkgInfo;\n     }",
      "parent_sha": "e4da30379610e4139f87d6da6ed8329f56b21522"
    }
  },
  {
    "oid": "c69bd3fbccc056e405113ccf84241a89e209b112",
    "message": "Throw HookFailedException",
    "date": "2023-02-26T08:48:49Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/c69bd3fbccc056e405113ccf84241a89e209b112",
    "details": {
      "sha": "e4f6d272abc6554b95688ae035359d25d2600353",
      "filename": "core/src/main/java/org/lsposed/lspd/impl/LSPosedContext.java",
      "status": "modified",
      "additions": 45,
      "deletions": 42,
      "changes": 87,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/c69bd3fbccc056e405113ccf84241a89e209b112/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fimpl%2FLSPosedContext.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/c69bd3fbccc056e405113ccf84241a89e209b112/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fimpl%2FLSPosedContext.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fimpl%2FLSPosedContext.java?ref=c69bd3fbccc056e405113ccf84241a89e209b112",
      "patch": "@@ -1,7 +1,5 @@\n package org.lsposed.lspd.impl;\n \n-import static de.robv.android.xposed.callbacks.XCallback.PRIORITY_DEFAULT;\n-\n import android.app.ActivityThread;\n import android.app.LoadedApk;\n import android.content.BroadcastReceiver;\n@@ -852,110 +850,115 @@ public Object featuredMethod(String name, Object... args) {\n     }\n \n     private <T, U extends Executable> MethodUnhooker<T, U> doHook(U hookMethod, int priority, T callback) {\n-        if (Modifier.isAbstract(hookMethod.getModifiers())) {\n-            throw new IllegalArgumentException(\"Cannot hook abstract methods: \" + hookMethod);\n-        } else if (hookMethod.getDeclaringClass().getClassLoader() == LSPosedContext.class.getClassLoader()) {\n-            throw new IllegalArgumentException(\"Do not allow hooking inner methods\");\n-        } else if (hookMethod.getDeclaringClass() == Method.class && hookMethod.getName().equals(\"invoke\")) {\n-            throw new IllegalArgumentException(\"Cannot hook Method.invoke\");\n-        }\n+        try {\n+            if (Modifier.isAbstract(hookMethod.getModifiers())) {\n+                throw new IllegalArgumentException(\"Cannot hook abstract methods: \" + hookMethod);\n+            } else if (hookMethod.getDeclaringClass().getClassLoader() == LSPosedContext.class.getClassLoader()) {\n+                throw new IllegalArgumentException(\"Do not allow hooking inner methods\");\n+            } else if (hookMethod.getDeclaringClass() == Method.class && hookMethod.getName().equals(\"invoke\")) {\n+                throw new IllegalArgumentException(\"Cannot hook Method.invoke\");\n+            }\n \n-        if (callback == null) {\n-            throw new IllegalArgumentException(\"hooker should not be null!\");\n-        }\n+            if (callback == null) {\n+                throw new IllegalArgumentException(\"hooker should not be null!\");\n+            }\n \n-        if (HookBridge.hookMethod(hookMethod, XposedBridge.AdditionalHookInfo.class, priority, callback)) {\n-            return new MethodUnhooker<>() {\n-                @NonNull\n-                @Override\n-                public U getOrigin() {\n-                    return hookMethod;\n-                }\n+            if (HookBridge.hookMethod(hookMethod, XposedBridge.AdditionalHookInfo.class, priority, callback)) {\n+                return new MethodUnhooker<>() {\n+                    @NonNull\n+                    @Override\n+                    public U getOrigin() {\n+                        return hookMethod;\n+                    }\n \n-                @NonNull\n-                @Override\n-                public T getHooker() {\n-                    return callback;\n-                }\n+                    @NonNull\n+                    @Override\n+                    public T getHooker() {\n+                        return callback;\n+                    }\n \n-                @Override\n-                public void unhook() {\n-                    HookBridge.unhookMethod(hookMethod, callback);\n-                }\n-            };\n+                    @Override\n+                    public void unhook() {\n+                        HookBridge.unhookMethod(hookMethod, callback);\n+                    }\n+                };\n+            }\n+        } catch (Throwable t) {\n+            throw new HookFailedException(t);\n         }\n+\n         log(\"Cannot hook \" + hookMethod);\n-        return null;\n+        throw new HookFailedException(\"Cannot hook \" + hookMethod);\n     }\n \n     @Override\n-    @Nullable\n+    @NonNull\n     public MethodUnhooker<BeforeHooker<Method>, Method> hookBefore(@NonNull Method origin, @NonNull BeforeHooker<Method> hooker) {\n         return doHook(origin, PRIORITY_DEFAULT, hooker);\n     }\n \n     @Override\n-    @Nullable\n+    @NonNull\n     public MethodUnhooker<AfterHooker<Method>, Method> hookAfter(@NonNull Method origin, @NonNull AfterHooker<Method> hooker) {\n         return doHook(origin, PRIORITY_DEFAULT, hooker);\n     }\n \n     @Override\n-    @Nullable\n+    @NonNull\n     public MethodUnhooker<Hooker<Method>, Method> hook(@NonNull Method origin, @NonNull Hooker<Method> hooker) {\n         return doHook(origin, PRIORITY_DEFAULT, hooker);\n     }\n \n     @Override\n-    @Nullable\n+    @NonNull\n     public MethodUnhooker<BeforeHooker<Method>, Method> hookBefore(@NonNull Method origin, int priority, @NonNull BeforeHooker<Method> hooker) {\n         return doHook(origin, priority, hooker);\n     }\n \n     @Override\n-    @Nullable\n+    @NonNull\n     public MethodUnhooker<AfterHooker<Method>, Method> hookAfter(@NonNull Method origin, int priority, @NonNull AfterHooker<Method> hooker) {\n         return doHook(origin, priority, hooker);\n     }\n \n     @Override\n-    @Nullable\n+    @NonNull\n     public MethodUnhooker<Hooker<Method>, Method> hook(@NonNull Method origin, int priority, @NonNull Hooker<Method> hooker) {\n         return doHook(origin, priority, hooker);\n     }\n \n     @Override\n-    @Nullable\n+    @NonNull\n     public <T> MethodUnhooker<BeforeHooker<Constructor<T>>, Constructor<T>> hookBefore(@NonNull Constructor<T> origin, @NonNull BeforeHooker<Constructor<T>> hooker) {\n         return doHook(origin, PRIORITY_DEFAULT, hooker);\n     }\n \n     @Override\n-    @Nullable\n+    @NonNull\n     public <T> MethodUnhooker<AfterHooker<Constructor<T>>, Constructor<T>> hookAfter(@NonNull Constructor<T> origin, @NonNull AfterHooker<Constructor<T>> hooker) {\n         return doHook(origin, PRIORITY_DEFAULT, hooker);\n     }\n \n     @Override\n-    @Nullable\n+    @NonNull\n     public <T> MethodUnhooker<Hooker<Constructor<T>>, Constructor<T>> hook(@NonNull Constructor<T> origin, @NonNull Hooker<Constructor<T>> hooker) {\n         return doHook(origin, PRIORITY_DEFAULT, hooker);\n     }\n \n     @Override\n-    @Nullable\n+    @NonNull\n     public <T> MethodUnhooker<BeforeHooker<Constructor<T>>, Constructor<T>> hookBefore(@NonNull Constructor<T> origin, int priority, @NonNull BeforeHooker<Constructor<T>> hooker) {\n         return doHook(origin, priority, hooker);\n     }\n \n     @Override\n-    @Nullable\n+    @NonNull\n     public <T> MethodUnhooker<AfterHooker<Constructor<T>>, Constructor<T>> hookAfter(@NonNull Constructor<T> origin, int priority, @NonNull AfterHooker<Constructor<T>> hooker) {\n         return doHook(origin, priority, hooker);\n     }\n \n     @Override\n-    @Nullable\n+    @NonNull\n     public <T> MethodUnhooker<Hooker<Constructor<T>>, Constructor<T>> hook(@NonNull Constructor<T> origin, int priority, @NonNull Hooker<Constructor<T>> hooker) {\n         return doHook(origin, priority, hooker);\n     }",
      "parent_sha": "73a98d6b9de284836b81b9ccb7aa01a19be6f70f"
    }
  },
  {
    "oid": "2336c510d58d9ee50abd955b836a8824149f9f13",
    "message": "[app] Fix resolve settings intent for other users (#571)",
    "date": "2021-05-14T08:40:18Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/2336c510d58d9ee50abd955b836a8824149f9f13",
    "details": {
      "sha": "e1aeecb2f222dde4e22341695b1ffb404c8f74fb",
      "filename": "app/src/main/java/org/lsposed/manager/adapters/AppHelper.java",
      "status": "modified",
      "additions": 24,
      "deletions": 14,
      "changes": 38,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/2336c510d58d9ee50abd955b836a8824149f9f13/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fadapters%2FAppHelper.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/2336c510d58d9ee50abd955b836a8824149f9f13/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fadapters%2FAppHelper.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fadapters%2FAppHelper.java?ref=2336c510d58d9ee50abd955b836a8824149f9f13",
      "patch": "@@ -31,6 +31,7 @@\n import org.lsposed.manager.ConfigManager;\n import org.lsposed.manager.R;\n \n+import java.lang.reflect.Method;\n import java.util.Collections;\n import java.util.Comparator;\n import java.util.List;\n@@ -41,25 +42,34 @@ public class AppHelper {\n     private static List<PackageInfo> appList;\n \n     public static Intent getSettingsIntent(String packageName, int userId, PackageManager packageManager) {\n-        // taken from\n-        // ApplicationPackageManager.getLaunchIntentForPackage(String)\n-        // first looks for an Xposed-specific category, falls back to\n-        // getLaunchIntentForPackage\n+        Intent intent = getIntentForCategory(packageName, userId, packageManager, SETTINGS_CATEGORY);\n+        if (intent != null) {\n+            return intent;\n+        }\n+        return getIntentForCategory(packageName, userId, packageManager, Intent.CATEGORY_LAUNCHER);\n+    }\n \n-        //TODO:multiuser\n+    public static Intent getIntentForCategory(String packageName, int userId, PackageManager packageManager, String category) {\n         Intent intentToResolve = new Intent(Intent.ACTION_MAIN);\n-        intentToResolve.addCategory(SETTINGS_CATEGORY);\n+        intentToResolve.addCategory(category);\n         intentToResolve.setPackage(packageName);\n-        List<ResolveInfo> ris = packageManager.queryIntentActivities(intentToResolve, 0);\n+        try {\n+            //noinspection JavaReflectionMemberAccess\n+            Method queryIntentActivitiesAsUserMethod = PackageManager.class.getMethod(\"queryIntentActivitiesAsUser\", Intent.class, int.class, int.class);\n+            //noinspection unchecked\n+            List<ResolveInfo> ris = (List<ResolveInfo>) queryIntentActivitiesAsUserMethod.invoke(packageManager, intentToResolve, 0, userId);\n \n-        if (ris.size() <= 0) {\n-            return packageManager.getLaunchIntentForPackage(packageName);\n-        }\n+            if (ris == null || ris.size() <= 0) {\n+                return null;\n+            }\n \n-        Intent intent = new Intent(intentToResolve);\n-        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n-        intent.setClassName(ris.get(0).activityInfo.packageName, ris.get(0).activityInfo.name);\n-        return intent;\n+            Intent intent = new Intent(intentToResolve);\n+            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n+            intent.setClassName(ris.get(0).activityInfo.packageName, ris.get(0).activityInfo.name);\n+            return intent;\n+        } catch (Throwable t) {\n+            return null;\n+        }\n     }\n \n     public static boolean onOptionsItemSelected(MenuItem item, SharedPreferences preferences) {",
      "parent_sha": "dbc0226d6695a7ca95ccf7f2ccebb5c994d39bde"
    }
  },
  {
    "oid": "05656e09398f4125084632bd07ed507e5b123f81",
    "message": "[core] Fix dexbuilder return type of constructor",
    "date": "2021-02-27T01:22:53Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/05656e09398f4125084632bd07ed507e5b123f81",
    "details": {
      "sha": "a5c49753e2bc90aab30b2d806354cb00874659fc",
      "filename": "core/src/main/java/io/github/lsposed/lspd/yahfa/dexmaker/HookerDexMaker.java",
      "status": "modified",
      "additions": 7,
      "deletions": 4,
      "changes": 11,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/05656e09398f4125084632bd07ed507e5b123f81/core%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Flspd%2Fyahfa%2Fdexmaker%2FHookerDexMaker.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/05656e09398f4125084632bd07ed507e5b123f81/core%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Flspd%2Fyahfa%2Fdexmaker%2FHookerDexMaker.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Flspd%2Fyahfa%2Fdexmaker%2FHookerDexMaker.java?ref=05656e09398f4125084632bd07ed507e5b123f81",
      "patch": "@@ -30,6 +30,7 @@\n \n import java.io.File;\n import java.lang.reflect.Constructor;\n+import java.lang.reflect.Executable;\n import java.lang.reflect.Member;\n import java.lang.reflect.Method;\n import java.lang.reflect.Modifier;\n@@ -99,15 +100,16 @@ private static TypeId<?>[] getParameterTypeIds(Class<?>[] parameterTypes, boolea\n         return parameterTypeIds;\n     }\n \n-    private static Class<?>[] getParameterTypes(Class<?>[] parameterTypes, boolean isStatic) {\n+    private static Class<?>[] getParameterTypes(Executable method, boolean isStatic) {\n+        Class<?>[] parameterTypes = method.getParameterTypes();\n         if (isStatic) {\n             return parameterTypes;\n         }\n         int parameterSize = parameterTypes.length;\n         int targetParameterSize = parameterSize + 1;\n         Class<?>[] newParameterTypes = new Class<?>[targetParameterSize];\n         int offset = 1;\n-        newParameterTypes[0] = Object.class;\n+        newParameterTypes[0] = method.getDeclaringClass();\n         System.arraycopy(parameterTypes, 0, newParameterTypes, offset, parameterTypes.length);\n         return newParameterTypes;\n     }\n@@ -127,13 +129,14 @@ public void start(Member member, XposedBridge.AdditionalHookInfo hookInfo,\n                 mReturnTypeId = TypeId.OBJECT;\n             }\n             mParameterTypeIds = getParameterTypeIds(method.getParameterTypes(), isStatic);\n-            mActualParameterTypes = getParameterTypes(method.getParameterTypes(), isStatic);\n+            mActualParameterTypes = getParameterTypes(method, isStatic);\n         } else if (member instanceof Constructor) {\n             Constructor constructor = (Constructor) member;\n             isStatic = false;\n             mReturnTypeId = TypeId.VOID;\n+            mReturnType = void.class;\n             mParameterTypeIds = getParameterTypeIds(constructor.getParameterTypes(), isStatic);\n-            mActualParameterTypes = getParameterTypes(constructor.getParameterTypes(), isStatic);\n+            mActualParameterTypes = getParameterTypes(constructor, isStatic);\n         } else if (member.getDeclaringClass().isInterface()) {\n             throw new IllegalArgumentException(\"Cannot hook interfaces: \" + member.toString());\n         } else if (Modifier.isAbstract(member.getModifiers())) {",
      "parent_sha": "c23e172bac01d8eee86482682949bbb25be35ce1"
    }
  },
  {
    "oid": "9b1907adfcf139a6339e81c507227a08fc7f74cb",
    "message": "Annotation Nullable (#2394)",
    "date": "2023-02-24T03:31:27Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/9b1907adfcf139a6339e81c507227a08fc7f74cb",
    "details": {
      "sha": "a0a3567088ab0f45694df57b9497ce997f767a13",
      "filename": "daemon/src/main/java/org/lsposed/lspd/service/PackageService.java",
      "status": "modified",
      "additions": 20,
      "deletions": 9,
      "changes": 29,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/9b1907adfcf139a6339e81c507227a08fc7f74cb/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FPackageService.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/9b1907adfcf139a6339e81c507227a08fc7f74cb/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FPackageService.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FPackageService.java?ref=9b1907adfcf139a6339e81c507227a08fc7f74cb",
      "patch": "@@ -47,6 +47,7 @@\n import android.util.Pair;\n \n import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n \n import org.lsposed.lspd.models.Application;\n \n@@ -105,6 +106,7 @@ private static IPackageManager getPackageManager() {\n         return pm;\n     }\n \n+    @Nullable\n     public static PackageInfo getPackageInfo(String packageName, int flags, int userId) throws RemoteException {\n         IPackageManager pm = getPackageManager();\n         if (pm == null) return null;\n@@ -126,6 +128,7 @@ Map<Integer, PackageInfo> getPackageInfoFromAllUsers(String packageName, int fla\n         return res;\n     }\n \n+    @Nullable\n     public static ApplicationInfo getApplicationInfo(String packageName, int flags, int userId) throws RemoteException {\n         IPackageManager pm = getPackageManager();\n         if (pm == null) return null;\n@@ -206,6 +209,7 @@ public static boolean isPackageAvailable(String packageName, int userId, boolean\n     }\n \n     @SuppressWarnings({\"ConstantConditions\", \"SameParameterValue\"})\n+    @Nullable\n     private static PackageInfo getPackageInfoWithComponents(String packageName, int flags, int userId) throws RemoteException {\n         IPackageManager pm = getPackageManager();\n         if (pm == null) return null;\n@@ -291,18 +295,25 @@ public static int installExistingPackageAsUser(String packageName, int userId) t\n         }\n     }\n \n-    public static ParcelableListSlice<ResolveInfo> queryIntentActivities(Intent intent, String resolvedType, int flags, int userId) throws RemoteException {\n-        IPackageManager pm = getPackageManager();\n-        if (pm == null) return null;\n-        ParceledListSlice<ResolveInfo> infos;\n-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.TIRAMISU) {\n-            infos = pm.queryIntentActivities(intent, resolvedType, (long) flags, userId);\n-        } else {\n-            infos = pm.queryIntentActivities(intent, resolvedType, flags, userId);\n+    @Nullable\n+    public static ParcelableListSlice<ResolveInfo> queryIntentActivities(Intent intent, String resolvedType, int flags, int userId) {\n+        try {\n+            IPackageManager pm = getPackageManager();\n+            if (pm == null) return null;\n+            ParceledListSlice<ResolveInfo> infos;\n+            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.TIRAMISU) {\n+                infos = pm.queryIntentActivities(intent, resolvedType, (long) flags, userId);\n+            } else {\n+                infos = pm.queryIntentActivities(intent, resolvedType, flags, userId);\n+            }\n+            return new ParcelableListSlice<>(infos.getList());\n+        } catch (Exception e) {\n+            Log.e(TAG, \"queryIntentActivities\", e);\n+            return new ParcelableListSlice<>(new ArrayList<>());\n         }\n-        return new ParcelableListSlice<>(infos.getList());\n     }\n \n+    @Nullable\n     public static Intent getLaunchIntentForPackage(String packageName) throws RemoteException {\n         Intent intentToResolve = new Intent(Intent.ACTION_MAIN);\n         intentToResolve.addCategory(Intent.CATEGORY_INFO);",
      "parent_sha": "3d11c2f0f7754201c6b5ec4213b77ab26b711d26"
    }
  },
  {
    "oid": "e5e7c3617f4560c4abfb15ee7426034f1fbc0118",
    "message": "[core] Return actual uninstall status to manager",
    "date": "2021-03-07T07:38:57Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/e5e7c3617f4560c4abfb15ee7426034f1fbc0118",
    "details": {
      "sha": "71c517accf81f58e90f9eaf52e302706bf9189a9",
      "filename": "core/src/main/java/io/github/lsposed/lspd/service/LSPManagerService.java",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/e5e7c3617f4560c4abfb15ee7426034f1fbc0118/core%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Flspd%2Fservice%2FLSPManagerService.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/e5e7c3617f4560c4abfb15ee7426034f1fbc0118/core%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Flspd%2Fservice%2FLSPManagerService.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Flspd%2Fservice%2FLSPManagerService.java?ref=e5e7c3617f4560c4abfb15ee7426034f1fbc0118",
      "patch": "@@ -165,8 +165,7 @@ public void reboot(boolean confirm, String reason, boolean wait) throws RemoteEx\n     @Override\n     public boolean uninstallPackage(String packageName) throws RemoteException {\n         try {\n-            PackageService.uninstallPackage(new VersionedPackage(packageName, PackageManager.VERSION_CODE_HIGHEST));\n-            return true;\n+            return PackageService.uninstallPackage(new VersionedPackage(packageName, PackageManager.VERSION_CODE_HIGHEST));\n         } catch (InterruptedException | InvocationTargetException | NoSuchMethodException | InstantiationException | IllegalAccessException e) {\n             Log.e(TAG, e.getMessage(), e);\n             return false;",
      "parent_sha": "60be0e2071c195f72ff36f3e16cddf54b236f54a"
    }
  },
  {
    "oid": "663c7ec762a5aa6bb9219e748f61d1a0381963c6",
    "message": "Check null (#1356)",
    "date": "2021-11-03T06:56:24Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/663c7ec762a5aa6bb9219e748f61d1a0381963c6",
    "details": {
      "sha": "ab7e98e223e27cbf84acc1c3a75958a8798163ef",
      "filename": "core/src/main/java/org/lsposed/lspd/util/ParasiticManagerHooker.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/663c7ec762a5aa6bb9219e748f61d1a0381963c6/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Futil%2FParasiticManagerHooker.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/663c7ec762a5aa6bb9219e748f61d1a0381963c6/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Futil%2FParasiticManagerHooker.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Futil%2FParasiticManagerHooker.java?ref=663c7ec762a5aa6bb9219e748f61d1a0381963c6",
      "patch": "@@ -45,7 +45,7 @@ public class ParasiticManagerHooker {\n     private static int managerFd = -1;\n \n     private synchronized static PackageInfo getManagerPkgInfo(ApplicationInfo appInfo) {\n-        if (managerPkgInfo == null) {\n+        if (managerPkgInfo == null && appInfo != null) {\n             try {\n                 Context ctx = ActivityThread.currentActivityThread().getSystemContext();\n                 var sourceDir = \"/proc/self/fd/\" + managerFd;",
      "parent_sha": "5589ecd29fc7d38507c715feedf445179cf0f937"
    }
  },
  {
    "oid": "3bcb2867b7b195a1a5cfb8ee417f9fa8c1aa60f4",
    "message": "Use am from service manager (#1656)",
    "date": "2022-02-09T16:30:34Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/3bcb2867b7b195a1a5cfb8ee417f9fa8c1aa60f4",
    "details": {
      "sha": "547aea57869f9c18204d5fe98b1cdb4623ca2372",
      "filename": "core/src/main/java/org/lsposed/lspd/service/ActivityController.java",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/3bcb2867b7b195a1a5cfb8ee417f9fa8c1aa60f4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FActivityController.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/3bcb2867b7b195a1a5cfb8ee417f9fa8c1aa60f4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FActivityController.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FActivityController.java?ref=3bcb2867b7b195a1a5cfb8ee417f9fa8c1aa60f4",
      "patch": "@@ -13,6 +13,7 @@\n import android.os.IBinder;\n import android.os.Parcel;\n import android.os.ResultReceiver;\n+import android.os.ServiceManager;\n import android.os.ShellCallback;\n import android.os.ShellCommand;\n import android.util.Log;\n@@ -101,7 +102,7 @@ public int onCommand(String cmd) {\n                                 }\n                             }\n \n-                            return replaceMyControllerActivity(am, pw, getRawInputStream(), gdbPort, monkey);\n+                            return replaceMyControllerActivity(pw, getRawInputStream(), gdbPort, monkey);\n                         }\n \n                         @Override\n@@ -140,7 +141,7 @@ static boolean replaceActivityController(Parcel data) {\n         return false;\n     }\n \n-    static private int replaceMyControllerActivity(IBinder am, PrintWriter pw, InputStream stream, String gdbPort, boolean monkey) {\n+    static private int replaceMyControllerActivity(PrintWriter pw, InputStream stream, String gdbPort, boolean monkey) {\n         try {\n             InvocationHandler handler = (proxy, method, args1) -> {\n                 if (method.getName().equals(\"setActivityController\")) {\n@@ -150,7 +151,7 @@ static private int replaceMyControllerActivity(IBinder am, PrintWriter pw, Input\n                         Log.e(TAG, \"replace activity controller\", e);\n                     }\n                 }\n-                return method.invoke(am, args1);\n+                return method.invoke(ServiceManager.getService(\"activity\"), args1);\n             };\n             var amProxy = Proxy.newProxyInstance(BridgeService.class.getClassLoader(),\n                     new Class[]{myActivityControllerConstructor.getParameterTypes()[0]}, handler);",
      "parent_sha": "4e33363729162f81db9b6a61f6d68ca1a42d6a88"
    }
  },
  {
    "oid": "a72f59d07ae0e4d8e7003c0fdce99c8f0223076b",
    "message": "Fix create modules dir (#1686)",
    "date": "2022-02-14T09:57:08Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/a72f59d07ae0e4d8e7003c0fdce99c8f0223076b",
    "details": {
      "sha": "c6a509737ac7c943c21a525fcf3440e4c5e64901",
      "filename": "daemon/src/main/java/org/lsposed/lspd/service/ConfigFileManager.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/a72f59d07ae0e4d8e7003c0fdce99c8f0223076b/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigFileManager.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/a72f59d07ae0e4d8e7003c0fdce99c8f0223076b/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigFileManager.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigFileManager.java?ref=a72f59d07ae0e4d8e7003c0fdce99c8f0223076b",
      "patch": "@@ -273,7 +273,7 @@ private static void zipAddFile(ZipOutputStream os, Path path, Path base) {\n         var name = base.relativize(path).toString();\n         if (Files.isDirectory(path)) {\n             try {\n-                os.putNextEntry(new ZipEntry(name));\n+                os.putNextEntry(new ZipEntry(name + \"/\"));\n                 os.closeEntry();\n             } catch (IOException e) {\n                 Log.w(TAG, name, e);",
      "parent_sha": "36d1f8dba7b2f5794a01338c9d8e614a5ce03b8d"
    }
  },
  {
    "oid": "e17c39318d5d9fee715dbdb9abac8aeb2e8368e1",
    "message": "Call `systemMain` after prepare (#1692)",
    "date": "2022-02-14T12:27:41Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/e17c39318d5d9fee715dbdb9abac8aeb2e8368e1",
    "details": {
      "sha": "4dcf3965d53466e0e6c567602a100b80eea291f0",
      "filename": "daemon/src/main/java/org/lsposed/lspd/service/ServiceManager.java",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/e17c39318d5d9fee715dbdb9abac8aeb2e8368e1/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FServiceManager.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/e17c39318d5d9fee715dbdb9abac8aeb2e8368e1/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FServiceManager.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FServiceManager.java?ref=e17c39318d5d9fee715dbdb9abac8aeb2e8368e1",
      "patch": "@@ -95,13 +95,13 @@ public static void start(String[] args) {\n             System.exit(1);\n         });\n \n-        ActivityThread.systemMain();\n-\n         logcatService = new LogcatService();\n         logcatService.start();\n \n         Process.setThreadPriority(Process.THREAD_PRIORITY_FOREGROUND);\n         Looper.prepareMainLooper();\n+\n+\n         mainService = new LSPosedService();\n         applicationService = new LSPApplicationService();\n         managerService = new LSPManagerService();\n@@ -116,6 +116,8 @@ public static void start(String[] args) {\n         var configManager = ConfigManager.getInstance();\n         // --- DO NOT call ConfigManager.getInstance later!!! ---\n \n+        ActivityThread.systemMain();\n+\n         waitSystemService(\"package\");\n         waitSystemService(\"activity\");\n         waitSystemService(Context.USER_SERVICE);",
      "parent_sha": "f8198488aadfe2eb1406ae30d9d4a9add4be7ff6"
    }
  },
  {
    "oid": "399bf3075eb9dfd6d9185f8f464d17272996b6e8",
    "message": "[core] Fix get provider for old manager (#1224)\n\n* [core] Fix get provider for old manager\r\n\r\n* Update ParasiticManagerHooker.java",
    "date": "2021-10-04T09:36:51Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/399bf3075eb9dfd6d9185f8f464d17272996b6e8",
    "details": {
      "sha": "cf45b4416f21d6c9646c81557d0a8e601e50b4bc",
      "filename": "core/src/main/java/org/lsposed/lspd/util/ParasiticManagerHooker.java",
      "status": "modified",
      "additions": 5,
      "deletions": 7,
      "changes": 12,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/399bf3075eb9dfd6d9185f8f464d17272996b6e8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Futil%2FParasiticManagerHooker.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/399bf3075eb9dfd6d9185f8f464d17272996b6e8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Futil%2FParasiticManagerHooker.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Futil%2FParasiticManagerHooker.java?ref=399bf3075eb9dfd6d9185f8f464d17272996b6e8",
      "patch": "@@ -129,8 +129,6 @@ protected void beforeHookedMethod(MethodHookParam param) {\n             XposedBridge.hookAllMethods(XposedHelpers.findClass(\"android.app.ActivityThread$ApplicationThread\", ActivityThread.class.getClassLoader()), \"scheduleLaunchActivity\", activityHooker);\n         }\n \n-        if (Process.myUid() != BuildConfig.MANAGER_INJECTED_UID) return;\n-\n         XposedBridge.hookAllMethods(ActivityThread.class, \"handleReceiver\", new XC_MethodReplacement() {\n             @Override\n             protected Object replaceHookedMethod(MethodHookParam param) {\n@@ -147,7 +145,7 @@ protected Object replaceHookedMethod(MethodHookParam param) {\n             private Context originalContext = null;\n \n             @Override\n-            protected void beforeHookedMethod(MethodHookParam param) throws Throwable {\n+            protected void beforeHookedMethod(MethodHookParam param) {\n                 Hookers.logD(\"before install provider\");\n                 Context ctx = null;\n                 ProviderInfo info = null;\n@@ -160,13 +158,13 @@ protected void beforeHookedMethod(MethodHookParam param) throws Throwable {\n                     } else if (arg instanceof ProviderInfo) info = (ProviderInfo) arg;\n                 }\n                 if (ctx != null && info != null) {\n-                    if (!info.applicationInfo.packageName.equals(BuildConfig.MANAGER_INJECTED_PKG_NAME)) return;\n                     if (originalContext == null) {\n-                        info.applicationInfo.packageName = BuildConfig.MANAGER_INJECTED_PKG_NAME + \".origin\";\n+                        var isDefaultManager = info.applicationInfo.packageName.equals(BuildConfig.DEFAULT_MANAGER_PACKAGE_NAME);\n+                        info.applicationInfo.packageName = isDefaultManager ? BuildConfig.DEFAULT_MANAGER_PACKAGE_NAME + \".origin\" : BuildConfig.MANAGER_INJECTED_PKG_NAME + \".origin\";\n                         var originalPkgInfo = ActivityThread.currentActivityThread().getPackageInfoNoCheck(info.applicationInfo, HiddenApiBridge.Resources_getCompatibilityInfo(ctx.getResources()));\n-                        XposedHelpers.setObjectField(originalPkgInfo, \"mPackageName\", BuildConfig.MANAGER_INJECTED_PKG_NAME);\n+                        XposedHelpers.setObjectField(originalPkgInfo, \"mPackageName\", isDefaultManager ? BuildConfig.DEFAULT_MANAGER_PACKAGE_NAME : BuildConfig.MANAGER_INJECTED_PKG_NAME);\n                         originalContext = (Context) XposedHelpers.callStaticMethod(XposedHelpers.findClass(\"android.app.ContextImpl\", null), \"createAppContext\", ActivityThread.currentActivityThread(), originalPkgInfo);\n-                        info.applicationInfo.packageName = BuildConfig.MANAGER_INJECTED_PKG_NAME;\n+                        info.applicationInfo.packageName = isDefaultManager ? BuildConfig.DEFAULT_MANAGER_PACKAGE_NAME : BuildConfig.MANAGER_INJECTED_PKG_NAME;\n                     }\n                     param.args[ctxIdx] = originalContext;\n                 } else {",
      "parent_sha": "f0c4eeeea7aebe763233289b3382e176bd22da7e"
    }
  },
  {
    "oid": "2388517b96b189475c631fb500506418d09f75cf",
    "message": "[core] Fix resource hook in Android 12 (#1270)",
    "date": "2021-10-14T11:45:32Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/2388517b96b189475c631fb500506418d09f75cf",
    "details": {
      "sha": "7f4bbe4f6e445e4ef77647f4fe977be37523efb5",
      "filename": "core/src/main/java/de/robv/android/xposed/XposedInit.java",
      "status": "modified",
      "additions": 39,
      "deletions": 14,
      "changes": 53,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/2388517b96b189475c631fb500506418d09f75cf/core%2Fsrc%2Fmain%2Fjava%2Fde%2Frobv%2Fandroid%2Fxposed%2FXposedInit.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/2388517b96b189475c631fb500506418d09f75cf/core%2Fsrc%2Fmain%2Fjava%2Fde%2Frobv%2Fandroid%2Fxposed%2FXposedInit.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Fde%2Frobv%2Fandroid%2Fxposed%2FXposedInit.java?ref=2388517b96b189475c631fb500506418d09f75cf",
      "patch": "@@ -53,6 +53,7 @@\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Set;\n+import java.util.concurrent.Callable;\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.atomic.AtomicBoolean;\n \n@@ -101,46 +102,70 @@ protected void beforeHookedMethod(MethodHookParam param) {\n         final Class<?> classGTLR;\n         final Class<?> classResKey;\n         final ThreadLocal<Object> latestResKey = new ThreadLocal<>();\n-        final String createResourceMethod;\n+        final ArrayList<String> createResourceMethods = new ArrayList<>();\n \n         classGTLR = android.app.ResourcesManager.class;\n         classResKey = android.content.res.ResourcesKey.class;\n-\n-        if (Build.VERSION.SDK_INT < 30) {\n-            createResourceMethod = \"getOrCreateResources\";\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.S) {\n+            createResourceMethods.add(\"createResources\");\n+            createResourceMethods.add(\"createResourcesForActivity\");\n+        } else if (Build.VERSION.SDK_INT == Build.VERSION_CODES.R) {\n+            createResourceMethods.add(\"createResources\");\n         } else {\n-            createResourceMethod = \"createResources\";\n+            createResourceMethods.add(\"getOrCreateResources\");\n         }\n \n-        hookAllMethods(classGTLR, createResourceMethod, new XC_MethodHook() {\n+        //noinspection TrivialFunctionalExpressionUsage\n+        final Class<?> classActivityRes = ((Callable<Class<?>>) () -> {\n+            try {\n+                return XposedHelpers.findClass(\"android.app.ResourcesManager$ActivityResource\", classGTLR.getClassLoader());\n+            } catch (Throwable ignored) {\n+                return null;\n+            }\n+        }).call();\n+\n+\n+        var hooker = new XC_MethodHook() {\n             @Override\n             protected void afterHookedMethod(MethodHookParam param) {\n                 // At least on OnePlus 5, the method has an additional parameter compared to AOSP.\n-                final int activityTokenIdx = getParameterIndexByType(param.method, IBinder.class);\n+                Object activityToken = null;\n+                try {\n+                    final int activityTokenIdx = getParameterIndexByType(param.method, IBinder.class);\n+                    activityToken = param.args[activityTokenIdx];\n+                } catch (NoSuchFieldError ignored) {\n+                }\n                 final int resKeyIdx = getParameterIndexByType(param.method, classResKey);\n-\n                 String resDir = (String) getObjectField(param.args[resKeyIdx], \"mResDir\");\n                 XResources newRes = cloneToXResources(param, resDir);\n                 if (newRes == null) {\n                     return;\n                 }\n \n-                Object activityToken = param.args[activityTokenIdx];\n                 //noinspection SynchronizeOnNonFinalField\n                 synchronized (param.thisObject) {\n-                    ArrayList<WeakReference<Resources>> resourceReferences;\n+                    ArrayList<Object> resourceReferences;\n                     if (activityToken != null) {\n                         Object activityResources = callMethod(param.thisObject, \"getOrCreateActivityResourcesStructLocked\", activityToken);\n                         //noinspection unchecked\n-                        resourceReferences = (ArrayList<WeakReference<Resources>>) getObjectField(activityResources, \"activityResources\");\n+                        resourceReferences = (ArrayList<Object>) getObjectField(activityResources, \"activityResources\");\n                     } else {\n                         //noinspection unchecked\n-                        resourceReferences = (ArrayList<WeakReference<Resources>>) getObjectField(param.thisObject, \"mResourceReferences\");\n+                        resourceReferences = (ArrayList<Object>) getObjectField(param.thisObject, \"mResourceReferences\");\n+                    }\n+                    if (classActivityRes == null) {\n+                        resourceReferences.add(new WeakReference<>(newRes));\n+                    } else {\n+                        var activityRes = XposedHelpers.newInstance(classActivityRes);\n+                        XposedHelpers.setObjectField(activityRes, \"resources\", new WeakReference<>(newRes));\n                     }\n-                    resourceReferences.add(new WeakReference<>(newRes));\n                 }\n             }\n-        });\n+        };\n+\n+        for (var createResourceMethod : createResourceMethods) {\n+            hookAllMethods(classGTLR, createResourceMethod, hooker);\n+        }\n \n         findAndHookMethod(TypedArray.class, \"obtain\", Resources.class, int.class,\n                 new XC_MethodHook() {",
      "parent_sha": "4dc0705e75e903d0606bea9ae72340671fa6f808"
    }
  },
  {
    "oid": "0a452b7f3d9a2be836a15d9624068bd4cbc651a1",
    "message": "[app] Fix app filter (#653)",
    "date": "2021-05-22T12:17:23Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/0a452b7f3d9a2be836a15d9624068bd4cbc651a1",
    "details": {
      "sha": "d0065cf9c98619db5dfc41aee596aa1a90266459",
      "filename": "app/src/main/java/org/lsposed/manager/adapters/ScopeAdapter.java",
      "status": "modified",
      "additions": 8,
      "deletions": 13,
      "changes": 21,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/0a452b7f3d9a2be836a15d9624068bd4cbc651a1/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fadapters%2FScopeAdapter.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/0a452b7f3d9a2be836a15d9624068bd4cbc651a1/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fadapters%2FScopeAdapter.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fadapters%2FScopeAdapter.java?ref=0a452b7f3d9a2be836a15d9624068bd4cbc651a1",
      "patch": "@@ -152,15 +152,6 @@ public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n     }\n \n     private boolean shouldHideApp(PackageInfo info, ApplicationWithEquals app) {\n-        if (app.userId != module.userId) {\n-            return true;\n-        }\n-        if (info.packageName.equals(this.module.packageName)) {\n-            return true;\n-        }\n-        if (info.packageName.equals(BuildConfig.APPLICATION_ID)) {\n-            return true;\n-        }\n         if (info.packageName.equals(\"android\")) {\n             return false;\n         }\n@@ -508,16 +499,20 @@ public boolean handleMessage(@NonNull Message msg) {\n             List<String> scopeList = module.getScopeList();\n             boolean emptyCheckedList = checkedList.isEmpty();\n             for (PackageInfo info : appList) {\n-                int uid = info.applicationInfo.uid;\n-                if (info.packageName.equals(\"android\") && uid / 100000 != 0) {\n+                int userId = info.applicationInfo.uid / 100000;\n+                String packageName = info.packageName;\n+                if (userId != module.userId ||\n+                        packageName.equals(\"android\") && userId != 0 ||\n+                        packageName.equals(module.packageName) ||\n+                        packageName.equals(BuildConfig.APPLICATION_ID)) {\n                     continue;\n                 }\n \n-                ApplicationWithEquals application = new ApplicationWithEquals(info.packageName, uid / 100000);\n+                ApplicationWithEquals application = new ApplicationWithEquals(packageName, userId);\n \n                 installedList.add(application);\n \n-                if (scopeList != null && scopeList.contains(info.packageName)) {\n+                if (scopeList != null && scopeList.contains(packageName)) {\n                     recommendedList.add(application);\n                     if (emptyCheckedList) {\n                         checkedList.add(application);",
      "parent_sha": "37dd63be81bed3f57d4daa1fb73d42ac74c2001f"
    }
  },
  {
    "oid": "13a8dd768599f7656cdf6d4d114b93f19b48c493",
    "message": "Save logs by folder",
    "date": "2021-08-28T15:41:18Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/13a8dd768599f7656cdf6d4d114b93f19b48c493",
    "details": {
      "sha": "fa8cedd6dc5c172d70b0c40873cfaa0402590801",
      "filename": "core/src/main/java/org/lsposed/lspd/service/ConfigFileManager.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/13a8dd768599f7656cdf6d4d114b93f19b48c493/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigFileManager.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/13a8dd768599f7656cdf6d4d114b93f19b48c493/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigFileManager.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigFileManager.java?ref=13a8dd768599f7656cdf6d4d114b93f19b48c493",
      "patch": "@@ -112,7 +112,7 @@ static Map<String, ParcelFileDescriptor> getLogs() {\n     private static void putFds(Map<String, ParcelFileDescriptor> map, Path path) throws IOException {\n         Files.walkFileTree(path, new SimpleFileVisitor<>() {\n             public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException {\n-                var name = path.relativize(file).toString();\n+                var name = path.getParent().relativize(file).toString();\n                 var fd = ParcelFileDescriptor.open(file.toFile(), ParcelFileDescriptor.MODE_READ_ONLY);\n                 map.put(name, fd);\n                 return FileVisitResult.CONTINUE;",
      "parent_sha": "18c3bb426f1251be973f7a0ff27c7a7121a5378f"
    }
  },
  {
    "oid": "4849337ecdfa242232eddd115d3f7b827c94c409",
    "message": "Hide some context menu for manager itself",
    "date": "2020-11-21T13:58:37Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/4849337ecdfa242232eddd115d3f7b827c94c409",
    "details": {
      "sha": "c123e622b4dae646b62339ac810df6752c2e9c30",
      "filename": "app/src/main/java/org/meowcat/edxposed/manager/ModulesActivity.java",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/4849337ecdfa242232eddd115d3f7b827c94c409/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fmeowcat%2Fedxposed%2Fmanager%2FModulesActivity.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/4849337ecdfa242232eddd115d3f7b827c94c409/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fmeowcat%2Fedxposed%2Fmanager%2FModulesActivity.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fmeowcat%2Fedxposed%2Fmanager%2FModulesActivity.java?ref=4849337ecdfa242232eddd115d3f7b827c94c409",
      "patch": "@@ -496,7 +496,7 @@ public void onBindViewHolder(@NonNull ViewHolder holder, int position) {\n             ModuleUtil.InstalledModule item = items.get(position);\n             holder.itemView.setOnClickListener(v -> {\n                 String packageName = item.packageName;\n-                if (packageName == null) {\n+                if (packageName == null || packageName.equals(BuildConfig.APPLICATION_ID)) {\n                     return;\n                 }\n                 Intent launchIntent = getSettingsIntent(packageName);\n@@ -527,6 +527,11 @@ public void onBindViewHolder(@NonNull ViewHolder holder, int position) {\n                     menu.removeItem(R.id.menu_download_updates);\n                     menu.removeItem(R.id.menu_support);\n                 }\n+                if (installedModule.packageName.equals(BuildConfig.APPLICATION_ID)) {\n+                    menu.removeItem(R.id.menu_launch);\n+                    menu.removeItem(R.id.menu_scope);\n+                    menu.removeItem(R.id.menu_uninstall);\n+                }\n             });\n             holder.appName.setText(item.getAppName());\n ",
      "parent_sha": "ae7293c03bac2f9e115ed5ce9aaae5a442d7a2d7"
    }
  },
  {
    "oid": "d25eb8e6f18ab4b211212d9904c9e47603ac0334",
    "message": "Fix badge (#1554)",
    "date": "2022-01-24T12:42:19Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/d25eb8e6f18ab4b211212d9904c9e47603ac0334",
    "details": {
      "sha": "28e4e8c3923412dcef2ad89d27499e999a347a6f",
      "filename": "app/src/main/java/org/lsposed/manager/ui/activity/MainActivity.java",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/d25eb8e6f18ab4b211212d9904c9e47603ac0334/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Factivity%2FMainActivity.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/d25eb8e6f18ab4b211212d9904c9e47603ac0334/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Factivity%2FMainActivity.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Factivity%2FMainActivity.java?ref=d25eb8e6f18ab4b211212d9904c9e47603ac0334",
      "patch": "@@ -215,7 +215,7 @@ public void onRepoLoaded() {\n         runOnUiThread(() -> {\n             if (count[0] > 0 && binding != null) {\n                 var nav = (NavigationBarView) binding.nav;\n-                var badge = nav.getOrCreateBadge(R.id.repo_fragment);\n+                var badge = nav.getOrCreateBadge(R.id.repo_nav);\n                 badge.setVisible(true);\n                 badge.setNumber(count[0]);\n             } else {\n@@ -229,7 +229,7 @@ public void onThrowable(Throwable t) {\n         runOnUiThread(() -> {\n             if (binding != null) {\n                 var nav = (NavigationBarView) binding.nav;\n-                var badge = nav.getOrCreateBadge(R.id.repo_fragment);\n+                var badge = nav.getOrCreateBadge(R.id.repo_nav);\n                 badge.setVisible(false);\n             }\n         });\n@@ -256,9 +256,9 @@ public void onResume() {\n \n             if (!ConfigManager.isBinderAlive()) {\n                 nav.getMenu().removeItem(R.id.logs_fragment);\n-                nav.getMenu().removeItem(R.id.modules_fragment);\n+                nav.getMenu().removeItem(R.id.modules_nav);\n                 if (!ConfigManager.isMagiskInstalled()) {\n-                    nav.getMenu().removeItem(R.id.repo_fragment);\n+                    nav.getMenu().removeItem(R.id.repo_nav);\n                 }\n             }\n         }\n@@ -268,7 +268,7 @@ private void setModulesSummary(int moduleCount) {\n         runOnUiThread(() -> {\n             if (binding != null) {\n                 var nav = (NavigationBarView) binding.nav;\n-                var badge = nav.getOrCreateBadge(R.id.modules_fragment);\n+                var badge = nav.getOrCreateBadge(R.id.modules_nav);\n                 badge.setBackgroundColor(ResourceUtils.resolveColor(getTheme(), com.google.android.material.R.attr.colorPrimary));\n                 badge.setBadgeTextColor(ResourceUtils.resolveColor(getTheme(), com.google.android.material.R.attr.colorOnPrimary));\n                 if (moduleCount > 0) {",
      "parent_sha": "2ffa0072f775e88521d569e6743cbf25e614d35b"
    }
  },
  {
    "oid": "cedada2531584cad9e607fad62e4f25f2e98ed2b",
    "message": "Only set taskDescription when manager is parasitic (#2698)",
    "date": "2023-08-19T18:58:32Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/cedada2531584cad9e607fad62e4f25f2e98ed2b",
    "details": {
      "sha": "8e0e2530aeb867f86274fac02319e2e59438e971",
      "filename": "app/src/main/java/org/lsposed/manager/ui/activity/base/BaseActivity.java",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/cedada2531584cad9e607fad62e4f25f2e98ed2b/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Factivity%2Fbase%2FBaseActivity.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/cedada2531584cad9e607fad62e4f25f2e98ed2b/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Factivity%2Fbase%2FBaseActivity.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Factivity%2Fbase%2FBaseActivity.java?ref=cedada2531584cad9e607fad62e4f25f2e98ed2b",
      "patch": "@@ -25,21 +25,22 @@\n import android.graphics.Bitmap;\n import android.graphics.Canvas;\n import android.graphics.Color;\n+import android.graphics.drawable.AdaptiveIconDrawable;\n import android.graphics.drawable.BitmapDrawable;\n import android.os.Bundle;\n import android.view.Window;\n \n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n \n+import org.lsposed.manager.App;\n import org.lsposed.manager.R;\n import org.lsposed.manager.util.Telemetry;\n import org.lsposed.manager.util.ThemeUtil;\n \n import rikka.material.app.MaterialActivity;\n \n public class BaseActivity extends MaterialActivity {\n-\n     private static Bitmap icon = null;\n \n     @Override\n@@ -51,21 +52,22 @@ public void onCreate(@Nullable Bundle savedInstanceState) {\n     @Override\n     protected void onStart() {\n         super.onStart();\n+        if (!App.isParasitic) return;\n         for (var task : getSystemService(ActivityManager.class).getAppTasks()) {\n             task.setExcludeFromRecents(false);\n         }\n         if (icon == null) {\n             var drawable = getApplicationInfo().loadIcon(getPackageManager());\n             if (drawable instanceof BitmapDrawable) {\n                 icon = ((BitmapDrawable) drawable).getBitmap();\n-            } else {\n+            } else if (drawable instanceof AdaptiveIconDrawable) {\n                 icon = Bitmap.createBitmap(drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight(), Bitmap.Config.ARGB_8888);\n                 final Canvas canvas = new Canvas(icon);\n                 drawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight());\n                 drawable.draw(canvas);\n             }\n         }\n-        setTaskDescription(new ActivityManager.TaskDescription(getTitle().toString(), icon));\n+        setTaskDescription(new ActivityManager.TaskDescription(getTitle().toString(), icon, getColor(R.color.ic_launcher_background)));\n     }\n \n     @Override",
      "parent_sha": "c07e6af1bcbac2c17ee7a939233ba70850d3e3f9"
    }
  },
  {
    "oid": "ee5742644349e51ec233a12aa09dcc5d7ffa18e8",
    "message": "[core] Remove incorrect flags (#625)",
    "date": "2021-05-18T20:34:09Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/ee5742644349e51ec233a12aa09dcc5d7ffa18e8",
    "details": {
      "sha": "afac5e039b0f1e6708ddcf5de8b7e4fbb57ae620",
      "filename": "core/src/main/java/org/lsposed/lspd/service/ConfigManager.java",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/ee5742644349e51ec233a12aa09dcc5d7ffa18e8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigManager.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/ee5742644349e51ec233a12aa09dcc5d7ffa18e8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigManager.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigManager.java?ref=ee5742644349e51ec233a12aa09dcc5d7ffa18e8",
      "patch": "@@ -23,7 +23,6 @@\n \n import android.content.ContentValues;\n import android.content.pm.PackageInfo;\n-import android.content.pm.PackageManager;\n import android.database.Cursor;\n import android.database.sqlite.SQLiteDatabase;\n import android.database.sqlite.SQLiteStatement;\n@@ -352,7 +351,7 @@ private synchronized void cacheModules() {\n                 int userId = cursor.getInt(userIdIdx);\n                 var pkgInfo = modules.computeIfAbsent(packageName, m -> {\n                     try {\n-                        return PackageService.getPackageInfoFromAllUsers(m, PackageManager.MATCH_DISABLED_COMPONENTS | PackageManager.MATCH_UNINSTALLED_PACKAGES);\n+                        return PackageService.getPackageInfoFromAllUsers(m, 0);\n                     } catch (Throwable e) {\n                         Log.e(TAG, Log.getStackTraceString(e));\n                         return Collections.emptyMap();",
      "parent_sha": "61bee4743a01e87d5d5e5ca6815496017e3d1e40"
    }
  },
  {
    "oid": "61bca2255484ae07705502618411342568018e77",
    "message": "[app] Add Constants.getXposedApiVersion (#162)",
    "date": "2021-02-22T13:53:27Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/61bca2255484ae07705502618411342568018e77",
    "details": {
      "sha": "fc94ac2a900ad92f4a02e5444cef9eefb3434396",
      "filename": "app/src/main/java/io/github/lsposed/manager/Constants.java",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/61bca2255484ae07705502618411342568018e77/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2FConstants.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/61bca2255484ae07705502618411342568018e77/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2FConstants.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2FConstants.java?ref=61bca2255484ae07705502618411342568018e77",
      "patch": "@@ -22,8 +22,9 @@\n \n import android.widget.Toast;\n \n+@SuppressWarnings({\"FieldCanBeLocal\", \"FieldMayBeFinal\"})\n public class Constants {\n-    @SuppressWarnings(\"FieldMayBeFinal\")\n+    private static int xposedApiVersion = -1;\n     private static String xposedVersion = null;\n \n     public static void showErrorToast(int type) {\n@@ -34,4 +35,8 @@ public static void showErrorToast(int type) {\n     public static String getXposedVersion() {\n         return xposedVersion;\n     }\n+\n+    public static int getXposedApiVersion() {\n+        return xposedApiVersion;\n+    }\n }",
      "parent_sha": "3772fea76d820f1c8a604a8aafc99bd4fd25fa46"
    }
  },
  {
    "oid": "ee2601d240acc6efcc70122b172aff6be4e28c18",
    "message": "Fix crash on first installation\n\n# Conflicts:\n#\tapp/src/main/java/org/meowcat/edxposed/manager/XposedApp.java",
    "date": "2020-04-03T04:04:30Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/ee2601d240acc6efcc70122b172aff6be4e28c18",
    "details": {
      "sha": "a0bcceda8fc138bc251b28b30bd57fc8b3cea33f",
      "filename": "app/src/main/java/org/meowcat/edxposed/manager/XposedApp.java",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/ee2601d240acc6efcc70122b172aff6be4e28c18/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fmeowcat%2Fedxposed%2Fmanager%2FXposedApp.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/ee2601d240acc6efcc70122b172aff6be4e28c18/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fmeowcat%2Fedxposed%2Fmanager%2FXposedApp.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fmeowcat%2Fedxposed%2Fmanager%2FXposedApp.java?ref=ee2601d240acc6efcc70122b172aff6be4e28c18",
      "patch": "@@ -124,16 +124,6 @@ public void onCreate() {\n \n         pref = PreferenceManager.getDefaultSharedPreferences(this);\n \n-        if (pref.getBoolean(\"hook_modules\", true)) {\n-            Collection<ModuleUtil.InstalledModule> installedModules = ModuleUtil.getInstance().getModules().values();\n-            for (ModuleUtil.InstalledModule info : installedModules) {\n-                if (!AppHelper.FORCE_WHITE_LIST_MODULE.contains(info.packageName)) {\n-                    AppHelper.FORCE_WHITE_LIST_MODULE.add(info.packageName);\n-                }\n-            }\n-            Log.d(TAG, \"ApplicationList: Force add modules to list\");\n-        }\n-\n         de.robv.android.xposed.installer.XposedApp.getInstance().reloadXposedProp();\n         createDirectories();\n         NotificationUtil.init();\n@@ -205,6 +195,16 @@ public synchronized void onActivityCreated(@NonNull Activity activity, Bundle sa\n \n         RepoLoader.getInstance().triggerFirstLoadIfNecessary();\n         isUiLoaded = true;\n+\n+        if (pref.getBoolean(\"hook_modules\", true)) {\n+            Collection<ModuleUtil.InstalledModule> installedModules = ModuleUtil.getInstance().getModules().values();\n+            for (ModuleUtil.InstalledModule info : installedModules) {\n+                if (!AppHelper.FORCE_WHITE_LIST_MODULE.contains(info.packageName)) {\n+                    AppHelper.FORCE_WHITE_LIST_MODULE.add(info.packageName);\n+                }\n+            }\n+            Log.d(TAG, \"ApplicationList: Force add modules to list\");\n+        }\n     }\n \n     @Override",
      "parent_sha": "75854c1122eadaf638d8099443a39e904a58fe1f"
    }
  },
  {
    "oid": "7674396eff2d99aa7a02ed02bd0a29058b9594ba",
    "message": "Fix the 'lspd' process name (#2793)\n\nActivityThread#systemMain -> ActivityThread#attach will also change the\nprocess name to 'system_process', so that there are two 'system_process'\nprocesses in the system.\n\n\nhttps://android.googlesource.com/platform/frameworks/base/+/0e40462e11d27eb859b829b112cecb8c6f0d7afb/core/java/android/app/ActivityThread.java#5119\n\n![\u622a\u5c4f2023-10-07 16 16\n30](https://github.com/LSPosed/LSPosed/assets/8243689/ee137210-ffa3-497a-aca1-5c215dd9eaed)\n\nCo-authored-by: jiayg <jiayg@yuanfudao.com>",
    "date": "2023-10-07T09:37:34Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/7674396eff2d99aa7a02ed02bd0a29058b9594ba",
    "details": {
      "sha": "91c575e9ac87d31a8c48f92c35fc9add4afc30a5",
      "filename": "daemon/src/main/java/org/lsposed/lspd/service/ServiceManager.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/7674396eff2d99aa7a02ed02bd0a29058b9594ba/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FServiceManager.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/7674396eff2d99aa7a02ed02bd0a29058b9594ba/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FServiceManager.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FServiceManager.java?ref=7674396eff2d99aa7a02ed02bd0a29058b9594ba",
      "patch": "@@ -133,15 +133,15 @@ public static void start(String[] args) {\n \n         systemServerService.putBinderForSystemServer();\n \n-        DdmHandleAppName.setAppName(\"lspd\", 0);\n-\n         // get config before package service is started\n         // otherwise getInstance will trigger module/scope cache\n         var configManager = ConfigManager.getInstance();\n         // --- DO NOT call ConfigManager.getInstance later!!! ---\n \n         ActivityThread.systemMain();\n \n+        DdmHandleAppName.setAppName(\"lspd\", 0);\n+\n         waitSystemService(\"package\");\n         waitSystemService(\"activity\");\n         waitSystemService(Context.USER_SERVICE);",
      "parent_sha": "50c343d152f82b2c8a1e9b8cfa75836a8273b3ff"
    }
  },
  {
    "oid": "ae9454492f1ae259ada504c5e908a3b24c2fc39c",
    "message": "[core] Fix resource hook (#164)",
    "date": "2021-02-22T15:49:54Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/ae9454492f1ae259ada504c5e908a3b24c2fc39c",
    "details": {
      "sha": "a4ebb31774da6bb3a88eff800571f97504f60dc4",
      "filename": "core/src/main/java/de/robv/android/xposed/XposedInit.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/ae9454492f1ae259ada504c5e908a3b24c2fc39c/core%2Fsrc%2Fmain%2Fjava%2Fde%2Frobv%2Fandroid%2Fxposed%2FXposedInit.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/ae9454492f1ae259ada504c5e908a3b24c2fc39c/core%2Fsrc%2Fmain%2Fjava%2Fde%2Frobv%2Fandroid%2Fxposed%2FXposedInit.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Fde%2Frobv%2Fandroid%2Fxposed%2FXposedInit.java?ref=ae9454492f1ae259ada504c5e908a3b24c2fc39c",
      "patch": "@@ -223,7 +223,7 @@ private static XResources cloneToXResources(XC_MethodHook.MethodHookParam param,\n         // Replace the returned resources with our subclass.\n         XResources newRes = new XResources(\n                 (ClassLoader) XposedHelpers.getObjectField(param.getResult(), \"mClassLoader\"));\n-        HiddenApiBridge.Resources_setImpl(newRes, (ResourcesImpl) XposedHelpers.getObjectField(Resources.getSystem(), \"mResourcesImpl\"));\n+        HiddenApiBridge.Resources_setImpl(newRes, (ResourcesImpl) XposedHelpers.getObjectField(param.getResult(), \"mResourcesImpl\"));\n         newRes.initObject(resDir);\n \n         // Invoke handleInitPackageResources().",
      "parent_sha": "804bbbc87b289e90b2270245244f3b29bccbe4f7"
    }
  },
  {
    "oid": "16c03275eff1854c90a55412e5a88dbf6cae7c06",
    "message": "[app] Filter out manager from app list (#76)",
    "date": "2021-02-05T12:43:06Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/16c03275eff1854c90a55412e5a88dbf6cae7c06",
    "details": {
      "sha": "0cdc1024c1a224443ad05b57148280718ad5d510",
      "filename": "app/src/main/java/io/github/lsposed/manager/adapters/ScopeAdapter.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/16c03275eff1854c90a55412e5a88dbf6cae7c06/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Fadapters%2FScopeAdapter.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/16c03275eff1854c90a55412e5a88dbf6cae7c06/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Fadapters%2FScopeAdapter.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Fadapters%2FScopeAdapter.java?ref=16c03275eff1854c90a55412e5a88dbf6cae7c06",
      "patch": "@@ -47,6 +47,7 @@\n import java.util.Locale;\n \n import io.github.lsposed.manager.App;\n+import io.github.lsposed.manager.BuildConfig;\n import io.github.lsposed.manager.R;\n import io.github.lsposed.manager.ui.activity.AppListActivity;\n import io.github.lsposed.manager.ui.fragment.CompileDialogFragment;\n@@ -113,7 +114,7 @@ private void loadApps() {\n         List<PackageInfo> rmList = new ArrayList<>();\n         for (PackageInfo info : fullList) {\n             installedList.add(info.packageName);\n-            if (info.packageName.equals(this.modulePackageName)) {\n+            if (info.packageName.equals(BuildConfig.APPLICATION_ID) || info.packageName.equals(this.modulePackageName)) {\n                 rmList.add(info);\n                 continue;\n             }",
      "parent_sha": "364785e1525bf397ebc30da94f3096ec09f6ecad"
    }
  },
  {
    "oid": "e18d0b684d0546764942ce1380e5a92e272572b1",
    "message": "Make DexParser.Id comparable",
    "date": "2023-02-26T08:48:49Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/e18d0b684d0546764942ce1380e5a92e272572b1",
    "details": {
      "sha": "2c4b5e5fc25e094c65443841f1a94785e15b4637",
      "filename": "core/src/main/java/org/lsposed/lspd/impl/utils/LSPosedDexParser.java",
      "status": "modified",
      "additions": 11,
      "deletions": 6,
      "changes": 17,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/e18d0b684d0546764942ce1380e5a92e272572b1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fimpl%2Futils%2FLSPosedDexParser.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/e18d0b684d0546764942ce1380e5a92e272572b1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fimpl%2Futils%2FLSPosedDexParser.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fimpl%2Futils%2FLSPosedDexParser.java?ref=e18d0b684d0546764942ce1380e5a92e272572b1",
      "patch": "@@ -112,7 +112,7 @@ synchronized public void close() {\n         }\n     }\n \n-    static class LSPosedId implements Id {\n+    static class LSPosedId<Self extends Id<Self>> implements Id<Self> {\n         final int id;\n \n         LSPosedId(int id) {\n@@ -123,9 +123,14 @@ static class LSPosedId implements Id {\n         public int getId() {\n             return id;\n         }\n+\n+        @Override\n+        public int compareTo(Self o) {\n+            return id - o.getId();\n+        }\n     }\n \n-    static class LSPosedStringId extends LSPosedId implements StringId {\n+    static class LSPosedStringId extends LSPosedId<StringId> implements StringId {\n         @NonNull\n         final String string;\n \n@@ -141,7 +146,7 @@ public String getString() {\n         }\n     }\n \n-    class LSPosedTypeId extends LSPosedId implements TypeId {\n+    class LSPosedTypeId extends LSPosedId<TypeId> implements TypeId {\n         @NonNull\n         final StringId descriptor;\n \n@@ -157,7 +162,7 @@ public StringId getDescriptor() {\n         }\n     }\n \n-    class LSPosedProtoId extends LSPosedId implements ProtoId {\n+    class LSPosedProtoId extends LSPosedId<ProtoId> implements ProtoId {\n         @NonNull\n         final StringId shorty;\n         @NonNull\n@@ -198,7 +203,7 @@ public TypeId[] getParameters() {\n         }\n     }\n \n-    class LSPosedFieldId extends LSPosedId implements FieldId {\n+    class LSPosedFieldId extends LSPosedId<FieldId> implements FieldId {\n         @NonNull\n         final TypeId type;\n         @NonNull\n@@ -232,7 +237,7 @@ public StringId getName() {\n         }\n     }\n \n-    class LSPosedMethodId extends LSPosedId implements MethodId {\n+    class LSPosedMethodId extends LSPosedId<MethodId> implements MethodId {\n         @NonNull\n         final TypeId declaringClass;\n         @NonNull",
      "parent_sha": "f19950adda2f5b43280d884ce70d2140f60e9c64"
    }
  },
  {
    "oid": "1e71d035c25932c99284325186b281bcba42a3d2",
    "message": "[core] Match all flags for broadcast",
    "date": "2021-07-03T07:13:49Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/1e71d035c25932c99284325186b281bcba42a3d2",
    "details": {
      "sha": "044ad9d112c2765d4c74fd789d56a99b017b367b",
      "filename": "core/src/main/java/org/lsposed/lspd/service/LSPosedService.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/1e71d035c25932c99284325186b281bcba42a3d2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FLSPosedService.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/1e71d035c25932c99284325186b281bcba42a3d2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FLSPosedService.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FLSPosedService.java?ref=1e71d035c25932c99284325186b281bcba42a3d2",
      "patch": "@@ -84,7 +84,7 @@ synchronized public void dispatchPackageChanged(Intent intent) {\n         ApplicationInfo applicationInfo = null;\n         if (moduleName != null) {\n             try {\n-                applicationInfo = PackageService.getApplicationInfo(moduleName, PackageManager.GET_META_DATA, 0);\n+                applicationInfo = PackageService.getApplicationInfo(moduleName, PackageManager.GET_META_DATA | PackageService.MATCH_ALL_FLAGS, 0);\n             } catch (Throwable ignored) {\n             }\n         }",
      "parent_sha": "93e7fdc76170d1819749c1406dbc13e215464d24"
    }
  },
  {
    "oid": "ec0dac16836e7c75969db62a5ce47652aafb409b",
    "message": "[core] Fix system module path update (#1126)",
    "date": "2021-09-18T03:19:36Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/ec0dac16836e7c75969db62a5ce47652aafb409b",
    "details": {
      "sha": "8a3a2477ccf91ee8c7f5dc832e5f12a1f7d269d1",
      "filename": "core/src/main/java/org/lsposed/lspd/service/ConfigManager.java",
      "status": "modified",
      "additions": 6,
      "deletions": 10,
      "changes": 16,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/ec0dac16836e7c75969db62a5ce47652aafb409b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigManager.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/ec0dac16836e7c75969db62a5ce47652aafb409b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigManager.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigManager.java?ref=ec0dac16836e7c75969db62a5ce47652aafb409b",
      "patch": "@@ -416,16 +416,16 @@ private synchronized void cacheModules() {\n             }\n             if (PackageService.isAlive()) {\n                 obsoleteModules.forEach(this::removeModuleWithoutCache);\n-                obsoletePaths.forEach(this::updateModuleApkPath);\n+                obsoletePaths.forEach((packageName, path) -> updateModuleApkPath(packageName, path, true));\n             } else {\n                 Log.w(TAG, \"pm is dead while caching. invalidating...\");\n                 clearCache();\n                 return;\n             }\n         }\n         Log.d(TAG, \"cached modules\");\n-        for (String module : cachedModule.keySet()) {\n-            Log.d(TAG, module);\n+        for (var module : cachedModule.entrySet()) {\n+            Log.d(TAG, module.getKey() + \" \" + module.getValue().apkPath);\n         }\n         cacheScopes();\n     }\n@@ -577,7 +577,7 @@ public String getModuleApkPath(ApplicationInfo info) {\n         return apkPath.orElse(null);\n     }\n \n-    public boolean updateModuleApkPath(String packageName, String apkPath) {\n+    public boolean updateModuleApkPath(String packageName, String apkPath, boolean force) {\n         if (apkPath == null) return false;\n         if (db.inTransaction()) {\n             Log.w(TAG, \"update module apk path should not be called inside transaction\");\n@@ -591,7 +591,7 @@ public boolean updateModuleApkPath(String packageName, String apkPath) {\n         int count = (int) db.insertWithOnConflict(\"modules\", null, values, SQLiteDatabase.CONFLICT_IGNORE);\n         if (count < 0) {\n             var cached = cachedModule.getOrDefault(packageName, null);\n-            if (cached == null || cached.apkPath == null || !cached.apkPath.equals(apkPath))\n+            if (force || cached == null || cached.apkPath == null || !cached.apkPath.equals(apkPath))\n                 count = db.updateWithOnConflict(\"modules\", values, \"module_pkg_name=?\", new String[]{packageName}, SQLiteDatabase.CONFLICT_IGNORE);\n             else\n                 count = 0;\n@@ -731,7 +731,7 @@ public boolean disableModule(String packageName) {\n     }\n \n     public boolean enableModule(String packageName, ApplicationInfo info) {\n-        if (!updateModuleApkPath(packageName, getModuleApkPath(info))) return false;\n+        if (!updateModuleApkPath(packageName, getModuleApkPath(info), false)) return false;\n         int mid = getModuleId(packageName);\n         if (mid == -1) return false;\n         try {\n@@ -884,10 +884,6 @@ private void removeModulePrefs(int uid, String packageName) throws IOException {\n         ConfigFileManager.deleteFolderIfExists(path);\n     }\n \n-    public String getManagerPackageName() {\n-        return manager;\n-    }\n-\n     public boolean isSepolicyLoaded() {\n         return sepolicyLoaded;\n     }",
      "parent_sha": "1cce235c46f8d73f0fd6dd446ee5054e31f6dfff"
    }
  },
  {
    "oid": "677ee95b2bb34ecb8b55de9efb4d16c4d77023a2",
    "message": "fix android 13+ secret_code (#2455)\n\nsee\nhttps://developer.android.google.cn/reference/android/content/Context#RECEIVER_NOT_EXPORTED\n\n---------\n\nCo-authored-by: LoveSy <shana@zju.edu.cn>",
    "date": "2023-03-22T19:10:42Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/677ee95b2bb34ecb8b55de9efb4d16c4d77023a2",
    "details": {
      "sha": "f0e395643d9abf641dfd381ed4b7c1d245a68507",
      "filename": "daemon/src/main/java/org/lsposed/lspd/service/LSPosedService.java",
      "status": "modified",
      "additions": 12,
      "deletions": 4,
      "changes": 16,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/677ee95b2bb34ecb8b55de9efb4d16c4d77023a2/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FLSPosedService.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/677ee95b2bb34ecb8b55de9efb4d16c4d77023a2/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FLSPosedService.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FLSPosedService.java?ref=677ee95b2bb34ecb8b55de9efb4d16c4d77023a2",
      "patch": "@@ -308,7 +308,7 @@ private void dispatchModuleScope(Intent intent) {\n         LSPNotificationManager.cancelNotification(SCOPE_CHANNEL_ID, packageName, userId);\n     }\n \n-    private void registerReceiver(List<IntentFilter> filters, String requiredPermission, int userId, Consumer<Intent> task) {\n+    private void registerReceiver(List<IntentFilter> filters, String requiredPermission, int userId, Consumer<Intent> task, int flag) {\n         var receiver = new IIntentReceiver.Stub() {\n             @Override\n             public void performReceive(Intent intent, int resultCode, String data, Bundle extras, boolean ordered, boolean sticky, int sendingUser) {\n@@ -329,15 +329,23 @@ public void performReceive(Intent intent, int resultCode, String data, Bundle ex\n         };\n         try {\n             for (var filter : filters) {\n-                ActivityManagerService.registerReceiver(\"android\", null, receiver, filter, requiredPermission, userId, Context.RECEIVER_NOT_EXPORTED);\n+                ActivityManagerService.registerReceiver(\"android\", null, receiver, filter, requiredPermission, userId, flag);\n             }\n         } catch (RemoteException e) {\n             Log.e(TAG, \"register receiver\", e);\n         }\n     }\n \n+    private void registerReceiver(List<IntentFilter> filters, String requiredPermission, int userId, Consumer<Intent> task) {\n+        registerReceiver(filters, requiredPermission, userId, task, Context.RECEIVER_NOT_EXPORTED);\n+    }\n+\n     private void registerReceiver(List<IntentFilter> filters, int userId, Consumer<Intent> task) {\n-        registerReceiver(filters, null, userId, task);\n+        registerReceiver(filters, null, userId, task, Context.RECEIVER_NOT_EXPORTED);\n+    }\n+\n+    private void registerReceiver(List<IntentFilter> filters, int userId, Consumer<Intent> task, int flag) {\n+        registerReceiver(filters, null, userId, task, flag);\n     }\n \n     private void registerPackageReceiver() {\n@@ -371,7 +379,7 @@ private void registerSecretCodeReceiver() {\n         intentFilter.addDataAuthority(\"5776733\", null);\n         intentFilter.addDataScheme(\"android_secret_code\");\n \n-        registerReceiver(List.of(intentFilter), 0, this::dispatchSecretCodeReceive);\n+        registerReceiver(List.of(intentFilter), 0, this::dispatchSecretCodeReceive, Context.RECEIVER_EXPORTED);\n         Log.d(TAG, \"registered secret code receiver\");\n     }\n ",
      "parent_sha": "ece5fe3f9807507d970f8836b604a4699ec235a0"
    }
  },
  {
    "oid": "de586d532f66823fd6ec63fa31738767d49ac1c9",
    "message": "[app] Add more info in crash report",
    "date": "2021-02-14T10:17:47Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/de586d532f66823fd6ec63fa31738767d49ac1c9",
    "details": {
      "sha": "b1d98647d636b6664402eb571589a46bb4db9f55",
      "filename": "app/src/main/java/io/github/lsposed/manager/ui/activity/CrashReportActivity.java",
      "status": "modified",
      "additions": 2,
      "deletions": 31,
      "changes": 33,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/de586d532f66823fd6ec63fa31738767d49ac1c9/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Fui%2Factivity%2FCrashReportActivity.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/de586d532f66823fd6ec63fa31738767d49ac1c9/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Fui%2Factivity%2FCrashReportActivity.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Fui%2Factivity%2FCrashReportActivity.java?ref=de586d532f66823fd6ec63fa31738767d49ac1c9",
      "patch": "@@ -23,7 +23,6 @@\n import android.content.ClipData;\n import android.content.ClipboardManager;\n import android.content.Intent;\n-import android.content.pm.ApplicationInfo;\n import android.content.pm.PackageInfo;\n import android.os.Build;\n import android.os.Bundle;\n@@ -38,8 +37,6 @@\n import java.text.SimpleDateFormat;\n import java.util.Date;\n import java.util.Locale;\n-import java.util.zip.ZipEntry;\n-import java.util.zip.ZipFile;\n \n import io.github.lsposed.manager.BuildConfig;\n import io.github.lsposed.manager.R;\n@@ -69,49 +66,23 @@ public String getAllErrorDetailsFromIntent(@NonNull Intent intent) {\n         Date currentDate = new Date();\n         DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\", Locale.US);\n \n-        String buildDateAsString = getBuildDateAsString(dateFormat);\n-\n         String versionName = getVersionName();\n \n         String errorDetails = \"\";\n \n         errorDetails += \"Build version: \" + versionName + \" \\n\";\n-        if (buildDateAsString != null) {\n-            errorDetails += \"Build date: \" + buildDateAsString + \" \\n\";\n-        }\n         errorDetails += \"Current date: \" + dateFormat.format(currentDate) + \" \\n\";\n         errorDetails += \"Device: \" + getDeviceModelName() + \" \\n \\n\";\n+        errorDetails += \"SDK: \" + Build.VERSION.SDK_INT + \" \\n \\n\";\n         errorDetails += \"Stack trace:  \\n\";\n         errorDetails += getStackTraceFromIntent(intent);\n         return errorDetails;\n     }\n \n-    private String getBuildDateAsString(@NonNull DateFormat dateFormat) {\n-        long buildDate;\n-        try {\n-            ApplicationInfo ai = getPackageManager().getApplicationInfo(getPackageName(), 0);\n-            ZipFile zf = new ZipFile(ai.sourceDir);\n-\n-            ZipEntry ze = zf.getEntry(\"classes.dex\");\n-            buildDate = ze.getTime();\n-\n-\n-            zf.close();\n-        } catch (Exception e) {\n-            buildDate = 0;\n-        }\n-\n-        if (buildDate > 312764400000L) {\n-            return dateFormat.format(new Date(buildDate));\n-        } else {\n-            return null;\n-        }\n-    }\n-\n     private String getVersionName() {\n         try {\n             PackageInfo packageInfo = getPackageManager().getPackageInfo(getPackageName(), 0);\n-            return packageInfo.versionName;\n+            return String.format(\"%s (%s)\", packageInfo.versionName, packageInfo.versionCode);\n         } catch (Exception e) {\n             return \"Unknown\";\n         }",
      "parent_sha": "a915ba66ad71cc6faf92b7317ca769a59a4ef47d"
    }
  },
  {
    "oid": "03deb22202b9d4fbfa6a56b305c5c005d5c3e323",
    "message": "[core] Fix uninstall (#1176)",
    "date": "2021-09-25T16:32:22Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/03deb22202b9d4fbfa6a56b305c5c005d5c3e323",
    "details": {
      "sha": "88be2a847f32027a67064b85a551d7c7ab1d1f69",
      "filename": "core/src/main/java/org/lsposed/lspd/service/PackageService.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/03deb22202b9d4fbfa6a56b305c5c005d5c3e323/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FPackageService.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/03deb22202b9d4fbfa6a56b305c5c005d5c3e323/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FPackageService.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FPackageService.java?ref=03deb22202b9d4fbfa6a56b305c5c005d5c3e323",
      "patch": "@@ -237,7 +237,7 @@ public static boolean uninstallPackage(VersionedPackage versionedPackage, int us\n         CountDownLatch latch = new CountDownLatch(1);\n         final boolean[] result = {false};\n         var flag = userId == -1 ? 0x00000002 : 0; //PackageManager.DELETE_ALL_USERS = 0x00000002; UserHandle ALL = new UserHandle(-1);\n-        pm.getPackageInstaller().uninstall(versionedPackage, null, flag, new IntentSenderAdaptor() {\n+        pm.getPackageInstaller().uninstall(versionedPackage, \"android\", flag, new IntentSenderAdaptor() {\n             @Override\n             public void send(Intent intent) {\n                 int status = intent.getIntExtra(PackageInstaller.EXTRA_STATUS, PackageInstaller.STATUS_FAILURE);",
      "parent_sha": "d08191a005cc67cb142cce2b97d96c8bdb6992e9"
    }
  },
  {
    "oid": "a556880228013727f6b8b15a73fa713027d056fc",
    "message": "[core] fix typo (#168)",
    "date": "2021-02-22T18:58:06Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/a556880228013727f6b8b15a73fa713027d056fc",
    "details": {
      "sha": "cdf8a737d391397ee6a9010b4f73f72633a0838c",
      "filename": "core/src/main/java/io/github/lsposed/lspd/service/UserService.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/a556880228013727f6b8b15a73fa713027d056fc/core%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Flspd%2Fservice%2FUserService.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/a556880228013727f6b8b15a73fa713027d056fc/core%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Flspd%2Fservice%2FUserService.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Flspd%2Fservice%2FUserService.java?ref=a556880228013727f6b8b15a73fa713027d056fc",
      "patch": "@@ -66,7 +66,7 @@ public static int[] getUsers() throws RemoteException {\n         } else {\n             try {\n                 users = um.getUsers(true);\n-            } catch (NoSuchFieldError e) {\n+            } catch (NoSuchMethodError e) {\n                 users = um.getUsers(true, true, true);\n             }\n         }",
      "parent_sha": "93e0846160a3863f041abe673bf254ba30e3b54e"
    }
  },
  {
    "oid": "03c2e74b0354a96a59e08cb4f94b7135126314cc",
    "message": "Delete vercel backup cdn (#2830)",
    "date": "2023-10-26T03:07:22Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/03c2e74b0354a96a59e08cb4f94b7135126314cc",
    "details": {
      "sha": "bb4db32712a14696db1ece18d9f39aefdfdf06a2",
      "filename": "app/src/main/java/org/lsposed/manager/repo/RepoLoader.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/03c2e74b0354a96a59e08cb4f94b7135126314cc/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Frepo%2FRepoLoader.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/03c2e74b0354a96a59e08cb4f94b7135126314cc/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Frepo%2FRepoLoader.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Frepo%2FRepoLoader.java?ref=03c2e74b0354a96a59e08cb4f94b7135126314cc",
      "patch": "@@ -77,7 +77,7 @@ public boolean upgradable(long versionCode, String versionName) {\n     private final Set<RepoListener> listeners = ConcurrentHashMap.newKeySet();\n     private boolean repoLoaded = false;\n     private static final String originRepoUrl = \"https://modules.lsposed.org/\";\n-    private static final String backupRepoUrl = \"https://modules-vercel.lsposed.org/\";\n+    private static final String backupRepoUrl = \"https://modules-blogcdn.lsposed.org/\";\n \n     private static final String secondBackupRepoUrl = \"https://modules-cloudflare.lsposed.org/\";\n     private static String repoUrl = originRepoUrl;",
      "parent_sha": "99579a0762197f01f8df161640293a2360d39c40"
    }
  },
  {
    "oid": "109cdba60c994d816f056afb1194564761a7d942",
    "message": "Fix module appid abnormal after soft reset (#1895)",
    "date": "2022-04-27T07:33:11Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/109cdba60c994d816f056afb1194564761a7d942",
    "details": {
      "sha": "271c8f6ea682105d0a8991ae65db38005da2a15a",
      "filename": "daemon/src/main/java/org/lsposed/lspd/service/ConfigManager.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/109cdba60c994d816f056afb1194564761a7d942/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigManager.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/109cdba60c994d816f056afb1194564761a7d942/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigManager.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigManager.java?ref=109cdba60c994d816f056afb1194564761a7d942",
      "patch": "@@ -212,7 +212,7 @@ public List<Module> getModulesForSystemServer() {\n                 return false;\n             }\n             m.file = file;\n-            cachedModule.put(m.packageName, m);\n+            cachedModule.putIfAbsent(m.packageName, m);\n             return true;\n         }).collect(Collectors.toList());\n     }",
      "parent_sha": "7d5778a01c59bd6c75b69e450aa755b86213b8dc"
    }
  },
  {
    "oid": "679f93a59b8fdbe010decf1b7d23bebde889d955",
    "message": "Fix CrashReportActivity theme (#2502)\n\nSame as: 0ee9e8a5f74ec25c01f98f25b900609ec3cf8380",
    "date": "2023-04-18T11:55:43Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/679f93a59b8fdbe010decf1b7d23bebde889d955",
    "details": {
      "sha": "e77c1cb6518c738ba2f0ffe1ca0cdc96e6409ee8",
      "filename": "app/src/main/java/org/lsposed/manager/ui/activity/CrashReportActivity.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/679f93a59b8fdbe010decf1b7d23bebde889d955/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Factivity%2FCrashReportActivity.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/679f93a59b8fdbe010decf1b7d23bebde889d955/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Factivity%2FCrashReportActivity.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Factivity%2FCrashReportActivity.java?ref=679f93a59b8fdbe010decf1b7d23bebde889d955",
      "patch": "@@ -48,8 +48,8 @@ public class CrashReportActivity extends MaterialActivity {\n \n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n-        super.onCreate(savedInstanceState);\n         setTheme(R.style.AppTheme);\n+        super.onCreate(savedInstanceState);\n         binding = ActivityCrashReportBinding.inflate(getLayoutInflater());\n         setContentView(binding.getRoot());\n         binding.sendLogs.setOnClickListener(view -> {",
      "parent_sha": "fab404ea1856115470e9c1111f04c44db7c3a37d"
    }
  },
  {
    "oid": "0f1674b2a03b3eb974431d7d0193de514f2e6d0c",
    "message": "SandHook: remove useless logic",
    "date": "2019-03-22T07:40:49Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/0f1674b2a03b3eb974431d7d0193de514f2e6d0c",
    "details": {
      "sha": "c23bf8b90695ac74a0bfa273d244ec933cc31f16",
      "filename": "edxp-sandhook/src/main/java/com/elderdrivers/riru/edxp/sandhook/entry/Router.java",
      "status": "modified",
      "additions": 4,
      "deletions": 38,
      "changes": 42,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/0f1674b2a03b3eb974431d7d0193de514f2e6d0c/edxp-sandhook%2Fsrc%2Fmain%2Fjava%2Fcom%2Felderdrivers%2Friru%2Fedxp%2Fsandhook%2Fentry%2FRouter.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/0f1674b2a03b3eb974431d7d0193de514f2e6d0c/edxp-sandhook%2Fsrc%2Fmain%2Fjava%2Fcom%2Felderdrivers%2Friru%2Fedxp%2Fsandhook%2Fentry%2FRouter.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/edxp-sandhook%2Fsrc%2Fmain%2Fjava%2Fcom%2Felderdrivers%2Friru%2Fedxp%2Fsandhook%2Fentry%2FRouter.java?ref=0f1674b2a03b3eb974431d7d0193de514f2e6d0c",
      "patch": "@@ -30,12 +30,6 @@ public class Router {\n \n     private static volatile AtomicBoolean bootstrapHooked = new AtomicBoolean(false);\n \n-    static boolean useSandHook;\n-\n-    static {\n-        useSandHook = EdXpConfigGlobal.getHookProvider() instanceof SandHookProvider;\n-    }\n-\n \n     public static void prepare(boolean isSystem) {\n         // this flag is needed when loadModules\n@@ -86,46 +80,18 @@ public static void startBootstrapHook(boolean isSystem) {\n         Utils.logD(\"startBootstrapHook starts: isSystem = \" + isSystem);\n         ClassLoader classLoader = XposedBridge.BOOTCLASSLOADER;\n         if (isSystem) {\n-            if (useSandHook) {\n-                XposedCompat.addHookers(classLoader, SysBootstrapHookInfo.hookItems);\n-            } else {\n-                HookMain.doHookDefault(\n-                    Router.class.getClassLoader(),\n-                    classLoader,\n-                    SysBootstrapHookInfo.class.getName());\n-            }\n+            XposedCompat.addHookers(classLoader, SysBootstrapHookInfo.hookItems);\n         } else {\n-            if (useSandHook) {\n-                XposedCompat.addHookers(classLoader, AppBootstrapHookInfo.hookItems);\n-            } else {\n-                HookMain.doHookDefault(\n-                        Router.class.getClassLoader(),\n-                        classLoader,\n-                        AppBootstrapHookInfo.class.getName());\n-            }\n+            XposedCompat.addHookers(classLoader, AppBootstrapHookInfo.hookItems);\n         }\n     }\n \n     public static void startSystemServerHook() {\n-        if (useSandHook) {\n-            XposedCompat.addHookers(SystemMainHooker.systemServerCL, SysInnerHookInfo.hookItems);\n-        } else {\n-            HookMain.doHookDefault(\n-                    Router.class.getClassLoader(),\n-                    SystemMainHooker.systemServerCL,\n-                    SysInnerHookInfo.class.getName());\n-        }\n+        XposedCompat.addHookers(SystemMainHooker.systemServerCL, SysInnerHookInfo.hookItems);\n     }\n \n     public static void startWorkAroundHook() {\n-        if (useSandHook) {\n-            XposedCompat.addHookers(XposedBridge.BOOTCLASSLOADER, WorkAroundHookInfo.hookItems);\n-        } else {\n-            HookMain.doHookDefault(\n-                    Router.class.getClassLoader(),\n-                    XposedBridge.BOOTCLASSLOADER,\n-                    WorkAroundHookInfo.class.getName());\n-        }\n+        XposedCompat.addHookers(XposedBridge.BOOTCLASSLOADER, WorkAroundHookInfo.hookItems);\n     }\n \n     public static void onEnterChildProcess() {",
      "parent_sha": "8c437cdbf9599aa05470ddf5f5e4698742e9ae66"
    }
  },
  {
    "oid": "ea6093b3510a676d1ab297184a3bee7582c4011e",
    "message": "Opt-in automatic preferences file migration",
    "date": "2021-01-07T12:31:13Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/ea6093b3510a676d1ab297184a3bee7582c4011e",
    "details": {
      "sha": "bc2d3fb450c01d90650abcac247ab48940a47c66",
      "filename": "edxp-common/src/main/java/com/elderdrivers/riru/edxp/_hooker/impl/HandleBindApp.java",
      "status": "modified",
      "additions": 27,
      "deletions": 2,
      "changes": 29,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/ea6093b3510a676d1ab297184a3bee7582c4011e/edxp-common%2Fsrc%2Fmain%2Fjava%2Fcom%2Felderdrivers%2Friru%2Fedxp%2F_hooker%2Fimpl%2FHandleBindApp.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/ea6093b3510a676d1ab297184a3bee7582c4011e/edxp-common%2Fsrc%2Fmain%2Fjava%2Fcom%2Felderdrivers%2Friru%2Fedxp%2F_hooker%2Fimpl%2FHandleBindApp.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/edxp-common%2Fsrc%2Fmain%2Fjava%2Fcom%2Felderdrivers%2Friru%2Fedxp%2F_hooker%2Fimpl%2FHandleBindApp.java?ref=ea6093b3510a676d1ab297184a3bee7582c4011e",
      "patch": "@@ -17,6 +17,8 @@\n \n import java.io.File;\n import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n import java.util.Map;\n \n import de.robv.android.xposed.XC_MethodHook;\n@@ -62,6 +64,7 @@ protected void beforeHookedMethod(MethodHookParam param) {\n             boolean isModule = false;\n             int xposedminversion = -1;\n             boolean xposedsharedprefs = false;\n+            boolean xposedmigrateprefs = false;\n             try {\n                 Map<String, Object> metaData = MetaDataReader.getMetaData(new File(appInfo.sourceDir));\n                 isModule = metaData.containsKey(\"xposedmodule\");\n@@ -73,6 +76,7 @@ protected void beforeHookedMethod(MethodHookParam param) {\n                         xposedminversion = MetaDataReader.extractIntPart((String) minVersionRaw);\n                     }\n                     xposedsharedprefs = metaData.containsKey(\"xposedsharedprefs\");\n+                    xposedmigrateprefs = metaData.containsKey(\"xposedmigrateprefs\");\n                 }\n             } catch (NumberFormatException | IOException e) {\n                 Hookers.logE(\"ApkParser fails\", e);\n@@ -90,11 +94,32 @@ protected void afterHookedMethod(MethodHookParam param) {\n                         }\n                     }\n                 });\n+                final boolean migratePrefs = xposedmigrateprefs;\n                 XposedHelpers.findAndHookMethod(ContextImpl.class, \"getPreferencesDir\", new XC_MethodHook() {\n-                    @SuppressLint({\"SetWorldReadable\", \"WorldReadableFiles\"})\n                     @Override\n                     protected void afterHookedMethod(MethodHookParam param) {\n-                        param.setResult(new File(ConfigManager.getPrefsPath(appInfo.packageName)));\n+                        File newDir = new File(ConfigManager.getPrefsPath(appInfo.packageName));\n+                        if (migratePrefs) {\n+                            File oldDir = (File) param.getResult();\n+                            for (File oldFile : oldDir.listFiles()) {\n+                                Path oldPath = oldFile.toPath();\n+                                if (!Files.isSymbolicLink(oldPath)) {\n+                                    Utils.logD(\"Migrating prefs file: \" + oldFile.getAbsolutePath());\n+                                    Path newPath = new File(newDir, oldFile.getName()).toPath();\n+                                    try {\n+                                        Files.move(oldPath, newPath);\n+                                        try {\n+                                            Files.createSymbolicLink(oldPath, newPath);\n+                                        } catch (IOException e) {\n+                                            Utils.logD(\"Symlink creation failed\", e);\n+                                        }\n+                                    } catch (IOException e) {\n+                                        Utils.logD(\"File move operation failed\", e);\n+                                    }\n+                                }\n+                            }\n+                        }\n+                        param.setResult(newDir);\n                     }\n                 });\n             }",
      "parent_sha": "d25363ede5b8efe28154b91a054eec4509a9465c"
    }
  },
  {
    "oid": "2b2bd66bb57b8885205cf782d2893a43b3ff6a15",
    "message": "Delete fallback url (#2283)",
    "date": "2022-12-06T10:01:15Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/2b2bd66bb57b8885205cf782d2893a43b3ff6a15",
    "details": {
      "sha": "83c379f52c475e3c11e1cf78c57a561a807700d0",
      "filename": "app/src/main/java/org/lsposed/manager/repo/RepoLoader.java",
      "status": "modified",
      "additions": 5,
      "deletions": 16,
      "changes": 21,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/2b2bd66bb57b8885205cf782d2893a43b3ff6a15/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Frepo%2FRepoLoader.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/2b2bd66bb57b8885205cf782d2893a43b3ff6a15/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Frepo%2FRepoLoader.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Frepo%2FRepoLoader.java?ref=2b2bd66bb57b8885205cf782d2893a43b3ff6a15",
      "patch": "@@ -76,9 +76,7 @@ public boolean upgradable(long versionCode, String versionName) {\n     private final Path repoFile = Paths.get(App.getInstance().getFilesDir().getAbsolutePath(), \"repo.json\");\n     private final Set<RepoListener> listeners = ConcurrentHashMap.newKeySet();\n     private boolean repoLoaded = false;\n-    private static final String originRepoUrl = \"https://modules.lsposed.org/\";\n-    private static final String backupRepoUrl = \"https://cdn.jsdelivr.net/gh/Xposed-Modules-Repo/modules@gh-pages/\";\n-    private static String repoUrl = originRepoUrl;\n+    private static final String repoUrl = \"https://modules.lsposed.org/\";\n     private final Resources resources = App.getInstance().getResources();\n     private final String[] channels = resources.getStringArray(R.array.update_channel_values);\n \n@@ -96,8 +94,8 @@ public static synchronized RepoLoader getInstance() {\n \n     synchronized public void loadRemoteData() {\n         repoLoaded = false;\n-        try {\n-            var response = App.getOkHttpClient().newCall(new Request.Builder().url(repoUrl + \"modules.json\").build()).execute();\n+        var request = new Request.Builder().url(repoUrl + \"modules.json\").build();\n+        try (var response = App.getOkHttpClient().newCall(request).execute()) {\n \n             if (response.isSuccessful()) {\n                 ResponseBody body = response.body();\n@@ -119,10 +117,6 @@ synchronized public void loadRemoteData() {\n             for (RepoListener listener : listeners) {\n                 listener.onThrowable(e);\n             }\n-            if (!repoUrl.equals(backupRepoUrl)) {\n-                repoUrl = backupRepoUrl;\n-                loadRemoteData();\n-            }\n         }\n     }\n \n@@ -246,13 +240,8 @@ public void loadRemoteReleases(String packageName) {\n             @Override\n             public void onFailure(@NonNull Call call, @NonNull IOException e) {\n                 Log.e(App.TAG, call.request().url() + e.getMessage());\n-                if (!repoUrl.equals(backupRepoUrl)) {\n-                    repoUrl = backupRepoUrl;\n-                    loadRemoteReleases(packageName);\n-                } else {\n-                    for (RepoListener listener : listeners) {\n-                        listener.onThrowable(e);\n-                    }\n+                for (RepoListener listener : listeners) {\n+                    listener.onThrowable(e);\n                 }\n             }\n ",
      "parent_sha": "66a20e227537fce6c841425fef19ace1babe71ca"
    }
  },
  {
    "oid": "27e58a30df405be2e2f70fdd7cbbe937a3051c9f",
    "message": "Fix app list order (#23)",
    "date": "2021-01-31T11:07:40Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/27e58a30df405be2e2f70fdd7cbbe937a3051c9f",
    "details": {
      "sha": "d74267dbcb36221cee846626a107496ac5965976",
      "filename": "app/src/main/java/io/github/lsposed/manager/adapters/ScopeAdapter.java",
      "status": "modified",
      "additions": 15,
      "deletions": 11,
      "changes": 26,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/27e58a30df405be2e2f70fdd7cbbe937a3051c9f/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Fadapters%2FScopeAdapter.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/27e58a30df405be2e2f70fdd7cbbe937a3051c9f/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Fadapters%2FScopeAdapter.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Fadapters%2FScopeAdapter.java?ref=27e58a30df405be2e2f70fdd7cbbe937a3051c9f",
      "patch": "@@ -155,20 +155,24 @@ private void loadApps() {\n     private void sortApps() {\n         Comparator<PackageInfo> cmp = AppHelper.getAppListComparator(preferences.getInt(\"list_sort\", 0), pm);\n         fullList.sort((a, b) -> {\n-            boolean aAndroid = a.packageName.equals(\"android\");\n-            boolean bAnrdoid = b.packageName.equals(\"android\");\n-            if (aAndroid || bAnrdoid) {\n-                if (aAndroid == bAnrdoid) {\n-                    return 0;\n-                } else if (aAndroid) {\n-                    return -1;\n-                } else {\n-                    return 1;\n-                }\n-            }\n             boolean aChecked = checkedList.contains(a.packageName);\n             boolean bChecked = checkedList.contains(b.packageName);\n             if (aChecked == bChecked) {\n+                if (hasRecommended()) {\n+                    boolean aRecommended = recommendedList.contains(a.packageName);\n+                    boolean bRecommended = recommendedList.contains(b.packageName);\n+                    if (aRecommended || bRecommended) {\n+                        if (aRecommended == bRecommended) {\n+                            return cmp.compare(a, b);\n+                        } else if (aRecommended) {\n+                            return -1;\n+                        } else {\n+                            return 1;\n+                        }\n+                    }\n+                }\n+                if (a.packageName.equals(\"android\")) return -1;\n+                if (b.packageName.equals(\"android\")) return 1;\n                 return cmp.compare(a, b);\n             } else if (aChecked) {\n                 return -1;",
      "parent_sha": "f5cf8199a96bd27a5cce9af365b0eed3f3351598"
    }
  },
  {
    "oid": "a410949dd46dc5c4c1d2f35b6665c97b47a0e4ff",
    "message": "Hide tabs if verbose log is disabled",
    "date": "2020-02-05T15:14:52Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/a410949dd46dc5c4c1d2f35b6665c97b47a0e4ff",
    "details": {
      "sha": "b23c1b68cb38fb04769f54fcf5db1fb7aeb10050",
      "filename": "app/src/main/java/org/meowcat/edxposed/manager/LogsActivity.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/a410949dd46dc5c4c1d2f35b6665c97b47a0e4ff/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fmeowcat%2Fedxposed%2Fmanager%2FLogsActivity.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/a410949dd46dc5c4c1d2f35b6665c97b47a0e4ff/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fmeowcat%2Fedxposed%2Fmanager%2FLogsActivity.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fmeowcat%2Fedxposed%2Fmanager%2FLogsActivity.java?ref=a410949dd46dc5c4c1d2f35b6665c97b47a0e4ff",
      "patch": "@@ -88,6 +88,9 @@ public void onCreate(@Nullable Bundle savedInstanceState) {\n         mListView.setAdapter(mAdapter);\n         mListView.setLayoutManager(new LinearLayoutManager(this));\n         TabLayout tabLayout = findViewById(R.id.sliding_tabs);\n+        if (XposedApp.getPreferences().getBoolean(\"disable_verbose_log\", false)) {\n+            tabLayout.setVisibility(View.GONE);\n+        }\n         tabLayout.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {\n             @Override\n             public void onTabSelected(TabLayout.Tab tab) {\n@@ -260,10 +263,7 @@ protected ArrayList<String> doInBackground(File... log) {\n             Thread.currentThread().setPriority(Thread.NORM_PRIORITY + 2);\n \n             ArrayList<String> logs = new ArrayList<>();\n-            if (XposedApp.getPreferences().getBoolean(\"disable_verbose_log\", false) && allLog) {\n-                logs.add(LogsActivity.this.getResources().getString(R.string.logs_verbose_disabled));\n-                return logs;\n-            }\n+\n             try {\n                 File logfile = log[0];\n                 try (Scanner scanner = new Scanner(logfile)) {",
      "parent_sha": "49c2e20b04f61cc0cbf30fc4e371c7cbb22b8fb1"
    }
  },
  {
    "oid": "c61ad996dbc6fbb425d40a571e3072bcdd74de0d",
    "message": "[app] Check version code (#771)",
    "date": "2021-06-24T07:58:59Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/c61ad996dbc6fbb425d40a571e3072bcdd74de0d",
    "details": {
      "sha": "2626d1140178bb479a7182925f4655daed43c697",
      "filename": "app/src/main/java/org/lsposed/manager/App.java",
      "status": "modified",
      "additions": 5,
      "deletions": 9,
      "changes": 14,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/c61ad996dbc6fbb425d40a571e3072bcdd74de0d/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2FApp.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/c61ad996dbc6fbb425d40a571e3072bcdd74de0d/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2FApp.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2FApp.java?ref=c61ad996dbc6fbb425d40a571e3072bcdd74de0d",
      "patch": "@@ -43,7 +43,6 @@\n import java.io.PrintWriter;\n import java.io.StringWriter;\n import java.time.Instant;\n-import java.time.LocalDateTime;\n import java.time.ZoneOffset;\n import java.util.Locale;\n \n@@ -165,10 +164,10 @@ public void onResponse(@NonNull Call call, @NonNull Response response) {\n                 if (body == null) return;\n                 try {\n                     var info = JsonParser.parseReader(body.charStream()).getAsJsonObject();\n-                    var published = info.get(\"published_at\").getAsString();\n-                    var time = LocalDateTime.parse(published).toInstant(ZoneOffset.UTC).getEpochSecond();\n+                    var name = info.getAsJsonArray(\"assets\").get(0).getAsJsonObject().get(\"name\").getAsString();\n+                    var code = Integer.parseInt(name.split(\"-\", 4)[2]);\n                     var now = Instant.now().getEpochSecond();\n-                    pref.edit().putLong(\"latest_release\", time).putLong(\"latest_check\", now).apply();\n+                    pref.edit().putInt(\"latest_version\", code).putLong(\"latest_check\", now).apply();\n                 } catch (Throwable t) {\n                     Log.e(App.TAG, t.getMessage(), t);\n                 }\n@@ -190,11 +189,8 @@ public static boolean needUpdate() {\n             var checkTime = Instant.ofEpochSecond(check);\n             if (checkTime.atOffset(ZoneOffset.UTC).plusDays(30).toInstant().isBefore(now))\n                 return true;\n-            var release = getPreferences().getLong(\"latest_release\", 0);\n-            if (release > 0) {\n-                var releaseTime = Instant.ofEpochSecond(release);\n-                return releaseTime.atOffset(ZoneOffset.UTC).minusDays(1).toInstant().isAfter(buildTime);\n-            }\n+            var code = getPreferences().getInt(\"latest_version\", 0);\n+            return code > BuildConfig.VERSION_CODE;\n         }\n         return buildTime.atOffset(ZoneOffset.UTC).plusDays(30).toInstant().isBefore(now);\n     }",
      "parent_sha": "e206f5da0964d9f46254da4dab3c14eb45edb2f0"
    }
  },
  {
    "oid": "3a2eef1dbbc51407e86a7af3dcfc62e114c79b34",
    "message": "Allow some interfaces",
    "date": "2023-02-26T08:48:49Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/3a2eef1dbbc51407e86a7af3dcfc62e114c79b34",
    "details": {
      "sha": "15ec2bb9f18525bdf06e3f2c4db7e4a33a8a2f1d",
      "filename": "core/src/main/java/org/lsposed/lspd/impl/LSPosedContext.java",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/3a2eef1dbbc51407e86a7af3dcfc62e114c79b34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fimpl%2FLSPosedContext.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/3a2eef1dbbc51407e86a7af3dcfc62e114c79b34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fimpl%2FLSPosedContext.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fimpl%2FLSPosedContext.java?ref=3a2eef1dbbc51407e86a7af3dcfc62e114c79b34",
      "patch": "@@ -168,7 +168,7 @@ public Resources getResources() {\n \n     @Override\n     public PackageManager getPackageManager() {\n-        throw new UnsupportedOperationException(\"Not implemented\");\n+        return base.getPackageManager();\n     }\n \n     @Override\n@@ -178,12 +178,12 @@ public ContentResolver getContentResolver() {\n \n     @Override\n     public Looper getMainLooper() {\n-        throw new UnsupportedOperationException(\"Not implemented\");\n+        return base.getMainLooper();\n     }\n \n     @Override\n     public Context getApplicationContext() {\n-        throw new UnsupportedOperationException(\"Not implemented\");\n+        return base.getApplicationContext();\n     }\n \n     @Override\n@@ -198,17 +198,17 @@ public Resources.Theme getTheme() {\n \n     @Override\n     public ClassLoader getClassLoader() {\n-        throw new UnsupportedOperationException(\"Not implemented\");\n+        return base.getClassLoader();\n     }\n \n     @Override\n     public String getPackageName() {\n-        throw new UnsupportedOperationException(\"Not implemented\");\n+        return base.getPackageName();\n     }\n \n     @Override\n     public ApplicationInfo getApplicationInfo() {\n-        throw new UnsupportedOperationException(\"Not implemented\");\n+        return base.getApplicationInfo();\n     }\n \n     @Override\n@@ -218,7 +218,7 @@ public String getPackageResourcePath() {\n \n     @Override\n     public String getPackageCodePath() {\n-        throw new UnsupportedOperationException(\"Not implemented\");\n+        return base.getPackageCodePath();\n     }\n \n     @Override\n@@ -551,7 +551,7 @@ public boolean startInstrumentation(@NonNull ComponentName className, @Nullable\n \n     @Override\n     public Object getSystemService(@NonNull String name) {\n-        throw new UnsupportedOperationException(\"Not implemented\");\n+        return base.getSystemService(name);\n     }\n \n     @Nullable",
      "parent_sha": "d9f3ac1badd3e2490237201c1dbe10f4bdc8ee46"
    }
  },
  {
    "oid": "d54eddbb258c372cdf32ec9d27cb23b151c30a8d",
    "message": "Fix library search path on Android 9- (#1913)",
    "date": "2022-05-04T03:07:06Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/d54eddbb258c372cdf32ec9d27cb23b151c30a8d",
    "details": {
      "sha": "dc41c3537c39c4825f658a2b67947c65c6e4bb4c",
      "filename": "core/src/main/java/org/lsposed/lspd/util/LspModuleClassLoader.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/d54eddbb258c372cdf32ec9d27cb23b151c30a8d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Futil%2FLspModuleClassLoader.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/d54eddbb258c372cdf32ec9d27cb23b151c30a8d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Futil%2FLspModuleClassLoader.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Futil%2FLspModuleClassLoader.java?ref=d54eddbb258c372cdf32ec9d27cb23b151c30a8d",
      "patch": "@@ -46,9 +46,10 @@ private static List<File> splitPaths(String searchPath) {\n \n     private LspModuleClassLoader(ByteBuffer[] dexBuffers,\n                                  ClassLoader parent,\n-                                 String apk) {\n+                                 String apk,\n+                                 String librarySearchPath) {\n         super(dexBuffers, parent);\n-        nativeLibraryDirs = new File[0];\n+        nativeLibraryDirs = initNativeLibraryDirs(librarySearchPath);\n         this.apk = apk;\n     }\n \n@@ -200,8 +201,7 @@ public static ClassLoader loadApk(String apk,\n             cl = new LspModuleClassLoader(dexBuffers, librarySearchPath,\n                     parent, apk);\n         } else {\n-            cl = new LspModuleClassLoader(dexBuffers, parent, apk);\n-            cl.initNativeLibraryDirs(librarySearchPath);\n+            cl = new LspModuleClassLoader(dexBuffers, parent, apk, librarySearchPath);\n         }\n         Arrays.stream(dexBuffers).parallel().forEach(SharedMemory::unmap);\n         dexes.stream().parallel().forEach(SharedMemory::close);",
      "parent_sha": "779c178d0aed7dab9f3679d27089ccb3cb3d2c58"
    }
  },
  {
    "oid": "84ad87abf057ba4bb45b8516fe451a1365942528",
    "message": "Fix compile dialog crash",
    "date": "2021-01-29T03:55:13Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/84ad87abf057ba4bb45b8516fe451a1365942528",
    "details": {
      "sha": "c773a4fb4832628315061620cde2c272c5a4d9d4",
      "filename": "app/src/main/java/io/github/lsposed/manager/ui/fragment/CompileDialogFragment.java",
      "status": "modified",
      "additions": 29,
      "deletions": 17,
      "changes": 46,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/84ad87abf057ba4bb45b8516fe451a1365942528/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Fui%2Ffragment%2FCompileDialogFragment.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/84ad87abf057ba4bb45b8516fe451a1365942528/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Fui%2Ffragment%2FCompileDialogFragment.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Fui%2Ffragment%2FCompileDialogFragment.java?ref=84ad87abf057ba4bb45b8516fe451a1365942528",
      "patch": "@@ -16,16 +16,15 @@\n import com.google.android.material.dialog.MaterialAlertDialogBuilder;\n import com.topjohnwu.superuser.Shell;\n \n+import java.lang.ref.WeakReference;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n import io.github.lsposed.manager.App;\n import io.github.lsposed.manager.R;\n import io.github.lsposed.manager.databinding.FragmentCompileDialogBinding;\n import io.github.lsposed.manager.util.CompileUtil;\n import io.github.lsposed.manager.util.ToastUtil;\n-\n-import java.lang.ref.WeakReference;\n-import java.util.ArrayList;\n-import java.util.List;\n-\n import rikka.shizuku.ShizukuSystemProperties;\n \n import static android.content.pm.PackageManager.PERMISSION_DENIED;\n@@ -105,8 +104,12 @@ public void onRequestPermissionsResult(int requestCode, int grantResult) {\n                             break;\n                     }\n                     App.runOnUiThread(() -> {\n-                        ToastUtil.showLongToast(requireContext(), R.string.done);\n-                        dismiss();\n+                        ToastUtil.showLongToast(App.getInstance(), R.string.done);\n+                        try {\n+                            dismissAllowingStateLoss();\n+                        } catch (Exception e) {\n+                            e.printStackTrace();\n+                        }\n                     });\n                 } catch (Exception e) {\n                     e.printStackTrace();\n@@ -136,7 +139,11 @@ public void onAttach(@NonNull Context context) {\n                     break;\n             }\n         } else {\n-            dismissAllowingStateLoss();\n+            try {\n+                dismissAllowingStateLoss();\n+            } catch (Exception e) {\n+                e.printStackTrace();\n+            }\n         }\n     }\n \n@@ -152,7 +159,11 @@ private void compileWithShell(CompileUtil.CompileType type) {\n         if (command != null) {\n             new CompileTask(this).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, command);\n         } else {\n-            dismiss();\n+            try {\n+                dismissAllowingStateLoss();\n+            } catch (Exception e) {\n+                e.printStackTrace();\n+            }\n         }\n     }\n \n@@ -167,7 +178,7 @@ private static class CompileTask extends AsyncTask<String, Void, String> {\n         @Override\n         protected String doInBackground(String... commands) {\n             if (outerRef.get() == null) {\n-                return outerRef.get().requireContext().getString(R.string.compile_failed);\n+                return App.getInstance().getString(R.string.compile_failed);\n             }\n             // Also get STDERR\n             List<String> stdout = new ArrayList<>();\n@@ -184,18 +195,19 @@ protected String doInBackground(String... commands) {\n \n         @Override\n         protected void onPostExecute(String result) {\n-            if (outerRef.get() == null || !outerRef.get().isAdded()) {\n-                return;\n+            try {\n+                outerRef.get().dismissAllowingStateLoss();\n+            } catch (Exception e) {\n+                e.printStackTrace();\n             }\n-            Context ctx = outerRef.get().requireContext();\n+            Context context = App.getInstance();\n             if (result.length() == 0) {\n-                ToastUtil.showLongToast(ctx, R.string.compile_failed);\n+                ToastUtil.showLongToast(context, R.string.compile_failed);\n             } else if (result.length() >= 5 && \"Error\".equals(result.substring(0, 5))) {\n-                ToastUtil.showLongToast(ctx, ctx.getString(R.string.compile_failed_with_info) + \" \" + result.substring(6));\n+                ToastUtil.showLongToast(context, context.getString(R.string.compile_failed_with_info) + \" \" + result.substring(6));\n             } else {\n-                ToastUtil.showLongToast(ctx, R.string.done);\n+                ToastUtil.showLongToast(context, R.string.done);\n             }\n-            outerRef.get().dismissAllowingStateLoss();\n         }\n     }\n }",
      "parent_sha": "ed2e19339c789b4a125e8feee94952ecf81a8248"
    }
  },
  {
    "oid": "5e3d4d6559d9dc8d0f0749a417629b2990e4bda4",
    "message": "More interfaces",
    "date": "2023-02-26T08:48:49Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/5e3d4d6559d9dc8d0f0749a417629b2990e4bda4",
    "details": {
      "sha": "5132c22f30bb3d88888b031bfadb2987ffaf90a9",
      "filename": "core/src/main/java/org/lsposed/lspd/impl/LSPosedContext.java",
      "status": "modified",
      "additions": 17,
      "deletions": 12,
      "changes": 29,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/5e3d4d6559d9dc8d0f0749a417629b2990e4bda4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fimpl%2FLSPosedContext.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/5e3d4d6559d9dc8d0f0749a417629b2990e4bda4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fimpl%2FLSPosedContext.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fimpl%2FLSPosedContext.java?ref=5e3d4d6559d9dc8d0f0749a417629b2990e4bda4",
      "patch": "@@ -322,8 +322,13 @@ public FileInputStream openFileInput(String name) throws FileNotFoundException {\n     }\n \n     @Override\n-    public FileOutputStream openFileOutput(String name, int mode) {\n-        throw new AbstractMethodError();\n+    public FileOutputStream openFileOutput(String name, int mode) throws FileNotFoundException {\n+        if (name == null) throw new IllegalArgumentException(\"name must not be null\");\n+        if (name.startsWith(\"remote://\")) {\n+            throw new FileNotFoundException(\"Read only implementation\");\n+        } else {\n+            return mBase.openFileOutput(name, mode);\n+        }\n     }\n \n     @Override\n@@ -333,7 +338,7 @@ public boolean deleteFile(String name) {\n \n     @Override\n     public File getFileStreamPath(String name) {\n-        throw new AbstractMethodError();\n+        return mBase.getFileStreamPath(name);\n     }\n \n     @Override\n@@ -343,12 +348,12 @@ public File getDataDir() {\n \n     @Override\n     public File getFilesDir() {\n-        throw new AbstractMethodError();\n+        return mBase.getFilesDir();\n     }\n \n     @Override\n     public File getNoBackupFilesDir() {\n-        throw new AbstractMethodError();\n+        return mBase.getNoBackupFilesDir();\n     }\n \n     @Nullable\n@@ -379,7 +384,7 @@ public File getCacheDir() {\n \n     @Override\n     public File getCodeCacheDir() {\n-        throw new AbstractMethodError();\n+        return mBase.getCodeCacheDir();\n     }\n \n     @Nullable\n@@ -417,7 +422,7 @@ public String[] fileList() {\n \n     @Override\n     public File getDir(String name, int mode) {\n-        throw new AbstractMethodError();\n+        return mBase.getDir(name, mode);\n     }\n \n     @Override\n@@ -649,7 +654,7 @@ public Object getSystemService(@NonNull String name) {\n     @Nullable\n     @Override\n     public String getSystemServiceName(@NonNull Class<?> serviceClass) {\n-        throw new AbstractMethodError();\n+        return mBase.getSystemServiceName(serviceClass);\n     }\n \n     @Override\n@@ -743,8 +748,8 @@ public void enforceUriPermission(@Nullable Uri uri, @Nullable String readPermiss\n     }\n \n     @Override\n-    public Context createPackageContext(String packageName, int flags) {\n-        throw new AbstractMethodError();\n+    public Context createPackageContext(String packageName, int flags) throws PackageManager.NameNotFoundException {\n+        return mBase.createPackageContext(packageName, flags);\n     }\n \n     @Override\n@@ -754,12 +759,12 @@ public Context createContextForSplit(String splitName) {\n \n     @Override\n     public Context createConfigurationContext(@NonNull Configuration overrideConfiguration) {\n-        throw new AbstractMethodError();\n+        return new LSPosedContext(mBase.createConfigurationContext(overrideConfiguration), mPackageName, mApkPath, service);\n     }\n \n     @Override\n     public Context createDisplayContext(@NonNull Display display) {\n-        throw new AbstractMethodError();\n+        return new LSPosedContext(mBase.createDisplayContext(display), mPackageName, mApkPath, service);\n     }\n \n     @Override",
      "parent_sha": "d429e5190056082e4dfde443220aa3bb2be03e10"
    }
  },
  {
    "oid": "26a4decfebc9b809d506ddc3d45e8d5dda562ba0",
    "message": "[app] Replace alidns with tuna (#381)",
    "date": "2021-03-20T05:19:40Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/26a4decfebc9b809d506ddc3d45e8d5dda562ba0",
    "details": {
      "sha": "03f849aa8e3b0581828b38eb24e71027dbca249f",
      "filename": "app/src/main/java/org/lsposed/manager/util/DoHDNS.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/26a4decfebc9b809d506ddc3d45e8d5dda562ba0/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Futil%2FDoHDNS.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/26a4decfebc9b809d506ddc3d45e8d5dda562ba0/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Futil%2FDoHDNS.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Futil%2FDoHDNS.java?ref=26a4decfebc9b809d506ddc3d45e8d5dda562ba0",
      "patch": "@@ -36,7 +36,7 @@\n public class DoHDNS implements Dns {\n \n     private static DnsOverHttps cloudflare;\n-    private static DnsOverHttps alidns;\n+    private static DnsOverHttps tuna;\n \n     public DoHDNS(OkHttpClient client) {\n         cloudflare = new DnsOverHttps.Builder()\n@@ -45,10 +45,10 @@ public DoHDNS(OkHttpClient client) {\n                 .url(HttpUrl.get(\"https://cloudflare-dns.com/dns-query\"))\n                 .build();\n \n-        alidns = new DnsOverHttps.Builder()\n+        tuna = new DnsOverHttps.Builder()\n                 .resolvePrivateAddresses(true)\n                 .client(client)\n-                .url(HttpUrl.get(\"https://dns.alidns.com/dns-query\"))\n+                .url(HttpUrl.get(\"https://101.6.6.6:8443/dns-query\"))\n                 .build();\n     }\n \n@@ -61,7 +61,7 @@ public List<InetAddress> lookup(@NonNull String hostname) throws UnknownHostExce\n             } catch (UnknownHostException e) {\n                 try {\n                     if (\"CN\".equals(Locale.getDefault().getCountry()))\n-                        return alidns.lookup(hostname);\n+                        return tuna.lookup(hostname);\n                 } catch (UnknownHostException ignored) {\n                 }\n             }",
      "parent_sha": "88f78272fc821632a98e83228fa51174fb085324"
    }
  },
  {
    "oid": "0ee9e8a5f74ec25c01f98f25b900609ec3cf8380",
    "message": "Fix app theme (#2461)",
    "date": "2023-03-22T21:27:47Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/0ee9e8a5f74ec25c01f98f25b900609ec3cf8380",
    "details": {
      "sha": "b1393bb1e2de977f268458389b4f0b8a8d2f94e1",
      "filename": "app/src/main/java/org/lsposed/manager/ui/activity/base/BaseActivity.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/0ee9e8a5f74ec25c01f98f25b900609ec3cf8380/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Factivity%2Fbase%2FBaseActivity.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/0ee9e8a5f74ec25c01f98f25b900609ec3cf8380/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Factivity%2Fbase%2FBaseActivity.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Factivity%2Fbase%2FBaseActivity.java?ref=0ee9e8a5f74ec25c01f98f25b900609ec3cf8380",
      "patch": "@@ -52,8 +52,8 @@ public class BaseActivity extends MaterialActivity {\n \n     @Override\n     public void onCreate(@Nullable Bundle savedInstanceState) {\n-        super.onCreate(savedInstanceState);\n         setTheme(R.style.AppTheme);\n+        super.onCreate(savedInstanceState);\n         // make sure the versions are consistent\n         if (BuildConfig.DEBUG) return;\n         if (!ConfigManager.isBinderAlive()) return;",
      "parent_sha": "677ee95b2bb34ecb8b55de9efb4d16c4d77023a2"
    }
  },
  {
    "oid": "984373e500caa0c36df5e6112d714b719fa1e0bb",
    "message": "[core] createWithAdaptiveBitmap",
    "date": "2021-11-08T13:57:06Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/984373e500caa0c36df5e6112d714b719fa1e0bb",
    "details": {
      "sha": "dbd8c0a2e834f674d2ecebcf4cf4439e4e4f2854",
      "filename": "core/src/main/java/org/lsposed/lspd/service/LSPManagerService.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/984373e500caa0c36df5e6112d714b719fa1e0bb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FLSPManagerService.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/984373e500caa0c36df5e6112d714b719fa1e0bb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FLSPManagerService.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FLSPManagerService.java?ref=984373e500caa0c36df5e6112d714b719fa1e0bb",
      "patch": "@@ -161,7 +161,7 @@ private static Icon getManagerIcon() {\n         try (var zip = new ZipFile(ConfigFileManager.managerApkPath.toString())) {\n             var entry = zip.getEntry(\"assets/ic_launcher-playstore.png\");\n             try (var is = zip.getInputStream(entry)) {\n-                return Icon.createWithBitmap(BitmapFactory.decodeStream(is));\n+                return Icon.createWithAdaptiveBitmap(BitmapFactory.decodeStream(is));\n             }\n         } catch (Throwable e) {\n             Log.e(TAG, \"load icon\", e);",
      "parent_sha": "a68dd71fdaf621c30296d1e54bf11ec8e012c9fd"
    }
  },
  {
    "oid": "4294e4bf42441b405796f08ef1b81b4cdc83ebd3",
    "message": "[app] Disable inline (#109)",
    "date": "2021-02-09T15:08:04Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/4294e4bf42441b405796f08ef1b81b4cdc83ebd3",
    "details": {
      "sha": "6a269a8502f2ac77c6b5f3e97de07c066f8b0ccd",
      "filename": "app/src/main/java/io/github/lsposed/manager/Constants.java",
      "status": "modified",
      "additions": 40,
      "deletions": 13,
      "changes": 53,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/4294e4bf42441b405796f08ef1b81b4cdc83ebd3/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2FConstants.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/4294e4bf42441b405796f08ef1b81b4cdc83ebd3/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2FConstants.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2FConstants.java?ref=4294e4bf42441b405796f08ef1b81b4cdc83ebd3",
      "patch": "@@ -1,27 +1,38 @@\n package io.github.lsposed.manager;\n \n-import android.util.Log;\n import android.widget.Toast;\n \n public class Constants {\n     public static int getXposedApiVersion() {\n-        Log.e(App.TAG, \"getXposedApiVersion: Xposed is not active\");\n-        return -1;\n+        try {\n+            return -1;\n+        } catch (Throwable ignored) {\n+            return -1;\n+        }\n     }\n \n     public static String getXposedVersion() {\n-        Log.e(App.TAG, \"getXposedVersion: Xposed is not active\");\n-        return null;\n+        try {\n+            return null;\n+        } catch (Throwable ignored) {\n+            return null;\n+        }\n     }\n \n     public static int getXposedVersionCode() {\n-        Log.e(App.TAG, \"getXposedVersionCode: Xposed is not active\");\n-        return -1;\n+        try {\n+            return -1;\n+        } catch (Throwable ignored) {\n+            return -1;\n+        }\n     }\n \n     public static String getXposedVariant() {\n-        Log.e(App.TAG, \"getXposedVariant: Xposed is not active\");\n-        return null;\n+        try {\n+            return null;\n+        } catch (Throwable ignored) {\n+            return null;\n+        }\n     }\n \n     public static String getEnabledModulesListFile() {\n@@ -37,19 +48,35 @@ public static String getConfDir() {\n     }\n \n     public static String getBaseDir() {\n-        return App.getInstance().getApplicationInfo().deviceProtectedDataDir + \"/\";\n+        try {\n+            return null;\n+        } catch (Throwable ignored) {\n+            return null;\n+        }\n     }\n \n     public static String getLogDir() {\n-        return null;\n+        try {\n+            return null;\n+        } catch (Throwable ignored) {\n+            return null;\n+        }\n     }\n \n     public static String getMiscDir() {\n-        return null;\n+        try {\n+            return null;\n+        } catch (Throwable ignored) {\n+            return null;\n+        }\n     }\n \n     public static boolean isPermissive() {\n-        return true;\n+        try {\n+            return true;\n+        } catch (Throwable ignored) {\n+            return true;\n+        }\n     }\n \n     public static void showErrorToast(int type) {",
      "parent_sha": "c9b73630ae15c63f5283f9c0b1fe03f755b00c7a"
    }
  },
  {
    "oid": "def6cfe5791cd79d3d48861dbab9b271f6b1620d",
    "message": "[core] Avoid expensive functional programming in Java (#1281)",
    "date": "2021-10-15T11:35:32Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/def6cfe5791cd79d3d48861dbab9b271f6b1620d",
    "details": {
      "sha": "be5dab4fa41a9479e01f1752396ccb87fd0270dd",
      "filename": "core/src/main/java/de/robv/android/xposed/XposedInit.java",
      "status": "modified",
      "additions": 1,
      "deletions": 10,
      "changes": 11,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/def6cfe5791cd79d3d48861dbab9b271f6b1620d/core%2Fsrc%2Fmain%2Fjava%2Fde%2Frobv%2Fandroid%2Fxposed%2FXposedInit.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/def6cfe5791cd79d3d48861dbab9b271f6b1620d/core%2Fsrc%2Fmain%2Fjava%2Fde%2Frobv%2Fandroid%2Fxposed%2FXposedInit.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Fde%2Frobv%2Fandroid%2Fxposed%2FXposedInit.java?ref=def6cfe5791cd79d3d48861dbab9b271f6b1620d",
      "patch": "@@ -115,16 +115,7 @@ protected void beforeHookedMethod(MethodHookParam param) {\n             createResourceMethods.add(\"getOrCreateResources\");\n         }\n \n-        //noinspection TrivialFunctionalExpressionUsage\n-        final Class<?> classActivityRes = ((Callable<Class<?>>) () -> {\n-            try {\n-                return XposedHelpers.findClass(\"android.app.ResourcesManager$ActivityResource\", classGTLR.getClassLoader());\n-            } catch (Throwable ignored) {\n-                return null;\n-            }\n-        }).call();\n-\n-\n+        final Class<?> classActivityRes = XposedHelpers.findClassIfExists(\"android.app.ResourcesManager$ActivityResource\", classGTLR.getClassLoader());\n         var hooker = new XC_MethodHook() {\n             @Override\n             protected void afterHookedMethod(MethodHookParam param) {",
      "parent_sha": "fabe82b0b653b9b3df98c9c35a905594aff408ca"
    }
  },
  {
    "oid": "0a269930395422be930e381989c7c553c878ba58",
    "message": "Stop seteuid to 1000\n\n#1872",
    "date": "2022-12-03T09:21:57Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/0a269930395422be930e381989c7c553c878ba58",
    "details": {
      "sha": "c19e7cc19d32079bbe5dd5df0bf05c485ea5bd37",
      "filename": "daemon/src/main/java/org/lsposed/lspd/service/BridgeService.java",
      "status": "modified",
      "additions": 49,
      "deletions": 66,
      "changes": 115,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/0a269930395422be930e381989c7c553c878ba58/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FBridgeService.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/0a269930395422be930e381989c7c553c878ba58/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FBridgeService.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FBridgeService.java?ref=0a269930395422be930e381989c7c553c878ba58",
      "patch": "@@ -7,8 +7,6 @@\n import android.os.Looper;\n import android.os.Parcel;\n import android.os.ServiceManager;\n-import android.system.ErrnoException;\n-import android.system.Os;\n import android.util.Log;\n \n import java.lang.reflect.Field;\n@@ -71,87 +69,72 @@ public void binderDied() {\n     };\n \n     // For service\n-    // This MUST run in main thread\n     private static synchronized void sendToBridge(IBinder binder, boolean isRestart) {\n-        assert Looper.myLooper() == Looper.getMainLooper();\n-        try {\n-            Os.seteuid(0);\n-        } catch (ErrnoException e) {\n-            Log.e(TAG, \"seteuid 0\", e);\n-        }\n-        try {\n-            do {\n-                bridgeService = ServiceManager.getService(SERVICE_NAME);\n-                if (bridgeService != null && bridgeService.pingBinder()) {\n-                    break;\n-                }\n+        do {\n+            bridgeService = ServiceManager.getService(SERVICE_NAME);\n+            if (bridgeService != null && bridgeService.pingBinder()) {\n+                break;\n+            }\n \n-                Log.i(TAG, \"service \" + SERVICE_NAME + \" is not started, wait 1s.\");\n+            Log.i(TAG, \"service \" + SERVICE_NAME + \" is not started, wait 1s.\");\n \n-                try {\n-                    //noinspection BusyWait\n-                    Thread.sleep(1000);\n-                } catch (Throwable e) {\n-                    Log.w(TAG, \"sleep\" + Log.getStackTraceString(e));\n-                }\n-            } while (true);\n-\n-            if (isRestart && listener != null) {\n-                listener.onSystemServerRestarted();\n+            try {\n+                //noinspection BusyWait\n+                Thread.sleep(1000);\n+            } catch (Throwable e) {\n+                Log.w(TAG, \"sleep\" + Log.getStackTraceString(e));\n             }\n+        } while (true);\n+\n+        if (isRestart && listener != null) {\n+            listener.onSystemServerRestarted();\n+        }\n \n+        try {\n+            bridgeService.linkToDeath(bridgeRecipient, 0);\n+        } catch (Throwable e) {\n+            Log.w(TAG, \"linkToDeath \" + Log.getStackTraceString(e));\n+            var snapshot = bridgeService;\n+            sendToBridge(binder, snapshot == null || !snapshot.isBinderAlive());\n+            return;\n+        }\n+\n+        Parcel data = Parcel.obtain();\n+        Parcel reply = Parcel.obtain();\n+        boolean res = false;\n+        // try at most three times\n+        for (int i = 0; i < 3; i++) {\n             try {\n-                bridgeService.linkToDeath(bridgeRecipient, 0);\n+                data.writeInterfaceToken(DESCRIPTOR);\n+                data.writeInt(ACTION.ACTION_SEND_BINDER.ordinal());\n+                Log.v(TAG, \"binder \" + binder.toString());\n+                data.writeStrongBinder(binder);\n+                if (bridgeService == null) break;\n+                res = bridgeService.transact(TRANSACTION_CODE, data, reply, 0);\n+                reply.readException();\n             } catch (Throwable e) {\n-                Log.w(TAG, \"linkToDeath \" + Log.getStackTraceString(e));\n+                Log.e(TAG, \"send binder \" + Log.getStackTraceString(e));\n                 var snapshot = bridgeService;\n                 sendToBridge(binder, snapshot == null || !snapshot.isBinderAlive());\n                 return;\n+            } finally {\n+                data.recycle();\n+                reply.recycle();\n             }\n \n-            Parcel data = Parcel.obtain();\n-            Parcel reply = Parcel.obtain();\n-            boolean res = false;\n-            // try at most three times\n-            for (int i = 0; i < 3; i++) {\n-                try {\n-                    data.writeInterfaceToken(DESCRIPTOR);\n-                    data.writeInt(ACTION.ACTION_SEND_BINDER.ordinal());\n-                    Log.v(TAG, \"binder \" + binder.toString());\n-                    data.writeStrongBinder(binder);\n-                    if (bridgeService == null) break;\n-                    res = bridgeService.transact(TRANSACTION_CODE, data, reply, 0);\n-                    reply.readException();\n-                } catch (Throwable e) {\n-                    Log.e(TAG, \"send binder \" + Log.getStackTraceString(e));\n-                    var snapshot = bridgeService;\n-                    sendToBridge(binder, snapshot == null || !snapshot.isBinderAlive());\n-                    return;\n-                } finally {\n-                    data.recycle();\n-                    reply.recycle();\n-                }\n-\n-                if (res) break;\n+            if (res) break;\n \n-                Log.w(TAG, \"no response from bridge, retry in 1s\");\n+            Log.w(TAG, \"no response from bridge, retry in 1s\");\n \n-                try {\n-                    Thread.sleep(1000);\n-                } catch (InterruptedException ignored) {\n-                }\n-            }\n-\n-            if (listener != null) {\n-                listener.onResponseFromBridgeService(res);\n-            }\n-        } finally {\n             try {\n-                Os.seteuid(1000);\n-            } catch (ErrnoException e) {\n-                Log.e(TAG, \"seteuid 1000\", e);\n+                Thread.sleep(1000);\n+            } catch (InterruptedException ignored) {\n             }\n         }\n+\n+        if (listener != null) {\n+            listener.onResponseFromBridgeService(res);\n+        }\n     }\n \n     public static void send(LSPosedService service, Listener listener) {",
      "parent_sha": "e8cce7a88e788af361fa14c0b8472b03890eb7de"
    }
  },
  {
    "oid": "2d875308fe7871dbb08341e4da3eb80058fed4b7",
    "message": "Fix a feng shui issue",
    "date": "2021-01-28T12:13:57Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/2d875308fe7871dbb08341e4da3eb80058fed4b7",
    "details": {
      "sha": "f5e282c0bd146f674e68312e56e7a84a3987e748",
      "filename": "app/src/main/java/org/meowcat/edxposed/manager/App.java",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/2d875308fe7871dbb08341e4da3eb80058fed4b7/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fmeowcat%2Fedxposed%2Fmanager%2FApp.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/2d875308fe7871dbb08341e4da3eb80058fed4b7/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fmeowcat%2Fedxposed%2Fmanager%2FApp.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fmeowcat%2Fedxposed%2Fmanager%2FApp.java?ref=2d875308fe7871dbb08341e4da3eb80058fed4b7",
      "patch": "@@ -14,7 +14,6 @@\n \n import org.meowcat.edxposed.manager.ui.activity.CrashReportActivity;\n import org.meowcat.edxposed.manager.util.CompileUtil;\n-import org.meowcat.edxposed.manager.util.ModuleUtil;\n import org.meowcat.edxposed.manager.util.NotificationUtil;\n import org.meowcat.edxposed.manager.util.RebootUtil;\n \n@@ -35,7 +34,7 @@ public class App extends Application implements Application.ActivityLifecycleCal\n     private static Handler mainHandler;\n     private SharedPreferences pref;\n     //private AppCompatActivity currentActivity = null;\n-    private boolean isUiLoaded = false;\n+    private final boolean isUiLoaded = false;\n \n     private final Shizuku.OnRequestPermissionResultListener REQUEST_PERMISSION_RESULT_LISTENER = this::onRequestPermissionsResult;\n \n@@ -134,7 +133,6 @@ public void onCreate() {\n \n         createDirectories();\n         NotificationUtil.init();\n-        ModuleUtil.getInstance();\n \n         Shizuku.addRequestPermissionResultListener(REQUEST_PERMISSION_RESULT_LISTENER);\n     }",
      "parent_sha": "d9612a733ccdd6e4d98a571a2ecb0fbbc2ed2129"
    }
  },
  {
    "oid": "2065b84d738171d43b46658a885ef8bafb37a231",
    "message": "[core] Fix leak",
    "date": "2021-11-08T08:26:19Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/2065b84d738171d43b46658a885ef8bafb37a231",
    "details": {
      "sha": "4fc0c5ed9ef912c7cd97fa310d35599756f71a67",
      "filename": "core/src/main/java/org/lsposed/lspd/service/LogcatService.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/2065b84d738171d43b46658a885ef8bafb37a231/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FLogcatService.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/2065b84d738171d43b46658a885ef8bafb37a231/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FLogcatService.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FLogcatService.java?ref=2065b84d738171d43b46658a885ef8bafb37a231",
      "patch": "@@ -135,8 +135,9 @@ private void getprop() {\n             t.start();\n             t.join();\n             var propsLogPath = ConfigFileManager.getpropsLogPath();\n-            var writer = new BufferedWriter(new FileWriter(propsLogPath));\n-            writer.append(sb);\n+            try (var writer = new BufferedWriter(new FileWriter(propsLogPath))) {\n+                writer.append(sb);\n+            }\n         } catch (IOException | InterruptedException | NullPointerException e) {\n             Log.e(TAG, \"GetProp: \" + Arrays.toString(e.getStackTrace()));\n         }",
      "parent_sha": "0d08926eaea141649a86497fa70bed21a12fc796"
    }
  },
  {
    "oid": "3fdc4e51c9b4bab5b2f2f17c3cfd0cf06d9f9d81",
    "message": "Fix cache deadlock in `XposedHelpers.java` (#1723)",
    "date": "2022-02-25T10:37:06Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/3fdc4e51c9b4bab5b2f2f17c3cfd0cf06d9f9d81",
    "details": {
      "sha": "a0495fbf7e5c084b0d03b0902e832c2344605e5f",
      "filename": "core/src/main/java/de/robv/android/xposed/XposedHelpers.java",
      "status": "modified",
      "additions": 15,
      "deletions": 15,
      "changes": 30,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/3fdc4e51c9b4bab5b2f2f17c3cfd0cf06d9f9d81/core%2Fsrc%2Fmain%2Fjava%2Fde%2Frobv%2Fandroid%2Fxposed%2FXposedHelpers.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/3fdc4e51c9b4bab5b2f2f17c3cfd0cf06d9f9d81/core%2Fsrc%2Fmain%2Fjava%2Fde%2Frobv%2Fandroid%2Fxposed%2FXposedHelpers.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Fde%2Frobv%2Fandroid%2Fxposed%2FXposedHelpers.java?ref=3fdc4e51c9b4bab5b2f2f17c3cfd0cf06d9f9d81",
      "patch": "@@ -520,16 +520,16 @@ public static Method[] findMethodsByExactParameters(Class<?> clazz, Class<?> ret\n      * @throws NoSuchMethodError In case no suitable method was found.\n      */\n     public static Method findMethodBestMatch(Class<?> clazz, String methodName, Class<?>... parameterTypes) {\n+        // find the exact matching method first\n+        try {\n+            return findMethodExact(clazz, methodName, parameterTypes);\n+        } catch (NoSuchMethodError ignored) {\n+        }\n+\n+        // then find the best match\n         var key = new MemberCacheKey.Method(clazz, methodName, parameterTypes, false);\n \n         return methodCache.computeIfAbsent(key, k -> {\n-            // find the exact matching method first\n-            try {\n-                return Optional.of(findMethodExact(k.clazz, k.name, k.parameters));\n-            } catch (NoSuchMethodError ignored) {\n-            }\n-\n-            // then find the best match\n             Method bestMatch = null;\n             Class<?> clz = k.clazz;\n             boolean considerPrivateMethods = true;\n@@ -712,7 +712,7 @@ public static Constructor<?> findConstructorExact(Class<?> clazz, Class<?>... pa\n \n         return constructorCache.computeIfAbsent(key, k -> {\n             try {\n-                Constructor<?> constructor = clazz.getDeclaredConstructor(parameterTypes);\n+                Constructor<?> constructor = k.clazz.getDeclaredConstructor(k.parameters);\n                 constructor.setAccessible(true);\n                 return Optional.of(constructor);\n             } catch (NoSuchMethodException e) {\n@@ -749,16 +749,16 @@ public static XC_MethodHook.Unhook findAndHookConstructor(String className, Clas\n      * <p>See {@link #findMethodBestMatch(Class, String, Class...)} for details.\n      */\n     public static Constructor<?> findConstructorBestMatch(Class<?> clazz, Class<?>... parameterTypes) {\n+        // find the exact matching constructor first\n+        try {\n+            return findConstructorExact(clazz, parameterTypes);\n+        } catch (NoSuchMethodError ignored) {\n+        }\n+\n+        // then find the best match\n         var key = new MemberCacheKey.Constructor(clazz, parameterTypes, false);\n \n         return constructorCache.computeIfAbsent(key, k -> {\n-            // find the exact matching constructor first\n-            try {\n-                return Optional.of(findConstructorExact(k.clazz, k.parameters));\n-            } catch (NoSuchMethodError ignored) {\n-            }\n-\n-            // then find the best match\n             Constructor<?> bestMatch = null;\n             Constructor<?>[] constructors = k.clazz.getDeclaredConstructors();\n             for (Constructor<?> constructor : constructors) {",
      "parent_sha": "583be18a7b57a5385c1b112e873a9b8d25adf47e"
    }
  },
  {
    "oid": "12b005c2d9bbf47ebe18d392986709e49e11a19f",
    "message": "[app] Hide parasitic recommend dialog when not installed (#1276)",
    "date": "2021-10-14T18:03:20Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/12b005c2d9bbf47ebe18d392986709e49e11a19f",
    "details": {
      "sha": "078c2be3d5f6700bcacd573efe893d5811342c72",
      "filename": "app/src/main/java/org/lsposed/manager/ui/fragment/HomeFragment.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/12b005c2d9bbf47ebe18d392986709e49e11a19f/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Ffragment%2FHomeFragment.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/12b005c2d9bbf47ebe18d392986709e49e11a19f/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Ffragment%2FHomeFragment.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Ffragment%2FHomeFragment.java?ref=12b005c2d9bbf47ebe18d392986709e49e11a19f",
      "patch": "@@ -63,7 +63,7 @@ public class HomeFragment extends BaseFragment {\n     public void onCreate(@Nullable Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n \n-        if (!App.isParasitic() && !App.getPreferences().getBoolean(\"never_show_shortcut\", false) && !App.isParasiticShown()) {\n+        if (!App.isParasitic() && !App.getPreferences().getBoolean(\"never_show_shortcut\", false) && !App.isParasiticShown() && ConfigManager.isBinderAlive()) {\n             App.setParasiticShown(true);\n             new BlurBehindDialogBuilder(requireActivity())\n                     .setTitle(R.string.parasitic_recommend)",
      "parent_sha": "258ddaabe81541b58d56b3d7c9544e8029916c19"
    }
  },
  {
    "oid": "5d28c7ca6d2b325268da488c27d907f21638a01b",
    "message": "Use Toast instead of Snackbar because of raggedy fab (#1840)\n\n* Use Toast instead of Snackbar because of raggedy fab",
    "date": "2022-04-13T16:39:42Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/5d28c7ca6d2b325268da488c27d907f21638a01b",
    "details": {
      "sha": "01f55a7f776c6055d3cdad98acc3f9c3acdfa863",
      "filename": "app/src/main/java/org/lsposed/manager/adapters/ScopeAdapter.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/5d28c7ca6d2b325268da488c27d907f21638a01b/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fadapters%2FScopeAdapter.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/5d28c7ca6d2b325268da488c27d907f21638a01b/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fadapters%2FScopeAdapter.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fadapters%2FScopeAdapter.java?ref=5d28c7ca6d2b325268da488c27d907f21638a01b",
      "patch": "@@ -50,6 +50,7 @@\n import android.widget.ImageView;\n import android.widget.Switch;\n import android.widget.TextView;\n+import android.widget.Toast;\n \n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n@@ -678,7 +679,7 @@ public void onBackPressed() {\n             }\n             builder.setNegativeButton(!recommendedList.isEmpty() ? android.R.string.cancel : android.R.string.ok, (dialog, which) -> {\n                 moduleUtil.setModuleEnabled(module.packageName, false);\n-                fragment.showHint(activity.getString(R.string.module_disabled_no_selection, module.getAppName()), true);\n+                Toast.makeText(activity, activity.getString(R.string.module_disabled_no_selection, module.getAppName()), Toast.LENGTH_LONG).show();\n                 fragment.getNavController().navigateUp();\n             });\n             builder.show();",
      "parent_sha": "cb72db7ca6679b52cdf299b7390a223fe70ea426"
    }
  },
  {
    "oid": "0d08926eaea141649a86497fa70bed21a12fc796",
    "message": "Switch the getprop context to `u:r:untrusted_app:s0` (#1371)\n\nCo-authored-by: LoveSy <shana@zju.edu.cn>\r\nCo-authored-by: \u5357\u5bab\u96ea\u73ca <26996262+vvb2060@users.noreply.github.com>",
    "date": "2021-11-08T07:25:30Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/0d08926eaea141649a86497fa70bed21a12fc796",
    "details": {
      "sha": "bc811d6aa717d1ae17ca283e3a3a58485b9b8c47",
      "filename": "core/src/main/java/org/lsposed/lspd/service/LogcatService.java",
      "status": "modified",
      "additions": 30,
      "deletions": 29,
      "changes": 59,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/0d08926eaea141649a86497fa70bed21a12fc796/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FLogcatService.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/0d08926eaea141649a86497fa70bed21a12fc796/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FLogcatService.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FLogcatService.java?ref=0d08926eaea141649a86497fa70bed21a12fc796",
      "patch": "@@ -3,20 +3,23 @@\n import android.annotation.SuppressLint;\n import android.os.ParcelFileDescriptor;\n import android.os.SystemProperties;\n-import android.system.ErrnoException;\n import android.system.Os;\n import android.util.Log;\n \n import org.lsposed.lspd.BuildConfig;\n \n+import java.io.BufferedReader;\n+import java.io.BufferedWriter;\n import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.FileWriter;\n import java.io.IOException;\n-import java.io.InputStream;\n+import java.io.InputStreamReader;\n import java.nio.file.Files;\n import java.nio.file.LinkOption;\n import java.nio.file.Path;\n import java.nio.file.Paths;\n-import java.nio.file.StandardCopyOption;\n+import java.util.Arrays;\n \n public class LogcatService implements Runnable {\n     private static final String TAG = \"LSPosedLogcat\";\n@@ -109,35 +112,33 @@ public void start() {\n         getprop();\n     }\n \n-    private static class GetProp implements Runnable {\n-        private volatile InputStream is;\n-\n-        @Override\n-        public void run() {\n-            try {\n-                Os.setuid(9999); // AID_NOBODY\n-                is = new ProcessBuilder(\"getprop\").start().getInputStream();\n-            } catch (ErrnoException | IOException e) {\n-                e.printStackTrace();\n-            }\n-        }\n-\n-        public InputStream getValue() {\n-            return is;\n-        }\n-    }\n-\n     private void getprop() {\n         try {\n-            var get = new GetProp();\n-            var thread = new Thread(get);\n-            thread.start();\n-            thread.join();\n-            var is = get.getValue();\n+            var sb = new StringBuilder();\n+            var t = new Thread(() -> {\n+                try (var magiskPathReader = new BufferedReader(new InputStreamReader(new ProcessBuilder(\"magisk\", \"--path\").start().getInputStream()))) {\n+                    var magiskPath = magiskPathReader.readLine();\n+                    var sh = magiskPath + \"/.magisk/busybox/sh\";\n+                    var pid = Os.getpid();\n+                    var tid = Os.gettid();\n+                    try (var exec = new FileOutputStream(\"/proc/\" + pid + \"/task/\" + tid + \"/attr/exec\")) {\n+                        var untrusted = \"u:r:untrusted_app:s0\";\n+                        exec.write(untrusted.getBytes());\n+                    }\n+                    try (var is = new ProcessBuilder(sh, \"-c\", \"getprop\").start().getInputStream()) {\n+                        sb.append(new BufferedReader(new InputStreamReader(is)).readLine());\n+                    }\n+                } catch (IOException e) {\n+                    Log.e(TAG, \"GetProp: \" + e + \": \" + Arrays.toString(e.getStackTrace()));\n+                }\n+            });\n+            t.start();\n+            t.join();\n             var propsLogPath = ConfigFileManager.getpropsLogPath();\n-            Files.copy(is, propsLogPath.toPath(), StandardCopyOption.REPLACE_EXISTING);\n-        } catch (IOException | InterruptedException e) {\n-            Log.e(TAG, \"getprop: \" + e);\n+            var writer = new BufferedWriter(new FileWriter(propsLogPath));\n+            writer.append(sb);\n+        } catch (IOException | InterruptedException | NullPointerException e) {\n+            Log.e(TAG, \"GetProp: \" + Arrays.toString(e.getStackTrace()));\n         }\n     }\n ",
      "parent_sha": "c0c1da28df1aa06754fedbe0c4e6cb044a6c295e"
    }
  },
  {
    "oid": "04b5a087b8ec5d5135408d75a03556a20b2b4e37",
    "message": "Dont revert when foreign key violates (#1419)\n\n* Dont revert when foreign key violates\n\n* 1\n\n* 2\n\n* 3\n\nCo-authored-by: \u5357\u5bab\u96ea\u73ca <vvb2060@gmail.com>",
    "date": "2021-11-21T06:07:55Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/04b5a087b8ec5d5135408d75a03556a20b2b4e37",
    "details": {
      "sha": "546e9b133126a6ae1435000d134d849e3a2423c1",
      "filename": "core/src/main/java/org/lsposed/lspd/service/ConfigManager.java",
      "status": "modified",
      "additions": 20,
      "deletions": 6,
      "changes": 26,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/04b5a087b8ec5d5135408d75a03556a20b2b4e37/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigManager.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/04b5a087b8ec5d5135408d75a03556a20b2b4e37/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigManager.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigManager.java?ref=04b5a087b8ec5d5135408d75a03556a20b2b4e37",
      "patch": "@@ -79,7 +79,6 @@\n public class ConfigManager {\n     private static ConfigManager instance = null;\n \n-    private static final int DB_VERSION = 2;\n     private final SQLiteDatabase db =\n             SQLiteDatabase.openOrCreateDatabase(ConfigFileManager.dbPath, null);\n \n@@ -325,6 +324,7 @@ private void initDB() {\n                         values.put(\"apk_path\", ConfigFileManager.managerApkPath.toString());\n                         // dummy module for config\n                         db.insertWithOnConflict(\"modules\", null, values, SQLiteDatabase.CONFLICT_IGNORE);\n+                        db.setVersion(1);\n                     });\n                 case 1:\n                     executeInTransaction(() -> {\n@@ -335,18 +335,32 @@ private void initDB() {\n                         createConfigTable.execute();\n                         createScopeTable.execute();\n                         db.compileStatement(\"CREATE INDEX IF NOT EXISTS configs_idx ON configs (module_pkg_name, user_id);\").execute();\n-                        db.compileStatement(\"INSERT INTO scope SELECT * FROM old_scope;\").execute();\n-                        db.compileStatement(\"INSERT INTO configs SELECT * FROM old_configs;\").execute();\n+                        executeInTransaction(() -> {\n+                            try {\n+                                db.compileStatement(\"INSERT INTO scope SELECT * FROM old_scope;\").execute();\n+                            } catch (Throwable e) {\n+                                Log.w(TAG, \"migrate scope\", e);\n+                            }\n+                        });\n+                        executeInTransaction(() -> {\n+                            try {\n+                                executeInTransaction(() -> db.compileStatement(\"INSERT INTO configs SELECT * FROM old_configs;\").execute());\n+                            } catch (Throwable e) {\n+                                Log.w(TAG, \"migrate config\", e);\n+                            }\n+                        });\n                         db.compileStatement(\"DROP TABLE old_scope;\").execute();\n                         db.compileStatement(\"DROP TABLE old_configs;\").execute();\n+                        db.setVersion(2);\n                     });\n                 default:\n                     break;\n             }\n-            db.setVersion(DB_VERSION);\n-        } catch (Throwable e) {\n+        } catch (\n+                Throwable e) {\n             Log.e(TAG, \"init db\", e);\n         }\n+\n     }\n \n     private List<ProcessScope> getAssociatedProcesses(Application app) throws RemoteException {\n@@ -798,7 +812,7 @@ public boolean disableModule(String packageName) {\n     public boolean enableModule(String packageName, ApplicationInfo info) {\n         if (packageName.equals(\"lspd\") || !updateModuleApkPath(packageName, getModuleApkPath(info), false))\n             return false;\n-        boolean changed = executeInTransaction(()->{\n+        boolean changed = executeInTransaction(() -> {\n             ContentValues values = new ContentValues();\n             values.put(\"enabled\", 1);\n             return db.update(\"modules\", values, \"module_pkg_name = ?\", new String[]{packageName}) > 0;",
      "parent_sha": "4d9f060aa9412f889b04a1b1dc70673f58610f79"
    }
  },
  {
    "oid": "6fff15e968c092834115b8c62edf36ffd789a751",
    "message": "Fix createResourcesForActivity hook handling (#1744)",
    "date": "2022-03-05T16:33:05Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/6fff15e968c092834115b8c62edf36ffd789a751",
    "details": {
      "sha": "d76c2b9285a70261d884983d798a885dcaf39e3a",
      "filename": "core/src/main/java/de/robv/android/xposed/XposedInit.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/6fff15e968c092834115b8c62edf36ffd789a751/core%2Fsrc%2Fmain%2Fjava%2Fde%2Frobv%2Fandroid%2Fxposed%2FXposedInit.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/6fff15e968c092834115b8c62edf36ffd789a751/core%2Fsrc%2Fmain%2Fjava%2Fde%2Frobv%2Fandroid%2Fxposed%2FXposedInit.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Fde%2Frobv%2Fandroid%2Fxposed%2FXposedInit.java?ref=6fff15e968c092834115b8c62edf36ffd789a751",
      "patch": "@@ -147,11 +147,13 @@ protected void afterHookedMethod(MethodHookParam param) {\n                         //noinspection unchecked\n                         resourceReferences = (ArrayList<Object>) getObjectField(param.thisObject, \"mResourceReferences\");\n                     }\n-                    if (classActivityRes == null) {\n+                    if (activityToken == null || classActivityRes == null) {\n                         resourceReferences.add(new WeakReference<>(newRes));\n                     } else {\n+                        // Android S createResourcesForActivity()\n                         var activityRes = XposedHelpers.newInstance(classActivityRes);\n                         XposedHelpers.setObjectField(activityRes, \"resources\", new WeakReference<>(newRes));\n+                        resourceReferences.add(activityRes);\n                     }\n                 }\n             }",
      "parent_sha": "51c82ac0c9780cd04508b3a0212f34a8674130d2"
    }
  },
  {
    "oid": "ed2e19339c789b4a125e8feee94952ecf81a8248",
    "message": "Remove unused installer hook",
    "date": "2021-01-29T03:51:40Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/ed2e19339c789b4a125e8feee94952ecf81a8248",
    "details": {
      "sha": "863cbbc8a2323acd7340b2666e817e5f7beb48e5",
      "filename": "core/src/main/java/io/github/lsposed/lspd/hooker/XposedInstallerHooker.java",
      "status": "modified",
      "additions": 5,
      "deletions": 124,
      "changes": 129,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/ed2e19339c789b4a125e8feee94952ecf81a8248/core%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Flspd%2Fhooker%2FXposedInstallerHooker.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/ed2e19339c789b4a125e8feee94952ecf81a8248/core%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Flspd%2Fhooker%2FXposedInstallerHooker.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Flspd%2Fhooker%2FXposedInstallerHooker.java?ref=ed2e19339c789b4a125e8feee94952ecf81a8248",
      "patch": "@@ -1,33 +1,18 @@\n package io.github.lsposed.lspd.hooker;\n \n-import android.app.AndroidAppHelper;\n-import android.content.Context;\n-import android.content.pm.ApplicationInfo;\n-import android.os.Bundle;\n-import android.view.LayoutInflater;\n-import android.view.View;\n-import android.view.ViewGroup;\n-\n+import de.robv.android.xposed.XC_MethodReplacement;\n+import de.robv.android.xposed.XposedBridge;\n+import de.robv.android.xposed.XposedHelpers;\n import io.github.lsposed.lspd.BuildConfig;\n import io.github.lsposed.lspd.config.ConfigManager;\n-import io.github.lsposed.lspd.config.LSPdConfigGlobal;\n import io.github.lsposed.lspd.core.EdxpImpl;\n import io.github.lsposed.lspd.core.Main;\n import io.github.lsposed.lspd.util.Utils;\n \n-import java.io.ByteArrayInputStream;\n-import java.io.File;\n-import java.io.IOException;\n-\n-import de.robv.android.xposed.XC_MethodHook;\n-import de.robv.android.xposed.XC_MethodReplacement;\n-import de.robv.android.xposed.XposedBridge;\n-import de.robv.android.xposed.XposedHelpers;\n-\n public class XposedInstallerHooker {\n \n     public static void hookXposedInstaller(final ClassLoader classLoader) {\n-        String variant_ = \"None\";\n+        String variant_;\n         switch (Main.getEdxpVariant()) {\n             case EdxpImpl.YAHFA:\n                 variant_ = \"YAHFA\";\n@@ -80,113 +65,9 @@ protected Object replaceHookedMethod(MethodHookParam param) {\n                     return ConfigManager.getBaseConfigPath() + \"/\";\n                 }\n             });\n-            Utils.logD(\"Hooked LSPosed Manager R\");\n-            return;\n-        } catch (Throwable t) {\n-            Utils.logW(\"Could not hook LSPosed Manager R\", t);\n-        }\n-\n-        // LSPosed Manager and Xposed Installer\n-        try {\n-            final String xposedAppClass = \"de.robv.android.xposed.installer.XposedApp\";\n-            final Class<?> InstallZipUtil = XposedHelpers.findClass(\"de.robv.android.xposed.installer.util.InstallZipUtil\", classLoader);\n-            XposedHelpers.findAndHookMethod(xposedAppClass, classLoader, \"getActiveXposedVersion\",\n-                    XC_MethodReplacement.returnConstant(XposedBridge.getXposedVersion())\n-            );\n-            XposedHelpers.findAndHookMethod(xposedAppClass, classLoader,\n-                    \"reloadXposedProp\", new XC_MethodHook() {\n-                        @Override\n-                        protected void beforeHookedMethod(MethodHookParam param) {\n-                            Utils.logD(\"before reloadXposedProp...\");\n-                            final String propFieldName = \"mXposedProp\";\n-                            final Object thisObject = param.thisObject;\n-                            if (thisObject == null) {\n-                                return;\n-                            }\n-                            if (XposedHelpers.getObjectField(thisObject, propFieldName) != null) {\n-                                param.setResult(null);\n-                                Utils.logD(\"reloadXposedProp already done, skip...\");\n-                                return;\n-                            }\n-                            //version=92.0-$version ($backend)\n-                            StringBuilder stringBuilder = new StringBuilder();\n-                            stringBuilder.append(\"version=\");\n-                            stringBuilder.append(XposedBridge.getXposedVersion());\n-                            stringBuilder.append(\".0-\");\n-                            stringBuilder.append(BuildConfig.VERSION_NAME);\n-                            stringBuilder.append(\" (\");\n-                            String variant = \"None\";\n-                            stringBuilder.append(variant);\n-                            stringBuilder.append(\")\");\n-                            try (ByteArrayInputStream is = new ByteArrayInputStream(stringBuilder.toString().getBytes())) {\n-                                Object props = XposedHelpers.callStaticMethod(InstallZipUtil,\n-                                        \"parseXposedProp\", is);\n-                                synchronized (thisObject) {\n-                                    XposedHelpers.setObjectField(thisObject, propFieldName, props);\n-                                }\n-                                Utils.logD(\"reloadXposedProp done...\");\n-                                param.setResult(null);\n-                            } catch (IOException e) {\n-                                Utils.logE(\"Could not reloadXposedProp\", e);\n-                            }\n-                        }\n-                    });\n-        } catch (Throwable t) {\n-            Utils.logW(\"Could not hook Xposed Installer or LSPosed Manager\", t);\n-            return;\n-        }\n-\n-        // LSPosed Manager\n-        deoptMethod(classLoader, \"io.github.lsposed.manager.ModulesFragment\", \"onActivityCreated\", Bundle.class);\n-        deoptMethod(classLoader, \"io.github.lsposed.manager.ModulesFragment\", \"showMenu\", Context.class, View.class, ApplicationInfo.class);\n-        deoptMethod(classLoader, \"io.github.lsposed.manager.StatusInstallerFragment\", \"onCreateView\", LayoutInflater.class, ViewGroup.class, Bundle.class);\n-        deoptMethod(classLoader, \"io.github.lsposed.manager.util.ModuleUtil\", \"updateModulesList\", boolean.class, View.class);\n-        try {\n-            XposedHelpers.findAndHookMethod(\"io.github.lsposed.manager.XposedApp\", classLoader, \"onCreate\", new XC_MethodHook() {\n-                @Override\n-                protected void afterHookedMethod(MethodHookParam param) throws Throwable {\n-                    XposedHelpers.setStaticObjectField(param.thisObject.getClass(), \"BASE_DIR\", ConfigManager.getBaseConfigPath() + \"/\");\n-                    XposedHelpers.setStaticObjectField(param.thisObject.getClass(), \"ENABLED_MODULES_LIST_FILE\", ConfigManager.getConfigPath(\"enabled_modules.list\"));\n-                }\n-            });\n-            XposedHelpers.findAndHookMethod(\"io.github.lsposed.manager.util.ModuleUtil\", classLoader, \"updateModulesList\", boolean.class, View.class, new XC_MethodHook() {\n-                @Override\n-                protected void beforeHookedMethod(MethodHookParam param) throws Throwable {\n-                    final Object thisObject = param.thisObject;\n-                    synchronized (thisObject) {\n-                        XposedHelpers.setStaticObjectField(param.thisObject.getClass(), \"MODULES_LIST_FILE\", ConfigManager.getConfigPath(\"modules.list\"));\n-                    }\n-                }\n-            });\n-\n-            XposedHelpers.findAndHookMethod(\"io.github.lsposed.manager.StatusInstallerFragment\", classLoader, \"getCanonicalFile\", File.class, new XC_MethodHook() {\n-                @Override\n-                protected void beforeHookedMethod(MethodHookParam param) throws Throwable {\n-                    File arg = (File) param.args[0];\n-                    if (arg.equals(new File(AndroidAppHelper.currentApplicationInfo().deviceProtectedDataDir))) {\n-                        param.args[0] = new File(ConfigManager.getBaseConfigPath());\n-                    }\n-                }\n-            });\n             Utils.logD(\"Hooked LSPosed Manager\");\n         } catch (Throwable t) {\n-            Utils.logD(\"Hooked Xposed Installer\");\n-        }\n-    }\n-\n-    private static void deoptMethod(ClassLoader cl, String className, String methodName, Class<?>... params) {\n-        try {\n-            Class<?> clazz = XposedHelpers.findClassIfExists(className, cl);\n-            if (clazz == null) {\n-                Utils.logE(\"Class \" + className + \" not found when deoptimizing LSPosed Manager\");\n-                return;\n-            }\n-\n-            Object method = XposedHelpers.findMethodExact(clazz, methodName, params);\n-            LSPdConfigGlobal.getHookProvider().deoptMethodNative(method);\n-        } catch (Throwable t) {\n-            Utils.logE(\"Error when deoptimizing \" + className + \":\" + methodName, t);\n+            Utils.logW(\"Could not hook LSPosed Manager\", t);\n         }\n-\n     }\n }",
      "parent_sha": "3b7502ca5a19399855964c0ef1f1b35dc37c0828"
    }
  },
  {
    "oid": "c99c3b11657c0e82ca43da93c941703c6ee12984",
    "message": "Only hook `performDestroyActivity` on Android 8.1- (#1923)",
    "date": "2022-05-07T08:31:32Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/c99c3b11657c0e82ca43da93c941703c6ee12984",
    "details": {
      "sha": "c7cdc566ffe3493edc36ffcc5d67e42c9d0a0507",
      "filename": "magisk-loader/src/main/java/org/lsposed/lspd/util/ParasiticManagerHooker.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/c99c3b11657c0e82ca43da93c941703c6ee12984/magisk-loader%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Futil%2FParasiticManagerHooker.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/c99c3b11657c0e82ca43da93c941703c6ee12984/magisk-loader%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Futil%2FParasiticManagerHooker.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/magisk-loader%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Futil%2FParasiticManagerHooker.java?ref=c99c3b11657c0e82ca43da93c941703c6ee12984",
      "patch": "@@ -296,7 +296,8 @@ record = ((ArrayMap<?, ?>) XposedHelpers.getObjectField(param.thisObject, \"mActi\n             }\n         };\n         XposedBridge.hookAllMethods(ActivityThread.class, \"performStopActivityInner\", stateHooker);\n-        XposedHelpers.findAndHookMethod(ActivityThread.class, \"performDestroyActivity\", IBinder.class, boolean.class, int.class, boolean.class, stateHooker);\n+        if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.O_MR1)\n+            XposedHelpers.findAndHookMethod(ActivityThread.class, \"performDestroyActivity\", IBinder.class, boolean.class, int.class, boolean.class, stateHooker);\n     }\n \n     private static void checkIntent(ILSPManagerService managerService, Intent intent) {",
      "parent_sha": "ffabc92423a5e2249a9bb3ac589554011edf341b"
    }
  },
  {
    "oid": "e5b8df65974e05116da18e4654d134d48aece4d6",
    "message": "[core] Fix compatibility on pre-Q devices (#166)",
    "date": "2021-02-22T16:43:46Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/e5b8df65974e05116da18e4654d134d48aece4d6",
    "details": {
      "sha": "1259b8ce72c584384be21a835591085317feecbd",
      "filename": "core/src/main/java/io/github/lsposed/lspd/service/ConfigManager.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/e5b8df65974e05116da18e4654d134d48aece4d6/core%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Flspd%2Fservice%2FConfigManager.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/e5b8df65974e05116da18e4654d134d48aece4d6/core%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Flspd%2Fservice%2FConfigManager.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Flspd%2Fservice%2FConfigManager.java?ref=e5b8df65974e05116da18e4654d134d48aece4d6",
      "patch": "@@ -96,7 +96,7 @@ public class ConfigManager {\n     private static final File modulesLogPath = new File(logPath, \"modules.log\");\n     private static final File verboseLogPath = new File(logPath, \"all.log\");\n \n-    final FileObserver configObserver = new FileObserver(configPath, FileObserver.MODIFY | FileObserver.DELETE | FileObserver.CREATE | FileObserver.MOVED_TO) {\n+    final FileObserver configObserver = new FileObserver(configPath.getAbsolutePath(), FileObserver.MODIFY | FileObserver.DELETE | FileObserver.CREATE | FileObserver.MOVED_TO) {\n         @Override\n         public void onEvent(int event, @Nullable String path) {\n             updateConfig();",
      "parent_sha": "ae9454492f1ae259ada504c5e908a3b24c2fc39c"
    }
  },
  {
    "oid": "06175bf499a9f899813669607ea166badcc893df",
    "message": "Set MediaColumns.IS_PENDING when writing log zip (#2636)",
    "date": "2023-07-24T02:54:15Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/06175bf499a9f899813669607ea166badcc893df",
    "details": {
      "sha": "0a7e54840856b5a7b67260166d98518e9265819c",
      "filename": "app/src/main/java/org/lsposed/manager/ui/fragment/LogsFragment.java",
      "status": "modified",
      "additions": 8,
      "deletions": 11,
      "changes": 19,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/06175bf499a9f899813669607ea166badcc893df/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Ffragment%2FLogsFragment.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/06175bf499a9f899813669607ea166badcc893df/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Ffragment%2FLogsFragment.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Ffragment%2FLogsFragment.java?ref=06175bf499a9f899813669607ea166badcc893df",
      "patch": "@@ -21,9 +21,9 @@\n \n import android.annotation.SuppressLint;\n import android.content.ActivityNotFoundException;\n+import android.content.ContentValues;\n import android.os.Bundle;\n-import android.os.Handler;\n-import android.os.Looper;\n+import android.provider.MediaStore;\n import android.util.Log;\n import android.view.LayoutInflater;\n import android.view.Menu;\n@@ -70,7 +70,6 @@\n import rikka.recyclerview.RecyclerViewKt;\n \n public class LogsFragment extends BaseFragment implements MenuProvider {\n-    private final Handler handler = new Handler(Looper.getMainLooper());\n     private FragmentPagerBinding binding;\n     private LogPageAdapter adapter;\n     private MenuItem wordWrap;\n@@ -88,8 +87,13 @@ interface OptionsItemSelectListener {\n                 runAsync(() -> {\n                     var context = requireContext();\n                     var contentResolver = context.getContentResolver();\n+                    var values = new ContentValues();\n+                    values.put(MediaStore.MediaColumns.IS_PENDING, 1);\n+                    contentResolver.update(uri, values, null, null);\n                     try (var zipFd = contentResolver.openFileDescriptor(uri, \"wt\")) {\n                         LSPManagerServiceHolder.getService().getLogs(zipFd);\n+                        values.put(MediaStore.MediaColumns.IS_PENDING, 0);\n+                        contentResolver.update(uri, values, null, null);\n                         showHint(context.getString(R.string.logs_saved), true);\n                     } catch (Throwable e) {\n                         var cause = e.getCause();\n@@ -178,12 +182,6 @@ private void save() {\n         }\n     }\n \n-    @Override\n-    public void onDestroy() {\n-        handler.removeCallbacksAndMessages(null);\n-        super.onDestroy();\n-    }\n-\n     public static class LogFragment extends BaseFragment {\n         public static final int SCROLL_THRESHOLD = 500;\n         protected boolean verbose;\n@@ -300,8 +298,7 @@ public void scrollToBottom(LogsFragment logsFragment) {\n \n         void attachListeners() {\n             var parent = getParentFragment();\n-            if (parent instanceof LogsFragment) {\n-                var logsFragment = (LogsFragment) parent;\n+            if (parent instanceof LogsFragment logsFragment) {\n                 logsFragment.binding.appBar.setLifted(!binding.recyclerView.getBorderViewDelegate().isShowingTopBorder());\n                 binding.recyclerView.getBorderViewDelegate().setBorderVisibilityChangedListener((top, oldTop, bottom, oldBottom) -> logsFragment.binding.appBar.setLifted(!top));\n                 logsFragment.setOptionsItemSelectListener(item -> {",
      "parent_sha": "bee7938002e1707fc6d5301ed495a08cde368fef"
    }
  },
  {
    "oid": "17bf424d93852ebaec6c83dfa5ccb83ff0d0b9c2",
    "message": "Optimize cold luanch speed",
    "date": "2020-12-24T13:36:54Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/17bf424d93852ebaec6c83dfa5ccb83ff0d0b9c2",
    "details": {
      "sha": "271b02e65447bf8d771bd8ae058f4e5fe9d0dbfe",
      "filename": "xposed-bridge/src/main/java/de/robv/android/xposed/XposedInit.java",
      "status": "modified",
      "additions": 22,
      "deletions": 19,
      "changes": 41,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/17bf424d93852ebaec6c83dfa5ccb83ff0d0b9c2/xposed-bridge%2Fsrc%2Fmain%2Fjava%2Fde%2Frobv%2Fandroid%2Fxposed%2FXposedInit.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/17bf424d93852ebaec6c83dfa5ccb83ff0d0b9c2/xposed-bridge%2Fsrc%2Fmain%2Fjava%2Fde%2Frobv%2Fandroid%2Fxposed%2FXposedInit.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/xposed-bridge%2Fsrc%2Fmain%2Fjava%2Fde%2Frobv%2Fandroid%2Fxposed%2FXposedInit.java?ref=17bf424d93852ebaec6c83dfa5ccb83ff0d0b9c2",
      "patch": "@@ -22,8 +22,8 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.InputStreamReader;\n-import java.io.StringBufferInputStream;\n import java.lang.ref.WeakReference;\n+import java.lang.reflect.Field;\n import java.lang.reflect.Method;\n import java.util.ArrayList;\n import java.util.Arrays;\n@@ -34,7 +34,6 @@\n import java.util.zip.ZipEntry;\n import java.util.zip.ZipFile;\n \n-import dalvik.system.DexFile;\n import dalvik.system.PathClassLoader;\n import de.robv.android.xposed.annotation.ApiSensitive;\n import de.robv.android.xposed.annotation.Level;\n@@ -397,31 +396,36 @@ private static boolean loadModule(String apk, ClassLoader topClassLoader, boolea\n             return false;\n         }\n \n-        DexFile dexFile;\n+        ClassLoader mcl = new PathClassLoader(apk, topClassLoader);\n         try {\n-            dexFile = new DexFile(apk);\n-        } catch (IOException e) {\n-            Log.e(TAG, \"  Cannot load module\", e);\n-            return false;\n+            if (mcl.loadClass(INSTANT_RUN_CLASS) != null) {\n+                Log.e(TAG, \"  Cannot load module, please disable \\\"Instant Run\\\" in Android Studio.\");\n+                return false;\n+            }\n+        } catch (ClassNotFoundException ignored) {\n         }\n \n-        if (dexFile.loadClass(INSTANT_RUN_CLASS, topClassLoader) != null) {\n-            Log.e(TAG, \"  Cannot load module, please disable \\\"Instant Run\\\" in Android Studio.\");\n-            closeSilently(dexFile);\n-            return false;\n+        try {\n+            if (mcl.loadClass(XposedBridge.class.getName()) != null) {\n+                Log.e(TAG, \"  Cannot load module:\");\n+                Log.e(TAG, \"  The Xposed API classes are compiled into the module's APK.\");\n+                Log.e(TAG, \"  This may cause strange issues and must be fixed by the module developer.\");\n+                Log.e(TAG, \"  For details, see: http://api.xposed.info/using.html\");\n+                return false;\n+            }\n+        } catch (ClassNotFoundException ignored) {\n         }\n \n-        if (dexFile.loadClass(XposedBridge.class.getName(), topClassLoader) != null) {\n+        try {\n+            Field parentField = ClassLoader.class.getDeclaredField(\"parent\");\n+            parentField.setAccessible(true);\n+            parentField.set(mcl, XposedInit.class.getClassLoader());\n+        } catch (NoSuchFieldException | IllegalAccessException e) {\n             Log.e(TAG, \"  Cannot load module:\");\n-            Log.e(TAG, \"  The Xposed API classes are compiled into the module's APK.\");\n-            Log.e(TAG, \"  This may cause strange issues and must be fixed by the module developer.\");\n-            Log.e(TAG, \"  For details, see: http://api.xposed.info/using.html\");\n-            closeSilently(dexFile);\n+            Log.e(TAG, \"  Classloader cannot change parent.\");\n             return false;\n         }\n \n-        closeSilently(dexFile);\n-\n         ZipFile zipFile = null;\n         InputStream is;\n         try {\n@@ -439,7 +443,6 @@ private static boolean loadModule(String apk, ClassLoader topClassLoader, boolea\n             return false;\n         }\n \n-        ClassLoader mcl = new PathClassLoader(apk, XposedInit.class.getClassLoader());\n         BufferedReader moduleClassesReader = new BufferedReader(new InputStreamReader(is));\n         try {\n             String moduleClassName;",
      "parent_sha": "8c838c6d6dd8e50f4b7da5596b45f3e8e6aac01a"
    }
  },
  {
    "oid": "490aeae95d451338b203456aa1cd6d3948866a8a",
    "message": "fix order by release time (#265)",
    "date": "2021-03-04T09:20:39Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/490aeae95d451338b203456aa1cd6d3948866a8a",
    "details": {
      "sha": "fd8e4ba1a0e3ea6f3a32240013b174c96bae4e8e",
      "filename": "app/src/main/java/io/github/lsposed/manager/ui/activity/RepoActivity.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/490aeae95d451338b203456aa1cd6d3948866a8a/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Fui%2Factivity%2FRepoActivity.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/490aeae95d451338b203456aa1cd6d3948866a8a/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Fui%2Factivity%2FRepoActivity.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Fui%2Factivity%2FRepoActivity.java?ref=490aeae95d451338b203456aa1cd6d3948866a8a",
      "patch": "@@ -167,7 +167,7 @@ public void setData(Collection<OnlineModule> modules) {\n             if (sort == 0) {\n                 fullList.sort((o1, o2) -> labelComparator.compare(o1.getDescription(), o2.getDescription()));\n             } else if (sort == 1) {\n-                fullList.sort(Collections.reverseOrder(Comparator.comparing(o -> Instant.parse(o.getUpdatedAt()))));\n+                fullList.sort(Collections.reverseOrder(Comparator.comparing(o -> Instant.parse(o.getReleases().get(0).getUpdatedAt()))));\n             }\n             String queryStr = searchView != null ? searchView.getQuery().toString() : \"\";\n             runOnUiThread(() -> getFilter().filter(queryStr));",
      "parent_sha": "ef7e3d07c571e980360d43b405d9a4d7d8fe6a82"
    }
  },
  {
    "oid": "7ea7f9e9b69d3378ff63154b71e1894238239cde",
    "message": "What a Terrible Failure (#868)",
    "date": "2021-08-07T13:09:35Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/7ea7f9e9b69d3378ff63154b71e1894238239cde",
    "details": {
      "sha": "9bf759fcdbd5a4e36a7aa67460442d2d4c5c820e",
      "filename": "core/src/main/java/org/lsposed/lspd/service/LSPManagerService.java",
      "status": "modified",
      "additions": 13,
      "deletions": 2,
      "changes": 15,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/7ea7f9e9b69d3378ff63154b71e1894238239cde/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FLSPManagerService.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/7ea7f9e9b69d3378ff63154b71e1894238239cde/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FLSPManagerService.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FLSPManagerService.java?ref=7ea7f9e9b69d3378ff63154b71e1894238239cde",
      "patch": "@@ -25,6 +25,7 @@\n import android.app.IServiceConnection;\n import android.content.ComponentName;\n import android.content.Intent;\n+import android.content.pm.ApplicationInfo;\n import android.content.pm.PackageInfo;\n import android.content.pm.PackageManager;\n import android.content.pm.ResolveInfo;\n@@ -123,8 +124,18 @@ public String[] enabledModules() {\n     @Override\n     public boolean enableModule(String packageName) throws RemoteException {\n         PackageInfo pkgInfo = PackageService.getPackageInfo(packageName, PackageService.MATCH_ALL_FLAGS, 0);\n-        if (pkgInfo == null) return false;\n-        return ConfigManager.getInstance().enableModule(packageName, pkgInfo.applicationInfo);\n+        if (pkgInfo != null) {\n+            ApplicationInfo appInfo;\n+            try {\n+                appInfo = pkgInfo.applicationInfo;\n+            } catch (Throwable t) {\n+                Log.wtf(TAG, t);\n+                throw t;\n+            }\n+            return ConfigManager.getInstance().enableModule(packageName, appInfo);\n+        } else {\n+            return false;\n+        }\n     }\n \n     @Override",
      "parent_sha": "29afb441d8775df0996256e4d4e33f3343444df8"
    }
  },
  {
    "oid": "fd2162bffa523fc539ba6030e91a559c4f4a2b88",
    "message": "[core] Skip updating cache again when force update (#1127)",
    "date": "2021-09-18T03:35:22Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/fd2162bffa523fc539ba6030e91a559c4f4a2b88",
    "details": {
      "sha": "dea0ead2a15c4a9110808d370193d925a53e0e1a",
      "filename": "core/src/main/java/org/lsposed/lspd/service/ConfigManager.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/fd2162bffa523fc539ba6030e91a559c4f4a2b88/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigManager.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/fd2162bffa523fc539ba6030e91a559c4f4a2b88/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigManager.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigManager.java?ref=fd2162bffa523fc539ba6030e91a559c4f4a2b88",
      "patch": "@@ -596,7 +596,9 @@ public boolean updateModuleApkPath(String packageName, String apkPath, boolean f\n             else\n                 count = 0;\n         }\n-        if (count > 0) {\n+        // force update is because cache is already update to date\n+        // skip caching again\n+        if (!force && count > 0) {\n             // Called by oneway binder\n             updateCaches(true);\n             return true;",
      "parent_sha": "ec0dac16836e7c75969db62a5ce47652aafb409b"
    }
  },
  {
    "oid": "2863fef5a1de23d907b7402df00b64410223af0c",
    "message": "Fix icon again (#1424)",
    "date": "2021-11-22T08:29:41Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/2863fef5a1de23d907b7402df00b64410223af0c",
    "details": {
      "sha": "c9f047711ab6765357d187513c8afb3747f9b56c",
      "filename": "app/src/main/java/org/lsposed/manager/ui/activity/base/BaseActivity.java",
      "status": "modified",
      "additions": 10,
      "deletions": 6,
      "changes": 16,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/2863fef5a1de23d907b7402df00b64410223af0c/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Factivity%2Fbase%2FBaseActivity.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/2863fef5a1de23d907b7402df00b64410223af0c/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Factivity%2Fbase%2FBaseActivity.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Factivity%2Fbase%2FBaseActivity.java?ref=2863fef5a1de23d907b7402df00b64410223af0c",
      "patch": "@@ -23,23 +23,18 @@\n import android.app.ActivityManager;\n import android.content.res.Resources;\n import android.graphics.Bitmap;\n-import android.graphics.BitmapFactory;\n import android.graphics.Canvas;\n import android.graphics.Color;\n-import android.graphics.Rect;\n import android.graphics.drawable.BitmapDrawable;\n import android.os.Bundle;\n-import android.util.Log;\n import android.view.Window;\n \n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n-import androidx.core.graphics.drawable.RoundedBitmapDrawableFactory;\n \n import com.google.android.material.color.DynamicColors;\n import com.google.android.material.dialog.MaterialAlertDialogBuilder;\n \n-import org.lsposed.manager.App;\n import org.lsposed.manager.BuildConfig;\n import org.lsposed.manager.ConfigManager;\n import org.lsposed.manager.R;\n@@ -84,7 +79,16 @@ protected void onStart() {\n         for (var task : getSystemService(ActivityManager.class).getAppTasks()) {\n             task.setExcludeFromRecents(false);\n         }\n-        Bitmap icon = ((BitmapDrawable) getApplicationInfo().loadIcon(getPackageManager())).getBitmap();\n+        Bitmap icon;\n+        var drawable = getApplicationInfo().loadIcon(getPackageManager());\n+        if (drawable instanceof BitmapDrawable) {\n+            icon = ((BitmapDrawable) drawable).getBitmap();\n+        } else {\n+            icon = Bitmap.createBitmap(drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight(), Bitmap.Config.ARGB_8888);\n+            final Canvas canvas = new Canvas(icon);\n+            drawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight());\n+            drawable.draw(canvas);\n+        }\n         setTaskDescription(new ActivityManager.TaskDescription(getTitle().toString(), icon));\n         icon.recycle();\n     }",
      "parent_sha": "45899cdf3e12307050d5c7d39c50570d7743e0ba"
    }
  },
  {
    "oid": "630936a6ecdfca1065cffe616f389e07572ef049",
    "message": "Fix update link",
    "date": "2020-12-22T15:01:45Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/630936a6ecdfca1065cffe616f389e07572ef049",
    "details": {
      "sha": "54be3d22186a957ad0dea0c933dfe2f5985e95aa",
      "filename": "app/src/main/java/org/meowcat/edxposed/manager/util/json/JSONUtils.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/630936a6ecdfca1065cffe616f389e07572ef049/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fmeowcat%2Fedxposed%2Fmanager%2Futil%2Fjson%2FJSONUtils.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/630936a6ecdfca1065cffe616f389e07572ef049/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fmeowcat%2Fedxposed%2Fmanager%2Futil%2Fjson%2FJSONUtils.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fmeowcat%2Fedxposed%2Fmanager%2Futil%2Fjson%2FJSONUtils.java?ref=630936a6ecdfca1065cffe616f389e07572ef049",
      "patch": "@@ -9,7 +9,7 @@\n \n public class JSONUtils {\n \n-    public static final String JSON_LINK = \"http://edxp.meowcat.org/assets/version.json\";\n+    public static final String JSON_LINK = \"https://edxp.meowcat.org/assets/version.json\";\n \n     public static String getFileContent(String url) throws IOException {\n         HttpURLConnection c = (HttpURLConnection) new URL(url).openConnection();",
      "parent_sha": "29c8d042f56ec43747ad1418e01b44ed056bb146"
    }
  },
  {
    "oid": "64c89d7fa7652aba689a38b156d025a3138e5d94",
    "message": "[core] Compatible with applications with 32-bit native libraries only (#786)\n\nif the target application with 32-bit native libraries only, we don't need 64-bit nativepath included\n\nCo-authored-by: CallMESuper <zj7859256@gmail.com>",
    "date": "2021-06-28T09:26:10Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/64c89d7fa7652aba689a38b156d025a3138e5d94",
    "details": {
      "sha": "631b408ead0e7fb043f01c7909a986983dc86ce6",
      "filename": "core/src/main/java/de/robv/android/xposed/XposedInit.java",
      "status": "modified",
      "additions": 9,
      "deletions": 2,
      "changes": 11,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/64c89d7fa7652aba689a38b156d025a3138e5d94/core%2Fsrc%2Fmain%2Fjava%2Fde%2Frobv%2Fandroid%2Fxposed%2FXposedInit.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/64c89d7fa7652aba689a38b156d025a3138e5d94/core%2Fsrc%2Fmain%2Fjava%2Fde%2Frobv%2Fandroid%2Fxposed%2FXposedInit.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Fde%2Frobv%2Fandroid%2Fxposed%2FXposedInit.java?ref=64c89d7fa7652aba689a38b156d025a3138e5d94",
      "patch": "@@ -369,8 +369,15 @@ private static boolean loadModule(String name, String apk) {\n \n         // module can load it's own so\n         StringBuilder nativePath = new StringBuilder();\n-        for (String i : Build.SUPPORTED_ABIS) {\n-            nativePath.append(apk).append(\"!/lib/\").append(i).append(File.pathSeparator);\n+        // Compatible with applications with 32-bit native libraries only\n+        if (android.os.Process.is64Bit()) {\n+           for (String i : Build.SUPPORTED_64_BIT_ABIS) {\n+                nativePath.append(apk).append(\"!/lib/\").append(i).append(File.pathSeparator);\n+           }\n+        } else {\n+            for (String i : Build.SUPPORTED_32_BIT_ABIS) {\n+                nativePath.append(apk).append(\"!/lib/\").append(i).append(File.pathSeparator);\n+            }\n         }\n         // Log.d(TAG, \"Allowed native path\" + nativePath.toString());\n         ClassLoader initLoader = XposedInit.class.getClassLoader();",
      "parent_sha": "21f9aedce6e495ac798c78b0113d30a461270537"
    }
  },
  {
    "oid": "d9f3ac1badd3e2490237201c1dbe10f4bdc8ee46",
    "message": "Allow nested xposedcontextwrapper",
    "date": "2023-02-26T08:48:49Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/d9f3ac1badd3e2490237201c1dbe10f4bdc8ee46",
    "details": {
      "sha": "66925c5d07c655f201e4e0b685d1d6c0237c3e50",
      "filename": "core/src/main/java/io/github/libxposed/XposedContextWrapper.java",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/d9f3ac1badd3e2490237201c1dbe10f4bdc8ee46/core%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flibxposed%2FXposedContextWrapper.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/d9f3ac1badd3e2490237201c1dbe10f4bdc8ee46/core%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flibxposed%2FXposedContextWrapper.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flibxposed%2FXposedContextWrapper.java?ref=d9f3ac1badd3e2490237201c1dbe10f4bdc8ee46",
      "patch": "@@ -5,7 +5,11 @@\n \n public class XposedContextWrapper extends ContextWrapper implements XposedInterface {\n \n-    public XposedContextWrapper(XposedContext base) {\n+    XposedContextWrapper(XposedContext base) {\n+        super(base);\n+    }\n+\n+    public XposedContextWrapper(XposedContextWrapper base) {\n         super(base);\n     }\n \n@@ -31,7 +35,7 @@ final public void log(String message, Throwable throwable) {\n \n     @Override\n     final protected void attachBaseContext(Context base) {\n-        if (base instanceof XposedContext) {\n+        if (base instanceof XposedContext || base instanceof XposedContextWrapper) {\n             super.attachBaseContext(base);\n         } else {\n             throw new IllegalArgumentException();",
      "parent_sha": "31674f589eabb6342bce27cbc3e9b8787440bdf5"
    }
  },
  {
    "oid": "d08191a005cc67cb142cce2b97d96c8bdb6992e9",
    "message": "[parastic] Original manager should also hook handleActivity (#1175)\n\nCo-authored-by: \u5357\u5bab\u96ea\u73ca <vvb2060@gmail.com>",
    "date": "2021-09-25T15:40:40Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/d08191a005cc67cb142cce2b97d96c8bdb6992e9",
    "details": {
      "sha": "d6e8b872d76b71a0dfafc7e120c961176ab90863",
      "filename": "core/src/main/java/org/lsposed/lspd/util/ParasiticManagerHooker.java",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/d08191a005cc67cb142cce2b97d96c8bdb6992e9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Futil%2FParasiticManagerHooker.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/d08191a005cc67cb142cce2b97d96c8bdb6992e9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Futil%2FParasiticManagerHooker.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Futil%2FParasiticManagerHooker.java?ref=d08191a005cc67cb142cce2b97d96c8bdb6992e9",
      "patch": "@@ -89,7 +89,6 @@ protected void beforeHookedMethod(MethodHookParam param) {\n                 \"android.app.ActivityThread$AppBindData\",\n                 managerApkHooker);\n \n-\n         var unhooks = new XC_MethodHook.Unhook[]{null};\n         unhooks[0] = XposedHelpers.findAndHookMethod(\n                 LoadedApk.class, \"getClassLoader\", new XC_MethodHook() {\n@@ -102,8 +101,6 @@ protected void afterHookedMethod(MethodHookParam param) {\n                     }\n                 });\n \n-        if (Process.myUid() != BuildConfig.MANAGER_INJECTED_UID) return;\n-\n         var activityHooker = new XC_MethodHook() {\n             @Override\n             protected void beforeHookedMethod(MethodHookParam param) {\n@@ -132,6 +129,8 @@ protected void beforeHookedMethod(MethodHookParam param) {\n             XposedBridge.hookAllMethods(XposedHelpers.findClass(\"android.app.ActivityThread$ApplicationThread\", ActivityThread.class.getClassLoader()), \"scheduleLaunchActivity\", activityHooker);\n         }\n \n+        if (Process.myUid() != BuildConfig.MANAGER_INJECTED_UID) return;\n+\n         XposedBridge.hookAllMethods(ActivityThread.class, \"handleReceiver\", new XC_MethodReplacement() {\n             @Override\n             protected Object replaceHookedMethod(MethodHookParam param) {",
      "parent_sha": "0524ebc2f2c24cb10769d3ef455f32c3c3d22c55"
    }
  },
  {
    "oid": "9896a1b193a23fee5be5a262ade99830f32e7aee",
    "message": "[core] Fix stupid error in package name check (#349)",
    "date": "2021-03-13T03:30:22Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/9896a1b193a23fee5be5a262ade99830f32e7aee",
    "details": {
      "sha": "d4ff287bd04d851fb4add5214ddec578386834b4",
      "filename": "core/src/main/java/org/lsposed/lspd/service/PackageService.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/9896a1b193a23fee5be5a262ade99830f32e7aee/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FPackageService.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/9896a1b193a23fee5be5a262ade99830f32e7aee/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FPackageService.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FPackageService.java?ref=9896a1b193a23fee5be5a262ade99830f32e7aee",
      "patch": "@@ -252,7 +252,7 @@ public static synchronized boolean installManagerIfAbsent(String packageName, Fi\n                 boolean signatureMatch = InstallerVerifier.verifyInstallerSignature(pkgInfo.applicationInfo);\n                 if (versionMatch && signatureMatch && pkgInfo.versionCode >= BuildConfig.VERSION_CODE)\n                     return false;\n-                if (packageName != BuildConfig.DEFAULT_MANAGER_PACKAGE_NAME || !signatureMatch\n+                if (!BuildConfig.DEFAULT_MANAGER_PACKAGE_NAME.equals(packageName) || !signatureMatch\n                         || !versionMatch && pkgInfo.versionCode > BuildConfig.VERSION_CODE)\n                     uninstallPackage(new VersionedPackage(pkgInfo.packageName, pkgInfo.versionCode));\n             }",
      "parent_sha": "1de629f6e87feaed9e455d85f49eedc82481df01"
    }
  },
  {
    "oid": "14b2e5b20d2a8481f7cc5ad39fde79d298cb41ec",
    "message": "[app] Fix deny list hint (#1433)",
    "date": "2021-11-23T14:42:49Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/14b2e5b20d2a8481f7cc5ad39fde79d298cb41ec",
    "details": {
      "sha": "2b4b1f9eda5208cbf25fc7825c4be423a340119c",
      "filename": "app/src/main/java/org/lsposed/manager/adapters/ScopeAdapter.java",
      "status": "modified",
      "additions": 19,
      "deletions": 20,
      "changes": 39,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/14b2e5b20d2a8481f7cc5ad39fde79d298cb41ec/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fadapters%2FScopeAdapter.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/14b2e5b20d2a8481f7cc5ad39fde79d298cb41ec/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fadapters%2FScopeAdapter.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fadapters%2FScopeAdapter.java?ref=14b2e5b20d2a8481f7cc5ad39fde79d298cb41ec",
      "patch": "@@ -365,24 +365,22 @@ public void onBindViewHolder(@NonNull ViewHolder holder, int position) {\n         int userId = appInfo.applicationInfo.uid / 100000;\n         appName = android ? activity.getString(R.string.android_framework) : appInfo.label;\n         holder.appName.setText(appName);\n-        GlideApp.with(holder.appIcon)\n-                .load(appInfo.packageInfo)\n-                .into(new CustomTarget<Drawable>() {\n-                    @Override\n-                    public void onResourceReady(@NonNull Drawable resource, @Nullable Transition<? super Drawable> transition) {\n-                        holder.appIcon.setImageDrawable(resource);\n-                    }\n+        GlideApp.with(holder.appIcon).load(appInfo.packageInfo).into(new CustomTarget<Drawable>() {\n+            @Override\n+            public void onResourceReady(@NonNull Drawable resource, @Nullable Transition<? super Drawable> transition) {\n+                holder.appIcon.setImageDrawable(resource);\n+            }\n \n-                    @Override\n-                    public void onLoadCleared(@Nullable Drawable placeholder) {\n+            @Override\n+            public void onLoadCleared(@Nullable Drawable placeholder) {\n \n-                    }\n+            }\n \n-                    @Override\n-                    public void onLoadFailed(@Nullable Drawable errorDrawable) {\n-                        holder.appIcon.setImageDrawable(pm.getDefaultActivityIcon());\n-                    }\n-                });\n+            @Override\n+            public void onLoadFailed(@Nullable Drawable errorDrawable) {\n+                holder.appIcon.setImageDrawable(pm.getDefaultActivityIcon());\n+            }\n+        });\n         SpannableStringBuilder sb = new SpannableStringBuilder(android ? \"\" : activity.getString(R.string.app_description, appInfo.packageName, appInfo.packageInfo.versionName));\n         if (android) holder.appDescription.setVisibility(View.GONE);\n         else {\n@@ -402,10 +400,6 @@ public void onLoadFailed(@Nullable Drawable errorDrawable) {\n                 sb.setSpan(styleSpan, sb.length() - recommended.length(), sb.length(), Spannable.SPAN_INCLUSIVE_INCLUSIVE);\n             }\n             sb.setSpan(foregroundColorSpan, sb.length() - recommended.length(), sb.length(), Spannable.SPAN_INCLUSIVE_INCLUSIVE);\n-            holder.hint.setText(sb);\n-            holder.hint.setVisibility(View.VISIBLE);\n-        } else {\n-            holder.hint.setVisibility(View.GONE);\n         }\n         if (deny) {\n             if (sb.length() != 0) sb.append(\"\\n\");\n@@ -421,7 +415,12 @@ public void onLoadFailed(@Nullable Drawable errorDrawable) {\n             }\n             sb.setSpan(foregroundColorSpan, sb.length() - denylist.length(), sb.length(), Spannable.SPAN_INCLUSIVE_INCLUSIVE);\n         }\n-        holder.hint.setText(sb);\n+        if (sb.length() == 0) {\n+            holder.hint.setVisibility(View.GONE);\n+        } else {\n+            holder.hint.setText(sb);\n+            holder.hint.setVisibility(View.VISIBLE);\n+        }\n \n         holder.itemView.setOnCreateContextMenuListener((menu, v, menuInfo) -> {\n             activity.getMenuInflater().inflate(R.menu.menu_app_item, menu);",
      "parent_sha": "69fe97b66ebdfa082f3cf69057f1c98a608fe990"
    }
  },
  {
    "oid": "2b40dded041bf7a41724723ae6f3adc7fc451695",
    "message": "Fix DownloadActivity crash",
    "date": "2020-11-21T13:37:01Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/2b40dded041bf7a41724723ae6f3adc7fc451695",
    "details": {
      "sha": "68d07fa92380b2209cfadc23481c98fcc53b033a",
      "filename": "app/src/main/java/org/meowcat/edxposed/manager/DownloadActivity.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/2b40dded041bf7a41724723ae6f3adc7fc451695/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fmeowcat%2Fedxposed%2Fmanager%2FDownloadActivity.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/2b40dded041bf7a41724723ae6f3adc7fc451695/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fmeowcat%2Fedxposed%2Fmanager%2FDownloadActivity.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Fmeowcat%2Fedxposed%2Fmanager%2FDownloadActivity.java?ref=2b40dded041bf7a41724723ae6f3adc7fc451695",
      "patch": "@@ -377,7 +377,7 @@ class HeaderViewHolder extends RecyclerView.ViewHolder {\n \n             HeaderViewHolder(View view) {\n                 super(view);\n-                title = findViewById(android.R.id.title);\n+                title = view.findViewById(android.R.id.title);\n             }\n         }\n     }",
      "parent_sha": "d81e6804a41c22061fb45d39341490aa0cc94c2b"
    }
  },
  {
    "oid": "9ccef6b7945f876f381c96811657b0993cd14df2",
    "message": "[core] Fix broadcast receiver after soft reboot (#739)\n\n`sendToBridge` stucks the binder thread so that\r\n`ActivityManagerService`'s receipent won't be called",
    "date": "2021-06-09T22:53:53Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/9ccef6b7945f876f381c96811657b0993cd14df2",
    "details": {
      "sha": "07b04c80e48f9dd66f3fc69a763289932838b6f3",
      "filename": "core/src/main/java/org/lsposed/lspd/service/BridgeService.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/9ccef6b7945f876f381c96811657b0993cd14df2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FBridgeService.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/9ccef6b7945f876f381c96811657b0993cd14df2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FBridgeService.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FBridgeService.java?ref=9ccef6b7945f876f381c96811657b0993cd14df2",
      "patch": "@@ -94,7 +94,7 @@ public void binderDied() {\n             bridgeService.unlinkToDeath(this, 0);\n             bridgeService = null;\n             listener.onSystemServerDied();\n-            sendToBridge(serviceBinder, true);\n+            new Thread(()-> sendToBridge(serviceBinder, true)).start();\n         }\n     };\n ",
      "parent_sha": "547c512546f95d11f8f48b809e4c7a1e107a6891"
    }
  },
  {
    "oid": "5a143c9855a7f1c9bcfb51a62b63f7627f867897",
    "message": "Log LRU (#1822)\n\nCo-authored-by: \u6b8b\u9875 <31466456+canyie@users.noreply.github.com>",
    "date": "2022-04-09T10:56:52Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/5a143c9855a7f1c9bcfb51a62b63f7627f867897",
    "details": {
      "sha": "6f6157987c9cffcd0955dc897238c209c9759698",
      "filename": "daemon/src/main/java/org/lsposed/lspd/service/LogcatService.java",
      "status": "modified",
      "additions": 34,
      "deletions": 2,
      "changes": 36,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/5a143c9855a7f1c9bcfb51a62b63f7627f867897/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FLogcatService.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/5a143c9855a7f1c9bcfb51a62b63f7627f867897/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FLogcatService.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FLogcatService.java?ref=5a143c9855a7f1c9bcfb51a62b63f7627f867897",
      "patch": "@@ -14,6 +14,7 @@\n import java.nio.file.LinkOption;\n import java.nio.file.Path;\n import java.nio.file.Paths;\n+import java.util.LinkedHashMap;\n \n public class LogcatService implements Runnable {\n     private static final String TAG = \"LSPosedLogcat\";\n@@ -25,6 +26,28 @@ public class LogcatService implements Runnable {\n     private int verboseFd = -1;\n     private Thread thread = null;\n \n+    static class LogLRU extends LinkedHashMap<File, Object> {\n+        private static final int MAX_ENTRIES = 10;\n+\n+        public LogLRU() {\n+            super(MAX_ENTRIES, 1f, false);\n+        }\n+\n+        @Override\n+        synchronized protected boolean removeEldestEntry(Entry<File, Object> eldest) {\n+            if (size() > MAX_ENTRIES && eldest.getKey().delete()) {\n+                Log.d(TAG, \"Deleted old log \" + eldest.getKey().getAbsolutePath());\n+                return true;\n+            }\n+            return false;\n+        }\n+    }\n+\n+    @SuppressWarnings(\"MismatchedQueryAndUpdateOfCollection\")\n+    private final LinkedHashMap<File, Object> moduleLogs = new LogLRU();\n+    @SuppressWarnings(\"MismatchedQueryAndUpdateOfCollection\")\n+    private final LinkedHashMap<File, Object> verboseLogs = new LogLRU();\n+\n     @SuppressLint(\"UnsafeDynamicallyLoadedCode\")\n     public LogcatService() {\n         String libraryPath = System.getProperty(\"lsp.library.path\");\n@@ -89,8 +112,17 @@ private int refreshFd(boolean isVerboseLog) {\n             Log.i(TAG, \"New log file: \" + log);\n             ConfigFileManager.chattr0(log.toPath().getParent());\n             int fd = ParcelFileDescriptor.open(log, mode).detachFd();\n-            if (isVerboseLog) verboseFd = fd;\n-            else modulesFd = fd;\n+            if (isVerboseLog) {\n+                synchronized (verboseLogs) {\n+                    verboseLogs.put(log, new Object());\n+                }\n+                verboseFd = fd;\n+            } else {\n+                synchronized (moduleLogs) {\n+                    moduleLogs.put(log, new Object());\n+                }\n+                modulesFd = fd;\n+            }\n             return fd;\n         } catch (IOException e) {\n             if (isVerboseLog) verboseFd = -1;",
      "parent_sha": "d1c528366134c33eb72d8aa275d02c96fceda818"
    }
  },
  {
    "oid": "e2651eb4b246c06c419c10771eb9495f86466b13",
    "message": "[app] Fix crash on #1207 (#1230)",
    "date": "2021-10-06T15:41:34Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/e2651eb4b246c06c419c10771eb9495f86466b13",
    "details": {
      "sha": "a92cedffdabcfbfe65645e4342a252c10a175d8b",
      "filename": "app/src/main/java/org/lsposed/manager/ui/activity/base/BaseActivity.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/e2651eb4b246c06c419c10771eb9495f86466b13/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Factivity%2Fbase%2FBaseActivity.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/e2651eb4b246c06c419c10771eb9495f86466b13/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Factivity%2Fbase%2FBaseActivity.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Factivity%2Fbase%2FBaseActivity.java?ref=e2651eb4b246c06c419c10771eb9495f86466b13",
      "patch": "@@ -78,7 +78,9 @@ public void onApplyTranslucentSystemBars() {\n         window.setStatusBarColor(Color.TRANSPARENT);\n \n         window.getDecorView().post(() -> {\n-            if (window.getDecorView().getRootWindowInsets().getSystemWindowInsetBottom() >= Resources.getSystem().getDisplayMetrics().density * 40) {\n+            var rootWindowInsets = window.getDecorView().getRootWindowInsets();\n+            if (rootWindowInsets != null &&\n+                    rootWindowInsets.getSystemWindowInsetBottom() >= Resources.getSystem().getDisplayMetrics().density * 40) {\n                 window.setNavigationBarColor(ResourceUtils.resolveColor(getTheme(), android.R.attr.navigationBarColor) & 0x00ffffff | -0x20000000);\n             } else {\n                 window.setNavigationBarColor(Color.TRANSPARENT);",
      "parent_sha": "8e9fa6eb5b911cd0b2810bf9e6250d06b665185e"
    }
  },
  {
    "oid": "783e2bf898ec801e6bb57f7e0836e676231c4e15",
    "message": "Should check visiblyInitialized for pending hooks in R",
    "date": "2020-12-10T13:57:12Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/783e2bf898ec801e6bb57f7e0836e676231c4e15",
    "details": {
      "sha": "92e86eea270e4dfccbe4c396fcd0291b0366193b",
      "filename": "edxp-common/src/main/java/com/elderdrivers/riru/edxp/util/ClassUtils.java",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/783e2bf898ec801e6bb57f7e0836e676231c4e15/edxp-common%2Fsrc%2Fmain%2Fjava%2Fcom%2Felderdrivers%2Friru%2Fedxp%2Futil%2FClassUtils.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/783e2bf898ec801e6bb57f7e0836e676231c4e15/edxp-common%2Fsrc%2Fmain%2Fjava%2Fcom%2Felderdrivers%2Friru%2Fedxp%2Futil%2FClassUtils.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/edxp-common%2Fsrc%2Fmain%2Fjava%2Fcom%2Felderdrivers%2Friru%2Fedxp%2Futil%2FClassUtils.java?ref=783e2bf898ec801e6bb57f7e0836e676231c4e15",
      "patch": "@@ -29,12 +29,16 @@ public static int getClassStatus(Class clazz, boolean isUnsigned) {\n      * 5.0-8.0: kInitialized = 10 int\n      * 8.1:     kInitialized = 11 int\n      * 9.0+:    kInitialized = 14 uint8_t\n+     * 11.0+:   kVisiblyInitialized = 15 uint8_t\n      */\n     @ApiSensitive(Level.MIDDLE)\n     public static boolean isInitialized(Class clazz) {\n-        if (Build.VERSION.SDK_INT >= 28) {\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.R) {\n+            return getClassStatus(clazz, true) == 15;\n+        }\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {\n             return getClassStatus(clazz, true) == 14;\n-        } else if (Build.VERSION.SDK_INT == 27) {\n+        } else if (Build.VERSION.SDK_INT == Build.VERSION_CODES.O_MR1) {\n             return getClassStatus(clazz, false) == 11;\n         } else {\n             return getClassStatus(clazz, false) == 10;",
      "parent_sha": "b2c03cc8cec2e76f94535920d178a7c19dcd0e47"
    }
  },
  {
    "oid": "25dc7c0bc81d82bf406d4be60f100d400753449e",
    "message": "Close JarFile",
    "date": "2020-12-21T07:56:35Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/25dc7c0bc81d82bf406d4be60f100d400753449e",
    "details": {
      "sha": "bbefcb67b02b533b61222eaf95aff0dc1f5beafb",
      "filename": "xposed-bridge/src/main/java/com/elderdrivers/riru/edxp/util/MetaDataReader.java",
      "status": "modified",
      "additions": 12,
      "deletions": 11,
      "changes": 23,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/25dc7c0bc81d82bf406d4be60f100d400753449e/xposed-bridge%2Fsrc%2Fmain%2Fjava%2Fcom%2Felderdrivers%2Friru%2Fedxp%2Futil%2FMetaDataReader.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/25dc7c0bc81d82bf406d4be60f100d400753449e/xposed-bridge%2Fsrc%2Fmain%2Fjava%2Fcom%2Felderdrivers%2Friru%2Fedxp%2Futil%2FMetaDataReader.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/xposed-bridge%2Fsrc%2Fmain%2Fjava%2Fcom%2Felderdrivers%2Friru%2Fedxp%2Futil%2FMetaDataReader.java?ref=25dc7c0bc81d82bf406d4be60f100d400753449e",
      "patch": "@@ -20,17 +20,18 @@ public static Map<String, Object> getMetaData(File apk) throws IOException {\n     }\n \n     private MetaDataReader(File apk) throws IOException {\n-        JarFile zip = new JarFile(apk);\n-        InputStream is = zip.getInputStream(zip.getEntry(\"AndroidManifest.xml\"));\n-        byte[] bytes =  getBytesFromInputStream(is);\n-        AxmlReader reader = new AxmlReader(bytes);\n-        reader.accept(new AxmlVisitor() {\n-            @Override\n-            public NodeVisitor child(String ns, String name) {\n-                NodeVisitor child = super.child(ns, name);\n-                return new ManifestTagVisitor(child);\n-            }\n-        });\n+        try(JarFile zip = new JarFile(apk)) {\n+            InputStream is = zip.getInputStream(zip.getEntry(\"AndroidManifest.xml\"));\n+            byte[] bytes =  getBytesFromInputStream(is);\n+            AxmlReader reader = new AxmlReader(bytes);\n+            reader.accept(new AxmlVisitor() {\n+                @Override\n+                public NodeVisitor child(String ns, String name) {\n+                    NodeVisitor child = super.child(ns, name);\n+                    return new ManifestTagVisitor(child);\n+                }\n+            });\n+        }\n     }\n \n     public static byte[] getBytesFromInputStream(InputStream inputStream) throws IOException {",
      "parent_sha": "7451fbbeda16e43f496855a9057f62c51a42d5bd"
    }
  },
  {
    "oid": "d2ea64d10ad88582471a477b3f1c242d80d46160",
    "message": "Don't hide android system",
    "date": "2021-01-29T12:04:37Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/d2ea64d10ad88582471a477b3f1c242d80d46160",
    "details": {
      "sha": "6c16352ff8495a79b58198d0866d4f85ccee1500",
      "filename": "app/src/main/java/io/github/lsposed/manager/adapters/AppAdapter.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/d2ea64d10ad88582471a477b3f1c242d80d46160/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Fadapters%2FAppAdapter.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/d2ea64d10ad88582471a477b3f1c242d80d46160/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Fadapters%2FAppAdapter.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Fadapters%2FAppAdapter.java?ref=d2ea64d10ad88582471a477b3f1c242d80d46160",
      "patch": "@@ -82,7 +82,7 @@ private void loadApps() {\n                 rmList.add(info);\n                 continue;\n             }\n-            if ((info.applicationInfo.flags & ApplicationInfo.FLAG_HAS_CODE) == 0) {\n+            if ((info.applicationInfo.flags & ApplicationInfo.FLAG_HAS_CODE) == 0 && !info.packageName.equals(\"android\")) {\n                 rmList.add(info);\n                 continue;\n             }",
      "parent_sha": "29426b4dc0144368859715cd4a32b13d0fa28fc6"
    }
  },
  {
    "oid": "e250b73f99300e3db6447e848164954cdf9583e2",
    "message": "[app] Fix hide translation contributors preference (#1108)",
    "date": "2021-09-14T04:58:32Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/e250b73f99300e3db6447e848164954cdf9583e2",
    "details": {
      "sha": "7e34c93d32ab5559c2fc7cca88d91d92cdf32d9e",
      "filename": "app/src/main/java/org/lsposed/manager/ui/fragment/SettingsFragment.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/e250b73f99300e3db6447e848164954cdf9583e2/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Ffragment%2FSettingsFragment.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/e250b73f99300e3db6447e848164954cdf9583e2/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Ffragment%2FSettingsFragment.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Fmanager%2Fui%2Ffragment%2FSettingsFragment.java?ref=e250b73f99300e3db6447e848164954cdf9583e2",
      "patch": "@@ -283,7 +283,7 @@ public void onCreatePreferencesFix(Bundle savedInstanceState, String rootKey) {\n             Preference translation_contributors = findPreference(\"translation_contributors\");\n             if (translation_contributors != null) {\n                 var translators = HtmlCompat.fromHtml(getString(R.string.translators), HtmlCompat.FROM_HTML_MODE_LEGACY);\n-                if (translators.equals(\"null\")) {\n+                if (translators.toString().equals(\"null\")) {\n                     translation_contributors.setVisible(false);\n                 } else {\n                     translation_contributors.setSummary(translators);",
      "parent_sha": "d226ce5e215a1dda25452597fa396eee52043255"
    }
  },
  {
    "oid": "c16176c637cb1a75633e29452099884998c6b377",
    "message": "[app] Fix manager activation (#848)",
    "date": "2021-08-06T06:33:35Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/c16176c637cb1a75633e29452099884998c6b377",
    "details": {
      "sha": "64e32e8535616b31711b64b01b0ba677b889835c",
      "filename": "core/src/main/java/org/lsposed/lspd/util/InstallerVerifier.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/c16176c637cb1a75633e29452099884998c6b377/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Futil%2FInstallerVerifier.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/c16176c637cb1a75633e29452099884998c6b377/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Futil%2FInstallerVerifier.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Futil%2FInstallerVerifier.java?ref=c16176c637cb1a75633e29452099884998c6b377",
      "patch": "@@ -84,7 +84,7 @@ public static void hookXposedInstaller(final ClassLoader classLoader, IBinder bi\n         Utils.logI(\"Found LSPosed Manager, hooking it\");\n         try {\n             var clazz = XposedHelpers.findClass(\"org.lsposed.manager.Constants\", classLoader);\n-            XposedHelpers.callStaticMethod(clazz, \"setBinder\", IBinder.class, binder);\n+            XposedHelpers.callStaticMethod(clazz, \"setBinder\", new Class[]{IBinder.class}, binder);\n             Utils.logI(\"Hooked LSPosed Manager\");\n         } catch (Throwable t) {\n             Utils.logW(\"Could not hook LSPosed Manager\", t);",
      "parent_sha": "36a1fe03e7b28e7f9c8ce7edfd8d2a62aa76e124"
    }
  },
  {
    "oid": "be1bbf7b9b25eca3c5db04ee49fc9f30f6c750b0",
    "message": "Fix module prefs (#1813)",
    "date": "2022-04-05T17:12:50Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/be1bbf7b9b25eca3c5db04ee49fc9f30f6c750b0",
    "details": {
      "sha": "bd04598b84549ff20f0b2be81a7a55e2a72949db",
      "filename": "daemon/src/main/java/org/lsposed/lspd/service/ConfigManager.java",
      "status": "modified",
      "additions": 8,
      "deletions": 10,
      "changes": 18,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/be1bbf7b9b25eca3c5db04ee49fc9f30f6c750b0/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigManager.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/be1bbf7b9b25eca3c5db04ee49fc9f30f6c750b0/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigManager.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigManager.java?ref=be1bbf7b9b25eca3c5db04ee49fc9f30f6c750b0",
      "patch": "@@ -242,10 +242,10 @@ private synchronized void updateConfig() {\n             miscPath = string;\n         }\n         try {\n-            Path p = Paths.get(miscPath);\n+            Path prefs = Paths.get(miscPath + \"/prefs\");\n             var perms = PosixFilePermissions.fromString(\"rwx--x--x\");\n-            Files.createDirectories(p, PosixFilePermissions.asFileAttribute(perms));\n-            walkFileTree(p, true, f -> SELinux.setFileContext(f.toString(), \"u:object_r:magisk_file:s0\"));\n+            Files.createDirectories(prefs, PosixFilePermissions.asFileAttribute(perms));\n+            walkFileTree(prefs, f -> SELinux.setFileContext(f.toString(), \"u:object_r:magisk_file:s0\"));\n         } catch (IOException e) {\n             Log.e(TAG, Log.getStackTraceString(e));\n         }\n@@ -975,14 +975,11 @@ public boolean isModule(int uid, String name) {\n         return module != null && module.appId == uid % PER_USER_RANGE;\n     }\n \n-    private void walkFileTree(Path rootDir, boolean skipRoot, Consumer<Path> action) throws IOException {\n+    private void walkFileTree(Path rootDir, Consumer<Path> action) throws IOException {\n         if (Files.notExists(rootDir)) return;\n         Files.walkFileTree(rootDir, new SimpleFileVisitor<>() {\n             @Override\n             public FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes attrs) {\n-                if (skipRoot && dir.equals(rootDir)) {\n-                    return FileVisitResult.CONTINUE;\n-                }\n                 action.accept(dir);\n                 return FileVisitResult.CONTINUE;\n             }\n@@ -999,10 +996,11 @@ public void ensureModulePrefsPermission(int uid, String packageName) {\n         if (packageName == null) return;\n         var path = Paths.get(getPrefsPath(packageName, uid));\n         try {\n-            Files.createDirectories(path);\n-            walkFileTree(path, false, p -> {\n+            var perms = PosixFilePermissions.fromString(\"rwx--x--x\");\n+            Files.createDirectories(path, PosixFilePermissions.asFileAttribute(perms));\n+            walkFileTree(path, p -> {\n                 try {\n-                    Os.chown(p.toString(), uid, 1000);\n+                    Os.chown(p.toString(), uid, uid);\n                 } catch (ErrnoException e) {\n                     Log.e(TAG, Log.getStackTraceString(e));\n                 }",
      "parent_sha": "be722b2e2eda3987db59fbaf1e8134e4c149bea9"
    }
  },
  {
    "oid": "46558c6bc96b2e9821026346e2edd43ca7a2aeb3",
    "message": "Try three times when setting classloader trusted\n\nIt may fail because of race, so try more as a temporary workaround",
    "date": "2023-06-25T14:03:34Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/46558c6bc96b2e9821026346e2edd43ca7a2aeb3",
    "details": {
      "sha": "2051bdd2da34150cba8da1db976fc08e18977102",
      "filename": "core/src/main/java/org/lsposed/lspd/hooker/OpenDexFileHooker.java",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/46558c6bc96b2e9821026346e2edd43ca7a2aeb3/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fhooker%2FOpenDexFileHooker.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/46558c6bc96b2e9821026346e2edd43ca7a2aeb3/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fhooker%2FOpenDexFileHooker.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fhooker%2FOpenDexFileHooker.java?ref=46558c6bc96b2e9821026346e2edd43ca7a2aeb3",
      "patch": "@@ -21,7 +21,14 @@ protected void afterHookedMethod(MethodHookParam<?> param) throws Throwable {\n         }\n         while (classLoader != null) {\n             if (classLoader == XposedHelpers.class.getClassLoader()) {\n-                HookBridge.setTrusted(param.getResult());\n+                // it may fail because of race, try more\n+                for (int i = 0; i < 3; i++) {\n+                    try {\n+                        HookBridge.setTrusted(param.getResult());\n+                        break;\n+                    } catch (SecurityException ignored) {\n+                    }\n+                }\n                 return;\n             } else {\n                 classLoader = classLoader.getParent();",
      "parent_sha": "40845b3f74f20e660d7a1acbe68f99eba1e0ac0a"
    }
  },
  {
    "oid": "645d7cfadf7db5b2bacf64d1005dc0323ac7a234",
    "message": "Fix Native Hook for modern API modules (#2632)",
    "date": "2023-07-16T03:29:57Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/645d7cfadf7db5b2bacf64d1005dc0323ac7a234",
    "details": {
      "sha": "75d3921392295726d320a46f23a07c12ed4a13a4",
      "filename": "core/src/main/java/org/lsposed/lspd/impl/LSPosedContext.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/645d7cfadf7db5b2bacf64d1005dc0323ac7a234/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fimpl%2FLSPosedContext.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/645d7cfadf7db5b2bacf64d1005dc0323ac7a234/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fimpl%2FLSPosedContext.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fimpl%2FLSPosedContext.java?ref=645d7cfadf7db5b2bacf64d1005dc0323ac7a234",
      "patch": "@@ -212,11 +212,11 @@ public String getProcessName() {\n                 }\n             }\n             Log.d(TAG, \"Loaded module \" + module.packageName + \": \" + ctx);\n+            module.file.moduleLibraryNames.forEach(NativeAPI::recordNativeEntrypoint);\n             return true;\n         } catch (Throwable e) {\n             Log.d(TAG, \"Loading module \" + module.packageName, e);\n         }\n-        module.file.moduleLibraryNames.forEach(NativeAPI::recordNativeEntrypoint);\n         return false;\n     }\n ",
      "parent_sha": "a483aa3248026f3bd6a0dfa646b146ef32ec0c9d"
    }
  },
  {
    "oid": "c389162c7ad9b4b48cfe45b8ab5475e5db14c993",
    "message": "Fix compatibility",
    "date": "2023-02-26T08:48:49Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/c389162c7ad9b4b48cfe45b8ab5475e5db14c993",
    "details": {
      "sha": "9575252a2bc291d16847e3d15da04fa152075f3a",
      "filename": "core/src/main/java/de/robv/android/xposed/XC_MethodHook.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/c389162c7ad9b4b48cfe45b8ab5475e5db14c993/core%2Fsrc%2Fmain%2Fjava%2Fde%2Frobv%2Fandroid%2Fxposed%2FXC_MethodHook.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/c389162c7ad9b4b48cfe45b8ab5475e5db14c993/core%2Fsrc%2Fmain%2Fjava%2Fde%2Frobv%2Fandroid%2Fxposed%2FXC_MethodHook.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Fde%2Frobv%2Fandroid%2Fxposed%2FXC_MethodHook.java?ref=c389162c7ad9b4b48cfe45b8ab5475e5db14c993",
      "patch": "@@ -115,7 +115,7 @@ public MethodHookParam() {\n         /**\n          * The hooked method/constructor.\n          */\n-        public T method;\n+        public Member method;\n \n         /**\n          * The {@code this} reference for an instance method, or {@code null} for static methods.\n@@ -193,7 +193,7 @@ public Object getResultOrThrowable() throws Throwable {\n         @NonNull\n         @Override\n         public T getOrigin() {\n-            return method;\n+            return (T) method;\n         }\n \n         @Nullable\n@@ -232,13 +232,13 @@ public void throwAndSkip(@Nullable Throwable throwable) {\n         @Nullable\n         @Override\n         public Object invokeOrigin(@Nullable Object thisObject, Object[] args) throws InvocationTargetException, IllegalAccessException {\n-            return HookBridge.invokeOriginalMethod(method, thisObject, args);\n+            return HookBridge.invokeOriginalMethod((Executable) method, thisObject, args);\n         }\n \n         @Nullable\n         @Override\n         public Object invokeOrigin() throws InvocationTargetException, IllegalAccessException {\n-            return HookBridge.invokeOriginalMethod(method, thisObject, args);\n+            return HookBridge.invokeOriginalMethod((Executable) method, thisObject, args);\n         }\n \n         @Nullable",
      "parent_sha": "b83c0f41691a25d09083023b4746ab8eba05edb4"
    }
  },
  {
    "oid": "29426b4dc0144368859715cd4a32b13d0fa28fc6",
    "message": "Don't hide modules for scope list",
    "date": "2021-01-29T12:02:30Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/29426b4dc0144368859715cd4a32b13d0fa28fc6",
    "details": {
      "sha": "5ed81f8b17073daa9da18725223377041176dd25",
      "filename": "app/src/main/java/io/github/lsposed/manager/adapters/AppAdapter.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/29426b4dc0144368859715cd4a32b13d0fa28fc6/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Fadapters%2FAppAdapter.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/29426b4dc0144368859715cd4a32b13d0fa28fc6/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Fadapters%2FAppAdapter.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Fadapters%2FAppAdapter.java?ref=29426b4dc0144368859715cd4a32b13d0fa28fc6",
      "patch": "@@ -86,10 +86,6 @@ private void loadApps() {\n                 rmList.add(info);\n                 continue;\n             }\n-            if (AppHelper.forceWhiteList.contains(info.packageName)) {\n-                rmList.add(info);\n-                continue;\n-            }\n             if (!preferences.getBoolean(\"show_system_apps\", false) && (info.applicationInfo.flags & ApplicationInfo.FLAG_SYSTEM) != 0) {\n                 rmList.add(info);\n                 continue;\n@@ -103,6 +99,10 @@ private void loadApps() {\n                 if (!list.contains(info.packageName)) {\n                     rmList.add(info);\n                 }\n+            } else {\n+                if (AppHelper.forceWhiteList.contains(info.packageName)) {\n+                    rmList.add(info);\n+                }\n             }\n         }\n         if (rmList.size() > 0) {",
      "parent_sha": "456c4a04421f925cce4f9077943790041df91959"
    }
  },
  {
    "oid": "9435e9867b286a68a4a655f5ff91848a216ea02e",
    "message": "Do hooking before original handleBindApplication method is called",
    "date": "2019-01-20T16:40:41Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/9435e9867b286a68a4a655f5ff91848a216ea02e",
    "details": {
      "sha": "eb227bdb106eef30f45ab39cfc3df7c4ba4e0c57",
      "filename": "Bridge/src/main/java/com/elderdrivers/riru/xposed/entry/hooker/HandleBindAppHooker.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/9435e9867b286a68a4a655f5ff91848a216ea02e/Bridge%2Fsrc%2Fmain%2Fjava%2Fcom%2Felderdrivers%2Friru%2Fxposed%2Fentry%2Fhooker%2FHandleBindAppHooker.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/9435e9867b286a68a4a655f5ff91848a216ea02e/Bridge%2Fsrc%2Fmain%2Fjava%2Fcom%2Felderdrivers%2Friru%2Fxposed%2Fentry%2Fhooker%2FHandleBindAppHooker.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/Bridge%2Fsrc%2Fmain%2Fjava%2Fcom%2Felderdrivers%2Friru%2Fxposed%2Fentry%2Fhooker%2FHandleBindAppHooker.java?ref=9435e9867b286a68a4a655f5ff91848a216ea02e",
      "patch": "@@ -27,8 +27,8 @@ public class HandleBindAppHooker implements KeepMembers {\n     public static String methodSig = \"(Landroid/app/ActivityThread$AppBindData;)V\";\n \n     public static void hook(Object thiz, Object bindData) {\n-        backup(thiz, bindData);\n         if (XposedBridge.disableHooks) {\n+            backup(thiz, bindData);\n             return;\n         }\n         try {\n@@ -67,6 +67,7 @@ public static void hook(Object thiz, Object bindData) {\n         } catch (Throwable t) {\n             logE(\"error when hooking bindApp\", t);\n         }\n+        backup(thiz, bindData);\n     }\n \n     public static void backup(Object thiz, Object bindData) {",
      "parent_sha": "d0f49f951249034c3999ea15188c5c6d9e7d5038"
    }
  },
  {
    "oid": "779c178d0aed7dab9f3679d27089ccb3cb3d2c58",
    "message": "Fix state loading (#1911)\n\n* Revert \"Fix parasitic manager state restore on 8.1 (#1726)\"\r\n\r\nThis reverts commit 97ef900125bafd7df887be49afa3cfc21f80f972.\r\n\r\n* Fix state loading\r\n\r\nCo-authored-by: Howard Wu <40033067+Howard20181@users.noreply.github.com>",
    "date": "2022-05-03T15:15:39Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/779c178d0aed7dab9f3679d27089ccb3cb3d2c58",
    "details": {
      "sha": "e5ceece3f15271795e8876c9a2f1d2d13eabdcf8",
      "filename": "magisk-loader/src/main/java/org/lsposed/lspd/util/ParasiticManagerHooker.java",
      "status": "modified",
      "additions": 59,
      "deletions": 32,
      "changes": 91,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/779c178d0aed7dab9f3679d27089ccb3cb3d2c58/magisk-loader%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Futil%2FParasiticManagerHooker.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/779c178d0aed7dab9f3679d27089ccb3cb3d2c58/magisk-loader%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Futil%2FParasiticManagerHooker.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/magisk-loader%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Futil%2FParasiticManagerHooker.java?ref=779c178d0aed7dab9f3679d27089ccb3cb3d2c58",
      "patch": "@@ -20,12 +20,13 @@\n import android.os.Process;\n import android.os.RemoteException;\n import android.util.AndroidRuntimeException;\n+import android.util.ArrayMap;\n import android.webkit.WebViewDelegate;\n import android.webkit.WebViewFactory;\n import android.webkit.WebViewFactoryProvider;\n \n-import org.lsposed.lspd.ILSPManagerService;\n import org.lsposed.lspd.BuildConfig;\n+import org.lsposed.lspd.ILSPManagerService;\n \n import java.io.FileInputStream;\n import java.io.FileOutputStream;\n@@ -116,6 +117,7 @@ protected void afterHookedMethod(MethodHookParam param) {\n                     }\n                 });\n \n+        var activityClientRecordClass = XposedHelpers.findClass(\"android.app.ActivityThread$ActivityClientRecord\", ActivityThread.class.getClassLoader());\n         var activityHooker = new XC_MethodHook() {\n             @Override\n             protected void beforeHookedMethod(MethodHookParam param) {\n@@ -128,40 +130,58 @@ protected void beforeHookedMethod(MethodHookParam param) {\n                             if (\"org.lsposed.manager.ui.activity.MainActivity\".equals(activity.name)) {\n                                 activity.applicationInfo = pkgInfo.applicationInfo;\n                                 param.args[i] = activity;\n-                                break;\n                             }\n                         }\n-\n-                        for (var j = 0; j < param.args.length; ++j) {\n-                            if (param.args[j] instanceof Bundle) {\n-                                Hookers.logD(\"loading state of \" + aInfo.name);\n-                                int stateId = j;\n-                                states.computeIfPresent(aInfo.name, (k, v) -> {\n-                                    param.args[stateId] = v;\n-                                    return v;\n-                                });\n-                                continue;\n-                            }\n-                            if (param.args[j] instanceof PersistableBundle) {\n-                                Hookers.logD(\"loading persistentState of \" + aInfo.name);\n-                                int persistentStateId = j;\n-                                states.computeIfPresent(aInfo.name, (k, v) -> {\n-                                    param.args[persistentStateId] = v;\n-                                    return v;\n-                                });\n-                            }\n-                        }\n-                        continue;\n                     }\n                     if (param.args[i] instanceof Intent) {\n                         var intent = (Intent) param.args[i];\n                         checkIntent(managerService, intent);\n                         intent.setComponent(new ComponentName(intent.getComponent().getPackageName(), \"org.lsposed.manager.ui.activity.MainActivity\"));\n                     }\n                 }\n+                if (param.method.getName().equals(\"scheduleLaunchActivity\")) {\n+                    ActivityInfo aInfo = null;\n+                    var parameters = ((Method)param.method).getParameterTypes();\n+                    for (var i = 0; i < parameters.length; ++i) {\n+                        if (parameters[i] == ActivityInfo.class) {\n+                            aInfo = (ActivityInfo) param.args[i];\n+                            Hookers.logD(\"loading state of \" + aInfo.name);\n+                        } else if (parameters[i] == Bundle.class && aInfo != null) {\n+                            final int idx = i;\n+                            states.computeIfPresent(aInfo.name, (k, v) -> {\n+                                param.args[idx] = v;\n+                                return v;\n+                            });\n+                        } else if (parameters[i] == PersistableBundle.class && aInfo != null) {\n+                            final int idx = i;\n+                            persistentStates.computeIfPresent(aInfo.name, (k, v) -> {\n+                                param.args[idx] = v;\n+                                return v;\n+                            });\n+                        }\n+                    }\n+\n+                }\n+            }\n+\n+            @Override\n+            protected void afterHookedMethod(MethodHookParam param) {\n+                for (var i = 0; i < param.args.length && activityClientRecordClass.isInstance(param.thisObject); ++i) {\n+                    if (param.args[i] instanceof ActivityInfo) {\n+                        var aInfo = (ActivityInfo) param.args[i];\n+                        Hookers.logD(\"loading state of \" + aInfo.name);\n+                        states.computeIfPresent(aInfo.name, (k, v) -> {\n+                            XposedHelpers.setObjectField(param.thisObject, \"state\", v);\n+                            return v;\n+                        });\n+                        persistentStates.computeIfPresent(aInfo.name, (k, v) -> {\n+                            XposedHelpers.setObjectField(param.thisObject, \"persistentState\", v);\n+                            return v;\n+                        });\n+                    }\n+                }\n             }\n         };\n-        var activityClientRecordClass = XposedHelpers.findClass(\"android.app.ActivityThread$ActivityClientRecord\", ActivityThread.class.getClassLoader());\n         XposedBridge.hookAllConstructors(activityClientRecordClass, activityHooker);\n \n         if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.O_MR1) {\n@@ -218,8 +238,8 @@ protected void beforeHookedMethod(MethodHookParam param) {\n             @Override\n             protected void beforeHookedMethod(MethodHookParam param) {\n                 if (param.args[1] == null) return;\n-                for (var intent : (List<Intent>) param.args[1]) {\n-                    checkIntent(managerService, intent);\n+                for (var intent : (List<?>) param.args[1]) {\n+                    checkIntent(managerService, (Intent) intent);\n                 }\n             }\n         });\n@@ -254,22 +274,29 @@ protected Object replaceHookedMethod(MethodHookParam param) {\n                 }\n             }\n         });\n-        XposedBridge.hookAllMethods(ActivityThread.class, \"performStopActivityInner\", new XC_MethodHook() {\n+        var stateHooker = new XC_MethodHook() {\n             @Override\n             protected void beforeHookedMethod(MethodHookParam param) {\n                 try {\n-                    XposedHelpers.callMethod(param.thisObject, Build.VERSION.SDK_INT >= Build.VERSION_CODES.P ? \"callActivityOnSaveInstanceState\" : \"callCallActivityOnSaveInstanceState\", param.args[0]);\n-                    var state = (Bundle) XposedHelpers.getObjectField(param.args[0], \"state\");\n-                    var persistentState = (PersistableBundle) XposedHelpers.getObjectField(param.args[0], \"persistentState\");\n-                    var aInfo = (ActivityInfo) XposedHelpers.getObjectField(param.args[0], \"activityInfo\");\n+                    var record = param.args[0];\n+                    if (record instanceof IBinder) {\n+                        record = ((ArrayMap<?, ?>) XposedHelpers.getObjectField(param.thisObject, \"mActivities\")).get(record);\n+                        if (record == null) return;\n+                    }\n+                    XposedHelpers.callMethod(param.thisObject, Build.VERSION.SDK_INT >= Build.VERSION_CODES.P ? \"callActivityOnSaveInstanceState\" : \"callCallActivityOnSaveInstanceState\", record);\n+                    var state = (Bundle) XposedHelpers.getObjectField(record, \"state\");\n+                    var persistentState = (PersistableBundle) XposedHelpers.getObjectField(record, \"persistentState\");\n+                    var aInfo = (ActivityInfo) XposedHelpers.getObjectField(record, \"activityInfo\");\n                     states.compute(aInfo.name, (k, v) -> state);\n                     persistentStates.compute(aInfo.name, (k, v) -> persistentState);\n                     Hookers.logD(\"saving state of \" + aInfo.name);\n                 } catch (Throwable e) {\n                     Hookers.logE(\"save state\", e);\n                 }\n             }\n-        });\n+        };\n+        XposedBridge.hookAllMethods(ActivityThread.class, \"performStopActivityInner\", stateHooker);\n+        XposedHelpers.findAndHookMethod(ActivityThread.class, \"performDestroyActivity\", IBinder.class, boolean.class, int.class, boolean.class, stateHooker);\n     }\n \n     private static void checkIntent(ILSPManagerService managerService, Intent intent) {",
      "parent_sha": "c63fb7af372a32e56a825a1c74b5ce535d44d954"
    }
  },
  {
    "oid": "731eae9f3b791d3e810de80ed873bfe68fe7d2f6",
    "message": "Support Android 14 DP1 (#2377)\n\nFix #2376",
    "date": "2023-02-09T03:20:28Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/731eae9f3b791d3e810de80ed873bfe68fe7d2f6",
    "details": {
      "sha": "776d60dea687c960c6303d7e745a6394aa63afb9",
      "filename": "magisk-loader/src/main/java/org/lsposed/lspd/service/ActivityController.java",
      "status": "modified",
      "additions": 30,
      "deletions": 5,
      "changes": 35,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/731eae9f3b791d3e810de80ed873bfe68fe7d2f6/magisk-loader%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FActivityController.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/731eae9f3b791d3e810de80ed873bfe68fe7d2f6/magisk-loader%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FActivityController.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/magisk-loader%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FActivityController.java?ref=731eae9f3b791d3e810de80ed873bfe68fe7d2f6",
      "patch": "@@ -45,8 +45,13 @@ public class ActivityController extends IActivityController.Stub {\n             Context ctx = ActivityThread.currentActivityThread().getSystemContext();\n             var systemClassLoader = ctx.getClassLoader();\n             @SuppressLint(\"PrivateApi\") var myActivityControllerClass = Class.forName(\"com.android.server.am.ActivityManagerShellCommand$MyActivityController\", false, systemClassLoader);\n-            myActivityControllerConstructor = myActivityControllerClass.getDeclaredConstructor(IActivityManager.class, PrintWriter.class, InputStream.class,\n-                    String.class, boolean.class);\n+            try {\n+                myActivityControllerConstructor = myActivityControllerClass.getDeclaredConstructor(IActivityManager.class, PrintWriter.class, InputStream.class,\n+                        String.class, boolean.class);\n+            } catch (NoSuchMethodException ignored) {\n+                myActivityControllerConstructor = myActivityControllerClass.getDeclaredConstructor(IActivityManager.class, PrintWriter.class, InputStream.class,\n+                        String.class, boolean.class, boolean.class, String.class, boolean.class);\n+            }\n             myActivityControllerConstructor.setAccessible(true);\n             myActivityControllerRunner = myActivityControllerClass.getDeclaredMethod(\"run\");\n             myActivityControllerRunner.setAccessible(true);\n@@ -91,18 +96,33 @@ public int onCommand(String cmd) {\n                             String opt;\n                             String gdbPort = null;\n                             boolean monkey = false;\n+                            boolean simpleMode = false;\n+                            String target = null;\n+                            boolean alwaysContinue = false;\n                             while ((opt = getNextOption()) != null) {\n                                 if (opt.equals(\"--gdb\")) {\n                                     gdbPort = getNextArgRequired();\n                                 } else if (opt.equals(\"-m\")) {\n                                     monkey = true;\n+                                } else if (myActivityControllerConstructor.getParameterCount() > 5) {\n+                                    switch (opt) {\n+                                        case \"-p\":\n+                                            target = getNextArgRequired();\n+                                            break;\n+                                        case \"-s\":\n+                                            simpleMode = true;\n+                                            break;\n+                                        case \"-c\":\n+                                            alwaysContinue = true;\n+                                            break;\n+                                    }\n                                 } else {\n                                     getErrPrintWriter().println(\"Error: Unknown option: \" + opt);\n                                     return -1;\n                                 }\n                             }\n \n-                            return replaceMyControllerActivity(pw, getRawInputStream(), gdbPort, monkey);\n+                            return replaceMyControllerActivity(pw, getRawInputStream(), gdbPort, monkey, simpleMode, target, alwaysContinue);\n                         }\n \n                         @Override\n@@ -141,7 +161,7 @@ static boolean replaceActivityController(Parcel data) {\n         return false;\n     }\n \n-    static private int replaceMyControllerActivity(PrintWriter pw, InputStream stream, String gdbPort, boolean monkey) {\n+    static private int replaceMyControllerActivity(PrintWriter pw, InputStream stream, String gdbPort, boolean monkey, boolean simpleMode, String target, boolean alwaysContinue) {\n         try {\n             InvocationHandler handler = (proxy, method, args1) -> {\n                 if (method.getName().equals(\"setActivityController\")) {\n@@ -155,7 +175,12 @@ static private int replaceMyControllerActivity(PrintWriter pw, InputStream strea\n             };\n             var amProxy = Proxy.newProxyInstance(BridgeService.class.getClassLoader(),\n                     new Class[]{myActivityControllerConstructor.getParameterTypes()[0]}, handler);\n-            var ctrl = myActivityControllerConstructor.newInstance(amProxy, pw, stream, gdbPort, monkey);\n+            Object ctrl;\n+            if (myActivityControllerConstructor.getParameterCount() == 5) {\n+                ctrl = myActivityControllerConstructor.newInstance(amProxy, pw, stream, gdbPort, monkey);\n+            } else {\n+                ctrl = myActivityControllerConstructor.newInstance(amProxy, pw, stream, gdbPort, monkey, simpleMode, target, alwaysContinue);\n+            }\n             myActivityControllerRunner.invoke(ctrl);\n             return 0;\n         } catch (Throwable e) {",
      "parent_sha": "e7c36afeb0558ddd0999985777a05e102a531f9e"
    }
  },
  {
    "oid": "3ecb615d6ec224ee376af48a63878c1b7f6e8394",
    "message": "[app] Show shared uid apps as single app",
    "date": "2021-02-22T10:46:29Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/3ecb615d6ec224ee376af48a63878c1b7f6e8394",
    "details": {
      "sha": "fdcba2c2673baaee2df01d6b1b0f3abd448dc4c5",
      "filename": "app/src/main/java/io/github/lsposed/manager/adapters/ScopeAdapter.java",
      "status": "modified",
      "additions": 112,
      "deletions": 64,
      "changes": 176,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/3ecb615d6ec224ee376af48a63878c1b7f6e8394/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Fadapters%2FScopeAdapter.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/3ecb615d6ec224ee376af48a63878c1b7f6e8394/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Fadapters%2FScopeAdapter.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/app%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Flsposed%2Fmanager%2Fadapters%2FScopeAdapter.java?ref=3ecb615d6ec224ee376af48a63878c1b7f6e8394",
      "patch": "@@ -92,9 +92,8 @@ public class ScopeAdapter extends RecyclerView.Adapter<ScopeAdapter.ViewHolder>\n     private final SwitchBar masterSwitch;\n     private final List<Integer> moduleList = new ArrayList<>();\n     private final List<Integer> recommendedList = new ArrayList<>();\n-    private final List<PackageInfo> searchList = new ArrayList<>();\n-    private final Map<Integer, ArrayList<PackageInfo>> sharedUidMap = new HashMap<>();\n-    private List<PackageInfo> showList = new ArrayList<>();\n+    private final List<AppInfo> searchList = new ArrayList<>();\n+    private List<AppInfo> showList = new ArrayList<>();\n     private List<Integer> checkedList = new ArrayList<>();\n     private boolean enabled = true;\n     private ApplicationInfo selectedInfo;\n@@ -135,73 +134,117 @@ private void loadApps() {\n         enabled = ModuleUtil.getInstance().isModuleEnabled(modulePackageName);\n         activity.runOnUiThread(() -> masterSwitch.setChecked(enabled));\n \n-        ArrayList<PackageInfo> removeList = new ArrayList<>();\n         ArrayList<Integer> installedList = new ArrayList<>();\n         List<String> recommendedPackageNames = ModuleUtil.getInstance().getModule(modulePackageName).getScopeList();\n+        Map<String, ArrayList<PackageInfo>> sharedUidPackages = new HashMap<>();\n         for (PackageInfo info : appList) {\n             int uid = info.applicationInfo.uid;\n-\n             if (!installedList.contains(uid)) installedList.add(uid);\n-\n-            List<PackageInfo> sharedUidList = sharedUidMap.computeIfAbsent(uid, k -> new ArrayList<>());\n-            if (!sharedUidList.contains(info)) sharedUidList.add(info);\n-\n             if (info.packageName.equals(this.modulePackageName)) {\n                 if (!checkedList.contains(uid)) checkedList.add(uid);\n                 if (!moduleList.contains(uid)) moduleList.add(uid);\n-                removeList.add(info);\n-                continue;\n             }\n             if (recommendedPackageNames != null && recommendedPackageNames.contains(info.packageName) && !recommendedList.contains(uid)) {\n                 recommendedList.add(uid);\n-                continue;\n             }\n \n-            if (info.packageName.equals(BuildConfig.APPLICATION_ID)) {\n-                removeList.add(info);\n+            AppInfo appInfo = new AppInfo();\n+            appInfo.packageInfo = info;\n+\n+            if (info.sharedUserId != null) {\n+                ArrayList<PackageInfo> packageInfos = sharedUidPackages.computeIfAbsent(info.sharedUserId, k -> new ArrayList<>());\n+                packageInfos.add(info);\n                 continue;\n+            } else {\n+                appInfo.label = getAppLabel(info.applicationInfo, pm);\n             }\n-            if (checkedList.contains(uid) || info.packageName.equals(\"android\")) {\n-                continue;\n+\n+            if (!shouldHideApp(info)) {\n+                searchList.add(appInfo);\n             }\n-            if (!preferences.getBoolean(\"show_modules\", false)) {\n-                if (info.applicationInfo.metaData != null && info.applicationInfo.metaData.containsKey(\"xposedmodule\")) {\n-                    removeList.add(info);\n-                    continue;\n+        }\n+        for (List<PackageInfo> packageInfos : sharedUidPackages.values()) {\n+            AppInfo appInfo = new AppInfo();\n+            String[] packageLabels = new String[packageInfos.size()];\n+            String name = null;\n+\n+            for (int i = 0; i < packageLabels.length; i++) {\n+                ApplicationInfo ai = packageInfos.get(i).applicationInfo;\n+                CharSequence label = ai.loadLabel(pm);\n+                if (label != null) {\n+                    packageLabels[i] = label.toString();\n                 }\n-            }\n-            if (!preferences.getBoolean(\"show_games\", false)) {\n-                if (info.applicationInfo.category == ApplicationInfo.CATEGORY_GAME) {\n-                    removeList.add(info);\n-                    continue;\n+                if (ai.icon != 0) {\n+                    appInfo.packageInfo = packageInfos.get(i);\n+                    break;\n                 }\n-                //noinspection deprecation\n-                if ((info.applicationInfo.flags & ApplicationInfo.FLAG_IS_GAME) != 0) {\n-                    removeList.add(info);\n-                    continue;\n+            }\n+\n+            if (packageLabels.length == 1) {\n+                name = packageLabels[0];\n+            } else {\n+                for (PackageInfo packageInfo : packageInfos) {\n+                    if (packageInfo.sharedUserLabel != 0) {\n+                        final CharSequence nm = pm.getText(packageInfo.packageName, packageInfo.sharedUserLabel, packageInfo.applicationInfo);\n+                        if (nm != null) {\n+                            name = nm.toString();\n+                            appInfo.packageInfo = packageInfo;\n+                            break;\n+                        }\n+                    }\n                 }\n             }\n-            if ((info.applicationInfo.flags & ApplicationInfo.FLAG_HAS_CODE) == 0) {\n-                removeList.add(info);\n-                continue;\n+\n+            if (name == null) {\n+                name = packageInfos.get(0).sharedUserId;\n             }\n-            if (!preferences.getBoolean(\"show_system_apps\", false) && (info.applicationInfo.flags & ApplicationInfo.FLAG_SYSTEM) != 0) {\n-                removeList.add(info);\n+\n+            appInfo.label = String.format(\"[SharedUID] %s\", name);\n+\n+            if (appInfo.packageInfo != null) {\n+                searchList.add(appInfo);\n             }\n         }\n         checkedList.retainAll(installedList);\n         if (selectedNothing() && hasRecommended()) {\n             checkRecommended();\n         }\n-        searchList.addAll(appList);\n-        if (removeList.size() > 0) {\n-            searchList.removeAll(removeList);\n-        }\n         showList = sortApps(searchList);\n         activity.onDataReady();\n     }\n \n-    private List<PackageInfo> sortApps(List<PackageInfo> list) {\n+    private boolean shouldHideApp(PackageInfo info) {\n+        if (info.packageName.equals(this.modulePackageName)) {\n+            return true;\n+        }\n+\n+        if (info.packageName.equals(BuildConfig.APPLICATION_ID)) {\n+            return true;\n+        }\n+        if (checkedList.contains(info.applicationInfo.uid) || info.packageName.equals(\"android\")) {\n+            return false;\n+        }\n+        if (!preferences.getBoolean(\"show_modules\", false)) {\n+            if (info.applicationInfo.metaData != null && info.applicationInfo.metaData.containsKey(\"xposedmodule\")) {\n+                return true;\n+            }\n+        }\n+        if (!preferences.getBoolean(\"show_games\", false)) {\n+            if (info.applicationInfo.category == ApplicationInfo.CATEGORY_GAME) {\n+                return true;\n+            }\n+            //noinspection deprecation\n+            if ((info.applicationInfo.flags & ApplicationInfo.FLAG_IS_GAME) != 0) {\n+                return true;\n+            }\n+        }\n+        if ((info.applicationInfo.flags & ApplicationInfo.FLAG_HAS_CODE) == 0) {\n+            return true;\n+        }\n+        return !preferences.getBoolean(\"show_system_apps\", false) && (info.applicationInfo.flags & ApplicationInfo.FLAG_SYSTEM) != 0;\n+    }\n+\n+    private List<AppInfo> sortApps(List<AppInfo> list) {\n         Comparator<PackageInfo> comparator = AppHelper.getAppListComparator(preferences.getInt(\"list_sort\", 0), pm);\n         Comparator<PackageInfo> frameworkComparator = (a, b) -> {\n             if (a.packageName.equals(\"android\") == b.packageName.equals(\"android\")) {\n@@ -224,10 +267,10 @@ private List<PackageInfo> sortApps(List<PackageInfo> list) {\n             }\n         };\n         list.sort((a, b) -> {\n-            boolean aChecked = checkedList.contains(a.applicationInfo.uid);\n-            boolean bChecked = checkedList.contains(b.applicationInfo.uid);\n+            boolean aChecked = checkedList.contains(a.packageInfo.applicationInfo.uid);\n+            boolean bChecked = checkedList.contains(b.packageInfo.applicationInfo.uid);\n             if (aChecked == bChecked) {\n-                return recommendedComparator.compare(a, b);\n+                return recommendedComparator.compare(a.packageInfo, b.packageInfo);\n             } else if (aChecked) {\n                 return -1;\n             } else {\n@@ -373,11 +416,18 @@ public void onCreateOptionsMenu(@NonNull Menu menu, @NonNull MenuInflater inflat\n     @Override\n     public void onBindViewHolder(@NonNull ViewHolder holder, int position) {\n         holder.root.setAlpha(enabled ? 1.0f : .5f);\n-        PackageInfo info = showList.get(position);\n-        boolean android = info.packageName.equals(\"android\");\n-        holder.appName.setText(android ? activity.getString(R.string.android_framework) : getAppLabel(info.applicationInfo, pm));\n+        AppInfo appInfo = showList.get(position);\n+        boolean android = appInfo.packageInfo.packageName.equals(\"android\");\n+        CharSequence appName;\n+        int userId = appInfo.packageInfo.applicationInfo.uid / 100000;\n+        if (userId != 0) {\n+            appName = String.format(\"%s (%s)\", appInfo.label, userId);\n+        } else {\n+            appName = android ? activity.getString(R.string.android_framework) : appInfo.label;\n+        }\n+        holder.appName.setText(appName);\n         GlideApp.with(holder.appIcon)\n-                .load(info)\n+                .load(appInfo.packageInfo)\n                 .into(new CustomTarget<Drawable>() {\n                     @Override\n                     public void onResourceReady(@NonNull Drawable resource, @Nullable Transition<? super Drawable> transition) {\n@@ -389,9 +439,9 @@ public void onLoadCleared(@Nullable Drawable placeholder) {\n \n                     }\n                 });\n-        SpannableStringBuilder sb = new SpannableStringBuilder(android ? \"\" : activity.getString(R.string.app_description, info.packageName, info.versionName));\n+        SpannableStringBuilder sb = new SpannableStringBuilder(android ? \"\" : activity.getString(R.string.app_description, appInfo.packageInfo.packageName, appInfo.packageInfo.versionName));\n         holder.appDescription.setVisibility(View.VISIBLE);\n-        if (hasRecommended() && recommendedList.contains(info.applicationInfo.uid)) {\n+        if (hasRecommended() && recommendedList.contains(appInfo.packageInfo.applicationInfo.uid)) {\n             if (!android) sb.append(\"\\n\");\n             String recommended = activity.getString(R.string.requested_by_module);\n             sb.append(recommended);\n@@ -411,7 +461,7 @@ public void onLoadCleared(@Nullable Drawable placeholder) {\n \n         holder.itemView.setOnCreateContextMenuListener((menu, v, menuInfo) -> {\n             activity.getMenuInflater().inflate(R.menu.menu_app_item, menu);\n-            Intent launchIntent = pm.getLaunchIntentForPackage(info.packageName);\n+            Intent launchIntent = pm.getLaunchIntentForPackage(appInfo.packageInfo.packageName);\n             if (launchIntent == null) {\n                 menu.removeItem(R.id.menu_launch);\n             }\n@@ -422,21 +472,21 @@ public void onLoadCleared(@Nullable Drawable placeholder) {\n         });\n \n         holder.checkbox.setOnCheckedChangeListener(null);\n-        holder.checkbox.setChecked(checkedList.contains(info.applicationInfo.uid));\n+        holder.checkbox.setChecked(checkedList.contains(appInfo.packageInfo.applicationInfo.uid));\n \n-        holder.checkbox.setOnCheckedChangeListener((v, isChecked) -> onCheckedChange(v, isChecked, info.applicationInfo.uid));\n+        holder.checkbox.setOnCheckedChangeListener((v, isChecked) -> onCheckedChange(v, isChecked, appInfo.packageInfo.applicationInfo.uid));\n         holder.itemView.setOnClickListener(v -> {\n             if (enabled) holder.checkbox.toggle();\n         });\n         holder.itemView.setOnLongClickListener(v -> {\n-            selectedInfo = info.applicationInfo;\n+            selectedInfo = appInfo.packageInfo.applicationInfo;\n             return false;\n         });\n     }\n \n     @Override\n     public long getItemId(int position) {\n-        return showList.get(position).packageName.hashCode();\n+        return showList.get(position).packageInfo.packageName.hashCode();\n     }\n \n     @Override\n@@ -467,13 +517,6 @@ protected void onCheckedChange(CompoundButton buttonView, boolean isChecked, int\n                 checkedList.remove((Integer) uid);\n             }\n             buttonView.setChecked(!isChecked);\n-        } else {\n-            List<PackageInfo> sharedUidList = sharedUidMap.get(uid);\n-            if (sharedUidList != null) {\n-                for (PackageInfo info : sharedUidList) {\n-                    notifyItemChanged(showList.indexOf(info));\n-                }\n-            }\n         }\n     }\n \n@@ -507,11 +550,11 @@ protected FilterResults performFiltering(CharSequence constraint) {\n             if (constraint.toString().isEmpty()) {\n                 showList = searchList;\n             } else {\n-                ArrayList<PackageInfo> filtered = new ArrayList<>();\n+                ArrayList<AppInfo> filtered = new ArrayList<>();\n                 String filter = constraint.toString().toLowerCase();\n-                for (PackageInfo info : searchList) {\n-                    if (lowercaseContains(getAppLabel(info.applicationInfo, pm), filter)\n-                            || lowercaseContains(info.packageName, filter)) {\n+                for (AppInfo info : searchList) {\n+                    if (lowercaseContains(info.label.toString(), filter)\n+                            || lowercaseContains(info.packageInfo.packageName, filter)) {\n                         filtered.add(info);\n                     }\n                 }\n@@ -560,4 +603,9 @@ public boolean onBackPressed() {\n     public static String getAppLabel(ApplicationInfo info, PackageManager pm) {\n         return info.loadLabel(pm).toString();\n     }\n+\n+    public static class AppInfo {\n+        public PackageInfo packageInfo;\n+        public CharSequence label = null;\n+    }\n }",
      "parent_sha": "4a39c822422e0b2bbe14d1a291c249f3df7f38ec"
    }
  },
  {
    "oid": "c60f9ed9efa43505ed9a6d6442bff44f628fb697",
    "message": "XSharedPreferences: implemented on-demand file watcher\n\nFurther optimization of f8aa9d0\nFile watcher is initiated and kept alive only while there are valid watch keys present.",
    "date": "2021-01-28T17:47:18Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/c60f9ed9efa43505ed9a6d6442bff44f628fb697",
    "details": {
      "sha": "701bdfc40b77c3ae8a2f54ff5e990439f674cf23",
      "filename": "core/src/main/java/de/robv/android/xposed/XSharedPreferences.java",
      "status": "modified",
      "additions": 85,
      "deletions": 65,
      "changes": 150,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/c60f9ed9efa43505ed9a6d6442bff44f628fb697/core%2Fsrc%2Fmain%2Fjava%2Fde%2Frobv%2Fandroid%2Fxposed%2FXSharedPreferences.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/c60f9ed9efa43505ed9a6d6442bff44f628fb697/core%2Fsrc%2Fmain%2Fjava%2Fde%2Frobv%2Fandroid%2Fxposed%2FXSharedPreferences.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/core%2Fsrc%2Fmain%2Fjava%2Fde%2Frobv%2Fandroid%2Fxposed%2FXSharedPreferences.java?ref=c60f9ed9efa43505ed9a6d6442bff44f628fb697",
      "patch": "@@ -18,6 +18,7 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.nio.file.AccessDeniedException;\n+import java.nio.file.ClosedWatchServiceException;\n import java.nio.file.Path;\n import java.nio.file.StandardWatchEventKinds;\n import java.nio.file.WatchEvent;\n@@ -38,9 +39,9 @@\n  */\n public final class XSharedPreferences implements SharedPreferences {\n     private static final String TAG = \"XSharedPreferences\";\n-    private static final HashMap<Path, PrefsData> sInstances = new HashMap<>();\n+    private static final HashMap<WatchKey, PrefsData> sWatcherKeyInstances = new HashMap<>();\n     private static final Object sContent = new Object();\n-    private static Thread sDaemon = null;\n+    private static Thread sWatcherDaemon = null;\n     private static WatchService sWatcher;\n \n     private final HashMap<OnSharedPreferenceChangeListener, Object> mListeners = new HashMap<>();\n@@ -50,34 +51,21 @@ public final class XSharedPreferences implements SharedPreferences {\n     private boolean mLoaded = false;\n     private long mLastModified;\n     private long mFileSize;\n-    private boolean mWatcherEnabled;\n-\n-    private static synchronized WatchService getWatcher() {\n-        if (sWatcher == null) {\n-            try {\n-                sWatcher = new File(XposedInit.prefsBasePath).toPath().getFileSystem().newWatchService();\n-                if (BuildConfig.DEBUG) Log.d(TAG, \"Created WatchService instance\");\n-            } catch (IOException e) {\n-                Log.e(TAG, \"Failed to create WatchService\", e);\n-            }\n-        }\n-\n-        if (sWatcher != null && (sDaemon == null || !sDaemon.isAlive())) {\n-            initWatcherDaemon();\n-        }\n-\n-        return sWatcher;\n-    }\n+    private WatchKey mWatchKey;\n \n     private static void initWatcherDaemon() {\n-        sDaemon = new Thread() {\n+        sWatcherDaemon = new Thread() {\n             @Override\n             public void run() {\n-                Log.d(TAG, \"Watcher daemon thread started\");\n+                if (BuildConfig.DEBUG) Log.d(TAG, \"Watcher daemon thread started\");\n                 while (true) {\n                     WatchKey key;\n                     try {\n                         key = sWatcher.take();\n+                    } catch (ClosedWatchServiceException ignored) {\n+                        if (BuildConfig.DEBUG) Log.d(TAG, \"Watcher daemon thread finished\");\n+                        sWatcher = null;\n+                        return;\n                     } catch (InterruptedException ignored) {\n                         return;\n                     }\n@@ -94,14 +82,11 @@ public void run() {\n                         if (pathStr.endsWith(\".bak\")) {\n                             if (kind != StandardWatchEventKinds.ENTRY_DELETE) {\n                                 continue;\n-                            } else {\n-                                pathStr = path.getFileName().toString();\n-                                path = dir.resolve(pathStr.substring(0, pathStr.length() - 4));\n                             }\n                         } else if (SELinuxHelper.getAppDataFileService().checkFileExists(pathStr + \".bak\")) {\n                             continue;\n                         }\n-                        PrefsData data = sInstances.get(path);\n+                        PrefsData data = sWatcherKeyInstances.get(key);\n                         if (data != null && data.hasChanged()) {\n                             for (OnSharedPreferenceChangeListener l : data.mPrefs.mListeners.keySet()) {\n                                 try {\n@@ -116,33 +101,22 @@ public void run() {\n                 }\n             }\n         };\n-        sDaemon.setName(TAG + \"-Daemon\");\n-        sDaemon.setDaemon(true);\n-        sDaemon.start();\n+        sWatcherDaemon.setName(TAG + \"-Daemon\");\n+        sWatcherDaemon.setDaemon(true);\n+        sWatcherDaemon.start();\n     }\n \n     /**\n      * Read settings from the specified file.\n      *\n      * @param prefFile The file to read the preferences from.\n-     * @param enableWatcher Whether to enable support for preference change listeners\n      */\n-    public XSharedPreferences(File prefFile, boolean enableWatcher) {\n+    public XSharedPreferences(File prefFile) {\n         mFile = prefFile;\n         mFilename = prefFile.getAbsolutePath();\n-        mWatcherEnabled = enableWatcher;\n         init();\n     }\n \n-    /**\n-     * Read settings from the specified file.\n-     *\n-     * @param prefFile The file to read the preferences from.\n-     */\n-    public XSharedPreferences(File prefFile) {\n-        this(prefFile, false);\n-    }\n-\n     /**\n      * Read settings from the default preferences for a package.\n      * These preferences are returned by {@link PreferenceManager#getDefaultSharedPreferences}.\n@@ -179,7 +153,6 @@ public XSharedPreferences(String packageName, String prefFileName) {\n                             xposedminversion = MetaDataReader.extractIntPart((String) minVersionRaw);\n                         }\n                         xposedsharedprefs = metaData.containsKey(\"xposedsharedprefs\");\n-                        mWatcherEnabled = metaData.containsKey(\"xposedsharedprefswatcher\");\n                     }\n                 } catch (NumberFormatException | IOException e) {\n                     Log.w(TAG, \"Apk parser fails: \" + e);\n@@ -197,26 +170,52 @@ public XSharedPreferences(String packageName, String prefFileName) {\n     }\n \n     private void tryRegisterWatcher() {\n-        if (!mWatcherEnabled) {\n+        if (mWatchKey != null && mWatchKey.isValid()) {\n             return;\n         }\n-        Path path = mFile.toPath();\n-        if (sInstances.containsKey(path)) {\n-            return;\n+\n+        synchronized (sWatcherKeyInstances) {\n+            Path path = mFile.toPath();\n+            try {\n+                if (sWatcher == null) {\n+                    sWatcher = new File(XposedInit.prefsBasePath).toPath().getFileSystem().newWatchService();\n+                    if (BuildConfig.DEBUG) Log.d(TAG, \"Created WatchService instance\");\n+                }\n+                mWatchKey = path.getParent().register(sWatcher, StandardWatchEventKinds.ENTRY_CREATE,\n+                        StandardWatchEventKinds.ENTRY_MODIFY, StandardWatchEventKinds.ENTRY_DELETE);\n+                sWatcherKeyInstances.put(mWatchKey, new PrefsData(this));\n+                if (sWatcherDaemon == null || !sWatcherDaemon.isAlive()) {\n+                    initWatcherDaemon();\n+                }\n+                if (BuildConfig.DEBUG) Log.d(TAG, \"tryRegisterWatcher: registered file watcher for \" + path);\n+            } catch (AccessDeniedException accDeniedEx) {\n+                if (BuildConfig.DEBUG) Log.e(TAG, \"tryRegisterWatcher: access denied to \" + path);\n+            } catch (Exception e) {\n+                Log.e(TAG, \"tryRegisterWatcher: failed to register file watcher\", e);\n+            }\n         }\n-        try {\n-            path.getParent().register(getWatcher(), StandardWatchEventKinds.ENTRY_CREATE, StandardWatchEventKinds.ENTRY_MODIFY, StandardWatchEventKinds.ENTRY_DELETE);\n-            sInstances.put(path, new PrefsData(this));\n-            if (BuildConfig.DEBUG) Log.d(TAG, \"tryRegisterWatcher: registered file watcher for \" + path);\n-        } catch (AccessDeniedException accDeniedEx) {\n-            if (BuildConfig.DEBUG) Log.d(TAG, \"tryRegisterWatcher: access denied to \" + path);\n-        } catch (Exception e) {\n-            Log.d(TAG, \"tryRegisterWatcher: failed to register file watcher\", e);\n+    }\n+\n+    private void tryUnregisterWatcher() {\n+        synchronized (sWatcherKeyInstances) {\n+            if (mWatchKey != null) {\n+                sWatcherKeyInstances.remove(mWatchKey);\n+                mWatchKey.cancel();\n+                mWatchKey = null;\n+            }\n+            boolean atLeastOneValid = false;\n+            for (WatchKey key : sWatcherKeyInstances.keySet()) {\n+                atLeastOneValid |= key.isValid();\n+            }\n+            if (!atLeastOneValid) {\n+                try {\n+                    sWatcher.close();\n+                } catch (Exception ignore) { }\n+            }\n         }\n     }\n \n     private void init() {\n-        tryRegisterWatcher();\n         startLoadFromDisk();\n     }\n \n@@ -266,7 +265,15 @@ public boolean makeWorldReadable() {\n         if (!mFile.setReadable(true, false))\n             return false;\n \n-        tryRegisterWatcher();\n+        // Watcher service needs read access to parent directory (looks like execute is not enough)\n+        if (mFile.getParentFile() != null) {\n+            mFile.getParentFile().setReadable(true, false);\n+        }\n+\n+        if (!mListeners.isEmpty()) {\n+            tryRegisterWatcher();\n+        }\n+\n         return true;\n     }\n \n@@ -480,25 +487,38 @@ public Editor edit() {\n         throw new UnsupportedOperationException(\"read-only implementation\");\n     }\n \n-    @Deprecated\n+    /**\n+     * Registers a callback to be invoked when a change happens to a preference file.<br>\n+     * Note that it is not possible to determine which preference changed exactly and thus\n+     * preference key in callback invocation will always be null.\n+     *\n+     * @param listener The callback that will run.\n+     * @see #unregisterOnSharedPreferenceChangeListener\n+     */\n     @Override\n     public void registerOnSharedPreferenceChangeListener(OnSharedPreferenceChangeListener listener) {\n-        if (!mWatcherEnabled)\n-            throw new UnsupportedOperationException(\"File watcher feature is disabled for this instance\");\n+        if (listener == null)\n+            throw new IllegalArgumentException(\"listener cannot be null\");\n \n         synchronized(this) {\n-            mListeners.put(listener, sContent);\n+            if (mListeners.put(listener, sContent) == null) {\n+                tryRegisterWatcher();\n+            }\n         }\n     }\n \n-    @Deprecated\n+    /**\n+     * Unregisters a previous callback.\n+     *\n+     * @param listener The callback that should be unregistered.\n+     * @see #registerOnSharedPreferenceChangeListener\n+     */\n     @Override\n     public void unregisterOnSharedPreferenceChangeListener(OnSharedPreferenceChangeListener listener) {\n-        if (!mWatcherEnabled)\n-            throw new UnsupportedOperationException(\"File watcher feature is disabled for this instance\");\n-\n         synchronized(this) {\n-            mListeners.remove(listener);\n+            if (mListeners.remove(listener) != null && mListeners.isEmpty()) {\n+                tryUnregisterWatcher();\n+            }\n         }\n     }\n ",
      "parent_sha": "346ef574602b9da0af70fa8be7b5b7fabb9ab7e1"
    }
  },
  {
    "oid": "8d73414d2dbd81ec9fdb1f84123887c0c1161a50",
    "message": "Fix processName = null (#2739)",
    "date": "2023-09-03T17:05:22Z",
    "url": "https://github.com/LSPosed/LSPosed/commit/8d73414d2dbd81ec9fdb1f84123887c0c1161a50",
    "details": {
      "sha": "0710b5608730f1d109d4db5a62d37ace881576c5",
      "filename": "daemon/src/main/java/org/lsposed/lspd/service/ConfigManager.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/LSPosed/LSPosed/blob/8d73414d2dbd81ec9fdb1f84123887c0c1161a50/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigManager.java",
      "raw_url": "https://github.com/LSPosed/LSPosed/raw/8d73414d2dbd81ec9fdb1f84123887c0c1161a50/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigManager.java",
      "contents_url": "https://api.github.com/repos/LSPosed/LSPosed/contents/daemon%2Fsrc%2Fmain%2Fjava%2Forg%2Flsposed%2Flspd%2Fservice%2FConfigManager.java?ref=8d73414d2dbd81ec9fdb1f84123887c0c1161a50",
      "patch": "@@ -129,7 +129,7 @@ public boolean equals(@Nullable Object o) {\n \n         @Override\n         public int hashCode() {\n-            return processName.hashCode() ^ uid;\n+            return Objects.hashCode(processName) ^ uid;\n         }\n     }\n ",
      "parent_sha": "0d7cfd3797e1a97686c2c90ba1c09b18652ffec9"
    }
  }
]