[
  {
    "oid": "6bfe74fe0cb47f65127ef746708dcf1a33f23520",
    "message": "Start Of Middle-Click Close",
    "date": "2024-09-26T02:52:33Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/6bfe74fe0cb47f65127ef746708dcf1a33f23520",
    "details": {
      "sha": "d29eb3d44e743f983bc79a58b90374c814304ecd",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/gui/resourceviewer/TabComponent.java",
      "status": "modified",
      "additions": 25,
      "deletions": 5,
      "changes": 30,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/6bfe74fe0cb47f65127ef746708dcf1a33f23520/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourceviewer%2FTabComponent.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/6bfe74fe0cb47f65127ef746708dcf1a33f23520/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourceviewer%2FTabComponent.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourceviewer%2FTabComponent.java?ref=6bfe74fe0cb47f65127ef746708dcf1a33f23520",
      "patch": "@@ -53,6 +53,7 @@ public String getText() {\n \t\t};\n \n \t\tlabel.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 5));\n+\t\tlabel.setOpaque(false);\n \t\tadd(label);\n \t\tJButton button = new CloseButton();\n \t\tadd(button);\n@@ -64,13 +65,18 @@ public String getText() {\n \t\trightClickMenu.add(closeAllTabs);\n \t\trightClickMenu.add(closeTab);\n \t\tbutton.setComponentPopupMenu(rightClickMenu);\n-\n+\t\t\n+\t\t//TODO add left-click close: when we add a new listener the parent listener (jTabbedPane) conflicts and won't respect the opaque flag.\n+\t\t//  button.addMouseListener(new MouseClickedListener(e ->\n+\t\t//      if (e.getButton() == MouseEvent.BUTTON2)     // middle-click\n+\t\t//\t        closePane();\n+\t\t//  }));\n+\t\t\n \t\tbutton.addMouseListener(new MouseClickedListener(e ->\n \t\t{\n-\t\t\tif (e.getButton() != MouseEvent.BUTTON1) // left-click\n-\t\t\t\treturn;\n-\n-\t\t\tclosePane();\n+\t\t\tif (e.getButton() == MouseEvent.BUTTON2     // middle-click\n+\t\t\t\t|| e.getButton() == MouseEvent.BUTTON1) // left-click\n+\t\t\t\tclosePane();\n \t\t}));\n \n \t\tcloseTab.addActionListener(e ->\n@@ -98,6 +104,20 @@ public String getText() {\n \t\tsetBorder(BorderFactory.createEmptyBorder(2, 0, 0, 0));\n \t}\n \t\n+\tpublic void selectPane()\n+\t{\n+\t\tif (pane.indexOfTabComponent(TabComponent.this) != -1)\n+\t\t{\n+\t\t\tint i = pane.indexOfTabComponent(TabComponent.this);\n+\t\t\tselectTab(i);\n+\t\t}\n+\t}\n+\t\n+\tprivate void selectTab(int index)\n+\t{\n+\t\tBytecodeViewer.viewer.workPane.tabs.setSelectedIndex(index);\n+\t}\n+\t\n \tpublic void closePane()\n \t{\n \t\tif (pane.indexOfTabComponent(TabComponent.this) != -1)",
      "parent_sha": "d811272f9c03c3d9a23b0bb44a25f170972ca440"
    }
  },
  {
    "oid": "756c82334f7e465c97f77bf77c59c8b81f53a475",
    "message": "[JDGUI] Make sure we do not add the opened class into the inner classes array.",
    "date": "2024-10-18T03:10:14Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/756c82334f7e465c97f77bf77c59c8b81f53a475",
    "details": {
      "sha": "78951852bbc5178b0d4d6c9711f57be585b7a57e",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/decompilers/impl/JDGUIDecompiler.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/756c82334f7e465c97f77bf77c59c8b81f53a475/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FJDGUIDecompiler.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/756c82334f7e465c97f77bf77c59c8b81f53a475/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FJDGUIDecompiler.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FJDGUIDecompiler.java?ref=756c82334f7e465c97f77bf77c59c8b81f53a475",
      "patch": "@@ -59,17 +59,19 @@ public JDGUIDecompiler()\n         super(\"JD-GUI Decompiler\", \"jdgui\");\n     }\n \n-    private String[] inners;\n     @Override\n     public String decompileClassNode(ClassNode cn, byte[] bytes)\n     {\n         TempFile tempFile = null;\n         String exception;\n \n         List<InnerClassNode> innerClasses = cn.innerClasses;\n-        inners = new String[innerClasses.size()];\n+        String[] inners = new String[innerClasses.size()];\n         for (int i = 0; i < innerClasses.size(); i++)\n         {\n+            if (innerClasses.get(i).name.equals(cn.name))\n+                break;\n+\n             if (innerClasses.get(i).outerName != null && innerClasses.get(i).outerName.equals(cn.name))\n             {\n                 inners[i] = innerClasses.get(i).name;\n@@ -79,9 +81,7 @@ else if (innerClasses.get(i).outerName == null)\n                 String name = innerClasses.get(i).name;\n                 name = name.substring(name.lastIndexOf('/') + 1);\n                 if (name.contains(cn.name.substring(cn.name.lastIndexOf('/') + 1)))\n-                {\n                     inners[i] = innerClasses.get(i).name;\n-                }\n             }\n         }\n ",
      "parent_sha": "a5f31530649fde69e9c825ba18871a739f926230"
    }
  },
  {
    "oid": "47d8222f2ef31435ce3d64c9c74144658ed10ce9",
    "message": "Enable CTRL + Mouse Wheel Zoom",
    "date": "2021-06-21T23:38:20Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/47d8222f2ef31435ce3d64c9c74144658ed10ce9",
    "details": {
      "sha": "7631357d19ef538ad72f7c21ae85c6e7098dfad6",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/gui/PaneUpdaterThread.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/47d8222f2ef31435ce3d64c9c74144658ed10ce9/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2FPaneUpdaterThread.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/47d8222f2ef31435ce3d64c9c74144658ed10ce9/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2FPaneUpdaterThread.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2FPaneUpdaterThread.java?ref=47d8222f2ef31435ce3d64c9c74144658ed10ce9",
      "patch": "@@ -62,7 +62,7 @@ public abstract class PaneUpdaterThread extends Thread {\n     public void run() {\n         doShit();\n         synchronizePane();\n-        //attachCtrlMouseWheelZoom(scrollPane, panelArea); //freezes the UI for some reason, probably cause BCV is\n+        attachCtrlMouseWheelZoom(scrollPane, panelArea); //freezes the UI for some reason, probably cause BCV is\n         // doing dumb shit with the swing thread\n     }\n ",
      "parent_sha": "c940bf5c8d12e5f2f3d7bd0284376de79972ee50"
    }
  },
  {
    "oid": "e632cf884b3f3e4a7113fdbe95c8320d81ea5965",
    "message": "Clean up String.format\n\nIt works like printf, why not use it like printf?",
    "date": "2015-08-31T21:14:03Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/e632cf884b3f3e4a7113fdbe95c8320d81ea5965",
    "details": {
      "sha": "21f5d537cf9357e2f71b8e3dff920e63894f1ddd",
      "filename": "src/the/bytecode/club/bytecodeviewer/JarUtils.java",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/e632cf884b3f3e4a7113fdbe95c8320d81ea5965/src%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FJarUtils.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/e632cf884b3f3e4a7113fdbe95c8320d81ea5965/src%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FJarUtils.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FJarUtils.java?ref=e632cf884b3f3e4a7113fdbe95c8320d81ea5965",
      "patch": "@@ -68,10 +68,7 @@ public static void put(final File jarFile) throws IOException {\n \t\t\t\t\t\tif(!entry.isDirectory())\n \t\t\t\t\t\t\tfiles.put(name, bytes);\n \t\t\t\t\t} else {\n-\t\t\t\t\t\tString cafebabe = String.format(\"%02X\", bytes[0])\n-\t\t\t\t\t\t\t\t+ String.format(\"%02X\", bytes[1])\n-\t\t\t\t\t\t\t\t+ String.format(\"%02X\", bytes[2])\n-\t\t\t\t\t\t\t\t+ String.format(\"%02X\", bytes[3]);\n+\t\t\t\t\t\tString cafebabe = String.format(\"%02X%02X%02X%02X\", bytes[0], bytes[1], bytes[2], bytes[3]);\n \t\t\t\t\t\tif(cafebabe.toLowerCase().equals(\"cafebabe\")) {\n \t\t\t\t\t\t\ttry {\n \t\t\t\t\t\t\t\tfinal ClassNode cn = getNode(bytes);",
      "parent_sha": "c75c2c204a5bd624573de2b2f7d7a2a4e6af08dd"
    }
  },
  {
    "oid": "c29f0fbb214df33ce30de9d7ce6de4785cd9d75d",
    "message": "Fix NPE on System Theme",
    "date": "2024-09-30T02:11:05Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/c29f0fbb214df33ce30de9d7ce6de4785cd9d75d",
    "details": {
      "sha": "dcd50b0fdd29e5175b845210852a6086e01054b3",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/gui/resourceviewer/TabComponent.java",
      "status": "modified",
      "additions": 8,
      "deletions": 3,
      "changes": 11,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/c29f0fbb214df33ce30de9d7ce6de4785cd9d75d/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourceviewer%2FTabComponent.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/c29f0fbb214df33ce30de9d7ce6de4785cd9d75d/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourceviewer%2FTabComponent.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourceviewer%2FTabComponent.java?ref=c29f0fbb214df33ce30de9d7ce6de4785cd9d75d",
      "patch": "@@ -130,9 +130,14 @@ private void removeTab(int index)\n      */\n     private ScrollableTabPanel getTabPanel()\n     {\n-        for (Component component : Objects.requireNonNull(viewport()).getComponents())\n-            if (component instanceof ScrollableTabPanel)\n-                return (ScrollableTabPanel) component;\n+        DarkScrollableTabViewport viewport = viewport();\n+\n+        if(viewport != null)\n+        {\n+            for (Component component : viewport.getComponents())\n+                if (component instanceof ScrollableTabPanel)\n+                    return (ScrollableTabPanel) component;\n+        }\n \n         return null;\n     }",
      "parent_sha": "5dab52bfd3a8a16d6b786a7e06a72ea21bbf35e6"
    }
  },
  {
    "oid": "c70c052f538bfb597bb6561fc7acbe3ed18afa08",
    "message": "Prefer Process Builder",
    "date": "2021-07-19T13:23:42Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/c70c052f538bfb597bb6561fc7acbe3ed18afa08",
    "details": {
      "sha": "8c50274229c888b866e65abc24a58bcaa6842ffc",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/Constants.java",
      "status": "modified",
      "additions": 14,
      "deletions": 9,
      "changes": 23,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/c70c052f538bfb597bb6561fc7acbe3ed18afa08/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FConstants.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/c70c052f538bfb597bb6561fc7acbe3ed18afa08/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FConstants.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FConstants.java?ref=c70c052f538bfb597bb6561fc7acbe3ed18afa08",
      "patch": "@@ -57,15 +57,20 @@ public static String getBCVDirectory()\n \t\t//hides the BCV directory\n \t\tif (isWindows() && !BCVDir.isHidden())\n \t\t{\n-\t\t\ttry {\n-\t\t\t\tBytecodeViewer.sm.pauseBlocking();\n-\t\t\t\t// Hide file by running attrib system command (on Windows)\n-\t\t\t\tRuntime.getRuntime().exec(\"attrib +H \" + BCVDir.getAbsolutePath());\n-\t\t\t} catch (Exception e) {\n-\t\t\t\t//ignore\n-\t\t\t} finally {\n-\t\t\t\tBytecodeViewer.sm.resumeBlocking();\n-\t\t\t}\n+\t\t\tnew Thread(()->{\n+\t\t\t\ttry {\n+\t\t\t\t\tBytecodeViewer.sm.pauseBlocking();\n+\t\t\t\t\t\n+\t\t\t\t\t// Hide file by running attrib system command (on Windows)\n+\t\t\t\t\tProcess p = new ProcessBuilder(\"attrib\",\n+\t\t\t\t\t\t\t\"+H\",\n+\t\t\t\t\t\t\tBCVDir.getAbsolutePath()).start();\n+\t\t\t\t} catch (Exception e) {\n+\t\t\t\t\t//ignore\n+\t\t\t\t} finally {\n+\t\t\t\t\tBytecodeViewer.sm.resumeBlocking();\n+\t\t\t\t}\n+\t\t\t}, \"Hide BCV Dir\").start();\n \t\t}\n \t\t\n \t\treturn BCVDir.getAbsolutePath();",
      "parent_sha": "f21cf4145575909918819cf207c072421ed2b2b0"
    }
  },
  {
    "oid": "683207d4b05f71fe4163cd03b26f37717ce63fda",
    "message": "ClassLoader Fix\n\nThis resolves an issue with the String Decrypter plugins",
    "date": "2021-07-23T22:34:26Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/683207d4b05f71fe4163cd03b26f37717ce63fda",
    "details": {
      "sha": "3c6a18a207fd84afd09e9b9fa0ae7ec48a8b1471",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/api/BCV.java",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/683207d4b05f71fe4163cd03b26f37717ce63fda/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fapi%2FBCV.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/683207d4b05f71fe4163cd03b26f37717ce63fda/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fapi%2FBCV.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fapi%2FBCV.java?ref=683207d4b05f71fe4163cd03b26f37717ce63fda",
      "patch": "@@ -78,9 +78,17 @@ public static URLClassLoader getClassLoaderInstance() {\n      */\n     public static Class<?> loadClassIntoClassLoader(ClassNode cn)\n     {\n+        if(cn == null)\n+            return null;\n+        \n         getClassNodeLoader().addClass(cn);\n     \n-        try {\n+        try\n+        {\n+            //TODO this should be rebuilding the class loader each time a new resource has been added or removed\n+            if(cl == null)\n+                loadClassesIntoClassLoader();\n+            \n             return cl.loadClass(cn.name);\n         } catch (Exception classLoadException) {\n             the.bytecode.club.bytecodeviewer.BytecodeViewer.handleException(classLoadException);",
      "parent_sha": "0a41fd24c854e8c59a518c20b5d63564b3cce6a8"
    }
  },
  {
    "oid": "626b8566b9d271fc91c6778c48c75c5b563df22f",
    "message": "Better Procyon Decompiling",
    "date": "2024-10-02T17:12:52Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/626b8566b9d271fc91c6778c48c75c5b563df22f",
    "details": {
      "sha": "8f51fac6d59ccb59a892edf3ffcc1c73238b9dd2",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/decompilers/impl/ProcyonDecompiler.java",
      "status": "modified",
      "additions": 7,
      "deletions": 8,
      "changes": 15,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/626b8566b9d271fc91c6778c48c75c5b563df22f/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FProcyonDecompiler.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/626b8566b9d271fc91c6778c48c75c5b563df22f/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FProcyonDecompiler.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FProcyonDecompiler.java?ref=626b8566b9d271fc91c6778c48c75c5b563df22f",
      "patch": "@@ -31,8 +31,7 @@\n import the.bytecode.club.bytecodeviewer.decompilers.AbstractDecompiler;\n import the.bytecode.club.bytecodeviewer.translation.TranslatedStrings;\n import the.bytecode.club.bytecodeviewer.util.EncodeUtils;\n-import the.bytecode.club.bytecodeviewer.util.MiscUtils;\n-import the.bytecode.club.bytecodeviewer.util.TempFiles;\n+import the.bytecode.club.bytecodeviewer.util.TempFile;\n \n import java.io.*;\n import java.util.*;\n@@ -86,17 +85,16 @@ public String decompileClassNode(ClassNode cn, byte[] bytes)\n         String exception;\n         try\n         {\n-            final File tempClass = TempFiles.createTemporaryFile(false, \".class\");\n+            final TempFile tempFile = TempFile.createTemporaryFile(false, \".class\");\n+            final File tempClass = tempFile.createFileFromExtension(\".class\");\n \n+            //write the ClassNode bytes to the temp file\n             try (FileOutputStream fos = new FileOutputStream(tempClass))\n             {\n                 fos.write(bytes);\n             }\n-            catch (IOException e)\n-            {\n-                BytecodeViewer.handleException(e);\n-            }\n \n+            //setup proycon decompiler settings\n             DecompilerSettings settings = getDecompilerSettings();\n \n             LuytenTypeLoader typeLoader = new LuytenTypeLoader();\n@@ -126,7 +124,8 @@ public String decompileClassNode(ClassNode cn, byte[] bytes)\n             exception = ExceptionUI.SEND_STACKTRACE_TO_NL + sw;\n         }\n \n-        return PROCYON + \" \" + ERROR + \"! \" + ExceptionUI.SEND_STACKTRACE_TO + NL + NL + TranslatedStrings.SUGGESTED_FIX_DECOMPILER_ERROR + NL + NL + exception;\n+        return PROCYON + \" \" + ERROR + \"! \" + ExceptionUI.SEND_STACKTRACE_TO + NL + NL\n+            + TranslatedStrings.SUGGESTED_FIX_DECOMPILER_ERROR + NL + NL + exception;\n     }\n \n     @Override",
      "parent_sha": "67814737c9558f43090f7b24e3d0870be7f7a1e6"
    }
  },
  {
    "oid": "cbeb990d3fe995505792d49b7a7069c391f49ecd",
    "message": "New Default: Dark Theme",
    "date": "2023-12-18T07:30:44Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/cbeb990d3fe995505792d49b7a7069c391f49ecd",
    "details": {
      "sha": "6a18338f391c86c5594eed4200bcb0aac9168d97",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/Configuration.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/cbeb990d3fe995505792d49b7a7069c391f49ecd/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FConfiguration.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/cbeb990d3fe995505792d49b7a7069c391f49ecd/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FConfiguration.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FConfiguration.java?ref=cbeb990d3fe995505792d49b7a7069c391f49ecd",
      "patch": "@@ -84,7 +84,7 @@ public class Configuration\n \t\n \tpublic static BootState bootState = BootState.START_UP;\n \tpublic static Language language = Language.ENGLISH;\n-\tpublic static LAFTheme lafTheme = LAFTheme.SYSTEM; //lightmode by default since it uses the system theme\n+\tpublic static LAFTheme lafTheme = LAFTheme.DARK;\n \tpublic static RSTATheme rstaTheme = lafTheme.getRSTATheme();\n \tpublic static long lastHotKeyExecuted = 0;\n \t",
      "parent_sha": "4f65ffdea17219c86422f61ec8f7d7886a86a18b"
    }
  },
  {
    "oid": "fc36f3562d632631c0759820f33546df71734e4f",
    "message": "Swing Cleanup",
    "date": "2021-06-29T00:54:39Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/fc36f3562d632631c0759820f33546df71734e4f",
    "details": {
      "sha": "4e9954785f62a946ce822bfd08c2149096719474",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/gui/util/PaneUpdaterThread.java",
      "status": "modified",
      "additions": 10,
      "deletions": 4,
      "changes": 14,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/fc36f3562d632631c0759820f33546df71734e4f/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Futil%2FPaneUpdaterThread.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/fc36f3562d632631c0759820f33546df71734e4f/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Futil%2FPaneUpdaterThread.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Futil%2FPaneUpdaterThread.java?ref=fc36f3562d632631c0759820f33546df71734e4f",
      "patch": "@@ -77,8 +77,10 @@ public void run()\n     \n         //this still freezes the swing UI\n         synchronizePane();\n-        \n-        attachCtrlMouseWheelZoom(updateUpdaterTextArea.getScrollPane(), updateUpdaterTextArea);\n+    \n+        //attach CTRL + Mouse Wheel Zoom\n+        SwingUtilities.invokeLater(()->\n+                attachCtrlMouseWheelZoom(updateUpdaterTextArea.getScrollPane(), updateUpdaterTextArea));\n     }\n \n     public void attachCtrlMouseWheelZoom(RTextScrollPane scrollPane, RSyntaxTextArea panelArea) {\n@@ -266,8 +268,12 @@ public void synchronizePane()\n                 panel.add(updateUpdaterTextArea.getScrollPane().getColumnHeader().getComponent(0), BorderLayout.NORTH);\n                 panel.add(methodsList, BorderLayout.SOUTH);\n                 methodsList.setBackground(BLANK_COLOR);\n-                updateUpdaterTextArea.getScrollPane().getColumnHeader().removeAll();\n-                updateUpdaterTextArea.getScrollPane().getColumnHeader().add(panel);\n+    \n+                SwingUtilities.invokeLater(()->\n+                {\n+                    updateUpdaterTextArea.getScrollPane().getColumnHeader().removeAll();\n+                    updateUpdaterTextArea.getScrollPane().getColumnHeader().add(panel);\n+                });\n             }\n         }\n     }",
      "parent_sha": "f6cf25cd2f020cb4b28d42fbeeddd3cf5c859ea6"
    }
  },
  {
    "oid": "7b724d00c24a807f483184623726a46a11fae252",
    "message": "Fix Korean",
    "date": "2021-07-08T09:32:09Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/7b724d00c24a807f483184623726a46a11fae252",
    "details": {
      "sha": "90aee44408107a5eb42a34f9aed10f9d6dc70ca4",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/translation/Language.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/7b724d00c24a807f483184623726a46a11fae252/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Ftranslation%2FLanguage.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/7b724d00c24a807f483184623726a46a11fae252/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Ftranslation%2FLanguage.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Ftranslation%2FLanguage.java?ref=7b724d00c24a807f483184623726a46a11fae252",
      "patch": "@@ -33,7 +33,7 @@\n /**\n  * All of the supported languages\n  *\n- * TODO: Hindi, Bengali, Thai & Javanese need fonts to be supplied for them to show.\n+ * TODO: Hindi, Bengali, Korean, Thai & Javanese need fonts to be supplied for them to show.\n  *  The default font should be saved so it can be restored for latin-character based languages\n  *\n  * @author Konloch\n@@ -58,7 +58,7 @@ public enum Language\n \tITALIAN(\"/translations/italian.json\", \"Italiano\", \"English\", \"it\"),\n \tJAPANESE(\"/translations/japanese.json\", \"\u65e5\u672c\u8a9e\", \"English\", \"ja\"),\n \t//JAVANESE(\"/translations/javanese.json\", \"\ua9a7\ua9b1\ua997\ua9ae\", \"English\", \"jw\", \"jv\"),\n-\tKOREAN(\"/translations/korean.json\", \"Korean\", \"English\", \"ko\"),\n+\t//KOREAN(\"/translations/korean.json\", \"Korean\", \"English\", \"ko\"),\n \tMALAY(\"/translations/malay.json\", \"Bahasa Melayu\", \"English\", \"ms\"),\n \tMANDARIN(\"/translations/mandarin.json\", \"\u666e\u901a\u8bdd\", \"Mandarin\", \"zh-CN\", \"zh_cn\", \"zh\"),\n \tNEDERLANDS(\"/translations/nederlands.json\", \"Nederlands\", \"English\", \"nl\"), //dutch",
      "parent_sha": "342d60536b6e2139f9cfe2b60cff4bb8c7489e19"
    }
  },
  {
    "oid": "cf5c21b63c7856328e77a21a62d0014868455493",
    "message": "Fix loading for individual .class files",
    "date": "2016-05-17T21:29:25Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/cf5c21b63c7856328e77a21a62d0014868455493",
    "details": {
      "sha": "879af25be62028839a835e6496735e77bd80a245",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/BytecodeViewer.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/cf5c21b63c7856328e77a21a62d0014868455493/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/cf5c21b63c7856328e77a21a62d0014868455493/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java?ref=cf5c21b63c7856328e77a21a62d0014868455493",
      "patch": "@@ -689,7 +689,7 @@ public void run() {\n                                             final ClassNode cn = JarUtils.getNode(bytes);\n \n                                             FileContainer container = new FileContainer(f);\n-                                            container.files.put(fn, bytes);\n+                                            container.files.put(cn.name + \".class\", bytes);\n                                             container.add(cn);\n                                             BytecodeViewer.files.add(container);\n                                         } else {",
      "parent_sha": "45c8bb4aacab4e8babbf2c0541cba3616315f4c7"
    }
  },
  {
    "oid": "b2e8b85a968b609751d831b3cb4bf1c4d8903f53",
    "message": "Alphabetized",
    "date": "2021-06-30T20:03:05Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/b2e8b85a968b609751d831b3cb4bf1c4d8903f53",
    "details": {
      "sha": "157de0ef1b7f24b7090c251421ec7ffb6eff0407",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/translation/Language.java",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/b2e8b85a968b609751d831b3cb4bf1c4d8903f53/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Ftranslation%2FLanguage.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/b2e8b85a968b609751d831b3cb4bf1c4d8903f53/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Ftranslation%2FLanguage.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Ftranslation%2FLanguage.java?ref=b2e8b85a968b609751d831b3cb4bf1c4d8903f53",
      "patch": "@@ -21,16 +21,16 @@\n  */\n public enum Language\n {\n+\tARABIC(\"/translations/arabic.json\", \"\u0639\u0631\u0628\u0649\", \"ab\"),\n \tENGLISH(\"/translations/english.json\", \"English\", \"en\"),\n-\tMANDARIN(\"/translations/mandarin.json\", \"\u666e\u901a\u8bdd\", \"zh_cn\", \"zh\"),\n-\t//HINDI(\"/translations/hindi.json\", \"\u0939\u093f\u0902\u0926\u0940\", \"hi\"),\n-\tSPANISH(\"/translations/spanish.json\", \"Espa\u00f1ol\", \"es\"),\n \tFRENCH(\"/translations/french.json\", \"Fran\u00e7ais\", \"fr\"),\n-\tARABIC(\"/translations/arabic.json\", \"\u0639\u0631\u0628\u0649\", \"ab\"),\n-\tRUSSIAN(\"/translations/russian.json\", \"\u0440\u0443\u0441\u0441\u043a\u0438\u0439\", \"ru\"),\n \tGERMAN(\"/translations/german.json\", \"Deutsch\", \"de\"),\n+\t//HINDI(\"/translations/hindi.json\", \"\u0939\u093f\u0902\u0926\u0940\", \"hi\"),\n \tJAPANESE(\"/translations/japanese.json\", \"\u65e5\u672c\u8a9e\", \"ja\"),\n+\tMANDARIN(\"/translations/mandarin.json\", \"\u666e\u901a\u8bdd\", \"zh_cn\", \"zh\"),\n \tPORTUGUESE(\"/translations/portuguese.json\", \"Portugu\u00eas\", \"pt\"),\n+\tRUSSIAN(\"/translations/russian.json\", \"\u0440\u0443\u0441\u0441\u043a\u0438\u0439\", \"ru\"),\n+\tSPANISH(\"/translations/spanish.json\", \"Espa\u00f1ol\", \"es\"),\n \t;\n \t\n \tprivate static final HashedMap<String, Language> languageCodeLookup;",
      "parent_sha": "97d4d51a047aef25d0fe35432bdb7dc2759c60b9"
    }
  },
  {
    "oid": "dd7e605db57fc60a6448eaf761bf16cf1d3ba07c",
    "message": "Add xapk extension in SUPPORTED_FILE_EXTENSIONS",
    "date": "2024-09-27T02:05:37Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/dd7e605db57fc60a6448eaf761bf16cf1d3ba07c",
    "details": {
      "sha": "700f2e05669b9009834e6cea491d5397e94f147a",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/resources/ResourceType.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/dd7e605db57fc60a6448eaf761bf16cf1d3ba07c/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fresources%2FResourceType.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/dd7e605db57fc60a6448eaf761bf16cf1d3ba07c/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fresources%2FResourceType.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fresources%2FResourceType.java?ref=dd7e605db57fc60a6448eaf761bf16cf1d3ba07c",
      "patch": "@@ -33,7 +33,7 @@ public enum ResourceType\n     // TODO add the files icons for the missing files from the.bytecode.club.bytecodeviewer.util.SyntaxLanguage\n     //      or from org.fife.ui.rsyntaxtextarea.FileTypeUtil or from org.fife.ui.rsyntaxtextarea.SyntaxConstants\n \n-    CLASS_FILE(IconResources.classIcon, \"class\"), JAVA_ARCHIVE(IconResources.jarIcon, \"jar\", \"war\", \"ear\"), ZIP_ARCHIVE(IconResources.zipIcon, \"zip\"), ANDROID_ARCHIVE(IconResources.androidIcon, \"apk\", \"wapk\", \"dex\"), IMAGE_FILE(IconResources.imageIcon, \"png\", \"jpg\", \"jpeg\", \"bmp\", \"wbmp\", \"gif\", \"tif\", \"webp\"), CONFIG_TEXT_FILE(IconResources.configIcon, \"properties\", \"xml\", \"jsp\", \"mf\", \"config\", \"csv\", \"yml\", \"yaml\", \"ini\", \"json\", \"sql\", \"gradle\", \"dockerfile\", \"htaccess\", \"plugin\", \"attachprovider\", \"transportservice\", \"connector\"), JAVA_FILE(IconResources.javaIcon, \"java\"), TEXT_FILE(IconResources.textIcon, \"txt\", \"md\", \"log\", \"html\", \"css\"), CPP_FILE(IconResources.cplusplusIcon, \"c\", \"cpp\", \"h\"), CSHARP_FILE(IconResources.csharpIcon, \"cs\"), BAT_FILE(IconResources.batIcon, \"bat\", \"batch\"), SH_FILE(IconResources.shIcon, \"sh\", \"bash\"),\n+    CLASS_FILE(IconResources.classIcon, \"class\"), JAVA_ARCHIVE(IconResources.jarIcon, \"jar\", \"war\", \"ear\"), ZIP_ARCHIVE(IconResources.zipIcon, \"zip\"), ANDROID_ARCHIVE(IconResources.androidIcon, \"apk\", \"wapk\", \"dex\", \"xapk\"), IMAGE_FILE(IconResources.imageIcon, \"png\", \"jpg\", \"jpeg\", \"bmp\", \"wbmp\", \"gif\", \"tif\", \"webp\"), CONFIG_TEXT_FILE(IconResources.configIcon, \"properties\", \"xml\", \"jsp\", \"mf\", \"config\", \"csv\", \"yml\", \"yaml\", \"ini\", \"json\", \"sql\", \"gradle\", \"dockerfile\", \"htaccess\", \"plugin\", \"attachprovider\", \"transportservice\", \"connector\"), JAVA_FILE(IconResources.javaIcon, \"java\"), TEXT_FILE(IconResources.textIcon, \"txt\", \"md\", \"log\", \"html\", \"css\"), CPP_FILE(IconResources.cplusplusIcon, \"c\", \"cpp\", \"h\"), CSHARP_FILE(IconResources.csharpIcon, \"cs\"), BAT_FILE(IconResources.batIcon, \"bat\", \"batch\"), SH_FILE(IconResources.shIcon, \"sh\", \"bash\"),\n     ;\n \n     public static final Map<String, ResourceType> extensionMap = new HashMap<>();",
      "parent_sha": "515495e3780af0d822cc916407ac095bc6a658a7"
    }
  },
  {
    "oid": "e4e511bf3d60cb64b361078914b8c9df5ec8561f",
    "message": "Fix FernFlower \"Rename ambiguous classes and class elements\".",
    "date": "2022-11-03T09:59:58Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/e4e511bf3d60cb64b361078914b8c9df5ec8561f",
    "details": {
      "sha": "8faf4d0ddd96b948ae08d955702f05309443cc8f",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/decompilers/impl/FernFlowerDecompiler.java",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/e4e511bf3d60cb64b361078914b8c9df5ec8561f/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FFernFlowerDecompiler.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/e4e511bf3d60cb64b361078914b8c9df5ec8561f/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FFernFlowerDecompiler.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FFernFlowerDecompiler.java?ref=e4e511bf3d60cb64b361078914b8c9df5ec8561f",
      "patch": "@@ -118,7 +118,12 @@ public String decompileClassNode(final ClassNode cn, byte[] b)\n \n         tempClass.delete();\n \n-        final File outputJava = new File(start + \".java\");\n+        String javaDir = start;\n+        if (BytecodeViewer.viewer.ren.isSelected()) {\n+            javaDir = tempDirectory + \"class_0\";\n+        }\n+\n+        final File outputJava = new File(javaDir + \".java\");\n         if (outputJava.exists()) {\n             String s;\n             try {",
      "parent_sha": "77521a23b241fbe969954fcf0646442aca911d16"
    }
  },
  {
    "oid": "cf927493371e939e1a2254e729d17420a5497ecf",
    "message": "Syntax Cleanup",
    "date": "2024-10-05T06:11:44Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/cf927493371e939e1a2254e729d17420a5497ecf",
    "details": {
      "sha": "440613f4fc964b0bbc4eaefc47cfb3c1474fc18d",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/gui/resourceviewer/BytecodeViewPanel.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/cf927493371e939e1a2254e729d17420a5497ecf/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourceviewer%2FBytecodeViewPanel.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/cf927493371e939e1a2254e729d17420a5497ecf/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourceviewer%2FBytecodeViewPanel.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourceviewer%2FBytecodeViewPanel.java?ref=cf927493371e939e1a2254e729d17420a5497ecf",
      "patch": "@@ -51,6 +51,7 @@ public class BytecodeViewPanel extends JPanel\n     public BytecodeViewPanel(int panelIndex, ClassViewer viewer)\n     {\n         super(new BorderLayout());\n+\n         this.panelIndex = panelIndex;\n         this.viewer = viewer;\n     }\n@@ -63,7 +64,7 @@ public void createPane(ClassViewer viewer)\n         if (viewer.resource == null)\n             add(new JLabel(\"ERROR: Resource Viewer Missing Resource\"));\n \n-            //TODO remove when bcel support is added\n+        //TODO remove when bcel support is added\n         else if (viewer.resource.getResourceClassNode() == null)\n             add(new JLabel(\"ERROR: Resource Viewer Missing ClassNode\"));\n     }",
      "parent_sha": "5cf85f78d4776259f354c42cd6bee35c73a0c971"
    }
  },
  {
    "oid": "c15103e78eb66e17829fed3e54738ac89d628c37",
    "message": "Update MiscUtils.java",
    "date": "2021-06-28T07:40:24Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/c15103e78eb66e17829fed3e54738ac89d628c37",
    "details": {
      "sha": "9a89a3120aafa61b59e63ffcfa7b6b7a96ab0df6",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/util/MiscUtils.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/c15103e78eb66e17829fed3e54738ac89d628c37/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Futil%2FMiscUtils.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/c15103e78eb66e17829fed3e54738ac89d628c37/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Futil%2FMiscUtils.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Futil%2FMiscUtils.java?ref=c15103e78eb66e17829fed3e54738ac89d628c37",
      "patch": "@@ -45,7 +45,7 @@ public class MiscUtils\n     private static final String AB = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n     private static final String AN = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n     private static final Random rnd = new Random();\n-    private static HashSet<String> createdRandomizedNames = new HashSet<>();\n+    private static final HashSet<String> createdRandomizedNames = new HashSet<>();\n \n     /**\n      * Returns a random string without numbers",
      "parent_sha": "e349711502dba56f8088c8146f6f9f08e36d7f56"
    }
  },
  {
    "oid": "7b01aa607c745eabadcf0508e1d20d1b6fcf1e4b",
    "message": "Automatically Import Known Resources\n\nStill a work in progress. If you open a know file-type through the resource list in BCV it will now attempt to automatically import that resource instead of displaying the binary text",
    "date": "2021-07-15T08:26:18Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/7b01aa607c745eabadcf0508e1d20d1b6fcf1e4b",
    "details": {
      "sha": "5e3bf31af1c1be0c6e5d2f900e9b429ca6624287",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/gui/resourcelist/ResourceListPane.java",
      "status": "modified",
      "additions": 47,
      "deletions": 1,
      "changes": 48,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/7b01aa607c745eabadcf0508e1d20d1b6fcf1e4b/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourcelist%2FResourceListPane.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/7b01aa607c745eabadcf0508e1d20d1b6fcf1e4b/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourcelist%2FResourceListPane.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourcelist%2FResourceListPane.java?ref=7b01aa607c745eabadcf0508e1d20d1b6fcf1e4b",
      "patch": "@@ -25,9 +25,14 @@\n import javax.swing.tree.DefaultMutableTreeNode;\n import javax.swing.tree.TreeNode;\n import javax.swing.tree.TreePath;\n+\n+import me.konloch.kontainer.io.DiskWriter;\n+import org.apache.commons.io.FilenameUtils;\n import org.objectweb.asm.tree.ClassNode;\n import the.bytecode.club.bytecodeviewer.BytecodeViewer;\n+import the.bytecode.club.bytecodeviewer.Constants;\n import the.bytecode.club.bytecodeviewer.resources.IconResources;\n+import the.bytecode.club.bytecodeviewer.resources.importing.Import;\n import the.bytecode.club.bytecodeviewer.translation.TranslatedStrings;\n import the.bytecode.club.bytecodeviewer.translation.Translation;\n import the.bytecode.club.bytecodeviewer.translation.components.TranslatedJCheckBox;\n@@ -37,6 +42,9 @@\n import the.bytecode.club.bytecodeviewer.util.FileDrop;\n import the.bytecode.club.bytecodeviewer.util.LazyNameUtil;\n \n+import static the.bytecode.club.bytecodeviewer.Constants.fs;\n+import static the.bytecode.club.bytecodeviewer.Constants.tempDirectory;\n+\n /***************************************************************************\n  * Bytecode Viewer (BCV) - Java & Android Reverse Engineering Suite        *\n  * Copyright (C) 2014 Kalen 'Konloch' Kinloch - http://bytecodeviewer.com  *\n@@ -155,6 +163,8 @@ public void updateTree()\n     {\n         try\n         {\n+            \n+            //TODO refresh while preserving the opened files from before the refresh\n             treeRoot.removeAllChildren();\n             for (ResourceContainer container : BytecodeViewer.resourceContainers)\n             {\n@@ -317,7 +327,43 @@ public void openPath(TreePath path)\n         }\n         else if(container.resourceFiles.containsKey(name))\n         {\n-            BytecodeViewer.viewer.workPane.addFileResource(container, name);\n+            final String fn = name.toLowerCase();\n+            final String extension = fn.contains(\":\") ? null : FilenameUtils.getExtension(fn);\n+    \n+            Import imp = Import.extensionMap.get(extension);\n+            if(imp == null) //show images, text files, or hex view\n+                BytecodeViewer.viewer.workPane.addFileResource(container, name);\n+            else //attempt to import known resources\n+            {\n+                int hash = (container.name + name).hashCode();\n+                \n+                //TODO make a settings toggle to disable preservation of the original name\n+                // it should also detect if the file name is not compatible with the current OS and enable automatically\n+                File tempFile = new File(tempDirectory + fs + hash + fs + name + \".\" + extension);\n+                if(!tempFile.exists())\n+                {\n+                    DiskWriter.replaceFileBytes(tempFile.getAbsolutePath(), container.resourceFiles.get(name), false);\n+    \n+                    try\n+                    {\n+                        imp.getImporter().open(tempFile);\n+                        try {\n+                            updateTree();\n+                        } catch (NullPointerException ignored) { }\n+                    }\n+                    catch (Exception e)\n+                    {\n+                        e.printStackTrace();\n+        \n+                        //failsafe\n+                        BytecodeViewer.viewer.workPane.addFileResource(container, name);\n+                    }\n+                }\n+                else\n+                {\n+                    //alert the user\n+                }\n+            }\n         }\n     }\n     ",
      "parent_sha": "4d0021f2efa04c7216fad9350f2ff9fa4c1b00f9"
    }
  },
  {
    "oid": "45c9cd5d1a8bd08723b6cc761fb8e13793be4726",
    "message": "Display Opened File Path\n\nA bit better for debugging which file the user has opened",
    "date": "2021-07-15T19:39:43Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/45c9cd5d1a8bd08723b6cc761fb8e13793be4726",
    "details": {
      "sha": "fb9e50bab7f548068fb5517ee462d05526376218",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/resources/importing/ImportResource.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/45c9cd5d1a8bd08723b6cc761fb8e13793be4726/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fresources%2Fimporting%2FImportResource.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/45c9cd5d1a8bd08723b6cc761fb8e13793be4726/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fresources%2Fimporting%2FImportResource.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fresources%2Fimporting%2FImportResource.java?ref=45c9cd5d1a8bd08723b6cc761fb8e13793be4726",
      "patch": "@@ -42,7 +42,7 @@ public void run()\n \t\t\tfor (final File file : files)\n \t\t\t{\n \t\t\t\tfinal String fn = file.getName();\n-\t\t\t\tSystem.out.println(\"Opening...\" + fn);\n+\t\t\t\tSystem.out.println(\"Opening...\" + file.getAbsolutePath());\n \t\t\t\t\n \t\t\t\t//check if file exists\n \t\t\t\tif (!file.exists())",
      "parent_sha": "068c3c55607fb73320c6df4311d1ff1242e7ee84"
    }
  },
  {
    "oid": "ea48ec9800a08de4d25b03af6b5cea1c252e0b61",
    "message": "fix plugin writer with compiled java plugins",
    "date": "2022-03-22T15:49:19Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/ea48ec9800a08de4d25b03af6b5cea1c252e0b61",
    "details": {
      "sha": "294382b771efca9aef1550924cb0d42dedea5ee3",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/plugin/PluginWriter.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/ea48ec9800a08de4d25b03af6b5cea1c252e0b61/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fplugin%2FPluginWriter.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/ea48ec9800a08de4d25b03af6b5cea1c252e0b61/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fplugin%2FPluginWriter.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fplugin%2FPluginWriter.java?ref=ea48ec9800a08de4d25b03af6b5cea1c252e0b61",
      "patch": "@@ -12,6 +12,7 @@\n import javax.swing.JMenuBar;\n import javax.swing.JMenuItem;\n import javax.swing.JPanel;\n+import com.google.common.io.Files;\n import me.konloch.kontainer.io.DiskReader;\n import me.konloch.kontainer.io.DiskWriter;\n import org.apache.commons.compress.utils.FileNameUtils;\n@@ -188,7 +189,7 @@ public void runPlugin()\n \t\ttry\n \t\t{\n \t\t\t//write to temporary file location\n-\t\t\tDiskWriter.replaceFile(tempFile.getAbsolutePath(), area.getText(), false);\n+\t\t\tFiles.copy(savePath, tempFile);\n \t\t\t//run plugin from that location\n \t\t\tPluginManager.runPlugin(tempFile);\n \t\t}",
      "parent_sha": "b5664b2949e22c6d3e89918645dab8407766ca4f"
    }
  },
  {
    "oid": "c27db9be9b51e2c29133092e39f437ad13ad5cfa",
    "message": "Improved Javap",
    "date": "2021-07-12T14:42:56Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/c27db9be9b51e2c29133092e39f437ad13ad5cfa",
    "details": {
      "sha": "92166713db6874823659f1145e5af6272121e1c3",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/decompilers/impl/JavapDisassembler.java",
      "status": "modified",
      "additions": 11,
      "deletions": 6,
      "changes": 17,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/c27db9be9b51e2c29133092e39f437ad13ad5cfa/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FJavapDisassembler.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/c27db9be9b51e2c29133092e39f437ad13ad5cfa/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FJavapDisassembler.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FJavapDisassembler.java?ref=c27db9be9b51e2c29133092e39f437ad13ad5cfa",
      "patch": "@@ -69,12 +69,14 @@ public String decompileClassNode(ClassNode cn, byte[] b)\n         JFrameConsolePrintStream sysOutBuffer = null;\n         try\n         {\n+            //load java tools into a temporary classloader\n             URLClassLoader child = new URLClassLoader(\n                     new URL[] {new File(Configuration.javaTools).toURI().toURL()},\n                     this.getClass().getClassLoader()\n             );\n-            //Class<?> javap = child.loadClass(\"com.sun.tools.javap.Main\");\n-            Class<?> javap = Class.forName(\"com.sun.tools.javap.Main\", true, child);\n+            \n+            //setup reflection\n+            Class<?> javap = child.loadClass(\"com.sun.tools.javap.Main\");\n             Method main = javap.getMethod(\"main\", String[].class);\n             Object cl = javap.newInstance();\n             \n@@ -85,7 +87,12 @@ public String decompileClassNode(ClassNode cn, byte[] b)\n             BytecodeViewer.sm.silenceExec(true);\n             \n             //invoke Javap\n-            main.invoke(cl, (Object) new String[]{\"-c\", \"-l\", \"-constants\", tempClass.getAbsolutePath()});\n+            main.invoke(cl, (Object) new String[]{\n+                    \"-p\", //Shows all classes and members\n+                    \"-c\", //Prints out disassembled code\n+                    //\"-l\", //Prints out line and local variable tables\n+                    \"-constants\", //Shows static final constants\n+                    tempClass.getAbsolutePath()});\n         }\n         catch (Exception e)\n         {\n@@ -107,7 +114,5 @@ public String decompileClassNode(ClassNode cn, byte[] b)\n     }\n \n     @Override\n-    public void decompileToZip(String sourceJar, String zipName) {\n-\n-    }\n+    public void decompileToZip(String sourceJar, String zipName) { }\n }",
      "parent_sha": "c8b23818a4f4af40b651da909ebf4ed7f9061e62"
    }
  },
  {
    "oid": "6d3a383c968c213888b95a0b041c88d1f147e405",
    "message": "Cleanup",
    "date": "2021-07-21T23:21:45Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/6d3a383c968c213888b95a0b041c88d1f147e405",
    "details": {
      "sha": "0e20c200b2481dd4e6b459d6888c1642475f7a5b",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/BytecodeViewer.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/6d3a383c968c213888b95a0b041c88d1f147e405/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/6d3a383c968c213888b95a0b041c88d1f147e405/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java?ref=6d3a383c968c213888b95a0b041c88d1f147e405",
      "patch": "@@ -13,9 +13,9 @@\n \n import me.konloch.kontainer.io.DiskReader;\n \n-import the.bytecode.club.bytecodeviewer.bootloader.Boot;\n import the.bytecode.club.bytecodeviewer.api.BCV;\n import the.bytecode.club.bytecodeviewer.api.ExceptionUI;\n+import the.bytecode.club.bytecodeviewer.bootloader.Boot;\n import the.bytecode.club.bytecodeviewer.bootloader.InstallFatJar;\n import the.bytecode.club.bytecodeviewer.bootloader.UpdateCheck;\n import the.bytecode.club.bytecodeviewer.gui.MainViewerGUI;",
      "parent_sha": "52927e678ff4f1094e0cf64fc595728a18912b59"
    }
  },
  {
    "oid": "b69389cc5f342869bda885e334c53b31748f6793",
    "message": "FernFlower Decompiler Changes\n\nUses the new Temp Files API. Exceptions are properly handled. File system errors are properly displayed. No more temporary files left behind. `-ren` / rename classes option fixed.",
    "date": "2024-10-02T18:08:34Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/b69389cc5f342869bda885e334c53b31748f6793",
    "details": {
      "sha": "263314394eded67abf6c7ae7949df8fceb08efcb",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/decompilers/impl/FernFlowerDecompiler.java",
      "status": "modified",
      "additions": 81,
      "deletions": 89,
      "changes": 170,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/b69389cc5f342869bda885e334c53b31748f6793/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FFernFlowerDecompiler.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/b69389cc5f342869bda885e334c53b31748f6793/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FFernFlowerDecompiler.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FFernFlowerDecompiler.java?ref=b69389cc5f342869bda885e334c53b31748f6793",
      "patch": "@@ -24,7 +24,7 @@\n import the.bytecode.club.bytecodeviewer.api.ExceptionUI;\n import the.bytecode.club.bytecodeviewer.decompilers.AbstractDecompiler;\n import the.bytecode.club.bytecodeviewer.translation.TranslatedStrings;\n-import the.bytecode.club.bytecodeviewer.util.MiscUtils;\n+import the.bytecode.club.bytecodeviewer.util.TempFile;\n \n import java.io.*;\n \n@@ -72,124 +72,116 @@ public void decompileToZip(String sourceJar, String zipName)\n     @Override\n     public String decompileClassNode(ClassNode cn, byte[] bytes)\n     {\n-        String start = TEMP_DIRECTORY + FS + MiscUtils.getUniqueNameBroken(\"\", \".class\");\n+        String exception = \"This decompiler didn't throw an exception - this is probably a BCV logical bug\";\n \n-        final File tempClass = new File(start + \".class\");\n-\n-        String exception = \"\";\n-        try (FileOutputStream fos = new FileOutputStream(tempClass))\n-        {\n-            fos.write(bytes);\n-        }\n-        catch (IOException e)\n+        try\n         {\n-            StringWriter exceptionWriter = new StringWriter();\n-            e.printStackTrace(new PrintWriter(exceptionWriter));\n-            e.printStackTrace();\n-            exception = exceptionWriter.toString();\n-        }\n-\n+            final TempFile tempFile = TempFile.createTemporaryFile(true, \".class\");\n+            final File tempClassFile = tempFile.createFileFromExtension(false, false, \".class\");\n+            tempFile.setParent(new File(TEMP_DIRECTORY));\n+            File tempOutputJavaFile = tempFile.createFileFromExtension(false, true, \".java\");\n+            //File tempOutputJavaFile = new File(TEMP_DIRECTORY, tempClassFile.getName().substring(0, tempClassFile.getName().length()-6) + \".java\");\n \n-        if (LAUNCH_DECOMPILERS_IN_NEW_PROCESS)\n-        {\n-            /*try\n+            try (FileOutputStream fos = new FileOutputStream(tempClassFile))\n             {\n-                BytecodeViewer.sm.pauseBlocking();\n-                ProcessBuilder pb = new ProcessBuilder(ArrayUtils.addAll(\n-                        new String[]{ExternalResources.getSingleton().getJavaCommand(true), \"-jar\", ExternalResources.getSingleton().findLibrary(\"fernflower\")},\n-                        generateMainMethod(tempClass.getAbsolutePath(),\n-                                new File(tempDirectory).getAbsolutePath())\n-                ));\n-                Process p = pb.start();\n-                BytecodeViewer.createdProcesses.add(p);\n-                p.waitFor();\n-            } catch (Exception e) {\n-                BytecodeViewer.handleException(e);\n-            } finally {\n-                BytecodeViewer.sm.resumeBlocking();\n-            }*/\n-        }\n-        else\n-        {\n-            try\n+                fos.write(bytes);\n+            }\n+\n+            if (LAUNCH_DECOMPILERS_IN_NEW_PROCESS)\n             {\n-                org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler.main(generateMainMethod(tempClass.getAbsolutePath(), new File(TEMP_DIRECTORY).getAbsolutePath()));\n+                /*try\n+                {\n+                    BytecodeViewer.sm.pauseBlocking();\n+                    ProcessBuilder pb = new ProcessBuilder(ArrayUtils.addAll(\n+                            new String[]{ExternalResources.getSingleton().getJavaCommand(true), \"-jar\", ExternalResources.getSingleton().findLibrary(\"fernflower\")},\n+                            generateMainMethod(tempClass.getAbsolutePath(),\n+                                    new File(tempDirectory).getAbsolutePath())\n+                    ));\n+                    Process p = pb.start();\n+                    BytecodeViewer.createdProcesses.add(p);\n+                    p.waitFor();\n+                } catch (Exception e) {\n+                    BytecodeViewer.handleException(e);\n+                } finally {\n+                    BytecodeViewer.sm.resumeBlocking();\n+                }*/\n             }\n-            catch (Throwable e)\n+            else\n             {\n-                StringWriter exceptionWriter = new StringWriter();\n-                e.printStackTrace(new PrintWriter(exceptionWriter));\n-                e.printStackTrace();\n-                exception = exceptionWriter.toString();\n+                org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler.main(generateMainMethod(tempClassFile.getAbsolutePath(), new File(TEMP_DIRECTORY).getAbsolutePath()));\n             }\n-        }\n \n-        tempClass.delete();\n+            tempClassFile.delete();\n \n-        String javaDir = start;\n-        if (BytecodeViewer.viewer.ren.isSelected())\n-        {\n-            javaDir = TEMP_DIRECTORY + \"class_0\";\n-        }\n+            //if rename is enabled the file name will be the actual class name\n+            if (BytecodeViewer.viewer.ren.isSelected())\n+            {\n+                int indexOfLastPackage = cn.name.lastIndexOf('/');\n+                String classNameNoPackages = indexOfLastPackage < 0 ? cn.name : cn.name.substring(indexOfLastPackage);\n+                tempOutputJavaFile = new File(tempFile.getParent(), classNameNoPackages + \".java\");\n+                tempFile.markAsCreatedFile(tempOutputJavaFile);\n+            }\n \n-        final File outputJava = new File(javaDir + \".java\");\n-        if (outputJava.exists())\n-        {\n-            String s;\n-            try\n+            //if the output file is found, read it\n+            if (tempOutputJavaFile.exists())\n             {\n-                s = DiskReader.loadAsString(outputJava.getAbsolutePath());\n+                String s = DiskReader.loadAsString(tempOutputJavaFile.getAbsolutePath());\n \n-                outputJava.delete();\n+                //cleanup temp files\n+                tempFile.delete();\n \n                 return s;\n             }\n-            catch (Exception e)\n+            else\n             {\n-                StringWriter exceptionWriter = new StringWriter();\n-                e.printStackTrace(new PrintWriter(exceptionWriter));\n-                e.printStackTrace();\n-\n-                exception += NL + NL + exceptionWriter;\n+                exception = \"BCV Error: \" + tempOutputJavaFile.getAbsolutePath() + \" does not exist.\";\n             }\n         }\n+        catch (Exception e)\n+        {\n+            StringWriter exceptionWriter = new StringWriter();\n+            e.printStackTrace(new PrintWriter(exceptionWriter));\n+            e.printStackTrace();\n+\n+            exception += NL + NL + exceptionWriter;\n+        }\n \n-        return FERNFLOWER + \" \" + ERROR + \"! \" + ExceptionUI.SEND_STACKTRACE_TO + NL + NL + TranslatedStrings.SUGGESTED_FIX_DECOMPILER_ERROR + NL + NL + exception;\n+        return FERNFLOWER + \" \" + ERROR + \"! \" + ExceptionUI.SEND_STACKTRACE_TO + NL + NL\n+            + TranslatedStrings.SUGGESTED_FIX_DECOMPILER_ERROR + NL + NL + exception;\n     }\n \n     private String[] generateMainMethod(String className, String folder)\n     {\n-        return new String[]{\"-rbr=\" + r(BytecodeViewer.viewer.rbr.isSelected()),\n-            \"-rsy=\" + r(BytecodeViewer.viewer.rsy.isSelected()),\n-            \"-din=\" + r(BytecodeViewer.viewer.din.isSelected()),\n-            \"-dc4=\" + r(BytecodeViewer.viewer.dc4.isSelected()),\n-            \"-das=\" + r(BytecodeViewer.viewer.das.isSelected()),\n-            \"-hes=\" + r(BytecodeViewer.viewer.hes.isSelected()),\n-            \"-hdc=\" + r(BytecodeViewer.viewer.hdc.isSelected()),\n-            \"-dgs=\" + r(BytecodeViewer.viewer.dgs.isSelected()),\n-            \"-ner=\" + r(BytecodeViewer.viewer.ner.isSelected()),\n-            \"-den=\" + r(BytecodeViewer.viewer.den.isSelected()),\n-            \"-rgn=\" + r(BytecodeViewer.viewer.rgn.isSelected()),\n-            \"-bto=\" + r(BytecodeViewer.viewer.bto.isSelected()),\n-            \"-nns=\" + r(BytecodeViewer.viewer.nns.isSelected()),\n-            \"-uto=\" + r(BytecodeViewer.viewer.uto.isSelected()),\n-            \"-udv=\" + r(BytecodeViewer.viewer.udv.isSelected()),\n-            \"-rer=\" + r(BytecodeViewer.viewer.rer.isSelected()),\n-            \"-fdi=\" + r(BytecodeViewer.viewer.fdi.isSelected()),\n-            \"-asc=\" + r(BytecodeViewer.viewer.asc.isSelected()),\n-            \"-ren=\" + r(BytecodeViewer.viewer.ren.isSelected()),\n-            className, folder};\n+        return new String[]\n+        {\n+            \"-rbr=\" + ffOnValue(BytecodeViewer.viewer.rbr.isSelected()),\n+            \"-rsy=\" + ffOnValue(BytecodeViewer.viewer.rsy.isSelected()),\n+            \"-din=\" + ffOnValue(BytecodeViewer.viewer.din.isSelected()),\n+            \"-dc4=\" + ffOnValue(BytecodeViewer.viewer.dc4.isSelected()),\n+            \"-das=\" + ffOnValue(BytecodeViewer.viewer.das.isSelected()),\n+            \"-hes=\" + ffOnValue(BytecodeViewer.viewer.hes.isSelected()),\n+            \"-hdc=\" + ffOnValue(BytecodeViewer.viewer.hdc.isSelected()),\n+            \"-dgs=\" + ffOnValue(BytecodeViewer.viewer.dgs.isSelected()),\n+            \"-ner=\" + ffOnValue(BytecodeViewer.viewer.ner.isSelected()),\n+            \"-den=\" + ffOnValue(BytecodeViewer.viewer.den.isSelected()),\n+            \"-rgn=\" + ffOnValue(BytecodeViewer.viewer.rgn.isSelected()),\n+            \"-bto=\" + ffOnValue(BytecodeViewer.viewer.bto.isSelected()),\n+            \"-nns=\" + ffOnValue(BytecodeViewer.viewer.nns.isSelected()),\n+            \"-uto=\" + ffOnValue(BytecodeViewer.viewer.uto.isSelected()),\n+            \"-udv=\" + ffOnValue(BytecodeViewer.viewer.udv.isSelected()),\n+            \"-rer=\" + ffOnValue(BytecodeViewer.viewer.rer.isSelected()),\n+            \"-fdi=\" + ffOnValue(BytecodeViewer.viewer.fdi.isSelected()),\n+            \"-asc=\" + ffOnValue(BytecodeViewer.viewer.asc.isSelected()),\n+            \"-ren=\" + ffOnValue(BytecodeViewer.viewer.ren.isSelected()),\n+            className, folder\n+        };\n     }\n \n-    private String r(boolean b)\n+    private String ffOnValue(boolean b)\n     {\n         if (b)\n-        {\n             return \"1\";\n-        }\n         else\n-        {\n             return \"0\";\n-        }\n     }\n }",
      "parent_sha": "96495c846999683076129639f72650f7f92b799d"
    }
  },
  {
    "oid": "7d140580ee12f8524638d22ede47fce2caeaaca2",
    "message": "Updated TODO",
    "date": "2021-07-11T09:31:56Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/7d140580ee12f8524638d22ede47fce2caeaaca2",
    "details": {
      "sha": "5881674e6b039b87f17a3a52acc1c58fb66ab821",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/BytecodeViewer.java",
      "status": "modified",
      "additions": 4,
      "deletions": 11,
      "changes": 15,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/7d140580ee12f8524638d22ede47fce2caeaaca2/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/7d140580ee12f8524638d22ede47fce2caeaaca2/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java?ref=7d140580ee12f8524638d22ede47fce2caeaaca2",
      "patch": "@@ -67,17 +67,13 @@\n  * http://the.bytecode.club\n  *\n  * TODO BUGS:\n- *      + Panes that currently are being opened/decompiled should not be able to be refreshed - Causes a lock\n  *      + View>Visual Settings>Show Class Methods\n  *      + Spam-clicking the refresh button will cause the swing thread to deadlock (Quickly opening resources used to also do this)\n  *          This is caused by the ctrlMouseWheelZoom code, a temporary patch is just removing it worst case\n  *      + Versioning and updating need to be fixed\n  *      + Fix classfile searcher\n- *      + Smali Assembly compile - Needs to be fixed\n  *\n  * TODO IN-PROGRESS:\n- *      + While loading an external plugin it should check if its java or JS, if so it should ask if you'd like to run or edit the plugin using the PluginWriter\n- *      + Resource Importer needs to be rewritten to handle resources better\n  *      + Resource Exporter/Save/Decompile As Zip needs to be rewrittern\n  *      + Finish dragging code\n  *      + Finish right-click tab menu detection\n@@ -89,23 +85,20 @@\n  *      + Add JEB decompiler optionally, requires them to add jeb library jar\n  *      + Add https://github.com/exbin/bined as the replacement Hed Viewer/Editor\n  *      + Make the decompilers launch in a separate process\n- *      + Make it use that global last used inside of export as jar\n+ *      + Make it use that global last used file folder inside of export as jar\n  *      + Make zipfile not include the decode shit\n- *      + Make ez-injection plugin console show all sys.out calls\n  *      + Add decompile as zip for krakatau-bytecode, jd-gui and smali for CLI\n  *      + Add decompile all as zip for CLI\n+ *      + Console on the UI\n  *\n  *  TODO IDEAS:\n  *      + App Bundle Support\n  *      + Add the setting to force all non-class resources to be opened with the Hex Viewer\n  *          ^ Optionally a right-click menu open-as would work inside of the resource list\n  *      + Allow class files to be opened without needing the .class extension\n  *          ^ Easiest way to do this is to read the file header CAFEBABE on resource view\n- *      + Look into removing the loaded classes from inside the FileContainer & then generate the ClassNodes on demand\n- *          ^ This has the added benefit of only extracting on decompilation/when needed. It would also mean everything\n- *            could be treated as byte[] file resources instead of juggling between Classes and File resources.\n- *          ^ An added bonus would be you could also support BCEL (along with other bytecode manipulation libraries)\n- *            and add support for https://github.com/ptnkjke/Java-Bytecode-Editor visualizer as a plugin\n+ *      + Add BCEL Support:\n+ *          ^ https://github.com/ptnkjke/Java-Bytecode-Editor visualizer as a plugin\n  *\n  * @author Konloch\n  * @author The entire BCV community",
      "parent_sha": "540b48f3ee42330a15cc56db29917bb511d4c7b2"
    }
  },
  {
    "oid": "edccda8c67901082ca91105703c5742842b03fe9",
    "message": "Code Cleanup",
    "date": "2022-01-22T19:19:27Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/edccda8c67901082ca91105703c5742842b03fe9",
    "details": {
      "sha": "31989bced603fb56c570d4e359572f2e2ddf0ace",
      "filename": "plugins/java/XposedGenerator.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/edccda8c67901082ca91105703c5742842b03fe9/plugins%2Fjava%2FXposedGenerator.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/edccda8c67901082ca91105703c5742842b03fe9/plugins%2Fjava%2FXposedGenerator.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/plugins%2Fjava%2FXposedGenerator.java?ref=edccda8c67901082ca91105703c5742842b03fe9",
      "patch": "@@ -18,10 +18,10 @@\n import the.bytecode.club.bytecodeviewer.gui.resourceviewer.viewer.ResourceViewer;\n \n /**\n- * This is an Xposed Generator Plugin, used to aid Reverse-Engineering.\n- *\n- * @author jowasp\n- */\n+ ** This is an Xposed Generator Plugin, used to aid Reverse-Engineering.\n+ **\n+ ** @author jowasp\n+ **/\n public class XposedGenerator extends Plugin {\n     \n     private static final List<String> methodsNames = new ArrayList<>();",
      "parent_sha": "ca92d13c7163c5876bfdf51f8ff5303995209af8"
    }
  },
  {
    "oid": "715041366d8158bddbca94d166421f4f2e798c0d",
    "message": "CLI Adjustment",
    "date": "2021-07-11T12:01:32Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/715041366d8158bddbca94d166421f4f2e798c0d",
    "details": {
      "sha": "d699b428e3be881bfbccf7f9487fd1b38794625c",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/CommandLineInput.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/715041366d8158bddbca94d166421f4f2e798c0d/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FCommandLineInput.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/715041366d8158bddbca94d166421f4f2e798c0d/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FCommandLineInput.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FCommandLineInput.java?ref=715041366d8158bddbca94d166421f4f2e798c0d",
      "patch": "@@ -110,7 +110,7 @@ public static int parseCommandLine(String[] args) {\n             } else if (cmd.hasOption(\"help\")) {\n                 for (String s : new String[]{\n                         \"-help                         Displays the help menu\",\n-                        \"-clean                        Deletes BCV directory\",\n+                        \"-clean                        Deletes the BCV directory\",\n                         \"-english                      Forces English language translations\",\n                         \"-list                         Displays the available decompilers\",\n                         \"-decompiler <decompiler>      Selects the decompiler, procyon by default\",",
      "parent_sha": "6ec2fb5d1cf6e66ef4c2e0ab599c9b92cbed9b67"
    }
  },
  {
    "oid": "39491c3c4a88b238877d1248da43de762f5cb1a9",
    "message": "FernFlower Decompiler Update\n\nExternal Process Launch Proof of Concept. Decompile to zip fallback added.",
    "date": "2024-10-03T00:19:21Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/39491c3c4a88b238877d1248da43de762f5cb1a9",
    "details": {
      "sha": "96254a458cd8ca6f62124121c55d469631c2682c",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/decompilers/impl/FernFlowerDecompiler.java",
      "status": "modified",
      "additions": 35,
      "deletions": 45,
      "changes": 80,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/39491c3c4a88b238877d1248da43de762f5cb1a9/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FFernFlowerDecompiler.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/39491c3c4a88b238877d1248da43de762f5cb1a9/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FFernFlowerDecompiler.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FFernFlowerDecompiler.java?ref=39491c3c4a88b238877d1248da43de762f5cb1a9",
      "patch": "@@ -19,19 +19,23 @@\n package the.bytecode.club.bytecodeviewer.decompilers.impl;\n \n import me.konloch.kontainer.io.DiskReader;\n+import org.apache.commons.lang3.ArrayUtils;\n+import org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler;\n import org.objectweb.asm.tree.ClassNode;\n import the.bytecode.club.bytecodeviewer.BytecodeViewer;\n+import the.bytecode.club.bytecodeviewer.Constants;\n import the.bytecode.club.bytecodeviewer.api.ExceptionUI;\n import the.bytecode.club.bytecodeviewer.decompilers.AbstractDecompiler;\n+import the.bytecode.club.bytecodeviewer.resources.ExternalResources;\n import the.bytecode.club.bytecodeviewer.translation.TranslatedStrings;\n import the.bytecode.club.bytecodeviewer.util.ExceptionUtils;\n+import the.bytecode.club.bytecodeviewer.util.ProcessUtils;\n import the.bytecode.club.bytecodeviewer.util.TempFile;\n \n import java.io.*;\n \n import static the.bytecode.club.bytecodeviewer.Constants.*;\n-import static the.bytecode.club.bytecodeviewer.translation.TranslatedStrings.ERROR;\n-import static the.bytecode.club.bytecodeviewer.translation.TranslatedStrings.FERNFLOWER;\n+import static the.bytecode.club.bytecodeviewer.translation.TranslatedStrings.*;\n \n /**\n  * A FernFlower wrapper with all the options (except 2)\n@@ -47,29 +51,6 @@ public FernFlowerDecompiler()\n         super(\"FernFlower Decompiler\", \"fernflower\");\n     }\n \n-    @Override\n-    public void decompileToZip(String sourceJar, String zipName)\n-    {\n-        File tempZip = new File(sourceJar);\n-\n-        File f = new File(TEMP_DIRECTORY + FS + \"temp\" + FS);\n-        f.mkdir();\n-\n-        try\n-        {\n-            org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler.main(generateMainMethod(tempZip.getAbsolutePath(), TEMP_DIRECTORY + \"./temp/\"));\n-        }\n-        catch (StackOverflowError | Exception ignored)\n-        {\n-        }\n-\n-        File tempZip2 = new File(TEMP_DIRECTORY + FS + \"temp\" + FS + tempZip.getName());\n-        if (tempZip2.exists())\n-            tempZip2.renameTo(new File(zipName));\n-\n-        f.delete();\n-    }\n-\n     @Override\n     public String decompileClassNode(ClassNode cn, byte[] bytes)\n     {\n@@ -80,41 +61,31 @@ public String decompileClassNode(ClassNode cn, byte[] bytes)\n         {\n             //create the temporary files\n             tempFile = TempFile.createTemporaryFile(true, \".class\");\n-            File tempClassFile = tempFile.getFile();\n+            File tempInputClassFile = tempFile.getFile();\n \n             //load java source from temp directory\n             tempFile.setParent(new File(TEMP_DIRECTORY));\n             File tempOutputJavaFile = tempFile.createFileFromExtension(false, true, \".java\");\n \n             //write the class-file with bytes\n-            try (FileOutputStream fos = new FileOutputStream(tempClassFile))\n+            try (FileOutputStream fos = new FileOutputStream(tempInputClassFile))\n             {\n                 fos.write(bytes);\n             }\n \n             //decompile the class-file\n             if (LAUNCH_DECOMPILERS_IN_NEW_PROCESS)\n             {\n-                /*try\n-                {\n-                    BytecodeViewer.sm.pauseBlocking();\n-                    ProcessBuilder pb = new ProcessBuilder(ArrayUtils.addAll(\n-                            new String[]{ExternalResources.getSingleton().getJavaCommand(true), \"-jar\", ExternalResources.getSingleton().findLibrary(\"fernflower\")},\n-                            generateMainMethod(tempClass.getAbsolutePath(),\n-                                    new File(tempDirectory).getAbsolutePath())\n-                    ));\n-                    Process p = pb.start();\n-                    BytecodeViewer.createdProcesses.add(p);\n-                    p.waitFor();\n-                } catch (Exception e) {\n-                    BytecodeViewer.handleException(e);\n-                } finally {\n-                    BytecodeViewer.sm.resumeBlocking();\n-                }*/\n+                ProcessUtils.runDecompilerExternal(ArrayUtils.addAll(new String[]\n+                    {\n+                        ExternalResources.getSingleton().getJavaCommand(true),\n+                        \"-jar\", ExternalResources.getSingleton().findLibrary(\"fernflower\")\n+                    }, generateMainMethod(tempInputClassFile.getAbsolutePath(), tempFile.getParent().getAbsolutePath())\n+                ), false);\n             }\n             else\n             {\n-                org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler.main(generateMainMethod(tempClassFile.getAbsolutePath(), new File(TEMP_DIRECTORY).getAbsolutePath()));\n+                org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler.main(generateMainMethod(tempInputClassFile.getAbsolutePath(), new File(TEMP_DIRECTORY).getAbsolutePath()));\n             }\n \n             //if rename is enabled the file name will be the actual class name\n@@ -127,7 +98,7 @@ public String decompileClassNode(ClassNode cn, byte[] bytes)\n             }\n \n             //if the output file is found, read it\n-            if (tempOutputJavaFile.exists())\n+            if (tempOutputJavaFile.exists() && !Constants.DEV_FLAG_DECOMPILERS_SIMULATED_ERRORS)\n                 return DiskReader.loadAsString(tempOutputJavaFile.getAbsolutePath());\n             else\n                 exception = FERNFLOWER + \" \" + ERROR + \"! \" + tempOutputJavaFile.getAbsolutePath() + \" does not exist.\";\n@@ -147,6 +118,25 @@ public String decompileClassNode(ClassNode cn, byte[] bytes)\n             + TranslatedStrings.SUGGESTED_FIX_DECOMPILER_ERROR + NL + NL + exception;\n     }\n \n+    @Override\n+    public void decompileToZip(String sourceJar, String zipName)\n+    {\n+        File tempInputJarFile = new File(sourceJar);\n+        File tempOutputJar = new File(TEMP_DIRECTORY + FS + \"temp\" + FS + tempInputJarFile.getName());\n+\n+        try\n+        {\n+            ConsoleDecompiler.main(generateMainMethod(tempInputJarFile.getAbsolutePath(), TEMP_DIRECTORY + \"./temp/\"));\n+        }\n+        catch (StackOverflowError | Exception ignored)\n+        {\n+        }\n+\n+        if (tempOutputJar.exists())\n+            tempOutputJar.renameTo(new File(zipName));\n+\n+    }\n+\n     private String[] generateMainMethod(String className, String folder)\n     {\n         return new String[]",
      "parent_sha": "f89ba2e6ea83d11de236934e7de068e3b2adb18d"
    }
  },
  {
    "oid": "2ade8f94818e8aeba2548a9a52ced36606af82ea",
    "message": "Process Utils API Update",
    "date": "2024-10-02T22:10:50Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/2ade8f94818e8aeba2548a9a52ced36606af82ea",
    "details": {
      "sha": "1ac11ba145ac76dbddc95e223db041b4297d7071",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/util/ProcessUtils.java",
      "status": "modified",
      "additions": 36,
      "deletions": 5,
      "changes": 41,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/2ade8f94818e8aeba2548a9a52ced36606af82ea/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Futil%2FProcessUtils.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/2ade8f94818e8aeba2548a9a52ced36606af82ea/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Futil%2FProcessUtils.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Futil%2FProcessUtils.java?ref=2ade8f94818e8aeba2548a9a52ced36606af82ea",
      "patch": "@@ -18,14 +18,14 @@ public class ProcessUtils\n {\n     public static StringBuilder mergeLogs(StringBuilder out, StringBuilder err, int exitCode)\n     {\n-        StringBuilder logs = new StringBuilder(NL + NL);\n+        StringBuilder logs = new StringBuilder();\n \n         if(out.toString().trim().length() >= 1)\n-            logs.append(TranslatedStrings.PROCESS2).append(\" out:\").append(NL).append(NL)\n+            logs.append(TranslatedStrings.PROCESS2).append(\" out:\")\n                 .append(out).append(NL).append(NL);\n \n         if(err.toString().trim().length() >= 1)\n-            logs.append(TranslatedStrings.PROCESS2).append(\" err:\").append(NL).append(NL)\n+            logs.append(TranslatedStrings.PROCESS2).append(\" err:\")\n                 .append(err).append(NL).append(NL);\n \n         logs.append(TranslatedStrings.ERROR2).append(NL).append(NL);\n@@ -37,12 +37,43 @@ public static StringBuilder mergeLogs(StringBuilder out, StringBuilder err, int\n \n     public static void readProcessToStringBuilder(Process process, StringBuilder out, StringBuilder err) throws IOException\n     {\n+        //Read out dir output\n+        try (InputStream is = process.getInputStream();\n+             InputStreamReader isr = new InputStreamReader(is);\n+             BufferedReader br = new BufferedReader(isr))\n+        {\n+            String line;\n+            while ((line = br.readLine()) != null)\n+            {\n+                out.append(NL).append(line);\n+            }\n+        }\n+        catch (IOException ignore)\n+        {\n+        }\n \n+        try (InputStream is = process.getErrorStream();\n+             InputStreamReader isr = new InputStreamReader(is);\n+             BufferedReader br = new BufferedReader(isr))\n+        {\n+            String line;\n+            while ((line = br.readLine()) != null)\n+            {\n+                err.append(NL).append(line);\n+            }\n+        }\n+        catch (IOException ignore)\n+        {\n+        }\n+    }\n+\n+    public static void readProcessToStringBuilderAsync(Process process, StringBuilder out, StringBuilder err) throws IOException\n+    {\n         try (InputStream is = process.getInputStream();\n              InputStreamReader isr = new InputStreamReader(is);\n              BufferedReader br = new BufferedReader(isr))\n         {\n-            BytecodeViewer.getTaskManager().delayLoop(100, task ->\n+            BytecodeViewer.getTaskManager().delayLoop(25, task ->\n             {\n                 if(!process.isAlive())\n                     task.stop();\n@@ -70,7 +101,7 @@ public static void readProcessToStringBuilder(Process process, StringBuilder out\n              InputStreamReader isr = new InputStreamReader(is);\n              BufferedReader br = new BufferedReader(isr))\n         {\n-            BytecodeViewer.getTaskManager().delayLoop(100, task ->\n+            BytecodeViewer.getTaskManager().delayLoop(25, task ->\n             {\n                 if(!process.isAlive())\n                     task.stop();",
      "parent_sha": "98bacf83efa05b6f50bf68cfaa9458e1d8162308"
    }
  },
  {
    "oid": "87ff4bd291a5f295b3698b4f731ee205729b8930",
    "message": "Better Translation Error Information",
    "date": "2021-07-21T15:29:45Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/87ff4bd291a5f295b3698b4f731ee205729b8930",
    "details": {
      "sha": "3b2a2ca7f4089464752de9d9b59e7942fe95cb5f",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/translation/Language.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/87ff4bd291a5f295b3698b4f731ee205729b8930/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Ftranslation%2FLanguage.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/87ff4bd291a5f295b3698b4f731ee205729b8930/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Ftranslation%2FLanguage.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Ftranslation%2FLanguage.java?ref=87ff4bd291a5f295b3698b4f731ee205729b8930",
      "patch": "@@ -115,7 +115,7 @@ public void setLanguageTranslations() throws IOException\n \t\t\t//skip translating if the language config is missing the translation key\n \t\t\tif(!translationMap.containsKey(text.key))\n \t\t\t{\n-\t\t\t\tBCV.logE(true, \"MISSING TRANSLATION KEY: \" + text.key);\n+\t\t\t\tBCV.logE(true, resourcePath + \" -> \" + text.key + \" - Missing Translation Key\");\n \t\t\t\tcontinue;\n \t\t\t}\n \t\t\t\n@@ -133,7 +133,7 @@ public void setLanguageTranslations() throws IOException\n \t\t\tif(translatedComponents.getTranslatedComponentReference().runOnUpdate.isEmpty())\n \t\t\t\t\t//&& TranslatedStrings.nameSet.contains(translation.name()))\n \t\t\t{\n-\t\t\t\tBCV.logE(true, \"Translation Reference \" + translatedComponents.name() + \" is missing component attachment, skipping...\");\n+\t\t\t\tBCV.logE(true, \"TranslatedComponents:\" + translatedComponents.name() + \" is missing component attachment, skipping...\");\n \t\t\t\tcontinue;\n \t\t\t}\n \t\t\t",
      "parent_sha": "0203a134724af167e8b52efbd78c7c92c6229950"
    }
  },
  {
    "oid": "62726dcd4f9c4ce6558462c10cd7fbbde4f647b1",
    "message": "FileChooser Cleanup",
    "date": "2021-06-26T12:38:58Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/62726dcd4f9c4ce6558462c10cd7fbbde4f647b1",
    "details": {
      "sha": "e1feb9492ff456afb76e93105877bfc9958d847a",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/BytecodeViewer.java",
      "status": "modified",
      "additions": 35,
      "deletions": 61,
      "changes": 96,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/62726dcd4f9c4ce6558462c10cd7fbbde4f647b1/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/62726dcd4f9c4ce6558462c10cd7fbbde4f647b1/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java?ref=62726dcd4f9c4ce6558462c10cd7fbbde4f647b1",
      "patch": "@@ -19,6 +19,7 @@\n import the.bytecode.club.bytecodeviewer.api.ClassNodeLoader;\n import the.bytecode.club.bytecodeviewer.compilers.Compilers;\n import the.bytecode.club.bytecodeviewer.gui.components.DecompilerViewComponent;\n+import the.bytecode.club.bytecodeviewer.gui.components.FileChooser;\n import the.bytecode.club.bytecodeviewer.gui.resourceviewer.ResourcePanelCompileMode;\n import the.bytecode.club.bytecodeviewer.gui.resourceviewer.TabbedPane;\n import the.bytecode.club.bytecodeviewer.gui.resourceviewer.viewer.ClassViewer;\n@@ -158,26 +159,6 @@ public class BytecodeViewer\n      */\n     private static final Thread bootCheck = new Thread(new BootCheck());\n \n-    /**\n-     * Grab the byte array from the loaded Class object\n-     *\n-     * @param clazz\n-     * @return\n-     * @throws IOException\n-     */\n-    public static byte[] getClassFile(Class<?> clazz) throws IOException {\n-        try (InputStream is = clazz.getResourceAsStream(\n-                \"/\" + clazz.getName().replace('.', '/') + \".class\");\n-             ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n-            int r;\n-            byte[] buffer = new byte[8192];\n-            while ((r = Objects.requireNonNull(is).read(buffer)) >= 0) {\n-                baos.write(buffer, 0, r);\n-            }\n-            return baos.toByteArray();\n-        }\n-    }\n-\n     /**\n      * Main startup\n      *\n@@ -354,6 +335,26 @@ public static byte[] getFileContents(String name) {\n \n         return null;\n     }\n+    \n+    /**\n+     * Grab the byte array from the loaded Class object\n+     *\n+     * @param clazz\n+     * @return\n+     * @throws IOException\n+     */\n+    public static byte[] getClassFile(Class<?> clazz) throws IOException {\n+        try (InputStream is = clazz.getResourceAsStream(\n+                \"/\" + clazz.getName().replace('.', '/') + \".class\");\n+             ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n+            int r;\n+            byte[] buffer = new byte[8192];\n+            while ((r = Objects.requireNonNull(is).read(buffer)) >= 0) {\n+                baos.write(buffer, 0, r);\n+            }\n+            return baos.toByteArray();\n+        }\n+    }\n \n     /**\n      * Replaces an old node with a new instance\n@@ -625,33 +626,12 @@ public static void checkHotKey(KeyEvent e) {\n \n         if ((e.getKeyCode() == KeyEvent.VK_O) && ((e.getModifiers() & KeyEvent.CTRL_MASK) != 0)) {\n             Configuration.lastHotKeyExecuted = System.currentTimeMillis();\n-            JFileChooser fc = new JFileChooser();\n-            try {\n-                fc.setSelectedFile(new File(Configuration.lastDirectory));\n-            } catch (Exception ignored) {\n-            }\n-            fc.setFileFilter(new FileFilter() {\n-                @Override\n-                public boolean accept(File f) {\n-                    if (f.isDirectory())\n-                        return true;\n-\n-                    String extension = MiscUtils.extension(f.getAbsolutePath());\n-                    return extension.equals(\"jar\") || extension.equals(\"zip\")\n-                            || extension.equals(\"class\") || extension.equals(\"apk\")\n-                            || extension.equals(\"dex\");\n-\n-                }\n-\n-                @Override\n-                public String getDescription() {\n-                    return \"APKs, DEX, Class Files or Zip/Jar Archives\";\n-                }\n-            });\n-            fc.setFileHidingEnabled(false);\n-            fc.setAcceptAllFileFilterUsed(false);\n+            JFileChooser fc = new FileChooser(new File(Configuration.lastDirectory),\n+                    \"Select File or Folder to open in BCV\",\n+                    \"APKs, DEX, Class Files or Zip/Jar/War Archives\",\n+                    Constants.SUPPORTED_FILE_EXTENSIONS);\n+            \n             int returnVal = fc.showOpenDialog(BytecodeViewer.viewer);\n-\n             if (returnVal == JFileChooser.APPROVE_OPTION) {\n                 Configuration.lastDirectory = fc.getSelectedFile().getAbsolutePath();\n                 try {\n@@ -687,20 +667,12 @@ public String getDescription() {\n             Thread t = new Thread(() -> {\n                 if (viewer.compileOnSave.isSelected() && !BytecodeViewer.compile(false))\n                     return;\n-                JFileChooser fc = new JFileChooser();\n-                fc.setFileFilter(new FileFilter() {\n-                    @Override\n-                    public boolean accept(File f) {\n-                        return f.isDirectory() || MiscUtils.extension(f.getAbsolutePath()).equals(\"zip\");\n-                    }\n-\n-                    @Override\n-                    public String getDescription() {\n-                        return \"Zip Archives\";\n-                    }\n-                });\n-                fc.setFileHidingEnabled(false);\n-                fc.setAcceptAllFileFilterUsed(false);\n+                \n+                JFileChooser fc = new FileChooser(new File(Configuration.lastDirectory),\n+                        \"Select Zip Export\",\n+                        \"Zip Archives\",\n+                        \"zip\");\n+                \n                 int returnVal = fc.showSaveDialog(viewer);\n                 if (returnVal == JFileChooser.APPROVE_OPTION) {\n                     File file = fc.getSelectedFile();\n@@ -747,8 +719,10 @@ public String getDescription() {\n         }\n     }\n \n-    public static File[] dumpTempFile(FileContainer container) {\n+    public static File[] dumpTempFile(FileContainer container)\n+    {\n         File[] files = new File[2];\n+        \n         //currently won't optimize if you've got two containers with the same name, will need to add this later\n         if (!LazyNameUtil.SAME_NAME_JAR_WORKSPACE) {\n             if (Configuration.krakatauTempJar != null && !Configuration.krakatauTempJar.exists()) {",
      "parent_sha": "c90b1d45a68f0d53d8da5f2ab33a3be9b8d0e19a"
    }
  },
  {
    "oid": "805dac8e364d72020e90b062e99863cf568d401c",
    "message": "Better Plugin Writing\n\nResolves #394\n\nYou can now write plugins from the Plugin Writer in BCV, or from disk. BCV will read the last edit dates on both and use the latest version.\n\nAs a bonus BCV will self-update the pane to keep the BCV plugin writer synced with your local file. Local files are also overwritten when the plugin writer is used to edit the plugin, then ran.",
    "date": "2024-09-30T02:24:17Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/805dac8e364d72020e90b062e99863cf568d401c",
    "details": {
      "sha": "def80bcd2593aaebc3af6acdc5bcfa16615c1c22",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/plugin/PluginWriter.java",
      "status": "modified",
      "additions": 49,
      "deletions": 5,
      "changes": 54,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/805dac8e364d72020e90b062e99863cf568d401c/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fplugin%2FPluginWriter.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/805dac8e364d72020e90b062e99863cf568d401c/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fplugin%2FPluginWriter.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fplugin%2FPluginWriter.java?ref=805dac8e364d72020e90b062e99863cf568d401c",
      "patch": "@@ -37,6 +37,8 @@\n \n import javax.swing.*;\n import java.awt.*;\n+import java.awt.event.KeyAdapter;\n+import java.awt.event.KeyEvent;\n import java.io.File;\n import java.io.IOException;\n import java.nio.charset.StandardCharsets;\n@@ -58,6 +60,7 @@ public class PluginWriter extends JFrame\n     private String content;\n     private String pluginName;\n     private File savePath;\n+    private long lastModifiedPluginWriterPane = 0;\n \n     public PluginWriter(PluginTemplate template) throws IOException\n     {\n@@ -86,6 +89,15 @@ public void buildGUI()\n         SyntaxLanguage.setLanguage(area, pluginName);\n         content = null;\n \n+        area.addKeyListener(new KeyAdapter()\n+        {\n+            @Override\n+            public void keyTyped(KeyEvent e)\n+            {\n+                lastModifiedPluginWriterPane = System.currentTimeMillis();\n+            }\n+        });\n+\n         JButton run = new JButton(\"Run\");\n \n         JMenuBar menuBar = new JMenuBar();\n@@ -170,11 +182,42 @@ public void runPlugin()\n \n         try\n         {\n-            //write to temporary file location\n-            if(savePath != null)\n-                Files.copy(savePath, tempFile);\n-            else\n-                Files.write(area.getText().getBytes(StandardCharsets.UTF_8), tempFile);\n+            if(savePath != null) //opened a plugin from (Plugins>Open Plugin or Plugins>Recent Plugins)\n+            {\n+                //original save path should be overwritten\n+                if(savePath.lastModified() <= lastModifiedPluginWriterPane)\n+                {\n+                    Files.write(area.getText().getBytes(StandardCharsets.UTF_8), savePath); //overwrite original plugin location with new data\n+                    Files.write(area.getText().getBytes(StandardCharsets.UTF_8), tempFile); //write to temporary file location\n+                }\n+                else\n+                {\n+                    Files.copy(savePath, tempFile); //write to temporary file location\n+\n+                    //update content from latest disk data\n+                    content = DiskReader.loadAsString(savePath.getAbsolutePath());\n+\n+                    //update plugin writer UI on disk update\n+                    SwingUtilities.invokeLater(()->\n+                    {\n+                        try\n+                        {\n+                            int caretPosition = area.getCaretPosition();\n+\n+                            area.setText(content);\n+                            area.setCaretPosition(caretPosition);\n+                        }\n+                        catch (Exception e)\n+                        {\n+                            e.printStackTrace();\n+                        }\n+                    });\n+                }\n+            }\n+            else //temp plugin editing (Plugins>New Java Plugin>Run)\n+            {\n+                Files.write(area.getText().getBytes(StandardCharsets.UTF_8), tempFile); //write to temporary file location\n+            }\n \n             //run plugin from that location\n             PluginManager.runPlugin(tempFile);\n@@ -232,6 +275,7 @@ public void save()\n             DiskWriter.replaceFile(savePath.getAbsolutePath(), area.getText(), false);\n             addRecentPlugin(savePath);\n         }, \"Plugin Editor Save\");\n+\n         exportThread.start();\n     }\n ",
      "parent_sha": "c29f0fbb214df33ce30de9d7ce6de4785cd9d75d"
    }
  },
  {
    "oid": "110a8053e4da869e8245f0cbbe516649e1529e72",
    "message": "Fixed CFR decompiler again",
    "date": "2018-01-31T16:18:50Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/110a8053e4da869e8245f0cbbe516649e1529e72",
    "details": {
      "sha": "6c99b796da5ce4e470fb961bbfd796c7c2c74fbc",
      "filename": "src/the/bytecode/club/bytecodeviewer/decompilers/CFRDecompiler.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/110a8053e4da869e8245f0cbbe516649e1529e72/src%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2FCFRDecompiler.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/110a8053e4da869e8245f0cbbe516649e1529e72/src%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2FCFRDecompiler.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2FCFRDecompiler.java?ref=110a8053e4da869e8245f0cbbe516649e1529e72",
      "patch": "@@ -68,7 +68,7 @@ public String decompileClassNode(ClassNode cn, byte[] b) {\n         }\n \n         String fuckery = fuckery(fileStart);\n-        if (!BytecodeViewer.fatJar) {\n+        /*if (!BytecodeViewer.fatJar) {\n             try {\n                 ProcessBuilder pb = new ProcessBuilder(ArrayUtils.addAll(\n                         new String[]{BytecodeViewer.getJavaCommand(), \"-jar\", Resources.findLibrary(\"cfr\")},\n@@ -85,7 +85,8 @@ public String decompileClassNode(ClassNode cn, byte[] b) {\n             }\n         } else {\n             org.benf.cfr.reader.Main.main(generateMainMethod(tempClass.getAbsolutePath(), fuckery));\n-        }\n+        }*/\n+        org.benf.cfr.reader.Main.main(generateMainMethod(tempClass.getAbsolutePath(), fuckery));\n \n         tempClass.delete();\n ",
      "parent_sha": "b938f86d8a2fcd4a6abf7a0b51763469eea19e44"
    }
  },
  {
    "oid": "250f55cd5f47f999f20e73da86b95fa48c67465c",
    "message": "Code Cleanup",
    "date": "2024-10-02T11:46:04Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/250f55cd5f47f999f20e73da86b95fa48c67465c",
    "details": {
      "sha": "b3e8b7473ae3f7b10b76faef20c5ad6a41a01f92",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/gui/util/BytecodeViewPanelUpdater.java",
      "status": "modified",
      "additions": 10,
      "deletions": 6,
      "changes": 16,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/250f55cd5f47f999f20e73da86b95fa48c67465c/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Futil%2FBytecodeViewPanelUpdater.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/250f55cd5f47f999f20e73da86b95fa48c67465c/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Futil%2FBytecodeViewPanelUpdater.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Futil%2FBytecodeViewPanelUpdater.java?ref=250f55cd5f47f999f20e73da86b95fa48c67465c",
      "patch": "@@ -141,7 +141,7 @@ public void processDisplay()\n         }\n         catch (IndexOutOfBoundsException | NullPointerException e)\n         {\n-            //ignore\n+            e.printStackTrace();\n         }\n         catch (Exception e)\n         {\n@@ -447,16 +447,21 @@ else if (isPanelEditable && decompiler == Decompiler.KRAKATAU_DISASSEMBLER)\n             @Override\n             public void mouseMoved(MouseEvent e)\n             {\n-                if (classFileContainer.hasBeenParsed)\n+                if (classFileContainer != null && classFileContainer.hasBeenParsed)\n                 {\n                     if (e.isControlDown())\n                     {\n                         RSyntaxTextArea textArea = (RSyntaxTextArea) e.getSource();\n                         Token token = textArea.viewToToken(e.getPoint());\n+\n                         if (token != null)\n                         {\n                             String lexeme = token.getLexeme();\n-                            if (classFileContainer.fieldMembers.containsKey(lexeme) || classFileContainer.methodMembers.containsKey(lexeme) || classFileContainer.methodLocalMembers.containsKey(lexeme) || classFileContainer.methodParameterMembers.containsKey(lexeme) || classFileContainer.classReferences.containsKey(lexeme))\n+                            if (classFileContainer.fieldMembers.containsKey(lexeme)\n+                                || classFileContainer.methodMembers.containsKey(lexeme)\n+                                || classFileContainer.methodLocalMembers.containsKey(lexeme)\n+                                || classFileContainer.methodParameterMembers.containsKey(lexeme)\n+                                || classFileContainer.classReferences.containsKey(lexeme))\n                             {\n                                 textArea.setCursor(new Cursor(Cursor.HAND_CURSOR));\n                             }\n@@ -465,9 +470,7 @@ public void mouseMoved(MouseEvent e)\n                     else\n                     {\n                         if (bytecodeViewPanel.textArea.getCursor().getType() != Cursor.TEXT_CURSOR)\n-                        {\n                             bytecodeViewPanel.textArea.setCursor(new Cursor(Cursor.TEXT_CURSOR));\n-                        }\n                     }\n                 }\n             }\n@@ -478,7 +481,8 @@ public void mouseMoved(MouseEvent e)\n             @Override\n             public void mouseClicked(MouseEvent e)\n             {\n-                if (classFileContainer.hasBeenParsed)\n+                if (classFileContainer != null\n+                    && classFileContainer.hasBeenParsed)\n                 {\n                     if (e.isControlDown())\n                     {",
      "parent_sha": "269905da9127240cb225f73082b4ea782c64cf6b"
    }
  },
  {
    "oid": "3f407ea50663080a28c3f3f8803486a532d8da61",
    "message": "Cleanup",
    "date": "2024-10-02T18:40:26Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/3f407ea50663080a28c3f3f8803486a532d8da61",
    "details": {
      "sha": "cf57240c78c4e05fc11f75900cf5cd7d6a806bc2",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/decompilers/impl/JavapDisassembler.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/3f407ea50663080a28c3f3f8803486a532d8da61/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FJavapDisassembler.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/3f407ea50663080a28c3f3f8803486a532d8da61/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FJavapDisassembler.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FJavapDisassembler.java?ref=3f407ea50663080a28c3f3f8803486a532d8da61",
      "patch": "@@ -70,7 +70,7 @@ private synchronized String disassembleJavaP(ClassNode cn, byte[] b)\n         TempFile tempFile = null;\n         String exception = \"This decompiler didn't throw an exception - this is probably a BCV logical bug\";\n \n-        JFrameConsolePrintStream sysOutBuffer = null;\n+        JFrameConsolePrintStream sysOutBuffer;\n \n         try\n         {",
      "parent_sha": "7fa79786917363e7401e16f32b1e51de6fa7de26"
    }
  },
  {
    "oid": "8b97fbffc8ab308a2a0b245ec00dcb347db312c8",
    "message": "Fix recent files",
    "date": "2021-06-28T09:36:37Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/8b97fbffc8ab308a2a0b245ec00dcb347db312c8",
    "details": {
      "sha": "ec88b9e82261c52b190c5648a8fd9623cb0be808",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/util/MiscUtils.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/8b97fbffc8ab308a2a0b245ec00dcb347db312c8/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Futil%2FMiscUtils.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/8b97fbffc8ab308a2a0b245ec00dcb347db312c8/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Futil%2FMiscUtils.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Futil%2FMiscUtils.java?ref=8b97fbffc8ab308a2a0b245ec00dcb347db312c8",
      "patch": "@@ -220,9 +220,9 @@ public static void deduplicateAndTrim(List<String> list, int maxLength)\n             \n         list.clear();\n         list.addAll(temporaryList);\n-        \n-        while(temporaryList.size() > maxLength)\n-            list.remove(0);\n+\n+        while(list.size() > maxLength)\n+            list.remove(list.size() - 1);\n     }\n     \n     public static boolean isPureAscii(String v) {",
      "parent_sha": "152957c128694a999e08d4bc81cbb0e3980ed8f4"
    }
  },
  {
    "oid": "511272aa360a9ffb22f94b9cf3fb7659aef40a7c",
    "message": "Fix JDGUI decompiler",
    "date": "2021-09-14T17:36:56Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/511272aa360a9ffb22f94b9cf3fb7659aef40a7c",
    "details": {
      "sha": "c2474d7bd869fda82b097be5315a21d58139034b",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/decompilers/jdgui/JDGUIClassFileUtil.java",
      "status": "modified",
      "additions": 12,
      "deletions": 9,
      "changes": 21,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/511272aa360a9ffb22f94b9cf3fb7659aef40a7c/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fjdgui%2FJDGUIClassFileUtil.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/511272aa360a9ffb22f94b9cf3fb7659aef40a7c/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fjdgui%2FJDGUIClassFileUtil.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fjdgui%2FJDGUIClassFileUtil.java?ref=511272aa360a9ffb22f94b9cf3fb7659aef40a7c",
      "patch": "@@ -5,7 +5,6 @@\n import java.io.File;\n import java.io.FileInputStream;\n import java.io.IOException;\n-import java.util.Objects;\n import org.jd.core.v1.model.classfile.constant.Constant;\n import org.jd.core.v1.model.classfile.constant.ConstantClass;\n import org.jd.core.v1.model.classfile.constant.ConstantUtf8;\n@@ -29,8 +28,9 @@ public static String ExtractDirectoryPath(String pathToClass) {\n              BufferedInputStream bis = new BufferedInputStream(fis);\n              DataInputStream dis = new DataInputStream(bis)) {\n             int magic = dis.readInt();\n-            if (magic != ClassFileReader.JAVA_MAGIC_NUMBER)\n+            if (magic != ClassFileReader.JAVA_MAGIC_NUMBER) {\n                 throw new ClassFileFormatException(\"Invalid Java .class file\");\n+            }\n \n             /* int minor_version = */\n             dis.readUnsignedShort();\n@@ -43,16 +43,18 @@ public static String ExtractDirectoryPath(String pathToClass) {\n             dis.readUnsignedShort();\n             int this_class = dis.readUnsignedShort();\n \n-            if (this_class > Objects.requireNonNull(constants).length) {\n+            if (this_class > constants.length) {\n                 throw new ClassFileFormatException(\"Unknown Java structure\");\n             }\n             Constant c = constants[this_class];\n-            if ((c == null) || (c.getTag() != Constant.CONSTANT_Class))\n+            if ((c == null) || (c.getTag() != Constant.CONSTANT_Class)) {\n                 throw new ClassFileFormatException(\"Invalid constant pool\");\n+            }\n \n             c = constants[((ConstantClass) c).getNameIndex()];\n-            if ((c == null) || (c.getTag() != Constant.CONSTANT_Utf8))\n+            if ((c == null) || (c.getTag() != Constant.CONSTANT_Utf8)) {\n                 throw new ClassFileFormatException(\"Invalid constant pool\");\n+            }\n \n             String internalClassName = ((ConstantUtf8) c).getValue();\n             String pathSuffix = internalClassName.replace(\n@@ -61,8 +63,9 @@ public static String ExtractDirectoryPath(String pathToClass) {\n \n             int index = pathToClass.indexOf(pathSuffix);\n \n-            if (index < 0)\n+            if (index < 0) {\n                 throw new ClassFileFormatException(\"Invalid internal class name\");\n+            }\n \n             directoryPath = pathToClass.substring(0, index);\n         } catch (IOException e) {\n@@ -87,9 +90,6 @@ public static String ExtractInternalPath(\n     private static Constant[] DeserializeConstants(DataInputStream dis)\n             throws IOException {\n         int count = dis.readUnsignedShort();\n-        if (count == 0)\n-            return null;\n-\n         Constant[] constants = new Constant[count];\n \n         for (int i = 1; i < count; i++) {\n@@ -112,12 +112,15 @@ private static Constant[] DeserializeConstants(DataInputStream dis)\n             case Constant.CONSTANT_FieldRef:\n             case Constant.CONSTANT_MethodRef:\n             case Constant.CONSTANT_InterfaceMethodRef:\n+            case Constant.CONSTANT_InvokeDynamic:\n             case Constant.CONSTANT_NameAndType:\n             case Constant.CONSTANT_Integer:\n             case Constant.CONSTANT_Float:\n                 dis.read();\n+            case Constant.CONSTANT_MethodHandle:\n                 dis.read();\n             case Constant.CONSTANT_String:\n+            case Constant.CONSTANT_MethodType:\n                 dis.read();\n                 dis.read();\n                 break;",
      "parent_sha": "55bfc32185991a76fac1c475ab6475f47c8f8eea"
    }
  },
  {
    "oid": "c968e94b2c93da434a4ecfac6d08eda162d615d0",
    "message": "Mitigate Zip Slip exlpoit",
    "date": "2022-01-07T20:37:24Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/c968e94b2c93da434a4ecfac6d08eda162d615d0",
    "details": {
      "sha": "f7e9a648e08c818fe2a2351550643dedd0c2da70",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/util/ZipUtils.java",
      "status": "modified",
      "additions": 9,
      "deletions": 3,
      "changes": 12,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/c968e94b2c93da434a4ecfac6d08eda162d615d0/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Futil%2FZipUtils.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/c968e94b2c93da434a4ecfac6d08eda162d615d0/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Futil%2FZipUtils.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Futil%2FZipUtils.java?ref=c968e94b2c93da434a4ecfac6d08eda162d615d0",
      "patch": "@@ -35,6 +35,7 @@\n  */\n public final class ZipUtils {\n \n+    // TODO: Maybe migrate to org.apache.commons.compress.archivers.examples.Expander?\n     /**\n      * Unzip files to path.\n      *\n@@ -67,6 +68,11 @@ public static void unzipFilesToPath(String jarPath, String destinationDir) throw\n                 String fileName = destinationDir + File.separator + entry.getName();\n                 File f = new File(fileName);\n \n+                if (!f.getCanonicalPath().startsWith(destinationDir)) {\n+                    System.out.println(\"Zip Slip exploit detected. Skipping entry \" + entry.getName());\n+                    continue;\n+                }\n+\n                 File parent = f.getParentFile();\n                 if (!parent.exists()) {\n                     parent.mkdirs();\n@@ -106,15 +112,15 @@ public static void zipFile(File inputFile, File outputZip) {\n \n     public static void zipFolder(String srcFolder, String destZipFile, String ignore) throws Exception {\n         try (FileOutputStream fileWriter = new FileOutputStream(destZipFile);\n-             ZipOutputStream zip = new ZipOutputStream(fileWriter)){\n+             ZipOutputStream zip = new ZipOutputStream(fileWriter)) {\n             addFolderToZip(\"\", srcFolder, zip, ignore);\n             zip.flush();\n         }\n     }\n \n     public static void zipFolderAPKTool(String srcFolder, String destZipFile) throws Exception {\n         try (FileOutputStream fileWriter = new FileOutputStream(destZipFile);\n-             ZipOutputStream zip = new ZipOutputStream(fileWriter)){\n+             ZipOutputStream zip = new ZipOutputStream(fileWriter)) {\n             addFolderToZipAPKTool(\"\", srcFolder, zip);\n             zip.flush();\n         }\n@@ -199,4 +205,4 @@ public static void addFolderToZipAPKTool(String path, String srcFolder, ZipOutpu\n             }\n         }\n     }\n-}\n\\ No newline at end of file\n+}",
      "parent_sha": "5624f3f0105ec8ba3092adb3eb0529e3b9a2e396"
    }
  },
  {
    "oid": "ff4432f47d2da065de95837948c6c36bb560f2d8",
    "message": "ASMifier Shouldn't Parse",
    "date": "2024-10-02T11:07:35Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/ff4432f47d2da065de95837948c6c36bb560f2d8",
    "details": {
      "sha": "a8be62a30c748ff6260e46173666d0f30fd01360",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/resources/classcontainer/ClassFileContainer.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/ff4432f47d2da065de95837948c6c36bb560f2d8/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fresources%2Fclasscontainer%2FClassFileContainer.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/ff4432f47d2da065de95837948c6c36bb560f2d8/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fresources%2Fclasscontainer%2FClassFileContainer.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fresources%2Fclasscontainer%2FClassFileContainer.java?ref=ff4432f47d2da065de95837948c6c36bb560f2d8",
      "patch": "@@ -82,7 +82,8 @@ public boolean shouldParse()\n             && !getDecompiler().equals(Decompiler.KRAKATAU_DISASSEMBLER.getDecompilerName())\n             && !getDecompiler().equals(Decompiler.JAVAP_DISASSEMBLER.getDecompilerName())\n             && !getDecompiler().equals(Decompiler.SMALI_DISASSEMBLER.getDecompilerName())\n-            && !getDecompiler().equals(Decompiler.ASM_TEXTIFY_DISASSEMBLER.getDecompilerName());\n+            && !getDecompiler().equals(Decompiler.ASM_TEXTIFY_DISASSEMBLER.getDecompilerName())\n+            && !getDecompiler().equals(Decompiler.ASMIFIER_DECOMPILER.getDecompilerName());\n     }\n \n     public String getName()",
      "parent_sha": "88aa5a959530942df1443b30908c67f3ca75a773"
    }
  },
  {
    "oid": "8854d68e5ea072e1c6b096a5b0bed1eb196e7de3",
    "message": "Small cleanup",
    "date": "2023-12-05T20:43:31Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/8854d68e5ea072e1c6b096a5b0bed1eb196e7de3",
    "details": {
      "sha": "a2dcd4d37f4148ac7d00463bfff6e9311e79bce0",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/decompilers/impl/SmaliDisassembler.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/8854d68e5ea072e1c6b096a5b0bed1eb196e7de3/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FSmaliDisassembler.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/8854d68e5ea072e1c6b096a5b0bed1eb196e7de3/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FSmaliDisassembler.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FSmaliDisassembler.java?ref=8854d68e5ea072e1c6b096a5b0bed1eb196e7de3",
      "patch": "@@ -1,5 +1,6 @@\n package the.bytecode.club.bytecodeviewer.decompilers.impl;\n \n+import com.googlecode.d2j.smali.BaksmaliCmd;\n import java.io.File;\n import java.io.FileOutputStream;\n import java.io.IOException;\n@@ -73,7 +74,7 @@ public String decompileClassNode(ClassNode cn, byte[] b)\n         Dex2Jar.saveAsDex(tempClass, tempDex, true);\n \n         try {\n-            com.googlecode.d2j.smali.BaksmaliCmd.main(tempDex.getAbsolutePath(),\n+            BaksmaliCmd.main(tempDex.getAbsolutePath(),\n                     \"-o\", tempDexOut.getAbsolutePath());\n         } catch (Exception e) {\n             StringWriter sw = new StringWriter();\n@@ -116,7 +117,7 @@ public String decompileClassNode(ClassNode cn, byte[] b)\n \n             exception += ExceptionUI.SEND_STACKTRACE_TO_NL + sw;\n         }\n-        \n+\n         return SMALI + \" \" + DISASSEMBLER + \" \" + ERROR + \"! \" + ExceptionUI.SEND_STACKTRACE_TO +\n                 nl + nl + TranslatedStrings.SUGGESTED_FIX_DECOMPILER_ERROR +\n                 nl + nl + exception;",
      "parent_sha": "eda6416609c2f2833b17608f6d58f3cd7c574cd9"
    }
  },
  {
    "oid": "bfdab8ac4b36c3a5f90a234ce02fb8454f2f59ae",
    "message": "Middle-click to close tabs.\n\n- We could now also add the popup menu on the tab itself if we want to instead of just the button.",
    "date": "2024-09-27T16:27:07Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/bfdab8ac4b36c3a5f90a234ce02fb8454f2f59ae",
    "details": {
      "sha": "505567e912a116218a2d8bc20c4d8129108a031a",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/gui/resourceviewer/TabComponent.java",
      "status": "modified",
      "additions": 129,
      "deletions": 6,
      "changes": 135,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/bfdab8ac4b36c3a5f90a234ce02fb8454f2f59ae/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourceviewer%2FTabComponent.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/bfdab8ac4b36c3a5f90a234ce02fb8454f2f59ae/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourceviewer%2FTabComponent.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourceviewer%2FTabComponent.java?ref=bfdab8ac4b36c3a5f90a234ce02fb8454f2f59ae",
      "patch": "@@ -19,14 +19,16 @@\n package the.bytecode.club.bytecodeviewer.gui.resourceviewer;\n \n import com.github.weisj.darklaf.components.CloseButton;\n+import com.github.weisj.darklaf.ui.tabbedpane.*;\n import the.bytecode.club.bytecodeviewer.BytecodeViewer;\n import the.bytecode.club.bytecodeviewer.gui.components.listeners.MouseClickedListener;\n import the.bytecode.club.bytecodeviewer.gui.resourceviewer.viewer.ResourceViewer;\n import the.bytecode.club.bytecodeviewer.translation.TranslatedStrings;\n \n import javax.swing.*;\n import java.awt.*;\n-import java.awt.event.MouseEvent;\n+import java.awt.event.*;\n+import java.util.Objects;\n \n public class TabComponent extends JPanel\n {\n@@ -72,11 +74,8 @@ public String getText()\n         rightClickMenu.add(closeTab);\n         button.setComponentPopupMenu(rightClickMenu);\n \n-        //TODO add left-click close: when we add a new listener the parent listener (jTabbedPane) conflicts and won't respect the opaque flag.\n-        //  button.addMouseListener(new MouseClickedListener(e ->\n-        //      if (e.getButton() == MouseEvent.BUTTON2)     // middle-click\n-        //\t        closePane();\n-        //  }));\n+        addMouseListener(new TabMouseListener());\n+        addMouseMotionListener(new TabMouseListener());\n \n         button.addMouseListener(new MouseClickedListener(e ->\n         {\n@@ -145,4 +144,128 @@ private void removeTab(int index)\n         pane.remove(index);\n     }\n \n+    /**\n+     * Get the tab panel for mouse positions.\n+     *\n+     * @return the panel.\n+     */\n+    private ScrollableTabPanel getTabPanel()\n+    {\n+        for (Component component : Objects.requireNonNull(viewport()).getComponents())\n+            if (component instanceof ScrollableTabPanel)\n+                return (ScrollableTabPanel) component;\n+\n+        return null;\n+    }\n+\n+    /**\n+     * Get the viewport from darklaf.\n+     *\n+     * @return the viewport.\n+     */\n+    private DarkScrollableTabViewport viewport()\n+    {\n+        for (Component component : pane.getComponents())\n+            if (component instanceof DarkScrollableTabViewport)\n+                return (DarkScrollableTabViewport) component;\n+\n+        return null;\n+    }\n+\n+    /**\n+     * Get the tabbed pane handler from darklaf.\n+     *\n+     * @return the handler.\n+     */\n+    private DarkScrollTabbedPaneHandler getHandler()\n+    {\n+        for (Component component : pane.getComponents())\n+        {\n+            if (component instanceof DarkScrollableTabViewport)\n+            {\n+                DarkScrollableTabViewport viewport = (DarkScrollableTabViewport) component;\n+                for (MouseListener mouseListener : viewport.getMouseListeners())\n+                    if (mouseListener instanceof DarkScrollTabbedPaneHandler)\n+                        return (DarkScrollTabbedPaneHandler) mouseListener;\n+            }\n+        }\n+\n+        return null;\n+    }\n+\n+    /**\n+     * Create our own listener that redirects events back to darklaf.\n+     */\n+    private class TabMouseListener extends MouseAdapter\n+    {\n+        @Override\n+        public void mouseClicked(MouseEvent e)\n+        {\n+            e = convert(e);\n+            Objects.requireNonNull(getHandler()).mouseClicked(e);\n+        }\n+\n+        @Override\n+        public void mousePressed(MouseEvent e)\n+        {\n+            if (e.getButton() == MouseEvent.BUTTON2)\n+            {\n+                closePane();\n+                return;\n+            }\n+\n+            e = convert(e);\n+            Objects.requireNonNull(getHandler()).mousePressed(e);\n+        }\n+\n+        @Override\n+        public void mouseEntered(MouseEvent e)\n+        {\n+            e = convert(e);\n+            Objects.requireNonNull(getHandler()).mouseEntered(e);\n+        }\n+\n+        @Override\n+        public void mouseExited(MouseEvent e)\n+        {\n+            e = convert(e);\n+            Objects.requireNonNull(getHandler()).mouseExited(e);\n+        }\n+\n+        @Override\n+        public void mouseReleased(MouseEvent e)\n+        {\n+            e = convert(e);\n+            Objects.requireNonNull(getHandler()).mouseReleased(e);\n+        }\n+\n+        @Override\n+        public void mouseDragged(MouseEvent e)\n+        {\n+            e = convert(e);\n+            Objects.requireNonNull(getHandler()).mouseDragged(e);\n+        }\n+\n+        @Override\n+        public void mouseMoved(MouseEvent e)\n+        {\n+            e = convert(e);\n+            Objects.requireNonNull(getHandler()).mouseMoved(e);\n+        }\n+\n+\n+\n+        private MouseEvent convert(MouseEvent e)\n+        {\n+            ScrollableTabPanel tabPanel = getTabPanel();\n+            if (tabPanel == null || tabPanel.getMousePosition() == null)\n+                return null;\n+\n+            int x = tabPanel.getMousePosition().x;\n+            int y = tabPanel.getMousePosition().y;\n+            return new MouseEvent((Component) e.getSource(), e.getID(), e.getWhen(), e.getModifiersEx(), x, y,\n+                e.getClickCount(), e.isPopupTrigger());\n+        }\n+    }\n+\n }",
      "parent_sha": "515495e3780af0d822cc916407ac095bc6a658a7"
    }
  },
  {
    "oid": "0d27212f07b50a0d23828b870b4d6589773aa678",
    "message": "Rename Javap\n\nLike Javac the official name contains a lowercase letter at the end",
    "date": "2021-07-15T15:28:47Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/0d27212f07b50a0d23828b870b4d6589773aa678",
    "details": {
      "sha": "b0be12d2c50578d711973840cdf6e27dcd36e2f1",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/gui/resourceviewer/DecompilerSelectionPane.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/0d27212f07b50a0d23828b870b4d6589773aa678/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourceviewer%2FDecompilerSelectionPane.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/0d27212f07b50a0d23828b870b4d6589773aa678/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourceviewer%2FDecompilerSelectionPane.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourceviewer%2FDecompilerSelectionPane.java?ref=0d27212f07b50a0d23828b870b4d6589773aa678",
      "patch": "@@ -37,7 +37,7 @@ public class DecompilerSelectionPane\n \tprivate final DecompilerViewComponent smali = new DecompilerViewComponent(\"Smali\", BYTECODE, Decompiler.SMALI_DISASSEMBLER);\n \tprivate final DecompilerViewComponent bytecode = new DecompilerViewComponent(\"Bytecode\", BYTECODE_NON_EDITABLE, Decompiler.BYTECODE_DISASSEMBLER);\n \tprivate final DecompilerViewComponent asmTextify = new DecompilerViewComponent(\"ASM Textify\", BYTECODE_NON_EDITABLE, Decompiler.ASM_TEXTIFY_DISASSEMBLER);\n-\tprivate final DecompilerViewComponent javap = new DecompilerViewComponent(\"JavaP\", BYTECODE_NON_EDITABLE, Decompiler.JAVAP_DISASSEMBLER);\n+\tprivate final DecompilerViewComponent javap = new DecompilerViewComponent(\"Javap\", BYTECODE_NON_EDITABLE, Decompiler.JAVAP_DISASSEMBLER);\n \t\n \t//TODO when adding new decompilers insert the DecompilerViewComponent object into here\n \t// also in the group, then finally the build menu",
      "parent_sha": "9f503857174a999f8c3af753dc30e0ac981eb7cb"
    }
  },
  {
    "oid": "820d867a2f36a38a8d08e1ac35216943cf90ac63",
    "message": "Revert Disassembler TryCatch Label\n\nTo keep the disassembler beginner friendly the label should be descriptive to beginners and entry level REs",
    "date": "2022-03-23T19:13:15Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/820d867a2f36a38a8d08e1ac35216943cf90ac63",
    "details": {
      "sha": "6640c7f062ba8260f7d1fb586e4feb1584c9f6a8",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/decompilers/bytecode/MethodNodeDecompiler.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/820d867a2f36a38a8d08e1ac35216943cf90ac63/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fbytecode%2FMethodNodeDecompiler.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/820d867a2f36a38a8d08e1ac35216943cf90ac63/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fbytecode%2FMethodNodeDecompiler.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fbytecode%2FMethodNodeDecompiler.java?ref=820d867a2f36a38a8d08e1ac35216943cf90ac63",
      "patch": "@@ -148,7 +148,7 @@ else if (m.name.equals(\"<init>\"))\n             for (int i = 0; i < tryCatchBlocks.size(); i++) {\n                 TryCatchBlockNode o = tryCatchBlocks.get(i);\n                 sb.append(\"         \");\n-                sb.append(\"TCB\").append(i).append(\": L\");\n+                sb.append(\"TryCatch\").append(i).append(\": L\");\n                 sb.append(insnPrinter.resolveLabel(o.start));\n                 sb.append(\" to L\");\n                 sb.append(insnPrinter.resolveLabel(o.end));",
      "parent_sha": "2848d1d4cdc17fa9e3a5aeb0c3310e0342091e7d"
    }
  },
  {
    "oid": "8ea3db519a28c9608014e9b7905e4b4149e831f8",
    "message": "Include .class in the name when comparing with the file tree\n\nwithout this class `a.b.c` will not be added if package `a.b` exists",
    "date": "2018-07-14T03:48:40Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/8ea3db519a28c9608014e9b7905e4b4149e831f8",
    "details": {
      "sha": "031f8f87699de6b1aba8c58471ea9d9927aac36d",
      "filename": "src/the/bytecode/club/bytecodeviewer/gui/FileNavigationPane.java",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/8ea3db519a28c9608014e9b7905e4b4149e831f8/src%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2FFileNavigationPane.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/8ea3db519a28c9608014e9b7905e4b4149e831f8/src%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2FFileNavigationPane.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2FFileNavigationPane.java?ref=8ea3db519a28c9608014e9b7905e4b4149e831f8",
      "patch": "@@ -321,6 +321,8 @@ public void updateTree() {\n                             MyTreeNode parent = root;\n                             for (int i1 = 0; i1 < spl.length; i1++) {\n                                 String s = spl[i1];\n+                                if (i1 == spl.length - 1)\n+                                    s += \".class\";\n                                 MyTreeNode child = null;\n                                 for (int i = 0; i < parent.getChildCount(); i++) {\n                                     if (((MyTreeNode) parent.getChildAt(i)).getUserObject()\n@@ -330,10 +332,7 @@ public void updateTree() {\n                                     }\n                                 }\n                                 if (child == null) {\n-                                    if (i1 == spl.length - 1)\n-                                        child = new MyTreeNode(s + \".class\");\n-                                    else\n-                                        child = new MyTreeNode(s);\n+                                    child = new MyTreeNode(s);\n                                     parent.add(child);\n                                 }\n                                 parent = child;",
      "parent_sha": "66aa6e775982e79101ec9da28d57ef13e3fa526e"
    }
  },
  {
    "oid": "accae07b295ec15081c51a842abcb03921ce2a30",
    "message": "Code Cleanup",
    "date": "2022-02-13T21:35:24Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/accae07b295ec15081c51a842abcb03921ce2a30",
    "details": {
      "sha": "f152b1a9d706b0aed2058671d20c8f68202cd851",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/util/MiscUtils.java",
      "status": "modified",
      "additions": 18,
      "deletions": 4,
      "changes": 22,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/accae07b295ec15081c51a842abcb03921ce2a30/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Futil%2FMiscUtils.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/accae07b295ec15081c51a842abcb03921ce2a30/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Futil%2FMiscUtils.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Futil%2FMiscUtils.java?ref=accae07b295ec15081c51a842abcb03921ce2a30",
      "patch": "@@ -9,8 +9,6 @@\n import java.io.InputStream;\n import java.io.InputStreamReader;\n import java.lang.reflect.Field;\n-import java.nio.charset.CharsetEncoder;\n-import java.nio.charset.StandardCharsets;\n import java.util.ArrayList;\n import java.util.HashSet;\n import java.util.List;\n@@ -293,10 +291,26 @@ public static void setLanguage(Language language)\n         }\n     }\n     \n-    public static Thread startNewThread(String threadName, Runnable threadRunnable)\n+    /**\n+     * START's a new thread (Creates a new thread and runs that thread runnable on it)\n+     */\n+    public static Thread createNewThread(String threadName, Runnable threadRunnable)\n+    {\n+        return createNewThread(threadName, false, threadRunnable);\n+    }\n+    \n+    /**\n+     * START's a new thread (Creates a new thread and runs that thread runnable on it)\n+     * RUN's a new thread (Just executes the thread runnable on the active thread)\n+     */\n+    public static Thread createNewThread(String threadName, boolean runDontStart, Runnable threadRunnable)\n     {\n         Thread temporaryThread = new Thread(threadRunnable, threadName);\n-        temporaryThread.start();\n+        \n+        if(runDontStart)\n+            temporaryThread.run();\n+        else\n+            temporaryThread.start();\n         \n         return temporaryThread;\n     }",
      "parent_sha": "ab169afa370680deab76bafe52c6097ccf8e7ee6"
    }
  },
  {
    "oid": "838e40f55e2c52246cdc7f92047b0e997d3a5d68",
    "message": "FernFlower Exception Cleanup",
    "date": "2024-10-02T21:19:05Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/838e40f55e2c52246cdc7f92047b0e997d3a5d68",
    "details": {
      "sha": "0e892720a5ff22e36846a6a7c54d897fb3c313de",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/decompilers/impl/FernFlowerDecompiler.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/838e40f55e2c52246cdc7f92047b0e997d3a5d68/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FFernFlowerDecompiler.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/838e40f55e2c52246cdc7f92047b0e997d3a5d68/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FFernFlowerDecompiler.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FFernFlowerDecompiler.java?ref=838e40f55e2c52246cdc7f92047b0e997d3a5d68",
      "patch": "@@ -134,7 +134,7 @@ public String decompileClassNode(ClassNode cn, byte[] bytes)\n         }\n         catch (Throwable e)\n         {\n-            exception = NL + NL + ExceptionUtils.exceptionToString(e);\n+            exception = ExceptionUtils.exceptionToString(e);\n         }\n         finally\n         {",
      "parent_sha": "efb43e6fb9e2700fe9cf0adccbd26f9728093564"
    }
  },
  {
    "oid": "b7b72f957f5266fd0c65f20c996c2554d36f032f",
    "message": "Last Directory Bug Fix",
    "date": "2021-07-19T14:36:40Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/b7b72f957f5266fd0c65f20c996c2554d36f032f",
    "details": {
      "sha": "61bff43dbf1933ea7ffa58a6028a1410677f67ad",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/Configuration.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/b7b72f957f5266fd0c65f20c996c2554d36f032f/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FConfiguration.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/b7b72f957f5266fd0c65f20c996c2554d36f032f/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FConfiguration.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FConfiguration.java?ref=b7b72f957f5266fd0c65f20c996c2554d36f032f",
      "patch": "@@ -71,7 +71,7 @@ public static void setLastPluginDirectory(File file)\n \tpublic static File getLastOpenDirectory()\n \t{\n \t\tFile lastDir = new File(lastOpenDirectory);\n-\t\tif(lastDir.getParentFile().exists())\n+\t\tif(lastDir.getParentFile() != null && lastDir.getParentFile().exists())\n \t\t\treturn lastDir;\n \t\t\n \t\treturn new File(\".\");\n@@ -80,7 +80,7 @@ public static File getLastOpenDirectory()\n \tpublic static File getLastSaveDirectory()\n \t{\n \t\tFile lastDir = new File(lastSaveDirectory);\n-\t\tif(lastDir.getParentFile().exists())\n+\t\tif(lastDir.getParentFile() != null && lastDir.getParentFile().exists())\n \t\t\treturn lastDir;\n \t\t\n \t\treturn new File(\".\");\n@@ -90,7 +90,7 @@ public static File getLastPluginDirectory()\n \t{\n \t\tFile lastDir = new File(lastPluginDirectory);\n \t\t\n-\t\tif(lastDir.getParentFile().exists())\n+\t\tif(lastDir.getParentFile() != null && lastDir.getParentFile().exists())\n \t\t\treturn lastDir;\n \t\t\n \t\treturn new File(\".\");",
      "parent_sha": "05388b574b386e9daf076801884b6abbd5a87ae6"
    }
  },
  {
    "oid": "ce015c4f503eb4110037a783fd6c88b1ebd99fd0",
    "message": "Fix Version Check",
    "date": "2021-07-21T22:54:17Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/ce015c4f503eb4110037a783fd6c88b1ebd99fd0",
    "details": {
      "sha": "9337b89ac1fd1efd85aecc3e560fa572a63e29e5",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/bootloader/UpdateCheck.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/ce015c4f503eb4110037a783fd6c88b1ebd99fd0/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fbootloader%2FUpdateCheck.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/ce015c4f503eb4110037a783fd6c88b1ebd99fd0/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fbootloader%2FUpdateCheck.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fbootloader%2FUpdateCheck.java?ref=ce015c4f503eb4110037a783fd6c88b1ebd99fd0",
      "patch": "@@ -129,7 +129,7 @@ public void run()\n \t\t\t\n \t\t\ttry {\n \t\t\t\t//developer version\n-\t\t\t\tif (!localVersion.isGreaterThan(version))\n+\t\t\t\tif (Version.compare(localVersion, version) > 0)\n \t\t\t\t\treturn;\n \t\t\t} catch (Exception ignored) { }\n \t\t\t",
      "parent_sha": "0c629833ddd5cb626d125cd5fe29c526605f3afa"
    }
  },
  {
    "oid": "2210bb9b0e8ea6246e8daae5477607ca278486d0",
    "message": "Cleanup",
    "date": "2021-07-05T04:51:13Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/2210bb9b0e8ea6246e8daae5477607ca278486d0",
    "details": {
      "sha": "bb53e8967a9d78c1ad3986cc1cfe717256bafc1e",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/gui/resourceviewer/ResourceViewProcessing.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/2210bb9b0e8ea6246e8daae5477607ca278486d0/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourceviewer%2FResourceViewProcessing.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/2210bb9b0e8ea6246e8daae5477607ca278486d0/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourceviewer%2FResourceViewProcessing.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourceviewer%2FResourceViewProcessing.java?ref=2210bb9b0e8ea6246e8daae5477607ca278486d0",
      "patch": "@@ -110,7 +110,7 @@ public void processDisplay()\n \t\t\t\t\t\telse if(isPanelEditable && decompiler == Decompiler.KRAKATAU_DISASSEMBLER)\n \t\t\t\t\t\t\tresourceViewPanel.compileMode = Compiler.KRAKATAU_ASSEMBLER;\n \t\t\t\t\t\t\n-\t\t\t\t\t\tresourceViewPanel.textArea.getTitleHeader().setText(decompiler.getDecompilerName() + \" - Editable: \" + resourceViewPanel.textArea.isEditable());\n+\t\t\t\t\t\tresourceViewPanel.textArea.getTitleHeader().setText(decompiler.getDecompilerName() + \" - Editable: \" + isPanelEditable);\n \t\t\t\t\t\tresourceViewPanel.textArea.setFont(new Font(Font.MONOSPACED, Font.PLAIN,\n \t\t\t\t\t\t\t\t(int) BytecodeViewer.viewer.fontSpinner.getValue()));\n \t\t\t\t\t\t",
      "parent_sha": "83e90cc276aa8cbc916c5e045bdc2a515a6641c3"
    }
  },
  {
    "oid": "8875f96b976368171714cb9b044034870152ea72",
    "message": "Refactoring Style Test",
    "date": "2024-08-21T16:40:16Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/8875f96b976368171714cb9b044034870152ea72",
    "details": {
      "sha": "768ab4473017471f027c47ddf4c8b4b014b72100",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/gui/resourceviewer/viewer/ClassViewer.java",
      "status": "modified",
      "additions": 289,
      "deletions": 287,
      "changes": 576,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/8875f96b976368171714cb9b044034870152ea72/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourceviewer%2Fviewer%2FClassViewer.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/8875f96b976368171714cb9b044034870152ea72/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourceviewer%2Fviewer%2FClassViewer.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourceviewer%2Fviewer%2FClassViewer.java?ref=8875f96b976368171714cb9b044034870152ea72",
      "patch": "@@ -1,19 +1,5 @@\n package the.bytecode.club.bytecodeviewer.gui.resourceviewer.viewer;\n \n-import java.awt.BorderLayout;\n-import java.awt.Container;\n-import java.awt.Point;\n-import java.awt.event.ComponentAdapter;\n-import java.awt.event.ComponentEvent;\n-import java.awt.event.HierarchyEvent;\n-import java.awt.event.HierarchyListener;\n-import java.util.Arrays;\n-import java.util.List;\n-import javax.swing.JButton;\n-import javax.swing.JSplitPane;\n-import javax.swing.JViewport;\n-import javax.swing.SwingUtilities;\n-import javax.swing.text.BadLocationException;\n import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;\n import the.bytecode.club.bytecodeviewer.BytecodeViewer;\n import the.bytecode.club.bytecodeviewer.Configuration;\n@@ -25,6 +11,16 @@\n import the.bytecode.club.bytecodeviewer.resources.ResourceContainer;\n import the.bytecode.club.bytecodeviewer.util.MethodParser;\n \n+import javax.swing.*;\n+import javax.swing.text.BadLocationException;\n+import java.awt.*;\n+import java.awt.event.ComponentAdapter;\n+import java.awt.event.ComponentEvent;\n+import java.awt.event.HierarchyEvent;\n+import java.awt.event.HierarchyListener;\n+import java.util.Arrays;\n+import java.util.List;\n+\n import static the.bytecode.club.bytecodeviewer.util.MethodParser.Method;\n \n /***************************************************************************\n@@ -55,295 +51,301 @@\n \n public class ClassViewer extends ResourceViewer\n {\n-    public JSplitPane sp;\n-    public JSplitPane sp2;\n-    public BytecodeViewPanel bytecodeViewPanel1 = new BytecodeViewPanel(0, this);\n-    public BytecodeViewPanel bytecodeViewPanel2 = new BytecodeViewPanel(1, this);\n-    public BytecodeViewPanel bytecodeViewPanel3 = new BytecodeViewPanel(2, this);\n-    \n-    public List<MethodParser> methods = Arrays.asList(new MethodParser(), new MethodParser(), new MethodParser());\n-    \n-    public ClassViewer(ResourceContainer container, String name)\n-    {\n-        super(new Resource(name, container.getWorkingName(name), container));\n-        \n-        this.setName(name);\n-        this.setLayout(new BorderLayout());\n-        this.sp = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, bytecodeViewPanel1, bytecodeViewPanel2);\n-        this.sp2 = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, sp, bytecodeViewPanel3);\n-        this.add(sp2, BorderLayout.CENTER);\n-\n-        this.addComponentListener(new ComponentAdapter() {\n-            @Override\n-            public void componentResized(ComponentEvent e) {\n-                resetDivider();\n-            }\n-        });\n-    }\n-\n-    @Override\n-    public void refresh(JButton button)\n-    {\n-        setPanes();\n-        refreshTitle();\n-\n-        bytecodeViewPanel1.createPane(this);\n-        bytecodeViewPanel2.createPane(this);\n-        bytecodeViewPanel3.createPane(this);\n-\n-        byte[] classBytes = getResourceBytes();\n-        \n-        //TODO remove this once all of the importers have been properly updated to use a FileContainerImporter\n-        if(classBytes == null || classBytes.length == 0 || Configuration.forceResourceUpdateFromClassNode)\n-        {\n-            //TODO remove this error message when all of the importers have been updated\n-            // only APK and DEX are left\n-            if(!Configuration.forceResourceUpdateFromClassNode)\n-            {\n-                System.err.println(\"WARNING: Class Resource imported using the old importer!\");\n-                System.err.println(\"TODO: Update it to use the FileContainerImporter\");\n-            }\n-            \n-            classBytes = ASMUtil.nodeToBytes(resource.getResourceClassNode());\n-        }\n-        \n-        bytecodeViewPanel1.updatePane(this, classBytes, button, isPanel1Editable());\n-        bytecodeViewPanel2.updatePane(this, classBytes, button, isPanel2Editable());\n-        bytecodeViewPanel3.updatePane(this, classBytes, button, isPanel3Editable());\n-\n-        Thread dumpBuild = new Thread(() ->\n-        {\n-            BytecodeViewer.updateBusyStatus(true);\n-            \n-            while (Configuration.currentlyDumping)\n-            {\n-                //wait until it's not dumping\n-                try {\n-                    Thread.sleep(100);\n-                } catch (InterruptedException e) {\n-                    e.printStackTrace();\n-                }\n-            }\n-\n-            BytecodeViewer.updateBusyStatus(false);\n-\n-            if (bytecodeViewPanel1.decompiler != Decompiler.NONE)\n-                bytecodeViewPanel1.updateThread.startNewThread();\n-            if (bytecodeViewPanel2.decompiler != Decompiler.NONE)\n-                bytecodeViewPanel2.updateThread.startNewThread();\n-            if (bytecodeViewPanel3.decompiler != Decompiler.NONE)\n-                bytecodeViewPanel3.updateThread.startNewThread();\n-        }, \"ClassViewer Temp Dump\");\n-        dumpBuild.start();\n-\n-        if (isPanel1Editable() || isPanel2Editable() || isPanel3Editable())\n-        {\n-            if (Configuration.warnForEditing)\n-                return;\n-    \n-            Configuration.warnForEditing = true;\n-            if (!BytecodeViewer.viewer.autoCompileOnRefresh.isSelected()\n-                    && !BytecodeViewer.viewer.compileOnSave.isSelected())\n-            {\n-                BytecodeViewer.showMessage(\"Make sure to compile (File>Compile or Ctrl + T) whenever you want to \"\n-                        + \"test or export your changes.\\nYou can set compile automatically on refresh or on save \"\n-                        + \"in the settings menu.\");\n-        \n-                SettingsSerializer.saveSettingsAsync();\n-            }\n-        }\n-    }\n-    \n-    public void setPanes()\n-    {\n-        bytecodeViewPanel1.decompiler = BytecodeViewer.viewer.viewPane1.getSelectedDecompiler();\n-        bytecodeViewPanel2.decompiler = BytecodeViewer.viewer.viewPane2.getSelectedDecompiler();\n-        bytecodeViewPanel3.decompiler = BytecodeViewer.viewer.viewPane3.getSelectedDecompiler();\n-    }\n-\n-    public boolean isPanel1Editable()\n-    {\n-        setPanes();\n-        return BytecodeViewer.viewer.viewPane1.isPaneEditable();\n-    }\n-\n-    public boolean isPanel2Editable()\n-    {\n-        setPanes();\n-        return BytecodeViewer.viewer.viewPane2.isPaneEditable();\n-    }\n-\n-    public boolean isPanel3Editable()\n-    {\n-        setPanes();\n-        return BytecodeViewer.viewer.viewPane3.isPaneEditable();\n-    }\n-\n-\n-    public static void selectMethod(RSyntaxTextArea area, int methodLine)\n-    {\n-        if (methodLine != area.getCaretLineNumber())\n+\tpublic JSplitPane sp;\n+\tpublic JSplitPane sp2;\n+\tpublic BytecodeViewPanel bytecodeViewPanel1 = new BytecodeViewPanel(0, this);\n+\tpublic BytecodeViewPanel bytecodeViewPanel2 = new BytecodeViewPanel(1, this);\n+\tpublic BytecodeViewPanel bytecodeViewPanel3 = new BytecodeViewPanel(2, this);\n+\t\n+\tpublic List<MethodParser> methods = Arrays.asList(new MethodParser(), new MethodParser(), new MethodParser());\n+\t\n+\tpublic ClassViewer(ResourceContainer container, String name)\n+\t{\n+\t\tsuper(new Resource(name, container.getWorkingName(name), container));\n+\t\t\n+\t\tthis.setName(name);\n+\t\tthis.setLayout(new BorderLayout());\n+\t\tthis.sp = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, bytecodeViewPanel1, bytecodeViewPanel2);\n+\t\tthis.sp2 = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, sp, bytecodeViewPanel3);\n+\t\tthis.add(sp2, BorderLayout.CENTER);\n+\t\t\n+\t\tthis.addComponentListener(new ComponentAdapter()\n \t\t{\n-            setCaretLine(area, methodLine);\n-            setViewLine(area, methodLine);\n-        }\n-    }\n-\n-    public static void selectMethod(ClassViewer classViewer, int paneId, Method method)\n-    {\n-        RSyntaxTextArea area = null;\n-        switch (paneId)\n-        {\n-            case 0:\n-                area = classViewer.bytecodeViewPanel1.updateThread.updateUpdaterTextArea;\n-                break;\n-            case 1:\n-                area = classViewer.bytecodeViewPanel2.updateThread.updateUpdaterTextArea;\n-                break;\n-            case 2:\n-                area = classViewer.bytecodeViewPanel3.updateThread.updateUpdaterTextArea;\n-                break;\n-        }\n-\n-        if (area != null)\n+\t\t\t@Override\n+\t\t\tpublic void componentResized(ComponentEvent e)\n+\t\t\t{\n+\t\t\t\tresetDivider();\n+\t\t\t}\n+\t\t});\n+\t}\n+\t\n+\t@Override\n+\tpublic void refresh(JButton button)\n+\t{\n+\t\tsetPanes();\n+\t\trefreshTitle();\n+\t\t\n+\t\tbytecodeViewPanel1.createPane(this);\n+\t\tbytecodeViewPanel2.createPane(this);\n+\t\tbytecodeViewPanel3.createPane(this);\n+\t\t\n+\t\tbyte[] classBytes = getResourceBytes();\n+\t\t\n+\t\t//TODO remove this once all of the importers have been properly updated to use a FileContainerImporter\n+\t\tif (classBytes == null || classBytes.length == 0 || Configuration.forceResourceUpdateFromClassNode)\n \t\t{\n-            MethodParser methods = classViewer.methods.get(paneId);\n-            if (methods != null)\n+\t\t\t//TODO remove this error message when all of the importers have been updated\n+\t\t\t// only APK and DEX are left\n+\t\t\tif (!Configuration.forceResourceUpdateFromClassNode)\n \t\t\t{\n-                int methodLine = methods.findMethod(method);\n-                if (methodLine != -1)\n+\t\t\t\tSystem.err.println(\"WARNING: Class Resource imported using the old importer!\");\n+\t\t\t\tSystem.err.println(\"TODO: Update it to use the FileContainerImporter\");\n+\t\t\t}\n+\t\t\t\n+\t\t\tclassBytes = ASMUtil.nodeToBytes(resource.getResourceClassNode());\n+\t\t}\n+\t\t\n+\t\tbytecodeViewPanel1.updatePane(this, classBytes, button, isPanel1Editable());\n+\t\tbytecodeViewPanel2.updatePane(this, classBytes, button, isPanel2Editable());\n+\t\tbytecodeViewPanel3.updatePane(this, classBytes, button, isPanel3Editable());\n+\t\t\n+\t\tThread dumpBuild = new Thread(() ->\n+\t\t{\n+\t\t\tBytecodeViewer.updateBusyStatus(true);\n+\t\t\t\n+\t\t\twhile (Configuration.currentlyDumping)\n+\t\t\t{\n+\t\t\t\t//wait until it's not dumping\n+\t\t\t\ttry\n \t\t\t\t{\n-                    selectMethod(area, methodLine);\n-                }\n-            }\n-        }\n-    }\n-\n-    public static int getMaxViewLine(RSyntaxTextArea area)\n-    {\n-        Container parent = area.getParent();\n-        if (parent instanceof JViewport)\n-        {\n-            JViewport viewport = (JViewport) parent;\n-            int y = viewport.getViewSize().height - viewport.getExtentSize().height;\n-            int lineHeight = area.getLineHeight();\n-            return y >= lineHeight ? y / lineHeight : 0;\n-        }\n-        \n-        return 0;\n-    }\n-\n-    public static int getViewLine(RSyntaxTextArea area)\n-    {\n-        Container parent = area.getParent();\n-        if (parent instanceof JViewport)\n-        {\n-            JViewport viewport = (JViewport) parent;\n-            Point point = viewport.getViewPosition();\n-            int lineHeight = area.getLineHeight();\n-            return point.y >= lineHeight ? point.y / lineHeight : 0;\n-        }\n-        \n-        return 0;\n-    }\n-\n-    public static void setViewLine(RSyntaxTextArea area, int line)\n-    {\n-        Container parent = area.getParent();\n-        if (parent instanceof JViewport)\n-        {\n-            JViewport viewport = (JViewport) parent;\n-            int maxLine = ClassViewer.getMaxViewLine(area);\n-            line = Math.min(line, maxLine);\n-            viewport.setViewPosition(new Point(0, line * area.getLineHeight()));\n-        }\n-    }\n-\n-    public static void setCaretLine(RSyntaxTextArea area, int line)\n-    {\n-        try {\n-            area.setCaretPosition(area.getLineStartOffset(line));\n-        } catch (BadLocationException ignored) { }\n-    }\n-    \n-    public void resetDivider()\n-    {\n-        SwingUtilities.invokeLater(() ->\n-        {\n-            sp.setResizeWeight(0.5);\n-            \n-            if (bytecodeViewPanel2.decompiler != Decompiler.NONE && bytecodeViewPanel1.decompiler != Decompiler.NONE)\n-                setDividerLocation(sp, 0.5);\n-            else if (bytecodeViewPanel1.decompiler != Decompiler.NONE)\n-                setDividerLocation(sp, 1);\n+\t\t\t\t\tThread.sleep(100);\n+\t\t\t\t}\n+\t\t\t\tcatch (InterruptedException e)\n+\t\t\t\t{\n+\t\t\t\t\te.printStackTrace();\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\t\n+\t\t\tBytecodeViewer.updateBusyStatus(false);\n+\t\t\t\n+\t\t\tif (bytecodeViewPanel1.decompiler != Decompiler.NONE)\n+\t\t\t\tbytecodeViewPanel1.updateThread.startNewThread();\n+\t\t\tif (bytecodeViewPanel2.decompiler != Decompiler.NONE)\n+\t\t\t\tbytecodeViewPanel2.updateThread.startNewThread();\n+\t\t\tif (bytecodeViewPanel3.decompiler != Decompiler.NONE)\n+\t\t\t\tbytecodeViewPanel3.updateThread.startNewThread();\n+\t\t}, \"ClassViewer Temp Dump\");\n+\t\tdumpBuild.start();\n+\t\t\n+\t\tif (isPanel1Editable() || isPanel2Editable() || isPanel3Editable())\n+\t\t{\n+\t\t\tif (Configuration.warnForEditing)\n+\t\t\t\treturn;\n+\t\t\t\n+\t\t\tConfiguration.warnForEditing = true;\n+\t\t\tif (!BytecodeViewer.viewer.autoCompileOnRefresh.isSelected() && !BytecodeViewer.viewer.compileOnSave.isSelected())\n+\t\t\t{\n+\t\t\t\tBytecodeViewer.showMessage(\"Make sure to compile (File>Compile or Ctrl + T) whenever you want to \" + \"test or export your changes.\\nYou can set compile automatically on refresh or on save \" + \"in the settings menu.\");\n+\t\t\t\t\n+\t\t\t\tSettingsSerializer.saveSettingsAsync();\n+\t\t\t}\n+\t\t}\n+\t}\n+\t\n+\tpublic void setPanes()\n+\t{\n+\t\tbytecodeViewPanel1.decompiler = BytecodeViewer.viewer.viewPane1.getSelectedDecompiler();\n+\t\tbytecodeViewPanel2.decompiler = BytecodeViewer.viewer.viewPane2.getSelectedDecompiler();\n+\t\tbytecodeViewPanel3.decompiler = BytecodeViewer.viewer.viewPane3.getSelectedDecompiler();\n+\t}\n+\t\n+\tpublic boolean isPanel1Editable()\n+\t{\n+\t\tsetPanes();\n+\t\treturn BytecodeViewer.viewer.viewPane1.isPaneEditable();\n+\t}\n+\t\n+\tpublic boolean isPanel2Editable()\n+\t{\n+\t\tsetPanes();\n+\t\treturn BytecodeViewer.viewer.viewPane2.isPaneEditable();\n+\t}\n+\t\n+\tpublic boolean isPanel3Editable()\n+\t{\n+\t\tsetPanes();\n+\t\treturn BytecodeViewer.viewer.viewPane3.isPaneEditable();\n+\t}\n+\t\n+\t\n+\tpublic static void selectMethod(RSyntaxTextArea area, int methodLine)\n+\t{\n+\t\tif (methodLine != area.getCaretLineNumber())\n+\t\t{\n+\t\t\tsetCaretLine(area, methodLine);\n+\t\t\tsetViewLine(area, methodLine);\n+\t\t}\n+\t}\n+\t\n+\tpublic static void selectMethod(ClassViewer classViewer, int paneId, Method method)\n+\t{\n+\t\tRSyntaxTextArea area = null;\n+\t\tswitch (paneId)\n+\t\t{\n+\t\t\tcase 0:\n+\t\t\t\tarea = classViewer.bytecodeViewPanel1.updateThread.updateUpdaterTextArea;\n+\t\t\t\tbreak;\n+\t\t\tcase 1:\n+\t\t\t\tarea = classViewer.bytecodeViewPanel2.updateThread.updateUpdaterTextArea;\n+\t\t\t\tbreak;\n+\t\t\tcase 2:\n+\t\t\t\tarea = classViewer.bytecodeViewPanel3.updateThread.updateUpdaterTextArea;\n+\t\t\t\tbreak;\n+\t\t}\n+\t\t\n+\t\tif (area != null)\n+\t\t{\n+\t\t\tMethodParser methods = classViewer.methods.get(paneId);\n+\t\t\tif (methods != null)\n+\t\t\t{\n+\t\t\t\tint methodLine = methods.findMethod(method);\n+\t\t\t\tif (methodLine != -1)\n+\t\t\t\t{\n+\t\t\t\t\tselectMethod(area, methodLine);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\t\n+\tpublic static int getMaxViewLine(RSyntaxTextArea area)\n+\t{\n+\t\tContainer parent = area.getParent();\n+\t\tif (parent instanceof JViewport)\n+\t\t{\n+\t\t\tJViewport viewport = (JViewport) parent;\n+\t\t\tint y = viewport.getViewSize().height - viewport.getExtentSize().height;\n+\t\t\tint lineHeight = area.getLineHeight();\n+\t\t\treturn y >= lineHeight ? y / lineHeight : 0;\n+\t\t}\n+\t\t\n+\t\treturn 0;\n+\t}\n+\t\n+\tpublic static int getViewLine(RSyntaxTextArea area)\n+\t{\n+\t\tContainer parent = area.getParent();\n+\t\tif (parent instanceof JViewport)\n+\t\t{\n+\t\t\tJViewport viewport = (JViewport) parent;\n+\t\t\tPoint point = viewport.getViewPosition();\n+\t\t\tint lineHeight = area.getLineHeight();\n+\t\t\treturn point.y >= lineHeight ? point.y / lineHeight : 0;\n+\t\t}\n+\t\t\n+\t\treturn 0;\n+\t}\n+\t\n+\tpublic static void setViewLine(RSyntaxTextArea area, int line)\n+\t{\n+\t\tContainer parent = area.getParent();\n+\t\tif (parent instanceof JViewport)\n+\t\t{\n+\t\t\tJViewport viewport = (JViewport) parent;\n+\t\t\tint maxLine = ClassViewer.getMaxViewLine(area);\n+\t\t\tline = Math.min(line, maxLine);\n+\t\t\tviewport.setViewPosition(new Point(0, line * area.getLineHeight()));\n+\t\t}\n+\t}\n+\t\n+\tpublic static void setCaretLine(RSyntaxTextArea area, int line)\n+\t{\n+\t\ttry\n+\t\t{\n+\t\t\tarea.setCaretPosition(area.getLineStartOffset(line));\n+\t\t}\n+\t\tcatch (BadLocationException ignored)\n+\t\t{\n+\t\t}\n+\t}\n+\t\n+\tpublic void resetDivider()\n+\t{\n+\t\tSwingUtilities.invokeLater(() ->\n+\t\t{\n+\t\t\tsp.setResizeWeight(0.5);\n+\t\t\t\n+\t\t\tif (bytecodeViewPanel2.decompiler != Decompiler.NONE && bytecodeViewPanel1.decompiler != Decompiler.NONE)\n+\t\t\t\tsetDividerLocation(sp, 0.5);\n+\t\t\telse if (bytecodeViewPanel1.decompiler != Decompiler.NONE)\n+\t\t\t\tsetDividerLocation(sp, 1);\n \t\t\telse if (bytecodeViewPanel2.decompiler != Decompiler.NONE)\n \t\t\t{\n-                sp.setResizeWeight(1);\n-                setDividerLocation(sp, 0);\n-            }\n+\t\t\t\tsp.setResizeWeight(1);\n+\t\t\t\tsetDividerLocation(sp, 0);\n+\t\t\t}\n \t\t\telse\n-                setDividerLocation(sp, 0);\n-            \n-            if (bytecodeViewPanel3.decompiler != Decompiler.NONE)\n+\t\t\t\tsetDividerLocation(sp, 0);\n+\t\t\t\n+\t\t\tif (bytecodeViewPanel3.decompiler != Decompiler.NONE)\n \t\t\t{\n-                sp2.setResizeWeight(0.7);\n-                setDividerLocation(sp2, 0.7);\n-                if ((bytecodeViewPanel2.decompiler == Decompiler.NONE && bytecodeViewPanel1.decompiler != Decompiler.NONE)\n-                        || (bytecodeViewPanel1.decompiler == Decompiler.NONE && bytecodeViewPanel2.decompiler != Decompiler.NONE)) {\n-                    setDividerLocation(sp2, 0.5);\n-                }\n+\t\t\t\tsp2.setResizeWeight(0.7);\n+\t\t\t\tsetDividerLocation(sp2, 0.7);\n+\t\t\t\tif ((bytecodeViewPanel2.decompiler == Decompiler.NONE && bytecodeViewPanel1.decompiler != Decompiler.NONE) || (bytecodeViewPanel1.decompiler == Decompiler.NONE && bytecodeViewPanel2.decompiler != Decompiler.NONE))\n+\t\t\t\t{\n+\t\t\t\t\tsetDividerLocation(sp2, 0.5);\n+\t\t\t\t}\n \t\t\t\telse if (bytecodeViewPanel1.decompiler == Decompiler.NONE)\n-                    setDividerLocation(sp2, 0);\n-            }\n+\t\t\t\t\tsetDividerLocation(sp2, 0);\n+\t\t\t}\n \t\t\telse\n \t\t\t{\n-                sp.setResizeWeight(1);\n-                sp2.setResizeWeight(0);\n-                setDividerLocation(sp2, 1);\n-            }\n-        });\n-    }\n-    \n-    /**\n-     * Whoever wrote this function, THANK YOU!\n-     */\n-    public static JSplitPane setDividerLocation(JSplitPane splitter, double proportion)\n-    {\n-        if (splitter.isShowing())\n+\t\t\t\tsp.setResizeWeight(1);\n+\t\t\t\tsp2.setResizeWeight(0);\n+\t\t\t\tsetDividerLocation(sp2, 1);\n+\t\t\t}\n+\t\t});\n+\t}\n+\t\n+\t/**\n+\t * Whoever wrote this function, THANK YOU!\n+\t */\n+\tpublic static JSplitPane setDividerLocation(JSplitPane splitter, double proportion)\n+\t{\n+\t\tif (splitter.isShowing())\n \t\t{\n-            if (splitter.getWidth() > 0 && splitter.getHeight() > 0)\n-                splitter.setDividerLocation(proportion);\n+\t\t\tif (splitter.getWidth() > 0 && splitter.getHeight() > 0)\n+\t\t\t\tsplitter.setDividerLocation(proportion);\n \t\t\telse\n \t\t\t{\n-                splitter.addComponentListener(new ComponentAdapter()\n-                {\n-                    @Override\n-                    public void componentResized(ComponentEvent ce)\n-                    {\n-                        splitter.removeComponentListener(this);\n-                        setDividerLocation(splitter, proportion);\n-                    }\n-                });\n-            }\n-        }\n+\t\t\t\tsplitter.addComponentListener(new ComponentAdapter()\n+\t\t\t\t{\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic void componentResized(ComponentEvent ce)\n+\t\t\t\t\t{\n+\t\t\t\t\t\tsplitter.removeComponentListener(this);\n+\t\t\t\t\t\tsetDividerLocation(splitter, proportion);\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\t\t\t}\n+\t\t}\n \t\telse\n \t\t{\n-            splitter.addHierarchyListener(new HierarchyListener()\n-            {\n-                @Override\n-                public void hierarchyChanged(HierarchyEvent e)\n-                {\n-                    if ((e.getChangeFlags() & HierarchyEvent.SHOWING_CHANGED) != 0 && splitter.isShowing())\n+\t\t\tsplitter.addHierarchyListener(new HierarchyListener()\n+\t\t\t{\n+\t\t\t\t@Override\n+\t\t\t\tpublic void hierarchyChanged(HierarchyEvent e)\n+\t\t\t\t{\n+\t\t\t\t\tif ((e.getChangeFlags() & HierarchyEvent.SHOWING_CHANGED) != 0 && splitter.isShowing())\n \t\t\t\t\t{\n-                        splitter.removeHierarchyListener(this);\n-                        setDividerLocation(splitter, proportion);\n-                    }\n-                }\n-            });\n-        }\n+\t\t\t\t\t\tsplitter.removeHierarchyListener(this);\n+\t\t\t\t\t\tsetDividerLocation(splitter, proportion);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t});\n+\t\t}\n \t\t\n-        return splitter;\n-    }\n-    \n-    private static final long serialVersionUID = -8650495368920680024L;\n+\t\treturn splitter;\n+\t}\n+\t\n+\tprivate static final long serialVersionUID = -8650495368920680024L;\n }",
      "parent_sha": "b5c87e4eef2bb8c8abd2b9885d31961733e35e14"
    }
  },
  {
    "oid": "23d6e64a660ee7f66a114645b6d55580f360f495",
    "message": "Typo",
    "date": "2021-07-23T05:17:20Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/23d6e64a660ee7f66a114645b6d55580f360f495",
    "details": {
      "sha": "675fc0b7f2cb18428c8b753f68077c3ebba310f9",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/api/ExceptionUI.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/23d6e64a660ee7f66a114645b6d55580f360f495/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fapi%2FExceptionUI.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/23d6e64a660ee7f66a114645b6d55580f360f495/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fapi%2FExceptionUI.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fapi%2FExceptionUI.java?ref=23d6e64a660ee7f66a114645b6d55580f360f495",
      "patch": "@@ -42,7 +42,7 @@\n \n public class ExceptionUI extends JFrameConsole\n {\n-    public static final String KONLOCH = \"https://github.com/Konloch/bytecode-viewer/issues or Konloch at https://the.bytcode.club or konloch@gmail.com\";\n+    public static final String KONLOCH = \"https://github.com/Konloch/bytecode-viewer/issues or Konloch at https://the.bytecode.club or konloch@gmail.com\";\n     public static final String SEND_STACKTRACE_TO = buildErrorLogHeader(KONLOCH);\n     public static final String SEND_STACKTRACE_TO_NL = SEND_STACKTRACE_TO + nl + nl;\n     ",
      "parent_sha": "08e129b4702e5b281fbda4be9a90c4b261de8186"
    }
  },
  {
    "oid": "fa766a485131c2b430042e74c62a269ab75d273c",
    "message": "Fixed The Swing UI Freezing/Lag\n\nThis should resolve any issues when first opening a class resource or refreshing it.",
    "date": "2021-06-29T00:17:30Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/fa766a485131c2b430042e74c62a269ab75d273c",
    "details": {
      "sha": "0e02ea145c05a963dfa968a7a9f1a6906449fffc",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/gui/util/PaneUpdaterThread.java",
      "status": "modified",
      "additions": 16,
      "deletions": 12,
      "changes": 28,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/fa766a485131c2b430042e74c62a269ab75d273c/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Futil%2FPaneUpdaterThread.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/fa766a485131c2b430042e74c62a269ab75d273c/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Futil%2FPaneUpdaterThread.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Futil%2FPaneUpdaterThread.java?ref=fa766a485131c2b430042e74c62a269ab75d273c",
      "patch": "@@ -5,9 +5,7 @@\n import java.awt.event.InputEvent;\n import java.util.Objects;\n import java.util.regex.Matcher;\n-import javax.swing.JComboBox;\n-import javax.swing.JPanel;\n-import javax.swing.JViewport;\n+import javax.swing.*;\n import javax.swing.event.CaretEvent;\n import javax.swing.event.CaretListener;\n import javax.swing.event.ChangeEvent;\n@@ -77,11 +75,10 @@ public void run()\n         \n         doShit();\n     \n-        //freezes the UI for some reason\n-        //probably cause BCV is doing dumb shit with the swing thread\n+        //this used to freeze the swing UI\n+        //if anything breaks again try searching here first\n         synchronizePane();\n         \n-        \n         attachCtrlMouseWheelZoom(updateUpdaterTextArea.getScrollPane(), updateUpdaterTextArea);\n     }\n \n@@ -214,8 +211,11 @@ public void synchronizePane()\n             return;\n         \n         JViewport viewport = updateUpdaterTextArea.getScrollPane().getViewport();\n-        viewport.addChangeListener(viewportListener);\n-        updateUpdaterTextArea.addCaretListener(caretListener);\n+        SwingUtilities.invokeLater(()->\n+        {\n+            viewport.addChangeListener(viewportListener);\n+            updateUpdaterTextArea.addCaretListener(caretListener);\n+        });\n         \n         final MethodParser methods = viewer.methods.get(paneIndex);\n         for (int i = 0; i < updateUpdaterTextArea.getLineCount(); i++)\n@@ -230,12 +230,16 @@ public void synchronizePane()\n             }\n         }\n \n-        if (BytecodeViewer.viewer.showClassMethods.isSelected()) {\n-            if (!methods.isEmpty()) {\n+        //TODO fix this\n+        if (BytecodeViewer.viewer.showClassMethods.isSelected())\n+        {\n+            if (!methods.isEmpty())\n+            {\n                 methodsList = new JComboBox<>();\n-                for (Integer line : methods.getMethodsLines()) {\n+                \n+                for (Integer line : methods.getMethodsLines())\n                     methodsList.addItem(line);\n-                }\n+                \n                 methodsList.setRenderer(new MethodsRenderer(this));\n                 methodsList.addActionListener(e ->\n                 {",
      "parent_sha": "4e7edaada1ab75363c017d02cafc970032f2ac87"
    }
  },
  {
    "oid": "164843a824988600e8dd042875685d5a441c825c",
    "message": "Update GoToAction",
    "date": "2024-10-13T05:48:45Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/164843a824988600e8dd042875685d5a441c825c",
    "details": {
      "sha": "ff728c7eaa9cf6f258aa72eee85eab5a8f85927d",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/gui/components/actions/GoToAction.java",
      "status": "modified",
      "additions": 17,
      "deletions": 5,
      "changes": 22,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/164843a824988600e8dd042875685d5a441c825c/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fcomponents%2Factions%2FGoToAction.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/164843a824988600e8dd042875685d5a441c825c/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fcomponents%2Factions%2FGoToAction.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fcomponents%2Factions%2FGoToAction.java?ref=164843a824988600e8dd042875685d5a441c825c",
      "patch": "@@ -53,7 +53,7 @@ public void actionPerformed(ActionEvent e)\n                 // Open the class that is associated with the field's owner.\n                 if (!field.owner.equals(container.getName()))\n                 {\n-                    open(textArea, false, true, false);\n+                    find(textArea, false, true, false);\n                     return;\n                 }\n \n@@ -136,7 +136,7 @@ public void actionPerformed(ActionEvent e)\n                         }\n                     });\n \n-                    open(textArea, false, false, true);\n+                    find(textArea, false, false, true);\n                 }\n             }\n         }));\n@@ -166,7 +166,7 @@ public void actionPerformed(ActionEvent e)\n                     });\n \n                     // Should not really do anything when the class is already open\n-                    open(textArea, true, false, false);\n+                    find(textArea, true, false, false);\n                 }\n             }\n         }));\n@@ -184,7 +184,9 @@ private ClassFileContainer openClass(String lexeme, boolean field, boolean metho\n \n         if (field)\n         {\n+            ClassFieldLocation fieldLocation = container.getFieldLocationsFor(lexeme).get(0);\n             String className = container.getClassForField(lexeme);\n+            ClassReferenceLocation referenceLocation = container.getClassReferenceLocationsFor(fieldLocation.owner).get(0);\n \n             // If the field we want to go to wasn't an expression like Class.field. For example param.field or\n             // variable.field\n@@ -203,7 +205,12 @@ private ClassFileContainer openClass(String lexeme, boolean field, boolean metho\n                     return null;\n \n                 if (!packagePath.isEmpty())\n-                    className = packagePath + \"/\" + className;\n+                    className = packagePath + \"/\" + className.substring(className.lastIndexOf('/') + 1);\n+            }\n+\n+            if (!fieldLocation.owner.equals(referenceLocation.owner))\n+            {\n+                className = referenceLocation.packagePath + \"/\" + referenceLocation.owner;\n             }\n \n             if (resourceContainer.resourceClasses.containsKey(className))\n@@ -261,6 +268,11 @@ else if (method)\n                 resourceName = packagePath + \"/\" + lexeme;\n             }\n \n+            if (!classReferenceLocation.owner.equals(container.getName()))\n+            {\n+                resourceName = packagePath + \"/\" + classReferenceLocation.owner;\n+            }\n+\n             if (resourceContainer.resourceClasses.containsKey(resourceName))\n             {\n                 BytecodeViewer.viewer.workPane.addClassResource(resourceContainer, resourceName + \".class\");\n@@ -273,7 +285,7 @@ else if (method)\n         return null;\n     }\n \n-    private void open(RSyntaxTextArea textArea, boolean isClass, boolean isField, boolean isMethod)\n+    private void find(RSyntaxTextArea textArea, boolean isClass, boolean isField, boolean isMethod)\n     {\n         Thread thread = new Thread(() ->\n         {",
      "parent_sha": "789cedadaab4d0f1fd62f9540a59685935972261"
    }
  },
  {
    "oid": "5364d5eb95ffd3f9e40e1113c304d16cdc711b57",
    "message": "API Changes",
    "date": "2021-07-04T08:50:45Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/5364d5eb95ffd3f9e40e1113c304d16cdc711b57",
    "details": {
      "sha": "3332951d3e2512ddb71266422ace149ed7a07ed1",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/util/SecurityMan.java",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/5364d5eb95ffd3f9e40e1113c304d16cdc711b57/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Futil%2FSecurityMan.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/5364d5eb95ffd3f9e40e1113c304d16cdc711b57/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Futil%2FSecurityMan.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Futil%2FSecurityMan.java?ref=5364d5eb95ffd3f9e40e1113c304d16cdc711b57",
      "patch": "@@ -38,18 +38,18 @@ public void setBlocking() {\n \n     public void stopBlocking() { //slightly safer security system than just a public static boolean being toggled\n         String executedClass = Thread.currentThread().getStackTrace()[2].getClassName();\n-        if (executedClass.equals(\"the.bytecode.club.bytecodeviewer.decompilers.KrakatauDecompiler\") ||\n-                executedClass.equals(\"the.bytecode.club.bytecodeviewer.decompilers.KrakatauDisassembler\") ||\n-                executedClass.equals(\"the.bytecode.club.bytecodeviewer.decompilers.CFRDecompiler\") ||\n-                executedClass.equals(\"the.bytecode.club.bytecodeviewer.decompilers.ProcyonDecompiler\") ||\n-                executedClass.equals(\"the.bytecode.club.bytecodeviewer.decompilers.FernFlowerDecompiler\") ||\n-                executedClass.equals(\"the.bytecode.club.bytecodeviewer.decompilers.JDGUIDecompiler\") ||\n-                executedClass.equals(\"the.bytecode.club.bytecodeviewer.compilers.KrakatauAssembler\") ||\n+        if (executedClass.equals(\"the.bytecode.club.bytecodeviewer.decompilers.impl.KrakatauDecompiler\") ||\n+                executedClass.equals(\"the.bytecode.club.bytecodeviewer.decompilers.impl.KrakatauDisassembler\") ||\n+                executedClass.equals(\"the.bytecode.club.bytecodeviewer.decompilers.impl.CFRDecompiler\") ||\n+                executedClass.equals(\"the.bytecode.club.bytecodeviewer.decompilers.impl.ProcyonDecompiler\") ||\n+                executedClass.equals(\"the.bytecode.club.bytecodeviewer.decompilers.impl.FernFlowerDecompiler\") ||\n+                executedClass.equals(\"the.bytecode.club.bytecodeviewer.decompilers.impl.JDGUIDecompiler\") ||\n+                executedClass.equals(\"the.bytecode.club.bytecodeviewer.compilers.impl.KrakatauAssembler\") ||\n                 executedClass.equals(\"the.bytecode.club.bytecodeviewer.util.Enjarify\") ||\n                 executedClass.equals(\"the.bytecode.club.bytecodeviewer.util.APKTool\") ||\n                 executedClass.equals(\"the.bytecode.club.bytecodeviewer.BytecodeViewer\") ||\n                 executedClass.equals(\"the.bytecode.club.bytecodeviewer.Constants\") ||\n-                executedClass.equals(\"the.bytecode.club.bytecodeviewer.compilers.JavaCompiler\")) {\n+                executedClass.equals(\"the.bytecode.club.bytecodeviewer.compilers.impl.JavaCompiler\")) {\n             blocking = false;\n         } else for (StackTraceElement stackTraceElements : Thread.currentThread().getStackTrace()) {\n             System.out.println(stackTraceElements.getClassName());",
      "parent_sha": "33e2b1d6db50b353ead3073307adfd3fa69b7e49"
    }
  },
  {
    "oid": "9391352953674c882e23806658b81ecbd1a50497",
    "message": "ASMifier Cleanup\n\nBetter Failing. Decompile to zip fallback added.",
    "date": "2024-10-02T22:43:02Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/9391352953674c882e23806658b81ecbd1a50497",
    "details": {
      "sha": "85b51fa786a2788b62516c58175ce6c9062610f9",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/decompilers/impl/ASMifierGenerator.java",
      "status": "modified",
      "additions": 30,
      "deletions": 3,
      "changes": 33,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/9391352953674c882e23806658b81ecbd1a50497/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FASMifierGenerator.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/9391352953674c882e23806658b81ecbd1a50497/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FASMifierGenerator.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FASMifierGenerator.java?ref=9391352953674c882e23806658b81ecbd1a50497",
      "patch": "@@ -21,12 +21,20 @@\n import org.objectweb.asm.tree.ClassNode;\n import org.objectweb.asm.util.ASMifier;\n import org.objectweb.asm.util.TraceClassVisitor;\n+import the.bytecode.club.bytecodeviewer.Constants;\n+import the.bytecode.club.bytecodeviewer.api.ExceptionUI;\n import the.bytecode.club.bytecodeviewer.decompilers.AbstractDecompiler;\n+import the.bytecode.club.bytecodeviewer.translation.TranslatedStrings;\n+import the.bytecode.club.bytecodeviewer.util.ExceptionUtils;\n import the.bytecode.club.bytecodeviewer.util.JavaFormatterUtils;\n \n import java.io.PrintWriter;\n import java.io.StringWriter;\n \n+import static the.bytecode.club.bytecodeviewer.Constants.NL;\n+import static the.bytecode.club.bytecodeviewer.translation.TranslatedStrings.DEV_MODE_SIMULATED_ERROR;\n+import static the.bytecode.club.bytecodeviewer.translation.TranslatedStrings.ERROR;\n+\n /**\n  * Objectweb ASMifier output\n  *\n@@ -42,13 +50,32 @@ public ASMifierGenerator()\n     @Override\n     public String decompileClassNode(ClassNode cn, byte[] bytes)\n     {\n-        StringWriter writer = new StringWriter();\n-        cn.accept(new TraceClassVisitor(null, new ASMifier(), new PrintWriter(writer)));\n-        return JavaFormatterUtils.formatJavaCode(writer.toString());\n+        String exception;\n+\n+        try\n+        {\n+            StringWriter writer = new StringWriter();\n+            cn.accept(new TraceClassVisitor(null, new ASMifier(), new PrintWriter(writer)));\n+\n+            //handle simulated errors\n+            if(Constants.DEV_FLAG_DECOMPILERS_SIMULATED_ERRORS)\n+                throw new RuntimeException(DEV_MODE_SIMULATED_ERROR.toString());\n+\n+            //format and return the java writer contents\n+            return JavaFormatterUtils.formatJavaCode(writer.toString());\n+        }\n+        catch (Throwable e)\n+        {\n+            exception = ExceptionUtils.exceptionToString(e);\n+        }\n+\n+        return \"ASMifier \" + ERROR + \"! \" + ExceptionUI.SEND_STACKTRACE_TO + NL + NL\n+            + TranslatedStrings.SUGGESTED_FIX_DECOMPILER_ERROR + NL + NL + exception;\n     }\n \n     @Override\n     public void decompileToZip(String sourceJar, String zipName)\n     {\n+        decompileToZipFallBack(sourceJar, zipName);\n     }\n }",
      "parent_sha": "ceeae5843e170aa0d8c2e963ee2d6125976d3ea5"
    }
  },
  {
    "oid": "0c47d5ce8b4d42f2a34a69a131753de2a82d929f",
    "message": "Allow FernFlower to know of any inner classes (if it's enabled) so the class can be decompiled correctly, and we can parse it.",
    "date": "2024-10-14T01:04:03Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/0c47d5ce8b4d42f2a34a69a131753de2a82d929f",
    "details": {
      "sha": "3c2398eac53792ea1b025fd7558f1a3dd4a7f544",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/decompilers/impl/FernFlowerDecompiler.java",
      "status": "modified",
      "additions": 113,
      "deletions": 5,
      "changes": 118,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/0c47d5ce8b4d42f2a34a69a131753de2a82d929f/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FFernFlowerDecompiler.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/0c47d5ce8b4d42f2a34a69a131753de2a82d929f/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FFernFlowerDecompiler.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FFernFlowerDecompiler.java?ref=0c47d5ce8b4d42f2a34a69a131753de2a82d929f",
      "patch": "@@ -22,17 +22,23 @@\n import org.apache.commons.lang3.ArrayUtils;\n import org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler;\n import org.objectweb.asm.tree.ClassNode;\n+import org.objectweb.asm.tree.InnerClassNode;\n import the.bytecode.club.bytecodeviewer.BytecodeViewer;\n import the.bytecode.club.bytecodeviewer.Constants;\n+import the.bytecode.club.bytecodeviewer.api.ASMUtil;\n import the.bytecode.club.bytecodeviewer.api.ExceptionUI;\n import the.bytecode.club.bytecodeviewer.decompilers.AbstractDecompiler;\n import the.bytecode.club.bytecodeviewer.resources.ExternalResources;\n+import the.bytecode.club.bytecodeviewer.resources.ResourceContainer;\n import the.bytecode.club.bytecodeviewer.translation.TranslatedStrings;\n import the.bytecode.club.bytecodeviewer.util.ExceptionUtils;\n import the.bytecode.club.bytecodeviewer.util.ProcessUtils;\n import the.bytecode.club.bytecodeviewer.util.TempFile;\n \n import java.io.*;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.atomic.AtomicReference;\n \n import static the.bytecode.club.bytecodeviewer.Constants.*;\n import static the.bytecode.club.bytecodeviewer.translation.TranslatedStrings.*;\n@@ -51,12 +57,61 @@ public FernFlowerDecompiler()\n         super(\"FernFlower Decompiler\", \"fernflower\");\n     }\n \n+    private String[] inners;\n+    private final List<File> innerFiles = new ArrayList<>();\n     @Override\n     public String decompileClassNode(ClassNode cn, byte[] bytes)\n     {\n         TempFile tempFile = null;\n         String exception;\n \n+        List<InnerClassNode> innerClasses = cn.innerClasses;\n+        List<TempFile> innerTempFiles = new ArrayList<>();\n+        AtomicReference<TempFile> innerTempFile = new AtomicReference<>();\n+        if (BytecodeViewer.viewer.din.isSelected())\n+        {\n+            inners = new String[innerClasses.size()];\n+            for (int i = 0; i < innerClasses.size(); i++)\n+            {\n+                if (innerClasses.get(i).outerName != null && innerClasses.get(i).outerName.equals(cn.name))\n+                {\n+                    inners[i] = innerClasses.get(i).name;\n+                }\n+                else if (innerClasses.get(i).outerName == null)\n+                {\n+                    String name = innerClasses.get(i).name;\n+                    name = name.substring(name.lastIndexOf('/') + 1);\n+                    if (name.contains(cn.name.substring(cn.name.lastIndexOf('/') + 1)))\n+                    {\n+                        inners[i] = innerClasses.get(i).name;\n+                    }\n+                }\n+            }\n+\n+            for (ResourceContainer container :BytecodeViewer.resourceContainers.values()) {\n+                container.resourceClasses.forEach((s, classNode) -> {\n+                    for (String innerClassName : inners) {\n+                        if (s.equals(innerClassName)) {\n+                            innerTempFile.set(TempFile.createTemporaryFile(true, \".class\"));\n+                            File tempInputClassFile2 = innerTempFile.get().getFile();\n+                            try (FileOutputStream fos = new FileOutputStream(tempInputClassFile2)) {\n+                                fos.write(ASMUtil.nodeToBytes(classNode));\n+                            }\n+                            catch (IOException e)\n+                            {\n+                                throw new RuntimeException(e);\n+                            } finally\n+                            {\n+                                innerFiles.add(tempInputClassFile2);\n+                                innerTempFile.get().markAsCreatedFile(tempInputClassFile2);\n+                                innerTempFiles.add(innerTempFile.get());\n+                            }\n+                        }\n+                    }\n+                });\n+            }\n+        }\n+\n         try\n         {\n             //create the temporary files\n@@ -80,12 +135,17 @@ public String decompileClassNode(ClassNode cn, byte[] bytes)\n                     {\n                         ExternalResources.getSingleton().getJavaCommand(true),\n                         \"-jar\", ExternalResources.getSingleton().findLibrary(\"fernflower\")\n-                    }, generateMainMethod(tempInputClassFile.getAbsolutePath(), tempFile.getParent().getAbsolutePath())\n+                    }, generateMainMethod(tempInputClassFile.getAbsolutePath(), \"\", tempFile.getParent().getAbsolutePath())\n                 ), false);\n             }\n             else\n             {\n-                org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler.main(generateMainMethod(tempInputClassFile.getAbsolutePath(), new File(TEMP_DIRECTORY).getAbsolutePath()));\n+                List<String> strings = generate(tempInputClassFile.getAbsolutePath(),\n+                    new File(TEMP_DIRECTORY).getAbsolutePath());\n+\n+                String[] args = strings.toArray(new String[0]);\n+\n+                org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler.main(args);\n             }\n \n             //if rename is enabled the file name will be the actual class name\n@@ -112,6 +172,21 @@ public String decompileClassNode(ClassNode cn, byte[] bytes)\n             //cleanup temp files\n             if(tempFile != null)\n                 tempFile.cleanup();\n+\n+            if (innerTempFile.get() != null)\n+                innerTempFile.get().cleanup();\n+\n+            for (TempFile file : innerTempFiles)\n+            {\n+                file.cleanup();\n+                File file1 = new File(TEMP_DIRECTORY + file.getUniqueName() + \".java\");\n+                if (file1.exists())\n+                {\n+                    file1.delete();\n+                }\n+            }\n+\n+            innerFiles.clear();\n         }\n \n         return FERNFLOWER + \" \" + ERROR + \"! \" + ExceptionUI.SEND_STACKTRACE_TO + NL + NL\n@@ -127,7 +202,7 @@ public void decompileToZip(String sourceJar, String zipName)\n \n         try\n         {\n-            ConsoleDecompiler.main(generateMainMethod(tempInputJarFile.getAbsolutePath(), TEMP_DIRECTORY + \"./temp/\"));\n+            ConsoleDecompiler.main(generateMainMethod(tempInputJarFile.getAbsolutePath(), \"\", TEMP_DIRECTORY + \"./temp/\"));\n         }\n         catch (StackOverflowError | Exception ignored)\n         {\n@@ -140,7 +215,40 @@ public void decompileToZip(String sourceJar, String zipName)\n \n     }\n \n-    private String[] generateMainMethod(String className, String folder)\n+    private List<String> generate(String className, String folder)\n+    {\n+        List<String> strings = new ArrayList<>();\n+        strings.add(\"-rbr=\" + ffOnValue(BytecodeViewer.viewer.rbr.isSelected()));\n+        strings.add(\"-rsy=\" + ffOnValue(BytecodeViewer.viewer.rsy.isSelected()));\n+        strings.add(\"-din=\" + ffOnValue(BytecodeViewer.viewer.din.isSelected()));\n+        strings.add(\"-dc4=\" + ffOnValue(BytecodeViewer.viewer.dc4.isSelected()));\n+        strings.add(\"-das=\" + ffOnValue(BytecodeViewer.viewer.das.isSelected()));\n+        strings.add(\"-hes=\" + ffOnValue(BytecodeViewer.viewer.hes.isSelected()));\n+        strings.add(\"-hdc=\" + ffOnValue(BytecodeViewer.viewer.hdc.isSelected()));\n+        strings.add(\"-dgs=\" + ffOnValue(BytecodeViewer.viewer.dgs.isSelected()));\n+        strings.add(\"-ner=\" + ffOnValue(BytecodeViewer.viewer.ner.isSelected()));\n+        strings.add(\"-den=\" + ffOnValue(BytecodeViewer.viewer.den.isSelected()));\n+        strings.add(\"-rgn=\" + ffOnValue(BytecodeViewer.viewer.rgn.isSelected()));\n+        strings.add(\"-bto=\" + ffOnValue(BytecodeViewer.viewer.bto.isSelected()));\n+        strings.add(\"-nns=\" + ffOnValue(BytecodeViewer.viewer.nns.isSelected()));\n+        strings.add(\"-uto=\" + ffOnValue(BytecodeViewer.viewer.uto.isSelected()));\n+        strings.add(\"-udv=\" + ffOnValue(BytecodeViewer.viewer.udv.isSelected()));\n+        strings.add(\"-rer=\" + ffOnValue(BytecodeViewer.viewer.rer.isSelected()));\n+        strings.add(\"-fdi=\" + ffOnValue(BytecodeViewer.viewer.fdi.isSelected()));\n+        strings.add(\"-asc=\" + ffOnValue(BytecodeViewer.viewer.asc.isSelected()));\n+        strings.add(\"-ren=\" + ffOnValue(BytecodeViewer.viewer.ren.isSelected()));\n+        strings.add(className);\n+        if (BytecodeViewer.viewer.din.isSelected())\n+        {\n+            for (File file : innerFiles)\n+                strings.add(file.getAbsolutePath());\n+        }\n+\n+        strings.add(folder);\n+        return strings;\n+    }\n+\n+    private String[] generateMainMethod(String className, String test, String folder)\n     {\n         return new String[]\n         {\n@@ -163,7 +271,7 @@ private String[] generateMainMethod(String className, String folder)\n             \"-fdi=\" + ffOnValue(BytecodeViewer.viewer.fdi.isSelected()),\n             \"-asc=\" + ffOnValue(BytecodeViewer.viewer.asc.isSelected()),\n             \"-ren=\" + ffOnValue(BytecodeViewer.viewer.ren.isSelected()),\n-            className, folder\n+            className, test, folder\n         };\n     }\n ",
      "parent_sha": "164843a824988600e8dd042875685d5a441c825c"
    }
  },
  {
    "oid": "f7e47540dc44dd4fe65973bfef12530921904ce4",
    "message": "Fix Opening Selected Resource",
    "date": "2021-07-27T04:52:20Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/f7e47540dc44dd4fe65973bfef12530921904ce4",
    "details": {
      "sha": "b8821c12a2f39cbd97e7641b7a96cac92268715c",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/gui/resourcelist/ResourceListPane.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/f7e47540dc44dd4fe65973bfef12530921904ce4/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourcelist%2FResourceListPane.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/f7e47540dc44dd4fe65973bfef12530921904ce4/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourcelist%2FResourceListPane.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourcelist%2FResourceListPane.java?ref=f7e47540dc44dd4fe65973bfef12530921904ce4",
      "patch": "@@ -403,21 +403,21 @@ public void mouseReleased(MouseEvent e)\n             tree.expandPath(path);\n         });\n     \n-        /*this.tree.addMouseListener(new MouseAdapter() {\n+        this.tree.addMouseListener(new MouseAdapter() {\n             @Override\n             public void mousePressed(MouseEvent e) {\n                 openPath(tree.getPathForLocation(e.getX(), e.getY()));\n             }\n-        });*/\n+        });\n     \n-        this.tree.addTreeSelectionListener(arg0 -> {\n+        /*this.tree.addTreeSelectionListener(arg0 -> {\n             if (cancel) {\n                 cancel = false;\n                 return;\n             }\n             \n             openPath(arg0.getPath());\n-        });\n+        });*/\n     \n         this.tree.addKeyListener(new KeyListener()\n         {",
      "parent_sha": "265323f33c4bc051f994bb0bcaaa5fb24b0c57a5"
    }
  },
  {
    "oid": "8d947b67480a2360b228386dd9800b1c310463e8",
    "message": "Cleanup FernFlower Exceptions",
    "date": "2024-10-02T20:25:26Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/8d947b67480a2360b228386dd9800b1c310463e8",
    "details": {
      "sha": "213a61ff2c80ee241543bad059dc2b2498aabab4",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/decompilers/impl/FernFlowerDecompiler.java",
      "status": "modified",
      "additions": 4,
      "deletions": 7,
      "changes": 11,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/8d947b67480a2360b228386dd9800b1c310463e8/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FFernFlowerDecompiler.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/8d947b67480a2360b228386dd9800b1c310463e8/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FFernFlowerDecompiler.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FFernFlowerDecompiler.java?ref=8d947b67480a2360b228386dd9800b1c310463e8",
      "patch": "@@ -24,6 +24,7 @@\n import the.bytecode.club.bytecodeviewer.api.ExceptionUI;\n import the.bytecode.club.bytecodeviewer.decompilers.AbstractDecompiler;\n import the.bytecode.club.bytecodeviewer.translation.TranslatedStrings;\n+import the.bytecode.club.bytecodeviewer.util.ExceptionUtils;\n import the.bytecode.club.bytecodeviewer.util.TempFile;\n \n import java.io.*;\n@@ -73,7 +74,7 @@ public void decompileToZip(String sourceJar, String zipName)\n     public String decompileClassNode(ClassNode cn, byte[] bytes)\n     {\n         TempFile tempFile = null;\n-        String exception = \"This decompiler didn't throw an exception - this is probably a BCV logical bug\";\n+        String exception;\n \n         try\n         {\n@@ -129,15 +130,11 @@ public String decompileClassNode(ClassNode cn, byte[] bytes)\n             if (tempOutputJavaFile.exists())\n                 return DiskReader.loadAsString(tempOutputJavaFile.getAbsolutePath());\n             else\n-                exception = \"BCV Error: \" + tempOutputJavaFile.getAbsolutePath() + \" does not exist.\";\n+                exception = FERNFLOWER + \" \" + ERROR + \"! \" + tempOutputJavaFile.getAbsolutePath() + \" does not exist.\";\n         }\n         catch (Throwable e)\n         {\n-            StringWriter exceptionWriter = new StringWriter();\n-            e.printStackTrace(new PrintWriter(exceptionWriter));\n-            e.printStackTrace();\n-\n-            exception += NL + NL + exceptionWriter;\n+            exception = NL + NL + ExceptionUtils.exceptionToString(e);\n         }\n         finally\n         {",
      "parent_sha": "ab2ce702d9c3c95941bbe7ae11cb86849a808aa9"
    }
  },
  {
    "oid": "37343ec4e08dd59939cd77eaaab2592350f61c00",
    "message": "Safer way to set font size",
    "date": "2021-07-21T10:33:50Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/37343ec4e08dd59939cd77eaaab2592350f61c00",
    "details": {
      "sha": "7c8a8aa9922fd0c7190f361dcd588e03ad2d6fb3",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/gui/hexviewer/JHexEditor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/37343ec4e08dd59939cd77eaaab2592350f61c00/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fhexviewer%2FJHexEditor.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/37343ec4e08dd59939cd77eaaab2592350f61c00/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fhexviewer%2FJHexEditor.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fhexviewer%2FJHexEditor.java?ref=37343ec4e08dd59939cd77eaaab2592350f61c00",
      "patch": "@@ -28,7 +28,7 @@ public class JHexEditor extends JPanel implements FocusListener, AdjustmentListe\n     \n     byte[] buff;\n     public int cursor;\n-    protected static Font font = new Font(\"Monospaced\", Font.PLAIN, 12);\n+    protected static Font font = new Font(Font.MONOSPACED, Font.PLAIN, 12);\n     protected int border = 2;\n     public boolean DEBUG = false;\n     private final JScrollBar sb;",
      "parent_sha": "a291fec94186c761c1508c92ebabd2c338b90941"
    }
  },
  {
    "oid": "a291fec94186c761c1508c92ebabd2c338b90941",
    "message": "Fix newer JDKs",
    "date": "2021-07-21T10:26:32Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/a291fec94186c761c1508c92ebabd2c338b90941",
    "details": {
      "sha": "a738a2247c07f4e892f4c9f6c040f7eaeaad6036",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/gui/components/BetterJOptionPane.java",
      "status": "modified",
      "additions": 18,
      "deletions": 23,
      "changes": 41,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/a291fec94186c761c1508c92ebabd2c338b90941/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fcomponents%2FBetterJOptionPane.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/a291fec94186c761c1508c92ebabd2c338b90941/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fcomponents%2FBetterJOptionPane.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fcomponents%2FBetterJOptionPane.java?ref=a291fec94186c761c1508c92ebabd2c338b90941",
      "patch": "@@ -151,8 +151,8 @@ public static void showJPanelDialogue(Component parentComponent, JScrollPane pan\n \t\t//create a new option pane with a empty text and just 'ok'\n \t\tJOptionPane pane = new JOptionPane(\"\");\n \t\tpane.add(panel, 0);\n-\t\t\n-\t\tJDialog dialog = createNewJDialogue(parentComponent, pane, panel.getName(), 0, (d)->\n+\n+\t\tJDialog dialog = createNewJDialogue(parentComponent, pane, panel.getName(), ERROR_MESSAGE, (d)->\n \t\t{\n \t\t\tint newHeight = Math.min(minimumHeight, d.getHeight());\n \t\t\td.setMinimumSize(new Dimension(d.getWidth(), newHeight));\n@@ -165,28 +165,23 @@ public static void showJPanelDialogue(Component parentComponent, JScrollPane pan\n \t\n \tprivate static JDialog createNewJDialogue(Component parentComponent, JOptionPane pane, String title, int style, OnCreate onCreate)\n \t{\n-\t\tJDialog dialog = null;\n-\t\t\n-\t\t//reflection to cheat our way around the\n-\t\t// private createDialog(Component parentComponent, String title, int style)\n-\t\ttry\n-\t\t{\n-\t\t\tMethod createDialog = pane.getClass().getDeclaredMethod(\"createDialog\", Component.class, String.class, int.class);\n-\t\t\tcreateDialog.setAccessible(true);\n-\t\t\tdialog = (JDialog) createDialog.invoke(pane, parentComponent, title, style);\n-\t\t\t\n-\t\t\t//check if the dialogue is in a poor location, attempt to correct\n-\t\t\tif(dialog.getLocation().getY() == 0 || dialog.getLocation().getY() == 1)\n-\t\t\t\tdialog.setLocationRelativeTo(null); //TODO check if BytecodeViewer.viewer is better on multi monitor for this edgecase\n-\t\t\telse\n-\t\t\t\tdialog.setLocationRelativeTo(BytecodeViewer.viewer);\n-\t\t\t\n-\t\t\tonCreate.onCreate(dialog);\n-\t\t}\n-\t\tcatch(Exception e)\n-\t\t{\n-\t\t\te.printStackTrace();\n+\t\tJDialog dialog = pane.createDialog(parentComponent, title);\n+\t\tif (JDialog.isDefaultLookAndFeelDecorated()) {\n+\t\t\tboolean supportsWindowDecorations =\n+\t\t\t\t\tUIManager.getLookAndFeel().getSupportsWindowDecorations();\n+\t\t\tif (supportsWindowDecorations) {\n+\t\t\t\tdialog.setUndecorated(true);\n+\t\t\t\tpane.getRootPane().setWindowDecorationStyle(style);\n+\t\t\t}\n \t\t}\n+\n+\t\t//check if the dialogue is in a poor location, attempt to correct\n+\t\tif (dialog.getLocation().getY() == 0 || dialog.getLocation().getY() == 1)\n+\t\t\tdialog.setLocationRelativeTo(null); //TODO check if BytecodeViewer.viewer is better on multi monitor for this edgecase\n+\t\telse\n+\t\t\tdialog.setLocationRelativeTo(BytecodeViewer.viewer);\n+\n+\t\tonCreate.onCreate(dialog);\n \t\t\n \t\tdialog.show();\n \t\tdialog.dispose();",
      "parent_sha": "0653e8583e2081384068721e70ebd991b24b2fea"
    }
  },
  {
    "oid": "21c6f1ef47418262b2f8311248173a7d0b77e34c",
    "message": "print line numbers",
    "date": "2022-03-13T13:25:15Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/21c6f1ef47418262b2f8311248173a7d0b77e34c",
    "details": {
      "sha": "7fbc44b884db1aac509f95570d07ae6637f5bde3",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/decompilers/bytecode/InstructionPrinter.java",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/21c6f1ef47418262b2f8311248173a7d0b77e34c/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fbytecode%2FInstructionPrinter.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/21c6f1ef47418262b2f8311248173a7d0b77e34c/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fbytecode%2FInstructionPrinter.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fbytecode%2FInstructionPrinter.java?ref=21c6f1ef47418262b2f8311248173a7d0b77e34c",
      "patch": "@@ -117,7 +117,7 @@ public List<String> createPrint() {\n             info.add(\"}\");\n         return info;\n     }\n-    \n+\n     public String printInstruction(AbstractInsnNode ain)\n     {\n         String line = \"\";\n@@ -136,15 +136,15 @@ public String printInstruction(AbstractInsnNode ain)\n         } else if (ain instanceof JumpInsnNode) {\n             line = printJumpInsnNode((JumpInsnNode) ain);\n         } else if (ain instanceof LineNumberNode) {\n-            line = printLineNumberNode();\n+            line = printLineNumberNode((LineNumberNode) ain);\n         } else if (ain instanceof LabelNode) {\n             if (firstLabel\n                     && BytecodeViewer.viewer.appendBracketsToLabels\n                     .isSelected())\n                 info.add(\"}\");\n-        \n+\n             line = printLabelnode((LabelNode) ain);\n-        \n+\n             if (BytecodeViewer.viewer.appendBracketsToLabels.isSelected()) {\n                 if (!firstLabel)\n                     firstLabel = true;\n@@ -168,7 +168,7 @@ public String printInstruction(AbstractInsnNode ain)\n             line += \"UNADDED OPCODE: \" + nameOpcode(ain.getOpcode()) + \" \"\n                     + ain;\n         }\n-        \n+\n         return line;\n     }\n \n@@ -245,8 +245,8 @@ protected String printJumpInsnNode(JumpInsnNode jin) {\n                 + resolveLabel(jin.label);\n     }\n \n-    protected String printLineNumberNode() {\n-        return \"\";\n+    protected String printLineNumberNode(LineNumberNode lnn) {\n+        return \"// line \" + lnn.line;\n     }\n \n     protected String printLabelnode(LabelNode label) {",
      "parent_sha": "e8bf1f5cd7ae4fdc73f6b7b0a7e8d6d97640e7d8"
    }
  },
  {
    "oid": "566527e4a137e9e5f53d4f473dc3fca4e2e74e14",
    "message": "Fix file drop that I accidentally broke...",
    "date": "2021-08-01T10:09:31Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/566527e4a137e9e5f53d4f473dc3fca4e2e74e14",
    "details": {
      "sha": "2b74a9040565b289670366f8540f16dc7f9f20b3",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/util/FileDrop.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/566527e4a137e9e5f53d4f473dc3fca4e2e74e14/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Futil%2FFileDrop.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/566527e4a137e9e5f53d4f473dc3fca4e2e74e14/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Futil%2FFileDrop.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Futil%2FFileDrop.java?ref=566527e4a137e9e5f53d4f473dc3fca4e2e74e14",
      "patch": "@@ -444,10 +444,10 @@ private static boolean supportsDnD() { // Static Boolean\n             boolean support;\n             try {\n                 final Class arbitraryDndClass = Class\n-                        .forName(\"DnDConstants\");\n+                        .forName(\"java.awt.dnd.DnDConstants\");\n                 support = true;\n             } // end try\n-            catch (final Exception e) {\n+            catch (final Throwable t) {\n                 support = false;\n             } // end catch\n             supportsDnD = support;",
      "parent_sha": "da375b3a3c864ff3906d83512b2218fb44b8e04c"
    }
  },
  {
    "oid": "784eb960b8619865b4b4c6617c0652884754af52",
    "message": "Fixed Some Stuff",
    "date": "2015-07-03T06:28:03Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/784eb960b8619865b4b4c6617c0652884754af52",
    "details": {
      "sha": "5224adb5d727e7635a41fa7909ceb27fa475aecf",
      "filename": "src/the/bytecode/club/bytecodeviewer/gui/ClassViewer.java",
      "status": "modified",
      "additions": 27,
      "deletions": 27,
      "changes": 54,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/784eb960b8619865b4b4c6617c0652884754af52/src%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2FClassViewer.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/784eb960b8619865b4b4c6617c0652884754af52/src%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2FClassViewer.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2FClassViewer.java?ref=784eb960b8619865b4b4c6617c0652884754af52",
      "patch": "@@ -652,7 +652,7 @@ public void keyPressed(KeyEvent e) {\n \t\t\t\t\t\t\t@Override public void keyTyped(KeyEvent arg0) { }  \n \t\t\t\t\t\t});\n \t\t\t\t\t\tpanel1.add(scrollPane);\n-\t\t\t\t\t\tpanelArea.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n+\t\t\t\t\t\tpanelArea.setFont(new Font(Font.MONOSPACED, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n \t\t\t\t\t\t\n \t\t\t\t\t\tjava1 = panelArea;\n \t\t\t\t\t}\n@@ -679,7 +679,7 @@ public void keyPressed(KeyEvent e) {\n \t\t\t\t\t\t\t@Override public void keyTyped(KeyEvent arg0) { }  \n \t\t\t\t\t\t});\n \t\t\t\t\t\tpanel1.add(scrollPane);\n-\t\t\t\t\t\tpanelArea.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n+\t\t\t\t\t\tpanelArea.setFont(new Font(Font.MONOSPACED, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n \t\t\t\t\t\t\n \t\t\t\t\t\tjava1 = panelArea;\n \t\t\t\t\t}\n@@ -707,7 +707,7 @@ public void keyPressed(KeyEvent e) {\n \t\t\t\t\t\t\t@Override public void keyTyped(KeyEvent arg0) { }  \n \t\t\t\t\t\t});\n \t\t\t\t\t\tpanel1.add(scrollPane);\n-\t\t\t\t\t\tpanelArea.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n+\t\t\t\t\t\tpanelArea.setFont(new Font(Font.MONOSPACED, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n \t\t\t\t\t\t\n \t\t\t\t\t}\n \n@@ -716,7 +716,7 @@ public void keyPressed(KeyEvent e) {\n \t\t\t\t\t\tcn.accept(cw);\n \t\t\t\t\t\tJHexEditor hex = new JHexEditor(cw.toByteArray());\n \t\t\t\t\t\tpanel1.add(hex);\n-\t\t\t\t\t\thex.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n+\t\t\t\t\t\thex.setFont(new Font(Font.MONOSPACED, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n \t\t\t\t\t}\n \n \t\t\t\t\tif (pane1 == 6) {// bytecode\n@@ -743,7 +743,7 @@ public void keyPressed(KeyEvent e) {\n \t\t\t\t\t\t\t@Override public void keyTyped(KeyEvent arg0) { }  \n \t\t\t\t\t\t});\n \t\t\t\t\t\tpanel1.add(scrollPane);\n-\t\t\t\t\t\tpanelArea.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n+\t\t\t\t\t\tpanelArea.setFont(new Font(Font.MONOSPACED, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n \t\t\t\t\t\t\n \t\t\t\t\t}\n \n@@ -770,7 +770,7 @@ public void keyPressed(KeyEvent e) {\n \t\t\t\t\t\t\t@Override public void keyTyped(KeyEvent arg0) { }  \n \t\t\t\t\t\t});\n \t\t\t\t\t\tpanel1.add(scrollPane);\n-\t\t\t\t\t\tpanelArea.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n+\t\t\t\t\t\tpanelArea.setFont(new Font(Font.MONOSPACED, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n \t\t\t\t\t\t\n \t\t\t\t\t\tjava1 = panelArea;\n \t\t\t\t\t}\n@@ -801,7 +801,7 @@ public void keyPressed(KeyEvent e) {\n \t\t\t\t\t\t\t@Override public void keyTyped(KeyEvent arg0) { }  \n \t\t\t\t\t\t});\n \t\t\t\t\t\tpanel1.add(scrollPane);\n-\t\t\t\t\t\tpanelArea.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n+\t\t\t\t\t\tpanelArea.setFont(new Font(Font.MONOSPACED, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n \t\t\t\t\t\t\n \t\t\t\t\t}\n \n@@ -828,7 +828,7 @@ public void keyPressed(KeyEvent e) {\n \t\t\t\t\t\t\t@Override public void keyTyped(KeyEvent arg0) { }  \n \t\t\t\t\t\t});\n \t\t\t\t\t\tpanel1.add(scrollPane);\n-\t\t\t\t\t\tpanelArea.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n+\t\t\t\t\t\tpanelArea.setFont(new Font(Font.MONOSPACED, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n \t\t\t\t\t\t\n \t\t\t\t\t\tjava1 = panelArea;\n \t\t\t\t\t}\n@@ -870,7 +870,7 @@ public void keyPressed(KeyEvent e) {\n \t\t\t\t\t\t\t@Override public void keyTyped(KeyEvent arg0) { }  \n \t\t\t\t\t\t});\n \t\t\t\t\t\tpanel2.add(scrollPane);\n-\t\t\t\t\t\tpanelArea.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n+\t\t\t\t\t\tpanelArea.setFont(new Font(Font.MONOSPACED, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n \t\t\t\t\t\t\n \t\t\t\t\t\tjava2 = panelArea;\n \t\t\t\t\t}\n@@ -897,7 +897,7 @@ public void keyPressed(KeyEvent e) {\n \t\t\t\t\t\t\t@Override public void keyTyped(KeyEvent arg0) { }  \n \t\t\t\t\t\t});\n \t\t\t\t\t\tpanel2.add(scrollPane);\n-\t\t\t\t\t\tpanelArea.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n+\t\t\t\t\t\tpanelArea.setFont(new Font(Font.MONOSPACED, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n \t\t\t\t\t\t\n \t\t\t\t\t\tjava2 = panelArea;\n \t\t\t\t\t}\n@@ -924,7 +924,7 @@ public void keyPressed(KeyEvent e) {\n \t\t\t\t\t\t\t@Override public void keyTyped(KeyEvent arg0) { }  \n \t\t\t\t\t\t});\n \t\t\t\t\t\tpanel2.add(scrollPane);\n-\t\t\t\t\t\tpanelArea.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n+\t\t\t\t\t\tpanelArea.setFont(new Font(Font.MONOSPACED, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n \t\t\t\t\t\t\n \t\t\t\t\t\tjava2 = panelArea;\n \t\t\t\t\t}\n@@ -950,7 +950,7 @@ public void keyPressed(KeyEvent e) {\n \t\t\t\t\t\t\t@Override public void keyTyped(KeyEvent arg0) { }  \n \t\t\t\t\t\t});\n \t\t\t\t\t\tpanel2.add(scrollPane);\n-\t\t\t\t\t\tpanelArea.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n+\t\t\t\t\t\tpanelArea.setFont(new Font(Font.MONOSPACED, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n \t\t\t\t\t\t\n \t\t\t\t\t}\n \n@@ -959,7 +959,7 @@ public void keyPressed(KeyEvent e) {\n \t\t\t\t\t\tcn.accept(cw);\n \t\t\t\t\t\tJHexEditor hex = new JHexEditor(cw.toByteArray());\n \t\t\t\t\t\tpanel2.add(hex);\n-\t\t\t\t\t\thex.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n+\t\t\t\t\t\thex.setFont(new Font(Font.MONOSPACED, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n \t\t\t\t\t\t\n \t\t\t\t\t}\n \n@@ -985,7 +985,7 @@ public void keyPressed(KeyEvent e) {\n \t\t\t\t\t\t\t@Override public void keyTyped(KeyEvent arg0) { }  \n \t\t\t\t\t\t});\n \t\t\t\t\t\tpanel2.add(scrollPane);\n-\t\t\t\t\t\tpanelArea.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n+\t\t\t\t\t\tpanelArea.setFont(new Font(Font.MONOSPACED, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n \t\t\t\t\t\t\n \t\t\t\t\t}\n \n@@ -1012,7 +1012,7 @@ public void keyPressed(KeyEvent e) {\n \t\t\t\t\t\t\t@Override public void keyTyped(KeyEvent arg0) { }  \n \t\t\t\t\t\t});\n \t\t\t\t\t\tpanel2.add(scrollPane);\n-\t\t\t\t\t\tpanelArea.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n+\t\t\t\t\t\tpanelArea.setFont(new Font(Font.MONOSPACED, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n \t\t\t\t\t\t\n \t\t\t\t\t\tjava2 = panelArea;\n \t\t\t\t\t}\n@@ -1041,7 +1041,7 @@ public void keyPressed(KeyEvent e) {\n \t\t\t\t\t\t\t@Override public void keyTyped(KeyEvent arg0) { }  \n \t\t\t\t\t\t});\n \t\t\t\t\t\tpanel2.add(scrollPane);\n-\t\t\t\t\t\tpanelArea.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n+\t\t\t\t\t\tpanelArea.setFont(new Font(Font.MONOSPACED, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n \t\t\t\t\t\t\n \t\t\t\t\t}\n \n@@ -1068,7 +1068,7 @@ public void keyPressed(KeyEvent e) {\n \t\t\t\t\t\t\t@Override public void keyTyped(KeyEvent arg0) { }  \n \t\t\t\t\t\t});\n \t\t\t\t\t\tpanel2.add(scrollPane);\n-\t\t\t\t\t\tpanelArea.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n+\t\t\t\t\t\tpanelArea.setFont(new Font(Font.MONOSPACED, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n \t\t\t\t\t\t\n \t\t\t\t\t\tjava2 = panelArea;\n \t\t\t\t\t}\n@@ -1111,7 +1111,7 @@ public void keyPressed(KeyEvent e) {\n \t\t\t\t\t\t\t@Override public void keyTyped(KeyEvent arg0) { }  \n \t\t\t\t\t\t});\n \t\t\t\t\t\tpanel3.add(scrollPane);\n-\t\t\t\t\t\tpanelArea.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n+\t\t\t\t\t\tpanelArea.setFont(new Font(Font.MONOSPACED, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n \t\t\t\t\t\t\n \t\t\t\t\t\tjava3 = panelArea;\n \t\t\t\t\t}\n@@ -1138,7 +1138,7 @@ public void keyPressed(KeyEvent e) {\n \t\t\t\t\t\t\t@Override public void keyTyped(KeyEvent arg0) { }  \n \t\t\t\t\t\t});\n \t\t\t\t\t\tpanel3.add(scrollPane);\n-\t\t\t\t\t\tpanelArea.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n+\t\t\t\t\t\tpanelArea.setFont(new Font(Font.MONOSPACED, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n \t\t\t\t\t\t\n \t\t\t\t\t\tjava3 = panelArea;\n \t\t\t\t\t}\n@@ -1165,7 +1165,7 @@ public void keyPressed(KeyEvent e) {\n \t\t\t\t\t\t\t@Override public void keyTyped(KeyEvent arg0) { }  \n \t\t\t\t\t\t});\n \t\t\t\t\t\tpanel3.add(scrollPane);\n-\t\t\t\t\t\tpanelArea.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n+\t\t\t\t\t\tpanelArea.setFont(new Font(Font.MONOSPACED, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n \t\t\t\t\t\t\n \t\t\t\t\t\tjava3 = panelArea;\n \t\t\t\t\t}\n@@ -1191,7 +1191,7 @@ public void keyPressed(KeyEvent e) {\n \t\t\t\t\t\t\t@Override public void keyTyped(KeyEvent arg0) { }  \n \t\t\t\t\t\t});\n \t\t\t\t\t\tpanel3.add(scrollPane);\n-\t\t\t\t\t\tpanelArea.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n+\t\t\t\t\t\tpanelArea.setFont(new Font(Font.MONOSPACED, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n \t\t\t\t\t\t\n \t\t\t\t\t}\n \n@@ -1200,7 +1200,7 @@ public void keyPressed(KeyEvent e) {\n \t\t\t\t\t\tcn.accept(cw);\n \t\t\t\t\t\tJHexEditor hex = new JHexEditor(cw.toByteArray());\n \t\t\t\t\t\tpanel3.add(hex);\n-\t\t\t\t\t\thex.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n+\t\t\t\t\t\thex.setFont(new Font(Font.MONOSPACED, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n \t\t\t\t\t\t\n \t\t\t\t\t}\n \n@@ -1226,7 +1226,7 @@ public void keyPressed(KeyEvent e) {\n \t\t\t\t\t\t\t@Override public void keyTyped(KeyEvent arg0) { }  \n \t\t\t\t\t\t});\n \t\t\t\t\t\tpanel3.add(scrollPane);\n-\t\t\t\t\t\tpanelArea.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n+\t\t\t\t\t\tpanelArea.setFont(new Font(Font.MONOSPACED, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n \t\t\t\t\t\t\n \t\t\t\t\t}\n \n@@ -1254,7 +1254,7 @@ public void keyPressed(KeyEvent e) {\n \t\t\t\t\t\t});\n \t\t\t\t\t\tpanel3.add(scrollPane);\n \t\t\t\t\t\tjava3 = panelArea;\n-\t\t\t\t\t\tpanelArea.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n+\t\t\t\t\t\tpanelArea.setFont(new Font(Font.MONOSPACED, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n \t\t\t\t\t\t\n \t\t\t\t\t}\n \t\t\t\t\t\n@@ -1282,7 +1282,7 @@ public void keyPressed(KeyEvent e) {\n \t\t\t\t\t\t\t@Override public void keyTyped(KeyEvent arg0) { }  \n \t\t\t\t\t\t});\n \t\t\t\t\t\tpanel3.add(scrollPane);\n-\t\t\t\t\t\tpanelArea.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n+\t\t\t\t\t\tpanelArea.setFont(new Font(Font.MONOSPACED, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n \t\t\t\t\t\t\n \t\t\t\t\t}\n \n@@ -1310,11 +1310,11 @@ public void keyPressed(KeyEvent e) {\n \t\t\t\t\t\t});\n \t\t\t\t\t\tpanel3.add(scrollPane);\n \t\t\t\t\t\tjava3 = panelArea;\n-\t\t\t\t\t\tpanelArea.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n+\t\t\t\t\t\tpanelArea.setFont(new Font(Font.MONOSPACED, Font.PLAIN, (int)BytecodeViewer.viewer.fontSpinner.getValue()));\n \t\t\t\t\t\t\n \t\t\t\t\t}\n \t\t\t\t} catch(Exception e) {\n-\t\t\t\t\tnew the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);\n+\t\t\t\t\t//new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);\n \t\t\t\t} finally {\n \t\t\t\t\tresetDivider();\n \t\t\t\t\tBytecodeViewer.viewer.setIcon(false);",
      "parent_sha": "e5b507656cdfe09b5538eed1c86de18deaa22817"
    }
  },
  {
    "oid": "7fa79786917363e7401e16f32b1e51de6fa7de26",
    "message": "JavaP Disassembler Improvements\n\nUses the new Temp Files API. Better failing. Refactoring.",
    "date": "2024-10-02T18:38:13Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/7fa79786917363e7401e16f32b1e51de6fa7de26",
    "details": {
      "sha": "d19ee12d368a06d406cfe313467ee554f0d2c5ad",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/decompilers/impl/JavapDisassembler.java",
      "status": "modified",
      "additions": 43,
      "deletions": 26,
      "changes": 69,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/7fa79786917363e7401e16f32b1e51de6fa7de26/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FJavapDisassembler.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/7fa79786917363e7401e16f32b1e51de6fa7de26/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FJavapDisassembler.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FJavapDisassembler.java?ref=7fa79786917363e7401e16f32b1e51de6fa7de26",
      "patch": "@@ -22,24 +22,27 @@\n import org.objectweb.asm.tree.ClassNode;\n import the.bytecode.club.bytecodeviewer.BytecodeViewer;\n import the.bytecode.club.bytecodeviewer.Configuration;\n-import the.bytecode.club.bytecodeviewer.Constants;\n+import the.bytecode.club.bytecodeviewer.api.ExceptionUI;\n import the.bytecode.club.bytecodeviewer.decompilers.AbstractDecompiler;\n import the.bytecode.club.bytecodeviewer.gui.components.JFrameConsolePrintStream;\n import the.bytecode.club.bytecodeviewer.resources.ExternalResources;\n import the.bytecode.club.bytecodeviewer.translation.TranslatedStrings;\n-import the.bytecode.club.bytecodeviewer.util.MiscUtils;\n+import the.bytecode.club.bytecodeviewer.util.TempFile;\n \n import java.io.File;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.lang.reflect.InvocationTargetException;\n import java.lang.reflect.Method;\n import java.net.URL;\n import java.net.URLClassLoader;\n \n-import static the.bytecode.club.bytecodeviewer.Constants.FS;\n-import static the.bytecode.club.bytecodeviewer.api.ExceptionUI.SEND_STACKTRACE_TO;\n+import static the.bytecode.club.bytecodeviewer.Constants.NL;\n+import static the.bytecode.club.bytecodeviewer.translation.TranslatedStrings.ERROR;\n \n /**\n  * Javap disassembler\n- * <p>\n+ *\n  * https://github.com/Konloch/bytecode-viewer/issues/93\n  *\n  * @author Konloch\n@@ -59,21 +62,23 @@ public String decompileClassNode(ClassNode cn, byte[] bytes)\n         if (!ExternalResources.getSingleton().hasJavaToolsSet())\n             return \"Set Java Tools Path!\";\n \n-        return synchronizedDecompilation(cn, bytes);\n+        return disassembleJavaP(cn, bytes);\n     }\n \n-    private synchronized String synchronizedDecompilation(ClassNode cn, byte[] b)\n+    private synchronized String disassembleJavaP(ClassNode cn, byte[] b)\n     {\n-        final File tempDirectory = new File(Constants.TEMP_DIRECTORY + FS + MiscUtils.randomString(32) + FS);\n-        final File tempClass = new File(Constants.TEMP_DIRECTORY + FS + \"temp\" + MiscUtils.randomString(32) + \".class\");\n-\n-        tempDirectory.mkdir();\n-\n-        DiskWriter.replaceFileBytes(tempClass.getAbsolutePath(), b, false);\n+        TempFile tempFile = null;\n+        String exception = \"This decompiler didn't throw an exception - this is probably a BCV logical bug\";\n \n         JFrameConsolePrintStream sysOutBuffer = null;\n+\n         try\n         {\n+            tempFile = TempFile.createTemporaryFile(true, \".class\");\n+            File tempClassFile = tempFile.getFile();\n+\n+            DiskWriter.replaceFileBytes(tempClassFile.getAbsolutePath(), b, false);\n+\n             //load java tools into a temporary classloader\n             URLClassLoader child = new URLClassLoader(new URL[]{new File(Configuration.javaTools).toURI().toURL()}, this.getClass().getClassLoader());\n \n@@ -88,33 +93,45 @@ private synchronized String synchronizedDecompilation(ClassNode cn, byte[] b)\n             BytecodeViewer.sm.silenceExec(true);\n \n             //invoke Javap\n-            main.invoke(null, (Object) new String[]{\"-p\", //Shows all classes and members\n-                \"-c\", //Prints out disassembled code\n-                //\"-l\", //Prints out line and local variable tables\n-                \"-constants\", //Shows static final constants\n-                tempClass.getAbsolutePath()});\n+            try\n+            {\n+                main.invoke(null, (Object) new String[]{\"-p\", //Shows all classes and members\n+                    \"-c\", //Prints out disassembled code\n+                    //\"-l\", //Prints out line and local variable tables\n+                    \"-constants\", //Shows static final constants\n+                    tempClassFile.getAbsolutePath()});\n+            }\n+            catch (InvocationTargetException e)\n+            {\n+                //expected warning behaviour on modern JDKs (17+)\n+            }\n+\n+            //return output\n+            sysOutBuffer.finished();\n+            return sysOutBuffer.getTextAreaOutputStreamOut().getBuffer().toString();\n         }\n         catch (IllegalAccessException e)\n         {\n             return TranslatedStrings.ILLEGAL_ACCESS_ERROR.toString();\n         }\n-        catch (Exception e)\n+        catch (Throwable e)\n         {\n+            StringWriter exceptionWriter = new StringWriter();\n+            e.printStackTrace(new PrintWriter(exceptionWriter));\n             e.printStackTrace();\n+\n+            exception += NL + NL + exceptionWriter;\n         }\n         finally\n         {\n             BytecodeViewer.sm.silenceExec(false);\n-            tempClass.delete();\n-        }\n \n-        if (sysOutBuffer != null)\n-        {\n-            sysOutBuffer.finished();\n-            return sysOutBuffer.getTextAreaOutputStreamOut().getBuffer().toString();\n+            if(tempFile != null)\n+                tempFile.delete();\n         }\n \n-        return SEND_STACKTRACE_TO;\n+        return \"JavaP \" + ERROR + \"! \" + ExceptionUI.SEND_STACKTRACE_TO + NL + NL\n+            + TranslatedStrings.SUGGESTED_FIX_DECOMPILER_ERROR + NL + NL + exception;\n     }\n \n     @Override",
      "parent_sha": "3f458022578897832daeedc383da324d6e8552bd"
    }
  },
  {
    "oid": "21f8bf8382fbfab133aaba0f9497d348539bbbea",
    "message": "Cleaned up the settings file\n\nWhole thing needs to be moved to GSON",
    "date": "2021-06-21T10:04:24Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/21f8bf8382fbfab133aaba0f9497d348539bbbea",
    "details": {
      "sha": "056d7c6f1d5b58f18b65c2b1fb8b2507267aef3c",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/Settings.java",
      "status": "modified",
      "additions": 40,
      "deletions": 28,
      "changes": 68,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/21f8bf8382fbfab133aaba0f9497d348539bbbea/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FSettings.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/21f8bf8382fbfab133aaba0f9497d348539bbbea/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FSettings.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FSettings.java?ref=21f8bf8382fbfab133aaba0f9497d348539bbbea",
      "patch": "@@ -34,7 +34,8 @@ public class Settings {\n \n     public static void saveSettings() {\n         try {\n-            DiskWriter.replaceFile(settingsName, \"BCV: \" + VERSION, false);\n+            DiskWriter.replaceFile(settingsName,\n+                    \"BCV: \" + VERSION, false);\n             DiskWriter.writeNewLine(settingsName,\n                     String.valueOf(BytecodeViewer.viewer.rbr.isSelected()), false);\n             DiskWriter.writeNewLine(settingsName,\n@@ -191,9 +192,11 @@ public static void saveSettings() {\n                     String.valueOf(BytecodeViewer.viewer.chckbxmntmAppendBrackets.isSelected()), false);\n             DiskWriter.writeNewLine(settingsName,\n                     String.valueOf(BytecodeViewer.viewer.debugHelpers.isSelected()), false);\n-            DiskWriter.writeNewLine(settingsName, \"deprecated\", false);\n+            DiskWriter.writeNewLine(settingsName,\n+                    \"deprecated\", false);\n             DiskWriter.writeNewLine(settingsName,\n                     String.valueOf(BytecodeViewer.viewer.chckbxmntmNewCheckItem_12.isSelected()), false);\n+            \n             if (BytecodeViewer.viewer.panelGroup1.isSelected(BytecodeViewer.viewer.panel1None.getModel()))\n                 DiskWriter.writeNewLine(settingsName, \"0\", false);\n             else if (BytecodeViewer.viewer.panelGroup1.isSelected(BytecodeViewer.viewer.panel1Proc.getModel()))\n@@ -268,16 +271,21 @@ else if (BytecodeViewer.viewer.panelGroup3.isSelected(BytecodeViewer.viewer.jadx\n                 DiskWriter.writeNewLine(settingsName, \"10\", false);\n             else if (BytecodeViewer.viewer.panelGroup3.isSelected(BytecodeViewer.viewer.asmText3.getModel()))\n                 DiskWriter.writeNewLine(settingsName, \"11\", false);\n-\n+            \n             DiskWriter.writeNewLine(settingsName,\n                     String.valueOf(BytecodeViewer.viewer.refreshOnChange.isSelected()), false);\n-            DiskWriter.writeNewLine(settingsName, String.valueOf(BytecodeViewer.viewer.isMaximized),\n-                    false);\n-            DiskWriter.writeNewLine(settingsName, \"deprecated\", false);\n-            DiskWriter.writeNewLine(settingsName, \"deprecated\", false);\n-            DiskWriter.writeNewLine(settingsName, BytecodeViewer.lastDirectory, false);\n-            DiskWriter.writeNewLine(settingsName, BytecodeViewer.python, false);\n-            DiskWriter.writeNewLine(settingsName, BytecodeViewer.rt, false);\n+            DiskWriter.writeNewLine(settingsName,\n+                    String.valueOf(BytecodeViewer.viewer.isMaximized), false);\n+            DiskWriter.writeNewLine(settingsName,\n+                    \"deprecated\", false);\n+            DiskWriter.writeNewLine(settingsName,\n+                    \"deprecated\", false);\n+            DiskWriter.writeNewLine(settingsName,\n+                    BytecodeViewer.lastDirectory, false);\n+            DiskWriter.writeNewLine(settingsName,\n+                    BytecodeViewer.python, false);\n+            DiskWriter.writeNewLine(settingsName,\n+                    BytecodeViewer.rt, false);\n             DiskWriter.writeNewLine(settingsName,\n                     String.valueOf(BytecodeViewer.viewer.panel1Proc_E.isSelected()), false);\n             DiskWriter.writeNewLine(settingsName,\n@@ -310,8 +318,10 @@ else if (BytecodeViewer.viewer.panelGroup3.isSelected(BytecodeViewer.viewer.asmT\n                     String.valueOf(BytecodeViewer.viewer.panel3Smali_E.isSelected()), false);\n             DiskWriter.writeNewLine(settingsName,\n                     String.valueOf(BytecodeViewer.viewer.decodeAPKResources.isSelected()), false);\n-            DiskWriter.writeNewLine(settingsName, BytecodeViewer.library, false);\n-            DiskWriter.writeNewLine(settingsName, String.valueOf(BytecodeViewer.pingback), false);\n+            DiskWriter.writeNewLine(settingsName,\n+                    BytecodeViewer.library, false);\n+            DiskWriter.writeNewLine(settingsName,\n+                    String.valueOf(BytecodeViewer.pingback), false);\n             DiskWriter.writeNewLine(settingsName,\n                     String.valueOf(BytecodeViewer.viewer.panel1JDGUI_E.isSelected()), false);\n             DiskWriter.writeNewLine(settingsName,\n@@ -322,18 +332,24 @@ else if (BytecodeViewer.viewer.panelGroup3.isSelected(BytecodeViewer.viewer.asmT\n                     String.valueOf(BytecodeViewer.viewer.fontSpinner.getValue()), false);\n             DiskWriter.writeNewLine(settingsName,\n                     String.valueOf(BytecodeViewer.deleteForeignLibraries), false);\n+            \n             if (BytecodeViewer.viewer.apkConversionGroup.isSelected(BytecodeViewer.viewer.apkConversionDex.getModel()))\n                 DiskWriter.writeNewLine(settingsName, \"0\", false);\n             else if (BytecodeViewer.viewer.apkConversionGroup.isSelected(BytecodeViewer.viewer.apkConversionEnjarify.getModel()))\n                 DiskWriter.writeNewLine(settingsName, \"1\", false);\n-            DiskWriter.writeNewLine(settingsName, BytecodeViewer.python3, false);\n-            DiskWriter.writeNewLine(settingsName, BytecodeViewer.javac, false);\n-            DiskWriter.writeNewLine(settingsName, BytecodeViewer.java, false);\n+            \n+            DiskWriter.writeNewLine(settingsName,\n+                    BytecodeViewer.python3, false);\n+            DiskWriter.writeNewLine(settingsName,\n+                    BytecodeViewer.javac, false);\n+            DiskWriter.writeNewLine(settingsName,\n+                    BytecodeViewer.java, false);\n             DiskWriter.writeNewLine(settingsName,\n                     String.valueOf(BytecodeViewer.viewer.compileOnSave.isSelected()), false);\n             DiskWriter.writeNewLine(settingsName,\n                     String.valueOf(BytecodeViewer.viewer.autoCompileOnRefresh.isSelected()), false);\n-            DiskWriter.writeNewLine(settingsName, String.valueOf(BytecodeViewer.warnForEditing), false);\n+            DiskWriter.writeNewLine(settingsName,\n+                    String.valueOf(BytecodeViewer.warnForEditing), false);\n             DiskWriter.writeNewLine(settingsName,\n                     String.valueOf(BytecodeViewer.viewer.showFileInTabTitle.isSelected()), false);\n             DiskWriter.writeNewLine(settingsName,\n@@ -449,8 +465,7 @@ else if (decompiler == 6)\n             else if (decompiler == 7)\n                 BytecodeViewer.viewer.panelGroup1.setSelected(BytecodeViewer.viewer.panel1Krakatau.getModel(), true);\n             else if (decompiler == 8)\n-                BytecodeViewer.viewer.panelGroup1.setSelected(BytecodeViewer.viewer.panel1KrakatauBytecode.getModel()\n-                        , true);\n+                BytecodeViewer.viewer.panelGroup1.setSelected(BytecodeViewer.viewer.panel1KrakatauBytecode.getModel(), true);\n             else if (decompiler == 9)\n                 BytecodeViewer.viewer.panelGroup1.setSelected(BytecodeViewer.viewer.panel1JDGUI.getModel(), true);\n             else if (decompiler == 10)\n@@ -476,8 +491,7 @@ else if (decompiler == 6)\n             else if (decompiler == 7)\n                 BytecodeViewer.viewer.panelGroup2.setSelected(BytecodeViewer.viewer.panel2Krakatau.getModel(), true);\n             else if (decompiler == 8)\n-                BytecodeViewer.viewer.panelGroup2.setSelected(BytecodeViewer.viewer.panel2KrakatauBytecode.getModel()\n-                        , true);\n+                BytecodeViewer.viewer.panelGroup2.setSelected(BytecodeViewer.viewer.panel2KrakatauBytecode.getModel(), true);\n             else if (decompiler == 9)\n                 BytecodeViewer.viewer.panelGroup2.setSelected(BytecodeViewer.viewer.panel2JDGUI.getModel(), true);\n             else if (decompiler == 10)\n@@ -503,8 +517,7 @@ else if (decompiler == 6)\n             else if (decompiler == 7)\n                 BytecodeViewer.viewer.panelGroup3.setSelected(BytecodeViewer.viewer.panel3Krakatau.getModel(), true);\n             else if (decompiler == 8)\n-                BytecodeViewer.viewer.panelGroup3.setSelected(BytecodeViewer.viewer.panel3KrakatauBytecode.getModel()\n-                        , true);\n+                BytecodeViewer.viewer.panelGroup3.setSelected(BytecodeViewer.viewer.panel3KrakatauBytecode.getModel(), true);\n             else if (decompiler == 9)\n                 BytecodeViewer.viewer.panelGroup3.setSelected(BytecodeViewer.viewer.panel3JDGUI.getModel(), true);\n             else if (decompiler == 10)\n@@ -541,26 +554,25 @@ else if (decompiler == 11)\n             BytecodeViewer.viewer.panel3Smali_E.setSelected(Boolean.parseBoolean(DiskReader.loadString(settingsName, 105, false)));\n             BytecodeViewer.viewer.decodeAPKResources.setSelected(Boolean.parseBoolean(DiskReader.loadString(settingsName, 106, false)));\n             BytecodeViewer.library = DiskReader.loadString(settingsName, 107, false);\n-            BytecodeViewer.pingback = Boolean.parseBoolean(DiskReader.loadString(settingsName, 108,\n-                    false));\n+            BytecodeViewer.pingback = Boolean.parseBoolean(DiskReader.loadString(settingsName, 108, false));\n             BytecodeViewer.viewer.panel1JDGUI_E.setSelected(Boolean.parseBoolean(DiskReader.loadString(settingsName, 109, false)));\n             BytecodeViewer.viewer.panel2JDGUI_E.setSelected(Boolean.parseBoolean(DiskReader.loadString(settingsName, 110, false)));\n             BytecodeViewer.viewer.panel3JDGUI_E.setSelected(Boolean.parseBoolean(DiskReader.loadString(settingsName, 111, false)));\n             BytecodeViewer.viewer.fontSpinner.setValue(Integer.parseInt(DiskReader.loadString(settingsName, 112, false)));\n-            BytecodeViewer.deleteForeignLibraries =\n-                    Boolean.parseBoolean(DiskReader.loadString(settingsName, 113, false));\n+            BytecodeViewer.deleteForeignLibraries = Boolean.parseBoolean(DiskReader.loadString(settingsName, 113, false));\n             decompiler = Integer.parseInt(DiskReader.loadString(settingsName, 114, false));\n+            \n             if (decompiler == 0)\n                 BytecodeViewer.viewer.apkConversionGroup.setSelected(BytecodeViewer.viewer.apkConversionDex.getModel(), true);\n             else if (decompiler == 1)\n                 BytecodeViewer.viewer.apkConversionGroup.setSelected(BytecodeViewer.viewer.apkConversionEnjarify.getModel(), true);\n+            \n             BytecodeViewer.python3 = DiskReader.loadString(settingsName, 115, false);\n             BytecodeViewer.javac = DiskReader.loadString(settingsName, 116, false);\n             BytecodeViewer.java = DiskReader.loadString(settingsName, 117, false);\n             BytecodeViewer.viewer.compileOnSave.setSelected(Boolean.parseBoolean(DiskReader.loadString(settingsName, 118, false)));\n             BytecodeViewer.viewer.autoCompileOnRefresh.setSelected(Boolean.parseBoolean(DiskReader.loadString(settingsName, 119, false)));\n-            BytecodeViewer.warnForEditing = Boolean.parseBoolean(DiskReader.loadString(settingsName,\n-                    120, false));\n+            BytecodeViewer.warnForEditing = Boolean.parseBoolean(DiskReader.loadString(settingsName, 120, false));\n             BytecodeViewer.viewer.showFileInTabTitle.setSelected(Boolean.parseBoolean(DiskReader.loadString(settingsName, 121, false)));\n             BytecodeViewer.displayParentInTab = BytecodeViewer.viewer.showFileInTabTitle.isSelected();\n             BytecodeViewer.viewer.forcePureAsciiAsText.setSelected(Boolean.parseBoolean(DiskReader.loadString(settingsName, 122, false)));",
      "parent_sha": "7b4d66bb69dd7332121867c64b87017f7f9d88f7"
    }
  },
  {
    "oid": "357067b8dec06ae4368bcd9fffe3de8abd7d56eb",
    "message": "TODO Changes",
    "date": "2021-06-26T02:59:43Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/357067b8dec06ae4368bcd9fffe3de8abd7d56eb",
    "details": {
      "sha": "f1967b0cf6f9f73930f0a7a1d99c9117b3d3cc4e",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/BytecodeViewer.java",
      "status": "modified",
      "additions": 24,
      "deletions": 17,
      "changes": 41,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/357067b8dec06ae4368bcd9fffe3de8abd7d56eb/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/357067b8dec06ae4368bcd9fffe3de8abd7d56eb/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java?ref=357067b8dec06ae4368bcd9fffe3de8abd7d56eb",
      "patch": "@@ -71,23 +71,30 @@\n  * Join The Bytecode Club, we're noob friendly, and censorship free.\n  * http://the.bytecode.club\n  *\n- * TODO:\n- *  open as folder doesn't actually work\n- *  smali compile\n- *  Finish dragging code\n- *  Finish right-click tab menu detection\n- *  make it use that global last used inside of export as jar\n- *  Add https://github.com/ptnkjke/Java-Bytecode-Editor visualize as a plugin\n- *  Add https://github.com/exbin/bined as the replacement Hed Viewer/Editor\n- *  make zipfile not include the decode shit\n- *  add stackmapframes to bytecode decompiler\n- *  make ez-injection plugin console show all sys.out calls\n- *  add JEB decompiler optionally, requires them to add jeb library jar externally and disable update check ?\n- *  add decompile as zip for krakatau-bytecode, jd-gui and smali for CLI\n- *  add decompile all as zip for CLI\n- *  fix hook inject for EZ-Injection\n- *  fix classfile searcher\n- *  make the decompilers launch in a separate process\n+ * TODO BUGS:\n+ *      Spam-clicking the refresh button will cause the swing thread to deadlock (Quickly opening resources used to also do this)\n+ *          This is caused by the ctrlMouseWheelZoom code, a temporary patch is just removing it worst case\n+ *      Open as folder doesn't actually work\n+ *      Fix classfile searcher\n+ *      Smali Assembly compile - Needs to be fixed\n+ *      Krakatau Assembly compile - Needs to be fixed\n+ *\n+ * TODO IN-PROGRESS:\n+ *      Finish dragging code\n+ *      Finish right-click tab menu detection\n+ *      Fix hook inject for EZ-Injection\n+ *\n+ * TODO FEATURES:\n+ *      Add stackmapframes to bytecode decompiler\n+ *      Add JEB decompiler optionally, requires them to add jeb library jar\n+ *      Add https://github.com/ptnkjke/Java-Bytecode-Editor visualize as a plugin\n+ *      Add https://github.com/exbin/bined as the replacement Hed Viewer/Editor\n+ *      Make the decompilers launch in a separate process\n+ *      Make it use that global last used inside of export as jar\n+ *      Make zipfile not include the decode shit\n+ *      Make ez-injection plugin console show all sys.out calls\n+ *      Add decompile as zip for krakatau-bytecode, jd-gui and smali for CLI\n+ *      Add decompile all as zip for CLI\n  *\n  * @author Konloch\n  * @author The entire BCV community",
      "parent_sha": "facbee3d1a623eccbfd9db61197d61682391395e"
    }
  },
  {
    "oid": "36960da05e4b983fbba295b19d323a0078a32083",
    "message": "Hide settings dotfolder on Windows if not hidden. (#10)\nShouldn't be any regressions. Hopefully.",
    "date": "2014-12-20T02:12:57Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/36960da05e4b983fbba295b19d323a0078a32083",
    "details": {
      "sha": "04bec28f4cc6959b68ac1ef86cbb59cbcb112f95",
      "filename": "src/the/bytecode/club/bytecodeviewer/BytecodeViewer.java",
      "status": "modified",
      "additions": 23,
      "deletions": 6,
      "changes": 29,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/36960da05e4b983fbba295b19d323a0078a32083/src%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/36960da05e4b983fbba295b19d323a0078a32083/src%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java?ref=36960da05e4b983fbba295b19d323a0078a32083",
      "patch": "@@ -3,11 +3,7 @@\n import java.awt.event.ActionEvent;\n import java.awt.event.ActionListener;\n import java.awt.image.BufferedImage;\n-import java.io.BufferedReader;\n-import java.io.ByteArrayInputStream;\n-import java.io.File;\n-import java.io.FileInputStream;\n-import java.io.InputStreamReader;\n+import java.io.*;\n import java.net.HttpURLConnection;\n import java.net.URL;\n import java.util.ArrayList;\n@@ -511,12 +507,33 @@ public static void cleanup() {\n \tpublic static String getBCVDirectory() {\n \t\tFile f = new File(System.getProperty(\"user.home\") + fs\n \t\t\t\t+ \".Bytecode-Viewer\");\n-\t\twhile (!f.exists())\n+\t\twhile (!f.exists()) {\n+\t\t\tSystem.out.println(\"it doesn't exist.\"); // debug\n \t\t\tf.mkdirs();\n+\t\t}\n+\t\tSystem.out.println(\"it exists now.\"); // debug\n+\t\tif (!f.isHidden() && isWindows())\n+\t\t\thideFile(f);\n \n \t\treturn f.getAbsolutePath();\n \t}\n \n+\tprivate static boolean isWindows() {\n+\t\treturn System.getProperty(\"os.name\").toLowerCase().contains(\"win\");\n+\t}\n+\n+\tprivate static void hideFile(File f) {\n+\t\tSystem.out.println(\"hiding file\");\n+\t\ttry {\n+\t\t\t// Hide file by running attrib system command (on Windows)\n+\t\t\tRuntime.getRuntime().exec(\"attrib +H \" + f.getAbsolutePath());\n+\t\t} catch (IOException e) {\n+\t\t\tSystem.out.println(\"Could not hide settings folder (~/.Bytecode-Viewer) using attrib!\");\n+\t\t\tSystem.out.println(e.getMessage());\n+\t\t\te.printStackTrace();\n+\t\t}\n+\t}\n+\n \tprivate static String quickConvert(ArrayList<String> a) {\n \t\tString s = \"\";\n \t\tfor (String r : a)",
      "parent_sha": "4e6647be19f67e87c5e5f348b15679540c474715"
    }
  },
  {
    "oid": "269aed29b23a917e4573945a266a284b16eecdc3",
    "message": "Cleanup",
    "date": "2024-09-29T14:58:19Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/269aed29b23a917e4573945a266a284b16eecdc3",
    "details": {
      "sha": "ca13e14bc5f26b768c3b15eb121fed6fef4e87f9",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/plugin/PluginTemplate.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/269aed29b23a917e4573945a266a284b16eecdc3/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fplugin%2FPluginTemplate.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/269aed29b23a917e4573945a266a284b16eecdc3/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fplugin%2FPluginTemplate.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fplugin%2FPluginTemplate.java?ref=269aed29b23a917e4573945a266a284b16eecdc3",
      "patch": "@@ -30,8 +30,8 @@\n  */\n public enum PluginTemplate\n {\n-    JAVA(\"/templates/Template_Plugin.java\"), JAVASCRIPT(\"/templates/Template_Plugin.js\"),\n-    ;\n+    JAVA(\"/templates/Template_Plugin.java\"),\n+    JAVASCRIPT(\"/templates/Template_Plugin.js\");\n \n     private final String resourcePath;\n     private final String extension;",
      "parent_sha": "8c9fe299cc2763d35bd1cf6e7ed480d32996f4a9"
    }
  },
  {
    "oid": "29d29e14ac6c0370624e4a98c745c78c2733b9ca",
    "message": "Add ability to open class files even when they don't have a package",
    "date": "2024-10-05T23:48:36Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/29d29e14ac6c0370624e4a98c745c78c2733b9ca",
    "details": {
      "sha": "23b5409e636efda079e3116754626442144fbe24",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/gui/components/actions/GoToAction.java",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/29d29e14ac6c0370624e4a98c745c78c2733b9ca/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fcomponents%2Factions%2FGoToAction.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/29d29e14ac6c0370624e4a98c745c78c2733b9ca/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fcomponents%2Factions%2FGoToAction.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fcomponents%2Factions%2FGoToAction.java?ref=29d29e14ac6c0370624e4a98c745c78c2733b9ca",
      "patch": "@@ -211,7 +211,9 @@ else if (method)\n             if (packagePath.startsWith(\"java\") || packagePath.startsWith(\"javax\") || packagePath.startsWith(\"com.sun\"))\n                 return null;\n \n-            String resourceName = packagePath + \"/\" + classMethodLocation.owner;\n+            String resourceName = classMethodLocation.owner;\n+            if (!packagePath.isEmpty())\n+                resourceName = packagePath + \"/\" + classMethodLocation.owner;\n \n             if (resourceContainer.resourceClasses.containsKey(resourceName))\n             {\n@@ -229,7 +231,11 @@ else if (method)\n             if (packagePath.startsWith(\"java\") || packagePath.startsWith(\"javax\") || packagePath.startsWith(\"com.sun\"))\n                 return null;\n \n-            String resourceName = packagePath + \"/\" + lexeme;\n+            String resourceName = lexeme;\n+            if (!packagePath.isEmpty())\n+            {\n+                resourceName = packagePath + \"/\" + lexeme;\n+            }\n \n             if (resourceContainer.resourceClasses.containsKey(resourceName))\n             {",
      "parent_sha": "336d60ba06fff1a0b59eaa906425adf81c0e5423"
    }
  },
  {
    "oid": "938170b97b74524b540ae8db64a12313c90d6ba7",
    "message": "Bug fix",
    "date": "2021-07-27T08:25:42Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/938170b97b74524b540ae8db64a12313c90d6ba7",
    "details": {
      "sha": "e776d68c5a8c0fa53cec0e7aa4356033424be241",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/gui/resourcelist/ResourceListPane.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/938170b97b74524b540ae8db64a12313c90d6ba7/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourcelist%2FResourceListPane.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/938170b97b74524b540ae8db64a12313c90d6ba7/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourcelist%2FResourceListPane.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourcelist%2FResourceListPane.java?ref=938170b97b74524b540ae8db64a12313c90d6ba7",
      "patch": "@@ -320,7 +320,7 @@ public void openPath(TreePath path)\n         }\n         \n         //view classes\n-        if (MiscUtils.getFileHeaderMagicNumber(content).equalsIgnoreCase(\"cafebabe\")\n+        if (content != null && MiscUtils.getFileHeaderMagicNumber(content).equalsIgnoreCase(\"cafebabe\")\n                 || name.endsWith(\".class\"))\n         {\n             try",
      "parent_sha": "f22a5b919659b36dd992326a779321927136b1de"
    }
  },
  {
    "oid": "1a648c98b6146f9489f2bb09521743a3d545df95",
    "message": "Fixed NPE with fat Jar and clean working folder\n\njava.lang.NullPointerException\r\n\tat the.bytecode.club.bootloader.Boot.populateLibsDirectory(Boot.java:327)\r\n\tat the.bytecode.club.bytecodeviewer.BytecodeViewer$3.run(BytecodeViewer.java:408)\r\n\r\nThis prevented at least Krakatau from working, because further\r\ninitialization in BytecodeViewer$3.run was inhibited.",
    "date": "2018-03-31T09:36:49Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/1a648c98b6146f9489f2bb09521743a3d545df95",
    "details": {
      "sha": "dcd82a3dd063490a5ca66300557224eb99f96c1b",
      "filename": "src/the/bytecode/club/bootloader/Boot.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/1a648c98b6146f9489f2bb09521743a3d545df95/src%2Fthe%2Fbytecode%2Fclub%2Fbootloader%2FBoot.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/1a648c98b6146f9489f2bb09521743a3d545df95/src%2Fthe%2Fbytecode%2Fclub%2Fbootloader%2FBoot.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fthe%2Fbytecode%2Fclub%2Fbootloader%2FBoot.java?ref=1a648c98b6146f9489f2bb09521743a3d545df95",
      "patch": "@@ -323,7 +323,7 @@ public static void populateUrlList() throws Exception {\n     }\n \n     public static void populateLibsDirectory() {\n-        if (libsDir() != null)\n+        if (libsDir() != null && libsDir().exists())\n             for (File f : libsDir().listFiles()) {\n                 libsList.add(f.getName());\n                 libsFileList.add(f.getAbsolutePath());\n@@ -482,4 +482,4 @@ public static void checkKrakatau() {\n             }\n         }\n     }\n-}\n\\ No newline at end of file\n+}",
      "parent_sha": "161ebaec544e2ef2cdaab9fed694d4e5368bc66a"
    }
  },
  {
    "oid": "2c5742467484b6dab81a0efb6cb3627d6c9b9a86",
    "message": "Added New Class\n\nRight-click New>Class",
    "date": "2021-07-27T12:02:40Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/2c5742467484b6dab81a0efb6cb3627d6c9b9a86",
    "details": {
      "sha": "e5f140c1943b7e81121666a56f25bac0455aa8a8",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/gui/resourcelist/contextmenu/impl/New.java",
      "status": "modified",
      "additions": 45,
      "deletions": 14,
      "changes": 59,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/2c5742467484b6dab81a0efb6cb3627d6c9b9a86/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourcelist%2Fcontextmenu%2Fimpl%2FNew.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/2c5742467484b6dab81a0efb6cb3627d6c9b9a86/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourcelist%2Fcontextmenu%2Fimpl%2FNew.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourcelist%2Fcontextmenu%2Fimpl%2FNew.java?ref=2c5742467484b6dab81a0efb6cb3627d6c9b9a86",
      "patch": "@@ -1,7 +1,10 @@\n package the.bytecode.club.bytecodeviewer.gui.resourcelist.contextmenu.impl;\n \n import org.apache.commons.io.FilenameUtils;\n+import org.objectweb.asm.tree.ClassNode;\n import the.bytecode.club.bytecodeviewer.BytecodeViewer;\n+import the.bytecode.club.bytecodeviewer.Constants;\n+import the.bytecode.club.bytecodeviewer.api.ASMUtil;\n import the.bytecode.club.bytecodeviewer.decompilers.Decompiler;\n import the.bytecode.club.bytecodeviewer.gui.resourcelist.contextmenu.ContextMenuItem;\n import the.bytecode.club.bytecodeviewer.gui.resourcelist.contextmenu.ContextMenuType;\n@@ -43,8 +46,16 @@ public New()\n \t\t{\n \t\t\tJMenu quickOpen = new JMenu(TranslatedStrings.NEW.toString());\n \t\t\tquickOpen.add(createMenu(\"Class\", FileType.CLASS, selPath));\n-\t\t\tquickOpen.add(createMenu(\"File\", FileType.FILE, selPath));\n-\t\t\t//quickOpen.add(createMenu(\"Directory\", FileType.DIRECTORY, selPath));\n+\t\t\t\n+\t\t\t//TODO\n+\t\t\t// + directory isn't finished\n+\t\t\t// + file has no purpose until the plugin writer code is added for newly created resources\n+\t\t\t//   ^ this will allow users to edit the files they have created\n+\t\t\tif(Constants.DEV_MODE)\n+\t\t\t{\n+\t\t\t\tquickOpen.add(createMenu(\"File\", FileType.FILE, selPath));\n+\t\t\t\tquickOpen.add(createMenu(\"Directory\", FileType.DIRECTORY, selPath));\n+\t\t\t}\n \t\t\tmenu.add(quickOpen);\n \t\t}));\n \t}\n@@ -53,28 +64,47 @@ private static JMenuItem createMenu(String name, FileType fileType, TreePath sel\n \t{\n \t\tJMenuItem menu = new JMenuItem(name);\n \t\t\n-\t\tString separator = \"/\"; //fileType == FileType.CLASS ? \".\" : \"/\";\n-\t\tString firstPath = buildPath(0, 2, selPath, separator);\n+\t\tString separator = fileType == FileType.CLASS ? \".\" : \"/\";\n+\t\tString firstPath = buildPath(0, 2, selPath, \"/\");\n \t\tString path = buildPath(2, selPath.getPathCount(), selPath, separator);\n \t\tString containerName = selPath.getPathComponent(1).toString();\n \t\t\n \t\tmenu.addActionListener((e)->{\n-\t\t\tString newPath = BytecodeViewer.showInput(\"Name\", \"Enter the file name\", path);\n+\t\t\tString newPath = BytecodeViewer.showInput(\"Name\",\n+\t\t\t\t\tfileType == FileType.CLASS ? \"Enter the class name\" : \"Enter the file name\",\n+\t\t\t\t\tFilenameUtils.removeExtension(path));\n \t\t\t\n \t\t\tif(newPath == null || newPath.isEmpty())\n \t\t\t\treturn;\n \t\t\t\n+\t\t\tbyte[] contents = new byte[0];\n+\t\t\tString resourcePath = newPath;\n+\t\t\t\n \t\t\tswitch(fileType)\n \t\t\t{\n-\t\t\t\tcase FILE:\n-\t\t\t\t\tBytecodeViewer.resourceContainers.get(containerName).resourceFiles.put(newPath, new byte[0]);\n-\t\t\t\t\tsearchAndInsert(firstPath+\"/\"+newPath, BytecodeViewer.resourceContainers.get(containerName).treeNode);\n-\t\t\t\t\tbreak;\n-\t\t\t\t\t\n \t\t\t\tcase CLASS:\n-\t\t\t\t\t//TODO needs to be an empty class file, asm can help with this\n+\t\t\t\t\tClassNode cn = new ClassNode();\n+\t\t\t\t\t\n+\t\t\t\t\t//TODO this should be a dialog\n+\t\t\t\t\tcn.version = 52;\n+\t\t\t\t\t\n+\t\t\t\t\t//TODO santize newPath and remove extension if added\n+\t\t\t\t\tcn.name = newPath;\n+\t\t\t\t\tresourcePath = resourcePath.replace(\".\", \"/\") + \".class\";\n+\t\t\t\t\t\n+\t\t\t\t\tcontents = ASMUtil.nodeToBytes(cn);\n+\t\t\t\t\t\n+\t\t\t\t\tBytecodeViewer.resourceContainers.get(containerName).resourceFiles.put(resourcePath, contents);\n+\t\t\t\t\tsearchAndInsert(firstPath + \"/\" + resourcePath, BytecodeViewer.resourceContainers.get(containerName).treeNode, \"/\");\n+\t\t\t\t\t\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase FILE:\n+\t\t\t\t\tBytecodeViewer.resourceContainers.get(containerName).resourceFiles.put(resourcePath, contents);\n+\t\t\t\t\tsearchAndInsert(firstPath + separator +newPath, BytecodeViewer.resourceContainers.get(containerName).treeNode, separator);\n \t\t\t\t\tbreak;\n \t\t\t}\n+\t\t\t\n+\t\t\tBytecodeViewer.viewer.resourcePane.tree.updateUI();\n \t\t});\n \t\t\n \t\treturn menu;\n@@ -109,12 +139,12 @@ public static String buildPath(int startsAt, int max, DefaultMutableTreeNode tre\n \t}\n \t\n \t//TODO this needs to be rewritten to support creating parent nodes that don't exist\n-\tpublic static boolean searchAndInsert(String path, DefaultMutableTreeNode treeNode)\n+\tpublic static boolean searchAndInsert(String path, DefaultMutableTreeNode treeNode, String separator)\n \t{\n \t\tEnumeration<DefaultMutableTreeNode> children = treeNode.children();\n \t\t\n \t\tString findPath = FilenameUtils.getPath(path);\n-\t\tString currentPath = buildPath(0, treeNode.getPath().length, treeNode, \"/\");\n+\t\tString currentPath = buildPath(0, treeNode.getPath().length, treeNode, separator);\n \t\tString directory = FilenameUtils.getPath(currentPath);\n \t\t\n \t\tif(currentPath.startsWith(findPath))\n@@ -127,7 +157,7 @@ public static boolean searchAndInsert(String path, DefaultMutableTreeNode treeNo\n \t\twhile(children.hasMoreElements())\n \t\t{\n \t\t\tDefaultMutableTreeNode child = children.nextElement();\n-\t\t\tif(searchAndInsert(path, child))\n+\t\t\tif(searchAndInsert(path, child, separator))\n \t\t\t\treturn true;\n \t\t}\n \t\t\n@@ -138,5 +168,6 @@ public enum FileType\n \t{\n \t\tCLASS,\n \t\tFILE,\n+\t\tDIRECTORY,\n \t}\n }\n\\ No newline at end of file",
      "parent_sha": "4d863a61688081f1056ebc6d56bcc1214b880e1e"
    }
  },
  {
    "oid": "1b5f8e16db5d38e0fb6ae5228e04104b4482533a",
    "message": "Python3 Check",
    "date": "2021-07-12T14:43:14Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/1b5f8e16db5d38e0fb6ae5228e04104b4482533a",
    "details": {
      "sha": "29526371c75b51118ecd9bdf481a9cbfc3cdfa04",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/resources/ExternalResources.java",
      "status": "modified",
      "additions": 18,
      "deletions": 1,
      "changes": 19,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/1b5f8e16db5d38e0fb6ae5228e04104b4482533a/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fresources%2FExternalResources.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/1b5f8e16db5d38e0fb6ae5228e04104b4482533a/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fresources%2FExternalResources.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fresources%2FExternalResources.java?ref=1b5f8e16db5d38e0fb6ae5228e04104b4482533a",
      "patch": "@@ -166,7 +166,24 @@ public boolean hasSetPython3Command()\n \t */\n \tpublic String getPython3Command(boolean blockTillSelected)\n \t{\n-\t\t//check if 'python' command is bound as python 2.X\n+\t\t//check if 'pypy3' command is bound as python 3.X\n+\t\t//TODO test this and re-enable it\n+\t\t/*testCommand(new String[]{\"pypy3\", \"--version\"}, \"python 3\", ()->{\n+\t\t\tConfiguration.python3 = \"pypy3\";\n+\t\t});\n+\t\tif(!Configuration.python3.isEmpty())\n+\t\t\treturn Configuration.python3;*/\n+\t\t\n+\t\t\n+\t\t//check if 'python3' command is bound as python 3.X\n+\t\ttestCommand(new String[]{\"python3\", \"--version\"}, \"python 3\", ()->{\n+\t\t\tConfiguration.python3 = \"python3\";\n+\t\t});\n+\t\tif(!Configuration.python3.isEmpty())\n+\t\t\treturn Configuration.python3;\n+\t\t\n+\t\t\n+\t\t//check if 'python' command is bound as python 3.X\n \t\ttestCommand(new String[]{\"python\", \"--version\"}, \"python 3\", ()->{\n \t\t\tConfiguration.python3 = \"python\";\n \t\t});",
      "parent_sha": "c27db9be9b51e2c29133092e39f437ad13ad5cfa"
    }
  },
  {
    "oid": "76aaf8f30fea15f090c6904aa3e2cef029099d57",
    "message": "Javap Disassembler",
    "date": "2021-07-11T17:53:15Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/76aaf8f30fea15f090c6904aa3e2cef029099d57",
    "details": {
      "sha": "ef28859bd4890bdf6948aa332bc9ae18f8434d53",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/decompilers/Decompiler.java",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/76aaf8f30fea15f090c6904aa3e2cef029099d57/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2FDecompiler.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/76aaf8f30fea15f090c6904aa3e2cef029099d57/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2FDecompiler.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2FDecompiler.java?ref=76aaf8f30fea15f090c6904aa3e2cef029099d57",
      "patch": "@@ -40,13 +40,15 @@ public enum Decompiler\n     KRAKATAU_DISASSEMBLER(\"Krakatau Disassembler\", new KrakatauDisassembler()),\n     JD_DECOMPILER(\"JD-GUI Decompiler\", new JDGUIDecompiler()),\n     JADX_DECOMPILER(\"JADX Decompiler\", new JADXDecompiler()),\n-    ASM_TEXTIFY_DISASSEMBLER(\"ASM Disassembler\", new ASMTextifierDecompiler()),\n+    ASM_TEXTIFY_DISASSEMBLER(\"ASM Disassembler\", new ASMTextifierDisassembler()),\n+    JAVAP_DISASSEMBLER(\"Javap Disassembler\", new JavapDisassembler()),\n     ;\n     \n     private final String decompilerName;\n     private final InternalDecompiler decompiler;\n     \n-    Decompiler(String decompilerName, InternalDecompiler decompiler) {\n+    Decompiler(String decompilerName, InternalDecompiler decompiler)\n+    {\n         this.decompilerName = decompilerName;\n         this.decompiler = decompiler;\n     }",
      "parent_sha": "789ac13cd155d1ca1d01b5d0d9376a54234b884e"
    }
  },
  {
    "oid": "a4cf3a2337ed81c554d0528d19712e83ffa97e88",
    "message": "Version Prompt",
    "date": "2021-07-21T22:55:42Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/a4cf3a2337ed81c554d0528d19712e83ffa97e88",
    "details": {
      "sha": "b08de700ff67c85c71bd11c43c4b4c346ee6b5d5",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/Constants.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/a4cf3a2337ed81c554d0528d19712e83ffa97e88/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FConstants.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/a4cf3a2337ed81c554d0528d19712e83ffa97e88/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FConstants.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FConstants.java?ref=a4cf3a2337ed81c554d0528d19712e83ffa97e88",
      "patch": "@@ -46,7 +46,7 @@ public class Constants\n \tpublic static boolean DEV_MODE;\n \t\n \t//if true the version checker will prompt and ask how you would like to proceed\n-\tpublic static final boolean FORCE_VERSION_CHECKER_PROMPT = true;\n+\tpublic static final boolean FORCE_VERSION_CHECKER_PROMPT = false;\n \t\n \tpublic static final String fs = System.getProperty(\"file.separator\");\n \tpublic static final String nl = System.getProperty(\"line.separator\");",
      "parent_sha": "8fa494ada676a98d97460fc765e5bded5f3e9a26"
    }
  },
  {
    "oid": "d441bb973b06cca407ae197c3ead0e226d572841",
    "message": "Fix for issue #499.",
    "date": "2024-07-04T08:47:21Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/d441bb973b06cca407ae197c3ead0e226d572841",
    "details": {
      "sha": "8a6232e5c7753aecf99b18fe862dcbb038439ef3",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/gui/resourceviewer/viewer/ClassViewer.java",
      "status": "modified",
      "additions": 70,
      "deletions": 61,
      "changes": 131,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/d441bb973b06cca407ae197c3ead0e226d572841/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourceviewer%2Fviewer%2FClassViewer.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/d441bb973b06cca407ae197c3ead0e226d572841/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourceviewer%2Fviewer%2FClassViewer.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourceviewer%2Fviewer%2FClassViewer.java?ref=d441bb973b06cca407ae197c3ead0e226d572841",
      "patch": "@@ -1,18 +1,10 @@\n package the.bytecode.club.bytecodeviewer.gui.resourceviewer.viewer;\n \n-import java.awt.BorderLayout;\n-import java.awt.Container;\n-import java.awt.Point;\n-import java.awt.event.ComponentAdapter;\n-import java.awt.event.ComponentEvent;\n-import java.awt.event.HierarchyEvent;\n-import java.awt.event.HierarchyListener;\n+import java.awt.*;\n+import java.awt.event.*;\n import java.util.Arrays;\n import java.util.List;\n-import javax.swing.JButton;\n-import javax.swing.JSplitPane;\n-import javax.swing.JViewport;\n-import javax.swing.SwingUtilities;\n+import javax.swing.*;\n import javax.swing.text.BadLocationException;\n import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;\n import the.bytecode.club.bytecodeviewer.BytecodeViewer;\n@@ -60,25 +52,17 @@ public class ClassViewer extends ResourceViewer\n     public BytecodeViewPanel bytecodeViewPanel1 = new BytecodeViewPanel(0, this);\n     public BytecodeViewPanel bytecodeViewPanel2 = new BytecodeViewPanel(1, this);\n     public BytecodeViewPanel bytecodeViewPanel3 = new BytecodeViewPanel(2, this);\n-    \n+\n     public List<MethodParser> methods = Arrays.asList(new MethodParser(), new MethodParser(), new MethodParser());\n-    \n+\n     public ClassViewer(final ResourceContainer container, final String name)\n     {\n         super(new Resource(name, container.getWorkingName(name), container));\n-        \n+\n         this.setName(name);\n         this.setLayout(new BorderLayout());\n-        this.sp = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, bytecodeViewPanel1, bytecodeViewPanel2);\n-        this.sp2 = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, sp, bytecodeViewPanel3);\n-        this.add(sp2, BorderLayout.CENTER);\n-\n-        this.addComponentListener(new ComponentAdapter() {\n-            @Override\n-            public void componentResized(ComponentEvent e) {\n-                resetDivider();\n-            }\n-        });\n+\n+        this.sp = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT);\n     }\n \n     @Override\n@@ -92,7 +76,7 @@ public void refresh(final JButton button)\n         bytecodeViewPanel3.createPane(this);\n \n         byte[] classBytes = getResourceBytes();\n-        \n+\n         //TODO remove this once all of the importers have been properly updated to use a FileContainerImporter\n         if(classBytes == null || classBytes.length == 0 || Configuration.forceResourceUpdateFromClassNode)\n         {\n@@ -103,18 +87,18 @@ public void refresh(final JButton button)\n                 System.err.println(\"WARNING: Class Resource imported using the old importer!\");\n                 System.err.println(\"TODO: Update it to use the FileContainerImporter\");\n             }\n-            \n+\n             classBytes = ASMUtil.nodeToBytes(resource.getResourceClassNode());\n         }\n-        \n+\n         bytecodeViewPanel1.updatePane(this, classBytes, button, isPanel1Editable());\n         bytecodeViewPanel2.updatePane(this, classBytes, button, isPanel2Editable());\n         bytecodeViewPanel3.updatePane(this, classBytes, button, isPanel3Editable());\n \n         Thread dumpBuild = new Thread(() ->\n         {\n             BytecodeViewer.updateBusyStatus(true);\n-            \n+\n             while (Configuration.currentlyDumping)\n             {\n                 //wait until it's not dumping\n@@ -140,20 +124,20 @@ public void refresh(final JButton button)\n         {\n             if (Configuration.warnForEditing)\n                 return;\n-    \n+\n             Configuration.warnForEditing = true;\n             if (!BytecodeViewer.viewer.autoCompileOnRefresh.isSelected()\n                     && !BytecodeViewer.viewer.compileOnSave.isSelected())\n             {\n                 BytecodeViewer.showMessage(\"Make sure to compile (File>Compile or Ctrl + T) whenever you want to \"\n                         + \"test or export your changes.\\nYou can set compile automatically on refresh or on save \"\n                         + \"in the settings menu.\");\n-        \n+\n                 SettingsSerializer.saveSettingsAsync();\n             }\n         }\n     }\n-    \n+\n     public void setPanes() {\n         bytecodeViewPanel1.decompiler = BytecodeViewer.viewer.viewPane1.getSelectedDecompiler();\n         bytecodeViewPanel2.decompiler = BytecodeViewer.viewer.viewPane2.getSelectedDecompiler();\n@@ -218,7 +202,7 @@ public static int getMaxViewLine(RSyntaxTextArea area)\n             int lineHeight = area.getLineHeight();\n             return y >= lineHeight ? y / lineHeight : 0;\n         }\n-        \n+\n         return 0;\n     }\n \n@@ -232,7 +216,7 @@ public static int getViewLine(RSyntaxTextArea area)\n             int lineHeight = area.getLineHeight();\n             return point.y >= lineHeight ? point.y / lineHeight : 0;\n         }\n-        \n+\n         return 0;\n     }\n \n@@ -254,41 +238,66 @@ public static void setCaretLine(RSyntaxTextArea area, int line)\n             area.setCaretPosition(area.getLineStartOffset(line));\n         } catch (BadLocationException ignored) { }\n     }\n-    \n+\n+\n     public void resetDivider()\n     {\n+\t\t/*\n+\t\tThis may be a bit overkill on how we handle setting/changing selected panels, but we now handle if only one panel is\n+\t\tselected, to not show any split panes but just the panel text.\n+\t\t */\n+\n         SwingUtilities.invokeLater(() ->\n         {\n-            sp.setResizeWeight(0.5);\n-            \n-            if (bytecodeViewPanel2.decompiler != Decompiler.NONE && bytecodeViewPanel1.decompiler != Decompiler.NONE) {\n-                setDividerLocation(sp, 0.5);\n-            } else if (bytecodeViewPanel1.decompiler != Decompiler.NONE) {\n-                setDividerLocation(sp, 1);\n-            } else if (bytecodeViewPanel2.decompiler != Decompiler.NONE) {\n-                sp.setResizeWeight(1);\n-                setDividerLocation(sp, 0);\n-            } else {\n-                setDividerLocation(sp, 0);\n+            // This clears any component so we can \"repaint\" our components based on the users selections\n+            for (Component c : this.getComponents()) {\n+\t\t\t\tif (c instanceof BytecodeViewPanel || c instanceof JSplitPane) {\n+\t\t\t\t\tthis.remove(c);\n+\t\t\t\t}\n             }\n-            \n-            if (bytecodeViewPanel3.decompiler != Decompiler.NONE) {\n-                sp2.setResizeWeight(0.7);\n-                setDividerLocation(sp2, 0.7);\n-                if ((bytecodeViewPanel2.decompiler == Decompiler.NONE && bytecodeViewPanel1.decompiler != Decompiler.NONE)\n-                        || (bytecodeViewPanel1.decompiler == Decompiler.NONE && bytecodeViewPanel2.decompiler != Decompiler.NONE)) {\n-                    setDividerLocation(sp2, 0.5);\n-                } else if (bytecodeViewPanel1.decompiler == Decompiler.NONE) {\n-                    setDividerLocation(sp2, 0);\n-                }\n-            } else {\n-                sp.setResizeWeight(1);\n-                sp2.setResizeWeight(0);\n-                setDividerLocation(sp2, 1);\n+\n+            this.sp.setResizeWeight(0.5);\n+            setDividerLocation(sp, 0.5);\n+\n+\t\t\t/* If panel 1 and panel 2 are ticked but not panel 3 */\n+            if (bytecodeViewPanel1.decompiler != Decompiler.NONE && bytecodeViewPanel2.decompiler != Decompiler.NONE && bytecodeViewPanel3.decompiler == Decompiler.NONE) {\n+                this.sp.setLeftComponent(bytecodeViewPanel1);\n+                this.sp.setRightComponent(bytecodeViewPanel2);\n+                this.add(sp, BorderLayout.CENTER);\n+            } /* If panel 1 and panel 3 are ticked but not panel 2 */\n+            else if (bytecodeViewPanel1.decompiler != Decompiler.NONE && bytecodeViewPanel2.decompiler == Decompiler.NONE && bytecodeViewPanel3.decompiler != Decompiler.NONE) {\n+                this.sp.setLeftComponent(bytecodeViewPanel1);\n+                this.sp.setRightComponent(bytecodeViewPanel3);\n+                this.add(sp, BorderLayout.CENTER);\n+            } /* If panel 2 and panel 3 are ticked but not panel 1 */\n+            else if (bytecodeViewPanel1.decompiler == Decompiler.NONE && bytecodeViewPanel2.decompiler != Decompiler.NONE && bytecodeViewPanel3.decompiler != Decompiler.NONE) {\n+                this.sp.setLeftComponent(bytecodeViewPanel2);\n+                this.sp.setRightComponent(bytecodeViewPanel3);\n+                this.add(sp, BorderLayout.CENTER);\n+            }\n+\n+            // If all panels are selected, create the second split pane\n+            if (bytecodeViewPanel1.decompiler != Decompiler.NONE && bytecodeViewPanel2.decompiler != Decompiler.NONE && bytecodeViewPanel3.decompiler != Decompiler.NONE) {\n+                this.sp.setLeftComponent(bytecodeViewPanel1);\n+                this.sp.setRightComponent(bytecodeViewPanel2);\n+                this.sp2 = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, sp, bytecodeViewPanel3);\n+                this.sp2.setResizeWeight(0.7);\n+                this.add(sp2);\n+            }\n+\n+\t\t\t/* If view panel 1 is only ticked... */\n+            if (bytecodeViewPanel1.decompiler != Decompiler.NONE && bytecodeViewPanel2.decompiler == Decompiler.NONE && bytecodeViewPanel3.decompiler == Decompiler.NONE) {\n+                this.add(bytecodeViewPanel1, BorderLayout.CENTER);\n+            } /* If view panel 2 is only ticked... */\n+            else if (bytecodeViewPanel1.decompiler == Decompiler.NONE && bytecodeViewPanel2.decompiler != Decompiler.NONE && bytecodeViewPanel3.decompiler == Decompiler.NONE) {\n+                this.add(bytecodeViewPanel2, BorderLayout.CENTER);\n+            } /* If view panel 3 is only ticked... */\n+            else if (bytecodeViewPanel1.decompiler == Decompiler.NONE && bytecodeViewPanel2.decompiler == Decompiler.NONE && bytecodeViewPanel3.decompiler != Decompiler.NONE){\n+                this.add(bytecodeViewPanel3, BorderLayout.CENTER);\n             }\n         });\n     }\n-    \n+\n     /**\n      * Whoever wrote this function, THANK YOU!\n      */\n@@ -321,6 +330,6 @@ public void hierarchyChanged(HierarchyEvent e) {\n         }\n         return splitter;\n     }\n-    \n+\n     private static final long serialVersionUID = -8650495368920680024L;\n }",
      "parent_sha": "cdb6573ca4bf02fec793805852402eba3fa019c0"
    }
  },
  {
    "oid": "2f7cff63c245fc031f0e387ee0ff1227850f4db4",
    "message": "Remove need for AtomicInteger",
    "date": "2021-09-16T11:55:28Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/2f7cff63c245fc031f0e387ee0ff1227850f4db4",
    "details": {
      "sha": "bab3136441026d826b2c5b66ad663ab9b9b4750c",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/util/SecurityMan.java",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/2f7cff63c245fc031f0e387ee0ff1227850f4db4/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Futil%2FSecurityMan.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/2f7cff63c245fc031f0e387ee0ff1227850f4db4/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Futil%2FSecurityMan.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Futil%2FSecurityMan.java?ref=2f7cff63c245fc031f0e387ee0ff1227850f4db4",
      "patch": "@@ -5,7 +5,6 @@\n import java.io.IOException;\n import java.net.InetAddress;\n import java.security.Permission;\n-import java.util.concurrent.atomic.AtomicInteger;\n import the.bytecode.club.bytecodeviewer.BytecodeViewer;\n import the.bytecode.club.bytecodeviewer.Configuration;\n import the.bytecode.club.bytecodeviewer.Constants;\n@@ -45,12 +44,12 @@\n \n public class SecurityMan extends SecurityManager\n {\n-    private final AtomicInteger silentExec = new AtomicInteger(1);\n+    private volatile boolean silentExec = true;\n     private boolean printing = false;\n     private boolean printingPackage = false;\n     \n     public void silenceExec(boolean b) {\n-        silentExec.addAndGet(b ? 1 : -1);\n+        silentExec = b;\n     }\n     \n     public void setPrinting(boolean printing)\n@@ -161,7 +160,7 @@ else if(canClassExecute(Thread.currentThread().getStackTrace()[7].getClassName()\n         //log exec if allowed\n         if (allow && validClassCall && !blocked)\n         {\n-            if(silentExec.get() >= 1)\n+            if(silentExec)\n                 System.err.println(\"Allowing exec: \" + cmd);\n         } //throw exception stopping execution\n         else throw new SecurityException(\"BCV is awesome! Blocking exec: \" + cmd);",
      "parent_sha": "a86623cd2a34db52f3a2037f52cfc78ef3140287"
    }
  },
  {
    "oid": "ea507f6833c66f2657c18c77851f39944bff8db3",
    "message": "Updated Welcome Message",
    "date": "2021-07-07T00:53:29Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/ea507f6833c66f2657c18c77851f39944bff8db3",
    "details": {
      "sha": "24a16f912eba925458f19cc46c83b2c3bd4fddb7",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/BytecodeViewer.java",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/ea507f6833c66f2657c18c77851f39944bff8db3/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/ea507f6833c66f2657c18c77851f39944bff8db3/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java?ref=ea507f6833c66f2657c18c77851f39944bff8db3",
      "patch": "@@ -12,6 +12,7 @@\n import org.objectweb.asm.tree.ClassNode;\n import the.bytecode.club.bootloader.Boot;\n import the.bytecode.club.bytecodeviewer.api.ClassNodeLoader;\n+import the.bytecode.club.bytecodeviewer.api.ExceptionUI;\n import the.bytecode.club.bytecodeviewer.gui.components.*;\n import the.bytecode.club.bytecodeviewer.gui.resourceviewer.TabbedPane;\n import the.bytecode.club.bytecodeviewer.gui.resourceviewer.viewer.ClassViewer;\n@@ -137,7 +138,12 @@ public static void main(String[] args)\n         launchArgs = args;\n         \n         //welcome message\n-        System.out.println(\"https://the.bytecode.club - Created by @Konloch - Bytecode Viewer \" + VERSION + \", \" + \"Fat-Jar: \" + FAT_JAR);\n+        System.out.print(\"Bytecode Viewer \" + VERSION);\n+        if(FAT_JAR)\n+            System.out.print(\" [FatJar]\");\n+        \n+        System.out.println(\" - Created by @Konloch\");\n+        System.out.println(\"https://bytecodeviewer.com - https://the.bytecode.club\");\n         \n         //set the security manager\n         System.setSecurityManager(sm);",
      "parent_sha": "febdeba4571bfc542066261c4cbfa2647d9fac10"
    }
  },
  {
    "oid": "16c2eef1d9baced5e63f4219f9c78a1817e2319e",
    "message": "Adjusted CLI Startup Banner",
    "date": "2024-08-21T16:28:03Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/16c2eef1d9baced5e63f4219f9c78a1817e2319e",
    "details": {
      "sha": "ad5260705bbbbcee81ab4c8b195eb294943d8475",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/BytecodeViewer.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/16c2eef1d9baced5e63f4219f9c78a1817e2319e/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/16c2eef1d9baced5e63f4219f9c78a1817e2319e/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java?ref=16c2eef1d9baced5e63f4219f9c78a1817e2319e",
      "patch": "@@ -168,13 +168,13 @@ public static void main(String[] args)\n     {\n         launchArgs = args;\n         \n-        //welcome message\n+        //CLI startup banner\n         System.out.print(\"Bytecode Viewer \" + VERSION);\n+\t\t\n         if (FAT_JAR)\n             System.out.print(\" [Fat Jar]\");\n         \n-        System.out.println(\" - Created by @Konloch\");\n-        System.out.println(\"https://bytecodeviewer.com - https://the.bytecode.club\");\n+        System.out.println(\" - https://bytecodeviewer.com\\r\\nCreated by @Konloch - https://konloch.com\\r\\nPresented by https://the.bytecode.club\");\n \n         // Set the security manager\n         try {",
      "parent_sha": "4e433000eb9bfcacd440d7f7e003d00c80bf000e"
    }
  },
  {
    "oid": "cc4522720881a9d70e6f541a8223d7934f1ae34d",
    "message": "Fixed Java Plugin Launching",
    "date": "2021-06-27T23:37:34Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/cc4522720881a9d70e6f541a8223d7934f1ae34d",
    "details": {
      "sha": "17bf4009ed1e13049e95c5e8bababaa4f9e0e36a",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/plugin/strategies/JavaPluginLaunchStrategy.java",
      "status": "modified",
      "additions": 11,
      "deletions": 4,
      "changes": 15,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/cc4522720881a9d70e6f541a8223d7934f1ae34d/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fplugin%2Fstrategies%2FJavaPluginLaunchStrategy.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/cc4522720881a9d70e6f541a8223d7934f1ae34d/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fplugin%2Fstrategies%2FJavaPluginLaunchStrategy.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fplugin%2Fstrategies%2FJavaPluginLaunchStrategy.java?ref=cc4522720881a9d70e6f541a8223d7934f1ae34d",
      "patch": "@@ -29,21 +29,28 @@\n  * @author Bibl (don't ban me pls)\n  * @created 1 Jun 2015\n  */\n-public class JavaPluginLaunchStrategy implements PluginLaunchStrategy {\n-\n-    private static final SimpleCompiler compiler = new SimpleCompiler();\n \n+public class JavaPluginLaunchStrategy implements PluginLaunchStrategy\n+{\n     @Override\n-    public Plugin run(File file) throws Throwable {\n+    public Plugin run(File file) throws Throwable\n+    {\n+        SimpleCompiler compiler = new SimpleCompiler();\n+        \n+        //compile the Java source\n         compiler.cook(DiskReader.loadAsString(file.getAbsolutePath()));\n \n+        //debug\n         System.out.println(file.getName().substring(0, file.getName().length() - (\".java\".length())));\n+        \n+        //get the class object from the compiler classloader\n         Class<?> clazz = Class.forName(\n                 file.getName().substring(0, file.getName().length() - \".java\".length()),\n                 true,\n                 compiler.getClassLoader()\n         );\n \n+        //create a new instance of the class\n         return (Plugin) clazz.newInstance();\n     }\n }\n\\ No newline at end of file",
      "parent_sha": "829b9ae2bbbe06916d7504eed972dd406d7f3729"
    }
  },
  {
    "oid": "f22a5b919659b36dd992326a779321927136b1de",
    "message": "Classfile Header Check\n\nThis is still missing a lot and isn't the correct way to do it, plugins won't work for obfuscated classfile names until the importer has been rewritten as well\n\nSome of the decompilers also fail but it's a step in the right direction",
    "date": "2021-07-27T08:13:14Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/f22a5b919659b36dd992326a779321927136b1de",
    "details": {
      "sha": "e56f39faf19ab96879120381bdcfe3aa6fffcae1",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/gui/resourcelist/ResourceListPane.java",
      "status": "modified",
      "additions": 29,
      "deletions": 7,
      "changes": 36,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/f22a5b919659b36dd992326a779321927136b1de/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourcelist%2FResourceListPane.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/f22a5b919659b36dd992326a779321927136b1de/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourcelist%2FResourceListPane.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourcelist%2FResourceListPane.java?ref=f22a5b919659b36dd992326a779321927136b1de",
      "patch": "@@ -23,6 +23,7 @@\n import org.apache.commons.io.FilenameUtils;\n import org.objectweb.asm.tree.ClassNode;\n import the.bytecode.club.bytecodeviewer.BytecodeViewer;\n+import the.bytecode.club.bytecodeviewer.api.ASMUtil;\n import the.bytecode.club.bytecodeviewer.decompilers.Decompiler;\n import the.bytecode.club.bytecodeviewer.gui.resourcelist.contextmenu.ContextMenu;\n import the.bytecode.club.bytecodeviewer.resources.importing.Import;\n@@ -34,6 +35,7 @@\n import the.bytecode.club.bytecodeviewer.resources.ResourceContainer;\n import the.bytecode.club.bytecodeviewer.util.FileDrop;\n import the.bytecode.club.bytecodeviewer.util.LazyNameUtil;\n+import the.bytecode.club.bytecodeviewer.util.MiscUtils;\n \n import static the.bytecode.club.bytecodeviewer.Constants.fs;\n import static the.bytecode.club.bytecodeviewer.Constants.tempDirectory;\n@@ -308,17 +310,37 @@ public void openPath(TreePath path)\n         \n         String name = nameBuffer.toString();\n         \n-        //TODO add file header check\n-        if (name.endsWith(\".class\"))\n+        boolean resourceMode = false;\n+        byte[] content = container.resourceClassBytes.get(name);\n+        \n+        if(content == null)\n         {\n-            final ClassNode cn = container.getClassNode(\n-                    name.substring(0, name.length() - \".class\".length()));\n-            \n-            if (cn != null)\n+            content = container.resourceFiles.get(name);\n+            resourceMode = true;\n+        }\n+        \n+        //view classes\n+        if (MiscUtils.getFileHeaderMagicNumber(content).equalsIgnoreCase(\"cafebabe\")\n+                || name.endsWith(\".class\"))\n+        {\n+            try\n+            {\n+                if(resourceMode)\n+                {\n+                    //TODO load this cn into the resource viewer\n+                    //final ClassNode cn = ASMUtil.bytesToNode(content);\n+                }\n+                \n+                //display via name\n                 BytecodeViewer.viewer.workPane.addClassResource(container, name);\n-            else\n+            }\n+            catch (Exception e)\n+            {\n+                e.printStackTrace();\n                 BytecodeViewer.viewer.workPane.addFileResource(container, name);\n+            }\n         }\n+        //view non-classfile resources\n         else if(container.resourceFiles.containsKey(name))\n         {\n             final String fn = name.toLowerCase();",
      "parent_sha": "3abdbf6b68b684b4d451cce379d8be8129c3ce61"
    }
  },
  {
    "oid": "dac4cee6682c7af60f51b391b8c5e51a208b427a",
    "message": "Fix Change Class File Versions Plugin 'Cancel' Option\n\nResolves #447",
    "date": "2024-10-02T01:10:44Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/dac4cee6682c7af60f51b391b8c5e51a208b427a",
    "details": {
      "sha": "497ca9c2ec3e5a55dde6249ddec5674a8138922b",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/plugin/preinstalled/ChangeClassFileVersions.java",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/dac4cee6682c7af60f51b391b8c5e51a208b427a/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fplugin%2Fpreinstalled%2FChangeClassFileVersions.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/dac4cee6682c7af60f51b391b8c5e51a208b427a/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fplugin%2Fpreinstalled%2FChangeClassFileVersions.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fplugin%2Fpreinstalled%2FChangeClassFileVersions.java?ref=dac4cee6682c7af60f51b391b8c5e51a208b427a",
      "patch": "@@ -41,7 +41,12 @@ public void execute(List<ClassNode> classNodeList)\n     {\n         //prompt dialog for version number\n         // TODO: include a little diagram of what JDK is which number\n-        int newVersion = Integer.parseInt(BytecodeViewer.showInput(\"Class Version Number: (52 = JDK 8)\"));\n+        String input = BytecodeViewer.showInput(\"Class Version Number: (52 = JDK 8)\");\n+\n+        if(input == null)\n+            return;\n+\n+        int newVersion = Integer.parseInt(input);\n \n         //update the ClassFile version\n         classNodeList.forEach(classNode -> classNode.version = newVersion);",
      "parent_sha": "ed7865c2953520e04e4add0f0d60f537d3d89545"
    }
  },
  {
    "oid": "090d3f7f29bf7e41b44c8123cd646844c6f6e1ae",
    "message": "Fix typo",
    "date": "2015-12-25T00:32:49Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/090d3f7f29bf7e41b44c8123cd646844c6f6e1ae",
    "details": {
      "sha": "73bc1c01d2d1531dff41fbc77ddaa1aba3ee2239",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/gui/MainViewerGUI.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/090d3f7f29bf7e41b44c8123cd646844c6f6e1ae/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2FMainViewerGUI.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/090d3f7f29bf7e41b44c8123cd646844c6f6e1ae/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2FMainViewerGUI.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2FMainViewerGUI.java?ref=090d3f7f29bf7e41b44c8123cd646844c6f6e1ae",
      "patch": "@@ -208,7 +208,7 @@ public boolean dispatchKeyEvent(KeyEvent e) {\n     private final JMenuItem mntmSetOpitonalLibrary = new JMenuItem(\"Set Optional Library Folder\");\n     private final JMenuItem mntmPingback = new JMenuItem(\"Pingback\");\n     private final JMenu mnFontSize = new JMenu(\"Font Size\");\n-    private final JCheckBoxMenuItem chckbxmntmDeleteForiegnoutdatedLibs = new JCheckBoxMenuItem(\"Delete Foriegn/Outdated Libs\");\n+    private final JCheckBoxMenuItem chckbxmntmDeleteForiegnoutdatedLibs = new JCheckBoxMenuItem(\"Delete Foreign/Outdated Libs\");\n     private final JMenu mnApkConversion = new JMenu(\"APK Conversion\");\n     public final ButtonGroup apkConversionGroup = new ButtonGroup();\n     public final JRadioButtonMenuItem apkConversionDex = new JRadioButtonMenuItem(\"Dex2Jar\");",
      "parent_sha": "b70002e9d544b832d6c962bd477e1bc23092cfd6"
    }
  },
  {
    "oid": "417a5e4b463f180f6f36500187ed5aadad579ab6",
    "message": "Code Cleanup",
    "date": "2022-01-22T19:20:47Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/417a5e4b463f180f6f36500187ed5aadad579ab6",
    "details": {
      "sha": "8d89ea7e20596828ee8079bf3ee00b7bfecd6327",
      "filename": "plugins/java/ExampleStringDecrypter.java",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/417a5e4b463f180f6f36500187ed5aadad579ab6/plugins%2Fjava%2FExampleStringDecrypter.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/417a5e4b463f180f6f36500187ed5aadad579ab6/plugins%2Fjava%2FExampleStringDecrypter.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/plugins%2Fjava%2FExampleStringDecrypter.java?ref=417a5e4b463f180f6f36500187ed5aadad579ab6",
      "patch": "@@ -8,8 +8,11 @@\n import static the.bytecode.club.bytecodeviewer.Constants.nl;\n \n /**\n- * This is an example of a string decrypter plugin\n- */\n+ ** This is an example of a String Decrypter Java Plugin for BCV.\n+ **\n+ ** @author Righteous\n+ **/\n+\n public class ExampleStringDecrypter extends Plugin {\n \n     @Override",
      "parent_sha": "edccda8c67901082ca91105703c5742842b03fe9"
    }
  },
  {
    "oid": "c0eb9e944ea7d7cc8b36bae768c917c64000a93e",
    "message": "Synchronized JarUtil ClassWriters\n\nThis should be re-evaluated, it's most likely not needed and it will slow down multi-pane decompilation\n\nAn alternative solution is generating the ClassNode List once, then storing it in a cache that can be quickly saved to disk. If a new file gets added regenerate the cache.",
    "date": "2021-07-04T08:56:25Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/c0eb9e944ea7d7cc8b36bae768c917c64000a93e",
    "details": {
      "sha": "f462439548d3ee8a72688117f8ace74443f74c92",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/util/JarUtils.java",
      "status": "modified",
      "additions": 35,
      "deletions": 23,
      "changes": 58,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/c0eb9e944ea7d7cc8b36bae768c917c64000a93e/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Futil%2FJarUtils.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/c0eb9e944ea7d7cc8b36bae768c917c64000a93e/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Futil%2FJarUtils.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Futil%2FJarUtils.java?ref=c0eb9e944ea7d7cc8b36bae768c917c64000a93e",
      "patch": "@@ -17,7 +17,6 @@\n import me.konloch.kontainer.io.DiskWriter;\n import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n import org.apache.commons.compress.archivers.zip.ZipFile;\n-import org.objectweb.asm.ClassReader;\n import org.objectweb.asm.ClassWriter;\n import org.objectweb.asm.tree.ClassNode;\n import the.bytecode.club.bytecodeviewer.BytecodeViewer;\n@@ -51,8 +50,10 @@\n  * @since 09/26/2011\n  */\n \n-public class JarUtils {\n-\n+public class JarUtils\n+{\n+    public static Object LOCK = new Object();\n+    \n     /**\n      * Loads the classes and resources from the input jar file\n      *\n@@ -245,7 +246,10 @@ public static byte[] getBytes(final InputStream is) throws IOException {\n      * @return the ClassNode instance\n      */\n     public static ClassNode getNode(final byte[] bytez) {\n-        return ASMUtil.getClassNode(bytez);\n+        synchronized (LOCK)\n+        {\n+            return ASMUtil.getClassNode(bytez);\n+        }\n     }\n \n     /**\n@@ -296,27 +300,35 @@ public static void saveAsJar(ArrayList<ClassNode> nodeList, String path,\n      * @param path     the exact jar output path\n      */\n     public static void saveAsJarClassesOnly(ArrayList<ClassNode> nodeList, String path) {\n-        try {\n-            JarOutputStream out = new JarOutputStream(new FileOutputStream(path));\n-            ArrayList<String> noDupe = new ArrayList<>();\n-            for (ClassNode cn : nodeList) {\n-                ClassWriter cw = new ClassWriter(0);\n-                cn.accept(cw);\n-\n-                String name = cn.name + \".class\";\n-\n-                if (!noDupe.contains(name)) {\n-                    noDupe.add(name);\n-                    out.putNextEntry(new ZipEntry(name));\n-                    out.write(cw.toByteArray());\n-                    out.closeEntry();\n+        synchronized (LOCK)\n+        {\n+            try\n+            {\n+                JarOutputStream out = new JarOutputStream(new FileOutputStream(path));\n+                ArrayList<String> noDupe = new ArrayList<>();\n+                for (ClassNode cn : nodeList)\n+                {\n+                    ClassWriter cw = new ClassWriter(0);\n+                    cn.accept(cw);\n+            \n+                    String name = cn.name + \".class\";\n+            \n+                    if (!noDupe.contains(name))\n+                    {\n+                        noDupe.add(name);\n+                        out.putNextEntry(new ZipEntry(name));\n+                        out.write(cw.toByteArray());\n+                        out.closeEntry();\n+                    }\n                 }\n+        \n+                noDupe.clear();\n+                out.close();\n+            }\n+            catch (IOException e)\n+            {\n+                new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);\n             }\n-\n-            noDupe.clear();\n-            out.close();\n-        } catch (IOException e) {\n-            new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);\n         }\n     }\n ",
      "parent_sha": "854c4d622c0a5fab41ef78c384c83935ab9da2b6"
    }
  },
  {
    "oid": "17e1d621fec969454da14791380602134c5eb4ac",
    "message": "Cleanup On Decompiler Failure",
    "date": "2024-10-02T18:12:43Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/17e1d621fec969454da14791380602134c5eb4ac",
    "details": {
      "sha": "a0bd5e646a0188ed867c54d1f24e16179b85a543",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/decompilers/impl/ProcyonDecompiler.java",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/17e1d621fec969454da14791380602134c5eb4ac/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FProcyonDecompiler.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/17e1d621fec969454da14791380602134c5eb4ac/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FProcyonDecompiler.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FProcyonDecompiler.java?ref=17e1d621fec969454da14791380602134c5eb4ac",
      "patch": "@@ -82,12 +82,13 @@ public DecompilerSettings getDecompilerSettings()\n     @Override\n     public String decompileClassNode(ClassNode cn, byte[] bytes)\n     {\n+        TempFile tempFile = null;\n         String exception;\n \n         try\n         {\n-            final TempFile tempFile = TempFile.createTemporaryFile(false, \".class\");\n-            final File tempClassFile = tempFile.getFile();\n+            tempFile = TempFile.createTemporaryFile(false, \".class\");\n+            File tempClassFile = tempFile.getFile();\n \n             //write the ClassNode bytes to the temp file\n             try (FileOutputStream fos = new FileOutputStream(tempClassFile))\n@@ -128,6 +129,10 @@ public String decompileClassNode(ClassNode cn, byte[] bytes)\n             exception = ExceptionUI.SEND_STACKTRACE_TO_NL + sw;\n         }\n \n+        //delete all temporary files\n+        if(tempFile != null)\n+            tempFile.delete();\n+\n         return PROCYON + \" \" + ERROR + \"! \" + ExceptionUI.SEND_STACKTRACE_TO + NL + NL\n             + TranslatedStrings.SUGGESTED_FIX_DECOMPILER_ERROR + NL + NL + exception;\n     }",
      "parent_sha": "b69389cc5f342869bda885e334c53b31748f6793"
    }
  },
  {
    "oid": "3f458022578897832daeedc383da324d6e8552bd",
    "message": "Procyon Ensure Cleanup",
    "date": "2024-10-02T18:30:24Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/3f458022578897832daeedc383da324d6e8552bd",
    "details": {
      "sha": "96cc11eaf40384e2afabacbd0cee73b0f8715343",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/decompilers/impl/ProcyonDecompiler.java",
      "status": "modified",
      "additions": 6,
      "deletions": 7,
      "changes": 13,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/3f458022578897832daeedc383da324d6e8552bd/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FProcyonDecompiler.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/3f458022578897832daeedc383da324d6e8552bd/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FProcyonDecompiler.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FProcyonDecompiler.java?ref=3f458022578897832daeedc383da324d6e8552bd",
      "patch": "@@ -94,9 +94,6 @@ public String decompileClassNode(ClassNode cn, byte[] bytes)\n             StringWriter stringwriter = new StringWriter();\n             settings.getLanguage().decompileType(resolvedType, new PlainTextOutput(stringwriter), decompilationOptions);\n \n-            //delete all temporary files\n-            tempFile.delete();\n-\n             return EncodeUtils.unicodeToString(stringwriter.toString());\n         }\n         catch (Throwable e)\n@@ -107,10 +104,12 @@ public String decompileClassNode(ClassNode cn, byte[] bytes)\n \n             exception = ExceptionUI.SEND_STACKTRACE_TO_NL + sw;\n         }\n-\n-        //delete all temporary files\n-        if(tempFile != null)\n-            tempFile.delete();\n+        finally\n+        {\n+            //delete all temporary files\n+            if(tempFile != null)\n+                tempFile.delete();\n+        }\n \n         return PROCYON + \" \" + ERROR + \"! \" + ExceptionUI.SEND_STACKTRACE_TO + NL + NL\n             + TranslatedStrings.SUGGESTED_FIX_DECOMPILER_ERROR + NL + NL + exception;",
      "parent_sha": "45d722cb2d192921d7685362a0350afef74b5e6f"
    }
  },
  {
    "oid": "f121870272f85db62d53a616740a71f5b210889c",
    "message": "Procyon Refactoring",
    "date": "2024-10-02T18:13:36Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/f121870272f85db62d53a616740a71f5b210889c",
    "details": {
      "sha": "0c04b19aa37a4a8197ea4de4060691cec9c7aaea",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/decompilers/impl/ProcyonDecompiler.java",
      "status": "modified",
      "additions": 21,
      "deletions": 21,
      "changes": 42,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/f121870272f85db62d53a616740a71f5b210889c/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FProcyonDecompiler.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/f121870272f85db62d53a616740a71f5b210889c/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FProcyonDecompiler.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FProcyonDecompiler.java?ref=f121870272f85db62d53a616740a71f5b210889c",
      "patch": "@@ -58,27 +58,6 @@ public ProcyonDecompiler()\n         super(\"Procyon Decompiler\", \"proycon\");\n     }\n \n-    public DecompilerSettings getDecompilerSettings()\n-    {\n-        DecompilerSettings settings = new DecompilerSettings();\n-        settings.setAlwaysGenerateExceptionVariableForCatchBlocks(BytecodeViewer.viewer.alwaysGenerateExceptionVars.isSelected());\n-        settings.setExcludeNestedTypes(BytecodeViewer.viewer.excludeNestedTypes.isSelected());\n-        settings.setShowDebugLineNumbers(BytecodeViewer.viewer.showDebugLineNumbers.isSelected());\n-        settings.setIncludeLineNumbersInBytecode(BytecodeViewer.viewer.includeLineNumbersInBytecode.isSelected());\n-        settings.setIncludeErrorDiagnostics(BytecodeViewer.viewer.includeErrorDiagnostics.isSelected());\n-        settings.setShowSyntheticMembers(BytecodeViewer.viewer.showSyntheticMembers.isSelected());\n-        settings.setSimplifyMemberReferences(BytecodeViewer.viewer.simplifyMemberReferences.isSelected());\n-        settings.setMergeVariables(BytecodeViewer.viewer.mergeVariables.isSelected());\n-        settings.setForceExplicitTypeArguments(BytecodeViewer.viewer.forceExplicitTypeArguments.isSelected());\n-        settings.setForceExplicitImports(BytecodeViewer.viewer.forceExplicitImports.isSelected());\n-        settings.setFlattenSwitchBlocks(BytecodeViewer.viewer.flattenSwitchBlocks.isSelected());\n-        settings.setRetainPointlessSwitches(BytecodeViewer.viewer.retainPointlessSwitches.isSelected());\n-        settings.setRetainRedundantCasts(BytecodeViewer.viewer.retainRedunantCasts.isSelected());\n-        settings.setUnicodeOutputEnabled(BytecodeViewer.viewer.unicodeOutputEnabled.isSelected());\n-        settings.setJavaFormattingOptions(JavaFormattingOptions.createDefault());\n-        return settings;\n-    }\n-\n     @Override\n     public String decompileClassNode(ClassNode cn, byte[] bytes)\n     {\n@@ -246,6 +225,27 @@ private void doSaveJarDecompiled(File inFile, File outFile) throws Exception\n         }\n     }\n \n+    public DecompilerSettings getDecompilerSettings()\n+    {\n+        DecompilerSettings settings = new DecompilerSettings();\n+        settings.setAlwaysGenerateExceptionVariableForCatchBlocks(BytecodeViewer.viewer.alwaysGenerateExceptionVars.isSelected());\n+        settings.setExcludeNestedTypes(BytecodeViewer.viewer.excludeNestedTypes.isSelected());\n+        settings.setShowDebugLineNumbers(BytecodeViewer.viewer.showDebugLineNumbers.isSelected());\n+        settings.setIncludeLineNumbersInBytecode(BytecodeViewer.viewer.includeLineNumbersInBytecode.isSelected());\n+        settings.setIncludeErrorDiagnostics(BytecodeViewer.viewer.includeErrorDiagnostics.isSelected());\n+        settings.setShowSyntheticMembers(BytecodeViewer.viewer.showSyntheticMembers.isSelected());\n+        settings.setSimplifyMemberReferences(BytecodeViewer.viewer.simplifyMemberReferences.isSelected());\n+        settings.setMergeVariables(BytecodeViewer.viewer.mergeVariables.isSelected());\n+        settings.setForceExplicitTypeArguments(BytecodeViewer.viewer.forceExplicitTypeArguments.isSelected());\n+        settings.setForceExplicitImports(BytecodeViewer.viewer.forceExplicitImports.isSelected());\n+        settings.setFlattenSwitchBlocks(BytecodeViewer.viewer.flattenSwitchBlocks.isSelected());\n+        settings.setRetainPointlessSwitches(BytecodeViewer.viewer.retainPointlessSwitches.isSelected());\n+        settings.setRetainRedundantCasts(BytecodeViewer.viewer.retainRedunantCasts.isSelected());\n+        settings.setUnicodeOutputEnabled(BytecodeViewer.viewer.unicodeOutputEnabled.isSelected());\n+        settings.setJavaFormattingOptions(JavaFormattingOptions.createDefault());\n+        return settings;\n+    }\n+\n     /**\n      * @author DeathMarine\n      */",
      "parent_sha": "03d74f3dedfcc3f5e780a34fe316f8624965f0be"
    }
  },
  {
    "oid": "e6f9f16d869d6abdf2ec24cd73e4e2184894764f",
    "message": "Fixed Opening Files From Launch Args",
    "date": "2024-10-02T14:53:14Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/e6f9f16d869d6abdf2ec24cd73e4e2184894764f",
    "details": {
      "sha": "d9269b62b318e0da04b677bc77727563541215ce",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/BytecodeViewer.java",
      "status": "modified",
      "additions": 23,
      "deletions": 3,
      "changes": 26,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/e6f9f16d869d6abdf2ec24cd73e4e2184894764f/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/e6f9f16d869d6abdf2ec24cd73e4e2184894764f/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java?ref=e6f9f16d869d6abdf2ec24cd73e4e2184894764f",
      "patch": "@@ -31,6 +31,7 @@\n import the.bytecode.club.bytecodeviewer.bootloader.InstallFatJar;\n import the.bytecode.club.bytecodeviewer.bootloader.UpdateCheck;\n import the.bytecode.club.bytecodeviewer.cli.BCVCommandLine;\n+import the.bytecode.club.bytecodeviewer.cli.CLICommand;\n import the.bytecode.club.bytecodeviewer.gui.MainViewerGUI;\n import the.bytecode.club.bytecodeviewer.gui.components.ExtendedJOptionPane;\n import the.bytecode.club.bytecodeviewer.gui.components.MultipleChoiceDialog;\n@@ -286,9 +287,28 @@ public static void boot()\n         viewer.requestFocus();\n \n         //open files from launch args\n-        if (launchArgs.length >= 1)\n-            for (String s : launchArgs)\n-                openFiles(new File[]{new File(s)}, true);\n+        openFilesFromLaunchArguments();\n+    }\n+\n+    private static void openFilesFromLaunchArguments()\n+    {\n+        if(launchArgs.length < 1)\n+            return;\n+\n+        //parse input for commands\n+        for (int i = 0; i < launchArgs.length; i++)\n+        {\n+            String fileInput = launchArgs[i];\n+            CLICommand command = CLI.getCommand(fileInput);\n+\n+            if (command != null)\n+            {\n+                if(command.hasArgs)\n+                    i++;\n+            }\n+            else\n+                openFiles(new File[]{new File(fileInput)}, true);\n+        }\n     }\n \n     /**",
      "parent_sha": "182d64d997afee4b01f5e1d6b3708bd372ed70d9"
    }
  },
  {
    "oid": "3a5fd2a3c9d5e436f92ecb6581e831393c7a9698",
    "message": "Workaround for SecurityManager stuff on Java 18+",
    "date": "2022-04-01T10:24:13Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/3a5fd2a3c9d5e436f92ecb6581e831393c7a9698",
    "details": {
      "sha": "afbebc35db1ffc54ea3e7fa17127ba3535567d97",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/BytecodeViewer.java",
      "status": "modified",
      "additions": 10,
      "deletions": 4,
      "changes": 14,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/3a5fd2a3c9d5e436f92ecb6581e831393c7a9698/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/3a5fd2a3c9d5e436f92ecb6581e831393c7a9698/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FBytecodeViewer.java?ref=3a5fd2a3c9d5e436f92ecb6581e831393c7a9698",
      "patch": "@@ -178,10 +178,16 @@ public static void main(String[] args)\n         \n         System.out.println(\" - Created by @Konloch\");\n         System.out.println(\"https://bytecodeviewer.com - https://the.bytecode.club\");\n-        \n-        //set the security manager\n-        System.setSecurityManager(sm);\n-        \n+\n+        // Set the security manager\n+        try {\n+            System.setSecurityManager(sm);\n+        } catch (Throwable t) {\n+            System.err.println(\"Cannot set security manager! Are you on Java 18+ and have not enabled support for it?\");\n+            System.err.println(\"Because of this, you may be susceptible to some exploits!\");\n+            System.err.println(\"Either deal with it or allow it using the -Djava.security.manager=allow parameter.\");\n+        }\n+\n         try\n         {\n             //precache settings file",
      "parent_sha": "82e11e72e3ffdcdc8979ff78318c2ffe1109bfe3"
    }
  },
  {
    "oid": "676a4f4ac77551c2fdb2ebc54ccb5223ab58f90e",
    "message": "Fixed dex2jar with filenames containing dex or apk\n\nExisting code did not work with .apk files, which contained \"apk\" substring in the filename.",
    "date": "2018-03-31T09:50:10Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/676a4f4ac77551c2fdb2ebc54ccb5223ab58f90e",
    "details": {
      "sha": "a797d9f3bea1807136057b81d3a64aba7019bbf0",
      "filename": "src/the/bytecode/club/bytecodeviewer/Dex2Jar.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/676a4f4ac77551c2fdb2ebc54ccb5223ab58f90e/src%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FDex2Jar.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/676a4f4ac77551c2fdb2ebc54ccb5223ab58f90e/src%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FDex2Jar.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2FDex2Jar.java?ref=676a4f4ac77551c2fdb2ebc54ccb5223ab58f90e",
      "patch": "@@ -37,7 +37,7 @@ public class Dex2Jar {\n     public static synchronized void dex2Jar(File input, File output) {\n         try {\n             com.googlecode.dex2jar.tools.Dex2jarCmd.main(new String[]{input.getAbsolutePath()});\n-            String realOutput = input.getName().replaceAll(\".dex\", \"-dex2jar.jar\").replaceAll(\".apk\", \"-dex2jar.jar\");\n+            String realOutput = input.getName().replaceAll(\"\\\\.dex\", \"-dex2jar.jar\").replaceAll(\"\\\\.apk\", \"-dex2jar.jar\");\n             File realOutputF = new File(realOutput);\n             realOutputF.renameTo(output);\n             File realOutputF2 = new File(realOutput);\n@@ -57,7 +57,7 @@ public static synchronized void dex2Jar(File input, File output) {\n     public static synchronized void saveAsDex(File input, File output) {\n         try {\n             com.googlecode.dex2jar.tools.Jar2Dex.main(new String[]{input.getAbsolutePath()});\n-            String realOutput = input.getName().replaceAll(\".jar\", \"-jar2dex.dex\");\n+            String realOutput = input.getName().replaceAll(\"\\\\.jar\", \"-jar2dex.dex\");\n             File realOutputF = new File(realOutput);\n             realOutputF.renameTo(output);\n             File realOutputF2 = new File(realOutput);",
      "parent_sha": "655a80038be1e3ac3bed8dff23b5172fe2227e44"
    }
  },
  {
    "oid": "ddd31b58d7e689d64cd9a5e7da2c0779560b5658",
    "message": "Code Style Cleanup",
    "date": "2024-09-27T07:34:28Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/ddd31b58d7e689d64cd9a5e7da2c0779560b5658",
    "details": {
      "sha": "89918667c541f059bd0f54c7dc44e5dc570a122d",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/resources/ResourceType.java",
      "status": "modified",
      "additions": 12,
      "deletions": 1,
      "changes": 13,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/ddd31b58d7e689d64cd9a5e7da2c0779560b5658/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fresources%2FResourceType.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/ddd31b58d7e689d64cd9a5e7da2c0779560b5658/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fresources%2FResourceType.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fresources%2FResourceType.java?ref=ddd31b58d7e689d64cd9a5e7da2c0779560b5658",
      "patch": "@@ -33,7 +33,18 @@ public enum ResourceType\n     // TODO add the files icons for the missing files from the.bytecode.club.bytecodeviewer.util.SyntaxLanguage\n     //      or from org.fife.ui.rsyntaxtextarea.FileTypeUtil or from org.fife.ui.rsyntaxtextarea.SyntaxConstants\n \n-    CLASS_FILE(IconResources.classIcon, \"class\"), JAVA_ARCHIVE(IconResources.jarIcon, \"jar\", \"war\", \"ear\"), ZIP_ARCHIVE(IconResources.zipIcon, \"zip\"), ANDROID_ARCHIVE(IconResources.androidIcon, \"apk\", \"wapk\", \"dex\", \"xapk\"), IMAGE_FILE(IconResources.imageIcon, \"png\", \"jpg\", \"jpeg\", \"bmp\", \"wbmp\", \"gif\", \"tif\", \"webp\"), CONFIG_TEXT_FILE(IconResources.configIcon, \"properties\", \"xml\", \"jsp\", \"mf\", \"config\", \"csv\", \"yml\", \"yaml\", \"ini\", \"json\", \"sql\", \"gradle\", \"dockerfile\", \"htaccess\", \"plugin\", \"attachprovider\", \"transportservice\", \"connector\"), JAVA_FILE(IconResources.javaIcon, \"java\"), TEXT_FILE(IconResources.textIcon, \"txt\", \"md\", \"log\", \"html\", \"css\"), CPP_FILE(IconResources.cplusplusIcon, \"c\", \"cpp\", \"h\"), CSHARP_FILE(IconResources.csharpIcon, \"cs\"), BAT_FILE(IconResources.batIcon, \"bat\", \"batch\"), SH_FILE(IconResources.shIcon, \"sh\", \"bash\"),\n+    CLASS_FILE(IconResources.classIcon, \"class\"),\n+    JAVA_ARCHIVE(IconResources.jarIcon, \"jar\", \"war\", \"ear\"),\n+    ZIP_ARCHIVE(IconResources.zipIcon, \"zip\"),\n+    ANDROID_ARCHIVE(IconResources.androidIcon, \"apk\", \"wapk\", \"dex\", \"xapk\"),\n+    IMAGE_FILE(IconResources.imageIcon, \"png\", \"jpg\", \"jpeg\", \"bmp\", \"wbmp\", \"gif\", \"tif\", \"webp\"),\n+    CONFIG_TEXT_FILE(IconResources.configIcon, \"properties\", \"xml\", \"jsp\", \"mf\", \"config\", \"csv\", \"yml\", \"yaml\", \"ini\", \"json\", \"sql\", \"gradle\", \"dockerfile\", \"htaccess\", \"plugin\", \"attachprovider\", \"transportservice\", \"connector\"),\n+    JAVA_FILE(IconResources.javaIcon, \"java\"),\n+    TEXT_FILE(IconResources.textIcon, \"txt\", \"md\", \"log\", \"html\", \"css\"),\n+    CPP_FILE(IconResources.cplusplusIcon, \"c\", \"cpp\", \"h\"),\n+    CSHARP_FILE(IconResources.csharpIcon, \"cs\"),\n+    BAT_FILE(IconResources.batIcon, \"bat\", \"batch\"),\n+    SH_FILE(IconResources.shIcon, \"sh\", \"bash\"),\n     ;\n \n     public static final Map<String, ResourceType> extensionMap = new HashMap<>();",
      "parent_sha": "0a74b31bf3f338c797281ae1fcdc24c747a74b09"
    }
  },
  {
    "oid": "38565f6bff44683ce18b156c3949b13b1fa6c1fa",
    "message": "Avoid NullPointerException",
    "date": "2021-09-18T02:48:09Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/38565f6bff44683ce18b156c3949b13b1fa6c1fa",
    "details": {
      "sha": "216a2239cf51b8275382f94a404a8e50ab23d5d2",
      "filename": "plugins/XposedGenerator.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/38565f6bff44683ce18b156c3949b13b1fa6c1fa/plugins%2FXposedGenerator.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/38565f6bff44683ce18b156c3949b13b1fa6c1fa/plugins%2FXposedGenerator.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/plugins%2FXposedGenerator.java?ref=38565f6bff44683ce18b156c3949b13b1fa6c1fa",
      "patch": "@@ -311,7 +311,7 @@ private static String ProcessContentExtractedPackage(String contentFile){\n             try\n             //\n             {\n-                if (foundpckg.isEmpty() || foundpckg == null)\n+                if (foundpckg == null || foundpckg.isEmpty())\n                     foundpckg  = \"No Package Found\";\n \n             }",
      "parent_sha": "47a99c4e90ad65797b14ee334a4aea5c9ea7903b"
    }
  },
  {
    "oid": "7b7a7a06e5aa7aa4f9596dc545fa23d032fe0b2f",
    "message": "Code Cleanup",
    "date": "2022-02-13T21:39:35Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/7b7a7a06e5aa7aa4f9596dc545fa23d032fe0b2f",
    "details": {
      "sha": "898eba74c51eeb10fc34318cda3caab30072e14e",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/gui/MainViewerGUI.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/7b7a7a06e5aa7aa4f9596dc545fa23d032fe0b2f/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2FMainViewerGUI.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/7b7a7a06e5aa7aa4f9596dc545fa23d032fe0b2f/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2FMainViewerGUI.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2FMainViewerGUI.java?ref=7b7a7a06e5aa7aa4f9596dc545fa23d032fe0b2f",
      "patch": "@@ -409,7 +409,7 @@ public void buildFileMenu()\n         saveAsDex.addActionListener(arg0 -> Export.DEX.getExporter().promptForExport());\n         saveAsZip.addActionListener(arg0 -> Export.ZIP.getExporter().promptForExport());\n         decompileSaveAll.addActionListener(arg0 -> ResourceDecompiling.decompileSaveAll());\n-        decompileSaveOpened.addActionListener(arg0 -> ResourceDecompiling.decompileSaveOpenedOnly());\n+        decompileSaveOpened.addActionListener(arg0 -> ResourceDecompiling.decompileSaveOpenedResource());\n         about.addActionListener(arg0 -> new AboutWindow().setVisible(true));\n         exit.addActionListener(arg0 -> askBeforeExiting());\n     }",
      "parent_sha": "9ed0499ed9673dc51a488f6afc78e2ab557ad366"
    }
  },
  {
    "oid": "a5f0aed8e5cf07e1cb174ce2af4bad3e8c1d304f",
    "message": "Strict CLI",
    "date": "2024-10-02T14:58:56Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/a5f0aed8e5cf07e1cb174ce2af4bad3e8c1d304f",
    "details": {
      "sha": "29adcfe3a27738717cae0e9bcf7c16cf3af6d0e9",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/cli/BCVCommandLine.java",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/a5f0aed8e5cf07e1cb174ce2af4bad3e8c1d304f/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fcli%2FBCVCommandLine.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/a5f0aed8e5cf07e1cb174ce2af4bad3e8c1d304f/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fcli%2FBCVCommandLine.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fcli%2FBCVCommandLine.java?ref=a5f0aed8e5cf07e1cb174ce2af4bad3e8c1d304f",
      "patch": "@@ -157,8 +157,7 @@ private void handleCLIDecompilation(CommandLine cmd)\n     public CLICommand getCommand(String name)\n     {\n         for(CLICommand command : COMMANDS)\n-            if(command.name.equals(name)\n-                || command.nameFormatted.equals(name))\n+            if(command.nameFormatted.equals(name))\n                 return command;\n \n         return null;",
      "parent_sha": "ba0411cf98750e178842f41fe1053c4b00e70a7a"
    }
  },
  {
    "oid": "40a7815a9d493c380c39fa1e089f2cf04c9e495a",
    "message": "idk",
    "date": "2018-01-31T15:56:11Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/40a7815a9d493c380c39fa1e089f2cf04c9e495a",
    "details": {
      "sha": "b0ff095304a707a4eb50fc2eb47284e25abe60af",
      "filename": "src/the/bytecode/club/bytecodeviewer/decompilers/bytecode/ClassNodeDecompiler.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/40a7815a9d493c380c39fa1e089f2cf04c9e495a/src%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fbytecode%2FClassNodeDecompiler.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/40a7815a9d493c380c39fa1e089f2cf04c9e495a/src%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fbytecode%2FClassNodeDecompiler.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fbytecode%2FClassNodeDecompiler.java?ref=40a7815a9d493c380c39fa1e089f2cf04c9e495a",
      "patch": "@@ -121,7 +121,7 @@ protected static PrefixedStringBuilder decompile(\n         }\n \n         if (!unableToDecompile.isEmpty()) {\n-            sb.append(\"//the following inner classes couldn't be decompiled: \");\n+            sb.append(\"// The following inner classes couldn't be decompiled: \");\n             for (String s : unableToDecompile) {\n                 sb.append(s);\n                 sb.append(\" \");",
      "parent_sha": "d7066720c1a14253feb835e6dd0a6a73d35d52ef"
    }
  },
  {
    "oid": "9e5b4527ed54cbb32444d1044315f125256d4373",
    "message": "Plugin Cleanup",
    "date": "2021-07-06T22:38:37Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/9e5b4527ed54cbb32444d1044315f125256d4373",
    "details": {
      "sha": "136c853ead85e6487b4e34ffe86273900c050a45",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/api/Plugin.java",
      "status": "modified",
      "additions": 10,
      "deletions": 5,
      "changes": 15,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/9e5b4527ed54cbb32444d1044315f125256d4373/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fapi%2FPlugin.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/9e5b4527ed54cbb32444d1044315f125256d4373/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fapi%2FPlugin.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fapi%2FPlugin.java?ref=9e5b4527ed54cbb32444d1044315f125256d4373",
      "patch": "@@ -28,16 +28,21 @@\n  * @author Konloch\n  */\n \n-public abstract class Plugin extends Thread {\n-\n+public abstract class Plugin extends Thread\n+{\n     @Override\n-    public void run() {\n+    public void run()\n+    {\n         BytecodeViewer.viewer.updateBusyStatus(true);\n-        try {\n-            if (BytecodeViewer.getLoadedClasses().isEmpty()) {\n+        \n+        try\n+        {\n+            if (BytecodeViewer.getLoadedClasses().isEmpty())\n+            {\n                 BytecodeViewer.showMessage(\"First open a class, jar, zip, apk or dex file.\");\n                 return;\n             }\n+            \n             execute(BytecodeViewer.getLoadedClasses());\n         } catch (Exception e) {\n             new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);",
      "parent_sha": "14b3b04661e838172e3ceed33e86470a5d51cd11"
    }
  },
  {
    "oid": "23c125cacd427a956c25a6d3238444a585a1ac79",
    "message": "JavaP Cleanup",
    "date": "2024-10-02T18:48:26Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/23c125cacd427a956c25a6d3238444a585a1ac79",
    "details": {
      "sha": "8e384af8fa6ed79636d71b0e1a7df1ba6a2c48c2",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/decompilers/impl/JavapDisassembler.java",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/23c125cacd427a956c25a6d3238444a585a1ac79/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FJavapDisassembler.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/23c125cacd427a956c25a6d3238444a585a1ac79/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FJavapDisassembler.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fdecompilers%2Fimpl%2FJavapDisassembler.java?ref=23c125cacd427a956c25a6d3238444a585a1ac79",
      "patch": "@@ -65,7 +65,7 @@ public String decompileClassNode(ClassNode cn, byte[] bytes)\n         return disassembleJavaP(cn, bytes);\n     }\n \n-    private synchronized String disassembleJavaP(ClassNode cn, byte[] b)\n+    private synchronized String disassembleJavaP(ClassNode cn, byte[] bytes)\n     {\n         TempFile tempFile = null;\n         String exception = \"This decompiler didn't throw an exception - this is probably a BCV logical bug\";\n@@ -74,10 +74,12 @@ private synchronized String disassembleJavaP(ClassNode cn, byte[] b)\n \n         try\n         {\n+            //create the temporary files\n             tempFile = TempFile.createTemporaryFile(true, \".class\");\n             File tempClassFile = tempFile.getFile();\n \n-            DiskWriter.replaceFileBytes(tempClassFile.getAbsolutePath(), b, false);\n+            //write the bytes to the class-file\n+            DiskWriter.replaceFileBytes(tempClassFile.getAbsolutePath(), bytes, false);\n \n             //load java tools into a temporary classloader\n             URLClassLoader child = new URLClassLoader(new URL[]{new File(Configuration.javaTools).toURI().toURL()}, this.getClass().getClassLoader());\n@@ -103,7 +105,7 @@ private synchronized String disassembleJavaP(ClassNode cn, byte[] b)\n             }\n             catch (InvocationTargetException e)\n             {\n-                //expected warning behaviour on modern JDKs (17+)\n+                //expected warning behaviour on JDK-15\n             }\n \n             //return output",
      "parent_sha": "ac025d6b178066d2c64baa76d929a7d34b11768e"
    }
  },
  {
    "oid": "d3c11307a16c050e04e1228b02fabbd0ff2bbaf3",
    "message": "General Refactoring",
    "date": "2024-08-21T15:52:37Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/d3c11307a16c050e04e1228b02fabbd0ff2bbaf3",
    "details": {
      "sha": "d7b91d66b28ab944c5ef02099d2e0f1b547aa59f",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/api/BCV.java",
      "status": "modified",
      "additions": 11,
      "deletions": 11,
      "changes": 22,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/d3c11307a16c050e04e1228b02fabbd0ff2bbaf3/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fapi%2FBCV.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/d3c11307a16c050e04e1228b02fabbd0ff2bbaf3/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fapi%2FBCV.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fapi%2FBCV.java?ref=d3c11307a16c050e04e1228b02fabbd0ff2bbaf3",
      "patch": "@@ -96,7 +96,7 @@ public static Class<?> loadClassIntoClassLoader(ClassNode cn)\n             \n             return cl.loadClass(cn.name);\n         } catch (Exception classLoadException) {\n-            the.bytecode.club.bytecodeviewer.BytecodeViewer.handleException(classLoadException);\n+            BytecodeViewer.handleException(classLoadException);\n         }\n         \n         return null;\n@@ -134,14 +134,14 @@ public static List<Class<?>> loadClassesIntoClassLoader()\n                     try {\n                         ret.add(cl.loadClass(className));\n                     } catch (Exception classLoadException) {\n-                        the.bytecode.club.bytecodeviewer.BytecodeViewer.handleException(classLoadException);\n+                        BytecodeViewer.handleException(classLoadException);\n                     }\n                 }\n             }\n \n             return ret;\n         } catch (Exception e) {\n-            the.bytecode.club.bytecodeviewer.BytecodeViewer.handleException(e);\n+            BytecodeViewer.handleException(e);\n         }\n         return null;\n     }\n@@ -160,7 +160,7 @@ public static void createNewClassNodeLoaderInstance() {\n      * @param plugin the file of the plugin\n      */\n     public static void startPlugin(File plugin) {\n-        the.bytecode.club.bytecodeviewer.BytecodeViewer.startPlugin(plugin);\n+        BytecodeViewer.startPlugin(plugin);\n     }\n \n     /**\n@@ -170,7 +170,7 @@ public static void startPlugin(File plugin) {\n      * @param recentFiles if it should save to the recent files menu.\n      */\n     public static void openFiles(File[] files, boolean recentFiles) {\n-        the.bytecode.club.bytecodeviewer.BytecodeViewer.openFiles(files, recentFiles);\n+        BytecodeViewer.openFiles(files, recentFiles);\n     }\n \n     /**\n@@ -179,7 +179,7 @@ public static void openFiles(File[] files, boolean recentFiles) {\n      * @return The opened class node or a null if nothing is opened\n      */\n     public static ClassNode getCurrentlyOpenedClassNode() {\n-        return the.bytecode.club.bytecodeviewer.BytecodeViewer.getCurrentlyOpenedClassNode();\n+        return BytecodeViewer.getCurrentlyOpenedClassNode();\n     }\n     \n     /**\n@@ -224,7 +224,7 @@ public static String decompileCurrentlyOpenedClassNode(Decompiler decompiler)\n      * @return the ClassNode\n      */\n     public static ClassNode getClassNode(String name) {\n-        return the.bytecode.club.bytecodeviewer.BytecodeViewer\n+        return BytecodeViewer\n                 .blindlySearchForClassNode(name);\n     }\n \n@@ -234,7 +234,7 @@ public static ClassNode getClassNode(String name) {\n      * @return the loaded classes\n      */\n     public static List<ClassNode> getLoadedClasses() {\n-        return the.bytecode.club.bytecodeviewer.BytecodeViewer\n+        return BytecodeViewer\n                 .getLoadedClasses();\n     }\n \n@@ -254,7 +254,7 @@ public static void insertHook(BytecodeHook hook) {\n      * @param ask if it should ask the user about resetting the workspace\n      */\n     public static void resetWorkSpace(boolean ask) {\n-        the.bytecode.club.bytecodeviewer.BytecodeViewer.resetWorkspace(ask);\n+        BytecodeViewer.resetWorkspace(ask);\n     }\n \n     /**\n@@ -264,7 +264,7 @@ public static void resetWorkSpace(boolean ask) {\n      * @param busy if it should display the busy icon or not\n      */\n     public static void setBusy(boolean busy) {\n-        the.bytecode.club.bytecodeviewer.BytecodeViewer.updateBusyStatus(busy);\n+        BytecodeViewer.updateBusyStatus(busy);\n     }\n \n     /**\n@@ -273,7 +273,7 @@ public static void setBusy(boolean busy) {\n      * @param message the message you want to display\n      */\n     public static void showMessage(String message) {\n-        the.bytecode.club.bytecodeviewer.BytecodeViewer.showMessage(message);\n+        BytecodeViewer.showMessage(message);\n     }\n \n     /**",
      "parent_sha": "eb09cebf045544f06370e15f4fc8550479eb3725"
    }
  },
  {
    "oid": "cc1dbeceb7f35ca6c2e9f15f262683020f29a6d0",
    "message": "Example String Decrypter Update",
    "date": "2022-01-18T01:35:13Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/cc1dbeceb7f35ca6c2e9f15f262683020f29a6d0",
    "details": {
      "sha": "e185a4485fa8bd768934322fd940563669849f35",
      "filename": "plugins/java/ExampleStringDecrypter.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/cc1dbeceb7f35ca6c2e9f15f262683020f29a6d0/plugins%2Fjava%2FExampleStringDecrypter.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/cc1dbeceb7f35ca6c2e9f15f262683020f29a6d0/plugins%2Fjava%2FExampleStringDecrypter.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/plugins%2Fjava%2FExampleStringDecrypter.java?ref=cc1dbeceb7f35ca6c2e9f15f262683020f29a6d0",
      "patch": "@@ -14,7 +14,7 @@ public class ExampleStringDecrypter extends Plugin {\n \n     @Override\n     public void execute(List<ClassNode> classNodesList) {\n-        PluginConsole gui = new PluginConsole(\"Example String Decrypter\");\n+        PluginConsole gui = new PluginConsole(\"Example String Decrypter Java Edition\");\n \n         MultipleChoiceDialog dialog = new MultipleChoiceDialog(\"Bytecode Viewer - WARNING\",\n                 \"WARNING: This will load the classes into the JVM and execute the initialize function\"",
      "parent_sha": "bc7390a82ed3b2f01154fa25c0e8909c5c4e8354"
    }
  },
  {
    "oid": "daf870572ccd0efc593a6da2eaece73cbc10a12c",
    "message": "Fix quick search foreground color for different themes.",
    "date": "2022-03-13T21:46:53Z",
    "url": "https://github.com/Konloch/bytecode-viewer/commit/daf870572ccd0efc593a6da2eaece73cbc10a12c",
    "details": {
      "sha": "682ca3f7bc213c1000c7edf88f22326357b290df",
      "filename": "src/main/java/the/bytecode/club/bytecodeviewer/gui/resourcelist/ResourceListPane.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/Konloch/bytecode-viewer/blob/daf870572ccd0efc593a6da2eaece73cbc10a12c/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourcelist%2FResourceListPane.java",
      "raw_url": "https://github.com/Konloch/bytecode-viewer/raw/daf870572ccd0efc593a6da2eaece73cbc10a12c/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourcelist%2FResourceListPane.java",
      "contents_url": "https://api.github.com/repos/Konloch/bytecode-viewer/contents/src%2Fmain%2Fjava%2Fthe%2Fbytecode%2Fclub%2Fbytecodeviewer%2Fgui%2Fresourcelist%2FResourceListPane.java?ref=daf870572ccd0efc593a6da2eaece73cbc10a12c",
      "patch": "@@ -104,7 +104,7 @@ public ResourceListPane()\n         \n         tree.setRootVisible(false);\n         tree.setShowsRootHandles(true);\n-        quickSearch.setForeground(Color.gray);\n+        quickSearch.setForeground(quickSearch.getDisabledTextColor());\n     \n         attachTreeListeners();\n         attachQuickSearchListeners();\n@@ -524,7 +524,7 @@ public void focusGained(final FocusEvent arg0)\n                 if (quickSearch.getText().equals(TranslatedStrings.QUICK_FILE_SEARCH_NO_FILE_EXTENSION.toString()))\n                 {\n                     quickSearch.setText(\"\");\n-                    quickSearch.setForeground(Color.black);\n+                    quickSearch.setForeground(quickSearch.getSelectedTextColor());\n                 }\n             }\n         \n@@ -534,7 +534,7 @@ public void focusLost(final FocusEvent arg0)\n                 if (quickSearch.getText().isEmpty())\n                 {\n                     quickSearch.setText(TranslatedStrings.QUICK_FILE_SEARCH_NO_FILE_EXTENSION.toString());\n-                    quickSearch.setForeground(Color.gray);\n+                    quickSearch.setForeground(quickSearch.getDisabledTextColor());\n                 }\n             }\n         });",
      "parent_sha": "d15aa0a594f0a254278347ee23190d3195795c97"
    }
  }
]