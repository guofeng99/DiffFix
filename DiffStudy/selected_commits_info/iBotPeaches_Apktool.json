[
  {
    "oid": "3a33bfc48f22800ce7083d618deac9502fb7c068",
    "message": "fix: allow detection of aapt2 from old SDK builds",
    "date": "2018-04-19T21:09:44Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/3a33bfc48f22800ce7083d618deac9502fb7c068",
    "details": {
      "sha": "ed305af1029bb1d183728345c3810a8d610e8f9e",
      "filename": "brut.j.util/src/main/java/brut/util/AaptManager.java",
      "status": "modified",
      "additions": 13,
      "deletions": 7,
      "changes": 20,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/3a33bfc48f22800ce7083d618deac9502fb7c068/brut.j.util%2Fsrc%2Fmain%2Fjava%2Fbrut%2Futil%2FAaptManager.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/3a33bfc48f22800ce7083d618deac9502fb7c068/brut.j.util%2Fsrc%2Fmain%2Fjava%2Fbrut%2Futil%2FAaptManager.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.j.util%2Fsrc%2Fmain%2Fjava%2Fbrut%2Futil%2FAaptManager.java?ref=3a33bfc48f22800ce7083d618deac9502fb7c068",
      "patch": "@@ -82,6 +82,18 @@ public static String getAaptBinaryName(Integer version) {\n         return \"aapt\" + (version == 2 ? \"2\" : \"\");\n     }\n \n+    public static int getAppVersionFromString(String version) throws BrutException {\n+        if (version.startsWith(\"Android Asset Packaging Tool (aapt) 2:\")) {\n+            return 2;\n+        } else if (version.startsWith(\"Android Asset Packaging Tool (aapt) 2.\")) {\n+            return 2; // Prior to Android SDK 26.0.2\n+        } else if (version.startsWith(\"Android Asset Packaging Tool, v0.\")) {\n+            return 1;\n+        }\n+\n+        throw new BrutException(\"aapt version could not be identified: \" + version);\n+    }\n+\n     public static int getApptVersion(File aapt) throws BrutException {\n         if (!aapt.isFile()) {\n             throw new BrutException(\"Could not identify aapt binary as executable.\");\n@@ -98,12 +110,6 @@ public static int getApptVersion(File aapt) throws BrutException {\n             throw new BrutException(\"Could not execute aapt binary at location: \" + aapt.getAbsolutePath());\n         }\n \n-        if (version.startsWith(\"Android Asset Packaging Tool (aapt) 2:\")) {\n-            return 2;\n-        } else if (version.startsWith(\"Android Asset Packaging Tool, v0.\")) {\n-            return 1;\n-        }\n-\n-        throw new BrutException(\"aapt version could not be identified: \" + version);\n+        return getAppVersionFromString(version);\n     }\n }",
      "parent_sha": "684e96a4fe4d6a9f22860da1da68bd5252dcd029"
    }
  },
  {
    "oid": "e4acfb34a20fbe3901c533a9613f7c8b567ad767",
    "message": "Do not decode res-references as <item />.\n\nSo now they're decoded as e.g. <string name=\"test\">@android:string/ok</string> instead of <item type=\"string\" name=\"test\">@android:string/ok</item>.",
    "date": "2011-05-02T01:35:03Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/e4acfb34a20fbe3901c533a9613f7c8b567ad767",
    "details": {
      "sha": "c28d11c1533aeaaabaf216113487ebc737c11f2c",
      "filename": "apktool-lib/src/main/java/brut/androlib/res/data/value/ResScalarValue.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/e4acfb34a20fbe3901c533a9613f7c8b567ad767/apktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResScalarValue.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/e4acfb34a20fbe3901c533a9613f7c8b567ad767/apktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResScalarValue.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/apktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResScalarValue.java?ref=e4acfb34a20fbe3901c533a9613f7c8b567ad767",
      "patch": "@@ -37,7 +37,7 @@ protected ResScalarValue(String type) {\n     public void serializeToXml(XmlSerializer serializer, ResResource res)\n             throws IOException, AndrolibException {\n         String type = res.getResSpec().getType().getName();\n-        boolean item = ! type.equals(mType);\n+        boolean item = ! \"reference\".equals(mType) && ! type.equals(mType);\n         String tagName = item ? \"item\" : type;\n         \n         serializer.startTag(null, tagName);",
      "parent_sha": "d86909707b1698ee2e239653634cedcfa7503f64"
    }
  },
  {
    "oid": "d8b774864c1f9504c91bfa5fceb50cf9bc10dd79",
    "message": "fix comment on getAaptBinaryFile()",
    "date": "2013-03-29T19:45:54Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/d8b774864c1f9504c91bfa5fceb50cf9bc10dd79",
    "details": {
      "sha": "888a3bc1620c31c8a850b17a923c47b3dc6e58c6",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/AndrolibResources.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/d8b774864c1f9504c91bfa5fceb50cf9bc10dd79/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/d8b774864c1f9504c91bfa5fceb50cf9bc10dd79/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java?ref=d8b774864c1f9504c91bfa5fceb50cf9bc10dd79",
      "patch": "@@ -761,7 +761,8 @@ private File getFrameworkDir() throws AndrolibException {\n \t * Using a prebuilt aapt and forcing its use, allows us to prevent bugs from older aapt's\n      * along with having a finer control over the build procedure.\n      *\n-     * Aapt can still be over\n+     * Aapt can still be overridden via --aapt/-a on build, but specific features will be disabled\n+     *\n \t * @url https://github.com/iBotPeaches/platform_frameworks_base\n \t * @return\n \t * @throws AndrolibException",
      "parent_sha": "0c5871687f2d030e1da0462509a31b4f210c3d35"
    }
  },
  {
    "oid": "008e1004c2d2ebc572a3cb12e5bf2a4ae48f22df",
    "message": "fixes #45",
    "date": "2012-10-08T19:42:10Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/008e1004c2d2ebc572a3cb12e5bf2a4ae48f22df",
    "details": {
      "sha": "33e7ba1ccaa054166610b2a36bb4368c7e12838b",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/decoder/AXmlResourceParser.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/008e1004c2d2ebc572a3cb12e5bf2a4ae48f22df/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FAXmlResourceParser.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/008e1004c2d2ebc572a3cb12e5bf2a4ae48f22df/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FAXmlResourceParser.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FAXmlResourceParser.java?ref=008e1004c2d2ebc572a3cb12e5bf2a4ae48f22df",
      "patch": "@@ -770,7 +770,7 @@ private final int findAttribute(String namespace, String attribute) {\n         int uri = (namespace != null)\n                 ? m_strings.find(namespace)\n                 : -1;\n-        for (int o = 0; o != m_attributes.length; ++o) {\n+        for (int o = 0; o != m_attributes.length; o+=ATTRIBUTE_LENGHT) {\n             if (name == m_attributes[o + ATTRIBUTE_IX_NAME]\n                     && (uri == -1 || uri == m_attributes[o + ATTRIBUTE_IX_NAMESPACE_URI])) {\n                 return o / ATTRIBUTE_LENGHT;",
      "parent_sha": "f551710f51855e620a93f60b33ae902f95a38fed"
    }
  },
  {
    "oid": "e7e874779207ffa64b3a78e53c90849d78b13bc8",
    "message": "Exit application only after version command",
    "date": "2017-07-05T15:06:34Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/e7e874779207ffa64b3a78e53c90849d78b13bc8",
    "details": {
      "sha": "cac0c81c127cb3dba59fcc21d64868d44c22f59b",
      "filename": "brut.apktool/apktool-cli/src/main/java/brut/apktool/Main.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/e7e874779207ffa64b3a78e53c90849d78b13bc8/brut.apktool%2Fapktool-cli%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fapktool%2FMain.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/e7e874779207ffa64b3a78e53c90849d78b13bc8/brut.apktool%2Fapktool-cli%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fapktool%2FMain.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-cli%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fapktool%2FMain.java?ref=e7e874779207ffa64b3a78e53c90849d78b13bc8",
      "patch": "@@ -99,6 +99,7 @@ public static void main(String[] args) throws IOException, InterruptedException,\n         if (cmdFound == false) {\n             if (commandLine.hasOption(\"version\")) {\n                 _version();\n+                System.exit(0);\n             } else {\n                 usage();\n             }\n@@ -192,7 +193,6 @@ private static void cmdDecode(CommandLine cli) throws AndrolibException {\n                 decoder.close();\n             } catch (IOException ignored) {}\n         }\n-        System.exit(0);\n     }\n \n     private static void cmdBuild(CommandLine cli) throws BrutException {",
      "parent_sha": "fce273adaf2faa4fd7ed73a05241b93285ae74f1"
    }
  },
  {
    "oid": "5272ae24b3261a9b0bb12a53fd5aa41bb2f0889a",
    "message": "fix issue-2251",
    "date": "2019-12-19T10:39:04Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/5272ae24b3261a9b0bb12a53fd5aa41bb2f0889a",
    "details": {
      "sha": "4126f020fc4c722c0c54d31e05f85e89a7d16c1b",
      "filename": "brut.j.util/src/main/java/brut/util/Jar.java",
      "status": "modified",
      "additions": 17,
      "deletions": 4,
      "changes": 21,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/5272ae24b3261a9b0bb12a53fd5aa41bb2f0889a/brut.j.util%2Fsrc%2Fmain%2Fjava%2Fbrut%2Futil%2FJar.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/5272ae24b3261a9b0bb12a53fd5aa41bb2f0889a/brut.j.util%2Fsrc%2Fmain%2Fjava%2Fbrut%2Futil%2FJar.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.j.util%2Fsrc%2Fmain%2Fjava%2Fbrut%2Futil%2FJar.java?ref=5272ae24b3261a9b0bb12a53fd5aa41bb2f0889a",
      "patch": "@@ -16,15 +16,21 @@\n  */\n package brut.util;\n \n-import brut.common.BrutException;\n+import org.apache.commons.io.IOUtils;\n \n-import java.io.*;\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.Map;\n import java.util.Set;\n+import java.util.concurrent.ThreadLocalRandom;\n \n-import org.apache.commons.io.IOUtils;\n+import brut.common.BrutException;\n \n /**\n  * @author Ryszard Wi\u015bniewski <brut.alll@gmail.com>\n@@ -79,7 +85,14 @@ public static File extractToTmp(String resourcePath, String tmpPrefix, Class cla\n             if (in == null) {\n                 throw new FileNotFoundException(resourcePath);\n             }\n-            File fileOut = File.createTempFile(tmpPrefix, null);\n+            long n = ThreadLocalRandom.current().nextLong();\n+            if (n == Long.MIN_VALUE) {\n+                n = 0;      // corner case\n+            } else {\n+                n = Math.abs(n);\n+            }\n+            String suffix = Long.toString(n) + \".tmp\";\n+            File fileOut = File.createTempFile(tmpPrefix, suffix);\n             fileOut.deleteOnExit();\n             OutputStream out = new FileOutputStream(fileOut);\n             IOUtils.copy(in, out);",
      "parent_sha": "0143dcfd24a8ae8a5a44f6a77489128f4c777f73"
    }
  },
  {
    "oid": "6475ef8a774cb708eb98e2712838de65a46ac5e7",
    "message": "ignore errors during Manifest alterations, to prevent crashing of apktool",
    "date": "2013-06-12T15:29:16Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/6475ef8a774cb708eb98e2712838de65a46ac5e7",
    "details": {
      "sha": "95719e39cce6ff1d4989591c382b4e8516bfa4e6",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/AndrolibResources.java",
      "status": "modified",
      "additions": 3,
      "deletions": 6,
      "changes": 9,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/6475ef8a774cb708eb98e2712838de65a46ac5e7/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/6475ef8a774cb708eb98e2712838de65a46ac5e7/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java?ref=6475ef8a774cb708eb98e2712838de65a46ac5e7",
      "patch": "@@ -182,8 +182,7 @@ public void remove_application_debug(String filePath)\n \t\t\tStreamResult result = new StreamResult(new File(filePath));\n \t\t\ttransformer.transform(source, result);\n \n-        } catch (SAXException | ParserConfigurationException | IOException | TransformerException ex) {\n-            throw new AndrolibException(ex);\n+        } catch (SAXException | ParserConfigurationException | IOException | TransformerException ignored) {\n         }\n     }\n \n@@ -226,8 +225,7 @@ public void adjust_package_manifest(ResTable resTable, String filePath)\n \t\t\t\tStreamResult result = new StreamResult(new File(filePath));\n \t\t\t\ttransformer.transform(source, result);\n \n-            } catch (SAXException | ParserConfigurationException | IOException | TransformerException ex) {\n-                throw new AndrolibException(ex);\n+            } catch (SAXException | ParserConfigurationException | IOException | TransformerException ignored) {\n             }\n         }\n \t}\n@@ -268,8 +266,7 @@ public void remove_manifest_versions(String filePath)\n                 StreamResult result = new StreamResult(new File(filePath));\n                 transformer.transform(source, result);\n \n-            } catch (SAXException | ParserConfigurationException | IOException | TransformerException ex) {\n-                throw new AndrolibException(ex);\n+            } catch (SAXException | ParserConfigurationException | IOException | TransformerException ignored) {\n             }\n         }\n     }",
      "parent_sha": "6df03fc81c06ce8018376a9b32023ba791790bbf"
    }
  },
  {
    "oid": "532bdaf74fca0247280b46a089df35fd8cab47c7",
    "message": "ResAttrFactory.factory(): returning ResAttr instead of ResValue.",
    "date": "2010-03-25T09:06:18Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/532bdaf74fca0247280b46a089df35fd8cab47c7",
    "details": {
      "sha": "6538c7020849562762d697b32d4f1822ff18a136",
      "filename": "src/brut/androlib/res/data/value/ResAttrFactory.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/532bdaf74fca0247280b46a089df35fd8cab47c7/src%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResAttrFactory.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/532bdaf74fca0247280b46a089df35fd8cab47c7/src%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResAttrFactory.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/src%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResAttrFactory.java?ref=532bdaf74fca0247280b46a089df35fd8cab47c7",
      "patch": "@@ -23,7 +23,7 @@\n  * @author Ryszard Wi\u015bniewski <brut.alll@gmail.com>\n  */\n public class ResAttrFactory {\n-    static ResValue factory(ResReferenceValue parent,\n+    static ResAttr factory(ResReferenceValue parent,\n             Map<ResReferenceValue, ResScalarValue> items) {\n         int type = ((ResIntValue) items.values().iterator().next()).getValue();\n ",
      "parent_sha": "7a5223cda170580c35812286f9a9d3adbc9b9c4e"
    }
  },
  {
    "oid": "d5d03fe1e4ad4b4dcaad49323615cc0c6d40d870",
    "message": "cleanup confusing logic - ntop001",
    "date": "2013-12-09T12:23:21Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/d5d03fe1e4ad4b4dcaad49323615cc0c6d40d870",
    "details": {
      "sha": "93ac42b0aeb5c62a00962a7d5e798170bf3e6024",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/ApkDecoder.java",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/d5d03fe1e4ad4b4dcaad49323615cc0c6d40d870/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FApkDecoder.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/d5d03fe1e4ad4b4dcaad49323615cc0c6d40d870/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FApkDecoder.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FApkDecoder.java?ref=d5d03fe1e4ad4b4dcaad49323615cc0c6d40d870",
      "patch": "@@ -102,8 +102,7 @@ public void decode() throws AndrolibException, IOException {\n             ZipArchiveEntry ze = zef.getEntry(\"resources.arsc\");\n             if (ze != null) {\n                 int compression = ze.getMethod();\n-                mCompressResources = (compression != ZipEntry.STORED)\n-                        && (compression == ZipEntry.DEFLATED);\n+                mCompressResources = (compression == ZipEntry.DEFLATED);\n             }\n             zef.close();\n ",
      "parent_sha": "259ff5ef0110ab77f8ec7f859e57cad5dbb41f83"
    }
  },
  {
    "oid": "6576748f6bbd320bf5d0f274f2662ad83e3dbaf1",
    "message": "Fixed an error, when there are missing resources in type, which does not have default config.",
    "date": "2010-09-01T17:23:13Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/6576748f6bbd320bf5d0f274f2662ad83e3dbaf1",
    "details": {
      "sha": "2719ab343bc98b5b6524dc3abcfc54bec2f69427",
      "filename": "src/brut/androlib/res/decoder/ARSCDecoder.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/6576748f6bbd320bf5d0f274f2662ad83e3dbaf1/src%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/6576748f6bbd320bf5d0f274f2662ad83e3dbaf1/src%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/src%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java?ref=6576748f6bbd320bf5d0f274f2662ad83e3dbaf1",
      "patch": "@@ -302,7 +302,7 @@ private void addMissingResSpecs() throws AndrolibException {\n \n             ResValue value = new ResBoolValue(false);\n             ResResource res = new ResResource(\n-                mPkg.getConfig(new ResConfigFlags()), spec, value);\n+                mPkg.getOrCreateConfig(new ResConfigFlags()), spec, value);\n             mPkg.addResource(res);\n             mConfig.addResource(res);\n             spec.addResource(res);",
      "parent_sha": "6a75830a4ff0f9ee6463f7c4e483cc5fb0b35b7d"
    }
  },
  {
    "oid": "da2b21472e8db0019c48977ab77b0acabd0502c1",
    "message": "ResValueFactory: added ResIdValue recognition.",
    "date": "2010-03-23T22:17:40Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/da2b21472e8db0019c48977ab77b0acabd0502c1",
    "details": {
      "sha": "489e3e4a85cc3e74f3897e55a851d8ac0b8348f2",
      "filename": "src/brut/androlib/res/data/value/ResValueFactory.java",
      "status": "modified",
      "additions": 10,
      "deletions": 2,
      "changes": 12,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/da2b21472e8db0019c48977ab77b0acabd0502c1/src%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResValueFactory.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/da2b21472e8db0019c48977ab77b0acabd0502c1/src%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResValueFactory.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/src%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResValueFactory.java?ref=da2b21472e8db0019c48977ab77b0acabd0502c1",
      "patch": "@@ -65,7 +65,11 @@ public ResScalarValue factory(int type, int value)\n         throw new AndrolibException(\"Invalid value type: \"+ type);\n     }\n     \n-    public ResValue factory(JniEntry entry)\n+    public ResValue factory(JniEntry entry) throws AndrolibException {\n+        return factory(entry, false);\n+    }\n+\n+    private ResValue factory(JniEntry entry, boolean bagItem)\n             throws AndrolibException {\n         switch (entry.valueType) {\n             case TYPE_BAG:\n@@ -75,6 +79,10 @@ public ResValue factory(JniEntry entry)\n             case TypedValue.TYPE_ATTRIBUTE:\n                 return newReference(entry.intVal, true);\n             case TypedValue.TYPE_INT_BOOLEAN:\n+                if (! bagItem && ! \"bool\".equals(entry.type)\n+                        && ! entry.boolVal) {\n+                    return new ResIdValue();\n+                }\n                 return new ResBoolValue(entry.boolVal);\n             case TypedValue.TYPE_INT_DEC:\n             case TypedValue.TYPE_INT_HEX:\n@@ -137,7 +145,7 @@ private Map<ResReferenceValue, ResScalarValue> convertItems(\n         for (int i = 0; i < jniItems.length; i++) {\n             JniBagItem jniItem = jniItems[i];\n             items.put(newReference(jniItem.resID),\n-                (ResScalarValue) factory(jniItem.entry));\n+                (ResScalarValue) factory(jniItem.entry, true));\n         }\n         return items;\n     }",
      "parent_sha": "df39ed548863c7a87880e58784def76d5afaaa44"
    }
  },
  {
    "oid": "604b15c1cca7c87d57a0bc2635bfcde996d4c5a2",
    "message": "ResFileDecoder: moved exception catching to outer decode() method, so it can handle decoders exceptions.",
    "date": "2010-08-27T19:04:36Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/604b15c1cca7c87d57a0bc2635bfcde996d4c5a2",
    "details": {
      "sha": "79b243997104441a4b9462325d7dd4844ab38dd1",
      "filename": "src/brut/androlib/res/decoder/ResFileDecoder.java",
      "status": "modified",
      "additions": 21,
      "deletions": 23,
      "changes": 44,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/604b15c1cca7c87d57a0bc2635bfcde996d4c5a2/src%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FResFileDecoder.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/604b15c1cca7c87d57a0bc2635bfcde996d4c5a2/src%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FResFileDecoder.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/src%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FResFileDecoder.java?ref=604b15c1cca7c87d57a0bc2635bfcde996d4c5a2",
      "patch": "@@ -54,23 +54,29 @@ public void decode(ResResource res, Directory inDir, Directory outDir)\n             outFileName = outResName + ext;\n         }\n \n-        if (typeName.equals(\"raw\")) {\n-            decode(inDir, inFileName, outDir, outFileName, \"raw\");\n-            return;\n-        }\n-        if (typeName.equals(\"drawable\")) {\n-            if (inFileName.toLowerCase().endsWith(\".9.png\")) {\n-                outFileName = outResName + \".9\" + ext;\n-                decode(inDir, inFileName, outDir, outFileName, \"9patch\");\n-                return;\n-            }\n-            if (! ext.equals(\".xml\")) {\n+        try {\n+            if (typeName.equals(\"raw\")) {\n                 decode(inDir, inFileName, outDir, outFileName, \"raw\");\n                 return;\n             }\n-        }\n+            if (typeName.equals(\"drawable\")) {\n+                if (inFileName.toLowerCase().endsWith(\".9.png\")) {\n+                    outFileName = outResName + \".9\" + ext;\n+                    decode(inDir, inFileName, outDir, outFileName, \"9patch\");\n+                    return;\n+                }\n+                if (! ext.equals(\".xml\")) {\n+                    decode(inDir, inFileName, outDir, outFileName, \"raw\");\n+                    return;\n+                }\n+            }\n \n-        decode(inDir, inFileName, outDir, outFileName, \"xml\");\n+            decode(inDir, inFileName, outDir, outFileName, \"xml\");\n+        } catch (AndrolibException ex) {\n+            LOGGER.log(Level.SEVERE, String.format(\n+                \"Could not decode file \\\"%s\\\" to \\\"%s\\\"\",\n+                inFileName, outFileName), ex);\n+        }\n     }\n \n     public void decode(Directory inDir, String inFileName, Directory outDir,\n@@ -81,18 +87,10 @@ public void decode(Directory inDir, String inFileName, Directory outDir,\n             mDecoders.decode(in, out, decoder);\n             in.close();\n             out.close();\n-        } catch (AndrolibException ex) {\n-            LOGGER.log(Level.SEVERE, String.format(\n-                \"Could not decode file \\\"%s\\\" to \\\"%s\\\"\",\n-                inFileName, outFileName), ex);\n         } catch (IOException ex) {\n-            LOGGER.log(Level.SEVERE, String.format(\n-                \"Could not decode file \\\"%s\\\" to \\\"%s\\\"\",\n-                inFileName, outFileName), ex);\n+            throw new AndrolibException(ex);\n         } catch (DirectoryException ex) {\n-            LOGGER.log(Level.SEVERE, String.format(\n-                \"Could not decode file \\\"%s\\\" to \\\"%s\\\"\",\n-                inFileName, outFileName), ex);\n+            throw new AndrolibException(ex);\n         }\n     }\n ",
      "parent_sha": "28186f8d22e2384fa437857a0558dbb1ff942c5e"
    }
  },
  {
    "oid": "379e4aa74cf106551162fa2dd3cdea78e4a03dff",
    "message": "ResStringValue::encodeAsResXmlValue(): don't enumerate non-pos substs.\n\nIt already sets formatted=\"false\", so enumeration isn't necessary.",
    "date": "2011-12-02T01:57:15Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/379e4aa74cf106551162fa2dd3cdea78e4a03dff",
    "details": {
      "sha": "c356e70d524b515d5565dd3f3fdb8b5fcd451853",
      "filename": "apktool-lib/src/main/java/brut/androlib/res/data/value/ResStringValue.java",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/379e4aa74cf106551162fa2dd3cdea78e4a03dff/apktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResStringValue.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/379e4aa74cf106551162fa2dd3cdea78e4a03dff/apktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResStringValue.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/apktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResStringValue.java?ref=379e4aa74cf106551162fa2dd3cdea78e4a03dff",
      "patch": "@@ -42,8 +42,7 @@ public String encodeAsResXmlAttr() {\n \n     @Override\n     public String encodeAsResXmlValue() {\n-        return ResXmlEncoders.enumerateNonPositionalSubstitutions(\n-                ResXmlEncoders.encodeAsXmlValue(mRawValue));\n+        return ResXmlEncoders.encodeAsXmlValue(mRawValue);\n     }\n \n     @Override",
      "parent_sha": "4a0febd8627f446993912cb8022ba4702270ee89"
    }
  },
  {
    "oid": "15c4f333a5872b30b6df67a584d8aab9901b336f",
    "message": "Correctly decode arrays.xml\n\n - #1453\n - temporarily cast unknown enum (0) to ResArray",
    "date": "2017-05-24T12:09:05Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/15c4f333a5872b30b6df67a584d8aab9901b336f",
    "details": {
      "sha": "875142b02f2433148b67b4c673f8b48cacd72efc",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/data/value/ResValueFactory.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/15c4f333a5872b30b6df67a584d8aab9901b336f/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResValueFactory.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/15c4f333a5872b30b6df67a584d8aab9901b336f/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResValueFactory.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResValueFactory.java?ref=15c4f333a5872b30b6df67a584d8aab9901b336f",
      "patch": "@@ -90,7 +90,8 @@ public ResBagValue bagFactory(int parent, Duo<Integer, ResScalarValue>[] items)\n         if (key == ResAttr.BAG_KEY_ATTR_TYPE) {\n             return ResAttr.factory(parentVal, items, this, mPackage);\n         }\n-        if (key == ResArrayValue.BAG_KEY_ARRAY_START) {\n+        // Android O Preview added an unknown enum for ResTable_map. This is hardcoded as 0 for now.\n+        if (key == ResArrayValue.BAG_KEY_ARRAY_START || key == 0) {\n             return new ResArrayValue(parentVal, items);\n         }\n         if (key >= ResPluralsValue.BAG_KEY_PLURALS_START && key <= ResPluralsValue.BAG_KEY_PLURALS_END) {",
      "parent_sha": "0e6eaf9e67c34d2e001356621141b35633a98485"
    }
  },
  {
    "oid": "ef83dc2f04f4bfa7d7e68f37123ef428928e5b95",
    "message": "fix: don't assume a referent exists on ReferenceValue (#2926)",
    "date": "2022-11-08T11:56:05Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/ef83dc2f04f4bfa7d7e68f37123ef428928e5b95",
    "details": {
      "sha": "64e51f0c9f07e2d1ed81473374992f95c76732d4",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/data/value/ResEnumAttr.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/ef83dc2f04f4bfa7d7e68f37123ef428928e5b95/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResEnumAttr.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/ef83dc2f04f4bfa7d7e68f37123ef428928e5b95/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResEnumAttr.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResEnumAttr.java?ref=ef83dc2f04f4bfa7d7e68f37123ef428928e5b95",
      "patch": "@@ -71,7 +71,7 @@ private String decodeValue(int value) throws AndrolibException {\n                     break;\n                 }\n             }\n-            if (ref != null) {\n+            if (ref != null && !ref.referentIsNull()) {\n                 value2 = ref.getReferent().getName();\n                 mItemsCache.put(value, value2);\n             }",
      "parent_sha": "273842279a065117aa94568976920b3a9813247b"
    }
  },
  {
    "oid": "5a4ffe6ca0560be724a43d540d029726b9b2444c",
    "message": "fixed BuildAndDecodeTest, Thanks aspack",
    "date": "2013-01-18T12:39:48Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/5a4ffe6ca0560be724a43d540d029726b9b2444c",
    "details": {
      "sha": "fe54793a380489d4799d790f20c4b73904b50150",
      "filename": "brut.apktool/apktool-lib/src/test/java/brut/androlib/BuildAndDecodeTest.java",
      "status": "modified",
      "additions": 21,
      "deletions": 15,
      "changes": 36,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/5a4ffe6ca0560be724a43d540d029726b9b2444c/brut.apktool%2Fapktool-lib%2Fsrc%2Ftest%2Fjava%2Fbrut%2Fandrolib%2FBuildAndDecodeTest.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/5a4ffe6ca0560be724a43d540d029726b9b2444c/brut.apktool%2Fapktool-lib%2Fsrc%2Ftest%2Fjava%2Fbrut%2Fandrolib%2FBuildAndDecodeTest.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Ftest%2Fjava%2Fbrut%2Fandrolib%2FBuildAndDecodeTest.java?ref=5a4ffe6ca0560be724a43d540d029726b9b2444c",
      "patch": "@@ -33,17 +33,31 @@\n public class BuildAndDecodeTest {\n \n     @BeforeClass\n-    public static void beforeClass() throws BrutException, IOException {\n+    public static void beforeClass() throws Exception, BrutException {\r\n         sTmpDir = new ExtFile(OS.createTempDirectory());\n         sTestOrigDir = new ExtFile(sTmpDir, \"testapp-orig\");\n         sTestNewDir = new ExtFile(sTmpDir, \"testapp-new\");\n-        File testApk = new File(sTmpDir, \"testapp.apk\");\n-\n         LOGGER.info(\"Unpacking testapp...\");\n         TestUtils.copyResourceDir(BuildAndDecodeTest.class,\n                 \"brut/apktool/testapp/\", sTestOrigDir);\n+    }\r\n+\r\n+    @AfterClass\r\n+    public static void afterClass() throws BrutException {\r\n+        OS.rmdir(sTmpDir);\r\n+    }\r\n+\r\n+    @Test\r\n+    public void isAaptInstalledTest()  throws Exception {\r\n+        assertEquals(true, isAaptPresent());\r\n+    }\r\n+\r\n+    \r\n+    @Test\r\n+    public void encodeAndDecodeTest() throws BrutException, IOException {\r\n \n         LOGGER.info(\"Building testapp.apk...\");\n+        File testApk = new File(sTmpDir, \"testapp.apk\");\r\n         ExtFile blank = null;\n         new Androlib().build(sTestOrigDir, testApk, BuildAndDecodeTest.returnStock(),blank,\"\");\n \n@@ -53,10 +67,6 @@ public static void beforeClass() throws BrutException, IOException {\n         apkDecoder.decode();\n     }\n \n-    @AfterClass\n-    public static void afterClass() throws BrutException {\n-        OS.rmdir(sTmpDir);\n-    }\n \n     @Test\n     public void valuesArraysTest() throws BrutException {\n@@ -116,29 +126,25 @@ public void xmlReferencesTest() throws BrutException {\n         compareXmlFiles(\"res/xml/references.xml\");\n     }\n     \n-    @Test\n-    public void aaptPresent() throws BrutException {\n-    \tcheckIfAaptPresent();\n-    }\n-\n     @Test\n     public void qualifiersTest() throws BrutException {\n         compareValuesFiles(\"values-mcc004-mnc4-en-rUS-ldrtl-sw100dp-w200dp-h300dp\" +\n                 \"-xlarge-long-land-desk-night-xhdpi-finger-keyssoft-12key\" +\n                 \"-navhidden-dpad/strings.xml\");\n     }\n     \n-    private void checkIfAaptPresent() throws BrutException {\n+    private static boolean isAaptPresent()  throws Exception {\r\n+        boolean result = true;\r\n     \ttry\n     \t{            \n     \t\tProcess proc = Runtime.getRuntime().exec(\"aapt\");\n     \t\tBufferedReader br = new BufferedReader(new InputStreamReader(proc.getErrorStream()));\n     \t\tString line = null;\n     \t\twhile ( (line = br.readLine()) != null){}\n     \t} catch (Exception ex){\n-    \t\tSystem.out.println(\"Please install 'aapt' to your path. See project website for more information.\");\n-    \t\tthrow new BrutException(ex);\n+            result = false;\r\n     \t}\n+        return result;\r\n     }\n \n     private void compareValuesFiles(String path) throws BrutException {",
      "parent_sha": "0673c1e2dcbcaf37e1f5089b67234edd55f08c87"
    }
  },
  {
    "oid": "6af633590ab97cd716909cfb64c8a93499ca958b",
    "message": "AXmlResourceParser.getAttributeValue(): returning non-string values using TypedValue.coerceToString().",
    "date": "2010-03-23T16:00:42Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/6af633590ab97cd716909cfb64c8a93499ca958b",
    "details": {
      "sha": "7747addea61d4940e44a25fb85448ce757d626f5",
      "filename": "src/brut/androlib/res/decoder/AXmlResourceParser.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/6af633590ab97cd716909cfb64c8a93499ca958b/src%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FAXmlResourceParser.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/6af633590ab97cd716909cfb64c8a93499ca958b/src%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FAXmlResourceParser.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/src%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FAXmlResourceParser.java?ref=6af633590ab97cd716909cfb64c8a93499ca958b",
      "patch": "@@ -296,7 +296,7 @@ public String getAttributeValue(int index) {\n             return m_strings.getString(valueString);\n         }\n         int valueData = m_attributes[offset + ATTRIBUTE_IX_VALUE_DATA];\n-        return \"\";//TypedValue.coerceToString(valueType,valueData);\n+        return TypedValue.coerceToString(valueType, valueData);\n     }\n \n     public boolean getAttributeBooleanValue(int index, boolean defaultValue) {",
      "parent_sha": "795591f9353f0a08a42538ad532e9d0fad633803"
    }
  },
  {
    "oid": "50226e50c1a4e2c60a0547427bd9e637c2f35ef9",
    "message": "fix: support decoding application with duplicate res entries (#3252)",
    "date": "2023-08-05T16:21:42Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/50226e50c1a4e2c60a0547427bd9e637c2f35ef9",
    "details": {
      "sha": "1b49ed58b4b87a6d172a8d8e788a3e4c8078f251",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/decoder/ARSCDecoder.java",
      "status": "modified",
      "additions": 11,
      "deletions": 2,
      "changes": 13,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/50226e50c1a4e2c60a0547427bd9e637c2f35ef9/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/50226e50c1a4e2c60a0547427bd9e637c2f35ef9/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java?ref=50226e50c1a4e2c60a0547427bd9e637c2f35ef9",
      "patch": "@@ -328,7 +328,6 @@ private ResType readTableType() throws IOException, AndrolibException {\n         return mType;\n     }\n \n-\n     private EntryData readEntryData() throws IOException, AndrolibException {\n         short size = mIn.readShort();\n         if (size < 0) {\n@@ -342,6 +341,12 @@ private EntryData readEntryData() throws IOException, AndrolibException {\n         }\n \n         ResValue value = (flags & ENTRY_FLAG_COMPLEX) == 0 ? readValue() : readComplexEntry();\n+        // #2824 - In some applications the res entries are duplicated with the 2nd being malformed.\n+        // AOSP skips this, so we will do the same.\n+        if (value == null) {\n+            return null;\n+        }\n+\n         EntryData entryData = new EntryData();\n         entryData.mFlags = flags;\n         entryData.mSpecNamesId = specNamesId;\n@@ -416,7 +421,11 @@ private ResBagValue readComplexEntry() throws IOException, AndrolibException {\n     }\n \n     private ResIntBasedValue readValue() throws IOException, AndrolibException {\n-\t\tmIn.skipCheckShort((short) 8); // size\n+\t\tint size = mIn.readShort();\n+        if (size < 8) {\n+            return null;\n+        }\n+\n \t\tmIn.skipCheckByte((byte) 0); // zero\n         byte type = mIn.readByte();\n         int data = mIn.readInt();",
      "parent_sha": "342ff67a4cbc009e0a4954e4fc2fc3760344d014"
    }
  },
  {
    "oid": "fadb4e33532df98e5e3390b0b5451cbedcd882fe",
    "message": "Main::setupLogging(): remove all default handlers instead of first one.",
    "date": "2011-05-03T12:58:25Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/fadb4e33532df98e5e3390b0b5451cbedcd882fe",
    "details": {
      "sha": "0963c013d915f46bcbd7599a2e2aee06f0e9dc9c",
      "filename": "apktool-cli/src/main/java/brut/apktool/Main.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/fadb4e33532df98e5e3390b0b5451cbedcd882fe/apktool-cli%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fapktool%2FMain.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/fadb4e33532df98e5e3390b0b5451cbedcd882fe/apktool-cli%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fapktool%2FMain.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/apktool-cli%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fapktool%2FMain.java?ref=fadb4e33532df98e5e3390b0b5451cbedcd882fe",
      "patch": "@@ -255,8 +255,10 @@ private static void usage() {\n \n     private static void setupLogging(boolean verbose) {\n         Logger logger = Logger.getLogger(\"\");\n+        for (Handler handler : logger.getHandlers()) {\n+            logger.removeHandler(handler);\n+        }\n         Handler handler = new ConsoleHandler();\n-        logger.removeHandler(logger.getHandlers()[0]);\n         logger.addHandler(handler);\n \n         if (verbose) {",
      "parent_sha": "2ac33fd5e7385dae9d966417b3d5bc89da500ac1"
    }
  },
  {
    "oid": "0bb217ac88fadb728b9fd705838591dd5dd55571",
    "message": "[skip] code spacing",
    "date": "2014-05-12T22:00:49Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/0bb217ac88fadb728b9fd705838591dd5dd55571",
    "details": {
      "sha": "3496aa408acf8c5129a1649f9e048b03a2817f24",
      "filename": "brut.apktool/apktool-lib/src/main/java/android/util/TypedValue.java",
      "status": "modified",
      "additions": 244,
      "deletions": 249,
      "changes": 493,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/0bb217ac88fadb728b9fd705838591dd5dd55571/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fandroid%2Futil%2FTypedValue.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/0bb217ac88fadb728b9fd705838591dd5dd55571/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fandroid%2Futil%2FTypedValue.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fandroid%2Futil%2FTypedValue.java?ref=0bb217ac88fadb728b9fd705838591dd5dd55571",
      "patch": "@@ -21,281 +21,276 @@\n  * {@link android.content.res.Resources} for holding resource values.\n  */\n public class TypedValue {\n-\t/** The value contains no data. */\n-\tpublic static final int TYPE_NULL = 0x00;\n+    /** The value contains no data. */\n+    public static final int TYPE_NULL = 0x00;\n \n-\t/** The <var>data</var> field holds a resource identifier. */\n-\tpublic static final int TYPE_REFERENCE = 0x01;\n-\t/**\n-\t * The <var>data</var> field holds an attribute resource identifier\n-\t * (referencing an attribute in the current theme style, not a resource\n-\t * entry).\n-\t */\n-\tpublic static final int TYPE_ATTRIBUTE = 0x02;\n-\t/**\n-\t * The <var>string</var> field holds string data. In addition, if\n-\t * <var>data</var> is non-zero then it is the string block index of the\n-\t * string and <var>assetCookie</var> is the set of assets the string came\n-\t * from.\n-\t */\n-\tpublic static final int TYPE_STRING = 0x03;\n-\t/** The <var>data</var> field holds an IEEE 754 floating point number. */\n-\tpublic static final int TYPE_FLOAT = 0x04;\n-\t/**\n-\t * The <var>data</var> field holds a complex number encoding a dimension\n-\t * value.\n-\t */\n-\tpublic static final int TYPE_DIMENSION = 0x05;\n-\t/**\n-\t * The <var>data</var> field holds a complex number encoding a fraction of a\n-\t * container.\n-\t */\n-\tpublic static final int TYPE_FRACTION = 0x06;\n+    /** The <var>data</var> field holds a resource identifier. */\n+    public static final int TYPE_REFERENCE = 0x01;\n+    /**\n+     * The <var>data</var> field holds an attribute resource identifier\n+     * (referencing an attribute in the current theme style, not a resource\n+     * entry).\n+     */\n+    public static final int TYPE_ATTRIBUTE = 0x02;\n+    /**\n+     * The <var>string</var> field holds string data. In addition, if\n+     * <var>data</var> is non-zero then it is the string block index of the\n+     * string and <var>assetCookie</var> is the set of assets the string came\n+     * from.\n+     */\n+    public static final int TYPE_STRING = 0x03;\n+    /** The <var>data</var> field holds an IEEE 754 floating point number. */\n+    public static final int TYPE_FLOAT = 0x04;\n+    /**\n+     * The <var>data</var> field holds a complex number encoding a dimension\n+     * value.\n+     */\n+    public static final int TYPE_DIMENSION = 0x05;\n+    /**\n+     * The <var>data</var> field holds a complex number encoding a fraction of a\n+     * container.\n+     */\n+    public static final int TYPE_FRACTION = 0x06;\n \n-\t/**\n-\t * Identifies the start of plain integer values. Any type value from this to\n-\t * {@link #TYPE_LAST_INT} means the <var>data</var> field holds a generic\n-\t * integer value.\n-\t */\n-\tpublic static final int TYPE_FIRST_INT = 0x10;\n+    /**\n+     * Identifies the start of plain integer values. Any type value from this to\n+     * {@link #TYPE_LAST_INT} means the <var>data</var> field holds a generic\n+     * integer value.\n+     */\n+    public static final int TYPE_FIRST_INT = 0x10;\n \n-\t/**\n-\t * The <var>data</var> field holds a number that was originally specified in\n-\t * decimal.\n-\t */\n-\tpublic static final int TYPE_INT_DEC = 0x10;\n-\t/**\n-\t * The <var>data</var> field holds a number that was originally specified in\n-\t * hexadecimal (0xn).\n-\t */\n-\tpublic static final int TYPE_INT_HEX = 0x11;\n-\t/**\n-\t * The <var>data</var> field holds 0 or 1 that was originally specified as\n-\t * \"false\" or \"true\".\n-\t */\n-\tpublic static final int TYPE_INT_BOOLEAN = 0x12;\n+    /**\n+     * The <var>data</var> field holds a number that was originally specified in\n+     * decimal.\n+     */\n+    public static final int TYPE_INT_DEC = 0x10;\n+    /**\n+     * The <var>data</var> field holds a number that was originally specified in\n+     * hexadecimal (0xn).\n+     */\n+    public static final int TYPE_INT_HEX = 0x11;\n+    /**\n+     * The <var>data</var> field holds 0 or 1 that was originally specified as\n+     * \"false\" or \"true\".\n+     */\n+    public static final int TYPE_INT_BOOLEAN = 0x12;\n \n-\t/**\n-\t * Identifies the start of integer values that were specified as color\n-\t * constants (starting with '#').\n-\t */\n-\tpublic static final int TYPE_FIRST_COLOR_INT = 0x1c;\n+    /**\n+     * Identifies the start of integer values that were specified as color\n+     * constants (starting with '#').\n+     */\n+    public static final int TYPE_FIRST_COLOR_INT = 0x1c;\n \n-\t/**\n-\t * The <var>data</var> field holds a color that was originally specified as\n-\t * #aarrggbb.\n-\t */\n-\tpublic static final int TYPE_INT_COLOR_ARGB8 = 0x1c;\n-\t/**\n-\t * The <var>data</var> field holds a color that was originally specified as\n-\t * #rrggbb.\n-\t */\n-\tpublic static final int TYPE_INT_COLOR_RGB8 = 0x1d;\n-\t/**\n-\t * The <var>data</var> field holds a color that was originally specified as\n-\t * #argb.\n-\t */\n-\tpublic static final int TYPE_INT_COLOR_ARGB4 = 0x1e;\n-\t/**\n-\t * The <var>data</var> field holds a color that was originally specified as\n-\t * #rgb.\n-\t */\n-\tpublic static final int TYPE_INT_COLOR_RGB4 = 0x1f;\n+    /**\n+     * The <var>data</var> field holds a color that was originally specified as\n+     * #aarrggbb.\n+     */\n+    public static final int TYPE_INT_COLOR_ARGB8 = 0x1c;\n+    /**\n+     * The <var>data</var> field holds a color that was originally specified as\n+     * #rrggbb.\n+     */\n+    public static final int TYPE_INT_COLOR_RGB8 = 0x1d;\n+    /**\n+     * The <var>data</var> field holds a color that was originally specified as\n+     * #argb.\n+     */\n+    public static final int TYPE_INT_COLOR_ARGB4 = 0x1e;\n+    /**\n+     * The <var>data</var> field holds a color that was originally specified as\n+     * #rgb.\n+     */\n+    public static final int TYPE_INT_COLOR_RGB4 = 0x1f;\n \n-\t/**\n-\t * Identifies the end of integer values that were specified as color\n-\t * constants.\n-\t */\n-\tpublic static final int TYPE_LAST_COLOR_INT = 0x1f;\n+    /**\n+     * Identifies the end of integer values that were specified as color\n+     * constants.\n+     */\n+    public static final int TYPE_LAST_COLOR_INT = 0x1f;\n \n-\t/** Identifies the end of plain integer values. */\n-\tpublic static final int TYPE_LAST_INT = 0x1f;\n+    /** Identifies the end of plain integer values. */\n+    public static final int TYPE_LAST_INT = 0x1f;\n \n \t/* ------------------------------------------------------------ */\n \n-\t/** Complex data: bit location of unit information. */\n-\tpublic static final int COMPLEX_UNIT_SHIFT = 0;\n-\t/**\n-\t * Complex data: mask to extract unit information (after shifting by\n-\t * {@link #COMPLEX_UNIT_SHIFT}). This gives us 16 possible types, as defined\n-\t * below.\n-\t */\n-\tpublic static final int COMPLEX_UNIT_MASK = 0xf;\n+    /** Complex data: bit location of unit information. */\n+    public static final int COMPLEX_UNIT_SHIFT = 0;\n+    /**\n+     * Complex data: mask to extract unit information (after shifting by\n+     * {@link #COMPLEX_UNIT_SHIFT}). This gives us 16 possible types, as defined\n+     * below.\n+     */\n+    public static final int COMPLEX_UNIT_MASK = 0xf;\n \n-\t/** {@link #TYPE_DIMENSION} complex unit: Value is raw pixels. */\n-\tpublic static final int COMPLEX_UNIT_PX = 0;\n-\t/**\n-\t * {@link #TYPE_DIMENSION} complex unit: Value is Device Independent Pixels.\n-\t */\n-\tpublic static final int COMPLEX_UNIT_DIP = 1;\n-\t/** {@link #TYPE_DIMENSION} complex unit: Value is a scaled pixel. */\n-\tpublic static final int COMPLEX_UNIT_SP = 2;\n-\t/** {@link #TYPE_DIMENSION} complex unit: Value is in points. */\n-\tpublic static final int COMPLEX_UNIT_PT = 3;\n-\t/** {@link #TYPE_DIMENSION} complex unit: Value is in inches. */\n-\tpublic static final int COMPLEX_UNIT_IN = 4;\n-\t/** {@link #TYPE_DIMENSION} complex unit: Value is in millimeters. */\n-\tpublic static final int COMPLEX_UNIT_MM = 5;\n+    /** {@link #TYPE_DIMENSION} complex unit: Value is raw pixels. */\n+    public static final int COMPLEX_UNIT_PX = 0;\n+    /**\n+     * {@link #TYPE_DIMENSION} complex unit: Value is Device Independent Pixels.\n+     */\n+    public static final int COMPLEX_UNIT_DIP = 1;\n+    /** {@link #TYPE_DIMENSION} complex unit: Value is a scaled pixel. */\n+    public static final int COMPLEX_UNIT_SP = 2;\n+    /** {@link #TYPE_DIMENSION} complex unit: Value is in points. */\n+    public static final int COMPLEX_UNIT_PT = 3;\n+    /** {@link #TYPE_DIMENSION} complex unit: Value is in inches. */\n+    public static final int COMPLEX_UNIT_IN = 4;\n+    /** {@link #TYPE_DIMENSION} complex unit: Value is in millimeters. */\n+    public static final int COMPLEX_UNIT_MM = 5;\n \n-\t/**\n-\t * {@link #TYPE_FRACTION} complex unit: A basic fraction of the overall size.\n-\t */\n-\tpublic static final int COMPLEX_UNIT_FRACTION = 0;\n-\t/** {@link #TYPE_FRACTION} complex unit: A fraction of the parent size. */\n-\tpublic static final int COMPLEX_UNIT_FRACTION_PARENT = 1;\n+    /**\n+     * {@link #TYPE_FRACTION} complex unit: A basic fraction of the overall size.\n+     */\n+    public static final int COMPLEX_UNIT_FRACTION = 0;\n+    /** {@link #TYPE_FRACTION} complex unit: A fraction of the parent size. */\n+    public static final int COMPLEX_UNIT_FRACTION_PARENT = 1;\n \n-\t/**\n-\t * Complex data: where the radix information is, telling where the decimal\n-\t * place appears in the mantissa.\n-\t */\n-\tpublic static final int COMPLEX_RADIX_SHIFT = 4;\n-\t/**\n-\t * Complex data: mask to extract radix information (after shifting by\n-\t * {@link #COMPLEX_RADIX_SHIFT}). This give us 4 possible fixed point\n-\t * representations as defined below.\n-\t */\n-\tpublic static final int COMPLEX_RADIX_MASK = 0x3;\n+    /**\n+     * Complex data: where the radix information is, telling where the decimal\n+     * place appears in the mantissa.\n+     */\n+    public static final int COMPLEX_RADIX_SHIFT = 4;\n+    /**\n+     * Complex data: mask to extract radix information (after shifting by\n+     * {@link #COMPLEX_RADIX_SHIFT}). This give us 4 possible fixed point\n+     * representations as defined below.\n+     */\n+    public static final int COMPLEX_RADIX_MASK = 0x3;\n \n-\t/** Complex data: the mantissa is an integral number -- i.e., 0xnnnnnn.0 */\n-\tpublic static final int COMPLEX_RADIX_23p0 = 0;\n-\t/** Complex data: the mantissa magnitude is 16 bits -- i.e, 0xnnnn.nn */\n-\tpublic static final int COMPLEX_RADIX_16p7 = 1;\n-\t/** Complex data: the mantissa magnitude is 8 bits -- i.e, 0xnn.nnnn */\n-\tpublic static final int COMPLEX_RADIX_8p15 = 2;\n-\t/** Complex data: the mantissa magnitude is 0 bits -- i.e, 0x0.nnnnnn */\n-\tpublic static final int COMPLEX_RADIX_0p23 = 3;\n+    /** Complex data: the mantissa is an integral number -- i.e., 0xnnnnnn.0 */\n+    public static final int COMPLEX_RADIX_23p0 = 0;\n+    /** Complex data: the mantissa magnitude is 16 bits -- i.e, 0xnnnn.nn */\n+    public static final int COMPLEX_RADIX_16p7 = 1;\n+    /** Complex data: the mantissa magnitude is 8 bits -- i.e, 0xnn.nnnn */\n+    public static final int COMPLEX_RADIX_8p15 = 2;\n+    /** Complex data: the mantissa magnitude is 0 bits -- i.e, 0x0.nnnnnn */\n+    public static final int COMPLEX_RADIX_0p23 = 3;\n \n-\t/** Complex data: bit location of mantissa information. */\n-\tpublic static final int COMPLEX_MANTISSA_SHIFT = 8;\n-\t/**\n-\t * Complex data: mask to extract mantissa information (after shifting by\n-\t * {@link #COMPLEX_MANTISSA_SHIFT}). This gives us 23 bits of precision; the\n-\t * top bit is the sign.\n-\t */\n-\tpublic static final int COMPLEX_MANTISSA_MASK = 0xffffff;\n+    /** Complex data: bit location of mantissa information. */\n+    public static final int COMPLEX_MANTISSA_SHIFT = 8;\n+    /**\n+     * Complex data: mask to extract mantissa information (after shifting by\n+     * {@link #COMPLEX_MANTISSA_SHIFT}). This gives us 23 bits of precision; the\n+     * top bit is the sign.\n+     */\n+    public static final int COMPLEX_MANTISSA_MASK = 0xffffff;\n \n \t/* ------------------------------------------------------------ */\n \n-\t/**\n-\t * If {@link #density} is equal to this value, then the density should be\n-\t * treated as the system's default density value:\n-\t * {@link DisplayMetrics#DENSITY_DEFAULT}.\n-\t */\n-\tpublic static final int DENSITY_DEFAULT = 0;\n+    /**\n+     * If {@link #density} is equal to this value, then the density should be\n+     * treated as the system's default density value:\n+     * {@link DisplayMetrics#DENSITY_DEFAULT}.\n+     */\n+    public static final int DENSITY_DEFAULT = 0;\n \n-\t/**\n-\t * If {@link #density} is equal to this value, then there is no density\n-\t * associated with the resource and it should not be scaled.\n-\t */\n-\tpublic static final int DENSITY_NONE = 0xffff;\n+    /**\n+     * If {@link #density} is equal to this value, then there is no density\n+     * associated with the resource and it should not be scaled.\n+     */\n+    public static final int DENSITY_NONE = 0xffff;\n \n \t/* ------------------------------------------------------------ */\n \n-\t/**\n-\t * The type held by this value, as defined by the constants here. This tells\n-\t * you how to interpret the other fields in the object.\n-\t */\n-\tpublic int type;\n+    /**\n+     * The type held by this value, as defined by the constants here. This tells\n+     * you how to interpret the other fields in the object.\n+     */\n+    public int type;\n \n-\tprivate static final float MANTISSA_MULT = 1.0f / (1 << TypedValue.COMPLEX_MANTISSA_SHIFT);\n-\tprivate static final float[] RADIX_MULTS = new float[] {\n-\t\t\t1.0f * MANTISSA_MULT, 1.0f / (1 << 7) * MANTISSA_MULT,\n-\t\t\t1.0f / (1 << 15) * MANTISSA_MULT, 1.0f / (1 << 23) * MANTISSA_MULT };\n+    private static final float MANTISSA_MULT = 1.0f / (1 << TypedValue.COMPLEX_MANTISSA_SHIFT);\n+    private static final float[] RADIX_MULTS = new float[] {\n+            1.0f * MANTISSA_MULT, 1.0f / (1 << 7) * MANTISSA_MULT,\n+            1.0f / (1 << 15) * MANTISSA_MULT, 1.0f / (1 << 23) * MANTISSA_MULT };\n \n-\t/**\n-\t * Retrieve the base value from a complex data integer. This uses the\n-\t * {@link #COMPLEX_MANTISSA_MASK} and {@link #COMPLEX_RADIX_MASK} fields of\n-\t * the data to compute a floating point representation of the number they\n-\t * describe. The units are ignored.\n-\t * \n-\t * @param complex\n-\t *            A complex data value.\n-\t * \n-\t * @return A floating point value corresponding to the complex data.\n-\t */\n-\tpublic static float complexToFloat(int complex) {\n-\t\treturn (complex & (TypedValue.COMPLEX_MANTISSA_MASK << TypedValue.COMPLEX_MANTISSA_SHIFT))\n-\t\t\t\t* RADIX_MULTS[(complex >> TypedValue.COMPLEX_RADIX_SHIFT)\n-\t\t\t\t\t\t& TypedValue.COMPLEX_RADIX_MASK];\n-\t}\n+    /**\n+     * Retrieve the base value from a complex data integer. This uses the\n+     * {@link #COMPLEX_MANTISSA_MASK} and {@link #COMPLEX_RADIX_MASK} fields of\n+     * the data to compute a floating point representation of the number they\n+     * describe. The units are ignored.\n+     *\n+     * @param complex\n+     *            A complex data value.\n+     *\n+     * @return A floating point value corresponding to the complex data.\n+     */\n+    public static float complexToFloat(int complex) {\n+        return (complex & (TypedValue.COMPLEX_MANTISSA_MASK << TypedValue.COMPLEX_MANTISSA_SHIFT))\n+                * RADIX_MULTS[(complex >> TypedValue.COMPLEX_RADIX_SHIFT)\n+                & TypedValue.COMPLEX_RADIX_MASK];\n+    }\n \n-\tprivate static final String[] DIMENSION_UNIT_STRS = new String[] { \"px\",\n-\t\t\t\"dip\", \"sp\", \"pt\", \"in\", \"mm\" };\n-\tprivate static final String[] FRACTION_UNIT_STRS = new String[] { \"%\", \"%p\" };\n+    private static final String[] DIMENSION_UNIT_STRS = new String[] { \"px\",\n+            \"dip\", \"sp\", \"pt\", \"in\", \"mm\" };\n+    private static final String[] FRACTION_UNIT_STRS = new String[] { \"%\", \"%p\" };\n \n-\t/**\n-\t * Perform type conversion as per {@link #coerceToString()} on an explicitly\n-\t * supplied type and data.\n-\t * \n-\t * @param type\n-\t *            The data type identifier.\n-\t * @param data\n-\t *            The data value.\n-\t * \n-\t * @return String The coerced string value. If the value is null or the type\n-\t *         is not known, null is returned.\n-\t */\n-\tpublic static final String coerceToString(int type, int data) {\n-\t\tswitch (type) {\n-\t\tcase TYPE_NULL:\n-\t\t\treturn null;\n-\t\tcase TYPE_REFERENCE:\n-\t\t\treturn \"@\" + data;\n-\t\tcase TYPE_ATTRIBUTE:\n-\t\t\treturn \"?\" + data;\n-\t\tcase TYPE_FLOAT:\n-\t\t\treturn Float.toString(Float.intBitsToFloat(data));\n-\t\tcase TYPE_DIMENSION:\n-\t\t\treturn Float.toString(complexToFloat(data))\n-\t\t\t\t\t+ DIMENSION_UNIT_STRS[(data >> COMPLEX_UNIT_SHIFT)\n-\t\t\t\t\t\t\t& COMPLEX_UNIT_MASK];\n-\t\tcase TYPE_FRACTION:\n-\t\t\treturn Float.toString(complexToFloat(data) * 100)\n-\t\t\t\t\t+ FRACTION_UNIT_STRS[(data >> COMPLEX_UNIT_SHIFT)\n-\t\t\t\t\t\t\t& COMPLEX_UNIT_MASK];\n-\t\tcase TYPE_INT_HEX:\n-\t\t\treturn \"0x\" + Integer.toHexString(data);\n-\t\tcase TYPE_INT_BOOLEAN:\n-\t\t\treturn data != 0 ? \"true\" : \"false\";\n-\t\t}\n+    /**\n+     * Perform type conversion as per {@link #coerceToString()} on an explicitly\n+     * supplied type and data.\n+     *\n+     * @param type\n+     *            The data type identifier.\n+     * @param data\n+     *            The data value.\n+     *\n+     * @return String The coerced string value. If the value is null or the type\n+     *         is not known, null is returned.\n+     */\n+    public static final String coerceToString(int type, int data) {\n+        switch (type) {\n+            case TYPE_NULL:\n+                return null;\n+            case TYPE_REFERENCE:\n+                return \"@\" + data;\n+            case TYPE_ATTRIBUTE:\n+                return \"?\" + data;\n+            case TYPE_FLOAT:\n+                return Float.toString(Float.intBitsToFloat(data));\n+            case TYPE_DIMENSION:\n+                return Float.toString(complexToFloat(data))\n+                        + DIMENSION_UNIT_STRS[(data >> COMPLEX_UNIT_SHIFT)\n+                        & COMPLEX_UNIT_MASK];\n+            case TYPE_FRACTION:\n+                return Float.toString(complexToFloat(data) * 100)\n+                        + FRACTION_UNIT_STRS[(data >> COMPLEX_UNIT_SHIFT)\n+                        & COMPLEX_UNIT_MASK];\n+            case TYPE_INT_HEX:\n+                return \"0x\" + Integer.toHexString(data);\n+            case TYPE_INT_BOOLEAN:\n+                return data != 0 ? \"true\" : \"false\";\n+        }\n \n-\t\tif (type >= TYPE_FIRST_COLOR_INT && type <= TYPE_LAST_COLOR_INT) {\n-\t\t\tString res = String.format(\"%08x\", data);\n-\t\t\tchar[] vals = res.toCharArray();\n-\t\t\tswitch (type) {\n-\t\t\tdefault:\n-\t\t\tcase TYPE_INT_COLOR_ARGB8:// #AaRrGgBb\n-\t\t\t\tbreak;\n-\t\t\tcase TYPE_INT_COLOR_RGB8:// #FFRrGgBb->#RrGgBb\n-\t\t\t\tres = res.substring(2);\n-\t\t\t\tbreak;\n-\t\t\tcase TYPE_INT_COLOR_ARGB4:// #AARRGGBB->#ARGB\n-\t\t\t\tres = new StringBuffer().append(vals[0]).append(vals[2])\n-\t\t\t\t\t\t.append(vals[4]).append(vals[6]).toString();\n-\t\t\t\tbreak;\n-\t\t\tcase TYPE_INT_COLOR_RGB4:// #FFRRGGBB->#RGB\n-\t\t\t\tres = new StringBuffer().append(vals[2]).append(vals[4])\n-\t\t\t\t\t\t.append(vals[6]).toString();\n-\t\t\t\tbreak;\n-\t\t\t}\n-\t\t\treturn \"#\" + res;\n-\t\t} else if (type >= TYPE_FIRST_INT && type <= TYPE_LAST_INT) {\n-\t\t\tString res;\n-\t\t\tswitch (type) {\n-\t\t\tdefault:\n-\t\t\tcase TYPE_INT_DEC:\n-\t\t\t\tres = Integer.toString(data);\n-\t\t\t\tbreak;\n-\t\t\t// defined before\n-\t\t\t/*\n-\t\t\t * case TYPE_INT_HEX: res = \"0x\" + Integer.toHexString(data); break;\n-\t\t\t * case TYPE_INT_BOOLEAN: res = (data != 0) ? \"true\":\"false\"; break;\n-\t\t\t */\n-\t\t\t}\n-\t\t\treturn res;\n-\t\t}\n+        if (type >= TYPE_FIRST_COLOR_INT && type <= TYPE_LAST_COLOR_INT) {\n+            String res = String.format(\"%08x\", data);\n+            char[] vals = res.toCharArray();\n+            switch (type) {\n+                default:\n+                case TYPE_INT_COLOR_ARGB8:// #AaRrGgBb\n+                    break;\n+                case TYPE_INT_COLOR_RGB8:// #FFRrGgBb->#RrGgBb\n+                    res = res.substring(2);\n+                    break;\n+                case TYPE_INT_COLOR_ARGB4:// #AARRGGBB->#ARGB\n+                    res = new StringBuffer().append(vals[0]).append(vals[2])\n+                            .append(vals[4]).append(vals[6]).toString();\n+                    break;\n+                case TYPE_INT_COLOR_RGB4:// #FFRRGGBB->#RGB\n+                    res = new StringBuffer().append(vals[2]).append(vals[4])\n+                            .append(vals[6]).toString();\n+                    break;\n+            }\n+            return \"#\" + res;\n+        } else if (type >= TYPE_FIRST_INT && type <= TYPE_LAST_INT) {\n+            String res;\n+            switch (type) {\n+                default:\n+                case TYPE_INT_DEC:\n+                    res = Integer.toString(data);\n+                    break;\n+            }\n+            return res;\n+        }\n \n-\t\treturn null;\n-\t}\n+        return null;\n+    }\n \n-};\n+}",
      "parent_sha": "b149d7bd495db35a373e3b84cf77e52cd09d5b0b"
    }
  },
  {
    "oid": "9186858f33b72d83f1b13a288de68435f97380de",
    "message": "added lib support for \"/libs\" folder.",
    "date": "2013-05-10T13:24:24Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/9186858f33b72d83f1b13a288de68435f97380de",
    "details": {
      "sha": "0e82fb0dcdd8be035f392145b2bd73586a630e88",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/Androlib.java",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/9186858f33b72d83f1b13a288de68435f97380de/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FAndrolib.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/9186858f33b72d83f1b13a288de68435f97380de/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FAndrolib.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FAndrolib.java?ref=9186858f33b72d83f1b13a288de68435f97380de",
      "patch": "@@ -126,6 +126,9 @@ public void decodeRawFiles(ExtFile apkFile, File outDir)\n \t\t\tif (in.containsDir(\"lib\")) {\n \t\t\t\tin.copyToDir(outDir, \"lib\");\n \t\t\t}\n+            if (in.containsDir(\"libs\")) {\n+                in.copyToDir(outDir, \"libs\");\n+            }\n \t\t} catch (DirectoryException ex) {\n \t\t\tthrow new AndrolibException(ex);\n \t\t}\n@@ -694,5 +697,5 @@ public void setFrameworkFolder(String path) {\n \tprivate final static String[] APK_MANIFEST_FILENAMES = new String[] {\n             \"AndroidManifest.xml\" };\n     private final static String[] APK_STANDARD_ALL_FILENAMES = new String[] {\n-            \"classes.dex\", \"AndroidManifest.xml\", \"resources.arsc\",\"res\",\"lib\",\"assets\",\"META-INF\" };\n+            \"classes.dex\", \"AndroidManifest.xml\", \"resources.arsc\",\"res\",\"lib\", \"libs\",\"assets\",\"META-INF\" };\n }",
      "parent_sha": "acc83919d0e1ecf1c2c77221a09e50bc72bef5c1"
    }
  },
  {
    "oid": "83f9693633317251df0b2cdd2b12f7672c56adcd",
    "message": "clean: get rid of useless throws",
    "date": "2021-07-03T20:15:10Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/83f9693633317251df0b2cdd2b12f7672c56adcd",
    "details": {
      "sha": "812bfe65a59843c3f60db4faa62524fde80dc80a",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/ApkDecoder.java",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/83f9693633317251df0b2cdd2b12f7672c56adcd/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FApkDecoder.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/83f9693633317251df0b2cdd2b12f7672c56adcd/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FApkDecoder.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FApkDecoder.java?ref=83f9693633317251df0b2cdd2b12f7672c56adcd",
      "patch": "@@ -67,7 +67,7 @@ public void setApkFile(File apkFile) {\n         mResTable = null;\n     }\n \n-    public void setOutDir(File outDir) throws AndrolibException {\n+    public void setOutDir(File outDir) {\n         mOutDir = outDir;\n     }\n \n@@ -342,7 +342,7 @@ private void writeMetaFile() throws AndrolibException {\n         mAndrolib.writeMetaFile(mOutDir, meta);\n     }\n \n-    private void putUsesFramework(MetaInfo meta) throws AndrolibException {\n+    private void putUsesFramework(MetaInfo meta) {\n         Set<ResPackage> pkgs = mResTable.listFramePackages();\n         if (pkgs.isEmpty()) {\n             return;\n@@ -363,7 +363,7 @@ private void putUsesFramework(MetaInfo meta) throws AndrolibException {\n         }\n     }\n \n-    private void putSdkInfo(MetaInfo meta) throws AndrolibException {\n+    private void putSdkInfo(MetaInfo meta) {\n         Map<String, String> info = mResTable.getSdkInfo();\n         if (info.size() > 0) {\n             String refValue;\n@@ -411,7 +411,7 @@ private void putPackageInfo(MetaInfo meta) throws AndrolibException {\n         meta.packageInfo.forcedPackageId = String.valueOf(id);\n     }\n \n-    private void putVersionInfo(MetaInfo meta) throws AndrolibException {\n+    private void putVersionInfo(MetaInfo meta) {\n         VersionInfo info = mResTable.getVersionInfo();\n         String refValue = ResXmlPatcher.pullValueFromStrings(mOutDir, info.versionName);\n         if (refValue != null) {\n@@ -420,11 +420,11 @@ private void putVersionInfo(MetaInfo meta) throws AndrolibException {\n         meta.versionInfo = info;\n     }\n \n-    private void putSharedLibraryInfo(MetaInfo meta) throws AndrolibException {\n+    private void putSharedLibraryInfo(MetaInfo meta) {\n         meta.sharedLibrary = mResTable.getSharedLibrary();\n     }\n \n-    private void putSparseResourcesInfo(MetaInfo meta) throws AndrolibException {\n+    private void putSparseResourcesInfo(MetaInfo meta) {\n         meta.sparseResources = mResTable.getSparseResources();\n     }\n ",
      "parent_sha": "1472b505416e87121dcab17fdcc3ba0e137a7e74"
    }
  },
  {
    "oid": "5cd94d6aa0bb8824ffa2bfbecb6f4747a0916547",
    "message": "refactor Apkecoder - streamline decode procedure (#3109)",
    "date": "2023-06-28T21:02:46Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/5cd94d6aa0bb8824ffa2bfbecb6f4747a0916547",
    "details": {
      "sha": "6e6faf73a3f188501f9833f8a7d62c6e3e6d594c",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/ApkDecoder.java",
      "status": "modified",
      "additions": 60,
      "deletions": 83,
      "changes": 143,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/5cd94d6aa0bb8824ffa2bfbecb6f4747a0916547/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FApkDecoder.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/5cd94d6aa0bb8824ffa2bfbecb6f4747a0916547/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FApkDecoder.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FApkDecoder.java?ref=5cd94d6aa0bb8824ffa2bfbecb6f4747a0916547",
      "patch": "@@ -53,7 +53,7 @@ public class ApkDecoder {\n     private final static String SMALI_DIRNAME = \"smali\";\n     private final static String UNK_DIRNAME = \"unknown\";\n     private final static String[] APK_RESOURCES_FILENAMES = new String[] {\n-        \"resources.arsc\", \"AndroidManifest.xml\", \"res\", \"r\", \"R\" };\n+        \"resources.arsc\", \"res\", \"r\", \"R\" };\n     private final static String[] APK_MANIFEST_FILENAMES = new String[] {\n         \"AndroidManifest.xml\" };\n     private final static String[] APK_STANDARD_ALL_FILENAMES = new String[] {\n@@ -101,46 +101,17 @@ public void decode(File outDir) throws AndrolibException, IOException, Directory\n \n             LOGGER.info(\"Using Apktool \" + ApktoolProperties.getVersion() + \" on \" + mApkFile.getName());\n \n-            if (hasResources()) {\n-                switch (config.decodeResources) {\n-                    case Config.DECODE_RESOURCES_NONE:\n-                        copyResourcesRaw(mApkFile, outDir);\n-                        if (config.forceDecodeManifest == Config.FORCE_DECODE_MANIFEST_FULL) {\n-                            // done after raw decoding of resources because copyToDir overwrites dest files\n-                            if (hasManifest()) {\n-                                decodeManifestWithResources(mApkFile, outDir, getResTable());\n-                            }\n-                        }\n-                        break;\n-                    case Config.DECODE_RESOURCES_FULL:\n-                        if (hasManifest()) {\n-                            decodeManifestWithResources(mApkFile, outDir, getResTable());\n-                        }\n-                        decodeResourcesFull(mApkFile, outDir, getResTable());\n-                        break;\n-                }\n-            } else {\n-                // if there's no resources.arsc, decode the manifest without looking\n-                // up attribute references\n-                if (hasManifest()) {\n-                    if (config.decodeResources == Config.DECODE_RESOURCES_FULL\n-                            || config.forceDecodeManifest == Config.FORCE_DECODE_MANIFEST_FULL) {\n-                        decodeManifestFull(mApkFile, outDir, getResTable());\n-                    }\n-                    else {\n-                        copyManifestRaw(mApkFile, outDir);\n-                    }\n-                }\n-            }\n+            decodeManifest(outDir);\n+            decodeResources(outDir);\n \n             if (hasSources()) {\n                 switch (config.decodeSources) {\n                     case Config.DECODE_SOURCES_NONE:\n-                        copySourcesRaw(mApkFile, outDir, \"classes.dex\");\n+                        copySourcesRaw(outDir, \"classes.dex\");\n                         break;\n                     case Config.DECODE_SOURCES_SMALI:\n                     case Config.DECODE_SOURCES_SMALI_ONLY_MAIN_CLASSES:\n-                        decodeSourcesSmali(mApkFile, outDir, \"classes.dex\");\n+                        decodeSourcesSmali(outDir, \"classes.dex\");\n                         break;\n                 }\n             }\n@@ -153,16 +124,16 @@ public void decode(File outDir) throws AndrolibException, IOException, Directory\n                         if (! file.equalsIgnoreCase(\"classes.dex\")) {\n                             switch(config.decodeSources) {\n                                 case Config.DECODE_SOURCES_NONE:\n-                                    copySourcesRaw(mApkFile, outDir, file);\n+                                    copySourcesRaw(outDir, file);\n                                     break;\n                                 case Config.DECODE_SOURCES_SMALI:\n-                                    decodeSourcesSmali(mApkFile, outDir, file);\n+                                    decodeSourcesSmali(outDir, file);\n                                     break;\n                                 case Config.DECODE_SOURCES_SMALI_ONLY_MAIN_CLASSES:\n                                     if (file.startsWith(\"classes\") && file.endsWith(\".dex\")) {\n-                                        decodeSourcesSmali(mApkFile, outDir, file);\n+                                        decodeSourcesSmali(outDir, file);\n                                     } else {\n-                                        copySourcesRaw(mApkFile, outDir, file);\n+                                        copySourcesRaw(outDir, file);\n                                     }\n                                     break;\n                             }\n@@ -171,11 +142,11 @@ public void decode(File outDir) throws AndrolibException, IOException, Directory\n                 }\n             }\n \n-            copyRawFiles(mApkFile, outDir);\n-            copyUnknownFiles(mApkFile, outDir);\n+            copyRawFiles(outDir);\n+            copyUnknownFiles(outDir);\n             mUncompressedFiles = new ArrayList<>();\n-            recordUncompressedFiles(mApkFile, mUncompressedFiles);\n-            copyOriginalFiles(mApkFile, outDir);\n+            recordUncompressedFiles(mUncompressedFiles);\n+            copyOriginalFiles(outDir);\n             writeMetaFile(outDir);\n         } finally {\n             try {\n@@ -276,17 +247,17 @@ private Map<String, String> getMinSdkInfo() {\n         return sdkInfo;\n     }\n \n-    private void copySourcesRaw(ExtFile apkFile, File outDir, String filename)\n+    private void copySourcesRaw(File outDir, String filename)\n         throws AndrolibException {\n         try {\n             LOGGER.info(\"Copying raw \" + filename + \" file...\");\n-            apkFile.getDirectory().copyToDir(outDir, filename);\n+            mApkFile.getDirectory().copyToDir(outDir, filename);\n         } catch (DirectoryException ex) {\n             throw new AndrolibException(ex);\n         }\n     }\n \n-    private void decodeSourcesSmali(File apkFile, File outDir, String filename)\n+    private void decodeSourcesSmali(File outDir, String filename)\n         throws AndrolibException {\n         try {\n             File smaliDir;\n@@ -299,7 +270,7 @@ private void decodeSourcesSmali(File apkFile, File outDir, String filename)\n             //noinspection ResultOfMethodCallIgnored\n             smaliDir.mkdirs();\n             LOGGER.info(\"Baksmaling \" + filename + \"...\");\n-            DexFile dexFile = SmaliDecoder.decode(apkFile, smaliDir, filename,\n+            DexFile dexFile = SmaliDecoder.decode(mApkFile, smaliDir, filename,\n                 config.baksmaliDebugMode, config.apiLevel);\n             int minSdkVersion = dexFile.getOpcodes().api;\n             if (mMinSdkVersion == 0 || mMinSdkVersion > minSdkVersion) {\n@@ -310,46 +281,52 @@ private void decodeSourcesSmali(File apkFile, File outDir, String filename)\n         }\n     }\n \n-    private void copyManifestRaw(ExtFile apkFile, File outDir)\n-        throws AndrolibException {\n-        try {\n-            LOGGER.info(\"Copying raw manifest...\");\n-            apkFile.getDirectory().copyToDir(outDir, APK_MANIFEST_FILENAMES);\n-        } catch (DirectoryException ex) {\n-            throw new AndrolibException(ex);\n+    private void decodeManifest(File outDir) throws AndrolibException {\n+        if (hasManifest()) {\n+            if (config.decodeResources == Config.DECODE_RESOURCES_FULL ||\n+                config.forceDecodeManifest == Config.FORCE_DECODE_MANIFEST_FULL) {\n+                if (hasResources()) {\n+                    mAndRes.decodeManifestWithResources(getResTable(), mApkFile, outDir);\n+                } else {\n+                    // if there's no resources.arsc, decode the manifest without looking\n+                    // up attribute references\n+                    mAndRes.decodeManifest(getResTable(), mApkFile, outDir);\n+                }\n+            }\n+            else {\n+                try {\n+                    LOGGER.info(\"Copying raw manifest...\");\n+                    mApkFile.getDirectory().copyToDir(outDir, APK_MANIFEST_FILENAMES);\n+                } catch (DirectoryException ex) {\n+                    throw new AndrolibException(ex);\n+                }\n+            }\n         }\n     }\n \n-    private void decodeManifestFull(ExtFile apkFile, File outDir, ResTable resTable)\n-        throws AndrolibException {\n-        mAndRes.decodeManifest(resTable, apkFile, outDir);\n-    }\n-\n-    private void copyResourcesRaw(ExtFile apkFile, File outDir)\n-        throws AndrolibException {\n-        try {\n-            LOGGER.info(\"Copying raw resources...\");\n-            apkFile.getDirectory().copyToDir(outDir, APK_RESOURCES_FILENAMES);\n-        } catch (DirectoryException ex) {\n-            throw new AndrolibException(ex);\n+    private void decodeResources(File outDir) throws AndrolibException {\n+        if (hasResources()) {\n+            switch (config.decodeResources) {\n+                case Config.DECODE_RESOURCES_NONE:\n+                    try {\n+                        LOGGER.info(\"Copying raw resources...\");\n+                        mApkFile.getDirectory().copyToDir(outDir, APK_RESOURCES_FILENAMES);\n+                    } catch (DirectoryException ex) {\n+                        throw new AndrolibException(ex);\n+                    }\n+                    break;\n+                case Config.DECODE_RESOURCES_FULL:\n+                    mAndRes.decode(getResTable(), mApkFile, outDir);\n+                    break;\n+            }\n         }\n     }\n \n-    private void decodeResourcesFull(ExtFile apkFile, File outDir, ResTable resTable)\n-        throws AndrolibException {\n-        mAndRes.decode(resTable, apkFile, outDir);\n-    }\n-\n-    private void decodeManifestWithResources(ExtFile apkFile, File outDir, ResTable resTable)\n-        throws AndrolibException {\n-        mAndRes.decodeManifestWithResources(resTable, apkFile, outDir);\n-    }\n-\n-    private void copyRawFiles(ExtFile apkFile, File outDir)\n+    private void copyRawFiles(File outDir)\n         throws AndrolibException {\n         LOGGER.info(\"Copying assets and libs...\");\n         try {\n-            Directory in = apkFile.getDirectory();\n+            Directory in = mApkFile.getDirectory();\n \n             if (config.decodeAssets == Config.DECODE_ASSETS_FULL) {\n                 if (in.containsDir(\"assets\")) {\n@@ -379,12 +356,12 @@ private boolean isAPKFileNames(String file) {\n         return false;\n     }\n \n-    private void copyUnknownFiles(ExtFile apkFile, File outDir)\n+    private void copyUnknownFiles(File outDir)\n         throws AndrolibException {\n         LOGGER.info(\"Copying unknown files...\");\n         File unknownOut = new File(outDir, UNK_DIRNAME);\n         try {\n-            Directory unk = apkFile.getDirectory();\n+            Directory unk = mApkFile.getDirectory();\n \n             // loop all items in container recursively, ignoring any that are pre-defined by aapt\n             Set<String> files = unk.getFiles(true);\n@@ -403,7 +380,7 @@ private void copyUnknownFiles(ExtFile apkFile, File outDir)\n         }\n     }\n \n-    private void copyOriginalFiles(ExtFile apkFile, File outDir)\n+    private void copyOriginalFiles(File outDir)\n         throws AndrolibException {\n         LOGGER.info(\"Copying original files...\");\n         File originalDir = new File(outDir, \"original\");\n@@ -413,7 +390,7 @@ private void copyOriginalFiles(ExtFile apkFile, File outDir)\n         }\n \n         try {\n-            Directory in = apkFile.getDirectory();\n+            Directory in = mApkFile.getDirectory();\n             if (in.containsFile(\"AndroidManifest.xml\")) {\n                 in.copyToDir(originalDir, \"AndroidManifest.xml\");\n             }\n@@ -436,9 +413,9 @@ private void copyOriginalFiles(ExtFile apkFile, File outDir)\n         }\n     }\n \n-    private void recordUncompressedFiles(ExtFile apkFile, Collection<String> uncompressedFilesOrExts) throws AndrolibException {\n+    private void recordUncompressedFiles(Collection<String> uncompressedFilesOrExts) throws AndrolibException {\n         try {\n-            Directory unk = apkFile.getDirectory();\n+            Directory unk = mApkFile.getDirectory();\n             Set<String> files = unk.getFiles(true);\n \n             for (String file : files) {",
      "parent_sha": "1e400aa995defb40e20fa7b6eea4e263164c8b36"
    }
  },
  {
    "oid": "7cf9a957108292a35e514f52c33bcb3144bef0a5",
    "message": "fix: add better error message when can't write framework file",
    "date": "2020-11-28T21:19:29Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/7cf9a957108292a35e514f52c33bcb3144bef0a5",
    "details": {
      "sha": "aeaa22192dbab91db6fbb21b5689a803d66b69bb",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/AndrolibResources.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/7cf9a957108292a35e514f52c33bcb3144bef0a5/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/7cf9a957108292a35e514f52c33bcb3144bef0a5/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java?ref=7cf9a957108292a35e514f52c33bcb3144bef0a5",
      "patch": "@@ -984,7 +984,9 @@ public File getFrameworkDir() throws AndrolibException {\n                 if (apkOptions.frameworkFolderLocation != null) {\n                     LOGGER.severe(\"Can't create Framework directory: \" + dir);\n                 }\n-                throw new AndrolibException(\"Can't create directory: \" + dir);\n+                throw new AndrolibException(String.format(\n+                        \"Can't create directory: (%s). Pass a writable path with --frame-path {DIR}. \", dir\n+                ));\n             }\n         }\n ",
      "parent_sha": "a91aad461e60e7943031c93d0bb2dabae06c504b"
    }
  },
  {
    "oid": "ac1bc7ca54c45664e8ca18238b75f6b405985af9",
    "message": "ExtMXSerializer.startDocument(): new line depends on serializer setup.",
    "date": "2010-03-25T20:01:12Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/ac1bc7ca54c45664e8ca18238b75f6b405985af9",
    "details": {
      "sha": "72a7d1f65a02ff67feb6ba12da888cad547d59e0",
      "filename": "src/brut/androlib/res/util/ExtMXSerializer.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/ac1bc7ca54c45664e8ca18238b75f6b405985af9/src%2Fbrut%2Fandrolib%2Fres%2Futil%2FExtMXSerializer.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/ac1bc7ca54c45664e8ca18238b75f6b405985af9/src%2Fbrut%2Fandrolib%2Fres%2Futil%2FExtMXSerializer.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/src%2Fbrut%2Fandrolib%2Fres%2Futil%2FExtMXSerializer.java?ref=ac1bc7ca54c45664e8ca18238b75f6b405985af9",
      "patch": "@@ -29,7 +29,7 @@ public class ExtMXSerializer extends MXSerializer {\n     public void startDocument(String encoding, Boolean standalone) throws\n             IOException, IllegalArgumentException, IllegalStateException {\n         super.startDocument(encoding != null ? encoding : \"UTF-8\", standalone);\n-        super.out.write(System.getProperty(\"line.separator\"));\n+        super.out.write(lineSeparator);\n     }\n \n     @Override",
      "parent_sha": "d42798fd92dbbc170b17e4b6ab5d4410cfe735df"
    }
  },
  {
    "oid": "44a2e87f8197797d855672d885f61ab5382b34b5",
    "message": "refactor: support more random suffix to prevent multi-thread crash",
    "date": "2020-04-11T10:50:09Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/44a2e87f8197797d855672d885f61ab5382b34b5",
    "details": {
      "sha": "96499001287244e3a045c1ad19b4219d6104f78f",
      "filename": "brut.j.util/src/main/java/brut/util/Jar.java",
      "status": "modified",
      "additions": 5,
      "deletions": 8,
      "changes": 13,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/44a2e87f8197797d855672d885f61ab5382b34b5/brut.j.util%2Fsrc%2Fmain%2Fjava%2Fbrut%2Futil%2FJar.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/44a2e87f8197797d855672d885f61ab5382b34b5/brut.j.util%2Fsrc%2Fmain%2Fjava%2Fbrut%2Futil%2FJar.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.j.util%2Fsrc%2Fmain%2Fjava%2Fbrut%2Futil%2FJar.java?ref=44a2e87f8197797d855672d885f61ab5382b34b5",
      "patch": "@@ -85,19 +85,16 @@ public static File extractToTmp(String resourcePath, String tmpPrefix, Class cla\n             if (in == null) {\n                 throw new FileNotFoundException(resourcePath);\n             }\n-            long n = ThreadLocalRandom.current().nextLong();\n-            if (n == Long.MIN_VALUE) {\n-                n = 0;      // corner case\n-            } else {\n-                n = Math.abs(n);\n-            }\n-            String suffix = Long.toString(n) + \".tmp\";\n-            File fileOut = File.createTempFile(tmpPrefix, suffix);\n+            long suffix = ThreadLocalRandom.current().nextLong();\n+            suffix = suffix == Long.MIN_VALUE ? 0 : Math.abs(suffix);\n+            File fileOut = File.createTempFile(tmpPrefix, suffix + \".tmp\");\n             fileOut.deleteOnExit();\n+\n             OutputStream out = new FileOutputStream(fileOut);\n             IOUtils.copy(in, out);\n             in.close();\n             out.close();\n+\n             return fileOut;\n         } catch (IOException ex) {\n             throw new BrutException(\"Could not extract resource: \" + resourcePath, ex);",
      "parent_sha": "d4b2314e26f65b6dad8323d2a54a663b525a7398"
    }
  },
  {
    "oid": "67d80a133fd96bbf992db359725d8909e585f628",
    "message": "Ignore the unknown 4 bytes in Android N",
    "date": "2016-08-24T11:56:09Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/67d80a133fd96bbf992db359725d8909e585f628",
    "details": {
      "sha": "bcba1b2e98ec85fa17840af89eb9bfba5252e276",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/decoder/ARSCDecoder.java",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/67d80a133fd96bbf992db359725d8909e585f628/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/67d80a133fd96bbf992db359725d8909e585f628/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java?ref=67d80a133fd96bbf992db359725d8909e585f628",
      "patch": "@@ -375,6 +375,11 @@ private ResConfigFlags readConfigFlags() throws IOException, AndrolibException {\n             read = 52;\n         }\n \n+        if (size >= 56) {\n+            mIn.skipBytes(4);\n+            read = 56;\n+        }\n+\n         int exceedingSize = size - KNOWN_CONFIG_BYTES;\n         if (exceedingSize > 0) {\n             byte[] buf = new byte[exceedingSize];\n@@ -550,7 +555,7 @@ public FlagsOffset(int offset, int count) {\n     }\n \n     private static final Logger LOGGER = Logger.getLogger(ARSCDecoder.class.getName());\n-    private static final int KNOWN_CONFIG_BYTES = 52;\n+    private static final int KNOWN_CONFIG_BYTES = 56;\n \n     public static class ARSCData {\n ",
      "parent_sha": "64644a1242d47d8f69fb358f590b4312eeab5a12"
    }
  },
  {
    "oid": "1e68bb0ede84fbe4263c5c719fda5ca34fd1eb79",
    "message": "feat: Fill missing 9patch lines to fix recompile\n\nSomehow Google manages to compile MiuiSystemUI.apk (and a few other APKs I encountered) with a misformed pip_dismiss_scrim.9.png.\nEither way, every time I encountered such 9.patch images, the missing lines always indicated a single full div or padding.\nApktool already fills missing padding lines, now it can also fill missing divs.",
    "date": "2019-02-16T23:52:34Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/1e68bb0ede84fbe4263c5c719fda5ca34fd1eb79",
    "details": {
      "sha": "a8ed5f16ff4089f090f53d40e7a53fd9fa44d095",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/decoder/Res9patchStreamDecoder.java",
      "status": "modified",
      "additions": 12,
      "deletions": 4,
      "changes": 16,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/1e68bb0ede84fbe4263c5c719fda5ca34fd1eb79/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FRes9patchStreamDecoder.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/1e68bb0ede84fbe4263c5c719fda5ca34fd1eb79/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FRes9patchStreamDecoder.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FRes9patchStreamDecoder.java?ref=1e68bb0ede84fbe4263c5c719fda5ca34fd1eb79",
      "patch": "@@ -65,13 +65,21 @@ public void decode(InputStream in, OutputStream out)\n             drawVLine(im2, w + 1, np.padTop + 1, h - np.padBottom);\n \n             int[] xDivs = np.xDivs;\n-            for (int i = 0; i < xDivs.length; i += 2) {\n-                drawHLine(im2, 0, xDivs[i] + 1, xDivs[i + 1]);\n+            if (xDivs.length == 0) {\n+                drawHLine(im2, 0, 1, w);\n+            } else {\n+                for (int i = 0; i < xDivs.length; i += 2) {\n+                    drawHLine(im2, 0, xDivs[i] + 1, xDivs[i + 1]);\n+                }\n             }\n \n             int[] yDivs = np.yDivs;\n-            for (int i = 0; i < yDivs.length; i += 2) {\n-                drawVLine(im2, 0, yDivs[i] + 1, yDivs[i + 1]);\n+            if (yDivs.length == 0) {\n+                drawVLine(im2, 0, 1, h);\n+            } else {\n+                for (int i = 0; i < yDivs.length; i += 2) {\n+                    drawVLine(im2, 0, yDivs[i] + 1, yDivs[i + 1]);\n+                }\n             }\n \n             // Some images additionally use Optical Bounds",
      "parent_sha": "0efccc2d9389b09ac10cb41c99390f10919a39d0"
    }
  },
  {
    "oid": "db38c217ae782993018093ce40bbe58ea98706f3",
    "message": "Update ResConfigFlags for BCP\n\n - renamed country to region to match AOSP\n - added support for values-xxx-rXX\n - added support for BCP47\n - default to BCP47 for values-xxx",
    "date": "2015-02-19T15:06:08Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/db38c217ae782993018093ce40bbe58ea98706f3",
    "details": {
      "sha": "6d7b1ff989cbb5f4ded5b18ddaba0edd5d1f3c1a",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/data/ResConfigFlags.java",
      "status": "modified",
      "additions": 62,
      "deletions": 15,
      "changes": 77,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/db38c217ae782993018093ce40bbe58ea98706f3/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2FResConfigFlags.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/db38c217ae782993018093ce40bbe58ea98706f3/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2FResConfigFlags.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2FResConfigFlags.java?ref=db38c217ae782993018093ce40bbe58ea98706f3",
      "patch": "@@ -16,6 +16,7 @@\n \n package brut.androlib.res.data;\n \n+import javax.security.auth.callback.CallbackHandler;\n import java.util.logging.Logger;\n \n /**\n@@ -26,9 +27,7 @@ public class ResConfigFlags {\n     public final short mnc;\n \n     public final char[] language;\n-    public final char[] country;\n-\n-    public final short layoutDirection;\n+    public final char[] region;\n \n     public final byte orientation;\n     public final byte touchscreen;\n@@ -50,6 +49,9 @@ public class ResConfigFlags {\n     public final short screenWidthDp;\n     public final short screenHeightDp;\n \n+    private final char[] localeScript;\n+    private final char[] localeVariant;\n+\n     public final boolean isInvalid;\n \n     private final String mQualifiers;\n@@ -58,8 +60,7 @@ public ResConfigFlags() {\n         mcc = 0;\n         mnc = 0;\n         language = new char[] { '\\00', '\\00' };\n-        country = new char[] { '\\00', '\\00' };\n-        layoutDirection = SCREENLAYOUT_LAYOUTDIR_ANY;\n+        region = new char[] { '\\00', '\\00' };\n         orientation = ORIENTATION_ANY;\n         touchscreen = TOUCHSCREEN_ANY;\n         density = DENSITY_DEFAULT;\n@@ -74,17 +75,20 @@ public ResConfigFlags() {\n         smallestScreenWidthDp = 0;\n         screenWidthDp = 0;\n         screenHeightDp = 0;\n+        localeScript = new char[] { '\\00', '\\00', '\\00', '\\00' };\n+        localeVariant = new char[] { '\\00', '\\00', '\\00', '\\00', '\\00', '\\00', '\\00', '\\00' };\n         isInvalid = false;\n         mQualifiers = \"\";\n     }\n \n     public ResConfigFlags(short mcc, short mnc, char[] language,\n-                          char[] country, short layoutDirection, byte orientation,\n+                          char[] region, byte orientation,\n                           byte touchscreen, int density, byte keyboard, byte navigation,\n                           byte inputFlags, short screenWidth, short screenHeight,\n                           short sdkVersion, byte screenLayout, byte uiMode,\n                           short smallestScreenWidthDp, short screenWidthDp,\n-                          short screenHeightDp, boolean isInvalid) {\n+                          short screenHeightDp, char[] localeScript, char[] localeVariant,\n+                          boolean isInvalid) {\n         if (orientation < 0 || orientation > 3) {\n             LOGGER.warning(\"Invalid orientation value: \" + orientation);\n             orientation = 0;\n@@ -114,8 +118,7 @@ public ResConfigFlags(short mcc, short mnc, char[] language,\n         this.mcc = mcc;\n         this.mnc = mnc;\n         this.language = language;\n-        this.country = country;\n-        this.layoutDirection = layoutDirection;\n+        this.region = region;\n         this.orientation = orientation;\n         this.touchscreen = touchscreen;\n         this.density = density;\n@@ -130,6 +133,8 @@ public ResConfigFlags(short mcc, short mnc, char[] language,\n         this.smallestScreenWidthDp = smallestScreenWidthDp;\n         this.screenWidthDp = screenWidthDp;\n         this.screenHeightDp = screenHeightDp;\n+        this.localeScript = localeScript;\n+        this.localeVariant = localeVariant;\n         this.isInvalid = isInvalid;\n         mQualifiers = generateQualifiers();\n     }\n@@ -155,12 +160,8 @@ private String generateQualifiers() {\n                 ret.append(\"-mnc00\");\n             }\n         }\n-        if (language[0] != '\\00') {\n-            ret.append('-').append(language);\n-            if (country[0] != '\\00') {\n-                ret.append(\"-r\").append(country);\n-            }\n-        }\n+        ret.append(getLocaleString());\n+\n         switch (screenLayout & MASK_LAYOUTDIR) {\n             case SCREENLAYOUT_LAYOUTDIR_RTL:\n                 ret.append(\"-ldrtl\");\n@@ -369,6 +370,52 @@ private short getNaturalSdkVersionRequirement() {\n         return 0;\n     }\n \n+    private String getLocaleString() {\n+        StringBuilder sb = new StringBuilder();\n+\n+        // check for old style non BCP47 tags\n+        // allows values-xx-rXX, values-xx, values-xxx-rXX\n+        // denies values-xxx, anything else\n+        if (language[0] != '\\00' && localeScript.length == 0 && localeVariant.length == 0 &&\n+                (region.length != 3 && language.length != 3) ||\n+                (language.length == 3 && region.length == 2 && region[0] != '\\00')) {\n+            sb.append(\"-\").append(language);\n+            if (region[0] != '\\00') {\n+                sb.append(\"-r\").append(region);\n+            }\n+        } else { // BCP47\n+            if (language[0] == '\\00' && region[0] == '\\00') {\n+                return sb.toString(); // early return, no language or region\n+            }\n+            sb.append(\"-b+\");\n+            if (language[0] != '\\00') {\n+                sb.append(language);\n+            }\n+            if (localeScript.length == 4 && region.length == 2) {\n+                sb.append(\"+\").append(localeScript).append(\"+\").append(region);\n+            }\n+            if (region.length == 3) {\n+                sb.append(\"+\").append(region);\n+            }\n+            if (localeVariant.length >= 5) {\n+                if (region.length == 2) {\n+                    sb.append(\"+\").append(region);\n+                }\n+                sb.append(\"+\").append(toUpper(localeVariant));\n+            }\n+        }\n+        return sb.toString();\n+    }\n+\n+    private String toUpper(char[] character) {\n+        StringBuilder sb = new StringBuilder();\n+        for (char ch: character) {\n+            sb.append(Character.toUpperCase(ch));\n+        }\n+        return sb.toString();\n+    }\n+\n+\n     @Override\n     public String toString() {\n         return !getQualifiers().equals(\"\") ? getQualifiers() : \"[DEFAULT]\";",
      "parent_sha": "d40710005f1db36f322302aded4540672b84c17d"
    }
  },
  {
    "oid": "c7f4dfe1db3d8fbfe66315c7dc9e0c199c38b0df",
    "message": "switch to \"startsWith\" to stop AndroResGuard tricks",
    "date": "2018-02-13T13:46:52Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/c7f4dfe1db3d8fbfe66315c7dc9e0c199c38b0df",
    "details": {
      "sha": "b52d41cdaceae5afff64c577497736fd9e72ded0",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/decoder/ResFileDecoder.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/c7f4dfe1db3d8fbfe66315c7dc9e0c199c38b0df/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FResFileDecoder.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/c7f4dfe1db3d8fbfe66315c7dc9e0c199c38b0df/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FResFileDecoder.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FResFileDecoder.java?ref=c7f4dfe1db3d8fbfe66315c7dc9e0c199c38b0df",
      "patch": "@@ -58,15 +58,15 @@ public void decode(ResResource res, Directory inDir, Directory outDir)\n         }\n \n         try {\n-            if (typeName.equals(\"raw\")) {\n+            if (typeName.startsWith(\"raw\")) {\n                 decode(inDir, inFileName, outDir, outFileName, \"raw\");\n                 return;\n             }\n-            if (typeName.equals(\"font\") && !\".xml\".equals(ext)) {\n+            if (typeName.startsWith(\"font\") && !\".xml\".equals(ext)) {\n                 decode(inDir, inFileName, outDir, outFileName, \"raw\");\n                 return;\n             }\n-            if (typeName.equals(\"drawable\") || typeName.equals(\"mipmap\")) {\n+            if (typeName.startsWith(\"drawable\") || typeName.startsWith(\"mipmap\")) {\n                 if (inFileName.toLowerCase().endsWith(\".9\" + ext)) {\n                     outFileName = outResName + \".9\" + ext;\n ",
      "parent_sha": "da9fb5115e240beb07ec55f409d98a1753412e5f"
    }
  },
  {
    "oid": "40ece96a1ae397dd07970f0f4e549d7978bb0ae9",
    "message": "remove shorthand if statement syntax",
    "date": "2017-06-28T14:09:15Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/40ece96a1ae397dd07970f0f4e549d7978bb0ae9",
    "details": {
      "sha": "d9b3808b2b0f7e982d5d679106ca72a7e9ce2738",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/data/ResResSpec.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/40ece96a1ae397dd07970f0f4e549d7978bb0ae9/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2FResResSpec.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/40ece96a1ae397dd07970f0f4e549d7978bb0ae9/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2FResResSpec.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2FResResSpec.java?ref=40ece96a1ae397dd07970f0f4e549d7978bb0ae9",
      "patch": "@@ -36,10 +36,11 @@ public ResResSpec(ResID id, String name, ResPackage pkg, ResTypeSpec type) {\n         String cleanName;\n \n         ResResSpec resResSpec = type.getResSpecUnsafe(name);\n-        if (resResSpec != null)\n+        if (resResSpec != null) {\n             cleanName = name + \"_APKTOOL_DUPLICATENAME_\" + id.toString();\n-        else\n+        } else {\n             cleanName = (name.isEmpty() ? (\"APKTOOL_DUMMYVAL_\" + id.toString()) : name);\n+        }\n         \n         this.mName = cleanName;\n         this.mPackage = pkg;",
      "parent_sha": "5d383e4a62d7c31ae1659de8ee499007e4e0cab8"
    }
  },
  {
    "oid": "e281f815469f2b5a53c161774f7b70fcd51ced1a",
    "message": "[skip] during info message, don't show apk build dir",
    "date": "2015-01-19T13:25:21Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/e281f815469f2b5a53c161774f7b70fcd51ced1a",
    "details": {
      "sha": "4deac10b0141e748f598659f84dafb3ea300dc5a",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/Androlib.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/e281f815469f2b5a53c161774f7b70fcd51ced1a/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FAndrolib.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/e281f815469f2b5a53c161774f7b70fcd51ced1a/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FAndrolib.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FAndrolib.java?ref=e281f815469f2b5a53c161774f7b70fcd51ced1a",
      "patch": "@@ -257,7 +257,7 @@ public void build(File appDir, File outFile) throws BrutException {\n \n     public void build(ExtFile appDir, File outFile)\n             throws BrutException {\n-        LOGGER.info(\"Using Apktool \" + Androlib.getVersion() + \" on \" + appDir.getName());\n+        LOGGER.info(\"Using Apktool \" + Androlib.getVersion());\n \n         Map<String, Object> meta = readMetaFile(appDir);\n         Object t1 = meta.get(\"isFrameworkApk\");",
      "parent_sha": "20504d133817405ff253e67d037978a6de49d7ca"
    }
  },
  {
    "oid": "22d792e328821228e9ab0c629ffa5335551de5c6",
    "message": "fix: support encode styled string if length larger than offset (#3254)",
    "date": "2023-08-07T23:52:34Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/22d792e328821228e9ab0c629ffa5335551de5c6",
    "details": {
      "sha": "fc9affeba0feb46b1052c1efd3753e66ce9a964a",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/decoder/StyledString.java",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/22d792e328821228e9ab0c629ffa5335551de5c6/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FStyledString.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/22d792e328821228e9ab0c629ffa5335551de5c6/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FStyledString.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FStyledString.java?ref=22d792e328821228e9ab0c629ffa5335551de5c6",
      "patch": "@@ -157,8 +157,11 @@ private void decodeIterate(PeekingIterator<Span> it) {\n             }\n \n             // write encoded raw text preceding the closing tag\n-            if (spanEnd > lastOffset) {\n+            if (spanEnd > lastOffset && text.length() >= spanEnd) {\n                 xmlValue.append(ResXmlEncoders.escapeXmlChars(text.substring(lastOffset, spanEnd)));\n+            } else if (text.length() >= lastOffset && text.length() < spanEnd) {\n+                LOGGER.warning(\"Span (\" + name + \") exceeds text length \" + text.length());\n+                xmlValue.append(ResXmlEncoders.escapeXmlChars(text.substring(lastOffset)));\n             }\n             lastOffset = spanEnd;\n ",
      "parent_sha": "50226e50c1a4e2c60a0547427bd9e637c2f35ef9"
    }
  },
  {
    "oid": "499118219e807a8957244da1f3dfdaec9b9e5c0f",
    "message": "[skip] remove test files after completion",
    "date": "2014-12-25T20:01:34Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/499118219e807a8957244da1f3dfdaec9b9e5c0f",
    "details": {
      "sha": "7e30486d688c78f5ba69fcdd2dd1b172fe457964",
      "filename": "brut.apktool/apktool-lib/src/test/java/brut/androlib/SharedLibraryTest.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/499118219e807a8957244da1f3dfdaec9b9e5c0f/brut.apktool%2Fapktool-lib%2Fsrc%2Ftest%2Fjava%2Fbrut%2Fandrolib%2FSharedLibraryTest.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/499118219e807a8957244da1f3dfdaec9b9e5c0f/brut.apktool%2Fapktool-lib%2Fsrc%2Ftest%2Fjava%2Fbrut%2Fandrolib%2FSharedLibraryTest.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Ftest%2Fjava%2Fbrut%2Fandrolib%2FSharedLibraryTest.java?ref=499118219e807a8957244da1f3dfdaec9b9e5c0f",
      "patch": "@@ -41,7 +41,7 @@ public static void beforeClass() throws BrutException {\n \n     @AfterClass\n     public static void afterClass() throws BrutException {\n-        //OS.rmdir(sTmpDir);\n+        OS.rmdir(sTmpDir);\n     }\n \n     @Test",
      "parent_sha": "c91ef3822e1043a9f7c71a442697f5fc1c099d95"
    }
  },
  {
    "oid": "e0e6cfd03f10d710e666c29456659688fb5aeea2",
    "message": "only log string decode warning when failed",
    "date": "2021-03-06T14:00:54Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/e0e6cfd03f10d710e666c29456659688fb5aeea2",
    "details": {
      "sha": "a06ff9e20a588944a4b0f8b74b34e17a6b6e05ec",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/decoder/StringBlock.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/e0e6cfd03f10d710e666c29456659688fb5aeea2/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FStringBlock.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/e0e6cfd03f10d710e666c29456659688fb5aeea2/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FStringBlock.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FStringBlock.java?ref=e0e6cfd03f10d710e666c29456659688fb5aeea2",
      "patch": "@@ -302,8 +302,8 @@ String decodeString(int offset, int length) {\n         try {\n             return (m_isUTF8 ? UTF8_DECODER : UTF16LE_DECODER).decode(wrappedBuffer).toString();\n         } catch (CharacterCodingException ex) {\n-            LOGGER.warning(\"Failed to decode a string at offset \" + offset + \" of length \" + length);\n             if (!m_isUTF8) {\n+                LOGGER.warning(\"Failed to decode a string at offset \" + offset + \" of length \" + length);\n                 return null;\n             }\n         }",
      "parent_sha": "5a66b2c42d48f0016e31ddaff3d47c65075c1d6d"
    }
  },
  {
    "oid": "bad8392487279563748bf386748c6608db4d33f4",
    "message": "Fix null mConfig in addMissingResSpecs()",
    "date": "2013-02-27T15:09:06Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/bad8392487279563748bf386748c6608db4d33f4",
    "details": {
      "sha": "84e36377ddd6c9a49839e0d854896f6e8cbdf862",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/decoder/ARSCDecoder.java",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/bad8392487279563748bf386748c6608db4d33f4/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/bad8392487279563748bf386748c6608db4d33f4/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java?ref=bad8392487279563748bf386748c6608db4d33f4",
      "patch": "@@ -319,9 +319,13 @@ private void addMissingResSpecs() throws AndrolibException {\n \t\t\tmPkg.addResSpec(spec);\n \t\t\tmType.addResSpec(spec);\n \n+\t\t\tif (mConfig == null) {\n+\t\t\t    mConfig = mPkg.getOrCreateConfig(new ResConfigFlags());\n+\t\t\t}\n+\n \t\t\tResValue value = new ResBoolValue(false, null);\n-\t\t\tResResource res = new ResResource(\n-\t\t\t\t\tmPkg.getOrCreateConfig(new ResConfigFlags()), spec, value);\n+\t\t\tResResource res = new ResResource(mConfig, spec, value);\n+\n \t\t\tmPkg.addResource(res);\n \t\t\tmConfig.addResource(res);\n \t\t\tspec.addResource(res);",
      "parent_sha": "dccbe338774dac8e8778ef76eda39e444245e40a"
    }
  },
  {
    "oid": "4d1e6ccbe4434bb5eaec2eaee78d87cd3b3347e6",
    "message": "refactor: remove pollution of global command and move to advanced\n\n - removes \"-onlymainclasses\" for long \"--only-main-classes\"",
    "date": "2019-07-14T11:23:18Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/4d1e6ccbe4434bb5eaec2eaee78d87cd3b3347e6",
    "details": {
      "sha": "f2b1d7ff4d8a1bf654b19306d47dc73d0e57e469",
      "filename": "brut.apktool/apktool-cli/src/main/java/brut/apktool/Main.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/4d1e6ccbe4434bb5eaec2eaee78d87cd3b3347e6/brut.apktool%2Fapktool-cli%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fapktool%2FMain.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/4d1e6ccbe4434bb5eaec2eaee78d87cd3b3347e6/brut.apktool%2Fapktool-cli%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fapktool%2FMain.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-cli%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fapktool%2FMain.java?ref=4d1e6ccbe4434bb5eaec2eaee78d87cd3b3347e6",
      "patch": "@@ -312,7 +312,7 @@ private static void _Options() {\n                 .desc(\"Do not decode sources.\")\n                 .build();\n \n-        Option onlyMainClassesOption = Option.builder(\"onlymainclasses\")\n+        Option onlyMainClassesOption = Option.builder()\n                 .longOpt(\"only-main-classes\")\n                 .desc(\"Only decompile the main dex classes (classes[0-9]*.dex) in the root.\")\n                 .build();\n@@ -454,6 +454,7 @@ private static void _Options() {\n             DecodeOptions.addOption(noDbgOption);\n             DecodeOptions.addOption(keepResOption);\n             DecodeOptions.addOption(analysisOption);\n+            DecodeOptions.addOption(onlyMainClassesOption);\n             DecodeOptions.addOption(apiLevelOption);\n             DecodeOptions.addOption(noAssetOption);\n             DecodeOptions.addOption(forceManOption);\n@@ -476,7 +477,6 @@ private static void _Options() {\n         DecodeOptions.addOption(frameDirOption);\n         DecodeOptions.addOption(forceDecOption);\n         DecodeOptions.addOption(noSrcOption);\n-        DecodeOptions.addOption(onlyMainClassesOption);\n         DecodeOptions.addOption(noResOption);\n \n         // add basic build options",
      "parent_sha": "d79724549c8a2eeb928d5786dc0c7c38db599a6a"
    }
  },
  {
    "oid": "01bb423db4b3cad74564239c99e9065ead4af51f",
    "message": "Apktool: Add new inverted TRDS qualifier\n\ninto awesome apktool\n\nthanks and cheers\n\nSlimRoms Team",
    "date": "2013-04-05T18:40:12Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/01bb423db4b3cad74564239c99e9065ead4af51f",
    "details": {
      "sha": "d3ffaf2e5ef43d908bdac4026e31a84ccd929cef",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/data/ResConfigFlags.java",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/01bb423db4b3cad74564239c99e9065ead4af51f/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2FResConfigFlags.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/01bb423db4b3cad74564239c99e9065ead4af51f/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2FResConfigFlags.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2FResConfigFlags.java?ref=01bb423db4b3cad74564239c99e9065ead4af51f",
      "patch": "@@ -227,6 +227,9 @@ private String generateQualifiers() {\n \t\tcase UI_MODE_TYPE_APPLIANCE:\n \t\t\tret.append(\"-appliance\");\n \t\t\tbreak;\n+\t\tcase UI_MODE_TYPE_INVERTED:\n+\t\t\tret.append(\"-inverted\");\n+\t\t\tbreak;\n \t\t}\n \t\tswitch (uiMode & MASK_UI_MODE_NIGHT) {\n \t\tcase UI_MODE_NIGHT_YES:\n@@ -462,6 +465,7 @@ public int hashCode() {\n \tpublic final static byte UI_MODE_TYPE_CAR = 0x03;\n \tpublic final static byte UI_MODE_TYPE_TELEVISION = 0x04;\n \tpublic final static byte UI_MODE_TYPE_APPLIANCE = 0x05;\n+\tpublic final static byte UI_MODE_TYPE_INVERTED = 0x45;\n \tpublic final static byte UI_MODE_TYPE_SMALLUI = 0x0c;\n \tpublic final static byte UI_MODE_TYPE_MEDIUMUI = 0x0d;\n \tpublic final static byte UI_MODE_TYPE_LARGEUI = 0x0e;\n@@ -474,4 +478,4 @@ public int hashCode() {\n \n \tprivate static final Logger LOGGER = Logger.getLogger(ResConfigFlags.class\n \t\t\t.getName());\n-}\n\\ No newline at end of file\n+}",
      "parent_sha": "69ee710e305b36184a79712219b8c95cde505fac"
    }
  },
  {
    "oid": "008b12f97c9a31d94b6ee63a18b23ce2cf7e1383",
    "message": "Replace a missed usage of Iterators.emptyIterator()",
    "date": "2015-09-30T19:16:15Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/008b12f97c9a31d94b6ee63a18b23ce2cf7e1383",
    "details": {
      "sha": "8a32b5f628c26868b4537f4e96cd5c39af6d2fef",
      "filename": "brut.apktool.smali/dexlib2/src/main/java/org/jf/dexlib2/dexbacked/util/DebugInfo.java",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/008b12f97c9a31d94b6ee63a18b23ce2cf7e1383/brut.apktool.smali%2Fdexlib2%2Fsrc%2Fmain%2Fjava%2Forg%2Fjf%2Fdexlib2%2Fdexbacked%2Futil%2FDebugInfo.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/008b12f97c9a31d94b6ee63a18b23ce2cf7e1383/brut.apktool.smali%2Fdexlib2%2Fsrc%2Fmain%2Fjava%2Forg%2Fjf%2Fdexlib2%2Fdexbacked%2Futil%2FDebugInfo.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool.smali%2Fdexlib2%2Fsrc%2Fmain%2Fjava%2Forg%2Fjf%2Fdexlib2%2Fdexbacked%2Futil%2FDebugInfo.java?ref=008b12f97c9a31d94b6ee63a18b23ce2cf7e1383",
      "patch": "@@ -32,7 +32,6 @@\n package org.jf.dexlib2.dexbacked.util;\n \n import com.google.common.collect.ImmutableSet;\n-import com.google.common.collect.Iterators;\n import org.jf.dexlib2.AccessFlags;\n import org.jf.dexlib2.DebugItemType;\n import org.jf.dexlib2.dexbacked.DexBackedDexFile;\n@@ -71,7 +70,11 @@ public static DebugInfo newOrEmpty(@Nonnull DexBackedDexFile dexFile, int debugI\n     private static class EmptyDebugInfo extends DebugInfo {\n         public static final EmptyDebugInfo INSTANCE = new EmptyDebugInfo();\n         private EmptyDebugInfo() {}\n-        @Nonnull @Override public Iterator<DebugItem> iterator() { return Iterators.emptyIterator(); }\n+\n+        @Nonnull @Override public Iterator<DebugItem> iterator() {\n+            return ImmutableSet.<DebugItem>of().iterator();\n+        }\n+\n         @Nonnull @Override public Iterator<String> getParameterNames(@Nullable DexReader reader) {\n             return ImmutableSet.<String>of().iterator();\n         }",
      "parent_sha": "5cd9d01a9ed652b11be760153db4bd65bae47fa9"
    }
  },
  {
    "oid": "ae6f8083f1d34326786a254a65e723c0ed37062e",
    "message": "Fix bug reencoding 9patch pngs\n\nFixes issue 1180.\nhttps://github.com/iBotPeaches/Apktool/issues/1180",
    "date": "2016-03-03T23:17:11Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/ae6f8083f1d34326786a254a65e723c0ed37062e",
    "details": {
      "sha": "17992b4e3edf9d448114833a218a045bbfea97fe",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/decoder/Res9patchStreamDecoder.java",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/ae6f8083f1d34326786a254a65e723c0ed37062e/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FRes9patchStreamDecoder.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/ae6f8083f1d34326786a254a65e723c0ed37062e/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FRes9patchStreamDecoder.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FRes9patchStreamDecoder.java?ref=ae6f8083f1d34326786a254a65e723c0ed37062e",
      "patch": "@@ -39,10 +39,9 @@ public void decode(InputStream in, OutputStream out)\n             BufferedImage im = ImageIO.read(new ByteArrayInputStream(data));\n             int w = im.getWidth(), h = im.getHeight();\n \n-            ImageTypeSpecifier its = ImageTypeSpecifier.createFromRenderedImage( im );\n-            BufferedImage im2 = its.createBufferedImage( w+2, h+2 );\n+            BufferedImage im2 = new BufferedImage( w+2, h+2, BufferedImage.TYPE_INT_ARGB );\n+            im2.createGraphics().drawImage( im, 1, 1, w, h, null );\n \n-            im2.getRaster().setRect(1, 1, im.getRaster());\n             NinePatch np = getNinePatch(data);\n             drawHLine(im2, h + 1, np.padLeft + 1, w - np.padRight);\n             drawVLine(im2, w + 1, np.padTop + 1, h - np.padBottom);\n@@ -139,4 +138,4 @@ public static NinePatch decode(ExtDataInput di) throws IOException {\n                     yDivs);\n         }\n     }\n-}\n\\ No newline at end of file\n+}",
      "parent_sha": "5c7702396d8f97ca0a2bdb4e7a719260866a4fd4"
    }
  },
  {
    "oid": "6d8bd55ba66039cc2efbffc4c985d9f183ac86ac",
    "message": "Generate warning instead of exception on multipackage apks.",
    "date": "2010-03-13T12:31:02Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/6d8bd55ba66039cc2efbffc4c985d9f183ac86ac",
    "details": {
      "sha": "ae41c6a00cf8288cd05ce749f67d41f0535984a0",
      "filename": "src/brut/androlib/res/AndrolibResources.java",
      "status": "modified",
      "additions": 13,
      "deletions": 5,
      "changes": 18,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/6d8bd55ba66039cc2efbffc4c985d9f183ac86ac/src%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/6d8bd55ba66039cc2efbffc4c985d9f183ac86ac/src%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/src%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java?ref=6d8bd55ba66039cc2efbffc4c985d9f183ac86ac",
      "patch": "@@ -178,14 +178,22 @@ private void loadApk(ResTable resTable, File apkFile, boolean main)\n             throws AndrolibException {\n         JniPackageGroup[] groups =\n             nativeGetPackageGroups(apkFile.getAbsolutePath());\n-        if (groups.length != 1) {\n+        if (groups.length == 0) {\n             throw new AndrolibException(\n-                \"Apk's with multiple or zero package groups not supported\");\n+                \"Apk with zero package groups: \" + apkFile.getPath());\n+        }\n+        if (groups.length > 1) {\n+            System.err.println(\n+                \"warning: apk with multiple package groups: \"\n+                + apkFile.getPath());\n         }\n         for (int i = 0; i < groups.length; i++) {\n-//            if (groups.length != 1 && i == 0) {\n-//                continue;\n-//            }\n+            if (groups.length != 1 && i == 0\n+                    && \"android\".equals(groups[i].packages[0].name)) {\n+                System.err.println(\n+                    \"warning: skipping \\\"android\\\" package group\");\n+                continue;\n+            }\n             for (JniPackage jniPkg : groups[i].packages) {\n                 ResPackage pkg = new JniPackageDecoder().decode(jniPkg, resTable);\n                 resTable.addPackage(pkg, main);",
      "parent_sha": "235bfbc8037c8c7c0a3fa9bb5e898a627e82761d"
    }
  },
  {
    "oid": "56c953cd16088fed3f0aa17b50ec8aae7ac7bd06",
    "message": "don't break BC, store classes.dex in /smali",
    "date": "2014-08-16T14:54:34Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/56c953cd16088fed3f0aa17b50ec8aae7ac7bd06",
    "details": {
      "sha": "6a2e23a0d8249d1a975d5a76e518e8d85a0c4e63",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/Androlib.java",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/56c953cd16088fed3f0aa17b50ec8aae7ac7bd06/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FAndrolib.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/56c953cd16088fed3f0aa17b50ec8aae7ac7bd06/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FAndrolib.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FAndrolib.java?ref=56c953cd16088fed3f0aa17b50ec8aae7ac7bd06",
      "patch": "@@ -71,7 +71,12 @@ public void decodeSourcesRaw(ExtFile apkFile, File outDir, String filename)\n     public void decodeSourcesSmali(File apkFile, File outDir, String filename, boolean debug, String debugLinePrefix,\n                                    boolean bakdeb, int api) throws AndrolibException {\n         try {\n-            File smaliDir = new File(outDir, SMALI_DIRNAME + \"_\" + filename.substring(0, filename.indexOf(\".\")));\n+            File smaliDir;\n+            if (filename.equalsIgnoreCase(\"classes.dex\")) {\n+                smaliDir = new File(outDir, SMALI_DIRNAME);\n+            } else {\n+                smaliDir = new File(outDir, SMALI_DIRNAME + \"_\" + filename.substring(0, filename.indexOf(\".\")));\n+            }\n             OS.rmdir(smaliDir);\n             smaliDir.mkdirs();\n             LOGGER.info(\"Baksmaling \" + filename + \"...\");",
      "parent_sha": "b2b5eb5f01faa0bc2bc85d70f8842a14f723c90e"
    }
  },
  {
    "oid": "76a940628f7a34aeed02ea228d42fc5a6d1d7356",
    "message": "greedy .dex finder is finding dex files in unknown folders\n\n - which android can't load unless its in /root of apk",
    "date": "2015-10-15T13:57:20Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/76a940628f7a34aeed02ea228d42fc5a6d1d7356",
    "details": {
      "sha": "5f98c9d2530187c4b7e51434f82ed7f7a6141ede",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/ApkDecoder.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/76a940628f7a34aeed02ea228d42fc5a6d1d7356/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FApkDecoder.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/76a940628f7a34aeed02ea228d42fc5a6d1d7356/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FApkDecoder.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FApkDecoder.java?ref=76a940628f7a34aeed02ea228d42fc5a6d1d7356",
      "patch": "@@ -251,7 +251,7 @@ public boolean hasSources() throws AndrolibException {\n \n     public boolean hasMultipleSources() throws AndrolibException {\n         try {\n-            Set<String> files = mApkFile.getDirectory().getFiles(true);\n+            Set<String> files = mApkFile.getDirectory().getFiles(false);\n             for (String file : files) {\n                 if (file.endsWith(\".dex\")) {\n                     if (! file.equalsIgnoreCase(\"classes.dex\")) {",
      "parent_sha": "e7c1bcefe8b086ce47878c0029debfee3f1a597a"
    }
  },
  {
    "oid": "61848cfa06efb859bfcac1df3ac8f6ec8062de2b",
    "message": "fix: allow AaptManager to find new naming of aapt binaries",
    "date": "2019-01-04T16:24:49Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/61848cfa06efb859bfcac1df3ac8f6ec8062de2b",
    "details": {
      "sha": "1d3f2efdde4a64a4a5cd8f61cb30349998359afc",
      "filename": "brut.j.util/src/main/java/brut/util/AaptManager.java",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/61848cfa06efb859bfcac1df3ac8f6ec8062de2b/brut.j.util%2Fsrc%2Fmain%2Fjava%2Fbrut%2Futil%2FAaptManager.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/61848cfa06efb859bfcac1df3ac8f6ec8062de2b/brut.j.util%2Fsrc%2Fmain%2Fjava%2Fbrut%2Futil%2FAaptManager.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.j.util%2Fsrc%2Fmain%2Fjava%2Fbrut%2Futil%2FAaptManager.java?ref=61848cfa06efb859bfcac1df3ac8f6ec8062de2b",
      "patch": "@@ -35,10 +35,13 @@ private static File getAppt(Integer version) throws BrutException {\n         File aaptBinary;\n         String aaptVersion = getAaptBinaryName(version);\n \n-        if (! OSDetection.is64Bit() && ! OSDetection.isWindows()) {\n+        if (! OSDetection.is64Bit() && OSDetection.isMacOSX()) {\n             throw new BrutException(\"32 bit OS detected. No 32 bit binaries available.\");\n         }\n \n+        // Set the 64 bit flag\n+        aaptVersion += OSDetection.is64Bit() ? \"_64\" : \"\";\n+\n         try {\n             if (OSDetection.isMacOSX()) {\n                 aaptBinary = Jar.getResourceAsFile(\"/prebuilt/macosx/\" + aaptVersion, AaptManager.class);",
      "parent_sha": "ec0d58fbad415a9718e89bf1d89ce89adc6dca70"
    }
  },
  {
    "oid": "bd9dce78b4cf0cbb685d650fffdc44b8e82dc6dc",
    "message": "add warning for unknown operating system and fix getFrameworkDir to use non hardcode seperator char",
    "date": "2013-09-18T02:44:57Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/bd9dce78b4cf0cbb685d650fffdc44b8e82dc6dc",
    "details": {
      "sha": "c8eea472c39927b4f90f8486eccaf9efa5e891a2",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/AndrolibResources.java",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/bd9dce78b4cf0cbb685d650fffdc44b8e82dc6dc/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/bd9dce78b4cf0cbb685d650fffdc44b8e82dc6dc/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java?ref=bd9dce78b4cf0cbb685d650fffdc44b8e82dc6dc",
      "patch": "@@ -781,8 +781,7 @@ private File getFrameworkDir() throws AndrolibException {\n         if (sFrameworkFolder != null) {\n             path = sFrameworkFolder;\n         } else if (OSDetection.isMacOSX()) {\n-            // store in user-home, for Mac OS X\n-            path = System.getProperty(\"user.home\") + File.separatorChar + \"Library/apktool/framework\";\n+            path = System.getProperty(\"user.home\") + File.separatorChar + \"Library\" + File.separatorChar + \"apktool\" + File.separatorChar + \"framework\";\n         } else {\n             path = System.getProperty(\"user.home\") + File.separatorChar + \"apktool\" + File.separatorChar + \"framework\";\n         }\n@@ -807,7 +806,6 @@ private File getFrameworkDir() throws AndrolibException {\n      * Aapt can still be overridden via --aapt/-a on build, but specific features will be disabled\n      *\n      * @url https://github.com/iBotPeaches/platform_frameworks_base\n-     * @return\n      * @throws AndrolibException\n      */\n     public File getAaptBinaryFile() throws AndrolibException {\n@@ -822,6 +820,7 @@ public File getAaptBinaryFile() throws AndrolibException {\n                 mAaptBinary = Jar\n                         .getResourceAsFile(\"/prebuilt/aapt/windows/aapt.exe\");\n             } else {\n+                LOGGER.warning(\"Unknown Operating System: \" + OSDetection.returnOS());\n                 return null;\n             }\n         } catch (BrutException ex) {",
      "parent_sha": "792188b9feb5553bff83af8feda36910c038870a"
    }
  },
  {
    "oid": "983e0ad111cd9d4aff27c8e36b5a645b99044cc5",
    "message": "fix TYPE_DYNAMIC_ATTRIBUTE support",
    "date": "2016-12-20T13:09:10Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/983e0ad111cd9d4aff27c8e36b5a645b99044cc5",
    "details": {
      "sha": "aa0741d10e6e0da5c0a529e8270c24e93523847c",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/data/value/ResValueFactory.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/983e0ad111cd9d4aff27c8e36b5a645b99044cc5/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResValueFactory.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/983e0ad111cd9d4aff27c8e36b5a645b99044cc5/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResValueFactory.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResValueFactory.java?ref=983e0ad111cd9d4aff27c8e36b5a645b99044cc5",
      "patch": "@@ -55,8 +55,9 @@ public ResScalarValue factory(int type, int value, String rawValue) throws Andro\n             case TypedValue.TYPE_INT_BOOLEAN:\n                 return new ResBoolValue(value != 0, value, rawValue);\n             case TypedValue.TYPE_DYNAMIC_REFERENCE:\n-            case TypedValue.TYPE_DYNAMIC_ATTRIBUTE:\n                 return newReference(value, rawValue);\n+            case TypedValue.TYPE_DYNAMIC_ATTRIBUTE:\n+                return newReference(value, rawValue, true);\n         }\n \n         if (type >= TypedValue.TYPE_FIRST_COLOR_INT && type <= TypedValue.TYPE_LAST_COLOR_INT) {",
      "parent_sha": "164c64cec239431224ac8fecee0424fd0b4c22dd"
    }
  },
  {
    "oid": "ed7b094b02e59795d8e73d8960146f06dfccdedc",
    "message": "move default framework location on windows/unix\n - unix - $HOME/.local/share/apktool\n - windows - $HOME/AppData/Local/apktool\n - #1277",
    "date": "2016-06-21T12:03:00Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/ed7b094b02e59795d8e73d8960146f06dfccdedc",
    "details": {
      "sha": "16eb40287d4b57c5b69dc211cf436d51d5301b92",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/AndrolibResources.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/ed7b094b02e59795d8e73d8960146f06dfccdedc/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/ed7b094b02e59795d8e73d8960146f06dfccdedc/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java?ref=ed7b094b02e59795d8e73d8960146f06dfccdedc",
      "patch": "@@ -703,8 +703,10 @@ public File getFrameworkDir() throws AndrolibException {\n \n             if (OSDetection.isMacOSX()) {\n                 path = parentPath.getAbsolutePath() + String.format(\"%1$sLibrary%1$sapktool%1$sframework\", File.separatorChar);\n+            } else if (OSDetection.isWindows()) {\n+                path = parentPath.getAbsolutePath() + String.format(\"%1$sAppData%1$sLocal%1$sapktool%1$sframework\", File.separatorChar);\n             } else {\n-                path = parentPath.getAbsolutePath() + String.format(\"%1$sapktool%1$sframework\", File.separatorChar);\n+                path = parentPath.getAbsolutePath() + String.format(\"%1$s.local%1$sshare%1$sapktool%1$sframework\", File.separatorChar);\n             }\n         }\n ",
      "parent_sha": "3c41d44d8c9ab049c74ce5a32d65ad68dcb8a0dc"
    }
  },
  {
    "oid": "0271e553705f409d642c27daec4a5c06375604c1",
    "message": "Fix regression when --frame-path points to non existing directory\n\n - fixes #1639",
    "date": "2017-10-14T16:36:54Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/0271e553705f409d642c27daec4a5c06375604c1",
    "details": {
      "sha": "dc1a97d5ab6fe3406d5e59f484ca20a3aa0b60c0",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/AndrolibResources.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/0271e553705f409d642c27daec4a5c06375604c1/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/0271e553705f409d642c27daec4a5c06375604c1/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java?ref=0271e553705f409d642c27daec4a5c06375604c1",
      "patch": "@@ -790,7 +790,7 @@ public File getFrameworkDir() throws AndrolibException {\n \n         File dir = new File(path);\n \n-        if (!dir.isDirectory()) {\n+        if (!dir.isDirectory() && dir.isFile()) {\n             LOGGER.severe(\"--frame-path is set to a file, not a directory.\");\n             System.exit(1);\n         }",
      "parent_sha": "3ec4f360ab09782421e47d16f88a95dd7f7d2058"
    }
  },
  {
    "oid": "5a54b472d19b5a366d2a996a6150e1a47248d903",
    "message": "fix: set dummy attributes to same type (@null)",
    "date": "2020-11-28T13:59:18Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/5a54b472d19b5a366d2a996a6150e1a47248d903",
    "details": {
      "sha": "9bd172781945b7d49ae3a63148d586f8a4e36264",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/decoder/ARSCDecoder.java",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/5a54b472d19b5a366d2a996a6150e1a47248d903/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/5a54b472d19b5a366d2a996a6150e1a47248d903/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java?ref=5a54b472d19b5a366d2a996a6150e1a47248d903",
      "patch": "@@ -516,9 +516,11 @@ private void addMissingResSpecs() throws AndrolibException {\n                     mType = mPkg.getOrCreateConfig(new ResConfigFlags());\n                 }\n \n-                ResValue value = new ResBoolValue(false, 0, null);\n-                ResResource res = new ResResource(mType, spec, value);\n+                // We are going to make dummy attributes a null reference (@null) now instead of a boolean false.\n+                // This is because aapt2 is much more strict when it comes to what we can put in an application.\n+                ResValue value = new ResReferenceValue(mPkg, 0, \"\");\n \n+                ResResource res = new ResResource(mType, spec, value);\n                 mPkg.addResource(res);\n                 mType.addResource(res);\n                 spec.addResource(res);",
      "parent_sha": "75aec40505e4a49fff39be5e2d76c3a329c0ad4b"
    }
  },
  {
    "oid": "af32d4da3e3de2525cf405baeb0e4a971696dc8a",
    "message": "decode sources after resources",
    "date": "2013-08-12T14:16:51Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/af32d4da3e3de2525cf405baeb0e4a971696dc8a",
    "details": {
      "sha": "a39e6dd6e325267d4a4af468bcef2ed737fc9608",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/ApkDecoder.java",
      "status": "modified",
      "additions": 14,
      "deletions": 14,
      "changes": 28,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/af32d4da3e3de2525cf405baeb0e4a971696dc8a/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FApkDecoder.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/af32d4da3e3de2525cf405baeb0e4a971696dc8a/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FApkDecoder.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FApkDecoder.java?ref=af32d4da3e3de2525cf405baeb0e4a971696dc8a",
      "patch": "@@ -81,20 +81,6 @@ public void decode() throws AndrolibException, IOException {\n         }\n         outDir.mkdirs();\n \n-        if (hasSources()) {\n-            switch (mDecodeSources) {\n-            case DECODE_SOURCES_NONE:\n-                mAndrolib.decodeSourcesRaw(mApkFile, outDir, mDebug);\n-                break;\n-            case DECODE_SOURCES_SMALI:\n-                mAndrolib.decodeSourcesSmali(mApkFile, outDir, mDebug, mDebugLinePrefix, mBakDeb);\n-                break;\n-            case DECODE_SOURCES_JAVA:\n-                mAndrolib.decodeSourcesJava(mApkFile, outDir, mDebug);\n-                break;\n-            }\n-        }\n-\n         if (hasResources()) {\n             setAnalysisMode(mAnalysisMode, true);\n             // read the resources.arsc checking for STORED vs DEFLATE\n@@ -133,6 +119,20 @@ public void decode() throws AndrolibException, IOException {\n             }\n         }\n \n+        if (hasSources()) {\n+            switch (mDecodeSources) {\n+                case DECODE_SOURCES_NONE:\n+                    mAndrolib.decodeSourcesRaw(mApkFile, outDir, mDebug);\n+                    break;\n+                case DECODE_SOURCES_SMALI:\n+                    mAndrolib.decodeSourcesSmali(mApkFile, outDir, mDebug, mDebugLinePrefix, mBakDeb);\n+                    break;\n+                case DECODE_SOURCES_JAVA:\n+                    mAndrolib.decodeSourcesJava(mApkFile, outDir, mDebug);\n+                    break;\n+            }\n+        }\n+\n         mAndrolib.decodeRawFiles(mApkFile, outDir);\n         mAndrolib.decodeUnknownFiles(mApkFile, outDir, mResTable);\n         mAndrolib.writeOriginalFiles(mApkFile, outDir);",
      "parent_sha": "570eaa7023500957341120cfc9712158429a8aeb"
    }
  },
  {
    "oid": "ea391dcd79ffe630ff67a895f8e2a4416225764a",
    "message": "fix: tighten up detectPossibleDirectoryTraversal for Windows",
    "date": "2024-01-19T02:35:00Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/ea391dcd79ffe630ff67a895f8e2a4416225764a",
    "details": {
      "sha": "e56867dc3dff6b9f81e83c62cfdffae68abfe1a8",
      "filename": "brut.j.util/src/main/java/brut/util/BrutIO.java",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/ea391dcd79ffe630ff67a895f8e2a4416225764a/brut.j.util%2Fsrc%2Fmain%2Fjava%2Fbrut%2Futil%2FBrutIO.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/ea391dcd79ffe630ff67a895f8e2a4416225764a/brut.j.util%2Fsrc%2Fmain%2Fjava%2Fbrut%2Futil%2FBrutIO.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.j.util%2Fsrc%2Fmain%2Fjava%2Fbrut%2Futil%2FBrutIO.java?ref=ea391dcd79ffe630ff67a895f8e2a4416225764a",
      "patch": "@@ -95,10 +95,7 @@ public static String sanitizeFilepath(final File directory, final String entry)\n     }\n \n     public static boolean detectPossibleDirectoryTraversal(String entry) {\n-        if (OSDetection.isWindows()) {\n-            return entry.contains(\"..\\\\\") || entry.contains(\"\\\\..\");\n-        }\n-        return entry.contains(\"../\") || entry.contains(\"/..\");\n+        return entry.contains(\"../\") || entry.contains(\"/..\") || entry.contains(\"..\\\\\") || entry.contains(\"\\\\..\");\n     }\n \n     public static String adaptSeparatorToUnix(String path) {",
      "parent_sha": "0a9ec3427bce11b9177fdc182b9e1ea22015b7d5"
    }
  },
  {
    "oid": "199780103c9abbf437b2145870e1bc248497a47e",
    "message": "refactor: support current position during chunk verbose output (#3395)",
    "date": "2023-10-11T01:23:05Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/199780103c9abbf437b2145870e1bc248497a47e",
    "details": {
      "sha": "9e0dcf2a1a84277c1776f38b1f687c4b185a0ad0",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/decoder/ARSCDecoder.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/199780103c9abbf437b2145870e1bc248497a47e/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/199780103c9abbf437b2145870e1bc248497a47e/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java?ref=199780103c9abbf437b2145870e1bc248497a47e",
      "patch": "@@ -72,7 +72,8 @@ private ResPackage[] readResourceTable() throws IOException, AndrolibException {\n             nextChunk();\n \n             LOGGER.fine(String.format(\n-                \"Chunk #%d start: type=0x%04x chunkSize=0x%08x\", chunkNumber++, mHeader.type, mHeader.chunkSize\n+                \"Chunk #%d start=0x%08x type=0x%04x chunkSize=0x%08x\",\n+                chunkNumber++, mIn.position(), mHeader.type, mHeader.chunkSize\n             ));\n \n             switch (mHeader.type) {",
      "parent_sha": "29b8430b00e8923012ff875efa2f12c640c35c3a"
    }
  },
  {
    "oid": "94e224ee3f7ec456ace7ce153d28ab1435de03c8",
    "message": "fix: delay -c removal till 2.6",
    "date": "2020-11-28T13:59:48Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/94e224ee3f7ec456ace7ce153d28ab1435de03c8",
    "details": {
      "sha": "dcb3f96e758f27b098006daae94080989b617066",
      "filename": "brut.apktool/apktool-cli/src/main/java/brut/apktool/Main.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/94e224ee3f7ec456ace7ce153d28ab1435de03c8/brut.apktool%2Fapktool-cli%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fapktool%2FMain.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/94e224ee3f7ec456ace7ce153d28ab1435de03c8/brut.apktool%2Fapktool-cli%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fapktool%2FMain.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-cli%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fapktool%2FMain.java?ref=94e224ee3f7ec456ace7ce153d28ab1435de03c8",
      "patch": "@@ -220,7 +220,7 @@ private static void cmdBuild(CommandLine cli) throws BrutException {\n             apkOptions.aaptPath = cli.getOptionValue(\"a\");\n         }\n         if (cli.hasOption(\"c\") || cli.hasOption(\"copy-original\")) {\n-            System.err.println(\"-c/--copy-original has been deprecated. Removal planned for v2.5.0 (#2129)\");\n+            System.err.println(\"-c/--copy-original has been deprecated. Removal planned for v2.6.0 (#2129)\");\n             apkOptions.copyOriginalFiles = true;\n         }\n         if (cli.hasOption(\"p\") || cli.hasOption(\"frame-path\")) {",
      "parent_sha": "5a54b472d19b5a366d2a996a6150e1a47248d903"
    }
  },
  {
    "oid": "9edcc78ee57c01580ba744dda222807029f16186",
    "message": "style: clean test file",
    "date": "2019-07-14T11:29:32Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/9edcc78ee57c01580ba744dda222807029f16186",
    "details": {
      "sha": "de460457e34eff5a211636e77d6fa0b86e2c1cb2",
      "filename": "brut.apktool/apktool-lib/src/test/java/brut/androlib/decode/DuplicateDexTest.java",
      "status": "modified",
      "additions": 1,
      "deletions": 6,
      "changes": 7,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/9edcc78ee57c01580ba744dda222807029f16186/brut.apktool%2Fapktool-lib%2Fsrc%2Ftest%2Fjava%2Fbrut%2Fandrolib%2Fdecode%2FDuplicateDexTest.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/9edcc78ee57c01580ba744dda222807029f16186/brut.apktool%2Fapktool-lib%2Fsrc%2Ftest%2Fjava%2Fbrut%2Fandrolib%2Fdecode%2FDuplicateDexTest.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Ftest%2Fjava%2Fbrut%2Fandrolib%2Fdecode%2FDuplicateDexTest.java?ref=9edcc78ee57c01580ba744dda222807029f16186",
      "patch": "@@ -16,19 +16,14 @@\n package brut.androlib.decode;\n \n import brut.androlib.*;\n-import brut.androlib.aapt1.AndroidOreoSparseTest;\n-import brut.androlib.aapt2.BuildAndDecodeTest;\n-import brut.androlib.meta.MetaInfo;\n import brut.common.BrutException;\n import brut.directory.ExtFile;\n import brut.util.OS;\n-import org.apache.commons.lang3.StringUtils;\n import org.junit.*;\n \n import java.io.File;\n import java.io.IOException;\n \n-import static org.junit.Assert.assertTrue;\n \n public class DuplicateDexTest extends BaseTest {\n \n@@ -38,7 +33,7 @@ public void beforeClass() throws Exception {\n         sTmpDir = new ExtFile(OS.createTempDirectory());\n         sTestOrigDir = new ExtFile(sTmpDir, \"duplicatedex-orig\");\n         sTestNewDir = new ExtFile(sTmpDir, \"duplicatedex-new\");\n-        LOGGER.info(\"Unpacking sparse.apk...\");\n+        LOGGER.info(\"Unpacking duplicatedex.apk...\");\n         TestUtils.copyResourceDir(DuplicateDexTest.class, \"decode/duplicatedex\", sTestOrigDir);\n     }\n ",
      "parent_sha": "4d1e6ccbe4434bb5eaec2eaee78d87cd3b3347e6"
    }
  },
  {
    "oid": "d40710005f1db36f322302aded4540672b84c17d",
    "message": "Handle BCP additional fields (script & variant)\n\nlayoutDirection was being read in error. layoutDirection is read\nvia bit shifting over screenLayout (byte 32, 33)\n\nThe then removed layoutDirection freed up 2 bytes. This gave us\n12 bytes of unknown space from byte 36 to 48. This corresponded\nto localeScript[4] and localeVariant[8]\n\nAdding proper support for those bytes fixed BCP support",
    "date": "2015-02-19T15:05:00Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/d40710005f1db36f322302aded4540672b84c17d",
    "details": {
      "sha": "57caf4ad4cd2ad3f6700b0db63e11d63af3a4e0d",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/decoder/ARSCDecoder.java",
      "status": "modified",
      "additions": 32,
      "deletions": 19,
      "changes": 51,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/d40710005f1db36f322302aded4540672b84c17d/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/d40710005f1db36f322302aded4540672b84c17d/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java?ref=d40710005f1db36f322302aded4540672b84c17d",
      "patch": "@@ -291,9 +291,11 @@ private ResConfigFlags readConfigFlags() throws IOException,\n             screenHeightDp = mIn.readShort();\n         }\n \n-        short layoutDirection = 0;\n-        if (size >= 38) {\n-            layoutDirection = mIn.readShort();\n+        char[] localeScript = {'\\00'};\n+        char[] localeVariant = {'\\00'};\n+        if (size >= 48) {\n+            localeScript = this.readScriptOrVariantChar(4).toCharArray();\n+            localeVariant = this.readScriptOrVariantChar(8).toCharArray();\n         }\n \n         int exceedingSize = size - KNOWN_CONFIG_BYTES;\n@@ -313,29 +315,40 @@ private ResConfigFlags readConfigFlags() throws IOException,\n             }\n         }\n \n-        return new ResConfigFlags(mcc, mnc, language, country, layoutDirection,\n+        return new ResConfigFlags(mcc, mnc, language, country,\n                 orientation, touchscreen, density, keyboard, navigation,\n                 inputFlags, screenWidth, screenHeight, sdkVersion,\n                 screenLayout, uiMode, smallestScreenWidthDp, screenWidthDp,\n-                screenHeightDp, isInvalid);\n+                screenHeightDp, localeScript, localeVariant, isInvalid);\n     }\n \n     private char[] unpackLanguageOrRegion(byte in0, byte in1, char base) throws AndrolibException {\n-        if (in0 == 0 && in1 == 0) {\n-            return new char[] {(char) in0, (char) in1};\n-        } else {\n-            // check high bit, if so we have a packed 3 letter code\n-            if (((in0 >> 7) & 1) == 1) {\n-                int first = in1 & 0x1F;\n-                int second = ((in1 & 0xE0) >> 5) + ((in0 & 0x03) << 3);\n-                int third = (in0 & 0x7C) >> 2;\n-\n-                // since this function handles languages & regions, we add the value(s) to the base char\n-                // which is usually 'a' or '0' depending on language or region.\n-                return new char[] { (char) (first + base), (char) (second + base), (char) (third + base) };\n+        // check high bit, if so we have a packed 3 letter code\n+        if (((in0 >> 7) & 1) == 1) {\n+            int first = in1 & 0x1F;\n+            int second = ((in1 & 0xE0) >> 5) + ((in0 & 0x03) << 3);\n+            int third = (in0 & 0x7C) >> 2;\n+\n+            // since this function handles languages & regions, we add the value(s) to the base char\n+            // which is usually 'a' or '0' depending on language or region.\n+            return new char[] { (char) (first + base), (char) (second + base), (char) (third + base) };\n+        }\n+        return new char[] { (char) in0, (char) in1 };\n+    }\n+\n+    private String readScriptOrVariantChar(int length) throws AndrolibException, IOException {\n+        StringBuilder string = new StringBuilder(16);\n+\n+        while(length-- != 0) {\n+            short ch = mIn.readByte();\n+            if (ch == 0) {\n+                break;\n             }\n-            return new char[] { (char) in0, (char) in1 };\n+            string.append((char) ch);\n         }\n+        mIn.skipBytes(length);\n+\n+        return string.toString();\n     }\n \n     private void addMissingResSpecs() throws AndrolibException {\n@@ -434,7 +447,7 @@ public FlagsOffset(int offset, int count) {\n     }\n \n     private static final Logger LOGGER = Logger.getLogger(ARSCDecoder.class.getName());\n-    private static final int KNOWN_CONFIG_BYTES = 38;\n+    private static final int KNOWN_CONFIG_BYTES = 48;\n \n     public static class ARSCData {\n ",
      "parent_sha": "af65dea3194ce50547c255ae833b722f1610be5b"
    }
  },
  {
    "oid": "6eb419af7db6ad30932d1b875fe22fc84616aaec",
    "message": "forgot to re-merge in ConfigFlag fix, as seen here: http://developer.android.com/guide/topics/resources/providing-resources.html -tvdpi is now used instead of the -television para.",
    "date": "2012-06-08T17:31:49Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/6eb419af7db6ad30932d1b875fe22fc84616aaec",
    "details": {
      "sha": "0e392e2ec225d33a910f0e39af23878c57d07c8b",
      "filename": "apktool-lib/src/main/java/brut/androlib/res/data/ResConfigFlags.java",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/6eb419af7db6ad30932d1b875fe22fc84616aaec/apktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2FResConfigFlags.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/6eb419af7db6ad30932d1b875fe22fc84616aaec/apktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2FResConfigFlags.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/apktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2FResConfigFlags.java?ref=6eb419af7db6ad30932d1b875fe22fc84616aaec",
      "patch": "@@ -196,9 +196,6 @@ private String generateQualifiers() {\n             case UI_MODE_TYPE_DESK:\n                 ret.append(\"-desk\");\n                 break;\n-            case UI_MODE_TYPE_TELEVISION:\n-                ret.append(\"-television\");\n-                break;\n         }\n         switch (uiMode & MASK_UI_MODE_NIGHT) {\n             case UI_MODE_NIGHT_YES:\n@@ -220,6 +217,9 @@ private String generateQualifiers() {\n             case DENSITY_HIGH:\n                 ret.append(\"-hdpi\");\n                 break;\n+            case DENSITY_TV:\n+                ret.append(\"-tvdpi\");\n+                break;\n             case DENSITY_XHIGH:\n                 ret.append(\"-xhdpi\");\n                 break;\n@@ -365,6 +365,7 @@ public int hashCode() {\n     public final static short DENSITY_DEFAULT = 0;\n     public final static short DENSITY_LOW = 120;\n     public final static short DENSITY_MEDIUM = 160;\n+    public final static short DENSITY_TV = 213;\n     public final static short DENSITY_HIGH = 240;\n     public final static short DENSITY_XHIGH = 320;\n     public final static short DENSITY_NONE = -1;",
      "parent_sha": "de52fcba8c55d7afa2e16f9667f09d29164f59b4"
    }
  },
  {
    "oid": "472a02db41937c4453324ff47d5806d5b51a1a77",
    "message": "Formatting for right-hand margin",
    "date": "2015-03-25T03:22:05Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/472a02db41937c4453324ff47d5806d5b51a1a77",
    "details": {
      "sha": "ea09ce303863da576303cde2da7b64bb9d0b22cf",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/Androlib.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/472a02db41937c4453324ff47d5806d5b51a1a77/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FAndrolib.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/472a02db41937c4453324ff47d5806d5b51a1a77/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FAndrolib.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FAndrolib.java?ref=472a02db41937c4453324ff47d5806d5b51a1a77",
      "patch": "@@ -590,7 +590,8 @@ private void copyExistingFiles(ZipFile inputFile, ZipOutputStream outputFile, by\n         }\n     }\n \n-    private void copyUnknownFiles(File appDir, ZipOutputStream outputFile, Map<String, String> files, byte[] buffer) throws IOException {\n+    private void copyUnknownFiles(File appDir, ZipOutputStream outputFile, Map<String, String> files, byte[] buffer)\n+            throws IOException {\n         File unknownFileDir = new File(appDir, UNK_DIRNAME);\n \n         // loop through unknown files\n@@ -602,7 +603,7 @@ private void copyUnknownFiles(File appDir, ZipOutputStream outputFile, Map<Strin\n \n             ZipEntry newEntry = new ZipEntry(unknownFileInfo.getKey());\n             int method = Integer.valueOf(unknownFileInfo.getValue());\n-            LOGGER.fine(\"Copying unknown file \" + unknownFileInfo.getKey() + \" with method \" + unknownFileInfo.getValue());\n+            LOGGER.fine(String.format(\"Copying unknown file %s with method %d\", unknownFileInfo.getKey(), method));\n             if(method == ZipEntry.STORED) {\n                 newEntry.setMethod(ZipEntry.STORED);\n                 newEntry.setSize(inputFile.length());",
      "parent_sha": "628286c022e3a872d6ab6bfb3431579f98743c25"
    }
  },
  {
    "oid": "12107ecde82806c4f2c3181b5462c5a25c2d2b82",
    "message": "No need to reevaluate 'resource != null'",
    "date": "2015-01-21T13:39:34Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/12107ecde82806c4f2c3181b5462c5a25c2d2b82",
    "details": {
      "sha": "8e6a9f097206c3dea1094b716e7dbc9511d863c3",
      "filename": "brut.apktool.smali/baksmali/src/main/java/org/jf/baksmali/Adaptors/Format/InstructionMethodItem.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/12107ecde82806c4f2c3181b5462c5a25c2d2b82/brut.apktool.smali%2Fbaksmali%2Fsrc%2Fmain%2Fjava%2Forg%2Fjf%2Fbaksmali%2FAdaptors%2FFormat%2FInstructionMethodItem.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/12107ecde82806c4f2c3181b5462c5a25c2d2b82/brut.apktool.smali%2Fbaksmali%2Fsrc%2Fmain%2Fjava%2Forg%2Fjf%2Fbaksmali%2FAdaptors%2FFormat%2FInstructionMethodItem.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool.smali%2Fbaksmali%2Fsrc%2Fmain%2Fjava%2Forg%2Fjf%2Fbaksmali%2FAdaptors%2FFormat%2FInstructionMethodItem.java?ref=12107ecde82806c4f2c3181b5462c5a25c2d2b82",
      "patch": "@@ -503,8 +503,9 @@ protected boolean writeCommentIfResourceId(IndentingWriter writer, int val) thro\n         if (resource != null) {\n             writer.write(\"    # \");\n             writer.write(resource);\n+            return true;\n         }\n-        return (resource != null);\n+        return false;\n     }\n \n     protected void writeFieldOffset(IndentingWriter writer) throws IOException {",
      "parent_sha": "f5765d37c86742f610191ce963e749c7d0f88341"
    }
  },
  {
    "oid": "b02b265ae216085dab55fde029e1f13ab766aff4",
    "message": "style: cleanup syntax",
    "date": "2019-11-19T11:55:27Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/b02b265ae216085dab55fde029e1f13ab766aff4",
    "details": {
      "sha": "9978ac11409c728e9b10f55b5ea191829c32dd38",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/Androlib.java",
      "status": "modified",
      "additions": 1,
      "deletions": 6,
      "changes": 7,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/b02b265ae216085dab55fde029e1f13ab766aff4/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FAndrolib.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/b02b265ae216085dab55fde029e1f13ab766aff4/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FAndrolib.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FAndrolib.java?ref=b02b265ae216085dab55fde029e1f13ab766aff4",
      "patch": "@@ -19,7 +19,6 @@\n import brut.androlib.meta.MetaInfo;\n import brut.androlib.meta.UsesFramework;\n import brut.androlib.res.AndrolibResources;\n-import brut.androlib.res.data.ResConfigFlags;\n import brut.androlib.res.data.ResPackage;\n import brut.androlib.res.data.ResTable;\n import brut.androlib.res.data.ResUnknownFiles;\n@@ -42,7 +41,6 @@\n \n import org.apache.commons.io.FileUtils;\n import org.apache.commons.io.FilenameUtils;\n-import org.apache.commons.lang3.StringUtils;\n \n /**\n  * @author Ryszard Wi\u015bniewski <brut.alll@gmail.com>\n@@ -168,10 +166,7 @@ public void recordUncompressedFiles(ExtFile apkFile, Collection<String> uncompre\n             String ext;\n \n             for (String file : files) {\n-                if (isAPKFileNames(file) &&\n-                        unk.getCompressionLevel(file) == 0 &&\n-                        unk.getSize(file) != 0) {\n-\n+                if (isAPKFileNames(file) && unk.getCompressionLevel(file) == 0 && unk.getSize(file) != 0) {\n                     ext = FilenameUtils.getExtension(file);\n \n                     if (ext.isEmpty() || !NO_COMPRESS_PATTERN.matcher(ext).find()) {",
      "parent_sha": "7910802648d72a361376f83f59de191541f5a42f"
    }
  },
  {
    "oid": "a1ca5019d8eaf2c405a7c04195ad982563911074",
    "message": "fix spacing in ResArrayValue",
    "date": "2013-11-23T14:35:08Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/a1ca5019d8eaf2c405a7c04195ad982563911074",
    "details": {
      "sha": "749cc054bb36bef41445a394a9005b43791fe52e",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/data/value/ResArrayValue.java",
      "status": "modified",
      "additions": 47,
      "deletions": 47,
      "changes": 94,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/a1ca5019d8eaf2c405a7c04195ad982563911074/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResArrayValue.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/a1ca5019d8eaf2c405a7c04195ad982563911074/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResArrayValue.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResArrayValue.java?ref=a1ca5019d8eaf2c405a7c04195ad982563911074",
      "patch": "@@ -29,65 +29,65 @@\n  * @author Ryszard Wi\u015bniewski <brut.alll@gmail.com>\n  */\n public class ResArrayValue extends ResBagValue implements\n-\t\tResValuesXmlSerializable {\n-\tprivate String mRawItems;\n+        ResValuesXmlSerializable {\n+    private String mRawItems;\n \n-\tResArrayValue(ResReferenceValue parent, Duo<Integer, ResScalarValue>[] items) {\n-\t\tsuper(parent);\n+    ResArrayValue(ResReferenceValue parent, Duo<Integer, ResScalarValue>[] items) {\n+        super(parent);\n \n-\t\tmItems = new ResScalarValue[items.length];\n-\t\tfor (int i = 0; i < items.length; i++) {\n-\t\t\tmItems[i] = items[i].m2;\n-\t\t}\n-\t}\n+        mItems = new ResScalarValue[items.length];\n+        for (int i = 0; i < items.length; i++) {\n+            mItems[i] = items[i].m2;\n+        }\n+    }\n \n-\tpublic ResArrayValue(ResReferenceValue parent, ResScalarValue[] items) {\n-\t\tsuper(parent);\n-\t\tmItems = items;\n-\t}\n+    public ResArrayValue(ResReferenceValue parent, ResScalarValue[] items) {\n+        super(parent);\n+        mItems = items;\n+    }\n \n-\t@Override\n-\tpublic void serializeToResValuesXml(XmlSerializer serializer,\n-\t\t\tResResource res) throws IOException, AndrolibException {\n-\t\tString type = getType();\n-\t\ttype = (type == null ? \"\" : type + \"-\") + \"array\";\n-\t\tserializer.startTag(null, type);\n-\t\tserializer.attribute(null, \"name\", res.getResSpec().getName());\n-\t\tfor (int i = 0; i < mItems.length; i++) {\n-\t\t\tserializer.startTag(null, \"item\");\n-\t\t\tserializer.text(mItems[i].encodeAsResXmlNonEscapedItemValue());\n-\t\t\tserializer.endTag(null, \"item\");\n-\t\t}\n-\t\tserializer.endTag(null, type);\n-\t}\n+    @Override\n+    public void serializeToResValuesXml(XmlSerializer serializer,\n+                                        ResResource res) throws IOException, AndrolibException {\n+        String type = getType();\n+        type = (type == null ? \"\" : type + \"-\") + \"array\";\n+        serializer.startTag(null, type);\n+        serializer.attribute(null, \"name\", res.getResSpec().getName());\n+        for (int i = 0; i < mItems.length; i++) {\n+            serializer.startTag(null, \"item\");\n+            serializer.text(mItems[i].encodeAsResXmlNonEscapedItemValue());\n+            serializer.endTag(null, \"item\");\n+        }\n+        serializer.endTag(null, type);\n+    }\n \n-\tpublic String getType() throws AndrolibException {\n-\t\tif (mItems.length == 0) {\n-\t\t\treturn null;\n-\t\t}\n-\t\tString type = mItems[0].getType();\n-\t\tfor (int i = 1; i < mItems.length; i++) {\n+    public String getType() throws AndrolibException {\n+        if (mItems.length == 0) {\n+            return null;\n+        }\n+        String type = mItems[0].getType();\n+        for (int i = 1; i < mItems.length; i++) {\n \n-\t\t\tif (mItems[i].encodeAsResXmlItemValue().startsWith(\"@string\")) {\n-\t\t\t\treturn \"string\";\n-\t\t\t} else if (mItems[i].encodeAsResXmlItemValue().startsWith(\"@drawable\")) {\n-\t\t\t\treturn null;\n+            if (mItems[i].encodeAsResXmlItemValue().startsWith(\"@string\")) {\n+                return \"string\";\n+            } else if (mItems[i].encodeAsResXmlItemValue().startsWith(\"@drawable\")) {\n+                return null;\n             } else if (mItems[i].encodeAsResXmlItemValue().startsWith(\"@integer\")) {\n                 return \"integer\";\n-\t\t\t} else if (!\"string\".equals(type) && !\"integer\".equals(type)) {\n-\t\t\t\treturn null;\n-\t\t\t} else if (!type.equals(mItems[i].getType())) {\n-\t\t\t\treturn null;\n-\t\t\t}\n-\t\t}\n+            } else if (!\"string\".equals(type) && !\"integer\".equals(type)) {\n+                return null;\n+            } else if (!type.equals(mItems[i].getType())) {\n+                return null;\n+            }\n+        }\n         if (!Arrays.asList(AllowedArrayTypes).contains(type)) {\n             return \"string\";\n         }\n-\t\treturn type;\n-\t}\n+        return type;\n+    }\n \n-\tprivate final ResScalarValue[] mItems;\n+    private final ResScalarValue[] mItems;\n     private final String AllowedArrayTypes[] = {\"string\", \"integer\"};\n \n-\tpublic static final int BAG_KEY_ARRAY_START = 0x02000000;\n+    public static final int BAG_KEY_ARRAY_START = 0x02000000;\n }",
      "parent_sha": "e91790e67698597f9ebbb225da69593f6332bbf5"
    }
  },
  {
    "oid": "98ed17ca9d6cd984eb4c31099d5e7b2f4d63aa5d",
    "message": "Windows build fix (skip checking files in /values* for test application).\n\nI didn't tracked down where the issue comes from and whether this is expected behaviour (actually I doubt). But when building on Windows, the test trys to create a strings.xml in \"values-mcc004-mnc4-en-rUS-ldrtl-sw100dp-w200dp-h300dp-xlarge-long-land-desk-night-xhdpi-finger-keyssoft-12key-navhidden-dpad\". This exceeds the max length for file/directory names in Windows and therefore the build aborts.\r\n\r\nBecause this was currently the only issue that breaks building on Windows (when https://github.com/eyecatchup/Apktool/commit/073019fa541d17c16c6ca8e628f5e7a48285e639 is applied), this workaround should do the trick (for now).",
    "date": "2013-11-18T12:42:46Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/98ed17ca9d6cd984eb4c31099d5e7b2f4d63aa5d",
    "details": {
      "sha": "fe56bcff10575466891081f880299bce27d0533e",
      "filename": "brut.apktool/apktool-lib/src/test/java/brut/androlib/BuildAndDecodeTest.java",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/98ed17ca9d6cd984eb4c31099d5e7b2f4d63aa5d/brut.apktool%2Fapktool-lib%2Fsrc%2Ftest%2Fjava%2Fbrut%2Fandrolib%2FBuildAndDecodeTest.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/98ed17ca9d6cd984eb4c31099d5e7b2f4d63aa5d/brut.apktool%2Fapktool-lib%2Fsrc%2Ftest%2Fjava%2Fbrut%2Fandrolib%2FBuildAndDecodeTest.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Ftest%2Fjava%2Fbrut%2Fandrolib%2FBuildAndDecodeTest.java?ref=98ed17ca9d6cd984eb4c31099d5e7b2f4d63aa5d",
      "patch": "@@ -161,9 +161,11 @@ public void xmlReferencesTest() throws BrutException {\n \n \t@Test\n \tpublic void qualifiersTest() throws BrutException {\n-\t\tcompareValuesFiles(\"values-mcc004-mnc4-en-rUS-ldrtl-sw100dp-w200dp-h300dp\"\n-\t\t\t\t+ \"-xlarge-long-land-desk-night-xhdpi-finger-keyssoft-12key\"\n-\t\t\t\t+ \"-navhidden-dpad/strings.xml\");\n+\t\tif (!System.getProperty(\"os.name\").toLowerCase().contains(\"windows\")) {\n+\t\t\tcompareValuesFiles(\"values-mcc004-mnc4-en-rUS-ldrtl-sw100dp-w200dp-h300dp\"\n+\t\t\t\t\t + \"-xlarge-long-land-desk-night-xhdpi-finger-keyssoft-12key\"\n+\t\t\t\t\t + \"-navhidden-dpad/strings.xml\");\n+\t\t}\n \t}\n \n     @Test",
      "parent_sha": "073019fa541d17c16c6ca8e628f5e7a48285e639"
    }
  },
  {
    "oid": "db553ebe8d637335bf1526edf38142870f24721e",
    "message": "Fix null pointer\n\nWhen I am decompiling an apk, I got this exception:\r\nException in thread \"main\" java.lang.NullPointerException\r\n        at brut.androlib.res.data.ResResSpec.<init>(ResResSpec.java:42)",
    "date": "2018-12-17T20:12:28Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/db553ebe8d637335bf1526edf38142870f24721e",
    "details": {
      "sha": "aef954271816c682dac52754466110cd1fd89ec6",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/data/ResResSpec.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/db553ebe8d637335bf1526edf38142870f24721e/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2FResResSpec.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/db553ebe8d637335bf1526edf38142870f24721e/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2FResResSpec.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2FResResSpec.java?ref=db553ebe8d637335bf1526edf38142870f24721e",
      "patch": "@@ -39,7 +39,7 @@ public ResResSpec(ResID id, String name, ResPackage pkg, ResTypeSpec type) {\n         if (resResSpec != null) {\n             cleanName = name + \"_APKTOOL_DUPLICATENAME_\" + id.toString();\n         } else {\n-            cleanName = (name.isEmpty() ? (\"APKTOOL_DUMMYVAL_\" + id.toString()) : name);\n+            cleanName = ((name == null || name.isEmpty()) ? (\"APKTOOL_DUMMYVAL_\" + id.toString()) : name);\n         }\n         \n         this.mName = cleanName;",
      "parent_sha": "3cf5cb6f78ee3fb5d135e5a35597550e8381d969"
    }
  },
  {
    "oid": "c294e014e041ba9ed8ec429592d634765365f32a",
    "message": "Resolve a resource leak where the ZipFile is not closed (#3618)\n\nIf th zip entry for resources.arsc is not found an exception is\r\nthrown, but the ZipFile is not closed. Using try-with-resources\r\nmeans that the ZipFile will always be closed irrespective of how\r\nthe code block exits.",
    "date": "2024-06-11T10:42:47Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/c294e014e041ba9ed8ec429592d634765365f32a",
    "details": {
      "sha": "80ab4b28f3f68e789697d02aa5ef85429f89119e",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/Framework.java",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/c294e014e041ba9ed8ec429592d634765365f32a/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FFramework.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/c294e014e041ba9ed8ec429592d634765365f32a/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FFramework.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FFramework.java?ref=c294e014e041ba9ed8ec429592d634765365f32a",
      "patch": "@@ -52,8 +52,7 @@ public void installFramework(File frameFile) throws AndrolibException {\n     public void installFramework(File frameFile, String tag) throws AndrolibException {\n         InputStream in = null;\n         ZipOutputStream out = null;\n-        try {\n-            ZipFile zip = new ZipFile(frameFile);\n+        try(ZipFile zip = new ZipFile(frameFile)) {\n             ZipEntry entry = zip.getEntry(\"resources.arsc\");\n \n             if (entry == null) {\n@@ -98,7 +97,6 @@ public void installFramework(File frameFile, String tag) throws AndrolibExceptio\n                 out.closeEntry();\n             }\n \n-            zip.close();\n             LOGGER.info(\"Framework installed to: \" + outFile);\n         } catch (IOException ex) {\n             throw new AndrolibException(ex);",
      "parent_sha": "4d857dbff4e79c31cd71106846e913541e30e1ad"
    }
  },
  {
    "oid": "c07e4a92e663ce6457d4f430e311a4cf14bbbea6",
    "message": "fix: load type spec if no TYPE_SPEC chunks (#3325)",
    "date": "2023-09-11T10:24:23Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/c07e4a92e663ce6457d4f430e311a4cf14bbbea6",
    "details": {
      "sha": "90bc296ca02e1167116ab16577393f5c47610d95",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/decoder/ARSCDecoder.java",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/c07e4a92e663ce6457d4f430e311a4cf14bbbea6/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/c07e4a92e663ce6457d4f430e311a4cf14bbbea6/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java?ref=c07e4a92e663ce6457d4f430e311a4cf14bbbea6",
      "patch": "@@ -260,10 +260,16 @@ private ResTypeSpec readTableSpecType() throws AndrolibException, IOException {\n     private ResType readTableType() throws IOException, AndrolibException {\n         checkChunkType(ARSCHeader.XML_TYPE_TYPE);\n         int typeId = mIn.readUnsignedByte() - mTypeIdOffset;\n+\n+        // #3311 - Some older applications have no TYPE_SPEC chunks, but still define TYPE chunks.\n         if (mResTypeSpecs.containsKey(typeId)) {\n-            mResId = (0xff000000 & mResId) | mResTypeSpecs.get(typeId).getId() << 16;\n             mTypeSpec = mResTypeSpecs.get(typeId);\n+        } else {\n+            mTypeSpec = new ResTypeSpec(mTypeNames.getString(typeId - 1), typeId);\n+            addTypeSpec(mTypeSpec);\n+            mPkg.addType(mTypeSpec);\n         }\n+        mResId = (0xff000000 & mResId) | mTypeSpec.getId() << 16;\n \n         int typeFlags = mIn.readByte();\n         mIn.skipBytes(2); // reserved",
      "parent_sha": "dd32a3c301607f66de1be61cfe512ffa580ddd5e"
    }
  },
  {
    "oid": "fefc5e226ac9868492bca8afd71006162cd1b4a9",
    "message": "refactor: use MultiDexContainer instead of DexBackedDexFile",
    "date": "2019-08-17T11:00:15Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/fefc5e226ac9868492bca8afd71006162cd1b4a9",
    "details": {
      "sha": "4f26759b20d47a12427c05f414d214568a530f8b",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/src/SmaliDecoder.java",
      "status": "modified",
      "additions": 21,
      "deletions": 3,
      "changes": 24,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/fefc5e226ac9868492bca8afd71006162cd1b4a9/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fsrc%2FSmaliDecoder.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/fefc5e226ac9868492bca8afd71006162cd1b4a9/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fsrc%2FSmaliDecoder.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fsrc%2FSmaliDecoder.java?ref=fefc5e226ac9868492bca8afd71006162cd1b4a9",
      "patch": "@@ -24,6 +24,7 @@\n import org.jf.dexlib2.dexbacked.DexBackedDexFile;\n import org.jf.dexlib2.dexbacked.DexBackedOdexFile;\n import org.jf.dexlib2.analysis.InlineMethodResolver;\n+import org.jf.dexlib2.iface.MultiDexContainer;\n \n import java.io.File;\n import java.io.IOException;\n@@ -68,10 +69,27 @@ private void decode() throws AndrolibException {\n                 jobs = 6;\n             }\n \n-            // create the dex\n-            DexBackedDexFile dexFile = DexFileFactory.loadDexEntry(mApkFile, mDexFile, true, Opcodes.forApi(mApi));\n+            // create the container\n+            MultiDexContainer<? extends DexBackedDexFile> container = DexFileFactory.loadDexContainer(mApkFile, Opcodes.forApi(mApi));\n+            MultiDexContainer.DexEntry<? extends DexBackedDexFile> dexEntry;\n+            DexBackedDexFile dexFile;\n \n-            if (dexFile.isOdexFile()) {\n+            // If we have 1 item, ignore the passed file. Pull the DexFile we need.\n+            if (container.getDexEntryNames().size() == 1) {\n+                dexEntry = container.getEntry(container.getDexEntryNames().get(0));\n+            } else {\n+                dexEntry = container.getEntry(mDexFile);\n+            }\n+\n+            // Double check the passed param exists\n+            if (dexEntry == null) {\n+                dexEntry = container.getEntry(container.getDexEntryNames().get(0));\n+            }\n+\n+            assert dexEntry != null;\n+            dexFile = dexEntry.getDexFile();\n+\n+            if (dexFile.supportsOptimizedOpcodes()) {\n                 throw new AndrolibException(\"Warning: You are disassembling an odex file without deodexing it.\");\n             }\n ",
      "parent_sha": "945ce9b3d4a757b4f78dd4e4f7381756c36ac971"
    }
  },
  {
    "oid": "39fea5fa2cd6b8410953675a21babbda9b2bead5",
    "message": "[tests] add test for shared library rebuild",
    "date": "2015-03-14T13:20:18Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/39fea5fa2cd6b8410953675a21babbda9b2bead5",
    "details": {
      "sha": "2006a2d3519d9d494f0324f3c50a049fde17d270",
      "filename": "brut.apktool/apktool-lib/src/test/java/brut/androlib/SharedLibraryTest.java",
      "status": "modified",
      "additions": 20,
      "deletions": 7,
      "changes": 27,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/39fea5fa2cd6b8410953675a21babbda9b2bead5/brut.apktool%2Fapktool-lib%2Fsrc%2Ftest%2Fjava%2Fbrut%2Fandrolib%2FSharedLibraryTest.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/39fea5fa2cd6b8410953675a21babbda9b2bead5/brut.apktool%2Fapktool-lib%2Fsrc%2Ftest%2Fjava%2Fbrut%2Fandrolib%2FSharedLibraryTest.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Ftest%2Fjava%2Fbrut%2Fandrolib%2FSharedLibraryTest.java?ref=39fea5fa2cd6b8410953675a21babbda9b2bead5",
      "patch": "@@ -70,29 +70,42 @@ public void isFrameworkInstallingWorking() throws AndrolibException {\n     }\n \n     @Test\n-    public void isSharedResourceDecodingWorking() throws IOException, BrutException {\n-        String framework = \"library.apk\";\n+    public void isSharedResourceDecodingAndRebuildingWorking() throws IOException, BrutException {\n+        String library = \"library.apk\";\n         String client = \"client.apk\";\n \n-\n+        // setup apkOptions\n         ApkOptions apkOptions = new ApkOptions();\n         apkOptions.frameworkFolderLocation = sTmpDir.getAbsolutePath();\n         apkOptions.frameworkTag = \"shared\";\n \n-        new Androlib(apkOptions).installFramework(new File(sTmpDir + File.separator + framework));\n-\n+        // install library/framework\n+        new Androlib(apkOptions).installFramework(new File(sTmpDir + File.separator + library));\n         assertTrue(fileExists(\"2-shared.apk\"));\n \n+        // decode client.apk\n         ApkDecoder apkDecoder = new ApkDecoder(new File(sTmpDir + File.separator + client));\n         apkDecoder.setOutDir(new File(sTmpDir + File.separator + client + \".out\"));\n         apkDecoder.setFrameworkDir(apkOptions.frameworkFolderLocation);\n         apkDecoder.setFrameworkTag(apkOptions.frameworkTag);\n         apkDecoder.decode();\n \n-        ExtFile testApk = new ExtFile(sTmpDir, client + \".out\");\n-        new Androlib(apkOptions).build(testApk, null);\n+        // decode library.apk\n+        ApkDecoder libraryDecoder = new ApkDecoder(new File(sTmpDir + File.separator + library));\n+        libraryDecoder.setOutDir(new File(sTmpDir + File.separator + library + \".out\"));\n+        libraryDecoder.setFrameworkDir(apkOptions.frameworkFolderLocation);\n+        libraryDecoder.setFrameworkTag(apkOptions.frameworkTag);\n+        libraryDecoder.decode();\n \n+        // build client.apk\n+        ExtFile clientApk = new ExtFile(sTmpDir, client + \".out\");\n+        new Androlib(apkOptions).build(clientApk, null);\n         assertTrue(fileExists(client + \".out\" + File.separator + \"dist\" + File.separator + client));\n+\n+        // build library.apk (shared library)\n+        ExtFile libraryApk = new ExtFile(sTmpDir, library + \".out\");\n+        new Androlib(apkOptions).build(libraryApk, null);\n+        assertTrue(fileExists(library + \".out\" + File.separator + \"dist\" + File.separator + library));\n     }\n \n     private boolean fileExists(String filepath) {",
      "parent_sha": "fac43a62b83ddf0282c02a584783624673068c59"
    }
  },
  {
    "oid": "a031787eced0bc6b17ef8bd98d0b0cc7b755b0a9",
    "message": "switch from URI to Paths",
    "date": "2014-05-03T12:37:52Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/a031787eced0bc6b17ef8bd98d0b0cc7b755b0a9",
    "details": {
      "sha": "2ab947392176c9144e0ab7286bd0d76baea51efe",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/Androlib.java",
      "status": "modified",
      "additions": 6,
      "deletions": 9,
      "changes": 15,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/a031787eced0bc6b17ef8bd98d0b0cc7b755b0a9/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FAndrolib.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/a031787eced0bc6b17ef8bd98d0b0cc7b755b0a9/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FAndrolib.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FAndrolib.java?ref=a031787eced0bc6b17ef8bd98d0b0cc7b755b0a9",
      "patch": "@@ -560,31 +560,28 @@ public void buildUnknownFiles(File appDir, File outFile, Map<String, Object> met\n \n                 // create filesystem\n                 Path path = Paths.get(outFile.getAbsolutePath());\n-                URI apkFileSystem = new URI(\"jar\", outFile.toURI().toString(), null);\n \n                 // loop through files inside\n                 for (Map.Entry<String,String> entry : files.entrySet()) {\n \n                     file = new File(mPath.toFile(), entry.getKey());\n                     if (file.isFile() && file.exists()) {\n-                        insertFolder(apkFileSystem, zip_properties, file.getParentFile(), entry.getValue(), mPath.toAbsolutePath());\n-                        insertFile(apkFileSystem, zip_properties, file, entry.getValue(), mPath.toAbsolutePath());\n+                        insertFolder(path, zip_properties, file.getParentFile(), entry.getValue(), mPath.toAbsolutePath());\n+                        insertFile(path, zip_properties, file, entry.getValue(), mPath.toAbsolutePath());\n                     }\n                 }\n             } catch (IOException ex) {\n                 throw new AndrolibException(ex);\n-            } catch (URISyntaxException ex) {\n-                throw new AndrolibException(ex);\n             }\n         }\n     }\n \n-    private void insertFile(URI apkFileSystem, Map<String,String> zip_properties, File insert, String method, Path location)\n+    private void insertFile(Path apkPath, Map<String,String> zip_properties, File insert, String method, Path location)\n             throws AndrolibException, IOException {\n \n         // ZipFileSystem only writes at .close()\n         // http://mail.openjdk.java.net/pipermail/nio-dev/2012-July/001764.html\n-        try(FileSystem fs = FileSystems.newFileSystem(apkFileSystem, zip_properties)) {\n+        try(FileSystem fs = FileSystems.newFileSystem(apkPath, null)) {\n \n             Path root = fs.getPath(\"/\");\n \n@@ -597,10 +594,10 @@ private void insertFile(URI apkFileSystem, Map<String,String> zip_properties, Fi\n         }\n     }\n \n-    private void insertFolder(URI apkFileSystem, Map<String,String> zip_properties, File insert, String method, Path location)\n+    private void insertFolder(Path apkPath, Map<String,String> zip_properties, File insert, String method, Path location)\n             throws AndrolibException, IOException {\n \n-        try(FileSystem fs = FileSystems.newFileSystem(apkFileSystem, zip_properties)) {\n+        try(FileSystem fs = FileSystems.newFileSystem(apkPath, null)) {\n \n             Path root = fs.getPath(\"/\");\n             Path dest = fs.getPath(root.toString(), insert.getAbsolutePath().replace(location.toString(),\"\"));",
      "parent_sha": "625d042c2652b15343770f228315aec8636a1121"
    }
  },
  {
    "oid": "960d111a1e9528a9c6c56f00777651aceea154da",
    "message": "cleanup unit-tests to remove hacky renaming of control",
    "date": "2015-04-22T12:20:29Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/960d111a1e9528a9c6c56f00777651aceea154da",
    "details": {
      "sha": "ea86d2d4484a37ab2c4ebc58371579bd6dcd89a1",
      "filename": "brut.apktool/apktool-lib/src/test/java/brut/androlib/BuildAndDecodeTest.java",
      "status": "modified",
      "additions": 17,
      "deletions": 17,
      "changes": 34,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/960d111a1e9528a9c6c56f00777651aceea154da/brut.apktool%2Fapktool-lib%2Fsrc%2Ftest%2Fjava%2Fbrut%2Fandrolib%2FBuildAndDecodeTest.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/960d111a1e9528a9c6c56f00777651aceea154da/brut.apktool%2Fapktool-lib%2Fsrc%2Ftest%2Fjava%2Fbrut%2Fandrolib%2FBuildAndDecodeTest.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Ftest%2Fjava%2Fbrut%2Fandrolib%2FBuildAndDecodeTest.java?ref=960d111a1e9528a9c6c56f00777651aceea154da",
      "patch": "@@ -325,37 +325,39 @@ private void compareUnknownFiles()\n         }\n     }\n \n-    private boolean compareBinaryFolder(String path, boolean res)\n+    private void compareBinaryFolder(String path, boolean res)\n             throws BrutException, IOException {\n+        Boolean exists = true;\n+\n         String tmp = \"\";\n         if (res) {\n             tmp = File.separatorChar + \"res\" + File.separatorChar;\n         }\n \n-        FileDirectory fileDirectory = new FileDirectory(sTestOrigDir + tmp + path);\n+        String location = tmp + path;\n+\n+        FileDirectory fileDirectory = new FileDirectory(sTestOrigDir + location);\n \n         Set<String> files = fileDirectory.getFiles(true);\n         for (String filename : files) {\n-            File control = new File(filename);\n \n-            // hacky fix - load test by changing name of control\n-            File test =  new File(control.toString().replace(\"testapp-orig\", \"testapp-new\"));\n+            File control = new File((sTestOrigDir + location), filename);\n+            File test =  new File((sTestNewDir + location), filename);\n \n-            if (test.isFile() && control.isFile()) {\n-                if (control.hashCode() != test.hashCode()) {\n-                    return false;\n-                }\n+            if (! test.isFile() || ! control.isFile()) {\n+                exists = false;\n             }\n         }\n-        return true;\n+\n+        assertTrue(exists);\n     }\n \n-    private boolean compareResFolder(String path) throws BrutException, IOException {\n-        return compareBinaryFolder(path, true);\n+    private void compareResFolder(String path) throws BrutException, IOException {\n+        compareBinaryFolder(path, true);\n     }\n \n-    private boolean compareLibsFolder(String path) throws BrutException, IOException {\n-        return compareBinaryFolder(File.separatorChar + path,false);\n+    private void compareLibsFolder(String path) throws BrutException, IOException {\n+        compareBinaryFolder(File.separatorChar + path, false);\n     }\n \n     private void compareValuesFiles(String path) throws BrutException {\n@@ -380,9 +382,7 @@ private void compareXmlFiles(String path, ElementQualifier qualifier)\n             Reader test = new FileReader(new File(sTestNewDir, path));\n \n             diff = new DetailedDiff(new Diff(control, test));\n-        } catch (SAXException ex) {\n-            throw new BrutException(ex);\n-        } catch (IOException ex) {\n+        } catch (SAXException | IOException ex) {\n             throw new BrutException(ex);\n         }\n ",
      "parent_sha": "4fc78b250834ac35d8efd75697d0ba04fa1c2c80"
    }
  },
  {
    "oid": "60f32f7365b2cf67b9e72e51cb160b2ed62356d2",
    "message": "Decode OpticalInset cf #1511",
    "date": "2017-05-22T20:28:10Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/60f32f7365b2cf67b9e72e51cb160b2ed62356d2",
    "details": {
      "sha": "680f471240d2882b9dc6bd059ec5e4ae3d6fa9bc",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/decoder/Res9patchStreamDecoder.java",
      "status": "modified",
      "additions": 63,
      "deletions": 3,
      "changes": 66,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/60f32f7365b2cf67b9e72e51cb160b2ed62356d2/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FRes9patchStreamDecoder.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/60f32f7365b2cf67b9e72e51cb160b2ed62356d2/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FRes9patchStreamDecoder.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FRes9patchStreamDecoder.java?ref=60f32f7365b2cf67b9e72e51cb160b2ed62356d2",
      "patch": "@@ -56,6 +56,36 @@ public void decode(InputStream in, OutputStream out)\n                 drawVLine(im2, 0, yDivs[i] + 1, yDivs[i + 1]);\n             }\n \n+            try {\n+                OpticalInset oi = getOpticalInset(data);\n+\n+                //As far as I know, only the length of the red lines are interesting\n+                //not their positions\n+                //So set them up in the corners\n+                //TODO: Check we haven't already filled it with NP_COLOR?\n+                for(int i = 0; i < oi.layoutBoundsLeft; i++) {\n+                    int x = 1 + i;\n+                    im2.setRGB(x, h + 1, OI_COLOR);\n+                }\n+\n+                for(int i = 0; i < oi.layoutBoundsRight; i++) {\n+                    int x = w - i;\n+                    im2.setRGB(x, h + 1, OI_COLOR);\n+                }\n+\n+                for(int i = 0; i < oi.layoutBoundsTop; i++) {\n+                    int y = 1 + i;\n+                    im2.setRGB(w + 1, y, OI_COLOR);\n+                }\n+\n+                for(int i = 0; i < oi.layoutBoundsBottom; i++) {\n+                    int y = h - i;\n+                    im2.setRGB(w + 1, y, OI_COLOR);\n+                }\n+            } catch(CantFind9PatchChunk t) {\n+                //This chunk might not exist\n+            }\n+\n             ImageIO.write(im2, \"png\", out);\n         } catch (IOException ex) {\n             throw new AndrolibException(ex);\n@@ -70,11 +100,18 @@ public void decode(InputStream in, OutputStream out)\n     private NinePatch getNinePatch(byte[] data) throws AndrolibException,\n             IOException {\n         ExtDataInput di = new ExtDataInput(new ByteArrayInputStream(data));\n-        find9patchChunk(di);\n+        find9patchChunk(di, NP_CHUNK_TYPE);\n         return NinePatch.decode(di);\n     }\n \n-    private void find9patchChunk(DataInput di) throws AndrolibException,\n+    private OpticalInset getOpticalInset(byte[] data) throws AndrolibException,\n+            IOException {\n+        ExtDataInput di = new ExtDataInput(new ByteArrayInputStream(data));\n+        find9patchChunk(di, OI_CHUNK_TYPE);\n+        return OpticalInset.decode(di);\n+    }\n+\n+    private void find9patchChunk(DataInput di, int magic) throws AndrolibException,\n             IOException {\n         di.skipBytes(8);\n         while (true) {\n@@ -84,7 +121,7 @@ private void find9patchChunk(DataInput di) throws AndrolibException,\n             } catch (IOException ex) {\n                 throw new CantFind9PatchChunk(\"Cant find nine patch chunk\", ex);\n             }\n-            if (di.readInt() == NP_CHUNK_TYPE) {\n+            if (di.readInt() == magic) {\n                 return;\n             }\n             di.skipBytes(size + 4);\n@@ -104,7 +141,9 @@ private void drawVLine(BufferedImage im, int x, int y1, int y2) {\n     }\n \n     private static final int NP_CHUNK_TYPE = 0x6e705463; // npTc\n+    private static final int OI_CHUNK_TYPE = 0x6e704c62; // npLb\n     private static final int NP_COLOR = 0xff000000;\n+    private static final int OI_COLOR = 0xffff0000;\n \n     private static class NinePatch {\n         public final int padLeft, padRight, padTop, padBottom;\n@@ -138,4 +177,25 @@ public static NinePatch decode(ExtDataInput di) throws IOException {\n                     yDivs);\n         }\n     }\n+\n+    private static class OpticalInset {\n+\t    public final int layoutBoundsLeft, layoutBoundsTop, layoutBoundsRight, layoutBoundsBottom;\n+\n+        public OpticalInset(int layoutBoundsLeft, int layoutBoundsTop,\n+                int layoutBoundsRight, int layoutBoundsBottom) {\n+            this.layoutBoundsLeft   = layoutBoundsLeft;\n+            this.layoutBoundsTop    = layoutBoundsTop;\n+            this.layoutBoundsRight  = layoutBoundsRight;\n+            this.layoutBoundsBottom = layoutBoundsBottom;\n+        }\n+\n+        public static OpticalInset decode(ExtDataInput di) throws IOException {\n+            int layoutBoundsLeft = Integer.reverseBytes(di.readInt());\n+            int layoutBoundsTop = Integer.reverseBytes(di.readInt());\n+            int layoutBoundsRight = Integer.reverseBytes(di.readInt());\n+            int layoutBoundsBottom = Integer.reverseBytes(di.readInt());\n+            return new OpticalInset(layoutBoundsLeft, layoutBoundsTop,\n+                    layoutBoundsRight, layoutBoundsBottom);\n+        }\n+    }\n }",
      "parent_sha": "ea16f3ff1d00071619b17afb74a73fac28c5b41e"
    }
  },
  {
    "oid": "b9736d97e380c122cebec5b469470a8c0d76c15d",
    "message": "Add is64Bit() check",
    "date": "2016-12-22T14:06:03Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/b9736d97e380c122cebec5b469470a8c0d76c15d",
    "details": {
      "sha": "1157c8d70acd73af59281547f5f05ae582138414",
      "filename": "brut.j.util/src/main/java/brut/util/OSDetection.java",
      "status": "modified",
      "additions": 8,
      "deletions": 3,
      "changes": 11,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/b9736d97e380c122cebec5b469470a8c0d76c15d/brut.j.util%2Fsrc%2Fmain%2Fjava%2Fbrut%2Futil%2FOSDetection.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/b9736d97e380c122cebec5b469470a8c0d76c15d/brut.j.util%2Fsrc%2Fmain%2Fjava%2Fbrut%2Futil%2FOSDetection.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.j.util%2Fsrc%2Fmain%2Fjava%2Fbrut%2Futil%2FOSDetection.java?ref=b9736d97e380c122cebec5b469470a8c0d76c15d",
      "patch": "@@ -18,17 +18,22 @@\n \n public class OSDetection {\n     private static String OS = System.getProperty(\"os.name\").toLowerCase();\n+    private static String Bit = System.getProperty(\"sun.arch.data.model\").toLowerCase();\n \n     public static boolean isWindows() {\n-        return (OS.indexOf(\"win\") >= 0);\n+        return (OS.contains(\"win\"));\n     }\n \n     public static boolean isMacOSX() {\n-        return (OS.indexOf(\"mac\") >= 0);\n+        return (OS.contains(\"mac\"));\n     }\n \n     public static boolean isUnix() {\n-        return (OS.indexOf(\"nix\") >= 0 || OS.indexOf(\"nux\") >= 0 || OS.indexOf(\"aix\") > 0 || (OS.indexOf(\"sunos\") >= 0));\n+        return (OS.contains(\"nix\") || OS.contains(\"nux\") || OS.contains(\"aix\") || (OS.contains(\"sunos\")));\n+    }\n+\n+    public static boolean is64Bit() {\n+        return Bit.equalsIgnoreCase(\"64\");\n     }\n \n     public static String returnOS() {",
      "parent_sha": "58ab04cca99253b08361164e37c5b2286090719d"
    }
  },
  {
    "oid": "9db742618bb045246d952c4cf911d299a59c1420",
    "message": "Fixes #2900 (#2901)\n\nFastst way to fix empty key value splitting for styled strings.\r\n\r\nSigned-off-by: Sven Marquardt <dev@mail.smarquardt.space>\r\n\r\nSigned-off-by: Sven Marquardt <dev@mail.smarquardt.space>",
    "date": "2022-10-12T10:55:29Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/9db742618bb045246d952c4cf911d299a59c1420",
    "details": {
      "sha": "057d1d2ee607beb8a3ed5491df369c86ec09f7de",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/decoder/StyledString.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/9db742618bb045246d952c4cf911d299a59c1420/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FStyledString.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/9db742618bb045246d952c4cf911d299a59c1420/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FStyledString.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FStyledString.java?ref=9db742618bb045246d952c4cf911d299a59c1420",
      "patch": "@@ -50,7 +50,7 @@ public String toString() {\n \n     public static class Span implements Comparable<Span> {\n         private static final MapSplitter ATTRIBUTES_SPLITTER =\n-            Splitter.on(';').withKeyValueSeparator(Splitter.on('=').limit(2));\n+            Splitter.on(';').omitEmptyStrings().withKeyValueSeparator(Splitter.on('=').limit(2));\n \n         private final String tag;\n         private final int firstChar;",
      "parent_sha": "87223d334ef1a43e94b74a59ba55304f49496410"
    }
  },
  {
    "oid": "03c198c1e49044254dd23923cf3af1cb76193e69",
    "message": "fix: support skipping entries with NO_ENTRY (-1) flag (#3209)",
    "date": "2023-07-24T10:06:45Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/03c198c1e49044254dd23923cf3af1cb76193e69",
    "details": {
      "sha": "08ca6121880e6d15835f86d8e578ad92277ecfeb",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/decoder/ARSCDecoder.java",
      "status": "modified",
      "additions": 13,
      "deletions": 4,
      "changes": 17,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/03c198c1e49044254dd23923cf3af1cb76193e69/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/03c198c1e49044254dd23923cf3af1cb76193e69/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java?ref=03c198c1e49044254dd23923cf3af1cb76193e69",
      "patch": "@@ -308,7 +308,7 @@ private ResType readTableType() throws IOException, AndrolibException {\n \n         for (int i : entryOffsetMap.keySet()) {\n             int offset = entryOffsetMap.get(i);\n-            if (offset == -1) {\n+            if (offset == NO_ENTRY) {\n                 continue;\n             }\n             mMissingResSpecMap.put(i, false);\n@@ -318,12 +318,15 @@ private ResType readTableType() throws IOException, AndrolibException {\n             if (mCountIn.getCount() == mHeader.endPosition) {\n                 int remainingEntries = entryCount - i;\n                 LOGGER.warning(String.format(\"End of chunk hit. Skipping remaining entries (%d) in type: %s\",\n-                    remainingEntries, mTypeSpec.getName())\n-                );\n+                    remainingEntries, mTypeSpec.getName()\n+                ));\n                 break;\n             }\n \n-            readEntry(readEntryData());\n+            EntryData entryData = readEntryData();\n+            if (entryData != null) {\n+                readEntry(entryData);\n+            }\n         }\n \n         // skip \"TYPE 8 chunks\" and/or padding data at the end of this chunk\n@@ -344,6 +347,10 @@ private EntryData readEntryData() throws IOException, AndrolibException {\n \n         short flags = mIn.readShort();\n         int specNamesId = mIn.readInt();\n+        if (specNamesId == NO_ENTRY) {\n+            return null;\n+        }\n+\n         ResValue value = (flags & ENTRY_FLAG_COMPLEX) == 0 ? readValue() : readComplexEntry();\n         EntryData entryData = new EntryData();\n         entryData.mFlags = flags;\n@@ -662,5 +669,7 @@ private void checkChunkType(int expectedType) throws AndrolibException {\n \n     private static final int KNOWN_CONFIG_BYTES = 64;\n \n+    private static final int NO_ENTRY = 0xFFFFFFFF;\n+\n     private static final Logger LOGGER = Logger.getLogger(ARSCDecoder.class.getName());\n }",
      "parent_sha": "79f57b070cba45a0861d7c3414cffda0119e3cc0"
    }
  },
  {
    "oid": "dceff41a573bd390366f13051027368114879337",
    "message": "feat: lodge helpful information of built apk location\n\nfixes: #2843",
    "date": "2022-07-10T11:32:40Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/dceff41a573bd390366f13051027368114879337",
    "details": {
      "sha": "4077ca6f8b93453b404132c1c6441ece7e9c9f71",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/Androlib.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/dceff41a573bd390366f13051027368114879337/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FAndrolib.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/dceff41a573bd390366f13051027368114879337/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FAndrolib.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FAndrolib.java?ref=dceff41a573bd390366f13051027368114879337",
      "patch": "@@ -337,7 +337,7 @@ public void build(ExtFile appDir, File outFile)\n                 throw new AndrolibException(ex.getMessage());\n             }\n         }\n-        LOGGER.info(\"Built apk...\");\n+        LOGGER.info(\"Built apk into: \" + outFile.getPath());\n     }\n \n     private void buildManifestFile(File appDir, File manifest, File manifestOriginal)",
      "parent_sha": "c3ce154b720bb3e3e89088affc6bae707c7617d9"
    }
  },
  {
    "oid": "57ef8a205acd3fc7d73806970504b5639b60eedc",
    "message": "fix: support duplicated namespaces (#3233)",
    "date": "2023-07-30T09:52:35Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/57ef8a205acd3fc7d73806970504b5639b60eedc",
    "details": {
      "sha": "454c47b90a1bdfee5f9dfb53287576d36686b70c",
      "filename": "brut.apktool/apktool-lib/src/main/java/org/xmlpull/renamed/MXSerializer.java",
      "status": "modified",
      "additions": 18,
      "deletions": 4,
      "changes": 22,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/57ef8a205acd3fc7d73806970504b5639b60eedc/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fxmlpull%2Frenamed%2FMXSerializer.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/57ef8a205acd3fc7d73806970504b5639b60eedc/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fxmlpull%2Frenamed%2FMXSerializer.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fxmlpull%2Frenamed%2FMXSerializer.java?ref=57ef8a205acd3fc7d73806970504b5639b60eedc",
      "patch": "@@ -19,7 +19,9 @@\n import org.xmlpull.v1.XmlSerializer;\n \n import java.io.*;\n+import java.util.HashSet;\n import java.util.Objects;\n+import java.util.Set;\n \n /**\n  * Implementation of XmlSerializer interface from XmlPull V1 API. This\n@@ -646,23 +648,35 @@ protected void closeStartTag() throws IOException {\n \t}\n \n \tprotected void writeNamespaceDeclarations() throws IOException {\n+        Set<String> uniqueNamespaces = new HashSet<>();\n \t\tfor (int i = elNamespaceCount[depth - 1]; i < namespaceEnd; i++) {\n-\t\t\tif (doIndent && namespaceUri[i].length() > 40) {\n+            String prefix = namespacePrefix[i];\n+            String uri = namespaceUri[i];\n+\n+            // Some applications as seen in #2664 have duplicated namespaces.\n+            // AOSP doesn't care, but the parser does. So we filter them out.\n+            if (uniqueNamespaces.contains(prefix + uri)) {\n+                continue;\n+            }\n+\n+\t\t\tif (doIndent && uri.length() > 40) {\n \t\t\t\twriteIndent();\n \t\t\t\tout.write(\" \");\n \t\t\t}\n-\t\t\tif (namespacePrefix[i] != \"\") {\n+\t\t\tif (prefix != \"\") {\n \t\t\t\tout.write(\" xmlns:\");\n-\t\t\t\tout.write(namespacePrefix[i]);\n+\t\t\t\tout.write(prefix);\n \t\t\t\tout.write('=');\n \t\t\t} else {\n \t\t\t\tout.write(\" xmlns=\");\n \t\t\t}\n \t\t\tout.write(attributeUseApostrophe ? '\\'' : '\"');\n \n \t\t\t// NOTE: escaping of namespace value the same way as attributes!!!!\n-\t\t\twriteAttributeValue(namespaceUri[i], out);\n+\t\t\twriteAttributeValue(uri, out);\n \t\t\tout.write(attributeUseApostrophe ? '\\'' : '\"');\n+\n+            uniqueNamespaces.add(prefix + uri);\n \t\t}\n \t}\n ",
      "parent_sha": "33ca2929c9bbf45e6d662c4a9f85693f48f9c2e5"
    }
  },
  {
    "oid": "5aa18eee2dfef20ea6efbc94245f0dfff4d0c1fb",
    "message": "[SmaliMod] adjust handling for stream, files and dexlib2",
    "date": "2013-08-13T20:43:35Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/5aa18eee2dfef20ea6efbc94245f0dfff4d0c1fb",
    "details": {
      "sha": "7bfc4e5ba66207fd7f135e3e7624346d6da9e5f2",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/mod/SmaliMod.java",
      "status": "modified",
      "additions": 56,
      "deletions": 35,
      "changes": 91,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/5aa18eee2dfef20ea6efbc94245f0dfff4d0c1fb/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fmod%2FSmaliMod.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/5aa18eee2dfef20ea6efbc94245f0dfff4d0c1fb/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fmod%2FSmaliMod.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fmod%2FSmaliMod.java?ref=5aa18eee2dfef20ea6efbc94245f0dfff4d0c1fb",
      "patch": "@@ -20,6 +20,7 @@\n import org.antlr.runtime.*;\n import org.antlr.runtime.tree.CommonTree;\n import org.antlr.runtime.tree.CommonTreeNodeStream;\n+import org.apache.commons.io.IOUtils;\n import org.jf.dexlib2.writer.builder.DexBuilder;\n import org.jf.smali.*;\n \n@@ -28,53 +29,73 @@\n  */\n public class SmaliMod {\n \n-  public static boolean assembleSmaliFile(File smaliFile,DexBuilder dexBuilder, boolean verboseErrors,\n-                                          boolean printTokens) throws IOException,\n-          RecognitionException {\n+    public static boolean assembleSmaliFile(String smali, DexBuilder dexBuilder, boolean verboseErrors,\n+                                            boolean printTokens, File smaliFile) throws IOException, RuntimeException, RecognitionException {\n \n-    CommonTokenStream tokens;\n-    LexerErrorInterface lexer;\n-\n-    FileInputStream fis = new FileInputStream(smaliFile.getAbsolutePath());\n-    InputStreamReader reader = new InputStreamReader(fis, \"UTF-8\");\n+        InputStream is = new ByteArrayInputStream(smali.getBytes());\n+        return assembleSmaliFile(is, dexBuilder, verboseErrors, printTokens, smaliFile);\n+    }\n \n-    lexer = new smaliFlexLexer(reader);\n-    ((smaliFlexLexer)lexer).setSourceFile(smaliFile);\n-    tokens = new CommonTokenStream((TokenSource) lexer);\n+    public static boolean assembleSmaliFile(InputStream is,DexBuilder dexBuilder, boolean verboseErrors,\n+                                            boolean printTokens, File smaliFile) throws IOException, RecognitionException {\n \n-    if (printTokens) {\n-      tokens.getTokens();\n+        // copy our filestream into a tmp file, so we don't overwrite\n+        File tmp = File.createTempFile(\"BRUT\",\".bak\");\n+        tmp.deleteOnExit();\n \n-      for (int i=0; i<tokens.size(); i++) {\n-        Token token = tokens.get(i);\n-        if (token.getChannel() == smaliParser.HIDDEN) {\n-          continue;\n-        }\n+        OutputStream os = new FileOutputStream(tmp);\n+        IOUtils.copy(is, os);\n+        os.close();\n \n-        System.out.println(smaliParser.tokenNames[token.getType()] + \": \" + token.getText());\n-      }\n+        return assembleSmaliFile(tmp,dexBuilder, verboseErrors, printTokens);\n     }\n \n-    smaliParser parser = new smaliParser(tokens);\n-    parser.setVerboseErrors(verboseErrors);\n+    public static boolean assembleSmaliFile(File smaliFile,DexBuilder dexBuilder, boolean verboseErrors,\n+                                            boolean printTokens) throws IOException, RecognitionException {\n \n-    smaliParser.smali_file_return result = parser.smali_file();\n+        CommonTokenStream tokens;\n+        LexerErrorInterface lexer;\n \n-    if (parser.getNumberOfSyntaxErrors() > 0 || lexer.getNumberOfSyntaxErrors() > 0) {\n-      return false;\n-    }\n+        InputStream is = new FileInputStream(smaliFile);\n+        InputStreamReader reader = new InputStreamReader(is, \"UTF-8\");\n+\n+        lexer = new smaliFlexLexer(reader);\n+        ((smaliFlexLexer)lexer).setSourceFile(smaliFile);\n+        tokens = new CommonTokenStream((TokenSource) lexer);\n+\n+        if (printTokens) {\n+            tokens.getTokens();\n+\n+            for (int i=0; i<tokens.size(); i++) {\n+                Token token = tokens.get(i);\n+                if (token.getChannel() == smaliParser.HIDDEN) {\n+                    continue;\n+                }\n \n-    CommonTree t = (CommonTree) result.getTree();\n+                System.out.println(smaliParser.tokenNames[token.getType()] + \": \" + token.getText());\n+            }\n+        }\n+\n+        smaliParser parser = new smaliParser(tokens);\n+        parser.setVerboseErrors(verboseErrors);\n \n-    CommonTreeNodeStream treeStream = new CommonTreeNodeStream(t);\n-    treeStream.setTokenStream(tokens);\n+        smaliParser.smali_file_return result = parser.smali_file();\n+\n+        if (parser.getNumberOfSyntaxErrors() > 0 || lexer.getNumberOfSyntaxErrors() > 0) {\n+            return false;\n+        }\n \n-    smaliTreeWalker dexGen = new smaliTreeWalker(treeStream);\n+        CommonTree t = (CommonTree) result.getTree();\n \n-    dexGen.setVerboseErrors(verboseErrors);\n-    dexGen.setDexBuilder(dexBuilder);\n-    dexGen.smali_file();\n+        CommonTreeNodeStream treeStream = new CommonTreeNodeStream(t);\n+        treeStream.setTokenStream(tokens);\n \n-    return dexGen.getNumberOfSyntaxErrors() == 0;\n-  }\n+        smaliTreeWalker dexGen = new smaliTreeWalker(treeStream);\n+\n+        dexGen.setVerboseErrors(verboseErrors);\n+        dexGen.setDexBuilder(dexBuilder);\n+        dexGen.smali_file();\n+\n+        return dexGen.getNumberOfSyntaxErrors() == 0;\n+    }\n }",
      "parent_sha": "3acff3ef340490eca01a4fa2112f8af5358e2b10"
    }
  },
  {
    "oid": "9a6fd7de632c93e508828cb104fb426b4d753214",
    "message": "updated to isAdvanceMode() and updated spacing on file",
    "date": "2013-04-01T21:44:19Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/9a6fd7de632c93e508828cb104fb426b4d753214",
    "details": {
      "sha": "5b07aad02f75ca2f93d3c918e573ba55a860d94d",
      "filename": "brut.apktool/apktool-cli/src/main/java/brut/apktool/Main.java",
      "status": "modified",
      "additions": 465,
      "deletions": 465,
      "changes": 930,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/9a6fd7de632c93e508828cb104fb426b4d753214/brut.apktool%2Fapktool-cli%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fapktool%2FMain.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/9a6fd7de632c93e508828cb104fb426b4d753214/brut.apktool%2Fapktool-cli%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fapktool%2FMain.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-cli%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fapktool%2FMain.java?ref=9a6fd7de632c93e508828cb104fb426b4d753214",
      "patch": "@@ -45,476 +45,476 @@\n  * @author Connor Tumbleson <connor.tumbleson@gmail.com>\n  */\n public class Main {\n-\tpublic static void main(String[] args) throws IOException,\n-\t\t\tInterruptedException, BrutException {\n-\n-\t    // set verbosity default\n-\t    Verbosity verbosity = Verbosity.NORMAL;\n-\n-\t\t  // cli parser\n-\t\t  CommandLineParser parser = new PosixParser();\n-\t\t  CommandLine commandLine = null;\n-\n-\t\t  // load options\n-\t\t  _Options();\n-\n-  \t\ttry {\n-          commandLine = parser.parse(allOptions, args, false);\n-      } catch (ParseException ex) {\n-          System.out.println(ex.getMessage());\n-          usage(commandLine);\n-          return;\n-      }\n-\n-  \t\t// check for verbose / quiet\n-\t\t  if (commandLine.hasOption(\"-v\") || commandLine.hasOption(\"--verbose\")) {\n-\t\t    verbosity = Verbosity.VERBOSE;\n-\t\t  } else if (commandLine.hasOption(\"-q\") || commandLine.hasOption(\"--quiet\")) {\n-\t\t    verbosity = Verbosity.QUIET;\n-\t\t  }\n-\t\t  setupLogging(verbosity);\n-\n-\t\t  // check for advance mode\n-\t\t  if (commandLine.hasOption(\"advance\") || commandLine.hasOption(\"advanced\")) {\n-\t\t    setAdvanceMode(true);\n-\t\t  }\n-\n-\t\t  // @todo use new ability of apache-commons-cli to check hasOption for non-prefixed items\n-\t\t  boolean cmdFound = false;\n-\t\t  for (String opt : commandLine.getArgs()) {\n-\t\t    if (opt.equalsIgnoreCase(\"d\") || opt.equalsIgnoreCase(\"decode\")) {\n-\t\t      cmdDecode(commandLine);\n-\t\t      cmdFound = true;\n-\t\t    } else if (opt.equalsIgnoreCase(\"b\") || opt.equalsIgnoreCase(\"build\")) {\n-\t\t      cmdBuild(commandLine);\n-\t\t      cmdFound = true;\n-\t\t    } else if (opt.equalsIgnoreCase(\"if\") || opt.equalsIgnoreCase(\"install-framework\")) {\n-\t\t      cmdInstallFramework(commandLine);\n-\t\t      cmdFound = true;\n-\t\t    } else if (opt.equalsIgnoreCase(\"publicize-resources\")) {\n-\t\t      cmdPublicizeResources(commandLine);\n-\t\t      cmdFound = true;\n-\t\t    }\n-\t\t  }\n-\n-\t\t  // if no commands ran, run the version / usage check.\n-\t\t  if (cmdFound == false) {\n-\t\t    if (commandLine.hasOption(\"version\") || commandLine.hasOption(\"version\")) {\n-\t\t      _version();\n-\t\t    } else {\n-\t\t      usage(commandLine);\n-\t\t    }\n-\t\t  }\n-\t}\n-\n-\tprivate static void cmdDecode(CommandLine cli) throws AndrolibException {\n-\t\tApkDecoder decoder = new ApkDecoder();\n-\n-    int paraCount = cli.getArgList().size();\n-    String apkName = (String) cli.getArgList().get(paraCount - 1);\n-    File outDir = null;\n-\n-\t\t// check for options\n-\t\tif (cli.hasOption(\"s\") || cli.hasOption(\"no-src\")) {\n-\t\t  decoder.setDecodeSources(ApkDecoder.DECODE_SOURCES_NONE);\n-\t\t}\n-\t\tif (cli.hasOption(\"d\") || cli.hasOption(\"debug\")) {\n-\t\t  decoder.setDebugMode(true);\n-\t\t}\n-\t\tif (cli.hasOption(\"b\") || cli.hasOption(\"no-debug-info\")) {\n-\t\t  decoder.setBaksmaliDebugMode(false);\n-\t\t}\n-\t\tif (cli.hasOption(\"t\") || cli.hasOption(\"frame-tag\")) {\n-\t\t  decoder.setFrameworkTag(cli.getOptionValue(\"t\"));\n-\t\t}\n-\t\tif (cli.hasOption(\"f\") || cli.hasOption(\"force\")) {\n-\t\t  decoder.setForceDelete(true);\n-\t\t}\n-\t\tif (cli.hasOption(\"r\") || cli.hasOption(\"no-res\")) {\n-\t\t  decoder.setDecodeResources(ApkDecoder.DECODE_RESOURCES_NONE);\n-\t\t}\n-\t\tif (cli.hasOption(\"k\") || cli.hasOption(\"keep-broken-res\")) {\n-\t\t  decoder.setKeepBrokenResources(true);\n-\t\t}\n-\t\tif (cli.hasOption(\"p\") || cli.hasOption(\"frame-path\")) {\n-\t\t  decoder.setFrameworkDir(cli.getOptionValue(\"p\"));\n-\t\t}\n-\t\tif (cli.hasOption(\"o\") || cli.hasOption(\"output\")) {\n-\t\t  decoder.setOutDir(new File(cli.getOptionValue(\"o\")));\n-\t\t} else {\n-\n-\t\t  // make out folder manually using name of apk\n-\t\t  String outName = apkName;\n-\t\t  outName = outName.endsWith(\".apk\") ? outName.substring(0,\n-        outName.length() - 4) : outName + \".out\";\n-\n-\t\t  // make file from path\n-\t\t  outName = new File(outName).getName();\n-\t\t  outDir = new File(outName);\n-\t\t  decoder.setOutDir(outDir);\n-\t\t}\n-\n-\t\tdecoder.setApkFile(new File(apkName));\n-\n-\t\ttry {\n-\t\t\tdecoder.decode();\n-\t\t} catch (OutDirExistsException ex) {\n-\t\t\tSystem.out\n-\t\t\t\t\t.println(\"Destination directory (\"\n-\t\t\t\t\t\t\t+ outDir.getAbsolutePath()\n-\t\t\t\t\t\t\t+ \") \"\n-\t\t\t\t\t\t\t+ \"already exists. Use -f switch if you want to overwrite it.\");\n-\t\t\tSystem.exit(1);\n-\t\t} catch (InFileNotFoundException ex) {\n-\t\t\tSystem.out.println(\"Input file (\" + apkName + \") \" + \"was not found or was not readable.\");\n-\t\t\tSystem.exit(1);\n-\t\t} catch (CantFindFrameworkResException ex) {\n-\t\t\tSystem.out\n-\t\t\t\t\t.println(\"Can't find framework resources for package of id: \"\n-\t\t\t\t\t\t\t+ String.valueOf(ex.getPkgId())\n-\t\t\t\t\t\t\t+ \". You must install proper \"\n-\t\t\t\t\t\t\t+ \"framework files, see project website for more info.\");\n-\t\t\tSystem.exit(1);\n-\t\t} catch (IOException ex) {\n-\t\t\tSystem.out.println(\"Could not modify file. Please ensure you have permission.\");\n-\t\t\tSystem.exit(1);\n-\t\t}\n-\n-\t}\n-\n-\tprivate static void cmdBuild(CommandLine cli) throws BrutException {\n-    int paraCount = cli.getArgList().size();\n-    String apkName = (String) cli.getArgList().get(paraCount - 1);\n-\t  String mAaptPath = \"\";\n-\t  String appDirName = \".\";\n-\t  File outFile = null;\n-\t  Androlib instance = new Androlib();\n-\n-\t\t// hold all the fields\n-\t\tHashMap<String, Boolean> flags = new HashMap<String, Boolean>();\n-\t\tflags.put(\"forceBuildAll\", false);\n-\t\tflags.put(\"debug\", false);\n-\t\tflags.put(\"verbose\", false);\n-\t\tflags.put(\"framework\", false);\n-\t\tflags.put(\"update\", false);\n-\t\tflags.put(\"copyOriginal\", false);\n-\n-\t\t// check for build options\n-\t\tif (cli.hasOption(\"f\") || cli.hasOption(\"force-all\")) {\n-\t\t  flags.put(\"forceBuildAll\", true);\n-\t\t}\n-\t\tif (cli.hasOption(\"d\") || cli.hasOption(\"debug\")) {\n-\t\t  flags.put(\"debug\", true);\n-\t\t}\n-\t\tif (cli.hasOption(\"v\") || cli.hasOption(\"verbose\")) {\n-\t\t  flags.put(\"verbose\", true);\n-\t\t}\n-\t\tif (cli.hasOption(\"a\") || cli.hasOption(\"aapt\")) {\n-\t\t  mAaptPath = cli.getOptionValue(\"a\");\n-\t\t}\n-\t\tif (cli.hasOption(\"c\") || cli.hasOption(\"copy-original\")) {\n-\t\t  flags.put(\"copyOriginal\", true);\n-\t\t}\n-\t\tif (cli.hasOption(\"p\") || cli.hasOption(\"frame-path\")) {\n-\t\t  instance.setFrameworkFolder(cli.getOptionValue(\"p\"));\n-\t\t}\n-\t\tif (cli.hasOption(\"o\") || cli.hasOption(\"output\")) {\n-\t\t  outFile = new File(cli.getOptionValue(\"o\"));\n-\t\t} else {\n-\t\t  outFile = null;\n-\t\t}\n-\n-\t\tif (apkName != null) {\n-\t\t  appDirName = apkName;\n-\t\t}\n-\n-\t\t// try and build apk\n-\t\tinstance.build(new File(appDirName), outFile, flags,mAaptPath);\n-\t}\n-\n-\tprivate static void cmdInstallFramework(CommandLine cli)\n-\t\t\tthrows AndrolibException {\n-    int paraCount = cli.getArgList().size();\n-    String apkName = (String) cli.getArgList().get(paraCount - 1);\n-\t\tString tag = null;\n-\t\tString frame_path = null;\n-\n-\t\tif (cli.hasOption(\"p\") || cli.hasOption(\"frame-path\")) {\n-\t\t  frame_path = cli.getOptionValue(\"p\");\n-\t\t}\n-\t\tif (cli.hasOption(\"t\") || cli.hasOption(\"tag\")) {\n-\t\t  tag = cli.getOptionValue(\"t\");\n-\t\t}\n-\t\tnew Androlib().installFramework(new File(apkName), tag, frame_path);\n-\t}\n-\n-\tprivate static void cmdPublicizeResources(CommandLine cli)\n-\t\t\tthrows AndrolibException {\n-    int paraCount = cli.getArgList().size();\n-    String apkName = (String) cli.getArgList().get(paraCount - 1);\n-\n-\t\tnew Androlib().publicizeResources(new File(apkName));\n-\t}\n-\n-\tprivate static void _version() {\n-\t\tSystem.out.println(Androlib.getVersion());\n-\t}\n-\n-\t@SuppressWarnings(\"static-access\")\n-  private static void _Options() {\n-\n-\t  // create options\n-\t  Option versionOption = OptionBuilder.withLongOpt(\"version\")\n-        .withDescription(\"prints the version then exits\")\n-        .create(\"version\");\n-\n-\t  Option advanceOption = OptionBuilder.withLongOpt(\"advanced\")\n-\t      .withDescription(\"prints advance information.\")\n-\t      .create(\"advance\");\n-\n-\t  Option noSrcOption = OptionBuilder.withLongOpt(\"no-src\")\n-\t      .withDescription(\"Do not decode sources.\")\n-\t      .create(\"s\");\n-\n-\t  Option noResOption = OptionBuilder.withLongOpt(\"no-res\")\n-\t      .withDescription(\"Do not decode resources.\")\n-\t      .create(\"r\");\n-\n-\t  Option debugDecOption = OptionBuilder.withLongOpt(\"debug\")\n-\t      .withDescription(\"Decode in debug mode. Check project page for more info.\")\n-\t      .create(\"d\");\n-\n-\t  Option debugBuiOption = OptionBuilder.withLongOpt(\"debug\")\n-\t      .withDescription(\"Builds in debug mode. Check project page for more info.\")\n-\t      .create(\"d\");\n-\n-\t  Option noDbgOption = OptionBuilder.withLongOpt(\"no-debug-info\")\n-\t      .withDescription(\"don't write out debug info (.local, .param, .line, etc.)\")\n-\t      .create(\"b\");\n-\n-\t  Option forceDecOption = OptionBuilder.withLongOpt(\"force\")\n-\t      .withDescription(\"Force delete destination directory.\")\n-\t      .create(\"f\");\n-\n-\t  Option frameTagOption = OptionBuilder.withLongOpt(\"frame-tag\")\n-        .withDescription(\"Uses framework files tagged by <tag>.\")\n-        .hasArg(true)\n-        .withArgName(\"tag\")\n-        .create(\"t\");\n-\n-\t   Option frameDirOption = OptionBuilder.withLongOpt(\"frame-path\")\n-\t        .withDescription(\"Uses framework files located in <dir>.\")\n-\t        .hasArg(true)\n-\t        .withArgName(\"dir\")\n-\t        .create(\"p\");\n-\n-\t   Option keepResOption = OptionBuilder.withLongOpt(\"keep-broken-res\")\n-\t       .withDescription(\"Use if there was an error and some resources were dropped, e.g.\\n\"\n-            + \"            \\\"Invalid config flags detected. Dropping resources\\\", but you\\n\"\n-            + \"            want to decode them anyway, even with errors. You will have to\\n\"\n-            + \"            fix them manually before building.\")\n-            .create(\"k\");\n-\n-\t   Option forceBuiOption = OptionBuilder.withLongOpt(\"force-all\")\n-\t       .withDescription(\"Skip changes detection and build all files.\")\n-\t       .create(\"f\");\n-\n-\t   Option aaptOption = OptionBuilder.withLongOpt(\"aapt\")\n-\t       .hasArg(true)\n-\t       .withArgName(\"loc\")\n-\t       .withDescription(\"Loads aapt from specified location.\")\n-\t       .create(\"a\");\n-\n-\t   Option originalOption = OptionBuilder.withLongOpt(\"copy-original\")\n-\t       .withDescription(\"Copies original AndroidManifest.xml and META-INF. See project page for more info.\")\n-\t       .create(\"c\");\n-\n-\t   Option tagOption = OptionBuilder.withLongOpt(\"tag\")\n-\t       .withDescription(\"Tag frameworks using <tag>.\")\n-\t       .hasArg(true)\n-\t       .withArgName(\"tag\")\n-\t       .create(\"t\");\n-\n-\t   Option outputBuiOption = OptionBuilder.withLongOpt(\"output\")\n-\t       .withDescription(\"The name of apk that gets written. Default is dist/name.apk\")\n-\t       .hasArg(true)\n-\t       .withArgName(\"dir\")\n-\t       .create(\"o\");\n-\n-\t   Option outputDecOption = OptionBuilder.withLongOpt(\"output\")\n-\t       .withDescription(\"The name of folder that gets written. Default is apk.out\")\n-\t       .hasArg(true)\n-\t       .withArgName(\"dir\")\n-\t       .create(\"o\");\n-\n-\t   Option quietOption = OptionBuilder.withLongOpt(\"quiet\")\n-\t       .create(\"q\");\n-\n-\t   Option verboseOption = OptionBuilder.withLongOpt(\"verbose\")\n-\t       .create(\"v\");\n-\n-\t  // check for advance mode\n-    if (advanceMode) {\n-      DecodeOptions.addOption(debugDecOption);\n-      DecodeOptions.addOption(noDbgOption);\n-      DecodeOptions.addOption(keepResOption);\n-\n-      BuildOptions.addOption(debugBuiOption);\n-      BuildOptions.addOption(aaptOption);\n-      BuildOptions.addOption(originalOption);\n+    public static void main(String[] args) throws IOException,\n+            InterruptedException, BrutException {\n+\n+        // set verbosity default\n+        Verbosity verbosity = Verbosity.NORMAL;\n+\n+        // cli parser\n+        CommandLineParser parser = new PosixParser();\n+        CommandLine commandLine = null;\n+\n+        // load options\n+        _Options();\n+\n+        try {\n+            commandLine = parser.parse(allOptions, args, false);\n+        } catch (ParseException ex) {\n+            System.out.println(ex.getMessage());\n+            usage(commandLine);\n+            return;\n+        }\n+\n+        // check for verbose / quiet\n+        if (commandLine.hasOption(\"-v\") || commandLine.hasOption(\"--verbose\")) {\n+            verbosity = Verbosity.VERBOSE;\n+        } else if (commandLine.hasOption(\"-q\") || commandLine.hasOption(\"--quiet\")) {\n+            verbosity = Verbosity.QUIET;\n+        }\n+        setupLogging(verbosity);\n+\n+        // check for advance mode\n+        if (commandLine.hasOption(\"advance\") || commandLine.hasOption(\"advanced\")) {\n+            setAdvanceMode(true);\n+        }\n+\n+        // @todo use new ability of apache-commons-cli to check hasOption for non-prefixed items\n+        boolean cmdFound = false;\n+        for (String opt : commandLine.getArgs()) {\n+            if (opt.equalsIgnoreCase(\"d\") || opt.equalsIgnoreCase(\"decode\")) {\n+                cmdDecode(commandLine);\n+                cmdFound = true;\n+            } else if (opt.equalsIgnoreCase(\"b\") || opt.equalsIgnoreCase(\"build\")) {\n+                cmdBuild(commandLine);\n+                cmdFound = true;\n+            } else if (opt.equalsIgnoreCase(\"if\") || opt.equalsIgnoreCase(\"install-framework\")) {\n+                cmdInstallFramework(commandLine);\n+                cmdFound = true;\n+            } else if (opt.equalsIgnoreCase(\"publicize-resources\")) {\n+                cmdPublicizeResources(commandLine);\n+                cmdFound = true;\n+            }\n+        }\n+\n+        // if no commands ran, run the version / usage check.\n+        if (cmdFound == false) {\n+            if (commandLine.hasOption(\"version\") || commandLine.hasOption(\"version\")) {\n+                _version();\n+            } else {\n+                usage(commandLine);\n+            }\n+        }\n     }\n \n-\t  // add global options\n-\t  normalOptions.addOption(versionOption);\n-\t  normalOptions.addOption(advanceOption);\n-\n-\t  // add basic decode options\n-\t  DecodeOptions.addOption(frameTagOption);\n-\t  DecodeOptions.addOption(outputDecOption);\n-    DecodeOptions.addOption(frameDirOption);\n-\t  DecodeOptions.addOption(forceDecOption);\n-\t  DecodeOptions.addOption(noSrcOption);\n-\t  DecodeOptions.addOption(noResOption);\n-\n-\t  // add basic build options\n-\t  BuildOptions.addOption(outputBuiOption);\n-\t  BuildOptions.addOption(frameDirOption);\n-\t  BuildOptions.addOption(forceBuiOption);\n-\n-\t  // add basic framework options\n-\t  frameOptions.addOption(tagOption);\n-\t  frameOptions.addOption(frameDirOption);\n-\n-\t  // add all, loop existing cats then manually add advance\n-\t  for (Object op : normalOptions.getOptions()) {\n-      allOptions.addOption((Option)op);\n-\t  }\n-\t  for (Object op : DecodeOptions.getOptions()) {\n-\t    allOptions.addOption((Option)op);\n-\t  }\n-\t  for (Object op : BuildOptions.getOptions()) {\n-\t    allOptions.addOption((Option)op);\n-\t  }\n-\t  for (Object op : frameOptions.getOptions()) {\n-\t    allOptions.addOption((Option)op);\n-\t  }\n-\t  allOptions.addOption(debugDecOption);\n-\t  allOptions.addOption(noDbgOption);\n-\t  allOptions.addOption(keepResOption);\n-\t  allOptions.addOption(debugBuiOption);\n-\t  allOptions.addOption(aaptOption);\n-\t  allOptions.addOption(originalOption);\n-\t  allOptions.addOption(verboseOption);\n-\t  allOptions.addOption(quietOption);\n-\t}\n-\n-\tprivate static String verbosityHelp() {\n-\t  if (advanceMode) {\n-\t    return \"[-q|--quiet OR -v|--verbose] \";\n-\t  } else {\n-\t    return \"\";\n-\t  }\n-\t}\n-\n-\tprivate static void usage(CommandLine commandLine) {\n-\n-\t    // load basicOptions\n-\t    _Options();\n-\t    HelpFormatter formatter = new HelpFormatter();\n-\n-\t    // max their window to 120, if small.\n-\t    int consoleWidth = ConsoleUtil.getConsoleWidth();\n-      if (consoleWidth <= 0) {\n-          consoleWidth = 120;\n-      }\n-      formatter.setWidth(consoleWidth);\n-\n-      // print out license info prior to formatter.\n-      System.out.println(\n-          \"Apktool v\" + Androlib.getVersion() + \" - a tool for reengineering Android apk files\\n\" +\n-          \"with smali v\" + ApktoolProperties.get(\"smaliVersion\") +\n-          \" and baksmali v\" + ApktoolProperties.get(\"baksmaliVersion\") + \"\\n\" +\n-          \"Copyright 2010 Ryszard Wi\u015bniewski <brut.alll@gmail.com>\\n\" +\n-          \"Updated by Connor Tumbleson <connor.tumbleson@gmail.com>\" );\n-      if (advanceMode) {\n-        System.out.println(\"Apache License 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\\n\");\n-      }else {\n-        System.out.println(\"\");\n-      }\n-\n-      // 4 usage outputs (general, frameworks, decode, build)\n-      formatter.printHelp(\"apktool \" + verbosityHelp(), normalOptions);\n-      formatter.printHelp(\"apktool \" + verbosityHelp() + \"if|install-framework [options] <framework.apk>\", frameOptions);\n-\t    formatter.printHelp(\"apktool \" + verbosityHelp() + \"d[ecode] [options] <file_apk>\", DecodeOptions);\n-\t    formatter.printHelp(\"apktool \" + verbosityHelp() + \"b[uild] [options] <app_path>\", BuildOptions);\n-\t    if (advanceMode) {\n-\t      formatter.printHelp(\"apktool \" + verbosityHelp() + \"publicize-resources <file_path>\",\n-\t          \"Make all framework resources public.\", emptyOptions, null);\n-\t    } else {\n-\t      System.out.println(\"\");\n-\t    }\n-\n-\t    // print out more information\n-\t    System.out.println(\n-\t            \"For additional info, see: http://code.google.com/p/android-apktool/ \\n\"\n-            + \"For smali/baksmali info, see: http://code.google.com/p/smali/\");\n-\t}\n-\n-\tprivate static void setupLogging(Verbosity verbosity) {\n-\t\tLogger logger = Logger.getLogger(\"\");\n-\t\tfor (Handler handler : logger.getHandlers()) {\n-\t\t\tlogger.removeHandler(handler);\n-\t\t}\n-\t\tif (verbosity == Verbosity.QUIET) {\n-\t\t\treturn;\n-\t\t}\n-\n-\t\tHandler handler = new ConsoleHandler();\n-\t\tlogger.addHandler(handler);\n-\n-\t\tif (verbosity == Verbosity.VERBOSE) {\n-\t\t\thandler.setLevel(Level.ALL);\n-\t\t\tlogger.setLevel(Level.ALL);\n-\t\t} else {\n-\t\t\thandler.setFormatter(new Formatter() {\n-\t\t\t\t@Override\n-\t\t\t\tpublic String format(LogRecord record) {\n-\t\t\t\t\treturn record.getLevel().toString().charAt(0) + \": \"\n-\t\t\t\t\t\t\t+ record.getMessage()\n-\t\t\t\t\t\t\t+ System.getProperty(\"line.separator\");\n-\t\t\t\t}\n-\t\t\t});\n-\t\t}\n-\t}\n+    private static void cmdDecode(CommandLine cli) throws AndrolibException {\n+        ApkDecoder decoder = new ApkDecoder();\n+\n+        int paraCount = cli.getArgList().size();\n+        String apkName = (String) cli.getArgList().get(paraCount - 1);\n+        File outDir = null;\n+\n+        // check for options\n+        if (cli.hasOption(\"s\") || cli.hasOption(\"no-src\")) {\n+            decoder.setDecodeSources(ApkDecoder.DECODE_SOURCES_NONE);\n+        }\n+        if (cli.hasOption(\"d\") || cli.hasOption(\"debug\")) {\n+            decoder.setDebugMode(true);\n+        }\n+        if (cli.hasOption(\"b\") || cli.hasOption(\"no-debug-info\")) {\n+            decoder.setBaksmaliDebugMode(false);\n+        }\n+        if (cli.hasOption(\"t\") || cli.hasOption(\"frame-tag\")) {\n+            decoder.setFrameworkTag(cli.getOptionValue(\"t\"));\n+        }\n+        if (cli.hasOption(\"f\") || cli.hasOption(\"force\")) {\n+            decoder.setForceDelete(true);\n+        }\n+        if (cli.hasOption(\"r\") || cli.hasOption(\"no-res\")) {\n+            decoder.setDecodeResources(ApkDecoder.DECODE_RESOURCES_NONE);\n+        }\n+        if (cli.hasOption(\"k\") || cli.hasOption(\"keep-broken-res\")) {\n+            decoder.setKeepBrokenResources(true);\n+        }\n+        if (cli.hasOption(\"p\") || cli.hasOption(\"frame-path\")) {\n+            decoder.setFrameworkDir(cli.getOptionValue(\"p\"));\n+        }\n+        if (cli.hasOption(\"o\") || cli.hasOption(\"output\")) {\n+            decoder.setOutDir(new File(cli.getOptionValue(\"o\")));\n+        } else {\n+\n+            // make out folder manually using name of apk\n+            String outName = apkName;\n+            outName = outName.endsWith(\".apk\") ? outName.substring(0,\n+                    outName.length() - 4) : outName + \".out\";\n+\n+            // make file from path\n+            outName = new File(outName).getName();\n+            outDir = new File(outName);\n+            decoder.setOutDir(outDir);\n+        }\n+\n+        decoder.setApkFile(new File(apkName));\n+\n+        try {\n+            decoder.decode();\n+        } catch (OutDirExistsException ex) {\n+            System.out\n+                    .println(\"Destination directory (\"\n+                            + outDir.getAbsolutePath()\n+                            + \") \"\n+                            + \"already exists. Use -f switch if you want to overwrite it.\");\n+            System.exit(1);\n+        } catch (InFileNotFoundException ex) {\n+            System.out.println(\"Input file (\" + apkName + \") \" + \"was not found or was not readable.\");\n+            System.exit(1);\n+        } catch (CantFindFrameworkResException ex) {\n+            System.out\n+                    .println(\"Can't find framework resources for package of id: \"\n+                            + String.valueOf(ex.getPkgId())\n+                            + \". You must install proper \"\n+                            + \"framework files, see project website for more info.\");\n+            System.exit(1);\n+        } catch (IOException ex) {\n+            System.out.println(\"Could not modify file. Please ensure you have permission.\");\n+            System.exit(1);\n+        }\n+\n+    }\n+\n+    private static void cmdBuild(CommandLine cli) throws BrutException {\n+        int paraCount = cli.getArgList().size();\n+        String apkName = (String) cli.getArgList().get(paraCount - 1);\n+        String mAaptPath = \"\";\n+        String appDirName = \".\";\n+        File outFile = null;\n+        Androlib instance = new Androlib();\n+\n+        // hold all the fields\n+        HashMap<String, Boolean> flags = new HashMap<String, Boolean>();\n+        flags.put(\"forceBuildAll\", false);\n+        flags.put(\"debug\", false);\n+        flags.put(\"verbose\", false);\n+        flags.put(\"framework\", false);\n+        flags.put(\"update\", false);\n+        flags.put(\"copyOriginal\", false);\n+\n+        // check for build options\n+        if (cli.hasOption(\"f\") || cli.hasOption(\"force-all\")) {\n+            flags.put(\"forceBuildAll\", true);\n+        }\n+        if (cli.hasOption(\"d\") || cli.hasOption(\"debug\")) {\n+            flags.put(\"debug\", true);\n+        }\n+        if (cli.hasOption(\"v\") || cli.hasOption(\"verbose\")) {\n+            flags.put(\"verbose\", true);\n+        }\n+        if (cli.hasOption(\"a\") || cli.hasOption(\"aapt\")) {\n+            mAaptPath = cli.getOptionValue(\"a\");\n+        }\n+        if (cli.hasOption(\"c\") || cli.hasOption(\"copy-original\")) {\n+            flags.put(\"copyOriginal\", true);\n+        }\n+        if (cli.hasOption(\"p\") || cli.hasOption(\"frame-path\")) {\n+            instance.setFrameworkFolder(cli.getOptionValue(\"p\"));\n+        }\n+        if (cli.hasOption(\"o\") || cli.hasOption(\"output\")) {\n+            outFile = new File(cli.getOptionValue(\"o\"));\n+        } else {\n+            outFile = null;\n+        }\n+\n+        if (apkName != null) {\n+            appDirName = apkName;\n+        }\n+\n+        // try and build apk\n+        instance.build(new File(appDirName), outFile, flags,mAaptPath);\n+    }\n+\n+    private static void cmdInstallFramework(CommandLine cli)\n+            throws AndrolibException {\n+        int paraCount = cli.getArgList().size();\n+        String apkName = (String) cli.getArgList().get(paraCount - 1);\n+        String tag = null;\n+        String frame_path = null;\n+\n+        if (cli.hasOption(\"p\") || cli.hasOption(\"frame-path\")) {\n+            frame_path = cli.getOptionValue(\"p\");\n+        }\n+        if (cli.hasOption(\"t\") || cli.hasOption(\"tag\")) {\n+            tag = cli.getOptionValue(\"t\");\n+        }\n+        new Androlib().installFramework(new File(apkName), tag, frame_path);\n+    }\n+\n+    private static void cmdPublicizeResources(CommandLine cli)\n+            throws AndrolibException {\n+        int paraCount = cli.getArgList().size();\n+        String apkName = (String) cli.getArgList().get(paraCount - 1);\n+\n+        new Androlib().publicizeResources(new File(apkName));\n+    }\n+\n+    private static void _version() {\n+        System.out.println(Androlib.getVersion());\n+    }\n+\n+    @SuppressWarnings(\"static-access\")\n+    private static void _Options() {\n+\n+        // create options\n+        Option versionOption = OptionBuilder.withLongOpt(\"version\")\n+                .withDescription(\"prints the version then exits\")\n+                .create(\"version\");\n+\n+        Option advanceOption = OptionBuilder.withLongOpt(\"advanced\")\n+                .withDescription(\"prints advance information.\")\n+                .create(\"advance\");\n+\n+        Option noSrcOption = OptionBuilder.withLongOpt(\"no-src\")\n+                .withDescription(\"Do not decode sources.\")\n+                .create(\"s\");\n+\n+        Option noResOption = OptionBuilder.withLongOpt(\"no-res\")\n+                .withDescription(\"Do not decode resources.\")\n+                .create(\"r\");\n+\n+        Option debugDecOption = OptionBuilder.withLongOpt(\"debug\")\n+                .withDescription(\"Decode in debug mode. Check project page for more info.\")\n+                .create(\"d\");\n+\n+        Option debugBuiOption = OptionBuilder.withLongOpt(\"debug\")\n+                .withDescription(\"Builds in debug mode. Check project page for more info.\")\n+                .create(\"d\");\n+\n+        Option noDbgOption = OptionBuilder.withLongOpt(\"no-debug-info\")\n+                .withDescription(\"don't write out debug info (.local, .param, .line, etc.)\")\n+                .create(\"b\");\n+\n+        Option forceDecOption = OptionBuilder.withLongOpt(\"force\")\n+                .withDescription(\"Force delete destination directory.\")\n+                .create(\"f\");\n+\n+        Option frameTagOption = OptionBuilder.withLongOpt(\"frame-tag\")\n+                .withDescription(\"Uses framework files tagged by <tag>.\")\n+                .hasArg(true)\n+                .withArgName(\"tag\")\n+                .create(\"t\");\n+\n+        Option frameDirOption = OptionBuilder.withLongOpt(\"frame-path\")\n+                .withDescription(\"Uses framework files located in <dir>.\")\n+                .hasArg(true)\n+                .withArgName(\"dir\")\n+                .create(\"p\");\n+\n+        Option keepResOption = OptionBuilder.withLongOpt(\"keep-broken-res\")\n+                .withDescription(\"Use if there was an error and some resources were dropped, e.g.\\n\"\n+                        + \"            \\\"Invalid config flags detected. Dropping resources\\\", but you\\n\"\n+                        + \"            want to decode them anyway, even with errors. You will have to\\n\"\n+                        + \"            fix them manually before building.\")\n+                .create(\"k\");\n+\n+        Option forceBuiOption = OptionBuilder.withLongOpt(\"force-all\")\n+                .withDescription(\"Skip changes detection and build all files.\")\n+                .create(\"f\");\n+\n+        Option aaptOption = OptionBuilder.withLongOpt(\"aapt\")\n+                .hasArg(true)\n+                .withArgName(\"loc\")\n+                .withDescription(\"Loads aapt from specified location.\")\n+                .create(\"a\");\n+\n+        Option originalOption = OptionBuilder.withLongOpt(\"copy-original\")\n+                .withDescription(\"Copies original AndroidManifest.xml and META-INF. See project page for more info.\")\n+                .create(\"c\");\n+\n+        Option tagOption = OptionBuilder.withLongOpt(\"tag\")\n+                .withDescription(\"Tag frameworks using <tag>.\")\n+                .hasArg(true)\n+                .withArgName(\"tag\")\n+                .create(\"t\");\n+\n+        Option outputBuiOption = OptionBuilder.withLongOpt(\"output\")\n+                .withDescription(\"The name of apk that gets written. Default is dist/name.apk\")\n+                .hasArg(true)\n+                .withArgName(\"dir\")\n+                .create(\"o\");\n+\n+        Option outputDecOption = OptionBuilder.withLongOpt(\"output\")\n+                .withDescription(\"The name of folder that gets written. Default is apk.out\")\n+                .hasArg(true)\n+                .withArgName(\"dir\")\n+                .create(\"o\");\n+\n+        Option quietOption = OptionBuilder.withLongOpt(\"quiet\")\n+                .create(\"q\");\n+\n+        Option verboseOption = OptionBuilder.withLongOpt(\"verbose\")\n+                .create(\"v\");\n+\n+        // check for advance mode\n+        if (isAdvanceMode()) {\n+            DecodeOptions.addOption(debugDecOption);\n+            DecodeOptions.addOption(noDbgOption);\n+            DecodeOptions.addOption(keepResOption);\n+\n+            BuildOptions.addOption(debugBuiOption);\n+            BuildOptions.addOption(aaptOption);\n+            BuildOptions.addOption(originalOption);\n+        }\n+\n+        // add global options\n+        normalOptions.addOption(versionOption);\n+        normalOptions.addOption(advanceOption);\n+\n+        // add basic decode options\n+        DecodeOptions.addOption(frameTagOption);\n+        DecodeOptions.addOption(outputDecOption);\n+        DecodeOptions.addOption(frameDirOption);\n+        DecodeOptions.addOption(forceDecOption);\n+        DecodeOptions.addOption(noSrcOption);\n+        DecodeOptions.addOption(noResOption);\n+\n+        // add basic build options\n+        BuildOptions.addOption(outputBuiOption);\n+        BuildOptions.addOption(frameDirOption);\n+        BuildOptions.addOption(forceBuiOption);\n+\n+        // add basic framework options\n+        frameOptions.addOption(tagOption);\n+        frameOptions.addOption(frameDirOption);\n+\n+        // add all, loop existing cats then manually add advance\n+        for (Object op : normalOptions.getOptions()) {\n+            allOptions.addOption((Option)op);\n+        }\n+        for (Object op : DecodeOptions.getOptions()) {\n+            allOptions.addOption((Option)op);\n+        }\n+        for (Object op : BuildOptions.getOptions()) {\n+            allOptions.addOption((Option)op);\n+        }\n+        for (Object op : frameOptions.getOptions()) {\n+            allOptions.addOption((Option)op);\n+        }\n+        allOptions.addOption(debugDecOption);\n+        allOptions.addOption(noDbgOption);\n+        allOptions.addOption(keepResOption);\n+        allOptions.addOption(debugBuiOption);\n+        allOptions.addOption(aaptOption);\n+        allOptions.addOption(originalOption);\n+        allOptions.addOption(verboseOption);\n+        allOptions.addOption(quietOption);\n+    }\n+\n+    private static String verbosityHelp() {\n+        if (isAdvanceMode()) {\n+            return \"[-q|--quiet OR -v|--verbose] \";\n+        } else {\n+            return \"\";\n+        }\n+    }\n+\n+    private static void usage(CommandLine commandLine) {\n+\n+        // load basicOptions\n+        _Options();\n+        HelpFormatter formatter = new HelpFormatter();\n+\n+        // max their window to 120, if small.\n+        int consoleWidth = ConsoleUtil.getConsoleWidth();\n+        if (consoleWidth <= 0) {\n+            consoleWidth = 120;\n+        }\n+        formatter.setWidth(consoleWidth);\n+\n+        // print out license info prior to formatter.\n+        System.out.println(\n+                \"Apktool v\" + Androlib.getVersion() + \" - a tool for reengineering Android apk files\\n\" +\n+                        \"with smali v\" + ApktoolProperties.get(\"smaliVersion\") +\n+                        \" and baksmali v\" + ApktoolProperties.get(\"baksmaliVersion\") + \"\\n\" +\n+                        \"Copyright 2010 Ryszard Wi\u015bniewski <brut.alll@gmail.com>\\n\" +\n+                        \"Updated by Connor Tumbleson <connor.tumbleson@gmail.com>\" );\n+        if (isAdvanceMode()) {\n+            System.out.println(\"Apache License 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\\n\");\n+        }else {\n+            System.out.println(\"\");\n+        }\n+\n+        // 4 usage outputs (general, frameworks, decode, build)\n+        formatter.printHelp(\"apktool \" + verbosityHelp(), normalOptions);\n+        formatter.printHelp(\"apktool \" + verbosityHelp() + \"if|install-framework [options] <framework.apk>\", frameOptions);\n+        formatter.printHelp(\"apktool \" + verbosityHelp() + \"d[ecode] [options] <file_apk>\", DecodeOptions);\n+        formatter.printHelp(\"apktool \" + verbosityHelp() + \"b[uild] [options] <app_path>\", BuildOptions);\n+        if (isAdvanceMode()) {\n+            formatter.printHelp(\"apktool \" + verbosityHelp() + \"publicize-resources <file_path>\",\n+                    \"Make all framework resources public.\", emptyOptions, null);\n+        } else {\n+            System.out.println(\"\");\n+        }\n+\n+        // print out more information\n+        System.out.println(\n+                \"For additional info, see: http://code.google.com/p/android-apktool/ \\n\"\n+                        + \"For smali/baksmali info, see: http://code.google.com/p/smali/\");\n+    }\n+\n+    private static void setupLogging(Verbosity verbosity) {\n+        Logger logger = Logger.getLogger(\"\");\n+        for (Handler handler : logger.getHandlers()) {\n+            logger.removeHandler(handler);\n+        }\n+        if (verbosity == Verbosity.QUIET) {\n+            return;\n+        }\n+\n+        Handler handler = new ConsoleHandler();\n+        logger.addHandler(handler);\n+\n+        if (verbosity == Verbosity.VERBOSE) {\n+            handler.setLevel(Level.ALL);\n+            logger.setLevel(Level.ALL);\n+        } else {\n+            handler.setFormatter(new Formatter() {\n+                @Override\n+                public String format(LogRecord record) {\n+                    return record.getLevel().toString().charAt(0) + \": \"\n+                            + record.getMessage()\n+                            + System.getProperty(\"line.separator\");\n+                }\n+            });\n+        }\n+    }\n \n     public static boolean isAdvanceMode() {\n         return advanceMode;\n     }\n \n-  public static void setAdvanceMode(boolean advanceMode) {\n-    Main.advanceMode = advanceMode;\n-  }\n-\n-  private static enum Verbosity {\n-\t\tNORMAL, VERBOSE, QUIET;\n-\t}\n-\n-\tprivate static boolean advanceMode = false;\n-\n-\tprivate final static Options normalOptions;\n-  private final static Options DecodeOptions;\n-  private final static Options BuildOptions;\n-  private final static Options frameOptions;\n-  private final static Options allOptions;\n-  private final static Options emptyOptions;\n-\n-  static {\n-    //normal and advance usage output\n-    normalOptions = new Options();\n-    BuildOptions = new Options();\n-    DecodeOptions = new Options();\n-    frameOptions = new Options();\n-    allOptions = new Options();\n-    emptyOptions = new Options();\n-  }\n+    public static void setAdvanceMode(boolean advanceMode) {\n+        Main.advanceMode = advanceMode;\n+    }\n+\n+    private static enum Verbosity {\n+        NORMAL, VERBOSE, QUIET;\n+    }\n+\n+    private static boolean advanceMode = false;\n+\n+    private final static Options normalOptions;\n+    private final static Options DecodeOptions;\n+    private final static Options BuildOptions;\n+    private final static Options frameOptions;\n+    private final static Options allOptions;\n+    private final static Options emptyOptions;\n+\n+    static {\n+        //normal and advance usage output\n+        normalOptions = new Options();\n+        BuildOptions = new Options();\n+        DecodeOptions = new Options();\n+        frameOptions = new Options();\n+        allOptions = new Options();\n+        emptyOptions = new Options();\n+    }\n }",
      "parent_sha": "a48c11dc1c73458fd7048821075bbdcff2579b3d"
    }
  },
  {
    "oid": "943b424172645a0ef4c857c886959b089fd2c2d5",
    "message": "fix: use proper array syntax",
    "date": "2020-09-13T12:45:05Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/943b424172645a0ef4c857c886959b089fd2c2d5",
    "details": {
      "sha": "c5e174f9b391162313ace4a104f3f005f2d88f8b",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/data/value/ResArrayValue.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/943b424172645a0ef4c857c886959b089fd2c2d5/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResArrayValue.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/943b424172645a0ef4c857c886959b089fd2c2d5/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResArrayValue.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResArrayValue.java?ref=943b424172645a0ef4c857c886959b089fd2c2d5",
      "patch": "@@ -95,7 +95,7 @@ public String getType() throws AndrolibException {\n     }\n \n     private final ResScalarValue[] mItems;\n-    private final String AllowedArrayTypes[] = {\"string\", \"integer\"};\n+    private final String[] AllowedArrayTypes = {\"string\", \"integer\"};\n \n     public static final int BAG_KEY_ARRAY_START = 0x02000000;\n }",
      "parent_sha": "120c63df758171845ca752b5e446283fe96e8a2a"
    }
  },
  {
    "oid": "a375717adeb9b151b2bdd607a8634523e4fe4abd",
    "message": "fix: support alignment towards resTable_entry start (#3452)",
    "date": "2023-12-04T10:58:27Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/a375717adeb9b151b2bdd607a8634523e4fe4abd",
    "details": {
      "sha": "24bfe964370befc42f0f586a5a9ae7f8a37096d4",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/decoder/ARSCDecoder.java",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/a375717adeb9b151b2bdd607a8634523e4fe4abd/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/a375717adeb9b151b2bdd607a8634523e4fe4abd/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java?ref=a375717adeb9b151b2bdd607a8634523e4fe4abd",
      "patch": "@@ -275,7 +275,7 @@ private ResType readTableType() throws IOException, AndrolibException {\n         int typeFlags = mIn.readByte();\n         mIn.skipBytes(2); // reserved\n         int entryCount = mIn.readInt();\n-        mIn.skipInt(); // entriesStart\n+        int entriesStart = mIn.readInt();\n \n         ResConfigFlags flags = readConfigFlags();\n \n@@ -313,6 +313,13 @@ private ResType readTableType() throws IOException, AndrolibException {\n         mType = flags.isInvalid && !mKeepBroken ? null : mPkg.getOrCreateConfig(flags);\n         int noEntry = isOffset16 ? NO_ENTRY_OFFSET16 : NO_ENTRY;\n \n+        // #3428 - In some applications the res entries are padded for alignment.\n+        int entriesStartAligned = mHeader.startPosition + entriesStart;\n+        if (mIn.position() < entriesStartAligned) {\n+            long bytesSkipped = mIn.skip(entriesStartAligned - mIn.position());\n+            LOGGER.fine(\"Skipping: \" + bytesSkipped + \" byte(s) to align with ResTable_entry start.\");\n+        }\n+\n         for (int i : entryOffsetMap.keySet()) {\n             mResId = (mResId & 0xffff0000) | i;\n             int offset = entryOffsetMap.get(i);",
      "parent_sha": "bea15e6f127994ed7ef7c130d8538c296b752c0f"
    }
  },
  {
    "oid": "797fc3e332d8dbef12ed092c7fadc62241ba65b7",
    "message": "fix: prevent file hold on tmpDir during build (#2745)",
    "date": "2022-01-18T12:32:41Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/797fc3e332d8dbef12ed092c7fadc62241ba65b7",
    "details": {
      "sha": "833a8d9d66c2afcf4cfa4aae8e02cfe5ac615c81",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/Androlib.java",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/797fc3e332d8dbef12ed092c7fadc62241ba65b7/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FAndrolib.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/797fc3e332d8dbef12ed092c7fadc62241ba65b7/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FAndrolib.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FAndrolib.java?ref=797fc3e332d8dbef12ed092c7fadc62241ba65b7",
      "patch": "@@ -498,7 +498,8 @@ public boolean buildResourcesFull(File appDir, UsesFramework usesFramework)\n                                 \"AndroidManifest.xml\"), new File(appDir, \"res\"),\n                         ninePatch, null, parseUsesFramework(usesFramework));\n \n-                Directory tmpDir = new ExtFile(apkFile).getDirectory();\n+                ExtFile tmpExtFile = new ExtFile(apkFile);\n+                Directory tmpDir = tmpExtFile.getDirectory();\n \n                 // Sometimes an application is built with a resources.arsc file with no resources,\n                 // Apktool assumes it will have a rebuilt arsc file, when it doesn't. So if we\n@@ -509,6 +510,8 @@ public boolean buildResourcesFull(File appDir, UsesFramework usesFramework)\n                                     : APK_RESOURCES_WITHOUT_RES_FILENAMES);\n                 } catch (DirectoryException ex) {\n                     LOGGER.warning(ex.getMessage());\n+                } finally {\n+                    tmpExtFile.close();\n                 }\n \n                 // delete tmpDir",
      "parent_sha": "ddc4bb360ab3f2e4e9cc47b39234b0c63aaa9b8a"
    }
  },
  {
    "oid": "70deba0c5ded99b6d9a9d0ae6f5fe4fce8521c45",
    "message": "TypeName: added fromPath() and fromNameParts().",
    "date": "2013-05-02T15:49:30Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/70deba0c5ded99b6d9a9d0ae6f5fe4fce8521c45",
    "details": {
      "sha": "78aba508d7c3ec220124cf3ef5f84400a43bf156",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/src/TypeName.java",
      "status": "modified",
      "additions": 28,
      "deletions": 23,
      "changes": 51,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/70deba0c5ded99b6d9a9d0ae6f5fe4fce8521c45/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fsrc%2FTypeName.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/70deba0c5ded99b6d9a9d0ae6f5fe4fce8521c45/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fsrc%2FTypeName.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fsrc%2FTypeName.java?ref=70deba0c5ded99b6d9a9d0ae6f5fe4fce8521c45",
      "patch": "@@ -18,8 +18,12 @@\n \n import brut.androlib.AndrolibException;\n import brut.util.Duo;\n+import com.google.common.base.Joiner;\n+\n import java.io.File;\n+import java.nio.file.Path;\n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.List;\n \n /**\n@@ -120,6 +124,27 @@ public static List<TypeName> listFromInternalName(String internal)\n \t\treturn types;\n \t}\n \n+    public static TypeName fromPath(Path path) {\n+        List<String> parts = new ArrayList<>(path.getNameCount());\n+        for (Path p : path) {\n+            parts.add(p.toString());\n+        }\n+        return fromNameParts(parts, 0);\n+    }\n+\n+    public static TypeName fromNameParts(List<String> parts, int array) {\n+        String type = parts.get(parts.size() - 1);\n+        parts = parts.subList(0, parts.size() - 1);\n+        String innerType = null;\n+\n+        int pos = type.indexOf('$');\n+        if (pos != -1) {\n+            innerType = type.substring(pos + 1);\n+            type = type.substring(0, pos);\n+        }\n+        return new TypeName(Joiner.on('.').join(parts), type, innerType, array);\n+    }\n+\n \tpublic static Duo<TypeName, Integer> fetchFromInternalName(String internal)\n \t\t\tthrows AndrolibException {\n \t\tString origInternal = internal;\n@@ -139,9 +164,7 @@ public static Duo<TypeName, Integer> fetchFromInternalName(String internal)\n \t\t} while (isArray);\n \n \t\tint length = array + 1;\n-\t\tString package_ = null;\n-\t\tString type = null;\n-\t\tString innerType = null;\n+\t\tString type;\n \t\tswitch (internal.charAt(0)) {\n \t\tcase 'B':\n \t\t\ttype = \"byte\";\n@@ -176,31 +199,13 @@ public static Duo<TypeName, Integer> fetchFromInternalName(String internal)\n \t\t\t\tthrow new AndrolibException(\"Invalid internal name: \"\n \t\t\t\t\t\t+ origInternal);\n \t\t\t}\n-\t\t\tlength += pos;\n-\t\t\tinternal = internal.substring(1, pos);\n-\n-\t\t\tpos = internal.lastIndexOf('/');\n-\t\t\tif (pos == -1) {\n-\t\t\t\tpackage_ = \"\";\n-\t\t\t\ttype = internal;\n-\t\t\t} else {\n-\t\t\t\tpackage_ = internal.substring(0, pos).replace('/', '.');\n-\t\t\t\ttype = internal.substring(pos + 1);\n-\t\t\t}\n-\n-\t\t\tpos = type.indexOf('$');\n-\t\t\tif (pos != -1) {\n-\t\t\t\tinnerType = type.substring(pos + 1);\n-\t\t\t\ttype = type.substring(0, pos);\n-\t\t\t}\n-\t\t\tbreak;\n+            return new Duo<>(fromNameParts(Arrays.asList(internal.substring(1, pos).split(\"/\")), array), length + pos);\n \t\tdefault:\n \t\t\tthrow new AndrolibException(\"Invalid internal name: \"\n \t\t\t\t\t+ origInternal);\n \t\t}\n \n-\t\treturn new Duo<TypeName, Integer>(new TypeName(package_, type,\n-\t\t\t\tinnerType, array), length);\n+\t\treturn new Duo<>(new TypeName(null, type, null, array), length);\n \t}\n \n \tprivate Boolean mIsFileOwner;",
      "parent_sha": "62ac6fa870a9d7d4621b4676c75153422370932f"
    }
  },
  {
    "oid": "570eaa7023500957341120cfc9712158429a8aeb",
    "message": "adapt SmaliDecoder to dexlib2",
    "date": "2013-08-12T14:16:51Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/570eaa7023500957341120cfc9712158429a8aeb",
    "details": {
      "sha": "f8efaa958be2a8f65048b81e19183a4a5fc9b647",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/src/SmaliDecoder.java",
      "status": "modified",
      "additions": 22,
      "deletions": 6,
      "changes": 28,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/570eaa7023500957341120cfc9712158429a8aeb/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fsrc%2FSmaliDecoder.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/570eaa7023500957341120cfc9712158429a8aeb/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fsrc%2FSmaliDecoder.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fsrc%2FSmaliDecoder.java?ref=570eaa7023500957341120cfc9712158429a8aeb",
      "patch": "@@ -18,8 +18,10 @@\n \n import brut.androlib.AndrolibException;\n import org.jf.baksmali.baksmali;\n-import org.jf.dexlib.Code.Analysis.ClassPath;\n-import org.jf.dexlib.DexFile;\n+import org.jf.baksmali.baksmaliOptions;\n+import org.jf.dexlib2.DexFileFactory;\n+import org.jf.dexlib2.analysis.ClassPath;\n+import org.jf.dexlib2.DexFileFactory;\n \n import java.io.BufferedReader;\n import java.io.BufferedWriter;\n@@ -54,10 +56,24 @@ private SmaliDecoder(File apkFile, File outDir, boolean debug, String debugLineP\n \tprivate void decode() throws AndrolibException {\n \t\ttry {\n             ClassPath.dontLoadClassPath = mDebug;\n-\t\t\tbaksmali.disassembleDexFile(mApkFile.getAbsolutePath(),\n-\t\t\t\t\tnew DexFile(mApkFile), false, mOutDir.toAbsolutePath().toString(),\n-\t\t\t\t\tnull, null, null, false, true, true, mBakDeb, false, false,\n-                    mDebug ? org.jf.baksmali.main.DIFFPRE : 0, false, false, null, false);\n+\n+            baksmaliOptions options = new baksmaliOptions();\n+\n+            // options\n+            options.deodex = false;\n+            options.outputDirectory = mOutDir.toAbsolutePath().toString();\n+            options.noParameterRegisters = false;\n+            options.useLocalsDirective = true;\n+            options.useSequentialLabels = true;\n+            options.outputDebugInfo = mBakDeb;\n+            options.addCodeOffsets = false;\n+            options.noAccessorComments = false;\n+            options.registerInfo = (mDebug ? baksmaliOptions.DIFFPRE : 0);\n+            options.ignoreErrors = false;\n+            options.inlineResolver = null;\n+            options.checkPackagePrivateAccess = false;\n+\n+            baksmali.disassembleDexFile(DexFileFactory.loadDexFile(mApkFile, 0), options);\n \n             if (mDebug) {\n                 Files.walkFileTree(mOutDir, new SmaliFileVisitor());",
      "parent_sha": "7904ec2a7c1b0c782f4184ef54354f79d2644624"
    }
  },
  {
    "oid": "f9aaf2cc7ed006a804b13d89e90d271cbe668fbe",
    "message": "Runtime.exec has problems dealing with spaces in arguments given. Lame resolution is to change the ~/Library/Application Support/apktool path to ~/Library/apktool. Fix is for OS X only. Do not think there is problems on other platforms with this.",
    "date": "2012-10-21T18:25:11Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/f9aaf2cc7ed006a804b13d89e90d271cbe668fbe",
    "details": {
      "sha": "efc4715938b1577aea8099c1d05ee49baed5d603",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/AndrolibResources.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/f9aaf2cc7ed006a804b13d89e90d271cbe668fbe/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/f9aaf2cc7ed006a804b13d89e90d271cbe668fbe/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java?ref=f9aaf2cc7ed006a804b13d89e90d271cbe668fbe",
      "patch": "@@ -546,7 +546,7 @@ private File getFrameworkDir() throws AndrolibException {\n         /* store in user-home, for Mac OS X */\n         if (System.getProperty(\"os.name\").equals(\"Mac OS X\")) {\n            path = System.getProperty(\"user.home\") + File.separatorChar +\n-                \"Library/Application Support/apktool/framework\"; }\n+                \"Library/apktool/framework\"; }\n         else {\n             path = System.getProperty(\"user.home\") + File.separatorChar +\t\n                 \"apktool\" + File.separatorChar + \"framework\";\n@@ -580,4 +580,4 @@ public File getAndroidResourcesFile() throws AndrolibException {\n     private String mMaxSdkVersion = null;\n     private String mTargetSdkVersion = null;\n \n-}\n\\ No newline at end of file\n+}",
      "parent_sha": "8754fd196bd76fec7a59124d6e97bce839e723e4"
    }
  },
  {
    "oid": "316353f83f7a704529912b5cebaf73ef41c7c7a5",
    "message": "ResStringValue::encodeAsXmlValue() : enumerate non-positional substitutions.",
    "date": "2011-05-14T01:49:24Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/316353f83f7a704529912b5cebaf73ef41c7c7a5",
    "details": {
      "sha": "0e5db398e4ae4c901ca90dc8c14e322d0884777c",
      "filename": "apktool-lib/src/main/java/brut/androlib/res/data/value/ResStringValue.java",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/316353f83f7a704529912b5cebaf73ef41c7c7a5/apktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResStringValue.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/316353f83f7a704529912b5cebaf73ef41c7c7a5/apktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResStringValue.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/apktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResStringValue.java?ref=316353f83f7a704529912b5cebaf73ef41c7c7a5",
      "patch": "@@ -42,14 +42,21 @@ public String encodeAsResXmlAttr() {\n \n     @Override\n     public String encodeAsResXmlValue() {\n-        return ResXmlEncoders.encodeAsXmlValue(mRawValue);\n+        return ResXmlEncoders.enumerateNonPositionalSubstitutions(\n+                ResXmlEncoders.encodeAsXmlValue(mRawValue));\n     }\n \n     @Override\n     protected String encodeAsResXml() throws AndrolibException {\n         throw new UnsupportedOperationException();\n     }\n \n+    @Override\n+    protected String serializeXmlBody(XmlSerializer serializer, ResResource res)\n+            throws IOException, AndrolibException {\n+        return ResXmlEncoders.encodeAsXmlValue(mRawValue);\n+    }\n+\n     @Override\n     protected void serializeExtraXmlAttrs(XmlSerializer serializer,\n             ResResource res) throws IOException {",
      "parent_sha": "5363b7f470610b53ed300f060bc48207feea5f52"
    }
  },
  {
    "oid": "f1742c1956aed64f2660172ab961303f26245025",
    "message": "ARSCDecoder: added support for config chunks of size other than 32.",
    "date": "2010-03-27T21:24:05Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/f1742c1956aed64f2660172ab961303f26245025",
    "details": {
      "sha": "bbbe943b0465d80d18f5eab0200676d5e4f89e19",
      "filename": "src/brut/androlib/res/decoder/ARSCDecoder.java",
      "status": "modified",
      "additions": 19,
      "deletions": 3,
      "changes": 22,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/f1742c1956aed64f2660172ab961303f26245025/src%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/f1742c1956aed64f2660172ab961303f26245025/src%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/src%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FARSCDecoder.java?ref=f1742c1956aed64f2660172ab961303f26245025",
      "patch": "@@ -25,6 +25,7 @@\n import java.io.*;\n import java.util.LinkedHashMap;\n import java.util.Map;\n+import java.util.logging.Logger;\n \n /**\n  * @author Ryszard Wi\u015bniewski <brut.alll@gmail.com>\n@@ -182,7 +183,12 @@ private ResValue readValue() throws IOException, AndrolibException {\n     }\n \n     private ResConfigFlags readConfigFlags() throws IOException, AndrolibException {\n-        /*size*/ mIn.skipCheckInt(32);\n+        int size = mIn.readInt();\n+        if (size < 28) {\n+            throw new AndrolibException(\"Config size < 28\");\n+        } else if (size > 32) {\n+            LOGGER.warning(\"Config size > 32\");\n+        }\n \n         short mcc = mIn.readShort();\n         short mnc = mIn.readShort();\n@@ -207,8 +213,15 @@ private ResConfigFlags readConfigFlags() throws IOException, AndrolibException {\n         short sdkVersion = mIn.readShort();\n         mIn.skipBytes(2);\n \n-        byte screenLayout = mIn.readByte();\n-        mIn.skipBytes(3);\n+        byte screenLayout = 0;\n+        if (size >= 32) {\n+            screenLayout = mIn.readByte();\n+            mIn.skipBytes(3);\n+        }\n+\n+        if (size > 32) {\n+            mIn.skipBytes(size - 32);\n+        }\n \n         return new ResConfigFlags(mcc, mnc, language, country, orientation,\n             touchscreen, density, keyboard, navigation, inputFlags,\n@@ -276,4 +289,7 @@ public static Header read(ExtDataInput in) throws IOException {\n             TYPE_TYPE = 0x0202,\n             TYPE_CONFIG = 0x0201;\n     }\n+\n+    private static final Logger LOGGER =\n+        Logger.getLogger(ARSCDecoder.class.getName());\n }",
      "parent_sha": "8094115fbc568e0d6352ca48d50e6ac45c301e42"
    }
  },
  {
    "oid": "3c84590a1ab55b7b338989e3058230f83289fa37",
    "message": "aapt2: treat verbose output as fine",
    "date": "2018-02-28T15:58:38Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/3c84590a1ab55b7b338989e3058230f83289fa37",
    "details": {
      "sha": "211e068f0ba553e8e98ab9b64ab6459d6dba8f4c",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/AndrolibResources.java",
      "status": "modified",
      "additions": 9,
      "deletions": 16,
      "changes": 25,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/3c84590a1ab55b7b338989e3058230f83289fa37/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/3c84590a1ab55b7b338989e3058230f83289fa37/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java?ref=3c84590a1ab55b7b338989e3058230f83289fa37",
      "patch": "@@ -327,7 +327,8 @@ private void aapt2Package(File apkFile, File manifest, File resDir, File rawDir,\n             cmd.add(\"--dir\");\n             cmd.add(resDir.getAbsolutePath());\n \n-            cmd.add(\"--legacy\"); // Treats error that used to be valid in aapt1 as warnings in aapt2\n+            // Treats error that used to be valid in aapt1 as warnings in aapt2\n+            cmd.add(\"--legacy\");\n \n             try {\n                 tempResourcesZip = File.createTempFile(\"BRUT\", \".zip\");\n@@ -342,10 +343,8 @@ private void aapt2Package(File apkFile, File manifest, File resDir, File rawDir,\n \n                 try {\n                     OS.exec(cmd.toArray(new String[0]));\n-                    if (apkOptions.verbose) {\n-                        LOGGER.info(\"aapt2 compile command ran: \");\n-                        LOGGER.info(cmd.toString());\n-                    }\n+                    LOGGER.fine(\"aapt2 compile command ran: \");\n+                    LOGGER.fine(cmd.toString());\n                 } catch (BrutException ex) {\n                     throw new AndrolibException(ex);\n                 }\n@@ -456,10 +455,8 @@ private void aapt2Package(File apkFile, File manifest, File resDir, File rawDir,\n \n         try {\n             OS.exec(cmd.toArray(new String[0]));\n-            if (apkOptions.verbose) {\n-                LOGGER.info(\"aapt2 link command ran: \");\n-                LOGGER.info(cmd.toString());\n-            }\n+            LOGGER.fine(\"aapt2 link command ran: \");\n+            LOGGER.fine(cmd.toString());\n         } catch (BrutException ex) {\n             throw new AndrolibException(ex);\n         }\n@@ -563,10 +560,8 @@ private void aapt1Package(File apkFile, File manifest, File resDir, File rawDir,\n         }\n         try {\n             OS.exec(cmd.toArray(new String[0]));\n-            if (apkOptions.verbose) {\n-                LOGGER.info(\"command ran: \");\n-                LOGGER.info(cmd.toString());\n-            }\n+            LOGGER.fine(\"command ran: \");\n+            LOGGER.fine(cmd.toString());\n         } catch (BrutException ex) {\n             throw new AndrolibException(ex);\n         }\n@@ -587,9 +582,7 @@ public void aaptPackage(File apkFile, File manifest, File resDir, File rawDir, F\n                 cmd.add(aaptFile.getPath());\n                 customAapt = true;\n \n-                if (apkOptions.verbose) {\n-                    LOGGER.info(aaptFile.getPath() + \" being used as aapt location.\");\n-                }\n+                LOGGER.fine(aaptFile.getPath() + \" being used as aapt location.\");\n             } else {\n                 LOGGER.warning(\"aapt location could not be found. Defaulting back to default\");\n ",
      "parent_sha": "367d33e314d4f00976fc112f5e875a616168f637"
    }
  },
  {
    "oid": "cd56ffadd0e764bd91fa4ff2da297a34bd9b2295",
    "message": ".",
    "date": "2010-04-02T18:14:58Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/cd56ffadd0e764bd91fa4ff2da297a34bd9b2295",
    "details": {
      "sha": "7a2a81050328f0d002f99ab079f170b8e940ef72",
      "filename": "src/brut/androlib/Androlib.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/cd56ffadd0e764bd91fa4ff2da297a34bd9b2295/src%2Fbrut%2Fandrolib%2FAndrolib.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/cd56ffadd0e764bd91fa4ff2da297a34bd9b2295/src%2Fbrut%2Fandrolib%2FAndrolib.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/src%2Fbrut%2Fandrolib%2FAndrolib.java?ref=cd56ffadd0e764bd91fa4ff2da297a34bd9b2295",
      "patch": "@@ -253,7 +253,7 @@ public void buildLib(File appDir, boolean forceBuildAll)\n \n     public void buildApk(File appDir, boolean framework)\n             throws AndrolibException {\n-        LOGGER.info(\"Building apk file\");\n+        LOGGER.info(\"Building apk file...\");\n         File outApk = new File(appDir, OUT_APK_FILENAME);\n         if (outApk.exists()) {\n             outApk.delete();",
      "parent_sha": "651f4d37d872e261ec649fe6cbe405bff33bdc8b"
    }
  },
  {
    "oid": "47dd120b385025604369149460a985a69c53f599",
    "message": "Prevents package renaming of Adobe AIR applications\n\n - fixes #1240",
    "date": "2016-05-04T12:04:28Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/47dd120b385025604369149460a985a69c53f599",
    "details": {
      "sha": "0175f3420a8b5d17f42e0defa0715dcb6d0a469c",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/AndrolibResources.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/47dd120b385025604369149460a985a69c53f599/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/47dd120b385025604369149460a985a69c53f599/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java?ref=47dd120b385025604369149460a985a69c53f599",
      "patch": "@@ -790,7 +790,8 @@ public File getAndroidResourcesFile() throws AndrolibException {\n     private boolean mSharedLibrary = false;\n \n     private final static String[] IGNORED_PACKAGES = new String[] {\n-            \"android\", \"com.htc\", \"miui\", \"com.lge\", \"com.lge.internal\", \"yi\", \"com.miui.core\", \"flyme\"};\n+            \"android\", \"com.htc\", \"miui\", \"com.lge\", \"com.lge.internal\", \"yi\", \"com.miui.core\", \"flyme\",\n+            \"air.com.adobe.appentry\" };\n \n     private final static String[] ALLOWED_PACKAGES = new String[] {\n             \"com.miui\" };",
      "parent_sha": "2f67a36c72fb6289a6264bc8ae200f78ca9ccbd8"
    }
  },
  {
    "oid": "292e49de0a0195157702c283be8cf387397ae9f2",
    "message": "[dexlib2] allow disassemble of apks with non classes.dex files",
    "date": "2014-08-16T13:37:00Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/292e49de0a0195157702c283be8cf387397ae9f2",
    "details": {
      "sha": "8b2237be860ba46edccad754467b38e9ad302abf",
      "filename": "brut.apktool.smali/dexlib2/src/main/java/org/jf/dexlib2/DexFileFactory.java",
      "status": "modified",
      "additions": 11,
      "deletions": 6,
      "changes": 17,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/292e49de0a0195157702c283be8cf387397ae9f2/brut.apktool.smali%2Fdexlib2%2Fsrc%2Fmain%2Fjava%2Forg%2Fjf%2Fdexlib2%2FDexFileFactory.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/292e49de0a0195157702c283be8cf387397ae9f2/brut.apktool.smali%2Fdexlib2%2Fsrc%2Fmain%2Fjava%2Forg%2Fjf%2Fdexlib2%2FDexFileFactory.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool.smali%2Fdexlib2%2Fsrc%2Fmain%2Fjava%2Forg%2Fjf%2Fdexlib2%2FDexFileFactory.java?ref=292e49de0a0195157702c283be8cf387397ae9f2",
      "patch": "@@ -46,33 +46,38 @@\n public final class DexFileFactory {\n     @Nonnull\n     public static DexBackedDexFile loadDexFile(String path, int api) throws IOException {\n-        return loadDexFile(new File(path), new Opcodes(api));\n+        return loadDexFile(new File(path), \"classes.dex\", new Opcodes(api));\n     }\n \n     @Nonnull\n     public static DexBackedDexFile loadDexFile(File dexFile, int api) throws IOException {\n-        return loadDexFile(dexFile, new Opcodes(api));\n+        return loadDexFile(dexFile, \"classes.dex\", new Opcodes(api));\n     }\n \n     @Nonnull\n-    public static DexBackedDexFile loadDexFile(File dexFile, @Nonnull Opcodes opcodes) throws IOException {\n+    public static DexBackedDexFile loadDexFile(File dexFile, String dexEntry, int api) throws IOException {\n+        return loadDexFile(dexFile, dexEntry, new Opcodes(api));\n+    }\n+\n+    @Nonnull\n+    public static DexBackedDexFile loadDexFile(File dexFile, String filename, @Nonnull Opcodes opcodes) throws IOException {\n         ZipFile zipFile = null;\n         boolean isZipFile = false;\n         try {\n             zipFile = new ZipFile(dexFile);\n             // if we get here, it's safe to assume we have a zip file\n             isZipFile = true;\n \n-            ZipEntry zipEntry = zipFile.getEntry(\"classes.dex\");\n+            ZipEntry zipEntry = zipFile.getEntry(filename);\n             if (zipEntry == null) {\n                 throw new NoClassesDexException(\"zip file %s does not contain a classes.dex file\", dexFile.getName());\n             }\n             long fileLength = zipEntry.getSize();\n             if (fileLength < 40) {\n                 throw new ExceptionWithContext(\n-                        \"The classes.dex file in %s is too small to be a valid dex file\", dexFile.getName());\n+                        \"The \" + filename + \" file in %s is too small to be a valid dex file\", dexFile.getName());\n             } else if (fileLength > Integer.MAX_VALUE) {\n-                throw new ExceptionWithContext(\"The classes.dex file in %s is too large to read in\", dexFile.getName());\n+                throw new ExceptionWithContext(\"The \" + filename + \" file in %s is too large to read in\", dexFile.getName());\n             }\n             byte[] dexBytes = new byte[(int)fileLength];\n             ByteStreams.readFully(zipFile.getInputStream(zipEntry), dexBytes);",
      "parent_sha": "c476ce16be0b28ed693e46cd80692e92bcd510fe"
    }
  },
  {
    "oid": "af2f54245b866edae1d2a216eac13ea3577fb686",
    "message": "[skip] remove confusing logic",
    "date": "2015-12-03T13:57:12Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/af2f54245b866edae1d2a216eac13ea3577fb686",
    "details": {
      "sha": "44a11ebb6544ef9cae71f62819826e2c6fe4fc02",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/decoder/StringBlock.java",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/af2f54245b866edae1d2a216eac13ea3577fb686/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FStringBlock.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/af2f54245b866edae1d2a216eac13ea3577fb686/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FStringBlock.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FStringBlock.java?ref=af2f54245b866edae1d2a216eac13ea3577fb686",
      "patch": "@@ -60,13 +60,13 @@ public static StringBlock read(ExtDataInput reader) throws IOException {\n         if (styleCount != 0) {\n             block.m_styleOffsets = reader.readIntArray(styleCount);\n         }\n-        {\n-            int size = ((stylesOffset == 0) ? chunkSize : stylesOffset) - stringsOffset;\n-            block.m_strings = new byte[size];\n-            reader.readFully(block.m_strings);\n-        }\n+\n+        int size = ((stylesOffset == 0) ? chunkSize : stylesOffset) - stringsOffset;\n+        block.m_strings = new byte[size];\n+        reader.readFully(block.m_strings);\n+\n         if (stylesOffset != 0) {\n-            int size = (chunkSize - stylesOffset);\n+            size = (chunkSize - stylesOffset);\n             block.m_styles = reader.readIntArray(size / 4);\n \n             // read remaining bytes",
      "parent_sha": "83748394272a1c9ac84aa0e5892e9f8aa40b2354"
    }
  },
  {
    "oid": "1542fd03874b4edf71c6e53d710d70028a702a86",
    "message": "Fix: add missing stream closing on manifest disassemble (#3634)\n\n* add missing stream closing\r\n\r\n* replace custom close with apache",
    "date": "2024-07-08T10:27:28Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/1542fd03874b4edf71c6e53d710d70028a702a86",
    "details": {
      "sha": "f74f6a93124dd88c3af7ddc640c63a91604b3cb2",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/ResourcesDecoder.java",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/1542fd03874b4edf71c6e53d710d70028a702a86/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FResourcesDecoder.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/1542fd03874b4edf71c6e53d710d70028a702a86/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FResourcesDecoder.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FResourcesDecoder.java?ref=1542fd03874b4edf71c6e53d710d70028a702a86",
      "patch": "@@ -28,6 +28,7 @@\n import brut.directory.Directory;\n import brut.directory.DirectoryException;\n import brut.directory.FileDirectory;\n+import org.apache.commons.io.IOUtils;\n import org.xmlpull.v1.XmlSerializer;\n \n import java.io.*;\n@@ -77,6 +78,8 @@ public void decodeManifest(File outDir) throws AndrolibException {\n         XmlPullStreamDecoder fileDecoder = new XmlPullStreamDecoder(axmlParser, getResXmlSerializer());\n \n         Directory inApk, out;\n+        InputStream inputStream = null;\n+        OutputStream outputStream = null;\n         try {\n             inApk = mApkInfo.getApkFile().getDirectory();\n             out = new FileDirectory(outDir);\n@@ -86,12 +89,15 @@ public void decodeManifest(File outDir) throws AndrolibException {\n             } else {\n                 LOGGER.info(\"Decoding AndroidManifest.xml with only framework resources...\");\n             }\n-            InputStream inputStream = inApk.getFileInput(\"AndroidManifest.xml\");\n-            OutputStream outputStream = out.getFileOutput(\"AndroidManifest.xml\");\n+            inputStream = inApk.getFileInput(\"AndroidManifest.xml\");\n+            outputStream = out.getFileOutput(\"AndroidManifest.xml\");\n             fileDecoder.decodeManifest(inputStream, outputStream);\n \n         } catch (DirectoryException ex) {\n             throw new AndrolibException(ex);\n+        } finally {\n+            IOUtils.closeQuietly(inputStream);\n+            IOUtils.closeQuietly(outputStream);\n         }\n \n         if (mApkInfo.hasResources()) {",
      "parent_sha": "71748d6fd4a3effc7d84369f80c2545ff9ece38f"
    }
  },
  {
    "oid": "d1eb0b01e1a3db8437e390bf92e7f15fd22ebb2a",
    "message": "[skip] fixed bad logger name",
    "date": "2014-03-06T15:40:49Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/d1eb0b01e1a3db8437e390bf92e7f15fd22ebb2a",
    "details": {
      "sha": "63dafb2db5ba57d3cbe3aff5407f8a9a25d6cff1",
      "filename": "brut.apktool/apktool-lib/src/test/java/brut/androlib/BuildAndDecodeJarTest.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/d1eb0b01e1a3db8437e390bf92e7f15fd22ebb2a/brut.apktool%2Fapktool-lib%2Fsrc%2Ftest%2Fjava%2Fbrut%2Fandrolib%2FBuildAndDecodeJarTest.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/d1eb0b01e1a3db8437e390bf92e7f15fd22ebb2a/brut.apktool%2Fapktool-lib%2Fsrc%2Ftest%2Fjava%2Fbrut%2Fandrolib%2FBuildAndDecodeJarTest.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Ftest%2Fjava%2Fbrut%2Fandrolib%2FBuildAndDecodeJarTest.java?ref=d1eb0b01e1a3db8437e390bf92e7f15fd22ebb2a",
      "patch": "@@ -64,5 +64,5 @@ public void buildAndDecodeTest() throws BrutException {\n     private static ExtFile sTestOrigDir;\n     private static ExtFile sTestNewDir;\n \n-    private final static Logger LOGGER = Logger.getLogger(BuildAndDecodeTest.class.getName());\n+    private final static Logger LOGGER = Logger.getLogger(BuildAndDecodeJarTest.class.getName());\n }",
      "parent_sha": "119f9d9680b226c070b7dd4d8d4d3e3be9e5f2c4"
    }
  },
  {
    "oid": "923ae6e9b8627ab3d5d1e4dac0d2436d1e9012ca",
    "message": "Revert \"tests: refactor tests to use assertEquals instead of hacky assertTrue\"\n\nThis reverts commit d6e3d013e7117d9c41ddb21db1e42859dfec4da2.",
    "date": "2018-04-06T18:58:48Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/923ae6e9b8627ab3d5d1e4dac0d2436d1e9012ca",
    "details": {
      "sha": "d24bd9d6c7c53fe3c9d9534f2fa6f8ffd431420a",
      "filename": "brut.apktool/apktool-lib/src/test/java/brut/androlib/BaseTest.java",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/923ae6e9b8627ab3d5d1e4dac0d2436d1e9012ca/brut.apktool%2Fapktool-lib%2Fsrc%2Ftest%2Fjava%2Fbrut%2Fandrolib%2FBaseTest.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/923ae6e9b8627ab3d5d1e4dac0d2436d1e9012ca/brut.apktool%2Fapktool-lib%2Fsrc%2Ftest%2Fjava%2Fbrut%2Fandrolib%2FBaseTest.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Ftest%2Fjava%2Fbrut%2Fandrolib%2FBaseTest.java?ref=923ae6e9b8627ab3d5d1e4dac0d2436d1e9012ca",
      "patch": "@@ -31,7 +31,6 @@\n import java.util.Set;\n import java.util.logging.Logger;\n \n-import static junit.framework.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertTrue;\n import static org.custommonkey.xmlunit.XMLAssert.assertXMLEqual;\n@@ -46,11 +45,11 @@ protected void compareUnknownFiles() throws BrutException {\n \n         Map<String, String> controlFiles = control.unknownFiles;\n         Map<String, String> testFiles = test.unknownFiles;\n-        assertEquals(controlFiles.size(), testFiles.size());\n+        assertTrue(controlFiles.size() == testFiles.size());\n \n         // Make sure that the compression methods are still the same\n         for (Map.Entry<String, String> controlEntry : controlFiles.entrySet()) {\n-            assertEquals(controlEntry.getValue(), testFiles.get(controlEntry.getKey()));\n+            assertTrue(controlEntry.getValue().equals(testFiles.get(controlEntry.getKey())));\n         }\n     }\n ",
      "parent_sha": "4d8922868616b85180507f899f95b7edaebb8687"
    }
  },
  {
    "oid": "087a97c30786908120d3905110bd3f9321643a5c",
    "message": "went back to 0 store, we don't deflate w/ apks",
    "date": "2012-09-18T11:52:05Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/087a97c30786908120d3905110bd3f9321643a5c",
    "details": {
      "sha": "31b72b2c8348785d470f8a0ec86bc71ce2e6e157",
      "filename": "apktool-lib/src/main/java/brut/androlib/Androlib.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/087a97c30786908120d3905110bd3f9321643a5c/apktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FAndrolib.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/087a97c30786908120d3905110bd3f9321643a5c/apktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FAndrolib.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/apktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2FAndrolib.java?ref=087a97c30786908120d3905110bd3f9321643a5c",
      "patch": "@@ -458,7 +458,7 @@ public void buildApk(File appDir, File outApk,  HashMap<String, Boolean> flags)\n                 \n                 // no compression levels, paras\n                 ZipParameters parameters = new ZipParameters();\n-                parameters.setCompressionMethod(Zip4jConstants.COMP_DEFLATE);\n+                parameters.setCompressionMethod(Zip4jConstants.COMP_STORE);\n                 parameters.setCompressionLevel(0);\n                 parameters.setIncludeRootFolder(true);\n                 parameters.setRootFolderInZip(\"/\");",
      "parent_sha": "75ad01c60a60b09d1af79c0b4505e37cdf2056a6"
    }
  },
  {
    "oid": "bb9519a2d072eb13baeeccecf49cc2b99cd2ba2b",
    "message": "refactor: change naming pattern of class variables in StringBlock (#3256)",
    "date": "2023-08-08T11:11:11Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/bb9519a2d072eb13baeeccecf49cc2b99cd2ba2b",
    "details": {
      "sha": "34a95598d4d7ef6416b3972cbb4d7da16f218b02",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/decoder/StringBlock.java",
      "status": "modified",
      "additions": 34,
      "deletions": 34,
      "changes": 68,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/bb9519a2d072eb13baeeccecf49cc2b99cd2ba2b/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FStringBlock.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/bb9519a2d072eb13baeeccecf49cc2b99cd2ba2b/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FStringBlock.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FStringBlock.java?ref=bb9519a2d072eb13baeeccecf49cc2b99cd2ba2b",
      "patch": "@@ -55,11 +55,11 @@ public static StringBlock readWithoutChunk(ExtCountingDataInput reader, int star\n         }\n \n         StringBlock block = new StringBlock();\n-        block.m_isUTF8 = (flags & UTF8_FLAG) != 0;\n-        block.m_stringOffsets = reader.readSafeIntArray(stringCount, startPosition + stringsOffset);\n+        block.mIsUtf8 = (flags & UTF8_FLAG) != 0;\n+        block.mStringOffsets = reader.readSafeIntArray(stringCount, startPosition + stringsOffset);\n \n         if (styleCount != 0) {\n-            block.m_styleOffsets = reader.readSafeIntArray(styleCount, startPosition + stylesOffset);\n+            block.mStyleOffsets = reader.readSafeIntArray(styleCount, startPosition + stylesOffset);\n         }\n \n         // #3236 - Some applications give a style offset, but have 0 styles. Make this check more robust.\n@@ -72,12 +72,12 @@ public static StringBlock readWithoutChunk(ExtCountingDataInput reader, int star\n             size = stylesOffset - stringsOffset;\n         }\n \n-        block.m_strings = new byte[size];\n-        reader.readFully(block.m_strings);\n+        block.mStrings = new byte[size];\n+        reader.readFully(block.mStrings);\n \n         if (hasStyles) {\n             size = chunkSize - stylesOffset;\n-            block.m_styles = reader.readIntArray(size / 4);\n+            block.mStyles = reader.readIntArray(size / 4);\n         }\n \n         // In case we aren't 4 byte aligned we need to skip the remaining bytes.\n@@ -97,18 +97,18 @@ public static StringBlock readWithoutChunk(ExtCountingDataInput reader, int star\n      * @return String\n      */\n     public String getString(int index) {\n-        if (index < 0 || m_stringOffsets == null || index >= m_stringOffsets.length) {\n+        if (index < 0 || mStringOffsets == null || index >= mStringOffsets.length) {\n             return null;\n         }\n-        int offset = m_stringOffsets[index];\n+        int offset = mStringOffsets[index];\n         int length;\n \n         int[] val;\n-        if (m_isUTF8) {\n-            val = getUtf8(m_strings, offset);\n+        if (mIsUtf8) {\n+            val = getUtf8(mStrings, offset);\n             offset = val[0];\n         } else {\n-            val = getUtf16(m_strings, offset);\n+            val = getUtf16(mStrings, offset);\n             offset += val[0];\n         }\n         length = val[1];\n@@ -155,16 +155,16 @@ public int find(String string) {\n         if (string == null) {\n             return -1;\n         }\n-        for (int i = 0; i != m_stringOffsets.length; ++i) {\n-            int offset = m_stringOffsets[i];\n-            int length = getShort(m_strings, offset);\n+        for (int i = 0; i != mStringOffsets.length; ++i) {\n+            int offset = mStringOffsets[i];\n+            int length = getShort(mStrings, offset);\n             if (length != string.length()) {\n                 continue;\n             }\n             int j = 0;\n             for (; j != length; ++j) {\n                 offset += 2;\n-                if (string.charAt(j) != getShort(m_strings, offset)) {\n+                if (string.charAt(j) != getShort(mStrings, offset)) {\n                     break;\n                 }\n             }\n@@ -180,8 +180,8 @@ private StringBlock() {\n \n     @VisibleForTesting\n     StringBlock(byte[] strings, boolean isUTF8) {\n-        m_strings = strings;\n-        m_isUTF8 = isUTF8;\n+        mStrings = strings;\n+        mIsUtf8 = isUTF8;\n     }\n \n     /**\n@@ -190,15 +190,15 @@ private StringBlock() {\n      * start index in string * third int is tag end index in string\n      */\n     private int[] getStyle(int index) {\n-        if (m_styleOffsets == null || m_styles == null|| index >= m_styleOffsets.length) {\n+        if (mStyleOffsets == null || mStyles == null|| index >= mStyleOffsets.length) {\n             return null;\n         }\n-        int offset = m_styleOffsets[index] / 4;\n+        int offset = mStyleOffsets[index] / 4;\n         int count = 0;\n         int[] style;\n \n-        for (int i = offset; i < m_styles.length; ++i) {\n-            if (m_styles[i] == -1) {\n+        for (int i = offset; i < mStyles.length; ++i) {\n+            if (mStyles[i] == -1) {\n                 break;\n             }\n             count += 1;\n@@ -209,34 +209,34 @@ private int[] getStyle(int index) {\n         }\n         style = new int[count];\n \n-        for (int i = offset, j = 0; i < m_styles.length;) {\n-            if (m_styles[i] == -1) {\n+        for (int i = offset, j = 0; i < mStyles.length;) {\n+            if (mStyles[i] == -1) {\n                 break;\n             }\n-            style[j++] = m_styles[i++];\n+            style[j++] = mStyles[i++];\n         }\n         return style;\n     }\n \n     @VisibleForTesting\n     String decodeString(int offset, int length) {\n         try {\n-            final ByteBuffer wrappedBuffer = ByteBuffer.wrap(m_strings, offset, length);\n-            return (m_isUTF8 ? UTF8_DECODER : UTF16LE_DECODER).decode(wrappedBuffer).toString();\n+            final ByteBuffer wrappedBuffer = ByteBuffer.wrap(mStrings, offset, length);\n+            return (mIsUtf8 ? UTF8_DECODER : UTF16LE_DECODER).decode(wrappedBuffer).toString();\n         } catch (CharacterCodingException ex) {\n-            if (!m_isUTF8) {\n+            if (!mIsUtf8) {\n                 LOGGER.warning(\"Failed to decode a string at offset \" + offset + \" of length \" + length);\n                 return null;\n             }\n         } catch (IndexOutOfBoundsException ex) {\n-            if (!m_isUTF8) {\n+            if (!mIsUtf8) {\n                 LOGGER.warning(\"String extends outside of pool at  \" + offset + \" of length \" + length);\n                 return null;\n             }\n         }\n \n         try {\n-            final ByteBuffer wrappedBufferRetry = ByteBuffer.wrap(m_strings, offset, length);\n+            final ByteBuffer wrappedBufferRetry = ByteBuffer.wrap(mStrings, offset, length);\n             // in some places, Android uses 3-byte UTF-8 sequences instead of 4-bytes.\n             // If decoding failed, we try to use CESU-8 decoder, which is closer to what Android actually uses.\n             return CESU8_DECODER.decode(wrappedBufferRetry).toString();\n@@ -285,11 +285,11 @@ private static int[] getUtf16(byte[] array, int offset) {\n         return new int[] {2, val * 2};\n     }\n \n-    private int[] m_stringOffsets;\n-    private byte[] m_strings;\n-    private int[] m_styleOffsets;\n-    private int[] m_styles;\n-    private boolean m_isUTF8;\n+    private int[] mStringOffsets;\n+    private byte[] mStrings;\n+    private int[] mStyleOffsets;\n+    private int[] mStyles;\n+    private boolean mIsUtf8;\n \n     private final CharsetDecoder UTF16LE_DECODER = StandardCharsets.UTF_16LE.newDecoder();\n     private final CharsetDecoder UTF8_DECODER = StandardCharsets.UTF_8.newDecoder();",
      "parent_sha": "2549fe983bc4d4df8a20fdaf46e86100bd9b9f2d"
    }
  },
  {
    "oid": "f9323943db1776aad4d06862011ea2aea2416bfc",
    "message": "Handle Dexguard key names\n\n - Temporarily replace with dummy value names till research is completed\n - allows decode",
    "date": "2015-12-26T11:59:43Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/f9323943db1776aad4d06862011ea2aea2416bfc",
    "details": {
      "sha": "7e94af7920d3b182cbe928c803873e6d4a96225e",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/data/ResResSpec.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/f9323943db1776aad4d06862011ea2aea2416bfc/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2FResResSpec.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/f9323943db1776aad4d06862011ea2aea2416bfc/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2FResResSpec.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2FResResSpec.java?ref=f9323943db1776aad4d06862011ea2aea2416bfc",
      "patch": "@@ -33,7 +33,7 @@ public class ResResSpec {\n \n     public ResResSpec(ResID id, String name, ResPackage pkg, ResTypeSpec type) {\n         this.mId = id;\n-        this.mName = name;\n+        this.mName = (name.isEmpty() ? (\"APKTOOL_DUMMYVAL_\" + id.toString()) : name);\n         this.mPackage = pkg;\n         this.mType = type;\n     }",
      "parent_sha": "a8a9c40a7b2d2a70deae729d12380bfd3444b887"
    }
  },
  {
    "oid": "a27e1adcde9a1ace604cff90d03a71f6b963e18d",
    "message": "Loading Android resources from a apktool.jar file, rather than from SDK.",
    "date": "2010-03-12T15:54:45Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/a27e1adcde9a1ace604cff90d03a71f6b963e18d",
    "details": {
      "sha": "747c1502d283fc7e18f1d2b93479b12107671ab6",
      "filename": "src/brut/androlib/res/AndrolibResources.java",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/a27e1adcde9a1ace604cff90d03a71f6b963e18d/src%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/a27e1adcde9a1ace604cff90d03a71f6b963e18d/src%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/src%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java?ref=a27e1adcde9a1ace604cff90d03a71f6b963e18d",
      "patch": "@@ -56,7 +56,7 @@ public AndrolibResources(File androidJar) {\n \n     public ResTable getResTable(File apkFile) throws AndrolibException {\n         ResTable resTable = new ResTable();\n-        loadApk(resTable, new File(getClass().getProtectionDomain().getCodeSource().getLocation().getPath()), false);\n+        loadApk(resTable, getAndroidResourcesFile(), false);\n         loadApk(resTable, apkFile, true);\n         return resTable;\n     }\n@@ -112,7 +112,7 @@ public void aaptPackage(File apkFile, File manifest, File resDir,\n         cmd[i++] = \"-F\";\n         cmd[i++] = apkFile.getAbsolutePath();\n         cmd[i++] = \"-I\";\n-        cmd[i++] = mAndroidJar.getAbsolutePath();\n+        cmd[i++] = getAndroidResourcesFile().getAbsolutePath();\n         if (manifest != null) {\n             cmd[i++] = \"-M\";\n             cmd[i++] = manifest.getAbsolutePath();\n@@ -203,6 +203,11 @@ private void loadApk(ResTable resTable, File apkFile, boolean main)\n         }\n     }\n \n+    private File getAndroidResourcesFile() {\n+        return new File(getClass().getProtectionDomain().getCodeSource()\n+            .getLocation().getPath());\n+    }\n+\n     public static String escapeForResXml(String value) {\n         value = value.replace(\"'\", \"\\\\'\");\n         value = value.replace(\"\\n\", \"\\\\n\\n\");",
      "parent_sha": "48e1afd6b14d6da07b8f0b4544e78533ac454866"
    }
  },
  {
    "oid": "0c428dd7c7eeb4e705e2f6470e8e02102da727e9",
    "message": "ResPluralsValue: now stores array of ResScalarValue instead of ResStringValue.\n\nPlurals contain strings, but they could use e.g. references. It'll be safer to let them store any scalar value.",
    "date": "2011-05-17T08:01:21Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/0c428dd7c7eeb4e705e2f6470e8e02102da727e9",
    "details": {
      "sha": "1909b9a9f1c2ae29c7a5bec6b635ff972df4fec6",
      "filename": "apktool-lib/src/main/java/brut/androlib/res/data/value/ResPluralsValue.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/0c428dd7c7eeb4e705e2f6470e8e02102da727e9/apktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResPluralsValue.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/0c428dd7c7eeb4e705e2f6470e8e02102da727e9/apktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResPluralsValue.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/apktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2Fvalue%2FResPluralsValue.java?ref=0c428dd7c7eeb4e705e2f6470e8e02102da727e9",
      "patch": "@@ -31,10 +31,10 @@ public class ResPluralsValue extends ResBagValue implements ResValuesXmlSerializ\n             Duo<Integer, ResScalarValue>[] items) {\n         super(parent);\n \n-        mItems = new ResStringValue[6];\n+        mItems = new ResScalarValue[6];\n         for (int i = 0; i < items.length; i++) {\n             mItems[items[i].m1 - BAG_KEY_PLURALS_START] =\n-                    (ResStringValue) items[i].m2;\n+                    (ResScalarValue) items[i].m2;\n         }\n     }\n \n@@ -44,7 +44,7 @@ public void serializeToResValuesXml(XmlSerializer serializer, ResResource res)\n         serializer.startTag(null, \"plurals\");\n         serializer.attribute(null, \"name\", res.getResSpec().getName());\n         for (int i = 0; i < mItems.length; i++) {\n-            ResStringValue item = mItems[i];\n+            ResScalarValue item = mItems[i];\n             if (item == null) {\n                 continue;\n             }\n@@ -57,7 +57,7 @@ public void serializeToResValuesXml(XmlSerializer serializer, ResResource res)\n     }\n \n \n-    private final ResStringValue[] mItems;\n+    private final ResScalarValue[] mItems;\n \n \n     public static final int BAG_KEY_PLURALS_START = 0x01000004;",
      "parent_sha": "b539c3c1a1b616f725bd7c7f7a623dfe96cbfab9"
    }
  },
  {
    "oid": "21e9dd514c25f334f88a5012074a828184f6479b",
    "message": "cs cleanup",
    "date": "2017-09-19T18:42:14Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/21e9dd514c25f334f88a5012074a828184f6479b",
    "details": {
      "sha": "b8d07ce601f19249733cddafa376746f50c24e26",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/AndrolibResources.java",
      "status": "modified",
      "additions": 4,
      "deletions": 7,
      "changes": 11,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/21e9dd514c25f334f88a5012074a828184f6479b/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/21e9dd514c25f334f88a5012074a828184f6479b/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2FAndrolibResources.java?ref=21e9dd514c25f334f88a5012074a828184f6479b",
      "patch": "@@ -307,17 +307,11 @@ public void setSharedLibrary(boolean flag) {\n         mSharedLibrary = flag;\n     }\n \n-    // Ensure that targetSdkVersion is between minSdkVersion/maxSdkVersion if\n-    // they are specified.\n-    private String checkTargetSdkVersionBounds()\n-    {\n+    private String checkTargetSdkVersionBounds() {\n         int target = Integer.parseInt(mTargetSdkVersion);\n         int min = (mMinSdkVersion != null) ? Integer.parseInt(mMinSdkVersion) : 0;\n         int max = (mMaxSdkVersion != null) ? Integer.parseInt(mMaxSdkVersion) : target;\n \n-        // Your APK seems broken otherwise.\n-        assert (min <= max);\n-\n         target = Math.min(max, target);\n         target = Math.max(min, target);\n         return Integer.toString(target);\n@@ -384,6 +378,9 @@ public void aaptPackage(File apkFile, File manifest, File resDir, File rawDir, F\n         }\n         if (mTargetSdkVersion != null) {\n             cmd.add(\"--target-sdk-version\");\n+\n+            // Ensure that targetSdkVersion is between minSdkVersion/maxSdkVersion if\n+            // they are specified.\n             cmd.add(checkTargetSdkVersionBounds());\n         }\n         if (mMaxSdkVersion != null) {",
      "parent_sha": "4ba1a035aeb8e56de270dd3f3c490a503a768212"
    }
  },
  {
    "oid": "2c1226fab88f079df4cbdbdbf68f346afcafdb73",
    "message": "[skip] use append instead of concat",
    "date": "2015-05-22T13:47:51Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/2c1226fab88f079df4cbdbdbf68f346afcafdb73",
    "details": {
      "sha": "84746e952117b5a059c5e8f3bf9a1f14b1ec4893",
      "filename": "brut.apktool/apktool-lib/src/main/java/brut/androlib/res/data/ResConfigFlags.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/2c1226fab88f079df4cbdbdbf68f346afcafdb73/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2FResConfigFlags.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/2c1226fab88f079df4cbdbdbf68f346afcafdb73/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2FResConfigFlags.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Fmain%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdata%2FResConfigFlags.java?ref=2c1226fab88f079df4cbdbdbf68f346afcafdb73",
      "patch": "@@ -363,7 +363,7 @@ private String generateQualifiers() {\n             ret.append(\"-v\").append(sdkVersion);\n         }\n         if (isInvalid) {\n-            ret.append(\"-ERR\" + sErrCounter++);\n+            ret.append(\"-ERR\").append(sErrCounter++);\n         }\n \n         return ret.toString();",
      "parent_sha": "8254764c6c10b42f2db7d408ae32de7d7bdf082a"
    }
  },
  {
    "oid": "491d18058a763a1fed1f6edfd4c27b5cc92f5827",
    "message": "test: fix incorrect 3-byte encoding.",
    "date": "2021-04-03T10:47:13Z",
    "url": "https://github.com/iBotPeaches/Apktool/commit/491d18058a763a1fed1f6edfd4c27b5cc92f5827",
    "details": {
      "sha": "23e96ca8e04f30fa6d2a38105d01edb1f444df3c",
      "filename": "brut.apktool/apktool-lib/src/test/java/brut/androlib/res/decoder/StringBlockWithSurrogatePairInUtf8Test.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/iBotPeaches/Apktool/blob/491d18058a763a1fed1f6edfd4c27b5cc92f5827/brut.apktool%2Fapktool-lib%2Fsrc%2Ftest%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FStringBlockWithSurrogatePairInUtf8Test.java",
      "raw_url": "https://github.com/iBotPeaches/Apktool/raw/491d18058a763a1fed1f6edfd4c27b5cc92f5827/brut.apktool%2Fapktool-lib%2Fsrc%2Ftest%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FStringBlockWithSurrogatePairInUtf8Test.java",
      "contents_url": "https://api.github.com/repos/iBotPeaches/Apktool/contents/brut.apktool%2Fapktool-lib%2Fsrc%2Ftest%2Fjava%2Fbrut%2Fandrolib%2Fres%2Fdecoder%2FStringBlockWithSurrogatePairInUtf8Test.java?ref=491d18058a763a1fed1f6edfd4c27b5cc92f5827",
      "patch": "@@ -57,12 +57,13 @@ public void decodeSurrogatePair_when_givesAsThreeOctetsFromInvalidRangeOfUtf8()\n         final byte[] bytesWithCharactersBeforeSurrogatePair = {'G', 'o', 'o', 'd', ' ', 'm', 'o', 'r', 'n', 'i', 'n', 'g', '!', ' ',\n                 (byte) 0xED, (byte) 0xA0, (byte) 0xBD, (byte) 0xED, (byte) 0xB1, (byte) 0x8B,\n                 ' ', 'S', 'u', 'n', ' ',\n-                (byte) 0xED, (byte) 0xA0, (byte) 0xBD, (byte) 0xED, (byte) 0xBC, (byte) 0x9E\n+                (byte) 0xED, (byte) 0xA0, (byte) 0xBC, (byte) 0xED, (byte) 0xBC, (byte) 0x9E\n         };\n         final String actual2 = new StringBlock(bytesWithCharactersBeforeSurrogatePair, true).decodeString(0, 31);\n \n-        // D83D -> ED 0xA0 0xBD\n+        // D83D -> 0xED 0xA0 0xBD\n         // DC4B -> 0xED 0xB1 0x8B\n+        // D83C -> 0xED 0xA0 0xBC\n         // DF1E -> 0xED 0xBC 0x9E\n         assertEquals(\"Incorrect decoding when there are valid characters before the surrogate pair\",\n                 \"Good morning! \\uD83D\\uDC4B Sun \\uD83C\\uDF1E\", actual2);",
      "parent_sha": "f10060fe8f6566c2bf11b9d4f9244707924a36f4"
    }
  }
]