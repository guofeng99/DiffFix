[
  {
    "oid": "fa51a39b58f46d51782bee5171178cc01cb1f87a",
    "message": "Fix SerialMonitor and SerialPlotter lifecycles\n\nFixes #7683\n\nWhen the selected serial port is busy both monitors now avoid displaying a useless window, cleaning the status area once the open succeeds.",
    "date": "2018-06-12T08:41:45Z",
    "url": "https://github.com/arduino/Arduino/commit/fa51a39b58f46d51782bee5171178cc01cb1f87a",
    "details": {
      "sha": "2cc41efdd59087c83804ed9781985125e4bb74e0",
      "filename": "app/src/processing/app/Editor.java",
      "status": "modified",
      "additions": 10,
      "deletions": 5,
      "changes": 15,
      "blob_url": "https://github.com/arduino/Arduino/blob/fa51a39b58f46d51782bee5171178cc01cb1f87a/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/fa51a39b58f46d51782bee5171178cc01cb1f87a/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java?ref=fa51a39b58f46d51782bee5171178cc01cb1f87a",
      "patch": "@@ -2409,11 +2409,12 @@ public void handleSerial() {\n       }\n \n       try {\n-        serialMonitor.setVisible(true);\n         if (!avoidMultipleOperations) {\n           serialMonitor.open();\n         }\n+        serialMonitor.setVisible(true);\n         success = true;\n+        statusEmpty();\n       } catch (ConnectException e) {\n         statusError(tr(\"Unable to connect: is the sketch using the bridge?\"));\n       } catch (JSchException e) {\n@@ -2423,6 +2424,7 @@ public void handleSerial() {\n         if (e.getCause() != null && e.getCause() instanceof SerialPortException) {\n           errorMessage += \" (\" + ((SerialPortException) e.getCause()).getExceptionType() + \")\";\n         }\n+        serialMonitor = null;\n         statusError(errorMessage);\n         try {\n           serialMonitor.close();\n@@ -2432,12 +2434,12 @@ public void handleSerial() {\n       } catch (Exception e) {\n         statusError(e);\n       } finally {\n-        if (serialMonitor.requiresAuthorization() && !success) {\n+        if (serialMonitor != null && serialMonitor.requiresAuthorization() && !success) {\n           PreferencesData.remove(serialMonitor.getAuthorizationKey());\n         }\n       }\n \n-    } while (serialMonitor.requiresAuthorization() && !success);\n+    } while (serialMonitor != null && serialMonitor.requiresAuthorization() && !success);\n \n   }\n \n@@ -2457,6 +2459,7 @@ public void handlePlotter() {\n       if (serialPlotter.isClosed()) {\n         // If it's closed, clear the refrence to the existing\n         // plotter and create a new one\n+        serialPlotter.dispose();\n         serialPlotter = null;\n       }\n       else {\n@@ -2510,6 +2513,7 @@ public void handlePlotter() {\n         serialPlotter.open();\n         serialPlotter.setVisible(true);\n         success = true;\n+        statusEmpty();\n       } catch (ConnectException e) {\n         statusError(tr(\"Unable to connect: is the sketch using the bridge?\"));\n       } catch (JSchException e) {\n@@ -2520,15 +2524,16 @@ public void handlePlotter() {\n           errorMessage += \" (\" + ((SerialPortException) e.getCause()).getExceptionType() + \")\";\n         }\n         statusError(errorMessage);\n+        serialPlotter = null;\n       } catch (Exception e) {\n         statusError(e);\n       } finally {\n-        if (serialPlotter.requiresAuthorization() && !success) {\n+        if (serialPlotter != null && serialPlotter.requiresAuthorization() && !success) {\n           PreferencesData.remove(serialPlotter.getAuthorizationKey());\n         }\n       }\n \n-    } while (serialPlotter.requiresAuthorization() && !success);\n+    } while (serialPlotter != null && serialPlotter.requiresAuthorization() && !success);\n \n   }\n ",
      "parent_sha": "0a84ac21387abc92f63a56ec920f4b7e4b3d0520"
    }
  },
  {
    "oid": "d022111fde0e71b2309a44fd246e83448ecad84b",
    "message": "CLI: library manager install latest if version is not specified",
    "date": "2015-04-08T13:44:11Z",
    "url": "https://github.com/arduino/Arduino/commit/d022111fde0e71b2309a44fd246e83448ecad84b",
    "details": {
      "sha": "1fcb9153392d509a1bb4b679fa33c6350674cb96",
      "filename": "app/src/processing/app/Base.java",
      "status": "modified",
      "additions": 10,
      "deletions": 1,
      "changes": 11,
      "blob_url": "https://github.com/arduino/Arduino/blob/d022111fde0e71b2309a44fd246e83448ecad84b/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/d022111fde0e71b2309a44fd246e83448ecad84b/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java?ref=d022111fde0e71b2309a44fd246e83448ecad84b",
      "patch": "@@ -370,7 +370,16 @@ protected void onProgress(Progress progress) {\n \n       String[] libraryToInstallParts = parser.getLibraryToInstall().split(\":\");\n \n-      ContributedLibrary selected = indexer.getIndex().find(libraryToInstallParts[0], VersionHelper.valueOf(libraryToInstallParts[1]).toString());\n+      ContributedLibrary selected=null;\n+      if (libraryToInstallParts.length == 2) {\n+        selected = indexer.getIndex().find(libraryToInstallParts[0], VersionHelper.valueOf(libraryToInstallParts[1]).toString());\n+      } else if (libraryToInstallParts.length == 1) {\n+        List<ContributedLibrary> librariesByName = indexer.getIndex().find(libraryToInstallParts[0]);\n+        Collections.sort(librariesByName, new DownloadableContributionVersionComparator());\n+        if (!librariesByName.isEmpty()) {\n+          selected = librariesByName.get(librariesByName.size() - 1);\n+        }\n+      }\n       if (selected == null) {\n         System.out.println(_(\"Selected library is not available\"));\n         System.exit(1);",
      "parent_sha": "ba3ecff13c629b2b1a7116ca55c9497e57de9a83"
    }
  },
  {
    "oid": "dde5668b270d7c0b56d0d065c3d486b2c6898119",
    "message": "Increase the redirect to follow to 20\nAdd the possibility to configure them `http.max_redirect_number`",
    "date": "2019-07-11T12:36:45Z",
    "url": "https://github.com/arduino/Arduino/commit/dde5668b270d7c0b56d0d065c3d486b2c6898119",
    "details": {
      "sha": "25577e0dcd2766cd1f42261484c24e9b8f92cb71",
      "filename": "arduino-core/src/cc/arduino/utils/network/HttpConnectionManager.java",
      "status": "modified",
      "additions": 14,
      "deletions": 1,
      "changes": 15,
      "blob_url": "https://github.com/arduino/Arduino/blob/dde5668b270d7c0b56d0d065c3d486b2c6898119/arduino-core%2Fsrc%2Fcc%2Farduino%2Futils%2Fnetwork%2FHttpConnectionManager.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/dde5668b270d7c0b56d0d065c3d486b2c6898119/arduino-core%2Fsrc%2Fcc%2Farduino%2Futils%2Fnetwork%2FHttpConnectionManager.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fcc%2Farduino%2Futils%2Fnetwork%2FHttpConnectionManager.java?ref=dde5668b270d7c0b56d0d065c3d486b2c6898119",
      "patch": "@@ -50,9 +50,11 @@ public class HttpConnectionManager {\n   private static Logger log = LogManager.getLogger(HttpConnectionManager.class);\n   private static final String userAgent;\n   private static final int connectTimeout;\n+  private static final int maxRedirectNumber;\n   private final URL requestURL;\n   private final String id;\n \n+\n   static {\n     final String defaultUserAgent = String.format(\n       \"ArduinoIDE/%s (%s; %s; %s; %s) Java/%s (%s)\",\n@@ -75,6 +77,17 @@ public class HttpConnectionManager {\n         \"Cannot parse the http.connection_timeout configuration switch to default {} milliseconds\", connectTimeoutFromConfig, e.getCause());\n     }\n     connectTimeout = connectTimeoutFromConfig;\n+    // Set by default 20 max redirect to follow\n+    int maxRedirectNumberConfig = 20;\n+    try {\n+      maxRedirectNumberConfig =\n+        Integer.parseInt(\n+          PreferencesData.get(\"http.max_redirect_number\", \"20\"));\n+    } catch (NumberFormatException e) {\n+      log.warn(\n+        \"Cannot parse the http.max_redirect_number configuration switch to default {}\", maxRedirectNumberConfig, e.getCause());\n+    }\n+    maxRedirectNumber = maxRedirectNumberConfig;\n   }\n \n   public HttpConnectionManager(URL requestURL) {\n@@ -102,7 +115,7 @@ public HttpURLConnection makeConnection()\n \n   private HttpURLConnection makeConnection(URL requestURL, int movedTimes,\n                                            Consumer<HttpURLConnection> beforeConnection) throws IOException, URISyntaxException, ScriptException, NoSuchMethodException {\n-    if (movedTimes > 3) {\n+    if (movedTimes > maxRedirectNumber) {\n       log.warn(\"Too many redirect \" + requestURL);\n       throw new IOException(\"Too many redirect \" + requestURL);\n     }",
      "parent_sha": "58fc5a5011bc891a3f3e48b6a191077957b2003d"
    }
  },
  {
    "oid": "82401c84bb89948e7267a0533b267b7f53c974a4",
    "message": "Fix indent and typos on FindReplace.java",
    "date": "2014-07-25T10:10:42Z",
    "url": "https://github.com/arduino/Arduino/commit/82401c84bb89948e7267a0533b267b7f53c974a4",
    "details": {
      "sha": "66bbb5a229a4d6b1f8441e99e1b0bd4252d3ad98",
      "filename": "app/src/processing/app/FindReplace.java",
      "status": "modified",
      "additions": 65,
      "deletions": 75,
      "changes": 140,
      "blob_url": "https://github.com/arduino/Arduino/blob/82401c84bb89948e7267a0533b267b7f53c974a4/app%2Fsrc%2Fprocessing%2Fapp%2FFindReplace.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/82401c84bb89948e7267a0533b267b7f53c974a4/app%2Fsrc%2Fprocessing%2Fapp%2FFindReplace.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FFindReplace.java?ref=82401c84bb89948e7267a0533b267b7f53c974a4",
      "patch": "@@ -44,6 +44,7 @@\n  * <A HREF=\"http://dev.processing.org/bugs/show_bug.cgi?id=244\"> Bug 244</A>\n  * should anyone have clues about how to fix.\n  */\n+@SuppressWarnings(\"serial\")\n public class FindReplace extends JFrame implements ActionListener {\n \n   static final int EDGE = Base.isMacOS() ? 20 : 13;\n@@ -76,39 +77,33 @@ public FindReplace(Editor editor) {\n     super(\"Find\");\n     setResizable(false);\n     this.editor = editor;\n-\n     \n     FlowLayout searchLayout = new FlowLayout(FlowLayout.RIGHT,5,0);\n-    Container pain = getContentPane();\n-    pain.setLayout(searchLayout);\n+    Container pane = getContentPane();\n+    pane.setLayout(searchLayout);\n \n     JLabel findLabel = new JLabel(_(\"Find:\"));\n     JLabel replaceLabel = new JLabel(_(\"Replace with:\"));\n     Dimension labelDimension = replaceLabel.getPreferredSize();\n     \n     JPanel find = new JPanel();\n-\n     find.add(findLabel);\n-    \n     find.add(findField = new JTextField(20));\n-    \n-    pain.add(find);\n+    pane.add(find);\n     \n     JPanel replace = new JPanel();\n-    \n     replace.add(replaceLabel);\n-\n     replace.add(replaceField = new JTextField(20));\n-    \n-    pain.add(replace);\n+    pane.add(replace);\n     \n     int fieldHeight = findField.getPreferredSize().height;\n \n     JPanel checkbox = new JPanel();\n     \n     // Fill the findString with selected text if no previous value\n-\tif(editor.getSelectedText()!=null && editor.getSelectedText().length()>0)\n-\t\tfindString = editor.getSelectedText();\n+    if (editor.getSelectedText() != null &&\n+        editor.getSelectedText().length() > 0)\n+      findString = editor.getSelectedText();\n     \n     if (findString != null) findField.setText(findString);\n     if (replaceString != null) replaceField.setText(replaceString);\n@@ -142,11 +137,10 @@ public void actionPerformed(ActionEvent e) {\n     searchAllFilesBox.setSelected(searchAllFiles);\n     checkbox.add(searchAllFilesBox);\n \n-    pain.add(checkbox);\n+    pane.add(checkbox);\n     \n     JPanel buttons = new JPanel();\n-    \n-      buttons.setLayout(new FlowLayout(FlowLayout.CENTER,BUTTONGAP,0));\n+    buttons.setLayout(new FlowLayout(FlowLayout.CENTER, BUTTONGAP, 0));\n \n     // ordering is different on mac versus pc\n     if (Base.isMacOS()) {\n@@ -163,7 +157,7 @@ public void actionPerformed(ActionEvent e) {\n       buttons.add(replaceButton = new JButton(_(\"Replace\")));\n       buttons.add(replaceAllButton = new JButton(_(\"Replace All\")));\n     }\n-    pain.add(buttons);\n+    pane.add(buttons);\n \n     // to fix ugliness.. normally macosx java 1.3 puts an\n     // ugly white border around this object, so turn it off.\n@@ -369,45 +363,40 @@ private boolean find(boolean wrap,boolean backwards,boolean searchTabs,int origi\n     }\n \n     if (nextIndex == -1) {\n-      //Nothing found on this tab: Search other tabs if required\n-      if(searchTabs)\n-      {\n-      \t//editor.\n-      \tSketch sketch = editor.getSketch();\n-      \tif(sketch.getCodeCount()>1)\n-      \t{\n-      \t\tint realCurrentTab = sketch.getCodeIndex(sketch.getCurrentCode());\n-      \t\t\n-      \t\tif(originTab!=realCurrentTab)\n-      \t\t{\n-\t      \t\tif(originTab <0)\n-\t      \t\t\toriginTab = realCurrentTab;\n-\n-\t\t\t\tif(!wrap)\n-\t\t\t\t\tif((!backwards && realCurrentTab+1 >= sketch.getCodeCount()) || (backwards && realCurrentTab-1 < 0))\n-\t\t\t\t\t\treturn false; // Can't continue without wrap\n-\t\t\t\t\n-\t\t\t\tif(backwards)\n-\t\t\t\t{\n-\t      \t\t\tsketch.handlePrevCode();\n-\t      \t\t\tthis.setVisible(true);\n-\t      \t\t\tint l = editor.getText().length()-1;\n-\t      \t\t\teditor.setSelection(l,l);\n-\t\t\t\t}\n-\t      \t\telse\n-\t      \t\t{\n-\t      \t\t\tsketch.handleNextCode();\n-\t      \t\t\tthis.setVisible(true);\n-\t      \t\t\teditor.setSelection(0,0);\n-\t      \t\t}\n-\t      \t\t\t\t\n-\t      \t\treturn find(wrap,backwards,searchTabs,originTab);\n-      \t\t}\n-      \t}\n+      // Nothing found on this tab: Search other tabs if required\n+      if (searchTabs) {\n+        // editor.\n+        Sketch sketch = editor.getSketch();\n+        if (sketch.getCodeCount() > 1) {\n+          int realCurrentTab = sketch.getCodeIndex(sketch.getCurrentCode());\n+\n+          if (originTab != realCurrentTab) {\n+            if (originTab < 0)\n+              originTab = realCurrentTab;\n+\n+            if (!wrap)\n+              if ((!backwards && realCurrentTab + 1 >= sketch.getCodeCount()) ||\n+                  (backwards && realCurrentTab - 1 < 0))\n+                return false; // Can't continue without wrap\n+\n+            if (backwards) {\n+              sketch.handlePrevCode();\n+              this.setVisible(true);\n+              int l = editor.getText().length() - 1;\n+              editor.setSelection(l, l);\n+            } else {\n+              sketch.handleNextCode();\n+              this.setVisible(true);\n+              editor.setSelection(0, 0);\n+            }\n+\n+            return find(wrap, backwards, searchTabs, originTab);\n+          }\n+        }\n       }\n       \n-      if(wrapNeeded)\n-      \t\tnextIndex = backwards? text.lastIndexOf(search):text.indexOf(search, 0);\n+      if (wrapNeeded)\n+        nextIndex = backwards ? text.lastIndexOf(search) : text.indexOf(search, 0);\n     }\n    \t\n    \tif (nextIndex != -1) {\n@@ -424,24 +413,25 @@ private boolean find(boolean wrap,boolean backwards,boolean searchTabs,int origi\n    * replacement text field.\n    */\n   public void replace() {\n-\tif(findField.getText().length()==0)\n-\t\treturn;\n-   \n-\tint newpos = editor.getSelectionStart() - findField.getText().length();\n-\tif (newpos < 0) newpos = 0; \n-\teditor.setSelection(newpos, newpos);\n+    if (findField.getText().length() == 0)\n+      return;\n+\n+    int newpos = editor.getSelectionStart() - findField.getText().length();\n+    if (newpos < 0)\n+      newpos = 0;\n+    editor.setSelection(newpos, newpos);\n \n     boolean foundAtLeastOne = false;\n \n-      if ( find(false,false,searchAllFiles,-1)) {\n-        foundAtLeastOne = true;\n-        editor.setSelectedText(replaceField.getText());\n-        editor.getSketch().setModified(true);  // TODO is this necessary?\n-     }\n-      \n-    if ( !foundAtLeastOne ) {\n+    if (find(false, false, searchAllFiles, -1)) {\n+      foundAtLeastOne = true;\n+      editor.setSelectedText(replaceField.getText());\n+      editor.getSketch().setModified(true); // TODO is this necessary?\n+    }\n+\n+    if (!foundAtLeastOne) {\n       Toolkit.getDefaultToolkit().beep();\n-    }\t\n+    }\n \n   }\n \n@@ -459,22 +449,22 @@ public void replaceAndFindNext() {\n    * alternately until nothing more found.\n    */\n   public void replaceAll() {\n-    if(findField.getText().length()==0)\n-    \treturn;\n+    if (findField.getText().length() == 0)\n+      return;\n     // move to the beginning\n     editor.setSelection(0, 0);\n \n     boolean foundAtLeastOne = false;\n-    while ( true ) {\n-      if ( find(false,false,searchAllFiles,-1)) {\n+    while (true) {\n+      if (find(false, false, searchAllFiles, -1)) {\n         foundAtLeastOne = true;\n         editor.setSelectedText(replaceField.getText());\n-        editor.getSketch().setModified(true);  // TODO is this necessary?\n-     } else {\n+        editor.getSketch().setModified(true); // TODO is this necessary?\n+      } else {\n         break;\n       }\n     }\n-    if ( !foundAtLeastOne ) {\n+    if (!foundAtLeastOne) {\n       Toolkit.getDefaultToolkit().beep();\n     }\n   }",
      "parent_sha": "cd75cc24a2774a98dc11d7fc501c55b8bf2a6a1e"
    }
  },
  {
    "oid": "321f589b0fc98c6de226f79aec3e24d96e849888",
    "message": "Reduced \"scroll down\" timer of ConsoleOutputStream back to 100ms",
    "date": "2015-12-02T15:41:15Z",
    "url": "https://github.com/arduino/Arduino/commit/321f589b0fc98c6de226f79aec3e24d96e849888",
    "details": {
      "sha": "452c190b414bb47911ce2e51ffbfbef6afa48220",
      "filename": "app/src/cc/arduino/ConsoleOutputStream.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/arduino/Arduino/blob/321f589b0fc98c6de226f79aec3e24d96e849888/app%2Fsrc%2Fcc%2Farduino%2FConsoleOutputStream.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/321f589b0fc98c6de226f79aec3e24d96e849888/app%2Fsrc%2Fcc%2Farduino%2FConsoleOutputStream.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fcc%2Farduino%2FConsoleOutputStream.java?ref=321f589b0fc98c6de226f79aec3e24d96e849888",
      "patch": "@@ -64,7 +64,7 @@ public ConsoleOutputStream(SimpleAttributeSet attributes, PrintStream printStrea\n     this.printStream = printStream;\n     this.newLinePrinted = false;\n \n-    this.timer = new Timer(250, (e) -> {\n+    this.timer = new Timer(100, (e) -> {\n       if (editorConsole != null && newLinePrinted) {\n         editorConsole.scrollDown();\n         newLinePrinted = false;",
      "parent_sha": "309c8c1fe8ff625dd965ab57f6c405ca77c04cb1"
    }
  },
  {
    "oid": "b96b2508db17ef0c23995ac7a4f563b4cffa7fe2",
    "message": "Fixed warnings",
    "date": "2018-05-09T09:43:40Z",
    "url": "https://github.com/arduino/Arduino/commit/b96b2508db17ef0c23995ac7a4f563b4cffa7fe2",
    "details": {
      "sha": "31cd2718cdfabe3814de6c5b6742f997eeb76c94",
      "filename": "app/src/processing/app/Theme.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/arduino/Arduino/blob/b96b2508db17ef0c23995ac7a4f563b4cffa7fe2/app%2Fsrc%2Fprocessing%2Fapp%2FTheme.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/b96b2508db17ef0c23995ac7a4f563b4cffa7fe2/app%2Fsrc%2Fprocessing%2Fapp%2FTheme.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FTheme.java?ref=b96b2508db17ef0c23995ac7a4f563b4cffa7fe2",
      "patch": "@@ -318,7 +318,7 @@ static ZippedTheme load(String namespace, File file) {\n   /**\n    * Available zipped themes \n    */\n-  static private final Map<String, ZippedTheme> availableThemes = new TreeMap<String, ZippedTheme>();\n+  static private final Map<String, ZippedTheme> availableThemes = new TreeMap<>();\n   \n   /**\n    * Zip file containing user-defined theme elements \n@@ -352,12 +352,12 @@ static private ZippedTheme openZipTheme() {\n   }\n   \n   static private void refreshAvailableThemes() {\n-    Map<String, ZippedTheme> discoveredThemes = new TreeMap<String, ZippedTheme>();\n+    Map<String, ZippedTheme> discoveredThemes = new TreeMap<>();\n     \n     refreshAvailableThemes(discoveredThemes, NAMESPACE_APP, new File(BaseNoGui.getContentFile(\"lib\"), THEME_DIR));\n     refreshAvailableThemes(discoveredThemes, NAMESPACE_USER, new File(BaseNoGui.getSketchbookFolder(), THEME_DIR));\n     \n-    synchronized(availableThemes) {\n+    synchronized (availableThemes) {\n       availableThemes.clear();\n       availableThemes.putAll(discoveredThemes);\n     }\n@@ -378,7 +378,7 @@ static private void refreshAvailableThemes(Map<String, ZippedTheme> discoveredTh\n   \n   public static Collection<ZippedTheme> getAvailablethemes() {\n     refreshAvailableThemes();\n-    return Collections.<ZippedTheme>unmodifiableCollection(availableThemes.values());\n+    return Collections.unmodifiableCollection(availableThemes.values());\n   }\n \n   static public String get(String attribute) {",
      "parent_sha": "01519eba9c0bb18f3725256049d8dfbc1bab375f"
    }
  },
  {
    "oid": "63914efb064c3430749de89d4f69c5c95b1a5dc9",
    "message": "Fixed locale selection",
    "date": "2013-10-02T15:34:38Z",
    "url": "https://github.com/arduino/Arduino/commit/63914efb064c3430749de89d4f69c5c95b1a5dc9",
    "details": {
      "sha": "21021fa85bd6e0e210a3052204e50fc89f818b2f",
      "filename": "app/src/processing/app/I18n.java",
      "status": "modified",
      "additions": 21,
      "deletions": 14,
      "changes": 35,
      "blob_url": "https://github.com/arduino/Arduino/blob/63914efb064c3430749de89d4f69c5c95b1a5dc9/app%2Fsrc%2Fprocessing%2Fapp%2FI18n.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/63914efb064c3430749de89d4f69c5c95b1a5dc9/app%2Fsrc%2Fprocessing%2Fapp%2FI18n.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FI18n.java?ref=63914efb064c3430749de89d4f69c5c95b1a5dc9",
      "patch": "@@ -13,8 +13,10 @@\n \n package processing.app;\n \n-import java.util.*;\n import java.text.MessageFormat;\n+import java.util.Locale;\n+import java.util.MissingResourceException;\n+import java.util.ResourceBundle;\n \n public class I18n {\n   // start using current locale but still allow using the dropdown list later\n@@ -28,16 +30,21 @@ public class I18n {\n   static String PROMPT_OK;\n   static String PROMPT_BROWSE;\n \n-  static protected void init (String language) throws MissingResourceException {\n+  static protected void init(String language) throws MissingResourceException {\n     // there might be a null pointer exception ... most likely will never happen but the jvm gets mad\n     try {\n-      if (language != null && language.trim().length() > 0) {\n-        Locale locale = new Locale(language);\n-        i18n = ResourceBundle.getBundle(\"processing.app.i18n.Resources\", locale);\n-        Locale.setDefault(locale);\n-      } else {\n-        i18n = ResourceBundle.getBundle(\"processing.app.i18n.Resources\", Locale.getDefault());\n+      String[] languageParts = language.split(\"_\");\n+      Locale locale = Locale.getDefault();\n+      // both language and country\n+      if (languageParts.length == 2) {\n+        locale = new Locale(languageParts[0], languageParts[1]);\n+        // just language\n+      } else if (languageParts.length == 1 && !\"\".equals(languageParts[0])) {\n+        locale = new Locale(languageParts[0]);\n       }\n+      // there might be a null pointer exception ... most likely will never happen but the jvm gets mad\n+      Locale.setDefault(locale);\n+      i18n = ResourceBundle.getBundle(\"processing.app.i18n.Resources\", Locale.getDefault());\n       PROMPT_YES = _(\"Yes\");\n       PROMPT_NO = _(\"No\");\n       PROMPT_CANCEL = _(\"Cancel\");\n@@ -54,29 +61,29 @@ public static String _(String s) {\n     } catch (MissingResourceException e) {\n       res = s;\n     }\n-    \n+\n     // The single % is the arguments selector in .PO files.\n     // We must put double %% inside the translations to avoid\n     // getting .PO processing in the way.\n     res = res.replace(\"%%\", \"%\");\n-    \n+\n     return res;\n   }\n \n-  public static String format(String fmt, Object ... args) {\n+  public static String format(String fmt, Object... args) {\n     // Single quote is used to escape curly bracket arguments.\n-    \n+\n     // - Prevents strings fixed at translation time to be fixed again\n     fmt = fmt.replace(\"''\", \"'\");\n     // - Replace ' with the escaped version ''\n     fmt = fmt.replace(\"'\", \"''\");\n \n     return MessageFormat.format(fmt, args);\n   }\n-  \n+\n   /**\n    * Does nothing.\n-   * \n+   * <p/>\n    * This method is an hack to extract words with gettext tool.\n    */\n   protected static void unusedStrings() {",
      "parent_sha": "2f38d1aaa550582d17720c939d67a9467c330a3b"
    }
  },
  {
    "oid": "e71e5a535695e7b523f06b3c493c4cf71b541913",
    "message": "Revert \"null check on SerialPort.readBytes\"\n\nThis reverts commit 991663409ab875aa22bb181d4833a490e5db1b50.",
    "date": "2013-02-27T16:54:40Z",
    "url": "https://github.com/arduino/Arduino/commit/e71e5a535695e7b523f06b3c493c4cf71b541913",
    "details": {
      "sha": "c1caaec4a8b15c73f5d137ac4e25f1c00a82f8e7",
      "filename": "app/src/processing/app/Serial.java",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/arduino/Arduino/blob/e71e5a535695e7b523f06b3c493c4cf71b541913/app%2Fsrc%2Fprocessing%2Fapp%2FSerial.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/e71e5a535695e7b523f06b3c493c4cf71b541913/app%2Fsrc%2Fprocessing%2Fapp%2FSerial.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FSerial.java?ref=e71e5a535695e7b523f06b3c493c4cf71b541913",
      "patch": "@@ -185,11 +185,8 @@ public synchronized void serialEvent(SerialPortEvent serialEvent) {\n       case SerialPortEvent.RXFLAG:\n         try {\n           byte[] bytes = port.readBytes();\n-          if (bytes == null) {\n-            return;\n-          }\n           String bytesAsString = new String(bytes);\n-          if (monitor) {\n+          if(monitor) {\n             System.out.print(bytesAsString);\n           }\n           if (this.consumer != null) {\n@@ -202,6 +199,7 @@ public synchronized void serialEvent(SerialPortEvent serialEvent) {\n   }\n \n \n+\n   /**\n    * This will handle both ints, bytes and chars transparently.\n    */",
      "parent_sha": "37f5315464c13e462e0c49e460aced1909272836"
    }
  },
  {
    "oid": "e19bbdd54809333b13df902da8c0b61ec476666d",
    "message": "changed the version number in the code to 3",
    "date": "2006-01-03T14:33:49Z",
    "url": "https://github.com/arduino/Arduino/commit/e19bbdd54809333b13df902da8c0b61ec476666d",
    "details": {
      "sha": "ce53924f2396df851ffde3d658f6c2d078149d4a",
      "filename": "app/Base.java",
      "status": "modified",
      "additions": 1113,
      "deletions": 1113,
      "changes": 2226,
      "blob_url": "https://github.com/arduino/Arduino/blob/e19bbdd54809333b13df902da8c0b61ec476666d/app%2FBase.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/e19bbdd54809333b13df902da8c0b61ec476666d/app%2FBase.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2FBase.java?ref=e19bbdd54809333b13df902da8c0b61ec476666d",
      "patch": "@@ -1,1113 +1,1113 @@\n-/* -*- mode: jde; c-basic-offset: 2; indent-tabs-mode: nil -*- */\n-\n-/*\n-  Part of the Arduino project - http://arduino.berlios.de\n-\n-  \n-\n-  Based on processing http://www.processing.org\n-  Copyright (c) 2004-05 Ben Fry and Casey Reas\n-  Copyright (c) 2001-04 Massachusetts Institute of Technology\n-\n-  This program is free software; you can redistribute it and/or modify\n-  it under the terms of the GNU General Public License as published by\n-  the Free Software Foundation; either version 2 of the License, or\n-  (at your option) any later version.\n-\n-  This program is distributed in the hope that it will be useful,\n-  but WITHOUT ANY WARRANTY; without even the implied warranty of\n-  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-  GNU General Public License for more details.\n-\n-  You should have received a copy of the GNU General Public License\n-  along with this program; if not, write to the Free Software Foundation,\n-  Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n-*/\n-\n-package processing.app;\n-\n-import java.awt.*;\n-import java.awt.event.*;\n-import java.io.*;\n-import java.lang.reflect.*;\n-import java.net.*;\n-import java.util.*;\n-import java.util.zip.*;\n-\n-import javax.swing.*;\n-import javax.swing.event.*;\n-import javax.swing.text.*;\n-import javax.swing.undo.*;\n-\n-import com.apple.mrj.*;\n-import com.ice.jni.registry.*;\n-\n-\n-\n-/**\n- * The base class for the main Arduino application.\n- * <P>\n- * Primary role of this class is for platform identification and\n- * general interaction with the system (launching URLs, loading\n- * files and images, etc) that comes from that.\n- */\n-public class Base {\n-  static final int VERSION = 1;\n-  static final String VERSION_NAME = \"0003 Alpha\";\n-  \n-  static public int platform;\n-  \n-   // platform IDs for platform\n-\n-  static final int WINDOWS = 1;\n-  static final int MACOS9  = 2;\n-  static final int MACOSX  = 3;\n-  static final int LINUX   = 4;\n-  static final int OTHER   = 0;\n-  \n-  \n-  // moved from PApplet\n-  // in preperation of detaching the IDE from the\n-  // Arduino core classes\n-  \n-   /**\n-   * Current platform in use.\n-   * <P>\n-   * Equivalent to System.getProperty(\"os.name\"), just used internally.\n-   */\n-  static public String platformName = System.getProperty(\"os.name\");\n-\n-  static {\n-    // figure out which operating system\n-    // this has to be first, since editor needs to know\n-\n-    if (platformName.toLowerCase().indexOf(\"mac\") != -1) {\n-      // can only check this property if running on a mac\n-      // on a pc it throws a security exception and kills the applet\n-      // (but on the mac it does just fine)\n-      if (System.getProperty(\"mrj.version\") != null) {  // running on a mac\n-        platform = (platformName.equals(\"Mac OS X\")) ?\n-          MACOSX : MACOS9;\n-      }\n-\n-    } else {\n-      String osname = System.getProperty(\"os.name\");\n-\n-      if (osname.indexOf(\"Windows\") != -1) {\n-        platform = WINDOWS;\n-\n-      } else if (osname.equals(\"Linux\")) {  // true for the ibm vm\n-        platform = LINUX;\n-\n-      } else {\n-        platform = OTHER;\n-      }\n-    }\n-  }\n-\n-   // used by split, all the standard whitespace chars\n-  // (uncludes unicode nbsp, that little bostage)\n-\n-  static final String WHITESPACE = \" \\t\\n\\r\\f\\u00A0\";\n-  \n-  \n-  \n-\n-  /**\n-   * Path of filename opened on the command line,\n-   * or via the MRJ open document handler.\n-   */\n-  static String openedAtStartup;\n-\n-  Editor editor;\n-\n-\n-  static public void main(String args[]) {\n-\n-    // make sure that this is running on java 1.4\n-\n-    //if (PApplet.javaVersion < 1.4f) {\n-      //System.err.println(\"no way man\");\n-    //  Base.showError(\"Need to install Java 1.4\",\n-    //                 \"This version of Arduino requires    \\n\" +\n-    //                 \"Java 1.4 or later to run properly.\\n\" +\n-    //                 \"Please visit java.com to upgrade.\", null);\n-   // }\n-\n-\n-    // grab any opened file from the command line\n-\n-    if (args.length == 1) {\n-      Base.openedAtStartup = args[0];\n-    }\n-\n-\n-    // register a temporary/early version of the mrj open document handler,\n-    // because the event may be lost (sometimes, not always) by the time\n-    // that Editor is properly constructed.\n-\n-    MRJOpenDocumentHandler startupOpen = new MRJOpenDocumentHandler() {\n-        public void handleOpenFile(File file) {\n-          // this will only get set once.. later will be handled\n-          // by the Editor version of this fella\n-          if (Base.openedAtStartup == null) {\n-            //System.out.println(\"handling outside open file: \" + file);\n-            Base.openedAtStartup = file.getAbsolutePath();\n-          }\n-        }\n-      };\n-    MRJApplicationUtils.registerOpenDocumentHandler(startupOpen);\n-\n-    Base app = new Base();\n-  }\n-\n-\n-  public Base() {\n-\n-    // set the look and feel before opening the window\n-\n-    try {\n-      if (Base.isLinux()) {\n-        // linux is by default (motif?) even uglier than metal\n-        // actually, i'm using native menus, so they're ugly and\n-        // motif-looking. ick. need to fix this.\n-        UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());\n-      } else {\n-        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\n-      }\n-    } catch (Exception e) {\n-      e.printStackTrace();\n-    }\n-\n-    // build the editor object\n-    editor = new Editor();\n-\n-    // get things rawkin\n-    editor.pack();\n-\n-    // has to be here to set window size properly\n-    editor.restorePreferences();\n-\n-    // show the window\n-    editor.show();\n-\n-    // check for updates\n-    if (Preferences.getBoolean(\"update.check\")) {\n-      new UpdateCheck(editor);\n-    }\n-  }\n-\n-\n-  // .................................................................\n-\n-\n-  /**\n-   * returns true if the Arduino is running on a Mac OS machine,\n-   * specifically a Mac OS X machine because it doesn't un on OS 9 anymore.\n-   */\n-  static public boolean isMacOS() {\n-    return platform == MACOSX;\n-  }\n-\n-\n-  /**\n-   * returns true if running on windows.\n-   */\n-  static public boolean isWindows() {\n-\n-    return platform == WINDOWS;\n-  }\n-\n-\n-  /**\n-   * true if running on linux.\n-   */\n-  static public boolean isLinux() {\n-\n-    return platform == LINUX;\n-  }\n-\n-\n-  // .................................................................\n-\n-\n-  static final int kDocumentsFolderType =\n-    ('d' << 24) | ('o' << 16) | ('c' << 8) | 's';\n-  static final int kPreferencesFolderType =\n-    ('p' << 24) | ('r' << 16) | ('e' << 8) | 'f';\n-  static final int kDomainLibraryFolderType =\n-    ('d' << 24) | ('l' << 16) | ('i' << 8) | 'b';\n-  static final short kUserDomain = -32763;\n-\n-\n-  static public File getSettingsFolder() {\n-    File dataFolder = null;\n-\n-    String pref = Preferences.get(\"settings.path\");\n-    if (pref != null) {\n-      dataFolder = new File(pref);\n-\n-    } else if (Base.isMacOS()) {\n-      // carbon folder constants\n-      // http://developer.apple.com/documentation/Carbon/Reference\n-      //   /Folder_Manager/folder_manager_ref/constant_6.html#/\n-      //   /apple_ref/doc/uid/TP30000238/C006889\n-\n-      // additional information found int the local file:\n-      // /System/Library/Frameworks/CoreServices.framework\n-      //   /Versions/Current/Frameworks/CarbonCore.framework/Headers/\n-\n-      // this is the 1.4 version.. but using 1.3 since i have the stubs\n-      // import com.apple.eio.*\n-      //println(FileManager.findFolder(kUserDomain,\n-      //        kDomainLibraryFolderType));\n-\n-      // not clear if i can write to this folder tho..\n-      try {\n-        /*\n-        if (false) {\n-          // this is because the mrjtoolkit stubs don't have the\n-          // thows exception around them\n-          new FileInputStream(\"ignored\");\n-        }\n-        */\n-\n-        // this method has to be dynamically loaded, because\n-        MRJOSType domainLibrary = new MRJOSType(\"dlib\");\n-        Method findFolderMethod =\n-          MRJFileUtils.class.getMethod(\"findFolder\",\n-                                       new Class[] { Short.TYPE,\n-                                                     MRJOSType.class });\n-        File libraryFolder = (File)\n-          findFolderMethod.invoke(null, new Object[] { new Short(kUserDomain),\n-                                                       domainLibrary });\n-\n-        dataFolder = new File(libraryFolder, \"Arduino\");\n-\n-      } catch (Exception e) {\n-        // this could be FileNotFound or NoSuchMethod\n-        //} catch (FileNotFoundException e) {\n-        //e.printStackTrace();\n-        //System.exit(1);\n-        showError(\"Problem getting data folder\",\n-                  \"Error getting the Arduino data folder.\", e);\n-      }\n-\n-    } else if (Base.isWindows()) {\n-      // looking for Documents and Settings/blah/Application Data/Arduino\n-\n-      // this is just based on the other documentation, and eyeballing\n-      // that part of the registry.. not confirmed by any msft/msdn docs.\n-      // HKEY_CURRENT_USER\\Software\\Microsoft\n-      //   \\Windows\\CurrentVersion\\Explorer\\Shell Folders\n-      // Value Name: AppData\n-      // Value Type: REG_SZ\n-      // Value Data: path\n-\n-      try {\n-        //RegistryKey topKey = Registry.getTopLevelKey(\"HKCU\");\n-        RegistryKey topKey = Registry.HKEY_CURRENT_USER;\n-\n-        String localKeyPath =\n-          \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\" +\n-          \"\\\\Explorer\\\\Shell Folders\";\n-        RegistryKey localKey = topKey.openSubKey(localKeyPath);\n-        String appDataPath = cleanKey(localKey.getStringValue(\"AppData\"));\n-        //System.out.println(\"app data path is \" + appDataPath);\n-        //System.exit(0);\n-        //topKey.closeKey();  // necessary?\n-        //localKey.closeKey();\n-\n-        dataFolder = new File(appDataPath, \"Arduino\");\n-\n-      } catch (Exception e) {\n-        showError(\"Problem getting data folder\",\n-                  \"Error getting the Arduino data folder.\", e);\n-      }\n-      //return null;\n-\n-    } else {\n-      // otherwise make a .arduino directory int the user's home dir\n-      File home = new File(System.getProperty(\"user.home\"));\n-      dataFolder = new File(home, \".arduino\");\n-    }\n-\n-    // create the folder if it doesn't exist already\n-    boolean result = true;\n-    if (!dataFolder.exists()) {\n-      result = dataFolder.mkdirs();\n-    }\n-\n-    if (!result) {\n-      // try the fallback location\n-      System.out.println(\"Using fallback path for settings.\");\n-      String fallback = Preferences.get(\"settings.path.fallback\");\n-      dataFolder = new File(fallback);\n-      if (!dataFolder.exists()) {\n-        result = dataFolder.mkdirs();\n-      }\n-    }\n-\n-    if (!result) {\n-      showError(\"Settings issues\",\n-                \"Arduino cannot run because it could not\\n\" +\n-                \"create a folder to store your settings.\", null);\n-    }\n-\n-    return dataFolder;\n-  }\n-\n-\n-  static public File getSettingsFile(String filename) {\n-    return new File(getSettingsFolder(), filename);\n-  }\n-\n-\n-  static public File getBuildFolder() {\n-    String buildPath = Preferences.get(\"build.path\");\n-    if (buildPath != null) return new File(buildPath);\n-\n-    File folder = new File(getTempFolder(), \"build\");\n-    if (!folder.exists()) folder.mkdirs();\n-    return folder;\n-  }\n-\n-\n-  /**\n-   * Get the path to the platform's temporary folder, by creating\n-   * a temporary temporary file and getting its parent folder.\n-   */\n-  static public File getTempFolder() {\n-    try {\n-      File ignored = File.createTempFile(\"ignored\", null);\n-      String tempPath = ignored.getParent();\n-      ignored.delete();\n-      return new File(tempPath);\n-\n-    } catch (Exception e) {\n-      e.printStackTrace();\n-    }\n-    return null;  // TODO could we *really* ever reach this?\n-  }\n-\n-\n-  /*\n-  static public void addBuildFolderToClassPath() {\n-    String path = getBuildFolder().getAbsolutePath();\n-    String jcp = System.getProperty(\"java.class.path\");\n-    if (jcp.indexOf(path) == -1) {\n-      System.setProperty(\"java.class.path\", path + File.pathSeparator + jcp);\n-      //return new File(getProcessingDataFolder(), \"build\");\n-      System.out.println(\"jcp is now \" +\n-                         System.getProperty(\"java.class.path\"));\n-    }\n-  }\n-  */\n-\n-\n-  static public File getDefaultSketchbookFolder() {\n-    File sketchbookFolder = null;\n-\n-    if (Base.isMacOS()) {\n-      // looking for /Users/blah/Documents/Arduino\n-\n-      // carbon folder constants\n-      // http://developer.apple.com/documentation/Carbon/Reference/Folder_Manager/folder_manager_ref/constant_6.html#//apple_ref/doc/uid/TP30000238/C006889\n-\n-      // additional information found int the local file:\n-      // /System/Library/Frameworks/CoreServices.framework/Versions/Current/Frameworks/CarbonCore.framework/Headers/\n-\n-      // this is the 1.4 version.. but using 1.3 since i have the stubs\n-      // import com.apple.eio.*\n-      //println(FileManager.findFolder(kUserDomain,\n-      //        kDomainLibraryFolderType));\n-\n-      // not clear if i can write to this folder tho..\n-      try {\n-        MRJOSType domainDocuments = new MRJOSType(\"docs\");\n-        //File libraryFolder = MRJFileUtils.findFolder(domainDocuments);\n-\n-        // for 77, try switching this to the user domain, just to be sure\n-        Method findFolderMethod =\n-          MRJFileUtils.class.getMethod(\"findFolder\",\n-                                       new Class[] { Short.TYPE,\n-                                                     MRJOSType.class });\n-        File documentsFolder = (File)\n-          findFolderMethod.invoke(null, new Object[] { new Short(kUserDomain),\n-                                                       domainDocuments });\n-        sketchbookFolder = new File(documentsFolder, \"Arduino\");\n-\n-      } catch (Exception e) {\n-        showError(\"sketch folder problem\",\n-                  \"Could not locate default sketch folder location.\", e);\n-      }\n-\n-    } else if (isWindows()) {\n-      // looking for Documents and Settings/blah/My Documents/Arduino\n-      // (though using a reg key since it's different on other platforms)\n-\n-      // http://support.microsoft.com/?kbid=221837&sd=RMVP\n-      // The path to the My Documents folder is stored in the\n-      // following registry key, where path is the complete path\n-      // to your storage location:\n-      // HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\n-      // Value Name: Personal\n-      // Value Type: REG_SZ\n-      // Value Data: path\n-\n-      try {\n-        RegistryKey topKey = Registry.HKEY_CURRENT_USER;\n-\n-        String localKeyPath =\n-          \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\" +\n-          \"\\\\Explorer\\\\Shell Folders\";\n-        RegistryKey localKey = topKey.openSubKey(localKeyPath);\n-        String personalPath = cleanKey(localKey.getStringValue(\"Personal\"));\n-        //topKey.closeKey();  // necessary?\n-        //localKey.closeKey();\n-        sketchbookFolder = new File(personalPath, \"Arduino\");\n-\n-      } catch (Exception e) {\n-        showError(\"Problem getting documents folder\",\n-                  \"Error getting the Arduino sketchbook folder.\", e);\n-      }\n-\n-    } else {\n-      // on linux (or elsewhere?) prompt the user for the location\n-      JFileChooser fc = new JFileChooser();\n-      fc.setDialogTitle(\"Select the folder where \" +\n-                        \"Arduino programs should be stored...\");\n-      //fc.setSelectedFile(new File(sketchbookLocationField.getText()));\n-      fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);\n-\n-      int returned = fc.showOpenDialog(new JDialog());\n-      if (returned == JFileChooser.APPROVE_OPTION) {\n-        //File file = fc.getSelectedFile();\n-        //sketchbookLocationField.setText(file.getAbsolutePath());\n-        sketchbookFolder = fc.getSelectedFile();\n-\n-      } else {\n-        System.exit(0);\n-      }\n-    }\n-\n-    // create the folder if it doesn't exist already\n-    boolean result = true;\n-    if (!sketchbookFolder.exists()) {\n-      result = sketchbookFolder.mkdirs();\n-    }\n-\n-    if (!result) {\n-      // try the fallback location\n-      System.out.println(\"Using fallback path for sketchbook.\");\n-      String fallback = Preferences.get(\"sketchbook.path.fallback\");\n-      sketchbookFolder = new File(fallback);\n-      if (!sketchbookFolder.exists()) {\n-        result = sketchbookFolder.mkdirs();\n-      }\n-    }\n-\n-    if (!result) {\n-      showError(\"error\",\n-                \"Arduino cannot run because it could not\\n\" +\n-                \"create a folder to store your sketchbook.\", null);\n-    }\n-\n-    return sketchbookFolder;\n-  }\n-\n-\n-  static public String cleanKey(String what) {\n-    // jnireg seems to be reading the chars as bytes\n-    // so maybe be as simple as & 0xff and then running through decoder\n-\n-    char c[] = what.toCharArray();\n-\n-    // if chars are in the tooHigh range, it's prolly because\n-    // a byte from the jni registry was turned into a char\n-    // and there was a sign extension.\n-    // e.g. 0xFC (252, umlaut u) became 0xFFFC (65532).\n-    // but on a japanese system, maybe this is two-byte and ok?\n-    int tooHigh = 65536 - 128;\n-    for (int i = 0; i < c.length; i++) {\n-      if (c[i] >= tooHigh) c[i] &= 0xff;\n-\n-      /*\n-      if ((c[i] >= 32) && (c[i] < 128)) {\n-        System.out.print(c[i]);\n-      } else {\n-        System.out.print(\"[\" + PApplet.hex(c[i]) + \"]\");\n-      }\n-      */\n-    }\n-    //System.out.println();\n-    return new String(c);\n-  }\n-\n-\n-  // .................................................................\n-\n-\n-  /**\n-   * Given the reference filename from the keywords list,\n-   * builds a URL and passes it to openURL.\n-   */\n-  static public void showReference(String referenceFile) {\n-    String currentDir = System.getProperty(\"user.dir\");\n-    openURL(currentDir + File.separator +\n-            \"reference\" + File.separator +\n-            referenceFile + \".html\");\n-  }\n-\n-\n-  /**\n-   * Implements the cross-platform headache of opening URLs\n-   */\n-  static public void openURL(String url) {\n-    //System.out.println(\"opening url \" + url);\n-    try {\n-      if (Base.isWindows()) {\n-        // this is not guaranteed to work, because who knows if the\n-        // path will always be c:\\progra~1 et al. also if the user has\n-        // a different browser set as their default (which would\n-        // include me) it'd be annoying to be dropped into ie.\n-        //Runtime.getRuntime().exec(\"c:\\\\progra~1\\\\intern~1\\\\iexplore \"\n-        // + currentDir\n-\n-        // the following uses a shell execute to launch the .html file\n-        // note that under cygwin, the .html files have to be chmodded +x\n-        // after they're unpacked from the zip file. i don't know why,\n-        // and don't understand what this does in terms of windows\n-        // permissions. without the chmod, the command prompt says\n-        // \"Access is denied\" in both cygwin and the \"dos\" prompt.\n-        //Runtime.getRuntime().exec(\"cmd /c \" + currentDir + \"\\\\reference\\\\\" +\n-        //                    referenceFile + \".html\");\n-        if (url.startsWith(\"http://\")) {\n-          // open dos prompt, give it 'start' command, which will\n-          // open the url properly. start by itself won't work since\n-          // it appears to need cmd\n-          Runtime.getRuntime().exec(\"cmd /c start \" + url);\n-        } else {\n-          // just launching the .html file via the shell works\n-          // but make sure to chmod +x the .html files first\n-          // also place quotes around it in case there's a space\n-          // in the user.dir part of the url\n-          Runtime.getRuntime().exec(\"cmd /c \\\"\" + url + \"\\\"\");\n-        }\n-\n-      } else if (Base.isMacOS()) {\n-        //com.apple.eio.FileManager.openURL(url);\n-\n-        if (!url.startsWith(\"http://\")) {\n-          // prepend file:// on this guy since it's a file\n-          url = \"file://\" + url;\n-\n-          // replace spaces with %20 for the file url\n-          // otherwise the mac doesn't like to open it\n-          // can't just use URLEncoder, since that makes slashes into\n-          // %2F characters, which is no good. some might say \"useless\"\n-          if (url.indexOf(' ') != -1) {\n-            StringBuffer sb = new StringBuffer();\n-            char c[] = url.toCharArray();\n-            for (int i = 0; i < c.length; i++) {\n-              if (c[i] == ' ') {\n-                sb.append(\"%20\");\n-              } else {\n-                sb.append(c[i]);\n-              }\n-            }\n-            url = sb.toString();\n-          }\n-        }\n-        com.apple.mrj.MRJFileUtils.openURL(url);\n-\n-      } else if (Base.isLinux()) {\n-        // how's mozilla sound to ya, laddie?\n-        //Runtime.getRuntime().exec(new String[] { \"mozilla\", url });\n-        String browser = Preferences.get(\"browser\");\n-        Runtime.getRuntime().exec(new String[] { browser, url });\n-\n-      } else {\n-        System.err.println(\"unspecified platform\");\n-      }\n-\n-    } catch (IOException e) {\n-      Base.showWarning(\"Could not open URL\",\n-                          \"An error occurred while trying to open\\n\" + url, e);\n-    }\n-  }\n-\n-\n-  /**\n-   * Implements the other cross-platform headache of opening\n-   * a folder in the machine's native file browser.\n-   */\n-  static public void openFolder(File file) {\n-    try {\n-      String folder = file.getAbsolutePath();\n-\n-      if (Base.isWindows()) {\n-        // doesn't work\n-        //Runtime.getRuntime().exec(\"cmd /c \\\"\" + folder + \"\\\"\");\n-\n-        // works fine on winxp, prolly win2k as well\n-        Runtime.getRuntime().exec(\"explorer \\\"\" + folder + \"\\\"\");\n-\n-        // not tested\n-        //Runtime.getRuntime().exec(\"start explorer \\\"\" + folder + \"\\\"\");\n-\n-      } else if (Base.isMacOS()) {\n-        openURL(folder);  // handles char replacement, etc\n-\n-      }\n-    } catch (IOException e) {\n-      e.printStackTrace();\n-    }\n-  }\n-\n-\n-  /**\n-   * \"No cookie for you\" type messages. Nothing fatal or all that\n-   * much of a bummer, but something to notify the user about.\n-   */\n-  static public void showMessage(String title, String message) {\n-    if (title == null) title = \"Message\";\n-    JOptionPane.showMessageDialog(new Frame(), message, title,\n-                                  JOptionPane.INFORMATION_MESSAGE);\n-  }\n-\n-\n-  /**\n-   * Non-fatal error message with optional stack trace side dish.\n-   */\n-  static public void showWarning(String title, String message,\n-                                 Exception e) {\n-    if (title == null) title = \"Warning\";\n-    JOptionPane.showMessageDialog(new Frame(), message, title,\n-                                  JOptionPane.WARNING_MESSAGE);\n-\n-    //System.err.println(e.toString());\n-    if (e != null) e.printStackTrace();\n-  }\n-\n-\n-  /**\n-   * Show an error message that's actually fatal to the program.\n-   * This is an error that can't be recovered. Use showWarning()\n-   * for errors that allow P5 to continue running.\n-   */\n-  static public void showError(String title, String message,\n-                               Exception e) {\n-    if (title == null) title = \"Error\";\n-    JOptionPane.showMessageDialog(new Frame(), message, title,\n-                                  JOptionPane.ERROR_MESSAGE);\n-\n-    if (e != null) e.printStackTrace();\n-    System.exit(1);\n-  }\n-\n-\n-  // ...................................................................\n-\n-\n-  static public Image getImage(String name, Component who) {\n-    Image image = null;\n-    Toolkit tk = Toolkit.getDefaultToolkit();\n-\n-    //if ((Base.platform == Base.MACOSX) ||\n-    //(Base.platform == Base.MACOS9)) {\n-    image = tk.getImage(\"lib/\" + name);\n-    //} else {\n-    //image = tk.getImage(who.getClass().getResource(name));\n-    //}\n-\n-    //image =  tk.getImage(\"lib/\" + name);\n-    //URL url = PdeApplet.class.getResource(name);\n-    //image = tk.getImage(url);\n-    //}\n-    //MediaTracker tracker = new MediaTracker(applet);\n-    MediaTracker tracker = new MediaTracker(who); //frame);\n-    tracker.addImage(image, 0);\n-    try {\n-      tracker.waitForAll();\n-    } catch (InterruptedException e) { }\n-    return image;\n-  }\n-\n-\n-  static public InputStream getStream(String filename) throws IOException {\n-    //if (Base.platform == Base.MACOSX) {\n-    // macos doesn't seem to think that files in the lib folder\n-    // are part of the resources, unlike windows or linux.\n-    // actually, this is only the case when running as a .app,\n-    // since it works fine from run.sh, but not Arduino.app\n-    return new FileInputStream(\"lib/\" + filename);\n-    //}\n-\n-    // all other, more reasonable operating systems\n-    //return cls.getResource(filename).openStream();\n-    //return Base.class.getResource(filename).openStream();\n-  }\n-\n-\n-  // ...................................................................\n-\n-\n-  static public byte[] grabFile(File file) throws IOException {\n-    int size = (int) file.length();\n-    FileInputStream input = new FileInputStream(file);\n-    byte buffer[] = new byte[size];\n-    int offset = 0;\n-    int bytesRead;\n-    while ((bytesRead = input.read(buffer, offset, size-offset)) != -1) {\n-      offset += bytesRead;\n-      if (bytesRead == 0) break;\n-    }\n-    input.close();  // weren't properly being closed\n-    input = null;\n-    return buffer;\n-  }\n-\n-\n-  static public void copyFile(File afile, File bfile) throws IOException {\n-    InputStream from = new BufferedInputStream(new FileInputStream(afile));\n-    OutputStream to = new BufferedOutputStream(new FileOutputStream(bfile));\n-    byte[] buffer = new byte[16 * 1024];\n-    int bytesRead;\n-    while ((bytesRead = from.read(buffer)) != -1) {\n-      to.write(buffer, 0, bytesRead);\n-    }\n-    to.flush();\n-    from.close(); // ??\n-    from = null;\n-    to.close(); // ??\n-    to = null;\n-\n-    bfile.setLastModified(afile.lastModified());  // jdk13+ required\n-  //} catch (IOException e) {\n-  //  e.printStackTrace();\n-  //}\n-  }\n-\n-\n-  /**\n-   * Grab the contents of a file as a string.\n-   */\n-  static public String loadFile(File file) throws IOException {\n-    // empty code file.. no worries, might be getting filled up later\n-    if (file.length() == 0) return \"\";\n-\n-    InputStreamReader isr = new InputStreamReader(new FileInputStream(file));\n-    BufferedReader reader = new BufferedReader(isr);\n-\n-    StringBuffer buffer = new StringBuffer();\n-    String line = null;\n-    while ((line = reader.readLine()) != null) {\n-      buffer.append(line);\n-      buffer.append('\\n');\n-    }\n-    reader.close();\n-    return buffer.toString();\n-  }\n-\n-\n-  /**\n-   * Spew the contents of a String object out to a file.\n-   */\n-  static public void saveFile(String str,\n-                              File file) throws IOException {\n-\n-    ByteArrayInputStream bis = new ByteArrayInputStream(str.getBytes());\n-    InputStreamReader isr = new InputStreamReader(bis);\n-    BufferedReader reader = new BufferedReader(isr);\n-\n-    FileWriter fw = new FileWriter(file);\n-    PrintWriter writer = new PrintWriter(new BufferedWriter(fw));\n-\n-    String line = null;\n-    while ((line = reader.readLine()) != null) {\n-      writer.println(line);\n-    }\n-    writer.flush();\n-    writer.close();\n-  }\n-\n-\n-  static public void copyDir(File sourceDir,\n-                             File targetDir) throws IOException {\n-    targetDir.mkdirs();\n-    String files[] = sourceDir.list();\n-    for (int i = 0; i < files.length; i++) {\n-      if (files[i].equals(\".\") || files[i].equals(\"..\")) continue;\n-      File source = new File(sourceDir, files[i]);\n-      File target = new File(targetDir, files[i]);\n-      if (source.isDirectory()) {\n-        //target.mkdirs();\n-        copyDir(source, target);\n-        target.setLastModified(source.lastModified());\n-      } else {\n-        copyFile(source, target);\n-      }\n-    }\n-  }\n-\n-\n-  /**\n-   * Remove all files in a directory and the directory itself.\n-   */\n-  static public void removeDir(File dir) {\n-    if (dir.exists()) {\n-      removeDescendants(dir);\n-      dir.delete();\n-    }\n-  }\n-\n-\n-  /**\n-   * Recursively remove all files within a directory,\n-   * used with removeDir(), or when the contents of a dir\n-   * should be removed, but not the directory itself.\n-   * (i.e. when cleaning temp files from lib/build)\n-   */\n-  static public void removeDescendants(File dir) {\n-    if (!dir.exists()) return;\n-\n-    String files[] = dir.list();\n-    for (int i = 0; i < files.length; i++) {\n-      if (files[i].equals(\".\") || files[i].equals(\"..\")) continue;\n-      File dead = new File(dir, files[i]);\n-      if (!dead.isDirectory()) {\n-        if (!Preferences.getBoolean(\"compiler.save_build_files\")) {\n-          if (!dead.delete()) {\n-            // temporarily disabled\n-            //System.err.println(\"couldn't delete \" + dead);\n-          }\n-        }\n-      } else {\n-        removeDir(dead);\n-        //dead.delete();\n-      }\n-    }\n-  }\n-\n-\n-  /**\n-   * Calculate the size of the contents of a folder.\n-   * Used to determine whether sketches are empty or not.\n-   * Note that the function calls itself recursively.\n-   */\n-  static public int calcFolderSize(File folder) {\n-    int size = 0;\n-\n-    String files[] = folder.list();\n-    // null if folder doesn't exist, happens when deleting sketch\n-    if (files == null) return -1;\n-\n-    for (int i = 0; i < files.length; i++) {\n-      if (files[i].equals(\".\") || (files[i].equals(\"..\")) ||\n-          files[i].equals(\".DS_Store\")) continue;\n-      File fella = new File(folder, files[i]);\n-      if (fella.isDirectory()) {\n-        size += calcFolderSize(fella);\n-      } else {\n-        size += (int) fella.length();\n-      }\n-    }\n-    return size;\n-  }\n-\n-\n-  /**\n-   * Equivalent to the one in PApplet, but static (die() is removed)\n-   */\n-  static public String[] loadStrings(File file) {\n-    try {\n-      FileInputStream input = new FileInputStream(file);\n-      BufferedReader reader =\n-        new BufferedReader(new InputStreamReader(input));\n-\n-      String lines[] = new String[100];\n-      int lineCount = 0;\n-      String line = null;\n-      while ((line = reader.readLine()) != null) {\n-        if (lineCount == lines.length) {\n-          String temp[] = new String[lineCount << 1];\n-          System.arraycopy(lines, 0, temp, 0, lineCount);\n-          lines = temp;\n-        }\n-        lines[lineCount++] = line;\n-      }\n-      reader.close();\n-\n-      if (lineCount == lines.length) {\n-        return lines;\n-      }\n-\n-      // resize array to appropraite amount for these lines\n-      String output[] = new String[lineCount];\n-      System.arraycopy(lines, 0, output, 0, lineCount);\n-      return output;\n-\n-    } catch (IOException e) {\n-      e.printStackTrace();\n-    }\n-    return null;\n-  }\n-  \n-    //////////////////////////////////////////////////////////////\n-\n-  // STRINGS\n-\n-\n-  /**\n-   * Remove whitespace characters from the beginning and ending\n-   * of a String. Works like String.trim() but includes the\n-   * unicode nbsp character as well.\n-   */\n-  static public String trim(String str) {\n-    return str.replace('\\u00A0', ' ').trim();\n-\n-    /*\n-    int left = 0;\n-    int right = str.length() - 1;\n-\n-    while ((left <= right) &&\n-           (WHITESPACE.indexOf(str.charAt(left)) != -1)) left++;\n-    if (left == right) return \"\";\n-\n-    while (WHITESPACE.indexOf(str.charAt(right)) != -1) --right;\n-\n-    return str.substring(left, right-left+1);\n-    */\n-  }\n-\n-  /**\n-   * Join an array of Strings together as a single String,\n-   * separated by the whatever's passed in for the separator.\n-   */\n-  static public String join(String str[], char separator) {\n-    return join(str, String.valueOf(separator));\n-  }\n-\n-\n-  /**\n-   * Join an array of Strings together as a single String,\n-   * separated by the whatever's passed in for the separator.\n-   * <P>\n-   * To use this on numbers, first pass the array to nf() or nfs()\n-   * to get a list of String objects, then use join on that.\n-   * <PRE>\n-   * e.g. String stuff[] = { \"apple\", \"bear\", \"cat\" };\n-   *      String list = join(stuff, \", \");\n-   *      // list is now \"apple, bear, cat\"</PRE>\n-   */\n-  static public String join(String str[], String separator) {\n-    StringBuffer buffer = new StringBuffer();\n-    for (int i = 0; i < str.length; i++) {\n-      if (i != 0) buffer.append(separator);\n-      buffer.append(str[i]);\n-    }\n-    return buffer.toString();\n-  }\n-\n-\n-  /**\n-   * Split the provided String at wherever whitespace occurs.\n-   * Multiple whitespace (extra spaces or tabs or whatever)\n-   * between items will count as a single break.\n-   * <P>\n-   * The whitespace characters are \"\\t\\n\\r\\f\", which are the defaults\n-   * for java.util.StringTokenizer, plus the unicode non-breaking space\n-   * character, which is found commonly on files created by or used\n-   * in conjunction with Mac OS X (character 160, or 0x00A0 in hex).\n-   * <PRE>\n-   * i.e. split(\"a b\") -> { \"a\", \"b\" }\n-   *      split(\"a    b\") -> { \"a\", \"b\" }\n-   *      split(\"a\\tb\") -> { \"a\", \"b\" }\n-   *      split(\"a \\t  b  \") -> { \"a\", \"b\" }</PRE>\n-   */\n-  static public String[] split(String what) {\n-    return split(what, WHITESPACE);\n-  }\n-\n-\n-  /**\n-   * Splits a string into pieces, using any of the chars in the\n-   * String 'delim' as separator characters. For instance,\n-   * in addition to white space, you might want to treat commas\n-   * as a separator. The delimeter characters won't appear in\n-   * the returned String array.\n-   * <PRE>\n-   * i.e. split(\"a, b\", \" ,\") -> { \"a\", \"b\" }\n-   * </PRE>\n-   * To include all the whitespace possibilities, use the variable\n-   * WHITESPACE, found in PConstants:\n-   * <PRE>\n-   * i.e. split(\"a   | b\", WHITESPACE + \"|\");  ->  { \"a\", \"b\" }</PRE>\n-   */\n-  static public String[] split(String what, String delim) {\n-    StringTokenizer toker = new StringTokenizer(what, delim);\n-    String pieces[] = new String[toker.countTokens()];\n-\n-    int index = 0;\n-    while (toker.hasMoreTokens()) {\n-      pieces[index++] = toker.nextToken();\n-    }\n-    return pieces;\n-  }\n-\n-\n-  /**\n-   * Split a string into pieces along a specific character.\n-   * Most commonly used to break up a String along tab characters.\n-   * <P>\n-   * This operates differently than the others, where the\n-   * single delimeter is the only breaking point, and consecutive\n-   * delimeters will produce an empty string (\"\"). This way,\n-   * one can split on tab characters, but maintain the column\n-   * alignments (of say an excel file) where there are empty columns.\n-   */\n-  static public String[] split(String what, char delim) {\n-    // do this so that the exception occurs inside the user's\n-    // program, rather than appearing to be a bug inside split()\n-    if (what == null) return null;\n-    //return split(what, String.valueOf(delim));  // huh\n-\n-    char chars[] = what.toCharArray();\n-    int splitCount = 0; //1;\n-    for (int i = 0; i < chars.length; i++) {\n-      if (chars[i] == delim) splitCount++;\n-    }\n-    // make sure that there is something in the input string\n-    //if (chars.length > 0) {\n-      // if the last char is a delimeter, get rid of it..\n-      //if (chars[chars.length-1] == delim) splitCount--;\n-      // on second thought, i don't agree with this, will disable\n-    //}\n-    if (splitCount == 0) {\n-      String splits[] = new String[1];\n-      splits[0] = new String(what);\n-      return splits;\n-    }\n-    //int pieceCount = splitCount + 1;\n-    String splits[] = new String[splitCount + 1];\n-    int splitIndex = 0;\n-    int startIndex = 0;\n-    for (int i = 0; i < chars.length; i++) {\n-      if (chars[i] == delim) {\n-        splits[splitIndex++] =\n-          new String(chars, startIndex, i-startIndex);\n-        startIndex = i + 1;\n-      }\n-    }\n-    //if (startIndex != chars.length) {\n-      splits[splitIndex] =\n-        new String(chars, startIndex, chars.length-startIndex);\n-    //}\n-    return splits;\n-  }\n-\n-  \n-    \n-  \n-}\n+/* -*- mode: jde; c-basic-offset: 2; indent-tabs-mode: nil -*- */\r\n+\r\n+/*\r\n+  Part of the Arduino project - http://arduino.berlios.de\r\n+\r\n+  \r\n+\r\n+  Based on processing http://www.processing.org\r\n+  Copyright (c) 2004-05 Ben Fry and Casey Reas\r\n+  Copyright (c) 2001-04 Massachusetts Institute of Technology\r\n+\r\n+  This program is free software; you can redistribute it and/or modify\r\n+  it under the terms of the GNU General Public License as published by\r\n+  the Free Software Foundation; either version 2 of the License, or\r\n+  (at your option) any later version.\r\n+\r\n+  This program is distributed in the hope that it will be useful,\r\n+  but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n+  GNU General Public License for more details.\r\n+\r\n+  You should have received a copy of the GNU General Public License\r\n+  along with this program; if not, write to the Free Software Foundation,\r\n+  Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\r\n+*/\r\n+\r\n+package processing.app;\r\n+\r\n+import java.awt.*;\r\n+import java.awt.event.*;\r\n+import java.io.*;\r\n+import java.lang.reflect.*;\r\n+import java.net.*;\r\n+import java.util.*;\r\n+import java.util.zip.*;\r\n+\r\n+import javax.swing.*;\r\n+import javax.swing.event.*;\r\n+import javax.swing.text.*;\r\n+import javax.swing.undo.*;\r\n+\r\n+import com.apple.mrj.*;\r\n+import com.ice.jni.registry.*;\r\n+\r\n+\r\n+\r\n+/**\r\n+ * The base class for the main Arduino application.\r\n+ * <P>\r\n+ * Primary role of this class is for platform identification and\r\n+ * general interaction with the system (launching URLs, loading\r\n+ * files and images, etc) that comes from that.\r\n+ */\r\n+public class Base {\r\n+  static final int VERSION = 3;\r\n+  static final String VERSION_NAME = \"0003 Alpha\";\r\n+  \r\n+  static public int platform;\r\n+  \r\n+   // platform IDs for platform\r\n+\r\n+  static final int WINDOWS = 1;\r\n+  static final int MACOS9  = 2;\r\n+  static final int MACOSX  = 3;\r\n+  static final int LINUX   = 4;\r\n+  static final int OTHER   = 0;\r\n+  \r\n+  \r\n+  // moved from PApplet\r\n+  // in preperation of detaching the IDE from the\r\n+  // Arduino core classes\r\n+  \r\n+   /**\r\n+   * Current platform in use.\r\n+   * <P>\r\n+   * Equivalent to System.getProperty(\"os.name\"), just used internally.\r\n+   */\r\n+  static public String platformName = System.getProperty(\"os.name\");\r\n+\r\n+  static {\r\n+    // figure out which operating system\r\n+    // this has to be first, since editor needs to know\r\n+\r\n+    if (platformName.toLowerCase().indexOf(\"mac\") != -1) {\r\n+      // can only check this property if running on a mac\r\n+      // on a pc it throws a security exception and kills the applet\r\n+      // (but on the mac it does just fine)\r\n+      if (System.getProperty(\"mrj.version\") != null) {  // running on a mac\r\n+        platform = (platformName.equals(\"Mac OS X\")) ?\r\n+          MACOSX : MACOS9;\r\n+      }\r\n+\r\n+    } else {\r\n+      String osname = System.getProperty(\"os.name\");\r\n+\r\n+      if (osname.indexOf(\"Windows\") != -1) {\r\n+        platform = WINDOWS;\r\n+\r\n+      } else if (osname.equals(\"Linux\")) {  // true for the ibm vm\r\n+        platform = LINUX;\r\n+\r\n+      } else {\r\n+        platform = OTHER;\r\n+      }\r\n+    }\r\n+  }\r\n+\r\n+   // used by split, all the standard whitespace chars\r\n+  // (uncludes unicode nbsp, that little bostage)\r\n+\r\n+  static final String WHITESPACE = \" \\t\\n\\r\\f\\u00A0\";\r\n+  \r\n+  \r\n+  \r\n+\r\n+  /**\r\n+   * Path of filename opened on the command line,\r\n+   * or via the MRJ open document handler.\r\n+   */\r\n+  static String openedAtStartup;\r\n+\r\n+  Editor editor;\r\n+\r\n+\r\n+  static public void main(String args[]) {\r\n+\r\n+    // make sure that this is running on java 1.4\r\n+\r\n+    //if (PApplet.javaVersion < 1.4f) {\r\n+      //System.err.println(\"no way man\");\r\n+    //  Base.showError(\"Need to install Java 1.4\",\r\n+    //                 \"This version of Arduino requires    \\n\" +\r\n+    //                 \"Java 1.4 or later to run properly.\\n\" +\r\n+    //                 \"Please visit java.com to upgrade.\", null);\r\n+   // }\r\n+\r\n+\r\n+    // grab any opened file from the command line\r\n+\r\n+    if (args.length == 1) {\r\n+      Base.openedAtStartup = args[0];\r\n+    }\r\n+\r\n+\r\n+    // register a temporary/early version of the mrj open document handler,\r\n+    // because the event may be lost (sometimes, not always) by the time\r\n+    // that Editor is properly constructed.\r\n+\r\n+    MRJOpenDocumentHandler startupOpen = new MRJOpenDocumentHandler() {\r\n+        public void handleOpenFile(File file) {\r\n+          // this will only get set once.. later will be handled\r\n+          // by the Editor version of this fella\r\n+          if (Base.openedAtStartup == null) {\r\n+            //System.out.println(\"handling outside open file: \" + file);\r\n+            Base.openedAtStartup = file.getAbsolutePath();\r\n+          }\r\n+        }\r\n+      };\r\n+    MRJApplicationUtils.registerOpenDocumentHandler(startupOpen);\r\n+\r\n+    Base app = new Base();\r\n+  }\r\n+\r\n+\r\n+  public Base() {\r\n+\r\n+    // set the look and feel before opening the window\r\n+\r\n+    try {\r\n+      if (Base.isLinux()) {\r\n+        // linux is by default (motif?) even uglier than metal\r\n+        // actually, i'm using native menus, so they're ugly and\r\n+        // motif-looking. ick. need to fix this.\r\n+        UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());\r\n+      } else {\r\n+        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\r\n+      }\r\n+    } catch (Exception e) {\r\n+      e.printStackTrace();\r\n+    }\r\n+\r\n+    // build the editor object\r\n+    editor = new Editor();\r\n+\r\n+    // get things rawkin\r\n+    editor.pack();\r\n+\r\n+    // has to be here to set window size properly\r\n+    editor.restorePreferences();\r\n+\r\n+    // show the window\r\n+    editor.show();\r\n+\r\n+    // check for updates\r\n+    if (Preferences.getBoolean(\"update.check\")) {\r\n+      new UpdateCheck(editor);\r\n+    }\r\n+  }\r\n+\r\n+\r\n+  // .................................................................\r\n+\r\n+\r\n+  /**\r\n+   * returns true if the Arduino is running on a Mac OS machine,\r\n+   * specifically a Mac OS X machine because it doesn't un on OS 9 anymore.\r\n+   */\r\n+  static public boolean isMacOS() {\r\n+    return platform == MACOSX;\r\n+  }\r\n+\r\n+\r\n+  /**\r\n+   * returns true if running on windows.\r\n+   */\r\n+  static public boolean isWindows() {\r\n+\r\n+    return platform == WINDOWS;\r\n+  }\r\n+\r\n+\r\n+  /**\r\n+   * true if running on linux.\r\n+   */\r\n+  static public boolean isLinux() {\r\n+\r\n+    return platform == LINUX;\r\n+  }\r\n+\r\n+\r\n+  // .................................................................\r\n+\r\n+\r\n+  static final int kDocumentsFolderType =\r\n+    ('d' << 24) | ('o' << 16) | ('c' << 8) | 's';\r\n+  static final int kPreferencesFolderType =\r\n+    ('p' << 24) | ('r' << 16) | ('e' << 8) | 'f';\r\n+  static final int kDomainLibraryFolderType =\r\n+    ('d' << 24) | ('l' << 16) | ('i' << 8) | 'b';\r\n+  static final short kUserDomain = -32763;\r\n+\r\n+\r\n+  static public File getSettingsFolder() {\r\n+    File dataFolder = null;\r\n+\r\n+    String pref = Preferences.get(\"settings.path\");\r\n+    if (pref != null) {\r\n+      dataFolder = new File(pref);\r\n+\r\n+    } else if (Base.isMacOS()) {\r\n+      // carbon folder constants\r\n+      // http://developer.apple.com/documentation/Carbon/Reference\r\n+      //   /Folder_Manager/folder_manager_ref/constant_6.html#/\r\n+      //   /apple_ref/doc/uid/TP30000238/C006889\r\n+\r\n+      // additional information found int the local file:\r\n+      // /System/Library/Frameworks/CoreServices.framework\r\n+      //   /Versions/Current/Frameworks/CarbonCore.framework/Headers/\r\n+\r\n+      // this is the 1.4 version.. but using 1.3 since i have the stubs\r\n+      // import com.apple.eio.*\r\n+      //println(FileManager.findFolder(kUserDomain,\r\n+      //        kDomainLibraryFolderType));\r\n+\r\n+      // not clear if i can write to this folder tho..\r\n+      try {\r\n+        /*\r\n+        if (false) {\r\n+          // this is because the mrjtoolkit stubs don't have the\r\n+          // thows exception around them\r\n+          new FileInputStream(\"ignored\");\r\n+        }\r\n+        */\r\n+\r\n+        // this method has to be dynamically loaded, because\r\n+        MRJOSType domainLibrary = new MRJOSType(\"dlib\");\r\n+        Method findFolderMethod =\r\n+          MRJFileUtils.class.getMethod(\"findFolder\",\r\n+                                       new Class[] { Short.TYPE,\r\n+                                                     MRJOSType.class });\r\n+        File libraryFolder = (File)\r\n+          findFolderMethod.invoke(null, new Object[] { new Short(kUserDomain),\r\n+                                                       domainLibrary });\r\n+\r\n+        dataFolder = new File(libraryFolder, \"Arduino\");\r\n+\r\n+      } catch (Exception e) {\r\n+        // this could be FileNotFound or NoSuchMethod\r\n+        //} catch (FileNotFoundException e) {\r\n+        //e.printStackTrace();\r\n+        //System.exit(1);\r\n+        showError(\"Problem getting data folder\",\r\n+                  \"Error getting the Arduino data folder.\", e);\r\n+      }\r\n+\r\n+    } else if (Base.isWindows()) {\r\n+      // looking for Documents and Settings/blah/Application Data/Arduino\r\n+\r\n+      // this is just based on the other documentation, and eyeballing\r\n+      // that part of the registry.. not confirmed by any msft/msdn docs.\r\n+      // HKEY_CURRENT_USER\\Software\\Microsoft\r\n+      //   \\Windows\\CurrentVersion\\Explorer\\Shell Folders\r\n+      // Value Name: AppData\r\n+      // Value Type: REG_SZ\r\n+      // Value Data: path\r\n+\r\n+      try {\r\n+        //RegistryKey topKey = Registry.getTopLevelKey(\"HKCU\");\r\n+        RegistryKey topKey = Registry.HKEY_CURRENT_USER;\r\n+\r\n+        String localKeyPath =\r\n+          \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\" +\r\n+          \"\\\\Explorer\\\\Shell Folders\";\r\n+        RegistryKey localKey = topKey.openSubKey(localKeyPath);\r\n+        String appDataPath = cleanKey(localKey.getStringValue(\"AppData\"));\r\n+        //System.out.println(\"app data path is \" + appDataPath);\r\n+        //System.exit(0);\r\n+        //topKey.closeKey();  // necessary?\r\n+        //localKey.closeKey();\r\n+\r\n+        dataFolder = new File(appDataPath, \"Arduino\");\r\n+\r\n+      } catch (Exception e) {\r\n+        showError(\"Problem getting data folder\",\r\n+                  \"Error getting the Arduino data folder.\", e);\r\n+      }\r\n+      //return null;\r\n+\r\n+    } else {\r\n+      // otherwise make a .arduino directory int the user's home dir\r\n+      File home = new File(System.getProperty(\"user.home\"));\r\n+      dataFolder = new File(home, \".arduino\");\r\n+    }\r\n+\r\n+    // create the folder if it doesn't exist already\r\n+    boolean result = true;\r\n+    if (!dataFolder.exists()) {\r\n+      result = dataFolder.mkdirs();\r\n+    }\r\n+\r\n+    if (!result) {\r\n+      // try the fallback location\r\n+      System.out.println(\"Using fallback path for settings.\");\r\n+      String fallback = Preferences.get(\"settings.path.fallback\");\r\n+      dataFolder = new File(fallback);\r\n+      if (!dataFolder.exists()) {\r\n+        result = dataFolder.mkdirs();\r\n+      }\r\n+    }\r\n+\r\n+    if (!result) {\r\n+      showError(\"Settings issues\",\r\n+                \"Arduino cannot run because it could not\\n\" +\r\n+                \"create a folder to store your settings.\", null);\r\n+    }\r\n+\r\n+    return dataFolder;\r\n+  }\r\n+\r\n+\r\n+  static public File getSettingsFile(String filename) {\r\n+    return new File(getSettingsFolder(), filename);\r\n+  }\r\n+\r\n+\r\n+  static public File getBuildFolder() {\r\n+    String buildPath = Preferences.get(\"build.path\");\r\n+    if (buildPath != null) return new File(buildPath);\r\n+\r\n+    File folder = new File(getTempFolder(), \"build\");\r\n+    if (!folder.exists()) folder.mkdirs();\r\n+    return folder;\r\n+  }\r\n+\r\n+\r\n+  /**\r\n+   * Get the path to the platform's temporary folder, by creating\r\n+   * a temporary temporary file and getting its parent folder.\r\n+   */\r\n+  static public File getTempFolder() {\r\n+    try {\r\n+      File ignored = File.createTempFile(\"ignored\", null);\r\n+      String tempPath = ignored.getParent();\r\n+      ignored.delete();\r\n+      return new File(tempPath);\r\n+\r\n+    } catch (Exception e) {\r\n+      e.printStackTrace();\r\n+    }\r\n+    return null;  // TODO could we *really* ever reach this?\r\n+  }\r\n+\r\n+\r\n+  /*\r\n+  static public void addBuildFolderToClassPath() {\r\n+    String path = getBuildFolder().getAbsolutePath();\r\n+    String jcp = System.getProperty(\"java.class.path\");\r\n+    if (jcp.indexOf(path) == -1) {\r\n+      System.setProperty(\"java.class.path\", path + File.pathSeparator + jcp);\r\n+      //return new File(getProcessingDataFolder(), \"build\");\r\n+      System.out.println(\"jcp is now \" +\r\n+                         System.getProperty(\"java.class.path\"));\r\n+    }\r\n+  }\r\n+  */\r\n+\r\n+\r\n+  static public File getDefaultSketchbookFolder() {\r\n+    File sketchbookFolder = null;\r\n+\r\n+    if (Base.isMacOS()) {\r\n+      // looking for /Users/blah/Documents/Arduino\r\n+\r\n+      // carbon folder constants\r\n+      // http://developer.apple.com/documentation/Carbon/Reference/Folder_Manager/folder_manager_ref/constant_6.html#//apple_ref/doc/uid/TP30000238/C006889\r\n+\r\n+      // additional information found int the local file:\r\n+      // /System/Library/Frameworks/CoreServices.framework/Versions/Current/Frameworks/CarbonCore.framework/Headers/\r\n+\r\n+      // this is the 1.4 version.. but using 1.3 since i have the stubs\r\n+      // import com.apple.eio.*\r\n+      //println(FileManager.findFolder(kUserDomain,\r\n+      //        kDomainLibraryFolderType));\r\n+\r\n+      // not clear if i can write to this folder tho..\r\n+      try {\r\n+        MRJOSType domainDocuments = new MRJOSType(\"docs\");\r\n+        //File libraryFolder = MRJFileUtils.findFolder(domainDocuments);\r\n+\r\n+        // for 77, try switching this to the user domain, just to be sure\r\n+        Method findFolderMethod =\r\n+          MRJFileUtils.class.getMethod(\"findFolder\",\r\n+                                       new Class[] { Short.TYPE,\r\n+                                                     MRJOSType.class });\r\n+        File documentsFolder = (File)\r\n+          findFolderMethod.invoke(null, new Object[] { new Short(kUserDomain),\r\n+                                                       domainDocuments });\r\n+        sketchbookFolder = new File(documentsFolder, \"Arduino\");\r\n+\r\n+      } catch (Exception e) {\r\n+        showError(\"sketch folder problem\",\r\n+                  \"Could not locate default sketch folder location.\", e);\r\n+      }\r\n+\r\n+    } else if (isWindows()) {\r\n+      // looking for Documents and Settings/blah/My Documents/Arduino\r\n+      // (though using a reg key since it's different on other platforms)\r\n+\r\n+      // http://support.microsoft.com/?kbid=221837&sd=RMVP\r\n+      // The path to the My Documents folder is stored in the\r\n+      // following registry key, where path is the complete path\r\n+      // to your storage location:\r\n+      // HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\r\n+      // Value Name: Personal\r\n+      // Value Type: REG_SZ\r\n+      // Value Data: path\r\n+\r\n+      try {\r\n+        RegistryKey topKey = Registry.HKEY_CURRENT_USER;\r\n+\r\n+        String localKeyPath =\r\n+          \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\" +\r\n+          \"\\\\Explorer\\\\Shell Folders\";\r\n+        RegistryKey localKey = topKey.openSubKey(localKeyPath);\r\n+        String personalPath = cleanKey(localKey.getStringValue(\"Personal\"));\r\n+        //topKey.closeKey();  // necessary?\r\n+        //localKey.closeKey();\r\n+        sketchbookFolder = new File(personalPath, \"Arduino\");\r\n+\r\n+      } catch (Exception e) {\r\n+        showError(\"Problem getting documents folder\",\r\n+                  \"Error getting the Arduino sketchbook folder.\", e);\r\n+      }\r\n+\r\n+    } else {\r\n+      // on linux (or elsewhere?) prompt the user for the location\r\n+      JFileChooser fc = new JFileChooser();\r\n+      fc.setDialogTitle(\"Select the folder where \" +\r\n+                        \"Arduino programs should be stored...\");\r\n+      //fc.setSelectedFile(new File(sketchbookLocationField.getText()));\r\n+      fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);\r\n+\r\n+      int returned = fc.showOpenDialog(new JDialog());\r\n+      if (returned == JFileChooser.APPROVE_OPTION) {\r\n+        //File file = fc.getSelectedFile();\r\n+        //sketchbookLocationField.setText(file.getAbsolutePath());\r\n+        sketchbookFolder = fc.getSelectedFile();\r\n+\r\n+      } else {\r\n+        System.exit(0);\r\n+      }\r\n+    }\r\n+\r\n+    // create the folder if it doesn't exist already\r\n+    boolean result = true;\r\n+    if (!sketchbookFolder.exists()) {\r\n+      result = sketchbookFolder.mkdirs();\r\n+    }\r\n+\r\n+    if (!result) {\r\n+      // try the fallback location\r\n+      System.out.println(\"Using fallback path for sketchbook.\");\r\n+      String fallback = Preferences.get(\"sketchbook.path.fallback\");\r\n+      sketchbookFolder = new File(fallback);\r\n+      if (!sketchbookFolder.exists()) {\r\n+        result = sketchbookFolder.mkdirs();\r\n+      }\r\n+    }\r\n+\r\n+    if (!result) {\r\n+      showError(\"error\",\r\n+                \"Arduino cannot run because it could not\\n\" +\r\n+                \"create a folder to store your sketchbook.\", null);\r\n+    }\r\n+\r\n+    return sketchbookFolder;\r\n+  }\r\n+\r\n+\r\n+  static public String cleanKey(String what) {\r\n+    // jnireg seems to be reading the chars as bytes\r\n+    // so maybe be as simple as & 0xff and then running through decoder\r\n+\r\n+    char c[] = what.toCharArray();\r\n+\r\n+    // if chars are in the tooHigh range, it's prolly because\r\n+    // a byte from the jni registry was turned into a char\r\n+    // and there was a sign extension.\r\n+    // e.g. 0xFC (252, umlaut u) became 0xFFFC (65532).\r\n+    // but on a japanese system, maybe this is two-byte and ok?\r\n+    int tooHigh = 65536 - 128;\r\n+    for (int i = 0; i < c.length; i++) {\r\n+      if (c[i] >= tooHigh) c[i] &= 0xff;\r\n+\r\n+      /*\r\n+      if ((c[i] >= 32) && (c[i] < 128)) {\r\n+        System.out.print(c[i]);\r\n+      } else {\r\n+        System.out.print(\"[\" + PApplet.hex(c[i]) + \"]\");\r\n+      }\r\n+      */\r\n+    }\r\n+    //System.out.println();\r\n+    return new String(c);\r\n+  }\r\n+\r\n+\r\n+  // .................................................................\r\n+\r\n+\r\n+  /**\r\n+   * Given the reference filename from the keywords list,\r\n+   * builds a URL and passes it to openURL.\r\n+   */\r\n+  static public void showReference(String referenceFile) {\r\n+    String currentDir = System.getProperty(\"user.dir\");\r\n+    openURL(currentDir + File.separator +\r\n+            \"reference\" + File.separator +\r\n+            referenceFile + \".html\");\r\n+  }\r\n+\r\n+\r\n+  /**\r\n+   * Implements the cross-platform headache of opening URLs\r\n+   */\r\n+  static public void openURL(String url) {\r\n+    //System.out.println(\"opening url \" + url);\r\n+    try {\r\n+      if (Base.isWindows()) {\r\n+        // this is not guaranteed to work, because who knows if the\r\n+        // path will always be c:\\progra~1 et al. also if the user has\r\n+        // a different browser set as their default (which would\r\n+        // include me) it'd be annoying to be dropped into ie.\r\n+        //Runtime.getRuntime().exec(\"c:\\\\progra~1\\\\intern~1\\\\iexplore \"\r\n+        // + currentDir\r\n+\r\n+        // the following uses a shell execute to launch the .html file\r\n+        // note that under cygwin, the .html files have to be chmodded +x\r\n+        // after they're unpacked from the zip file. i don't know why,\r\n+        // and don't understand what this does in terms of windows\r\n+        // permissions. without the chmod, the command prompt says\r\n+        // \"Access is denied\" in both cygwin and the \"dos\" prompt.\r\n+        //Runtime.getRuntime().exec(\"cmd /c \" + currentDir + \"\\\\reference\\\\\" +\r\n+        //                    referenceFile + \".html\");\r\n+        if (url.startsWith(\"http://\")) {\r\n+          // open dos prompt, give it 'start' command, which will\r\n+          // open the url properly. start by itself won't work since\r\n+          // it appears to need cmd\r\n+          Runtime.getRuntime().exec(\"cmd /c start \" + url);\r\n+        } else {\r\n+          // just launching the .html file via the shell works\r\n+          // but make sure to chmod +x the .html files first\r\n+          // also place quotes around it in case there's a space\r\n+          // in the user.dir part of the url\r\n+          Runtime.getRuntime().exec(\"cmd /c \\\"\" + url + \"\\\"\");\r\n+        }\r\n+\r\n+      } else if (Base.isMacOS()) {\r\n+        //com.apple.eio.FileManager.openURL(url);\r\n+\r\n+        if (!url.startsWith(\"http://\")) {\r\n+          // prepend file:// on this guy since it's a file\r\n+          url = \"file://\" + url;\r\n+\r\n+          // replace spaces with %20 for the file url\r\n+          // otherwise the mac doesn't like to open it\r\n+          // can't just use URLEncoder, since that makes slashes into\r\n+          // %2F characters, which is no good. some might say \"useless\"\r\n+          if (url.indexOf(' ') != -1) {\r\n+            StringBuffer sb = new StringBuffer();\r\n+            char c[] = url.toCharArray();\r\n+            for (int i = 0; i < c.length; i++) {\r\n+              if (c[i] == ' ') {\r\n+                sb.append(\"%20\");\r\n+              } else {\r\n+                sb.append(c[i]);\r\n+              }\r\n+            }\r\n+            url = sb.toString();\r\n+          }\r\n+        }\r\n+        com.apple.mrj.MRJFileUtils.openURL(url);\r\n+\r\n+      } else if (Base.isLinux()) {\r\n+        // how's mozilla sound to ya, laddie?\r\n+        //Runtime.getRuntime().exec(new String[] { \"mozilla\", url });\r\n+        String browser = Preferences.get(\"browser\");\r\n+        Runtime.getRuntime().exec(new String[] { browser, url });\r\n+\r\n+      } else {\r\n+        System.err.println(\"unspecified platform\");\r\n+      }\r\n+\r\n+    } catch (IOException e) {\r\n+      Base.showWarning(\"Could not open URL\",\r\n+                          \"An error occurred while trying to open\\n\" + url, e);\r\n+    }\r\n+  }\r\n+\r\n+\r\n+  /**\r\n+   * Implements the other cross-platform headache of opening\r\n+   * a folder in the machine's native file browser.\r\n+   */\r\n+  static public void openFolder(File file) {\r\n+    try {\r\n+      String folder = file.getAbsolutePath();\r\n+\r\n+      if (Base.isWindows()) {\r\n+        // doesn't work\r\n+        //Runtime.getRuntime().exec(\"cmd /c \\\"\" + folder + \"\\\"\");\r\n+\r\n+        // works fine on winxp, prolly win2k as well\r\n+        Runtime.getRuntime().exec(\"explorer \\\"\" + folder + \"\\\"\");\r\n+\r\n+        // not tested\r\n+        //Runtime.getRuntime().exec(\"start explorer \\\"\" + folder + \"\\\"\");\r\n+\r\n+      } else if (Base.isMacOS()) {\r\n+        openURL(folder);  // handles char replacement, etc\r\n+\r\n+      }\r\n+    } catch (IOException e) {\r\n+      e.printStackTrace();\r\n+    }\r\n+  }\r\n+\r\n+\r\n+  /**\r\n+   * \"No cookie for you\" type messages. Nothing fatal or all that\r\n+   * much of a bummer, but something to notify the user about.\r\n+   */\r\n+  static public void showMessage(String title, String message) {\r\n+    if (title == null) title = \"Message\";\r\n+    JOptionPane.showMessageDialog(new Frame(), message, title,\r\n+                                  JOptionPane.INFORMATION_MESSAGE);\r\n+  }\r\n+\r\n+\r\n+  /**\r\n+   * Non-fatal error message with optional stack trace side dish.\r\n+   */\r\n+  static public void showWarning(String title, String message,\r\n+                                 Exception e) {\r\n+    if (title == null) title = \"Warning\";\r\n+    JOptionPane.showMessageDialog(new Frame(), message, title,\r\n+                                  JOptionPane.WARNING_MESSAGE);\r\n+\r\n+    //System.err.println(e.toString());\r\n+    if (e != null) e.printStackTrace();\r\n+  }\r\n+\r\n+\r\n+  /**\r\n+   * Show an error message that's actually fatal to the program.\r\n+   * This is an error that can't be recovered. Use showWarning()\r\n+   * for errors that allow P5 to continue running.\r\n+   */\r\n+  static public void showError(String title, String message,\r\n+                               Exception e) {\r\n+    if (title == null) title = \"Error\";\r\n+    JOptionPane.showMessageDialog(new Frame(), message, title,\r\n+                                  JOptionPane.ERROR_MESSAGE);\r\n+\r\n+    if (e != null) e.printStackTrace();\r\n+    System.exit(1);\r\n+  }\r\n+\r\n+\r\n+  // ...................................................................\r\n+\r\n+\r\n+  static public Image getImage(String name, Component who) {\r\n+    Image image = null;\r\n+    Toolkit tk = Toolkit.getDefaultToolkit();\r\n+\r\n+    //if ((Base.platform == Base.MACOSX) ||\r\n+    //(Base.platform == Base.MACOS9)) {\r\n+    image = tk.getImage(\"lib/\" + name);\r\n+    //} else {\r\n+    //image = tk.getImage(who.getClass().getResource(name));\r\n+    //}\r\n+\r\n+    //image =  tk.getImage(\"lib/\" + name);\r\n+    //URL url = PdeApplet.class.getResource(name);\r\n+    //image = tk.getImage(url);\r\n+    //}\r\n+    //MediaTracker tracker = new MediaTracker(applet);\r\n+    MediaTracker tracker = new MediaTracker(who); //frame);\r\n+    tracker.addImage(image, 0);\r\n+    try {\r\n+      tracker.waitForAll();\r\n+    } catch (InterruptedException e) { }\r\n+    return image;\r\n+  }\r\n+\r\n+\r\n+  static public InputStream getStream(String filename) throws IOException {\r\n+    //if (Base.platform == Base.MACOSX) {\r\n+    // macos doesn't seem to think that files in the lib folder\r\n+    // are part of the resources, unlike windows or linux.\r\n+    // actually, this is only the case when running as a .app,\r\n+    // since it works fine from run.sh, but not Arduino.app\r\n+    return new FileInputStream(\"lib/\" + filename);\r\n+    //}\r\n+\r\n+    // all other, more reasonable operating systems\r\n+    //return cls.getResource(filename).openStream();\r\n+    //return Base.class.getResource(filename).openStream();\r\n+  }\r\n+\r\n+\r\n+  // ...................................................................\r\n+\r\n+\r\n+  static public byte[] grabFile(File file) throws IOException {\r\n+    int size = (int) file.length();\r\n+    FileInputStream input = new FileInputStream(file);\r\n+    byte buffer[] = new byte[size];\r\n+    int offset = 0;\r\n+    int bytesRead;\r\n+    while ((bytesRead = input.read(buffer, offset, size-offset)) != -1) {\r\n+      offset += bytesRead;\r\n+      if (bytesRead == 0) break;\r\n+    }\r\n+    input.close();  // weren't properly being closed\r\n+    input = null;\r\n+    return buffer;\r\n+  }\r\n+\r\n+\r\n+  static public void copyFile(File afile, File bfile) throws IOException {\r\n+    InputStream from = new BufferedInputStream(new FileInputStream(afile));\r\n+    OutputStream to = new BufferedOutputStream(new FileOutputStream(bfile));\r\n+    byte[] buffer = new byte[16 * 1024];\r\n+    int bytesRead;\r\n+    while ((bytesRead = from.read(buffer)) != -1) {\r\n+      to.write(buffer, 0, bytesRead);\r\n+    }\r\n+    to.flush();\r\n+    from.close(); // ??\r\n+    from = null;\r\n+    to.close(); // ??\r\n+    to = null;\r\n+\r\n+    bfile.setLastModified(afile.lastModified());  // jdk13+ required\r\n+  //} catch (IOException e) {\r\n+  //  e.printStackTrace();\r\n+  //}\r\n+  }\r\n+\r\n+\r\n+  /**\r\n+   * Grab the contents of a file as a string.\r\n+   */\r\n+  static public String loadFile(File file) throws IOException {\r\n+    // empty code file.. no worries, might be getting filled up later\r\n+    if (file.length() == 0) return \"\";\r\n+\r\n+    InputStreamReader isr = new InputStreamReader(new FileInputStream(file));\r\n+    BufferedReader reader = new BufferedReader(isr);\r\n+\r\n+    StringBuffer buffer = new StringBuffer();\r\n+    String line = null;\r\n+    while ((line = reader.readLine()) != null) {\r\n+      buffer.append(line);\r\n+      buffer.append('\\n');\r\n+    }\r\n+    reader.close();\r\n+    return buffer.toString();\r\n+  }\r\n+\r\n+\r\n+  /**\r\n+   * Spew the contents of a String object out to a file.\r\n+   */\r\n+  static public void saveFile(String str,\r\n+                              File file) throws IOException {\r\n+\r\n+    ByteArrayInputStream bis = new ByteArrayInputStream(str.getBytes());\r\n+    InputStreamReader isr = new InputStreamReader(bis);\r\n+    BufferedReader reader = new BufferedReader(isr);\r\n+\r\n+    FileWriter fw = new FileWriter(file);\r\n+    PrintWriter writer = new PrintWriter(new BufferedWriter(fw));\r\n+\r\n+    String line = null;\r\n+    while ((line = reader.readLine()) != null) {\r\n+      writer.println(line);\r\n+    }\r\n+    writer.flush();\r\n+    writer.close();\r\n+  }\r\n+\r\n+\r\n+  static public void copyDir(File sourceDir,\r\n+                             File targetDir) throws IOException {\r\n+    targetDir.mkdirs();\r\n+    String files[] = sourceDir.list();\r\n+    for (int i = 0; i < files.length; i++) {\r\n+      if (files[i].equals(\".\") || files[i].equals(\"..\")) continue;\r\n+      File source = new File(sourceDir, files[i]);\r\n+      File target = new File(targetDir, files[i]);\r\n+      if (source.isDirectory()) {\r\n+        //target.mkdirs();\r\n+        copyDir(source, target);\r\n+        target.setLastModified(source.lastModified());\r\n+      } else {\r\n+        copyFile(source, target);\r\n+      }\r\n+    }\r\n+  }\r\n+\r\n+\r\n+  /**\r\n+   * Remove all files in a directory and the directory itself.\r\n+   */\r\n+  static public void removeDir(File dir) {\r\n+    if (dir.exists()) {\r\n+      removeDescendants(dir);\r\n+      dir.delete();\r\n+    }\r\n+  }\r\n+\r\n+\r\n+  /**\r\n+   * Recursively remove all files within a directory,\r\n+   * used with removeDir(), or when the contents of a dir\r\n+   * should be removed, but not the directory itself.\r\n+   * (i.e. when cleaning temp files from lib/build)\r\n+   */\r\n+  static public void removeDescendants(File dir) {\r\n+    if (!dir.exists()) return;\r\n+\r\n+    String files[] = dir.list();\r\n+    for (int i = 0; i < files.length; i++) {\r\n+      if (files[i].equals(\".\") || files[i].equals(\"..\")) continue;\r\n+      File dead = new File(dir, files[i]);\r\n+      if (!dead.isDirectory()) {\r\n+        if (!Preferences.getBoolean(\"compiler.save_build_files\")) {\r\n+          if (!dead.delete()) {\r\n+            // temporarily disabled\r\n+            //System.err.println(\"couldn't delete \" + dead);\r\n+          }\r\n+        }\r\n+      } else {\r\n+        removeDir(dead);\r\n+        //dead.delete();\r\n+      }\r\n+    }\r\n+  }\r\n+\r\n+\r\n+  /**\r\n+   * Calculate the size of the contents of a folder.\r\n+   * Used to determine whether sketches are empty or not.\r\n+   * Note that the function calls itself recursively.\r\n+   */\r\n+  static public int calcFolderSize(File folder) {\r\n+    int size = 0;\r\n+\r\n+    String files[] = folder.list();\r\n+    // null if folder doesn't exist, happens when deleting sketch\r\n+    if (files == null) return -1;\r\n+\r\n+    for (int i = 0; i < files.length; i++) {\r\n+      if (files[i].equals(\".\") || (files[i].equals(\"..\")) ||\r\n+          files[i].equals(\".DS_Store\")) continue;\r\n+      File fella = new File(folder, files[i]);\r\n+      if (fella.isDirectory()) {\r\n+        size += calcFolderSize(fella);\r\n+      } else {\r\n+        size += (int) fella.length();\r\n+      }\r\n+    }\r\n+    return size;\r\n+  }\r\n+\r\n+\r\n+  /**\r\n+   * Equivalent to the one in PApplet, but static (die() is removed)\r\n+   */\r\n+  static public String[] loadStrings(File file) {\r\n+    try {\r\n+      FileInputStream input = new FileInputStream(file);\r\n+      BufferedReader reader =\r\n+        new BufferedReader(new InputStreamReader(input));\r\n+\r\n+      String lines[] = new String[100];\r\n+      int lineCount = 0;\r\n+      String line = null;\r\n+      while ((line = reader.readLine()) != null) {\r\n+        if (lineCount == lines.length) {\r\n+          String temp[] = new String[lineCount << 1];\r\n+          System.arraycopy(lines, 0, temp, 0, lineCount);\r\n+          lines = temp;\r\n+        }\r\n+        lines[lineCount++] = line;\r\n+      }\r\n+      reader.close();\r\n+\r\n+      if (lineCount == lines.length) {\r\n+        return lines;\r\n+      }\r\n+\r\n+      // resize array to appropraite amount for these lines\r\n+      String output[] = new String[lineCount];\r\n+      System.arraycopy(lines, 0, output, 0, lineCount);\r\n+      return output;\r\n+\r\n+    } catch (IOException e) {\r\n+      e.printStackTrace();\r\n+    }\r\n+    return null;\r\n+  }\r\n+  \r\n+    //////////////////////////////////////////////////////////////\r\n+\r\n+  // STRINGS\r\n+\r\n+\r\n+  /**\r\n+   * Remove whitespace characters from the beginning and ending\r\n+   * of a String. Works like String.trim() but includes the\r\n+   * unicode nbsp character as well.\r\n+   */\r\n+  static public String trim(String str) {\r\n+    return str.replace('\\u00A0', ' ').trim();\r\n+\r\n+    /*\r\n+    int left = 0;\r\n+    int right = str.length() - 1;\r\n+\r\n+    while ((left <= right) &&\r\n+           (WHITESPACE.indexOf(str.charAt(left)) != -1)) left++;\r\n+    if (left == right) return \"\";\r\n+\r\n+    while (WHITESPACE.indexOf(str.charAt(right)) != -1) --right;\r\n+\r\n+    return str.substring(left, right-left+1);\r\n+    */\r\n+  }\r\n+\r\n+  /**\r\n+   * Join an array of Strings together as a single String,\r\n+   * separated by the whatever's passed in for the separator.\r\n+   */\r\n+  static public String join(String str[], char separator) {\r\n+    return join(str, String.valueOf(separator));\r\n+  }\r\n+\r\n+\r\n+  /**\r\n+   * Join an array of Strings together as a single String,\r\n+   * separated by the whatever's passed in for the separator.\r\n+   * <P>\r\n+   * To use this on numbers, first pass the array to nf() or nfs()\r\n+   * to get a list of String objects, then use join on that.\r\n+   * <PRE>\r\n+   * e.g. String stuff[] = { \"apple\", \"bear\", \"cat\" };\r\n+   *      String list = join(stuff, \", \");\r\n+   *      // list is now \"apple, bear, cat\"</PRE>\r\n+   */\r\n+  static public String join(String str[], String separator) {\r\n+    StringBuffer buffer = new StringBuffer();\r\n+    for (int i = 0; i < str.length; i++) {\r\n+      if (i != 0) buffer.append(separator);\r\n+      buffer.append(str[i]);\r\n+    }\r\n+    return buffer.toString();\r\n+  }\r\n+\r\n+\r\n+  /**\r\n+   * Split the provided String at wherever whitespace occurs.\r\n+   * Multiple whitespace (extra spaces or tabs or whatever)\r\n+   * between items will count as a single break.\r\n+   * <P>\r\n+   * The whitespace characters are \"\\t\\n\\r\\f\", which are the defaults\r\n+   * for java.util.StringTokenizer, plus the unicode non-breaking space\r\n+   * character, which is found commonly on files created by or used\r\n+   * in conjunction with Mac OS X (character 160, or 0x00A0 in hex).\r\n+   * <PRE>\r\n+   * i.e. split(\"a b\") -> { \"a\", \"b\" }\r\n+   *      split(\"a    b\") -> { \"a\", \"b\" }\r\n+   *      split(\"a\\tb\") -> { \"a\", \"b\" }\r\n+   *      split(\"a \\t  b  \") -> { \"a\", \"b\" }</PRE>\r\n+   */\r\n+  static public String[] split(String what) {\r\n+    return split(what, WHITESPACE);\r\n+  }\r\n+\r\n+\r\n+  /**\r\n+   * Splits a string into pieces, using any of the chars in the\r\n+   * String 'delim' as separator characters. For instance,\r\n+   * in addition to white space, you might want to treat commas\r\n+   * as a separator. The delimeter characters won't appear in\r\n+   * the returned String array.\r\n+   * <PRE>\r\n+   * i.e. split(\"a, b\", \" ,\") -> { \"a\", \"b\" }\r\n+   * </PRE>\r\n+   * To include all the whitespace possibilities, use the variable\r\n+   * WHITESPACE, found in PConstants:\r\n+   * <PRE>\r\n+   * i.e. split(\"a   | b\", WHITESPACE + \"|\");  ->  { \"a\", \"b\" }</PRE>\r\n+   */\r\n+  static public String[] split(String what, String delim) {\r\n+    StringTokenizer toker = new StringTokenizer(what, delim);\r\n+    String pieces[] = new String[toker.countTokens()];\r\n+\r\n+    int index = 0;\r\n+    while (toker.hasMoreTokens()) {\r\n+      pieces[index++] = toker.nextToken();\r\n+    }\r\n+    return pieces;\r\n+  }\r\n+\r\n+\r\n+  /**\r\n+   * Split a string into pieces along a specific character.\r\n+   * Most commonly used to break up a String along tab characters.\r\n+   * <P>\r\n+   * This operates differently than the others, where the\r\n+   * single delimeter is the only breaking point, and consecutive\r\n+   * delimeters will produce an empty string (\"\"). This way,\r\n+   * one can split on tab characters, but maintain the column\r\n+   * alignments (of say an excel file) where there are empty columns.\r\n+   */\r\n+  static public String[] split(String what, char delim) {\r\n+    // do this so that the exception occurs inside the user's\r\n+    // program, rather than appearing to be a bug inside split()\r\n+    if (what == null) return null;\r\n+    //return split(what, String.valueOf(delim));  // huh\r\n+\r\n+    char chars[] = what.toCharArray();\r\n+    int splitCount = 0; //1;\r\n+    for (int i = 0; i < chars.length; i++) {\r\n+      if (chars[i] == delim) splitCount++;\r\n+    }\r\n+    // make sure that there is something in the input string\r\n+    //if (chars.length > 0) {\r\n+      // if the last char is a delimeter, get rid of it..\r\n+      //if (chars[chars.length-1] == delim) splitCount--;\r\n+      // on second thought, i don't agree with this, will disable\r\n+    //}\r\n+    if (splitCount == 0) {\r\n+      String splits[] = new String[1];\r\n+      splits[0] = new String(what);\r\n+      return splits;\r\n+    }\r\n+    //int pieceCount = splitCount + 1;\r\n+    String splits[] = new String[splitCount + 1];\r\n+    int splitIndex = 0;\r\n+    int startIndex = 0;\r\n+    for (int i = 0; i < chars.length; i++) {\r\n+      if (chars[i] == delim) {\r\n+        splits[splitIndex++] =\r\n+          new String(chars, startIndex, i-startIndex);\r\n+        startIndex = i + 1;\r\n+      }\r\n+    }\r\n+    //if (startIndex != chars.length) {\r\n+      splits[splitIndex] =\r\n+        new String(chars, startIndex, chars.length-startIndex);\r\n+    //}\r\n+    return splits;\r\n+  }\r\n+\r\n+  \r\n+    \r\n+  \r\n+}\r",
      "parent_sha": "601dafd7b6eebb9f4e22f4e84b52c3156cef52eb"
    }
  },
  {
    "oid": "f23577499f8fa9273727e1016217f47ce909ad5f",
    "message": "Split pane is now sized correctly",
    "date": "2016-01-26T11:10:12Z",
    "url": "https://github.com/arduino/Arduino/commit/f23577499f8fa9273727e1016217f47ce909ad5f",
    "details": {
      "sha": "8b7825d7325e342999e9c33d6940ad56b4e785ee",
      "filename": "app/src/processing/app/Editor.java",
      "status": "modified",
      "additions": 3,
      "deletions": 7,
      "changes": 10,
      "blob_url": "https://github.com/arduino/Arduino/blob/f23577499f8fa9273727e1016217f47ce909ad5f/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/f23577499f8fa9273727e1016217f47ce909ad5f/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java?ref=f23577499f8fa9273727e1016217f47ce909ad5f",
      "patch": "@@ -79,6 +79,7 @@\n import java.util.zip.ZipFile;\n \n import static processing.app.I18n.tr;\n+import static processing.app.Theme.scale;\n \n /**\n  * Main editor panel for the Processing Development Environment.\n@@ -304,7 +305,6 @@ public void windowDeactivated(WindowEvent e) {\n     upper.add(scrollPane);\n     splitPane = new JSplitPane(JSplitPane.VERTICAL_SPLIT, upper, consolePanel);\n \n-    splitPane.setOneTouchExpandable(true);\n     // repaint child panes while resizing\n     splitPane.setContinuousLayout(true);\n     // if window increases in size, give all of increase to\n@@ -321,15 +321,11 @@ public void windowDeactivated(WindowEvent e) {\n     Keys.killBinding(splitPane, Keys.ctrl(KeyEvent.VK_TAB));\n     Keys.killBinding(splitPane, Keys.ctrlShift(KeyEvent.VK_TAB));\n \n-    // the default size on windows is too small and kinda ugly\n-    int dividerSize = PreferencesData.getInteger(\"editor.divider.size\");\n-    if (dividerSize != 0) {\n-      splitPane.setDividerSize(dividerSize);\n-    }\n+    splitPane.setDividerSize(scale(splitPane.getDividerSize()));\n \n     // the following changed from 600, 400 for netbooks\n     // http://code.google.com/p/arduino/issues/detail?id=52\n-    splitPane.setMinimumSize(new Dimension(600, 100));\n+    splitPane.setMinimumSize(scale(new Dimension(600, 100)));\n     box.add(splitPane);\n \n     // hopefully these are no longer needed w/ swing",
      "parent_sha": "885a51709938ccba2c317f155591e8df52a17059"
    }
  },
  {
    "oid": "af0d8c7f5c258e7a6b4d2e9bf839958464d362c6",
    "message": "Let Sketch.getExtensions() return a List\n\nThis simplifies upcoming changes.",
    "date": "2014-11-13T15:18:39Z",
    "url": "https://github.com/arduino/Arduino/commit/af0d8c7f5c258e7a6b4d2e9bf839958464d362c6",
    "details": {
      "sha": "35109ab80726061bd17307514ae5910033d7c8e5",
      "filename": "app/src/processing/app/Sketch.java",
      "status": "modified",
      "additions": 4,
      "deletions": 8,
      "changes": 12,
      "blob_url": "https://github.com/arduino/Arduino/blob/af0d8c7f5c258e7a6b4d2e9bf839958464d362c6/app%2Fsrc%2Fprocessing%2Fapp%2FSketch.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/af0d8c7f5c258e7a6b4d2e9bf839958464d362c6/app%2Fsrc%2Fprocessing%2Fapp%2FSketch.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FSketch.java?ref=af0d8c7f5c258e7a6b4d2e9bf839958464d362c6",
      "patch": "@@ -170,7 +170,7 @@ protected void load() throws IOException {\n \n     code = new SketchCode[list.length];\n \n-    String[] extensions = getExtensions();\n+    List<String> extensions = getExtensions();\n \n     for (String filename : list) {\n       // Ignoring the dot prefix files is especially important to avoid files\n@@ -1849,11 +1849,7 @@ public boolean isDefaultExtension(String what) {\n    * extensions.\n    */\n   public boolean validExtension(String what) {\n-    String[] ext = getExtensions();\n-    for (int i = 0; i < ext.length; i++) {\n-      if (ext[i].equals(what)) return true;\n-    }\n-    return false;\n+    return getExtensions().contains(what);\n   }\n \n \n@@ -1873,8 +1869,8 @@ public List<String> getHiddenExtensions() {\n   /**\n    * Returns a String[] array of proper extensions.\n    */\n-  public String[] getExtensions() {\n-    return new String[] { \"ino\", \"pde\", \"c\", \"cpp\", \"h\" };\n+  public List<String> getExtensions() {\n+    return Arrays.asList(\"ino\", \"pde\", \"c\", \"cpp\", \"h\");\n   }\n \n ",
      "parent_sha": "a6013720e5d2222a08956a09be6b60668862687f"
    }
  },
  {
    "oid": "90a533b82c688c06f68269ca9344f291c372ae06",
    "message": "Using FileUtils.copyFile instead of dealing with raw streams",
    "date": "2015-05-13T08:16:09Z",
    "url": "https://github.com/arduino/Arduino/commit/90a533b82c688c06f68269ca9344f291c372ae06",
    "details": {
      "sha": "313a6ed575ee1210f5a1bcc96ec4420a2928a38f",
      "filename": "arduino-core/src/processing/app/debug/Compiler.java",
      "status": "modified",
      "additions": 1,
      "deletions": 11,
      "changes": 12,
      "blob_url": "https://github.com/arduino/Arduino/blob/90a533b82c688c06f68269ca9344f291c372ae06/arduino-core%2Fsrc%2Fprocessing%2Fapp%2Fdebug%2FCompiler.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/90a533b82c688c06f68269ca9344f291c372ae06/arduino-core%2Fsrc%2Fprocessing%2Fapp%2Fdebug%2FCompiler.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fprocessing%2Fapp%2Fdebug%2FCompiler.java?ref=90a533b82c688c06f68269ca9344f291c372ae06",
      "patch": "@@ -1158,7 +1158,6 @@ void saveHex() throws RunnerException {\n     PreferencesMap dict = new PreferencesMap(prefs);\n     dict.put(\"ide_version\", \"\" + BaseNoGui.REVISION);\n \n-    String[] cmdArray;\n     try {\n       String tmp_file = prefs.getOrExcept(\"recipe.output.tmp_file\");\n       tmp_file = StringReplacer.replaceFromMapping(tmp_file, dict);\n@@ -1168,16 +1167,7 @@ void saveHex() throws RunnerException {\n       File hexFile = new File(prefs.get(\"build.path\") + \"/\" + tmp_file);\n       File saveFile = new File(sketch.getFolder().getAbsolutePath() + \"/\" + save_file);\n \n-      FileReader in = new FileReader(hexFile);\n-      FileWriter out = new FileWriter(saveFile);\n-\n-      int c;\n-      while ((c = in.read()) != -1)\n-        out.write(c);\n-\n-      in.close();\n-      out.close();\n-      \n+      FileUtils.copyFile(hexFile, saveFile);\n     } catch (Exception e) {\n       throw new RunnerException(e);\n     }",
      "parent_sha": "166c1aa7bbd31726520b2118733e56ef67b21998"
    }
  },
  {
    "oid": "05bf2b0be90bbd94271cee599047006a2c48a4f7",
    "message": "PrePreprocess.scrubComments doesn't properly work: using RegExp from PrePreprocess.strip. Fixes #817",
    "date": "2013-11-11T11:18:42Z",
    "url": "https://github.com/arduino/Arduino/commit/05bf2b0be90bbd94271cee599047006a2c48a4f7",
    "details": {
      "sha": "27a28b4551b46a430778da2ec4ee6c6aa57e118c",
      "filename": "app/src/processing/app/preproc/PdePreprocessor.java",
      "status": "modified",
      "additions": 9,
      "deletions": 42,
      "changes": 51,
      "blob_url": "https://github.com/arduino/Arduino/blob/05bf2b0be90bbd94271cee599047006a2c48a4f7/app%2Fsrc%2Fprocessing%2Fapp%2Fpreproc%2FPdePreprocessor.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/05bf2b0be90bbd94271cee599047006a2c48a4f7/app%2Fsrc%2Fprocessing%2Fapp%2Fpreproc%2FPdePreprocessor.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2Fpreproc%2FPdePreprocessor.java?ref=05bf2b0be90bbd94271cee599047006a2c48a4f7",
      "patch": "@@ -334,49 +334,16 @@ public ArrayList<String> prototypes(String in) {\n    * Utility function used here and in the preprocessor.\n    */\n   static public String scrubComments(String what) {\n-    char p[] = what.toCharArray();\n-\n-    int index = 0;\n-    while (index < p.length) {\n-      // for any double slash comments, ignore until the end of the line\n-      if ((p[index] == '/') &&\n-          (index < p.length - 1) &&\n-          (p[index+1] == '/')) {\n-        p[index++] = ' ';\n-        p[index++] = ' ';\n-        while ((index < p.length) &&\n-               (p[index] != '\\n')) {\n-          p[index++] = ' ';\n-        }\n+    List<Pattern> patterns = new ArrayList<Pattern>();\n+    patterns.add(Pattern.compile(\"('\\\\\\\\\\\"')\", Pattern.MULTILINE));\n+    patterns.add(Pattern.compile(\"(//.*?$)\", Pattern.MULTILINE));\n+    patterns.add(Pattern.compile(\"(/\\\\*[^*]*(?:\\\\*(?!/)[^*]*)*\\\\*/)\", Pattern.MULTILINE));\n \n-        // check to see if this is the start of a new multiline comment.\n-        // if it is, then make sure it's actually terminated somewhere.\n-      } else if ((p[index] == '/') &&\n-                 (index < p.length - 1) &&\n-                 (p[index+1] == '*')) {\n-        p[index++] = ' ';\n-        p[index++] = ' ';\n-        boolean endOfRainbow = false;\n-        while (index < p.length - 1) {\n-          if ((p[index] == '*') && (p[index+1] == '/')) {\n-            p[index++] = ' ';\n-            p[index++] = ' ';\n-            endOfRainbow = true;\n-            break;\n-\n-          } else {\n-            // continue blanking this area\n-            p[index++] = ' ';\n-          }\n-        }\n-        if (!endOfRainbow) {\n-          throw new RuntimeException(_(\"Missing the */ from the end of a \" +\n-                                       \"/* comment */\"));\n-        }\n-      } else {  // any old character, move along\n-        index++;\n-      }\n+    String result = what;\n+    for (Pattern p : patterns) {\n+      result = p.matcher(result).replaceAll(\"\");\n     }\n-    return new String(p);\n+\n+    return result;\n   }\n }",
      "parent_sha": "07f8c691b4cf9242c2f1c45ad1bc130da9437a23"
    }
  },
  {
    "oid": "03637028077b27034f70cea27d1f49e0665410ad",
    "message": "When exporting compiled binary of an example (readonly) sketch, users are forced to save it into their sketchbook. Fixes #3127",
    "date": "2015-05-20T16:04:02Z",
    "url": "https://github.com/arduino/Arduino/commit/03637028077b27034f70cea27d1f49e0665410ad",
    "details": {
      "sha": "780ddbf0b5227288c540e69856c41fe357df6276",
      "filename": "app/src/processing/app/Editor.java",
      "status": "modified",
      "additions": 27,
      "deletions": 5,
      "changes": 32,
      "blob_url": "https://github.com/arduino/Arduino/blob/03637028077b27034f70cea27d1f49e0665410ad/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/03637028077b27034f70cea27d1f49e0665410ad/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java?ref=03637028077b27034f70cea27d1f49e0665410ad",
      "patch": "@@ -25,6 +25,7 @@\n import cc.arduino.packages.MonitorFactory;\n \n import cc.arduino.view.StubMenuListener;\n+import com.google.common.base.Predicate;\n import com.jcraft.jsch.JSchException;\n import jssc.SerialPortException;\n import processing.app.debug.*;\n@@ -68,6 +69,25 @@\n @SuppressWarnings(\"serial\")\n public class Editor extends JFrame implements RunnerListener {\n \n+  private static class ShouldSaveIfModified implements Predicate<Sketch> {\n+\n+    @Override\n+    public boolean apply(Sketch sketch) {\n+      if (PreferencesData.getBoolean(\"editor.save_on_verify\")) {\n+        return sketch.isModified() && !sketch.isReadOnly();\n+      }\n+      return false;\n+    }\n+  }\n+\n+  private static class ShouldSaveReadOnly implements Predicate<Sketch> {\n+\n+    @Override\n+    public boolean apply(Sketch sketch) {\n+      return sketch.isReadOnly();\n+    }\n+  }\n+\n   private final static List<String> BOARD_PROTOCOLS_ORDER = Arrays.asList(new String[]{\"serial\", \"network\"});\n   private final static List<String> BOARD_PROTOCOLS_ORDER_TRANSLATIONS = Arrays.asList(new String[]{_(\"Serial ports\"), _(\"Network ports\")});\n \n@@ -690,7 +710,7 @@ public void actionPerformed(ActionEvent e) {\n     item = newJMenuItemAlt(_(\"Export compiled Binary\"), 'S');\n     item.addActionListener(new ActionListener() {\n         public void actionPerformed(ActionEvent e) {\n-          handleRun(false, Editor.this.presentAndSaveHandler, Editor.this.runAndSaveHandler);\n+          handleRun(false, new ShouldSaveReadOnly(), Editor.this.presentAndSaveHandler, Editor.this.runAndSaveHandler);\n         }\n       });\n     sketchMenu.add(item);\n@@ -2005,11 +2025,13 @@ protected void handleFindReference() {\n    * @param nonVerboseHandler\n    */\n   public void handleRun(final boolean verbose, Runnable verboseHandler, Runnable nonVerboseHandler) {\n+    handleRun(verbose, new ShouldSaveIfModified(), verboseHandler, nonVerboseHandler);\n+  }\n+\n+  public void handleRun(final boolean verbose, Predicate<Sketch> shouldSavePredicate, Runnable verboseHandler, Runnable nonVerboseHandler) {\n     internalCloseRunner();\n-    if (PreferencesData.getBoolean(\"editor.save_on_verify\")) {\n-      if (sketch.isModified() && !sketch.isReadOnly()) {\n-        handleSave(true);\n-      }\n+    if (shouldSavePredicate.apply(sketch)) {\n+      handleSave(true);\n     }\n     running = true;\n     toolbar.activate(EditorToolbar.RUN);",
      "parent_sha": "9166828bfe36a04ae0089b32b5b0ac93ca3bf7ca"
    }
  },
  {
    "oid": "62511c088958ddd17f1b47ef2c0184765d55aee3",
    "message": "Fixed error message",
    "date": "2018-08-10T09:01:06Z",
    "url": "https://github.com/arduino/Arduino/commit/62511c088958ddd17f1b47ef2c0184765d55aee3",
    "details": {
      "sha": "4193b2ba088b8d0b1582ba7bf4e48de8284cde96",
      "filename": "arduino-core/src/cc/arduino/contributions/libraries/LibrariesIndexer.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/arduino/Arduino/blob/62511c088958ddd17f1b47ef2c0184765d55aee3/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Flibraries%2FLibrariesIndexer.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/62511c088958ddd17f1b47ef2c0184765d55aee3/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Flibraries%2FLibrariesIndexer.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Flibraries%2FLibrariesIndexer.java?ref=62511c088958ddd17f1b47ef2c0184765d55aee3",
      "patch": "@@ -181,7 +181,7 @@ private void scanInstalledLibraries(UserLibraryFolder folderDesc) {\n               + \"Library folder names must start with a letter or number, followed by letters,\\n\"\n               + \"numbers, dashes, dots and underscores. Maximum length is 63 characters.\"),\n               subfolderName);\n-          BaseNoGui.showMessage(tr(\"Ignoring bad library name\"), mess);\n+          BaseNoGui.showMessage(tr(\"Ignoring library with bad name\"), mess);\n         }\n         continue;\n       }",
      "parent_sha": "bd770ae949ea28f04f10fd6be92a5296082dd6e1"
    }
  },
  {
    "oid": "4813e573c23ee1c7ca358e57b89e3ed93a4d40f6",
    "message": "Fixed typo",
    "date": "2015-06-16T08:52:08Z",
    "url": "https://github.com/arduino/Arduino/commit/4813e573c23ee1c7ca358e57b89e3ed93a4d40f6",
    "details": {
      "sha": "c874c556d836f385c0ff058daa85e3eac7a7efde",
      "filename": "arduino-core/src/cc/arduino/utils/network/FileDownloader.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/arduino/Arduino/blob/4813e573c23ee1c7ca358e57b89e3ed93a4d40f6/arduino-core%2Fsrc%2Fcc%2Farduino%2Futils%2Fnetwork%2FFileDownloader.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/4813e573c23ee1c7ca358e57b89e3ed93a4d40f6/arduino-core%2Fsrc%2Fcc%2Farduino%2Futils%2Fnetwork%2FFileDownloader.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fcc%2Farduino%2Futils%2Fnetwork%2FFileDownloader.java?ref=4813e573c23ee1c7ca358e57b89e3ed93a4d40f6",
      "patch": "@@ -157,7 +157,7 @@ public void download() throws InterruptedException {\n       }\n \n       if (resp < 200 || resp >= 300) {\n-        throw new IOException(\"Recevied invalid http status code from server: \" + resp);\n+        throw new IOException(\"Received invalid http status code from server: \" + resp);\n       }\n \n       // Check for valid content length.",
      "parent_sha": "91df9b1901362a1d64ca3602d58b99903efdbb76"
    }
  },
  {
    "oid": "7d0ffe92b2aac0108ba4bb895e4a4593ba604fef",
    "message": "Lib/Board Manager CRC check is now case insensitive. Fixes #2953",
    "date": "2015-04-10T07:52:31Z",
    "url": "https://github.com/arduino/Arduino/commit/7d0ffe92b2aac0108ba4bb895e4a4593ba604fef",
    "details": {
      "sha": "a3ac4d9ecf181e1eca8ed455706b128c6b7ffb14",
      "filename": "arduino-core/src/cc/arduino/contributions/packages/DownloadableContributionsDownloader.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/arduino/Arduino/blob/7d0ffe92b2aac0108ba4bb895e4a4593ba604fef/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Fpackages%2FDownloadableContributionsDownloader.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/7d0ffe92b2aac0108ba4bb895e4a4593ba604fef/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Fpackages%2FDownloadableContributionsDownloader.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Fpackages%2FDownloadableContributionsDownloader.java?ref=7d0ffe92b2aac0108ba4bb895e4a4593ba604fef",
      "patch": "@@ -67,7 +67,7 @@ public File download(DownloadableContribution contribution,\n     onProgress(progress);\n     String checksum = contribution.getChecksum();\n     String algo = checksum.split(\":\")[0];\n-    if (!FileHash.hash(outputFile, algo).equals(checksum)) {\n+    if (!FileHash.hash(outputFile, algo).equalsIgnoreCase(checksum)) {\n       throw new Exception(_(\"CRC doesn't match. File is corrupted.\"));\n     }\n ",
      "parent_sha": "dd50e6d349e8c018a72f04ce23a2ec2867a681ec"
    }
  },
  {
    "oid": "01d3d02a0fca6c80d76163274c077687c05f1d76",
    "message": "Use the BoardCloudResolver instead of the Platform class to get cloud vid pid",
    "date": "2019-08-02T09:48:07Z",
    "url": "https://github.com/arduino/Arduino/commit/01d3d02a0fca6c80d76163274c077687c05f1d76",
    "details": {
      "sha": "7ce44f56b5dfcd633f3c35f0d5cd54474aa1a91d",
      "filename": "arduino-core/src/cc/arduino/packages/discoverers/serial/SerialDiscovery.java",
      "status": "modified",
      "additions": 5,
      "deletions": 7,
      "changes": 12,
      "blob_url": "https://github.com/arduino/Arduino/blob/01d3d02a0fca6c80d76163274c077687c05f1d76/arduino-core%2Fsrc%2Fcc%2Farduino%2Fpackages%2Fdiscoverers%2Fserial%2FSerialDiscovery.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/01d3d02a0fca6c80d76163274c077687c05f1d76/arduino-core%2Fsrc%2Fcc%2Farduino%2Fpackages%2Fdiscoverers%2Fserial%2FSerialDiscovery.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fcc%2Farduino%2Fpackages%2Fdiscoverers%2Fserial%2FSerialDiscovery.java?ref=01d3d02a0fca6c80d76163274c077687c05f1d76",
      "patch": "@@ -29,17 +29,14 @@\n \n package cc.arduino.packages.discoverers.serial;\n \n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Timer;\n-import java.util.TimerTask;\n-\n import cc.arduino.packages.BoardPort;\n import cc.arduino.packages.Discovery;\n import processing.app.BaseNoGui;\n import processing.app.Platform;\n import processing.app.debug.TargetBoard;\n+import processing.app.helpers.BoardCloudResolver;\n+\n+import java.util.*;\n \n public class SerialDiscovery implements Discovery, Runnable {\n \n@@ -50,6 +47,7 @@ public class SerialDiscovery implements Discovery, Runnable {\n   public boolean uploadInProgress = false;\n   public boolean pausePolling = false;\n   private BoardPort oldUploadBoardPort = null;\n+  private final BoardCloudResolver boardCloudResolver = new BoardCloudResolver();\n \n \n   @Override\n@@ -203,7 +201,7 @@ public synchronized void forceRefresh() {\n           boardPort.getPrefs().put(\"vid\", parts[1]);\n           boardPort.getPrefs().put(\"pid\", parts[2]);\n           // ask Cloud API to match the board with known VID/PID pair\n-          platform.getBoardWithMatchingVidPidFromCloud(parts[1], parts[2]);\n+          boardCloudResolver.getBoardBy(parts[1], parts[2]);\n         } else {\n           boardPort.getPrefs().put(\"vid\", \"0000\");\n           boardPort.getPrefs().put(\"pid\", \"0000\");",
      "parent_sha": "bcb8e90534ac44c00de1b805bdd93be915516799"
    }
  },
  {
    "oid": "0bceb93b7c9d78ace1f2439fc9fcaa04130fb2e8",
    "message": "When closing the last sketch, the window position is saved as default\n\nThis allows the use-case with users editing one sketch at a time, that\nseems to be the most common scenario:\n\n 1. User position the editor as desired\n 2. User close the IDE\n 3. User opens the IDE by double clicking on another .ino file\n 4. The IDE is opened again at the same position\n\nSee #4432",
    "date": "2016-01-22T17:08:49Z",
    "url": "https://github.com/arduino/Arduino/commit/0bceb93b7c9d78ace1f2439fc9fcaa04130fb2e8",
    "details": {
      "sha": "3120bdbda2e202534b6a5535a2d2bfb251b2974e",
      "filename": "app/src/processing/app/Base.java",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/arduino/Arduino/blob/0bceb93b7c9d78ace1f2439fc9fcaa04130fb2e8/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/0bceb93b7c9d78ace1f2439fc9fcaa04130fb2e8/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java?ref=0bceb93b7c9d78ace1f2439fc9fcaa04130fb2e8",
      "patch": "@@ -327,7 +327,7 @@ public Base(String[] args) throws Exception {\n       boolean showEditor = parser.isGuiMode();\n       if (!parser.isForceSavePrefs())\n         PreferencesData.setDoSave(showEditor);\n-      if (handleOpen(file, nextEditorLocation(), showEditor, false) == null) {\n+      if (handleOpen(file, retrieveSketchLocation(\".default\"), showEditor, false) == null) {\n         String mess = I18n.format(tr(\"Failed to open sketch: \\\"{0}\\\"\"), path);\n         // Open failure is fatal in upload/verify mode\n         if (parser.isVerifyOrUploadMode())\n@@ -528,7 +528,10 @@ protected void storeSketches() {\n     PreferencesData.setInteger(\"last.screen.width\", screen.width);\n     PreferencesData.setInteger(\"last.screen.height\", screen.height);\n \n-    String untitledPath = untitledFolder.getAbsolutePath();\n+    // If there is only one sketch opened save his position as default\n+    if (editors.size() == 1) {\n+      storeSketchLocation(editors.get(0), \".default\");\n+    }\n \n     // Save the sketch path and window placement for each open sketch\n     String untitledPath = untitledFolder.getAbsolutePath();",
      "parent_sha": "61f11f60e151c0ddca037ced8483bfe1729f1063"
    }
  },
  {
    "oid": "9c02f932f6d9aaa856d5f9cc4bed0b483343c01e",
    "message": "Serial monitor: added 230400 and 250000 baud rates. Fixes #2796 and #341",
    "date": "2015-05-22T07:46:05Z",
    "url": "https://github.com/arduino/Arduino/commit/9c02f932f6d9aaa856d5f9cc4bed0b483343c01e",
    "details": {
      "sha": "4a1dd81019027aa526591ef6615112d3929079c5",
      "filename": "app/src/processing/app/AbstractMonitor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/arduino/Arduino/blob/9c02f932f6d9aaa856d5f9cc4bed0b483343c01e/app%2Fsrc%2Fprocessing%2Fapp%2FAbstractMonitor.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/9c02f932f6d9aaa856d5f9cc4bed0b483343c01e/app%2Fsrc%2Fprocessing%2Fapp%2FAbstractMonitor.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FAbstractMonitor.java?ref=9c02f932f6d9aaa856d5f9cc4bed0b483343c01e",
      "patch": "@@ -138,7 +138,7 @@ public void actionPerformed(ActionEvent event) {\n \n     String[] serialRateStrings = {\n             \"300\", \"1200\", \"2400\", \"4800\", \"9600\",\n-            \"19200\", \"38400\", \"57600\", \"115200\"\n+            \"19200\", \"38400\", \"57600\", \"115200\", \"230400\", \"250000\"\n     };\n \n     serialRates = new JComboBox();",
      "parent_sha": "76c5d99123953cb12662fad9b58a6cb8d16594ca"
    }
  },
  {
    "oid": "fd1b598ea2007451bb20027c13493df43a9f099a",
    "message": "Show port on status bar only when selected",
    "date": "2018-11-14T16:41:34Z",
    "url": "https://github.com/arduino/Arduino/commit/fd1b598ea2007451bb20027c13493df43a9f099a",
    "details": {
      "sha": "f71dd4573fe930ae8a25534a5d1a41a7340fa224",
      "filename": "app/src/processing/app/EditorLineStatus.java",
      "status": "modified",
      "additions": 11,
      "deletions": 5,
      "changes": 16,
      "blob_url": "https://github.com/arduino/Arduino/blob/fd1b598ea2007451bb20027c13493df43a9f099a/app%2Fsrc%2Fprocessing%2Fapp%2FEditorLineStatus.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/fd1b598ea2007451bb20027c13493df43a9f099a/app%2Fsrc%2Fprocessing%2Fapp%2FEditorLineStatus.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FEditorLineStatus.java?ref=fd1b598ea2007451bb20027c13493df43a9f099a",
      "patch": "@@ -110,11 +110,17 @@ public void paintComponent(Graphics graphics) {\n     g.drawString(text, scale(6), baseline);\n \n     g.setColor(messageForeground);\n-    String tmp = I18n.format(tr(\"{0} on {1}\"), name, serialport);\n-    \n-    Rectangle2D bounds = g.getFontMetrics().getStringBounds(tmp, null);\n-    \n-    g.drawString(tmp, size.width - (int) bounds.getWidth() - RESIZE_IMAGE_SIZE,\n+\n+    String statusText;\n+    if (serialport != null && !serialport.isEmpty()) {\n+      statusText = I18n.format(tr(\"{0} on {1}\"), name, serialport);\n+    } else {\n+      statusText = name;\n+    }\n+\n+    Rectangle2D bounds = g.getFontMetrics().getStringBounds(statusText, null);\n+\n+    g.drawString(statusText, size.width - (int) bounds.getWidth() - RESIZE_IMAGE_SIZE,\n                  baseline);\n \n     if (OSUtils.isMacOS()) {",
      "parent_sha": "cede26883e8b94ee62d72d3f2936eeecf02ffca4"
    }
  },
  {
    "oid": "90ecc3773d919be0303410010589d9cef39d66ff",
    "message": "avoid \"Menu has no enabled items\" exception",
    "date": "2012-11-06T14:16:32Z",
    "url": "https://github.com/arduino/Arduino/commit/90ecc3773d919be0303410010589d9cef39d66ff",
    "details": {
      "sha": "01af9e34899535e6f5032ef50c4a0a6446708cad",
      "filename": "app/src/processing/app/Base.java",
      "status": "modified",
      "additions": 7,
      "deletions": 8,
      "changes": 15,
      "blob_url": "https://github.com/arduino/Arduino/blob/90ecc3773d919be0303410010589d9cef39d66ff/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/90ecc3773d919be0303410010589d9cef39d66ff/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java?ref=90ecc3773d919be0303410010589d9cef39d66ff",
      "patch": "@@ -1140,7 +1140,6 @@ public void rebuildBoardsMenu(JMenu toolsMenu, final Editor editor) {\n     // Cycle through all packages\n     for (TargetPackage targetPackage : packages.values()) {\n       String packageName = targetPackage.getName();\n-      \n       // For every package cycle through all platform\n       for (TargetPlatform targetPlatform : targetPackage.platforms()) {\n         String platformName = targetPlatform.getName();\n@@ -1247,15 +1246,15 @@ public void actionPerformed(ActionEvent e) {\n           }\n         }\n       }\n+    }\n \n-      if (menuItemsToClickAfterStartup.isEmpty()) {\n-        menuItemsToClickAfterStartup.add(selectFirstEnabledMenuItem(boardsMenu));\n-      }\n+    if (menuItemsToClickAfterStartup.isEmpty()) {\n+      menuItemsToClickAfterStartup.add(selectFirstEnabledMenuItem(boardsMenu));\n+    }\n \n-      for (JMenuItem menuItemToClick : menuItemsToClickAfterStartup) {\n-        menuItemToClick.setSelected(true);\n-        menuItemToClick.getAction().actionPerformed(new ActionEvent(this, -1, \"\"));\n-      }\n+    for (JMenuItem menuItemToClick : menuItemsToClickAfterStartup) {\n+      menuItemToClick.setSelected(true);\n+      menuItemToClick.getAction().actionPerformed(new ActionEvent(this, -1, \"\"));\n     }\n   }\n ",
      "parent_sha": "73649c2f60d0a006061382b0966a06e6d0fda7fe"
    }
  },
  {
    "oid": "8afeb501cbdfa722da01390b7301e5038e3c6740",
    "message": "In SketchController.nameCode, only switch tabs when adding file\n\nWhen renaming a file, the current tab is already the correct\none, so no need to switch. This allows looking up the tab index based on\nthe SketchCode object, instead of doing a filename lookup.",
    "date": "2016-08-26T14:42:44Z",
    "url": "https://github.com/arduino/Arduino/commit/8afeb501cbdfa722da01390b7301e5038e3c6740",
    "details": {
      "sha": "97df7b8d1330f4577c9d33a96e4c2c4186f723f6",
      "filename": "app/src/processing/app/SketchController.java",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/arduino/Arduino/blob/8afeb501cbdfa722da01390b7301e5038e3c6740/app%2Fsrc%2Fprocessing%2Fapp%2FSketchController.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/8afeb501cbdfa722da01390b7301e5038e3c6740/app%2Fsrc%2Fprocessing%2Fapp%2FSketchController.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FSketchController.java?ref=8afeb501cbdfa722da01390b7301e5038e3c6740",
      "patch": "@@ -368,11 +368,9 @@ protected void nameCode(String newName) {\n         return;\n       }\n       sketch.addCode(code);\n+      editor.selectTab(editor.findTabIndex(code));\n     }\n \n-    // set the new guy as current\n-    editor.selectTab(editor.findTabIndex(newName));\n-\n     // update the tabs\n     editor.header.rebuild();\n   }",
      "parent_sha": "fa82fe4db1bb1a7023885b2e9c5e1f878c9ec0d2"
    }
  },
  {
    "oid": "8fd17d44a749bee10fd3ff24590f56521ef35fc4",
    "message": "Fixed error message",
    "date": "2018-08-10T09:05:08Z",
    "url": "https://github.com/arduino/Arduino/commit/8fd17d44a749bee10fd3ff24590f56521ef35fc4",
    "details": {
      "sha": "83d34fed7bfbf9b7b3d29663832237430dd95319",
      "filename": "arduino-core/src/processing/app/helpers/CommandlineParser.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/arduino/Arduino/blob/8fd17d44a749bee10fd3ff24590f56521ef35fc4/arduino-core%2Fsrc%2Fprocessing%2Fapp%2Fhelpers%2FCommandlineParser.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/8fd17d44a749bee10fd3ff24590f56521ef35fc4/arduino-core%2Fsrc%2Fprocessing%2Fapp%2Fhelpers%2FCommandlineParser.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fprocessing%2Fapp%2Fhelpers%2FCommandlineParser.java?ref=8fd17d44a749bee10fd3ff24590f56521ef35fc4",
      "patch": "@@ -265,7 +265,7 @@ private void processBoardArgument(String selectBoard) {\n         if (!targetBoard.hasMenu(key))\n           BaseNoGui.showError(null, I18n.format(tr(\"{0}: Invalid option for board \\\"{1}\\\"\"), key, targetBoard.getId()), 3);\n         if (targetBoard.getMenuLabel(key, value) == null)\n-          BaseNoGui.showError(null, I18n.format(tr(\"{0}: Invalid option for \\\"{1}\\\" option for board \\\"{2}\\\"\"), value, key, targetBoard.getId()), 3);\n+          BaseNoGui.showError(null, I18n.format(tr(\"{0}: Invalid value for option \\\"{1}\\\" for board \\\"{2}\\\"\"), value, key, targetBoard.getId()), 3);\n \n         PreferencesData.set(\"custom_\" + key, targetBoard.getId() + \"_\" + value);\n       }",
      "parent_sha": "62511c088958ddd17f1b47ef2c0184765d55aee3"
    }
  },
  {
    "oid": "8266ac5aad6b83abffcfe586807d08972d33e082",
    "message": "better error message when library names clash\nfilter out non .ZIP files",
    "date": "2013-05-11T11:25:36Z",
    "url": "https://github.com/arduino/Arduino/commit/8266ac5aad6b83abffcfe586807d08972d33e082",
    "details": {
      "sha": "efad32f1b467c2c7d974bc7a301a4321a976e3b0",
      "filename": "app/src/processing/app/Base.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/arduino/Arduino/blob/8266ac5aad6b83abffcfe586807d08972d33e082/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/8266ac5aad6b83abffcfe586807d08972d33e082/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java?ref=8266ac5aad6b83abffcfe586807d08972d33e082",
      "patch": "@@ -28,6 +28,7 @@\n import java.util.*;\n \n import javax.swing.*;\n+import javax.swing.filechooser.FileNameExtensionFilter;\n \n import processing.app.debug.Compiler;\n import processing.app.debug.Target;\n@@ -2380,6 +2381,7 @@ public void handleAddLibrary(Editor editor) {\n     JFileChooser fileChooser = new JFileChooser(System.getProperty(\"user.home\"));\n     fileChooser.setDialogTitle(_(\"Select a zip file or a folder containing the library you'd like to add\"));\n     fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);\n+    fileChooser.setFileFilter(new FileNameExtensionFilter(\"ZIP files or folders\", \"zip\"));\n \n     Dimension preferredSize = fileChooser.getPreferredSize();\n     fileChooser.setPreferredSize(new Dimension(preferredSize.width + 200, preferredSize.height + 200));\n@@ -2426,7 +2428,7 @@ public void handleAddLibrary(Editor editor) {\n       // copy folder\n       File destinationFolder = new File(getSketchbookLibrariesFolder(), sourceFile.getName());\n       if (!destinationFolder.mkdir()) {\n-        editor.statusError(\"Can't create folder: \" + sourceFile.getName() + \" into libraries folder\");\n+        editor.statusError(\"A library named \" + sourceFile.getName() + \" already exists\");\n         return;\n       }\n       try {",
      "parent_sha": "3d5c76a8a1eb1bea27869af85a99670a4761fbeb"
    }
  },
  {
    "oid": "1062307c52ad60bbc26454c7eaeb2ab3b903c0b5",
    "message": "Removed some redundant `this` keyword",
    "date": "2017-02-27T12:48:54Z",
    "url": "https://github.com/arduino/Arduino/commit/1062307c52ad60bbc26454c7eaeb2ab3b903c0b5",
    "details": {
      "sha": "3ca4b22bb82c5ac90f99b8bd46f2deaa96127e09",
      "filename": "app/src/processing/app/EditorTab.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/arduino/Arduino/blob/1062307c52ad60bbc26454c7eaeb2ab3b903c0b5/app%2Fsrc%2Fprocessing%2Fapp%2FEditorTab.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/1062307c52ad60bbc26454c7eaeb2ab3b903c0b5/app%2Fsrc%2Fprocessing%2Fapp%2FEditorTab.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FEditorTab.java?ref=1062307c52ad60bbc26454c7eaeb2ab3b903c0b5",
      "patch": "@@ -103,11 +103,11 @@ public EditorTab(Editor editor, SketchFile file, String contents)\n     this.editor = editor;\n     this.file = file;\n     RSyntaxDocument document = createDocument(contents);\n-    this.textarea = createTextArea(document);\n-    this.scrollPane = createScrollPane(this.textarea);\n+    textarea = createTextArea(document);\n+    scrollPane = createScrollPane(textarea);\n     file.setStorage(this);\n     applyPreferences();\n-    add(this.scrollPane, BorderLayout.CENTER);\n+    add(scrollPane, BorderLayout.CENTER);\n \n     RUndoManager undo = new LastUndoableEditAwareUndoManager(this.textarea, this.editor);\n     document.addUndoableEditListener(undo);",
      "parent_sha": "dd1738828058f7d1cbf9aac6be52f17dbc1c921a"
    }
  },
  {
    "oid": "94754d7841af1e8e6c61d58377e7586a155e89ad",
    "message": "In `Base.handleOpen()`, compare Files rather than Strings\n\nComparing a File object automatically takes care of filesystem case\nsensitivity, whereas strings do not, so this makes the comparison\nslightly more reliable.",
    "date": "2016-08-26T14:42:44Z",
    "url": "https://github.com/arduino/Arduino/commit/94754d7841af1e8e6c61d58377e7586a155e89ad",
    "details": {
      "sha": "d6ffd5d58855649c14ec5f57e9370634f986e2c3",
      "filename": "app/src/processing/app/Base.java",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/arduino/Arduino/blob/94754d7841af1e8e6c61d58377e7586a155e89ad/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/94754d7841af1e8e6c61d58377e7586a155e89ad/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java?ref=94754d7841af1e8e6c61d58377e7586a155e89ad",
      "patch": "@@ -816,9 +816,8 @@ protected Editor handleOpen(File file, int[] storedLocation, int[] defaultLocati\n     if (!file.exists()) return null;\n \n     // Cycle through open windows to make sure that it's not already open.\n-    String path = file.getAbsolutePath();\n     for (Editor editor : editors) {\n-      if (editor.getSketch().getMainFilePath().equals(path)) {\n+      if (editor.getSketch().getPrimaryFile().getFile().equals(file)) {\n         editor.toFront();\n         return editor;\n       }",
      "parent_sha": "59b70c83730126ea13b663c1114a58d30bcfe6b9"
    }
  },
  {
    "oid": "3a72c02480e5b85a59a08b6739ed7b45d81d390a",
    "message": "Removed unused code, fixed indentation.",
    "date": "2014-02-17T13:19:40Z",
    "url": "https://github.com/arduino/Arduino/commit/3a72c02480e5b85a59a08b6739ed7b45d81d390a",
    "details": {
      "sha": "5d784facf6b2870b6eb5fd8b8da995c1538bfab8",
      "filename": "app/src/processing/app/Base.java",
      "status": "modified",
      "additions": 15,
      "deletions": 43,
      "changes": 58,
      "blob_url": "https://github.com/arduino/Arduino/blob/3a72c02480e5b85a59a08b6739ed7b45d81d390a/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/3a72c02480e5b85a59a08b6739ed7b45d81d390a/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java?ref=3a72c02480e5b85a59a08b6739ed7b45d81d390a",
      "patch": "@@ -1212,34 +1212,17 @@ public void actionPerformed(ActionEvent event) {\n \n     for (String potentialName : list) {\n       File libFolder = new File(folder, potentialName);\n-//      File libraryFolder = new File(subfolder, \"library\");\n-//      File libraryJar = new File(libraryFolder, potentialName + \".jar\");\n-//      // If a .jar file of the same prefix as the folder exists\n-//      // inside the 'library' subfolder of the sketch\n-//      if (libraryJar.exists()) {\n-        String sanityCheck = Sketch.sanitizeName(potentialName);\n-        if (!sanityCheck.equals(potentialName)) {\n-          String mess = I18n.format(\n-            _(\"The library \\\"{0}\\\" cannot be used.\\n\" +\n-              \"Library names must contain only basic letters and numbers.\\n\" +\n-              \"(ASCII only and no spaces, and it cannot start with a number)\"),\n-\t    potentialName\n-\t  );\n-          Base.showMessage(_(\"Ignoring bad library name\"), mess);\n-          continue;\n-        }\n+      String sanityCheck = Sketch.sanitizeName(potentialName);\n+      if (!sanityCheck.equals(potentialName)) {\n+        String mess = I18n.format(_(\"The library \\\"{0}\\\" cannot be used.\\n\"\n+            + \"Library names must contain only basic letters and numbers.\\n\"\n+            + \"(ASCII only and no spaces, and it cannot start with a number)\"),\n+            potentialName);\n+        Base.showMessage(_(\"Ignoring bad library name\"), mess);\n+        continue;\n+      }\n \n-        String libraryName = potentialName;\n-//        // get the path for all .jar files in this code folder\n-//        String libraryClassPath =\n-//          Compiler.contentsToClassPath(libraryFolder);\n-//        // grab all jars and classes from this folder,\n-//        // and append them to the library classpath\n-//        librariesClassPath +=\n-//          File.pathSeparatorChar + libraryClassPath;\n-//        // need to associate each import with a library folder\n-//        String packages[] =\n-//          Compiler.packageListFromClassPath(libraryClassPath);\n+      String libraryName = potentialName;\n       libraries.add(libFolder);\n       String libFolderPath = libFolder.getAbsolutePath();\n       try {\n@@ -1268,22 +1251,11 @@ public void actionPerformed(ActionEvent event) {\n             \"Unable to list header files in {0}\", libFolder), e);\n       }\n \n-        JMenuItem item = new JMenuItem(libraryName);\n-        item.addActionListener(listener);\n-        item.setActionCommand(libFolderPath);\n-        menu.add(item);\n-        ifound = true;\n-\n-// XXX: DAM: should recurse here so that library folders can be nested\n-//      } else {  // not a library, but is still a folder, so recurse\n-//        JMenu submenu = new JMenu(libraryName);\n-//        // needs to be separate var, otherwise would set ifound to false\n-//        boolean found = addLibraries(submenu, subfolder);\n-//        if (found) {\n-//          menu.add(submenu);\n-//          ifound = true;\n-//        }\n-//      }\n+      JMenuItem item = new JMenuItem(libraryName);\n+      item.addActionListener(listener);\n+      item.setActionCommand(libFolderPath);\n+      menu.add(item);\n+      ifound = true;\n     }\n     return ifound;\n   }",
      "parent_sha": "57bee97d7be07023bc94460cde54c96e4ef3de1d"
    }
  },
  {
    "oid": "e772eadd92017dc82008e02929c9eb71df0a2746",
    "message": "nicer password popup",
    "date": "2013-05-06T10:31:03Z",
    "url": "https://github.com/arduino/Arduino/commit/e772eadd92017dc82008e02929c9eb71df0a2746",
    "details": {
      "sha": "4902a3baab8d5ccc0c68d4c0da258cb886bd6629",
      "filename": "app/src/processing/app/forms/PasswordAuthorizationDialog.java",
      "status": "modified",
      "additions": 15,
      "deletions": 11,
      "changes": 26,
      "blob_url": "https://github.com/arduino/Arduino/blob/e772eadd92017dc82008e02929c9eb71df0a2746/app%2Fsrc%2Fprocessing%2Fapp%2Fforms%2FPasswordAuthorizationDialog.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/e772eadd92017dc82008e02929c9eb71df0a2746/app%2Fsrc%2Fprocessing%2Fapp%2Fforms%2FPasswordAuthorizationDialog.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2Fforms%2FPasswordAuthorizationDialog.java?ref=e772eadd92017dc82008e02929c9eb71df0a2746",
      "patch": "@@ -76,9 +76,9 @@ public void actionPerformed(ActionEvent evt) {\n                                     .addComponent(typePasswordLabel)\n                                     .addGroup(layout.createSequentialGroup()\n                                             .addComponent(passwordLabel)\n-                                            .addGap(4, 4, 4)\n+                                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n                                             .addComponent(passwordField, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE)))\n-                            .addContainerGap(20, Short.MAX_VALUE))\n+                            .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                     .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                             .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                             .addComponent(cancelButton)\n@@ -90,17 +90,21 @@ public void actionPerformed(ActionEvent evt) {\n             layout.createParallelGroup(GroupLayout.Alignment.LEADING)\n                     .addGroup(layout.createSequentialGroup()\n                             .addContainerGap()\n+                            .addComponent(typePasswordLabel)\n                             .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)\n-                                    .addComponent(icon)\n-                                    .addComponent(typePasswordLabel))\n-                            .addGap(5, 5, 5)\n-                            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)\n-                                    .addComponent(passwordLabel)\n-                                    .addComponent(passwordField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))\n-                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                    .addGroup(layout.createSequentialGroup()\n+                                            .addGap(53, 53, 53)\n+                                            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)\n+                                                    .addComponent(passwordLabel)\n+                                                    .addComponent(passwordField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))\n+                                            .addGap(18, 18, 18))\n+                                    .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n+                                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                            .addComponent(icon)\n+                                            .addGap(9, 9, 9)))\n                             .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)\n-                                    .addComponent(cancelButton)\n-                                    .addComponent(uploadButton))\n+                                    .addComponent(uploadButton)\n+                                    .addComponent(cancelButton))\n                             .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n     );\n ",
      "parent_sha": "968c538849558c87a11b036f6d6c502297c68a66"
    }
  },
  {
    "oid": "0c03dc8db97c5c9c911b6bff7509299b7aece265",
    "message": "re-asking for password if previous upload failed",
    "date": "2013-05-06T10:31:03Z",
    "url": "https://github.com/arduino/Arduino/commit/0c03dc8db97c5c9c911b6bff7509299b7aece265",
    "details": {
      "sha": "1aa187176a8ddc995c83d7975895b10ed2cb0595",
      "filename": "app/src/processing/app/Sketch.java",
      "status": "modified",
      "additions": 17,
      "deletions": 14,
      "changes": 31,
      "blob_url": "https://github.com/arduino/Arduino/blob/0c03dc8db97c5c9c911b6bff7509299b7aece265/app%2Fsrc%2Fprocessing%2Fapp%2FSketch.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/0c03dc8db97c5c9c911b6bff7509299b7aece265/app%2Fsrc%2Fprocessing%2Fapp%2FSketch.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FSketch.java?ref=0c03dc8db97c5c9c911b6bff7509299b7aece265",
      "patch": "@@ -1665,24 +1665,27 @@ protected boolean upload(String buildPath, String suggestedClassName, boolean us\n \n     Uploader uploader = new UploaderFactory().newUploader(target.getBoards().get(board), Preferences.get(\"serial.port\"));\n \n-    if (uploader.requiresAuthorization() && !Preferences.has(uploader.getAuthorizationKey())) {\n-      PasswordAuthorizationDialog dialog = new PasswordAuthorizationDialog(editor);\n-      dialog.setLocationRelativeTo(editor);\n-      dialog.setVisible(true);\n+    boolean success = false;\n+    do {\n+      if (uploader.requiresAuthorization() && !Preferences.has(uploader.getAuthorizationKey())) {\n+        PasswordAuthorizationDialog dialog = new PasswordAuthorizationDialog(editor);\n+        dialog.setLocationRelativeTo(editor);\n+        dialog.setVisible(true);\n+\n+        if (dialog.isCancelled()) {\n+          editor.statusNotice(_(\"Upload cancelled\"));\n+          return false;\n+        }\n \n-      if (dialog.isCancelled()) {\n-        editor.statusNotice(_(\"Upload cancelled\"));\n-        return false;\n+        Preferences.set(uploader.getAuthorizationKey(), DigestUtils.sha512Hex(dialog.getPassword()));\n       }\n \n-      Preferences.set(uploader.getAuthorizationKey(), DigestUtils.sha512Hex(dialog.getPassword()));\n-    }\n-\n-    boolean success = uploader.uploadUsingPreferences(buildPath, suggestedClassName, usingProgrammer);\n+      success = uploader.uploadUsingPreferences(buildPath, suggestedClassName, usingProgrammer);\n \n-    if (uploader.requiresAuthorization() && !success) {\n-      Preferences.remove(uploader.getAuthorizationKey());\n-    }\n+      if (uploader.requiresAuthorization() && !success) {\n+        Preferences.remove(uploader.getAuthorizationKey());\n+      }\n+    } while (uploader.requiresAuthorization() && !success);\n \n     return success;\n   }",
      "parent_sha": "dc71ab77bf3412ebe26608ee4cff89aa3e5b40ae"
    }
  },
  {
    "oid": "dcc1020a6ec7374f1e6784ce19566230f4592b28",
    "message": "Better check for programmers configuration when uploading using programmer",
    "date": "2014-08-06T13:20:53Z",
    "url": "https://github.com/arduino/Arduino/commit/dcc1020a6ec7374f1e6784ce19566230f4592b28",
    "details": {
      "sha": "03e33baa76ec1a516093f697af93267742542a56",
      "filename": "app/src/cc/arduino/packages/uploaders/SerialUploader.java",
      "status": "modified",
      "additions": 19,
      "deletions": 8,
      "changes": 27,
      "blob_url": "https://github.com/arduino/Arduino/blob/dcc1020a6ec7374f1e6784ce19566230f4592b28/app%2Fsrc%2Fcc%2Farduino%2Fpackages%2Fuploaders%2FSerialUploader.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/dcc1020a6ec7374f1e6784ce19566230f4592b28/app%2Fsrc%2Fcc%2Farduino%2Fpackages%2Fuploaders%2FSerialUploader.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fcc%2Farduino%2Fpackages%2Fuploaders%2FSerialUploader.java?ref=dcc1020a6ec7374f1e6784ce19566230f4592b28",
      "patch": "@@ -26,18 +26,22 @@\n \n package cc.arduino.packages.uploaders;\n \n-import cc.arduino.packages.Uploader;\n-import processing.app.*;\n-import processing.app.debug.RunnerException;\n-import processing.app.debug.TargetPlatform;\n-import processing.app.helpers.PreferencesMap;\n-import processing.app.helpers.StringReplacer;\n+import static processing.app.I18n._;\n \n import java.io.File;\n import java.util.ArrayList;\n import java.util.List;\n \n-import static processing.app.I18n._;\n+import processing.app.Base;\n+import processing.app.I18n;\n+import processing.app.Preferences;\n+import processing.app.Serial;\n+import processing.app.SerialException;\n+import processing.app.debug.RunnerException;\n+import processing.app.debug.TargetPlatform;\n+import processing.app.helpers.PreferencesMap;\n+import processing.app.helpers.StringReplacer;\n+import cc.arduino.packages.Uploader;\n \n public class SerialUploader extends Uploader {\n \n@@ -209,7 +213,11 @@ public boolean uploadUsingProgrammer(String buildPath, String className) throws\n \n     PreferencesMap prefs = Preferences.getMap();\n     prefs.putAll(Base.getBoardPreferences());\n-    prefs.putAll(targetPlatform.getProgrammer(programmer));\n+    PreferencesMap programmerPrefs = targetPlatform.getProgrammer(programmer);\n+    if (programmerPrefs == null)\n+      throw new RunnerException(\n+          _(\"Please select a programmer from Tools->Programmer menu\"));\n+    prefs.putAll(programmerPrefs);\n     prefs.putAll(targetPlatform.getTool(prefs.getOrExcept(\"program.tool\")));\n \n     prefs.put(\"build.path\", buildPath);\n@@ -251,6 +259,9 @@ public boolean burnBootloader() throws Exception {\n     } else {\n       programmerPrefs = targetPlatform.getProgrammer(programmer);\n     }\n+    if (programmerPrefs == null)\n+      throw new RunnerException(\n+          _(\"Please select a programmer from Tools->Programmer menu\"));\n \n     // Build configuration for the current programmer\n     PreferencesMap prefs = Preferences.getMap();",
      "parent_sha": "8ae1d36a001a48969a57a133301a5e30d714f948"
    }
  },
  {
    "oid": "0598d38a0431eaa621af0e383544bd11c4d1f044",
    "message": "Code folding was not visible when line numbers were disabled. Fixed",
    "date": "2015-05-07T15:15:51Z",
    "url": "https://github.com/arduino/Arduino/commit/0598d38a0431eaa621af0e383544bd11c4d1f044",
    "details": {
      "sha": "3074bd12aa96f349978fa807c96740e7ead55035",
      "filename": "app/src/processing/app/Editor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/arduino/Arduino/blob/0598d38a0431eaa621af0e383544bd11c4d1f044/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/0598d38a0431eaa621af0e383544bd11c4d1f044/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java?ref=0598d38a0431eaa621af0e383544bd11c4d1f044",
      "patch": "@@ -452,9 +452,8 @@ protected void applyPreferences() {\n     saveMenuItem.setEnabled(!external);\n     saveAsMenuItem.setEnabled(!external);\n \n-    scrollPane.setLineNumbersEnabled(PreferencesData.getBoolean(\"editor.linenumbers\"));\n-\n     textarea.setCodeFoldingEnabled(PreferencesData.getBoolean(\"editor.code_folding\"));\n+    scrollPane.setLineNumbersEnabled(PreferencesData.getBoolean(\"editor.linenumbers\"));\n \n     if (external) {\n       // disable line highlight and turn off the caret when disabling",
      "parent_sha": "29810592514e439df5ab9d65b33912004af39046"
    }
  },
  {
    "oid": "c98c18089ddc9becf4e2e1e3000cf5c6421f1e0f",
    "message": "Save window position when closing app from \"x\" button or Alt+F4\n\nFix #4404\nFix #4218",
    "date": "2016-01-22T17:06:08Z",
    "url": "https://github.com/arduino/Arduino/commit/c98c18089ddc9becf4e2e1e3000cf5c6421f1e0f",
    "details": {
      "sha": "48f39bc0319bb7c01fa470fc8f7e22e0ad8027bb",
      "filename": "app/src/processing/app/Base.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/arduino/Arduino/blob/c98c18089ddc9becf4e2e1e3000cf5c6421f1e0f/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/c98c18089ddc9becf4e2e1e3000cf5c6421f1e0f/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java?ref=c98c18089ddc9becf4e2e1e3000cf5c6421f1e0f",
      "patch": "@@ -957,14 +957,15 @@ public boolean handleClose(Editor editor) {\n     editor.internalCloseRunner();\n \n     if (editors.size() == 1) {\n+      storeSketches();\n+\n       // This will store the sketch count as zero\n       editors.remove(editor);\n       try {\n         Editor.serialMonitor.close();\n       } catch (Exception e) {\n         //ignore\n       }\n-      storeSketches();\n       rebuildRecentSketchesMenuItems();\n \n       // Save out the current prefs state",
      "parent_sha": "2c089044c8073f5fc9029f7527e9aa4cb66bdcb3"
    }
  },
  {
    "oid": "87989a2d7b933293bcbf54234c15717017aa711d",
    "message": "Fixed bug introduced by #2402. Began replace all search from the first tab.\n\nSigned-off-by: swordmaster2k <b00056835@student.itb.ie>",
    "date": "2015-02-16T18:47:14Z",
    "url": "https://github.com/arduino/Arduino/commit/87989a2d7b933293bcbf54234c15717017aa711d",
    "details": {
      "sha": "5b3ad9c668abddca537e3b55e5cb1d1800e43949",
      "filename": "app/src/processing/app/FindReplace.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/arduino/Arduino/blob/87989a2d7b933293bcbf54234c15717017aa711d/app%2Fsrc%2Fprocessing%2Fapp%2FFindReplace.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/87989a2d7b933293bcbf54234c15717017aa711d/app%2Fsrc%2Fprocessing%2Fapp%2FFindReplace.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FFindReplace.java?ref=87989a2d7b933293bcbf54234c15717017aa711d",
      "patch": "@@ -421,8 +421,9 @@ public void replaceAndFindNext() {\n   public void replaceAll() {\n     if (findField.getText().length() == 0)\n       return;\n-    // move to the beginning\n-    editor.setSelection(0, 0);\n+    \n+    editor.getSketch().setCurrentCode(0); // select the first tab\n+    editor.setSelection(0, 0); // move to the beginning\n \n     boolean foundAtLeastOne = false;\n     while (true) {",
      "parent_sha": "00941453db2a7896b31d50237b57d8f4e91a46d7"
    }
  },
  {
    "oid": "60309fe8b8e98eadda8fdfa4be676c7aad591283",
    "message": "Fixed test",
    "date": "2015-01-14T16:18:43Z",
    "url": "https://github.com/arduino/Arduino/commit/60309fe8b8e98eadda8fdfa4be676c7aad591283",
    "details": {
      "sha": "d6281bfbabb5f4781f82d8375436b39d9307ed17",
      "filename": "app/test/processing/app/DefaultTargetTest.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/arduino/Arduino/blob/60309fe8b8e98eadda8fdfa4be676c7aad591283/app%2Ftest%2Fprocessing%2Fapp%2FDefaultTargetTest.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/60309fe8b8e98eadda8fdfa4be676c7aad591283/app%2Ftest%2Fprocessing%2Fapp%2FDefaultTargetTest.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Ftest%2Fprocessing%2Fapp%2FDefaultTargetTest.java?ref=60309fe8b8e98eadda8fdfa4be676c7aad591283",
      "patch": "@@ -29,7 +29,7 @@ public void testDefaultTarget() throws Exception {\n     // should not raise an exception\n     new Base(new String[0]);\n \n-    TargetBoard targetBoard = Base.getTargetBoard();\n+    TargetBoard targetBoard = BaseNoGui.getTargetBoard();\n     assertNotEquals(\"unreal_board\", targetBoard.getId());\n   }\n }",
      "parent_sha": "244a750bef8985563dc05e60dda9bf0a7a63c487"
    }
  },
  {
    "oid": "39577072186201d5019b63e82ccf08e379fd602f",
    "message": "Use Win10 API SetThreadDpiAwarenessContext to force DPI Awareness\n\nThis commit contains debug messages used for testing purposes.",
    "date": "2016-11-10T14:14:25Z",
    "url": "https://github.com/arduino/Arduino/commit/39577072186201d5019b63e82ccf08e379fd602f",
    "details": {
      "sha": "756113b09cec62eafe7469a8e5348877eb467312",
      "filename": "arduino-core/src/processing/app/windows/Platform.java",
      "status": "modified",
      "additions": 41,
      "deletions": 1,
      "changes": 42,
      "blob_url": "https://github.com/arduino/Arduino/blob/39577072186201d5019b63e82ccf08e379fd602f/arduino-core%2Fsrc%2Fprocessing%2Fapp%2Fwindows%2FPlatform.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/39577072186201d5019b63e82ccf08e379fd602f/arduino-core%2Fsrc%2Fprocessing%2Fapp%2Fwindows%2FPlatform.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fprocessing%2Fapp%2Fwindows%2FPlatform.java?ref=39577072186201d5019b63e82ccf08e379fd602f",
      "patch": "@@ -36,6 +36,7 @@\n import java.util.List;\n \n import com.sun.jna.Native;\n+import com.sun.jna.Pointer;\n import com.sun.jna.win32.StdCallLibrary;\n import com.sun.jna.win32.W32APIOptions;\n \n@@ -250,15 +251,54 @@ interface ExtUser32 extends StdCallLibrary, com.sun.jna.platform.win32.User32 {\n     ExtUser32 INSTANCE = (ExtUser32) Native.loadLibrary(\"user32\", ExtUser32.class, W32APIOptions.DEFAULT_OPTIONS);\n \n     public int GetDpiForSystem();\n+\n+    public int SetProcessDpiAwareness(int value);\n+\n+    public final int DPI_AWARENESS_INVALID = -1;\n+    public final int DPI_AWARENESS_UNAWARE = 0;\n+    public final int DPI_AWARENESS_SYSTEM_AWARE = 1;\n+    public final int DPI_AWARENESS_PER_MONITOR_AWARE = 2;\n+\n+    public Pointer SetThreadDpiAwarenessContext(Pointer dpiContext);\n+\n+    public final Pointer DPI_AWARENESS_CONTEXT_UNAWARE = new Pointer(-1);\n+    public final Pointer DPI_AWARENESS_CONTEXT_SYSTEM_AWARE = new Pointer(-2);\n+    public final Pointer DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE = new Pointer(-3);\n   }\n \n+  private static int detected = detectSystemDPI();\n+\n   @Override\n   public int getSystemDPI() {\n+    if (detected == -1)\n+      return super.getSystemDPI();\n+    return detected;\n+  }\n+\n+  public static int detectSystemDPI() {\n+    try {\n+      int res = ExtUser32.INSTANCE.SetProcessDpiAwareness(ExtUser32.DPI_AWARENESS_SYSTEM_AWARE);\n+      System.out.println(\"SetProcessDpiAwareness returned \" + res);\n+    } catch (Throwable e) {\n+      System.out.println(\"SetProcessDpiAwareness failed!\");\n+      // Ignore error\n+    }\n+    try {\n+      System.out.println(\"before any SetThreadDpiAwarenessContext(...) -> dpi \" + ExtUser32.INSTANCE.GetDpiForSystem());\n+      ExtUser32.INSTANCE.SetThreadDpiAwarenessContext(ExtUser32.DPI_AWARENESS_CONTEXT_UNAWARE);\n+      System.out.println(\"SetThreadDpiAwarenessContext(UNAWARE) -> dpi \" + ExtUser32.INSTANCE.GetDpiForSystem());\n+      ExtUser32.INSTANCE.SetThreadDpiAwarenessContext(ExtUser32.DPI_AWARENESS_CONTEXT_SYSTEM_AWARE);\n+      System.out.println(\"SetThreadDpiAwarenessContext(SYSTEM) -> dpi \" + ExtUser32.INSTANCE.GetDpiForSystem());\n+    } catch (Throwable e) {\n+      System.out.println(\"SetThreadDpiAwarenessContext failed!\");\n+      // Ignore error (call valid only on Windows 10)\n+    }\n     try {\n       return ExtUser32.INSTANCE.GetDpiForSystem();\n     } catch (Throwable e) {\n       // DPI detection failed, fall back with default\n-      return super.getSystemDPI();\n+      System.out.println(\"DPI detection failed, fallback to 96 dpi\");\n+      return -1;\n     }\n   }\n }",
      "parent_sha": "fceb1d7edaab08c3c35036a2af572b836c6afad7"
    }
  },
  {
    "oid": "492553cde0cdfd4d26f4244b682f5dd9f62f322f",
    "message": "When resolving dependencies consider installed contributions first\n\nConsider a case where the user decides to install a library `A` that\ndepends on library `B` and `B` is not up-to-date (i.e. is installed a\nversion that is not the latest), then the user is asked to \"install\"\nboth libraries `A` and `B`, effectively upgrading `B`.\n\nWith this change the already installed library `B` is left untouched\nand not displayed in the missing dependencies.",
    "date": "2019-07-18T08:37:36Z",
    "url": "https://github.com/arduino/Arduino/commit/492553cde0cdfd4d26f4244b682f5dd9f62f322f",
    "details": {
      "sha": "b42a6afb7f706ace4581fd1e95b8821683efe418",
      "filename": "arduino-core/src/cc/arduino/contributions/libraries/LibrariesIndex.java",
      "status": "modified",
      "additions": 13,
      "deletions": 6,
      "changes": 19,
      "blob_url": "https://github.com/arduino/Arduino/blob/492553cde0cdfd4d26f4244b682f5dd9f62f322f/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Flibraries%2FLibrariesIndex.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/492553cde0cdfd4d26f4244b682f5dd9f62f322f/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Flibraries%2FLibrariesIndex.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Flibraries%2FLibrariesIndex.java?ref=492553cde0cdfd4d26f4244b682f5dd9f62f322f",
      "patch": "@@ -138,13 +138,20 @@ public boolean resolveDependeciesOf(List<ContributedLibrary> solution,\n         continue;\n       }\n \n-      // Pick the latest version among possible deps\n-      ContributedLibrary last = possibleDeps.stream()\n-          .reduce((a, b) -> b.isBefore(a) ? a : b).get();\n+      // Pick the installed version if available\n+      ContributedLibrary selected;\n+      Optional<ContributedLibrary> installed = possibleDeps.stream()\n+          .filter(l -> l.getInstalledLibrary().isPresent()).findAny();\n+      if (installed.isPresent()) {\n+        selected = installed.get();\n+      } else {\n+        // otherwise pick the latest version\n+        selected = possibleDeps.stream().reduce((a, b) -> b.isBefore(a) ? a : b).get();\n+      }\n \n-      // Add dependecy to the solution and process recursively\n-      solution.add(last);\n-      if (!resolveDependeciesOf(solution, last)) {\n+      // Add dependency to the solution and process recursively\n+      solution.add(selected);\n+      if (!resolveDependeciesOf(solution, selected)) {\n         return false;\n       }\n     }",
      "parent_sha": "ed81292b14e301085e491fff2b8ef085918afb33"
    }
  },
  {
    "oid": "842c35be3e4cfb0c044f6068d3f94d98b57b2a6d",
    "message": "Added warning about forcing untrusted contributions",
    "date": "2019-08-20T15:06:36Z",
    "url": "https://github.com/arduino/Arduino/commit/842c35be3e4cfb0c044f6068d3f94d98b57b2a6d",
    "details": {
      "sha": "0e63fc1e3c6bcb620a9430ee36d039235400523d",
      "filename": "arduino-core/src/cc/arduino/contributions/packages/ContributionsIndexer.java",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/arduino/Arduino/blob/842c35be3e4cfb0c044f6068d3f94d98b57b2a6d/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Fpackages%2FContributionsIndexer.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/842c35be3e4cfb0c044f6068d3f94d98b57b2a6d/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Fpackages%2FContributionsIndexer.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Fpackages%2FContributionsIndexer.java?ref=842c35be3e4cfb0c044f6068d3f94d98b57b2a6d",
      "patch": "@@ -86,8 +86,12 @@ public void parseIndex() throws Exception {\n     File defaultIndexFile = getIndexFile(Constants.DEFAULT_INDEX_FILE_NAME);\n     if (defaultIndexFile.exists()) {\n       // Check main index signature\n-      if (!PreferencesData.areInsecurePackagesAllowed() && !signatureVerifier.isSigned(defaultIndexFile)) {\n-        throw new SignatureVerificationFailedException(Constants.DEFAULT_INDEX_FILE_NAME);\n+      if (!signatureVerifier.isSigned(defaultIndexFile)) {\n+        if (PreferencesData.areInsecurePackagesAllowed()) {\n+          System.err.println(format(tr(\"Warning: forced trusting untrusted contributions\")));\n+        } else {\n+          throw new SignatureVerificationFailedException(Constants.DEFAULT_INDEX_FILE_NAME);\n+        }\n       }\n \n       mergeContributions(defaultIndexFile);",
      "parent_sha": "94dd6953553ebf27a10cdf6453611d1ed037f1fd"
    }
  },
  {
    "oid": "7d08b582224e7e233163c38cdf6a7d2219d36543",
    "message": "Allow library manager to install multiple libraries at once.\n\nLibraries are split using a comma fx: --install-library \"Kalman filter library,USB Host Shield Library 2.0\"",
    "date": "2015-04-09T13:08:11Z",
    "url": "https://github.com/arduino/Arduino/commit/7d08b582224e7e233163c38cdf6a7d2219d36543",
    "details": {
      "sha": "f59a1dfa8a58ca9ac519f5a7a37ac5ddc38681f0",
      "filename": "app/src/processing/app/Base.java",
      "status": "modified",
      "additions": 22,
      "deletions": 20,
      "changes": 42,
      "blob_url": "https://github.com/arduino/Arduino/blob/7d08b582224e7e233163c38cdf6a7d2219d36543/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/7d08b582224e7e233163c38cdf6a7d2219d36543/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java?ref=7d08b582224e7e233163c38cdf6a7d2219d36543",
      "patch": "@@ -368,28 +368,30 @@ protected void onProgress(Progress progress) {\n       indexer.setLibrariesFolders(BaseNoGui.getLibrariesPath());\n       installer.updateIndex();\n \n-      String[] libraryToInstallParts = parser.getLibraryToInstall().split(\":\");\n-\n-      ContributedLibrary selected=null;\n-      if (libraryToInstallParts.length == 2) {\n-        selected = indexer.getIndex().find(libraryToInstallParts[0], VersionHelper.valueOf(libraryToInstallParts[1]).toString());\n-      } else if (libraryToInstallParts.length == 1) {\n-        List<ContributedLibrary> librariesByName = indexer.getIndex().find(libraryToInstallParts[0]);\n-        Collections.sort(librariesByName, new DownloadableContributionVersionComparator());\n-        if (!librariesByName.isEmpty()) {\n-          selected = librariesByName.get(librariesByName.size() - 1);\n+      for (String library : parser.getLibraryToInstall().split(\",\")) {\n+        String[] libraryToInstallParts = library.split(\":\");\n+\n+        ContributedLibrary selected=null;\n+        if (libraryToInstallParts.length == 2) {\n+          selected = indexer.getIndex().find(libraryToInstallParts[0], VersionHelper.valueOf(libraryToInstallParts[1]).toString());\n+        } else if (libraryToInstallParts.length == 1) {\n+          List<ContributedLibrary> librariesByName = indexer.getIndex().find(libraryToInstallParts[0]);\n+          Collections.sort(librariesByName, new DownloadableContributionVersionComparator());\n+          if (!librariesByName.isEmpty()) {\n+            selected = librariesByName.get(librariesByName.size() - 1);\n+          }\n+        }\n+        if (selected == null) {\n+          System.out.println(_(\"Selected library is not available\"));\n+          System.exit(1);\n         }\n-      }\n-      if (selected == null) {\n-        System.out.println(_(\"Selected library is not available\"));\n-        System.exit(1);\n-      }\n \n-      ContributedLibrary installed = indexer.getIndex().getInstalled(libraryToInstallParts[0]);\n-      if (selected.isReadOnly()) {\n-        installer.remove(installed);\n-      } else {\n-        installer.install(selected, installed);\n+        ContributedLibrary installed = indexer.getIndex().getInstalled(libraryToInstallParts[0]);\n+        if (selected.isReadOnly()) {\n+          installer.remove(installed);\n+        } else {\n+          installer.install(selected, installed);\n+        }\n       }\n \n       System.exit(0);",
      "parent_sha": "87e2e68b85c1ca3337a9c572ba01308ef9a0c446"
    }
  },
  {
    "oid": "f19bf5cf4cc860366a4064c895c31632e82bf401",
    "message": "Use plain exec methods on arduino-builder invocation\n\nApacheCommons do some command-line tweaking that doesnt fit well\nwith argument passing to arduino-builder, in particular for -prefs\narguments containing spaces.",
    "date": "2016-08-05T08:19:07Z",
    "url": "https://github.com/arduino/Arduino/commit/f19bf5cf4cc860366a4064c895c31632e82bf401",
    "details": {
      "sha": "cdf70ff535f44a6bec7996a433e426fdf62c3527",
      "filename": "arduino-core/src/cc/arduino/Compiler.java",
      "status": "modified",
      "additions": 50,
      "deletions": 38,
      "changes": 88,
      "blob_url": "https://github.com/arduino/Arduino/blob/f19bf5cf4cc860366a4064c895c31632e82bf401/arduino-core%2Fsrc%2Fcc%2Farduino%2FCompiler.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/f19bf5cf4cc860366a4064c895c31632e82bf401/arduino-core%2Fsrc%2Fcc%2Farduino%2FCompiler.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fcc%2Farduino%2FCompiler.java?ref=f19bf5cf4cc860366a4064c895c31632e82bf401",
      "patch": "@@ -39,6 +39,7 @@\n import processing.app.debug.*;\n import processing.app.helpers.PreferencesMap;\n import processing.app.helpers.PreferencesMapException;\n+import processing.app.helpers.ProcessUtils;\n import processing.app.helpers.StringReplacer;\n import processing.app.legacy.PApplet;\n import processing.app.tools.DoubleQuotedArgumentsOnWindowsCommandLine;\n@@ -141,7 +142,7 @@ public String build(CompilerProgressListener progListener, boolean exportHex) th\n     MessageConsumerOutputStream out = new MessageConsumerOutputStream(new ProgressAwareMessageConsumer(new I18NAwareMessageConsumer(System.out, System.err), progListener), \"\\n\");\n     MessageConsumerOutputStream err = new MessageConsumerOutputStream(new I18NAwareMessageConsumer(System.err, Compiler.this), \"\\n\");\n \n-    callArduinoBuilder(board, platform, aPackage, vidpid, BuilderAction.COMPILE, new PumpStreamHandler(out, err));\n+    callArduinoBuilder(board, platform, aPackage, vidpid, BuilderAction.COMPILE, out, err);\n \n     out.flush();\n     err.flush();\n@@ -179,7 +180,7 @@ private PreferencesMap loadPreferences(TargetBoard board, TargetPlatform platfor\n     ByteArrayOutputStream stderr = new ByteArrayOutputStream();\n     MessageConsumerOutputStream err = new MessageConsumerOutputStream(new I18NAwareMessageConsumer(new PrintStream(stderr), Compiler.this), \"\\n\");\n     try {\n-      callArduinoBuilder(board, platform, aPackage, vidpid, BuilderAction.DUMP_PREFS, new PumpStreamHandler(stdout, err));\n+      callArduinoBuilder(board, platform, aPackage, vidpid, BuilderAction.DUMP_PREFS, stdout, err);\n     } catch (RunnerException e) {\n       System.err.println(new String(stderr.toByteArray()));\n       throw e;\n@@ -189,90 +190,101 @@ private PreferencesMap loadPreferences(TargetBoard board, TargetPlatform platfor\n     return prefs;\n   }\n \n-  private void callArduinoBuilder(TargetBoard board, TargetPlatform platform, TargetPackage aPackage, String vidpid, BuilderAction action, PumpStreamHandler streamHandler) throws RunnerException {\n-    File executable = BaseNoGui.getContentFile(\"arduino-builder\");\n-    CommandLine commandLine = new CommandLine(executable);\n-    commandLine.addArgument(action.value, false);\n-    commandLine.addArgument(\"-logger=machine\", false);\n+  private void callArduinoBuilder(TargetBoard board, TargetPlatform platform, TargetPackage aPackage, String vidpid, BuilderAction action, OutputStream outStream, OutputStream errStream) throws RunnerException {\n+    List<String> cmd = new ArrayList<>();\n+    cmd.add(BaseNoGui.getContentFile(\"arduino-builder\").getAbsolutePath());\n+    cmd.add(action.value);\n+    cmd.add(\"-logger=machine\");\n \n     Stream.of(BaseNoGui.getHardwarePath(), new File(BaseNoGui.getSettingsFolder(), \"packages\").getAbsolutePath(), BaseNoGui.getSketchbookHardwareFolder().getAbsolutePath())\n       .forEach(p -> {\n         if (Files.exists(Paths.get(p))) {\n-          commandLine.addArgument(\"-hardware\", false);\n-          commandLine.addArgument(\"\\\"\" + p + \"\\\"\", false);\n+          cmd.add(\"-hardware\");\n+          cmd.add(p);\n         }\n       });\n \n     Stream.of(BaseNoGui.getContentFile(\"tools-builder\").getAbsolutePath(), Paths.get(BaseNoGui.getHardwarePath(), \"tools\", \"avr\").toAbsolutePath().toString(), new File(BaseNoGui.getSettingsFolder(), \"packages\").getAbsolutePath())\n       .forEach(p -> {\n         if (Files.exists(Paths.get(p))) {\n-          commandLine.addArgument(\"-tools\", false);\n-          commandLine.addArgument(\"\\\"\" + p + \"\\\"\", false);\n+          cmd.add(\"-tools\");\n+          cmd.add(p);\n         }\n       });\n \n-    commandLine.addArgument(\"-built-in-libraries\", false);\n-    commandLine.addArgument(\"\\\"\" + BaseNoGui.getContentFile(\"libraries\").getAbsolutePath() + \"\\\"\", false);\n-    commandLine.addArgument(\"-libraries\", false);\n-    commandLine.addArgument(\"\\\"\" + BaseNoGui.getSketchbookLibrariesFolder().getAbsolutePath() + \"\\\"\", false);\n+    cmd.add(\"-built-in-libraries\");\n+    cmd.add(BaseNoGui.getContentFile(\"libraries\").getAbsolutePath());\n+    cmd.add(\"-libraries\");\n+    cmd.add(BaseNoGui.getSketchbookLibrariesFolder().getAbsolutePath());\n \n     String fqbn = Stream.of(aPackage.getId(), platform.getId(), board.getId(), boardOptions(board)).filter(s -> !s.isEmpty()).collect(Collectors.joining(\":\"));\n-    commandLine.addArgument(\"-fqbn=\" + fqbn, false);\n+    cmd.add(\"-fqbn=\" + fqbn);\n \n     if (!\"\".equals(vidpid)) {\n-      commandLine.addArgument(\"-vid-pid=\" + vidpid, false);\n+      cmd.add(\"-vid-pid=\" + vidpid);\n     }\n \n-    commandLine.addArgument(\"-ide-version=\" + BaseNoGui.REVISION, false);\n-    commandLine.addArgument(\"-build-path\", false);\n-    commandLine.addArgument(\"\\\"\" + buildPath + \"\\\"\", false);\n-    commandLine.addArgument(\"-warnings=\" + PreferencesData.get(\"compiler.warning_level\"), false);\n+    cmd.add(\"-ide-version=\" + BaseNoGui.REVISION);\n+    cmd.add(\"-build-path\");\n+    cmd.add(buildPath);\n+    cmd.add(\"-warnings=\" + PreferencesData.get(\"compiler.warning_level\"));\n \n     PreferencesData.getMap()\n       .subTree(\"runtime.build_properties_custom\")\n       .entrySet()\n       .stream()\n-      .forEach(kv -> commandLine.addArgument(\"-prefs=\\\"\" + kv.getKey() + \"=\" + kv.getValue() + \"\\\"\", false));\n+      .forEach(kv -> cmd.add(\"-prefs=\" + kv.getKey() + \"=\" + kv.getValue()));\n \n-    commandLine.addArgument(\"-prefs=build.warn_data_percentage=\" + PreferencesData.get(\"build.warn_data_percentage\"));\n+    cmd.add(\"-prefs=build.warn_data_percentage=\" + PreferencesData.get(\"build.warn_data_percentage\"));\n \n     for (Map.Entry<String, String> entry : BaseNoGui.getBoardPreferences().entrySet()) {\n         if (entry.getKey().startsWith(\"runtime.tools\")) {\n-          commandLine.addArgument(\"-prefs=\" + entry.getKey() + \"=\" + entry.getValue());\n+          cmd.add(\"-prefs=\" + entry.getKey() + \"=\" + entry.getValue());\n         }\n     }\n \n     //commandLine.addArgument(\"-debug-level=10\", false);\n \n     if (verbose) {\n-      commandLine.addArgument(\"-verbose\", false);\n+      cmd.add(\"-verbose\");\n     }\n \n-    commandLine.addArgument(\"\\\"\" + pathToSketch + \"\\\"\", false);\n+    cmd.add(pathToSketch);\n \n     if (verbose) {\n-      System.out.println(commandLine);\n+      System.out.println(StringUtils.join(cmd, ' '));\n     }\n \n-    DefaultExecutor executor = new DefaultExecutor();\n-    executor.setStreamHandler(streamHandler);\n-\n     int result;\n-    executor.setExitValues(null);\n     try {\n-      result = executor.execute(commandLine);\n-    } catch (IOException e) {\n-      RunnerException re = new RunnerException(e.getMessage());\n-      re.hideStackTrace();\n-      throw re;\n+      Process proc = ProcessUtils.exec(cmd.toArray(new String[0]));\n+      MessageSiphon in = new MessageSiphon(proc.getInputStream(), (msg) -> {\n+        try {\n+          outStream.write(msg.getBytes());\n+        } catch (Exception e) {\n+          exception = new RunnerException(e);\n+        }\n+      });\n+      MessageSiphon err = new MessageSiphon(proc.getErrorStream(), (msg) -> {\n+        try {\n+          errStream.write(msg.getBytes());\n+        } catch (Exception e) {\n+          exception = new RunnerException(e);\n+        }\n+      });\n+\n+      in.join();\n+      err.join();\n+      result = proc.waitFor();\n+    } catch (Exception e) {\n+      throw new RunnerException(e);\n     }\n-    executor.setExitValues(new int[0]);\n \n     if (exception != null)\n       throw exception;\n \n     if (result > 1) {\n-      System.err.println(I18n.format(tr(\"{0} returned {1}\"), executable.getName(), result));\n+      System.err.println(I18n.format(tr(\"{0} returned {1}\"), cmd.get(0), result));\n     }\n \n     if (result != 0) {",
      "parent_sha": "b4ada94e4478d17feec8a74ada47e5f761de2d65"
    }
  },
  {
    "oid": "0a3b82af8f5c605892b243c2dbcd3395981248b4",
    "message": "Improve error handling for files on the commandline\n\nPreviously, any files that were specified on the commandline but could\nnot be opened were silently ignored. Only if --verify and --upload was\nspecified and _all_ files failed to open, a generic error message was\nshown. Additionally, if multiple files were specified with --verify or\n--upload, only the first would be acted on (the others would be openened\nand shown in the GUI, but not actually verified or uploaded).\n\nNow, whenever a file fails to open, an error message is shown (fatal\nwith --verify or --upload, non-fatal otherwise).\n\nFurthermore, with --verify or --upload an error is shown when there is\nnot exactly one file on the commandline.\n\nFinally, instead of keeping an \"opened\" variable, the code now just\nchecks the size of \"editors\" to see if a blank sketch should be opened.",
    "date": "2013-11-28T22:08:35Z",
    "url": "https://github.com/arduino/Arduino/commit/0a3b82af8f5c605892b243c2dbcd3395981248b4",
    "details": {
      "sha": "92d54f0206a7179eaa4c7bb6811f95983643bc45",
      "filename": "app/src/processing/app/Base.java",
      "status": "modified",
      "additions": 14,
      "deletions": 11,
      "changes": 25,
      "blob_url": "https://github.com/arduino/Arduino/blob/0a3b82af8f5c605892b243c2dbcd3395981248b4/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/0a3b82af8f5c605892b243c2dbcd3395981248b4/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java?ref=0a3b82af8f5c605892b243c2dbcd3395981248b4",
      "patch": "@@ -318,7 +318,6 @@ public Base(String[] args) throws Exception {\n     // Setup board-dependent variables.\n     onBoardOrPortChange();\n \n-    boolean opened = false;\n     boolean doUpload = false;\n     boolean doVerify = false;\n     boolean doVerbose = false;\n@@ -365,6 +364,9 @@ public Base(String[] args) throws Exception {\n       filenames.add(args[i]);\n     }\n \n+    if ((doUpload || doVerify) && filenames.size() != 1)\n+        showError(null, _(\"Must specify exactly one sketch file\"), null);\n+\n     for (String path: filenames) {\n       // Fix a problem with systems that use a non-ASCII languages. Paths are\n       // being passed in with 8.3 syntax, which makes the sketch loader code\n@@ -378,20 +380,22 @@ public Base(String[] args) throws Exception {\n           e.printStackTrace();\n         }\n       }\n+\n       if (!new File(path).isAbsolute()) {\n         path = new File(currentDirectory, path).getAbsolutePath();\n       }\n-      if (handleOpen(path) != null) {\n-        opened = true;\n+\n+      if (handleOpen(path) == null) {\n+        String mess = I18n.format(_(\"Failed to open sketch: \\\"{0}\\\"\"), path);\n+        // Open failure is fatal in upload/verify mode\n+        if (doUpload || doVerify)\n+          showError(null, mess, null);\n+        else\n+          showWarning(null, mess, null);\n       }\n     }\n \n     if (doUpload || doVerify) {\n-      if (!opened) {\n-        System.out.println(_(\"Can't open source sketch!\"));\n-        System.exit(2);\n-      }\n-\n       // Set verbosity for command line build\n       Preferences.set(\"build.verbose\", \"\" + doVerbose);\n       Preferences.set(\"upload.verbose\", \"\" + doVerbose);\n@@ -425,11 +429,10 @@ public Base(String[] args) throws Exception {\n     }\n \n     // Check if there were previously opened sketches to be restored\n-    if (restoreSketches())\n-      opened = true;\n+    restoreSketches();\n \n     // Create a new empty window (will be replaced with any files to be opened)\n-    if (!opened) {\n+    if (editors.isEmpty()) {\n       handleNew();\n     }\n ",
      "parent_sha": "400ae7fdfdfafe62025f6106595b85453ea9fe78"
    }
  },
  {
    "oid": "fea3848ee06dd1195732047f81f08af2833261ff",
    "message": "Split ports in menu, grouping boards by their protocol\nCloses #2627",
    "date": "2015-02-11T12:08:20Z",
    "url": "https://github.com/arduino/Arduino/commit/fea3848ee06dd1195732047f81f08af2833261ff",
    "details": {
      "sha": "3794c0f2a38db66f0c6afd5f9ffe435befdd0b7a",
      "filename": "app/src/processing/app/Editor.java",
      "status": "modified",
      "additions": 29,
      "deletions": 3,
      "changes": 32,
      "blob_url": "https://github.com/arduino/Arduino/blob/fea3848ee06dd1195732047f81f08af2833261ff/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/fea3848ee06dd1195732047f81f08af2833261ff/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java?ref=fea3848ee06dd1195732047f81f08af2833261ff",
      "patch": "@@ -60,6 +60,9 @@\n @SuppressWarnings(\"serial\")\n public class Editor extends JFrame implements RunnerListener {\n \n+  private final static List<String> BOARD_PROTOCOLS_ORDER = Arrays.asList(new String[]{\"serial\", \"network\"});\n+  private final static List<String> BOARD_PROTOCOLS_ORDER_TRANSLATIONS = Arrays.asList(new String[]{_(\"Serial ports\"), _(\"Network ports\")});\n+\n   Base base;\n \n   // otherwise, if the window is resized with the message label\n@@ -441,7 +444,7 @@ protected void applyPreferences() {\n     textarea.setEditable(!external);\n     saveMenuItem.setEnabled(!external);\n     saveAsMenuItem.setEnabled(!external);\n-    \n+\n     textarea.setDisplayLineNumbers(Preferences.getBoolean(\"editor.linenumbers\"));\n \n     TextAreaPainter painter = textarea.getPainter();\n@@ -996,7 +999,30 @@ protected void populatePortMenu() {\n     String selectedPort = Preferences.get(\"serial.port\");\n \n     List<BoardPort> ports = Base.getDiscoveryManager().discovery();\n+\n+    Collections.sort(ports, new Comparator<BoardPort>() {\n+      @Override\n+      public int compare(BoardPort o1, BoardPort o2) {\n+        return BOARD_PROTOCOLS_ORDER.indexOf(o1.getProtocol()) - BOARD_PROTOCOLS_ORDER.indexOf(o2.getProtocol());\n+      }\n+    });\n+\n+    String lastProtocol = null;\n+    String lastProtocolTranslated;\n     for (BoardPort port : ports) {\n+      if (lastProtocol == null || !port.getProtocol().equals(lastProtocol)) {\n+        if (lastProtocol != null) {\n+          serialMenu.addSeparator();\n+        }\n+        lastProtocol = port.getProtocol();\n+\n+        if (BOARD_PROTOCOLS_ORDER.indexOf(port.getProtocol()) != -1) {\n+          lastProtocolTranslated = BOARD_PROTOCOLS_ORDER_TRANSLATIONS.get(BOARD_PROTOCOLS_ORDER.indexOf(port.getProtocol()));\n+        } else {\n+          lastProtocolTranslated = port.getProtocol();\n+        }\n+        serialMenu.add(new JMenuItem(_(lastProtocolTranslated)));\n+      }\n       String address = port.getAddress();\n       String label = port.getLabel();\n \n@@ -1646,7 +1672,7 @@ protected void setCode(SketchCodeDocument codeDoc) {\n     if (document == null) {  // this document not yet inited\n       document = new SyntaxDocument();\n       codeDoc.setDocument(document);\n-      \n+\n       // turn on syntax highlighting\n       document.setTokenMarker(new PdeKeywords());\n \n@@ -1870,7 +1896,7 @@ protected String getCurrentKeyword() {\n \n \t\t} catch (BadLocationException bl) {\n \t\t\tbl.printStackTrace();\n-\t\t} \n+\t\t}\n \t\treturn text;\n \t}\n ",
      "parent_sha": "5128a062d8ca7612cc1f39a181c2be4142143757"
    }
  },
  {
    "oid": "54da4d6d379222fa076025ebc6964f7f8b51b21b",
    "message": "New editor on MacOSX: restored CMD+E for finding selected text",
    "date": "2015-05-14T12:53:12Z",
    "url": "https://github.com/arduino/Arduino/commit/54da4d6d379222fa076025ebc6964f7f8b51b21b",
    "details": {
      "sha": "891f46b77523f63a4a844c963c4e32d08a9856e8",
      "filename": "app/src/processing/app/Editor.java",
      "status": "modified",
      "additions": 35,
      "deletions": 20,
      "changes": 55,
      "blob_url": "https://github.com/arduino/Arduino/blob/54da4d6d379222fa076025ebc6964f7f8b51b21b/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/54da4d6d379222fa076025ebc6964f7f8b51b21b/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java?ref=54da4d6d379222fa076025ebc6964f7f8b51b21b",
      "patch": "@@ -1407,40 +1407,55 @@ public void actionPerformed(ActionEvent e) {\n \n     item = newJMenuItem(_(\"Find...\"), 'F');\n     item.addActionListener(new ActionListener() {\n-        public void actionPerformed(ActionEvent e) {\n-          if (find == null) {\n-            find = new FindReplace(Editor.this);\n-          }\n-          if (getSelectedText()!= null) find.setFindText( getSelectedText() );\n-          //new FindReplace(Editor.this).show();\n-          find.setLocationRelativeTo(Editor.this);\n-          find.setVisible(true);\n-          //find.setVisible(true);\n+      public void actionPerformed(ActionEvent e) {\n+        if (find == null) {\n+          find = new FindReplace(Editor.this);\n         }\n-      });\n+        if (!OSUtils.isMacOS() && getSelectedText() != null) {\n+          find.setFindText(getSelectedText());\n+        }\n+        find.setLocationRelativeTo(Editor.this);\n+        find.setVisible(true);\n+      }\n+    });\n     menu.add(item);\n \n-    // TODO find next should only be enabled after a\n-    // search has actually taken place\n     item = newJMenuItem(_(\"Find Next\"), 'G');\n     item.addActionListener(new ActionListener() {\n-        public void actionPerformed(ActionEvent e) {\n-          if (find != null) {\n-            find.findNext();\n-          }\n+      public void actionPerformed(ActionEvent e) {\n+        if (find != null) {\n+          find.findNext();\n         }\n-      });\n+      }\n+    });\n     menu.add(item);\n \n     item = newJMenuItemShift(_(\"Find Previous\"), 'G');\n     item.addActionListener(new ActionListener() {\n+      public void actionPerformed(ActionEvent e) {\n+        if (find != null) {\n+          find.findPrevious();\n+        }\n+      }\n+    });\n+    menu.add(item);\n+\n+    if (OSUtils.isMacOS()) {\n+      item = newJMenuItem(_(\"Use Selection For Find\"), 'E');\n+      item.addActionListener(new ActionListener() {\n         public void actionPerformed(ActionEvent e) {\n-          if (find != null) {\n-            find.findPrevious();\n+          if (find == null) {\n+            find = new FindReplace(Editor.this);\n           }\n+          if (getSelectedText() != null) {\n+            find.setFindText(getSelectedText());\n+          }\n+          find.setLocationRelativeTo(Editor.this);\n+          find.setVisible(true);\n         }\n       });\n-    menu.add(item);\n+      menu.add(item);\n+    }\n \n     return menu;\n   }",
      "parent_sha": "5c7a0aa5724b3ac690d6acb5d361187885d802d8"
    }
  },
  {
    "oid": "96e0ee2a67e93aa7ac80e489b5cf9f57694d8a1f",
    "message": "Editor is now able to find a commented line even if // was not written at its beginning. Fixes #3513",
    "date": "2015-09-08T15:41:33Z",
    "url": "https://github.com/arduino/Arduino/commit/96e0ee2a67e93aa7ac80e489b5cf9f57694d8a1f",
    "details": {
      "sha": "41379ae0b0a43f7139e7025206906326bd2e0640",
      "filename": "app/src/processing/app/syntax/SketchTextAreaEditorKit.java",
      "status": "modified",
      "additions": 102,
      "deletions": 1,
      "changes": 103,
      "blob_url": "https://github.com/arduino/Arduino/blob/96e0ee2a67e93aa7ac80e489b5cf9f57694d8a1f/app%2Fsrc%2Fprocessing%2Fapp%2Fsyntax%2FSketchTextAreaEditorKit.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/96e0ee2a67e93aa7ac80e489b5cf9f57694d8a1f/app%2Fsrc%2Fprocessing%2Fapp%2Fsyntax%2FSketchTextAreaEditorKit.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2Fsyntax%2FSketchTextAreaEditorKit.java?ref=96e0ee2a67e93aa7ac80e489b5cf9f57694d8a1f",
      "patch": "@@ -1,5 +1,6 @@\n package processing.app.syntax;\n \n+import org.fife.ui.rsyntaxtextarea.RSyntaxDocument;\n import org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaEditorKit;\n import org.fife.ui.rtextarea.RTextArea;\n import org.fife.ui.rtextarea.RecordableTextAction;\n@@ -16,7 +17,8 @@ public class SketchTextAreaEditorKit extends RSyntaxTextAreaEditorKit {\n   private static final Action[] defaultActions = {\n     new DeleteNextWordAction(),\n     new DeleteLineToCursorAction(),\n-    new SelectWholeLineAction()\n+    new SelectWholeLineAction(),\n+    new ToggleCommentAction()\n   };\n \n   @Override\n@@ -126,4 +128,103 @@ public final String getMacroID() {\n \n   }\n \n+  public static class ToggleCommentAction extends RecordableTextAction {\n+\n+    public ToggleCommentAction() {\n+      super(rstaToggleCommentAction);\n+    }\n+\n+    @Override\n+    public void actionPerformedImpl(ActionEvent e, RTextArea textArea) {\n+\n+      if (!textArea.isEditable() || !textArea.isEnabled()) {\n+        UIManager.getLookAndFeel().provideErrorFeedback(textArea);\n+        return;\n+      }\n+\n+      RSyntaxDocument doc = (RSyntaxDocument) textArea.getDocument();\n+      Element map = doc.getDefaultRootElement();\n+      Caret c = textArea.getCaret();\n+      int dot = c.getDot();\n+      int mark = c.getMark();\n+      int line1 = map.getElementIndex(dot);\n+      int line2 = map.getElementIndex(mark);\n+      int start = Math.min(line1, line2);\n+      int end = Math.max(line1, line2);\n+\n+      org.fife.ui.rsyntaxtextarea.Token t = doc.getTokenListForLine(start);\n+      int languageIndex = t != null ? t.getLanguageIndex() : 0;\n+      String[] startEnd = doc.getLineCommentStartAndEnd(languageIndex);\n+\n+      if (startEnd == null) {\n+        UIManager.getLookAndFeel().provideErrorFeedback(textArea);\n+        return;\n+      }\n+\n+      // Don't toggle comment on last line if there is no\n+      // text selected on it.\n+      if (start != end) {\n+        Element elem = map.getElement(end);\n+        if (Math.max(dot, mark) == elem.getStartOffset()) {\n+          end--;\n+        }\n+      }\n+\n+      textArea.beginAtomicEdit();\n+      try {\n+        boolean add = getDoAdd(doc, map, start, end, startEnd);\n+        for (line1 = start; line1 <= end; line1++) {\n+          Element elem = map.getElement(line1);\n+          handleToggleComment(elem, doc, startEnd, add);\n+        }\n+      } catch (BadLocationException ble) {\n+        ble.printStackTrace();\n+        UIManager.getLookAndFeel().provideErrorFeedback(textArea);\n+      } finally {\n+        textArea.endAtomicEdit();\n+      }\n+\n+    }\n+\n+    private boolean getDoAdd(Document doc, Element map, int startLine, int endLine, String[] startEnd) throws BadLocationException {\n+      boolean doAdd = false;\n+      for (int i = startLine; i <= endLine; i++) {\n+        Element elem = map.getElement(i);\n+        int start = elem.getStartOffset();\n+        String t = doc.getText(start, elem.getEndOffset() - start - 1).trim();\n+        if (!t.startsWith(startEnd[0]) ||\n+          (startEnd[1] != null && !t.endsWith(startEnd[1]))) {\n+          doAdd = true;\n+          break;\n+        }\n+      }\n+      return doAdd;\n+    }\n+\n+    private void handleToggleComment(Element elem, Document doc, String[] startEnd, boolean add) throws BadLocationException {\n+      int start = elem.getStartOffset();\n+      int end = elem.getEndOffset() - 1;\n+      if (add) {\n+        doc.insertString(start, startEnd[0], null);\n+        if (startEnd[1] != null) {\n+          doc.insertString(end + startEnd[0].length(), startEnd[1], null);\n+        }\n+      } else {\n+        String text = doc.getText(start, elem.getEndOffset() - start - 1);\n+        start += text.indexOf(startEnd[0]);\n+        doc.remove(start, startEnd[0].length());\n+        if (startEnd[1] != null) {\n+          int temp = startEnd[1].length();\n+          doc.remove(end - startEnd[0].length() - temp, temp);\n+        }\n+      }\n+    }\n+\n+    @Override\n+    public final String getMacroID() {\n+      return rstaToggleCommentAction;\n+    }\n+\n+  }\n+\n }",
      "parent_sha": "4cb72ceb9b2317ea2bc2ae107f5cfd67600cf2d6"
    }
  },
  {
    "oid": "f474d1c585cc6e0bce6bda20abd4c71b209c476e",
    "message": "Improve library name matching",
    "date": "2015-02-23T11:26:07Z",
    "url": "https://github.com/arduino/Arduino/commit/f474d1c585cc6e0bce6bda20abd4c71b209c476e",
    "details": {
      "sha": "f90c7c4d9814ac6e71ae7cf293c39163c708f980",
      "filename": "arduino-core/src/processing/app/BaseNoGui.java",
      "status": "modified",
      "additions": 61,
      "deletions": 5,
      "changes": 66,
      "blob_url": "https://github.com/arduino/Arduino/blob/f474d1c585cc6e0bce6bda20abd4c71b209c476e/arduino-core%2Fsrc%2Fprocessing%2Fapp%2FBaseNoGui.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/f474d1c585cc6e0bce6bda20abd4c71b209c476e/arduino-core%2Fsrc%2Fprocessing%2Fapp%2FBaseNoGui.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fprocessing%2Fapp%2FBaseNoGui.java?ref=f474d1c585cc6e0bce6bda20abd4c71b209c476e",
      "patch": "@@ -723,11 +723,67 @@ static public void populateImportToLibraryTable() {\n         for (String header : headers) {\n           Library old = importToLibraryTable.get(header);\n           if (old != null) {\n-            // If a library was already found with this header, keep\n-            // it if the library's name matches the header name.\n-            String name = header.substring(0, header.length() - 2);\n-            if (old.getFolder().getPath().endsWith(name))\n-              continue;\n+            // This is the case where 2 libraries have a .h header\n+            // with the same name.  We must decide which library to\n+            // use when a sketch has #include \"name.h\"\n+            //\n+            // When all other factors are equal, \"libName\" is\n+            // used in preference to \"oldName\", because getLibraries()\n+            // gives the library list in order from less specific to\n+            // more specific locations.\n+            //\n+            // But often one library is more clearly the user's\n+            // intention to use.  Many cases are tested, always first\n+            // for \"libName\", then for \"oldName\".\n+            //\n+            String name = header.substring(0, header.length() - 2); // name without \".h\"\n+            String oldName = old.getFolder().getName();  // just the library folder name\n+            String libName = lib.getFolder().getName();  // just the library folder name\n+            //System.out.println(\"name conflict: \" + name);\n+            //System.out.println(\"  old = \" + oldName + \"  ->  \" + old.getFolder().getPath());\n+            //System.out.println(\"  new = \" + libName + \"  ->  \" + lib.getFolder().getPath());\n+            String name_lc = name.toLowerCase();\n+            String oldName_lc = oldName.toLowerCase();\n+            String libName_lc = libName.toLowerCase();\n+            // always favor a perfect name match\n+            if (libName.equals(name)) {\n+            } else if (oldName.equals(name)) {\n+                continue;\n+            // check for \"-master\" appended (zip file from github)\n+            } else if (libName.equals(name+\"-master\")) {\n+            } else if (oldName.equals(name+\"-master\")) {\n+                continue;\n+            // next, favor a match with other stuff appended\n+            } else if (libName.startsWith(name)) {\n+            } else if (oldName.startsWith(name)) {\n+                continue;\n+            // otherwise, favor a match with stuff prepended\n+            } else if (libName.endsWith(name)) {\n+            } else if (oldName.endsWith(name)) {\n+                continue;\n+            // as a last resort, match if stuff prepended and appended\n+            } else if (libName.contains(name)) {\n+            } else if (oldName.contains(name)) {\n+                continue;\n+            // repeat all the above tests, with case insensitive matching\n+            } else if (libName_lc.equals(name_lc)) {\n+            } else if (oldName_lc.equals(name_lc)) {\n+                continue;\n+            } else if (libName_lc.equals(name_lc+\"-master\")) {\n+            } else if (oldName_lc.equals(name_lc+\"-master\")) {\n+                continue;\n+            } else if (libName_lc.startsWith(name_lc)) {\n+            } else if (oldName_lc.startsWith(name_lc)) {\n+                continue;\n+            } else if (libName_lc.endsWith(name_lc)) {\n+            } else if (oldName_lc.endsWith(name_lc)) {\n+                continue;\n+            } else if (libName_lc.contains(name_lc)) {\n+            } else if (oldName_lc.contains(name_lc)) {\n+                continue;\n+            } else {\n+              // none of these tests matched, so just default to \"libName\".\n+            }\n           }\n           importToLibraryTable.put(header, lib);\n         }",
      "parent_sha": "3bd694d78b63c038cdb52dea97f28573db452d48"
    }
  },
  {
    "oid": "bd6c90e5b8de7e0d59a95da97d51a30be25e8a4f",
    "message": "Setting Arduino icon for serial monitor window.\nhttp://code.google.com/p/arduino/issues/detail?id=564",
    "date": "2011-08-24T15:57:58Z",
    "url": "https://github.com/arduino/Arduino/commit/bd6c90e5b8de7e0d59a95da97d51a30be25e8a4f",
    "details": {
      "sha": "405b16b34fa97722acf082e3fac2cba841fc4efb",
      "filename": "app/src/processing/app/Editor.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/arduino/Arduino/blob/bd6c90e5b8de7e0d59a95da97d51a30be25e8a4f/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/bd6c90e5b8de7e0d59a95da97d51a30be25e8a4f/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java?ref=bd6c90e5b8de7e0d59a95da97d51a30be25e8a4f",
      "patch": "@@ -196,8 +196,10 @@ public void windowDeactivated(WindowEvent e) {\n     //PdeKeywords keywords = new PdeKeywords();\n     //sketchbook = new Sketchbook(this);\n \n-    if (serialMonitor == null)\n+    if (serialMonitor == null) {\n       serialMonitor = new SerialMonitor(Preferences.get(\"serial.port\"));\n+      serialMonitor.setIconImage(getIconImage());\n+    }\n     \n     buildMenuBar();\n ",
      "parent_sha": "0020105283919422c12fa81e279c8758b242f81f"
    }
  },
  {
    "oid": "991663409ab875aa22bb181d4833a490e5db1b50",
    "message": "null check on SerialPort.readBytes",
    "date": "2013-02-27T12:42:45Z",
    "url": "https://github.com/arduino/Arduino/commit/991663409ab875aa22bb181d4833a490e5db1b50",
    "details": {
      "sha": "858c6e276e8b2c9609a6f40852b9c6e68f804ada",
      "filename": "app/src/processing/app/Serial.java",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/arduino/Arduino/blob/991663409ab875aa22bb181d4833a490e5db1b50/app%2Fsrc%2Fprocessing%2Fapp%2FSerial.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/991663409ab875aa22bb181d4833a490e5db1b50/app%2Fsrc%2Fprocessing%2Fapp%2FSerial.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FSerial.java?ref=991663409ab875aa22bb181d4833a490e5db1b50",
      "patch": "@@ -185,8 +185,11 @@ public synchronized void serialEvent(SerialPortEvent serialEvent) {\n       case SerialPortEvent.RXFLAG:\n         try {\n           byte[] bytes = port.readBytes();\n+          if (bytes == null) {\n+            return;\n+          }\n           String bytesAsString = new String(bytes);\n-          if(monitor) {\n+          if (monitor) {\n             System.out.print(bytesAsString);\n           }\n           if (this.consumer != null) {\n@@ -199,7 +202,6 @@ public synchronized void serialEvent(SerialPortEvent serialEvent) {\n   }\n \n \n-\n   /**\n    * This will handle both ints, bytes and chars transparently.\n    */",
      "parent_sha": "23086d6b357dca96f3b1ae5616bb29883faf958a"
    }
  },
  {
    "oid": "9df65fdfe51936443e33fd2585efdff966b9a6c1",
    "message": "Fixed translation string",
    "date": "2013-09-10T10:34:46Z",
    "url": "https://github.com/arduino/Arduino/commit/9df65fdfe51936443e33fd2585efdff966b9a6c1",
    "details": {
      "sha": "f364eb19d5feaf6d2fe0f9e42b69e9e9889abad4",
      "filename": "app/src/processing/app/NetworkMonitor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/arduino/Arduino/blob/9df65fdfe51936443e33fd2585efdff966b9a6c1/app%2Fsrc%2Fprocessing%2Fapp%2FNetworkMonitor.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/9df65fdfe51936443e33fd2585efdff966b9a6c1/app%2Fsrc%2Fprocessing%2Fapp%2FNetworkMonitor.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FNetworkMonitor.java?ref=9df65fdfe51936443e33fd2585efdff966b9a6c1",
      "patch": "@@ -127,7 +127,7 @@ public synchronized void message(String s) {\n         }\n       }\n       if (connectionAttempts < MAX_CONNECTION_ATTEMPTS) {\n-        s = \"\\n\" + _(\"Unable to connect: retrying (\" + connectionAttempts + \")... \");\n+        s = \"\\n\" + _(\"Unable to connect: retrying\") + \" (\" + connectionAttempts + \")... \";\n \n         SwingUtilities.invokeLater(new Runnable() {\n           @Override",
      "parent_sha": "e563c5f1363382f7daf6d511603cbcd7e4204b19"
    }
  },
  {
    "oid": "0210c6b53ae290ce16ce8b6b181d540b6a1bf7df",
    "message": "Fix Uncategorized warning message",
    "date": "2015-05-13T21:00:30Z",
    "url": "https://github.com/arduino/Arduino/commit/0210c6b53ae290ce16ce8b6b181d540b6a1bf7df",
    "details": {
      "sha": "82d2d01ff7d753b51a7f0fa3aec084e2dfa651c1",
      "filename": "arduino-core/src/processing/app/packages/UserLibrary.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/arduino/Arduino/blob/0210c6b53ae290ce16ce8b6b181d540b6a1bf7df/arduino-core%2Fsrc%2Fprocessing%2Fapp%2Fpackages%2FUserLibrary.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/0210c6b53ae290ce16ce8b6b181d540b6a1bf7df/arduino-core%2Fsrc%2Fprocessing%2Fapp%2Fpackages%2FUserLibrary.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fprocessing%2Fapp%2Fpackages%2FUserLibrary.java?ref=0210c6b53ae290ce16ce8b6b181d540b6a1bf7df",
      "patch": "@@ -131,9 +131,9 @@ public static UserLibrary create(File libFolder) throws IOException {\n     if (category == null)\n       category = \"Uncategorized\";\n     if (!CATEGORIES.contains(category)) {\n-      category = \"Uncategorized\";\n       System.out.println(\"WARNING: Category '\" + category + \"' in library \" +\n               properties.get(\"name\") + \" is not valid. Setting to 'Uncategorized'\");\n+      category = \"Uncategorized\";\n     }\n \n     String license = properties.get(\"license\");",
      "parent_sha": "765519a56275d43a59979f350c64b63f014a6ad4"
    }
  },
  {
    "oid": "2a677b4bcd20f7b245067ceebd4f821591e243f9",
    "message": "avoid NPE if serial port gets discovered too early",
    "date": "2016-01-07T11:41:56Z",
    "url": "https://github.com/arduino/Arduino/commit/2a677b4bcd20f7b245067ceebd4f821591e243f9",
    "details": {
      "sha": "d7fc02b77a7554f98c8258ec43396a08cc5a05c2",
      "filename": "arduino-core/src/cc/arduino/packages/uploaders/SerialUploader.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/arduino/Arduino/blob/2a677b4bcd20f7b245067ceebd4f821591e243f9/arduino-core%2Fsrc%2Fcc%2Farduino%2Fpackages%2Fuploaders%2FSerialUploader.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/2a677b4bcd20f7b245067ceebd4f821591e243f9/arduino-core%2Fsrc%2Fcc%2Farduino%2Fpackages%2Fuploaders%2FSerialUploader.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fcc%2Farduino%2Fpackages%2Fuploaders%2FSerialUploader.java?ref=2a677b4bcd20f7b245067ceebd4f821591e243f9",
      "patch": "@@ -154,8 +154,10 @@ public boolean uploadUsingPreferences(File sourcePath, String buildPath, String\n     }\n \n     BoardPort boardPort = BaseNoGui.getDiscoveryManager().find(PreferencesData.get(\"serial.port\"));\n-    if (boardPort.getPrefs().get(\"iserial\") != null) {\n+    try {\n       prefs.put(\"serial.port.iserial\", boardPort.getPrefs().get(\"iserial\"));\n+    } catch (Exception e) {\n+      // if serial port does not contain an iserial field\n     }\n \n     prefs.put(\"build.path\", buildPath);",
      "parent_sha": "7e17b5c3184ab1d1191c5c7eea7f5755578b80b0"
    }
  },
  {
    "oid": "c03a8bc175c827beff8226a4b1b36a7bf3993bb1",
    "message": "Minor fix in indentation and style",
    "date": "2019-01-23T12:51:41Z",
    "url": "https://github.com/arduino/Arduino/commit/c03a8bc175c827beff8226a4b1b36a7bf3993bb1",
    "details": {
      "sha": "8619a92f0fd6f4b8bbfc3cbbbf9eb74c7b3f2f27",
      "filename": "arduino-core/src/cc/arduino/packages/discoverers/NetworkDiscovery.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/arduino/Arduino/blob/c03a8bc175c827beff8226a4b1b36a7bf3993bb1/arduino-core%2Fsrc%2Fcc%2Farduino%2Fpackages%2Fdiscoverers%2FNetworkDiscovery.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/c03a8bc175c827beff8226a4b1b36a7bf3993bb1/arduino-core%2Fsrc%2Fcc%2Farduino%2Fpackages%2Fdiscoverers%2FNetworkDiscovery.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fcc%2Farduino%2Fpackages%2Fdiscoverers%2FNetworkDiscovery.java?ref=c03a8bc175c827beff8226a4b1b36a7bf3993bb1",
      "patch": "@@ -162,7 +162,7 @@ public void stop() {\n \n   @Override\n   public List<BoardPort> listDiscoveredBoards() {\n-      synchronized (reachableBoardPorts) {\n+    synchronized (reachableBoardPorts) {\n       return getBoardPortsDiscoveredWithJmDNS();\n     }\n   }\n@@ -176,8 +176,8 @@ public List<BoardPort> listDiscoveredBoards(boolean complete) {\n \n   public void setReachableBoardPorts(List<BoardPort> newReachableBoardPorts) {\n     synchronized (reachableBoardPorts) {\n-      this.reachableBoardPorts.clear();\n-      this.reachableBoardPorts.addAll(newReachableBoardPorts);\n+      reachableBoardPorts.clear();\n+      reachableBoardPorts.addAll(newReachableBoardPorts);\n     }\n   }\n ",
      "parent_sha": "cfd3cf2b276b5d607d055112c71ef52408c2058e"
    }
  },
  {
    "oid": "ba42280fba2b6a3827c9e1ce0ced115118a78a90",
    "message": "Simply arch matching",
    "date": "2016-12-29T05:37:10Z",
    "url": "https://github.com/arduino/Arduino/commit/ba42280fba2b6a3827c9e1ce0ced115118a78a90",
    "details": {
      "sha": "9209c77fc3f68b902d7adae30f70e2831a9fd2c4",
      "filename": "arduino-core/src/cc/arduino/contributions/packages/HostDependentDownloadableContribution.java",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/arduino/Arduino/blob/ba42280fba2b6a3827c9e1ce0ced115118a78a90/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Fpackages%2FHostDependentDownloadableContribution.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/ba42280fba2b6a3827c9e1ce0ced115118a78a90/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Fpackages%2FHostDependentDownloadableContribution.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Fpackages%2FHostDependentDownloadableContribution.java?ref=ba42280fba2b6a3827c9e1ce0ced115118a78a90",
      "patch": "@@ -80,12 +80,10 @@ public boolean isCompatible(Platform platform) {\n     }\n \n     if (osName.contains(\"FreeBSD\")) {\n-      if (osArch.contains(\"amd64\")) {\n-        return host.matches(\"x86_64-freebsd[0-9]*\");\n-      } else if (osArch.contains(\"arm\")) {\n+      if (osArch.contains(\"arm\")) {\n         return host.matches(\"arm.*-freebsd[0-9]*\");\n       } else {\n-        return host.matches(\"i386-freebsd[0-9]*\");\n+        return host.matches(osArch + \"-freebsd[0-9]*\");\n       }\n     }\n ",
      "parent_sha": "481fd94ac64f3031d82fd8f2612eafbbff4b5c65"
    }
  },
  {
    "oid": "a295fbbc36136baaa758c45a48d1d98af9eb68fe",
    "message": "Code cleanup",
    "date": "2015-09-17T14:52:22Z",
    "url": "https://github.com/arduino/Arduino/commit/a295fbbc36136baaa758c45a48d1d98af9eb68fe",
    "details": {
      "sha": "976041eafa7f2744a09ae7a30416bb5600c94e7e",
      "filename": "app/src/processing/app/AbstractMonitor.java",
      "status": "modified",
      "additions": 9,
      "deletions": 17,
      "changes": 26,
      "blob_url": "https://github.com/arduino/Arduino/blob/a295fbbc36136baaa758c45a48d1d98af9eb68fe/app%2Fsrc%2Fprocessing%2Fapp%2FAbstractMonitor.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/a295fbbc36136baaa758c45a48d1d98af9eb68fe/app%2Fsrc%2Fprocessing%2Fapp%2FAbstractMonitor.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FAbstractMonitor.java?ref=a295fbbc36136baaa758c45a48d1d98af9eb68fe",
      "patch": "@@ -1,23 +1,15 @@\n package processing.app;\n \n-import java.awt.Container;\n-import java.awt.Dimension;\n-import java.awt.Rectangle;\n-import java.awt.Toolkit;\n+import cc.arduino.packages.BoardPort;\n+import processing.app.legacy.PApplet;\n+\n+import javax.swing.*;\n+import java.awt.*;\n import java.awt.event.ActionEvent;\n import java.awt.event.ActionListener;\n import java.awt.event.WindowAdapter;\n import java.awt.event.WindowEvent;\n \n-import javax.swing.AbstractAction;\n-import javax.swing.JComponent;\n-import javax.swing.JFrame;\n-import javax.swing.KeyStroke;\n-import javax.swing.Timer;\n-\n-import cc.arduino.packages.BoardPort;\n-import processing.app.legacy.PApplet;\n-\n @SuppressWarnings(\"serial\")\n public abstract class AbstractMonitor extends JFrame implements ActionListener {\n \n@@ -28,7 +20,7 @@ public abstract class AbstractMonitor extends JFrame implements ActionListener {\n   private Timer updateTimer;\n \n   private BoardPort boardPort;\n-  \n+\n   protected String[] serialRateStrings = {\"300\", \"1200\", \"2400\", \"4800\", \"9600\", \"19200\", \"38400\", \"57600\", \"74880\", \"115200\", \"230400\", \"250000\"};\n \n   public AbstractMonitor(BoardPort boardPort) {\n@@ -89,14 +81,14 @@ public void actionPerformed(ActionEvent event) {\n     monitorEnabled = true;\n     closed = false;\n   }\n-  \n+\n   protected abstract void onCreateWindow(Container mainPane);\n \n   public void enableWindow(boolean enable) {\n     onEnableWindow(enable);\n     monitorEnabled = enable;\n   }\n-  \n+\n   protected abstract void onEnableWindow(boolean enable);\n \n   // Puts the window in suspend state, closing the serial port\n@@ -181,7 +173,7 @@ private synchronized String consumeUpdateBuffer() {\n     updateBuffer.setLength(0);\n     return s;\n   }\n-  \n+\n   public void actionPerformed(ActionEvent e) {\n     String s = consumeUpdateBuffer();\n     if (s.isEmpty()) {",
      "parent_sha": "01735420eeb629da07f5a3eb19514f29f600b7fb"
    }
  },
  {
    "oid": "fe424ae39bf5b4c825397fcd2033d77fdfb32214",
    "message": "Do not fail if the data folder can't be read\n\nFix #7937",
    "date": "2018-09-06T09:57:21Z",
    "url": "https://github.com/arduino/Arduino/commit/fe424ae39bf5b4c825397fcd2033d77fdfb32214",
    "details": {
      "sha": "bdd99c576e63c1e3dbee9f37ec57058615ec02ae",
      "filename": "arduino-core/src/cc/arduino/contributions/packages/ContributionsIndexer.java",
      "status": "modified",
      "additions": 11,
      "deletions": 6,
      "changes": 17,
      "blob_url": "https://github.com/arduino/Arduino/blob/fe424ae39bf5b4c825397fcd2033d77fdfb32214/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Fpackages%2FContributionsIndexer.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/fe424ae39bf5b4c825397fcd2033d77fdfb32214/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Fpackages%2FContributionsIndexer.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Fpackages%2FContributionsIndexer.java?ref=fe424ae39bf5b4c825397fcd2033d77fdfb32214",
      "patch": "@@ -55,6 +55,7 @@\n import java.util.*;\n import java.util.stream.Collectors;\n \n+import static processing.app.I18n.format;\n import static processing.app.I18n.tr;\n import static processing.app.helpers.filefilters.OnlyDirs.ONLY_DIRS;\n \n@@ -100,13 +101,17 @@ public void parseIndex() throws Exception {\n     // Overlay 3rd party indexes\n     File[] indexFiles = preferencesFolder.listFiles(new TestPackageIndexFilenameFilter(new PackageIndexFilenameFilter(Constants.DEFAULT_INDEX_FILE_NAME)));\n \n-    for (File indexFile : indexFiles) {\n-      try {\n-\t      mergeContributions(indexFile);\n-      } catch (JsonProcessingException e) {\n-        System.err.println(I18n.format(tr(\"Skipping contributed index file {0}, parsing error occured:\"), indexFile));\n-        System.err.println(e);\n+    if (indexFiles != null) {\n+      for (File indexFile : indexFiles) {\n+        try {\n+          mergeContributions(indexFile);\n+        } catch (JsonProcessingException e) {\n+          System.err.println(format(tr(\"Skipping contributed index file {0}, parsing error occured:\"), indexFile));\n+          System.err.println(e);\n+        }\n       }\n+    } else {\n+      System.err.println(format(tr(\"Error reading package indexes folder: {0}\\n(maybe a permission problem?)\"), preferencesFolder));\n     }\n \n     // Fill tools and toolsDependency cross references",
      "parent_sha": "fd28ded1600dc6de053eb694329c62365525b08e"
    }
  },
  {
    "oid": "0b09a8edd9a87565e247affe02f011aee036cc19",
    "message": "Adding custom error messages for some 1.0 changes.\n\nAlso, changing the logic of the code a bit to correctly place errors even when substituting custom error messages.",
    "date": "2011-09-08T22:10:29Z",
    "url": "https://github.com/arduino/Arduino/commit/0b09a8edd9a87565e247affe02f011aee036cc19",
    "details": {
      "sha": "66f1cc88f622bab12b7dd4dbac7e07bd7104530b",
      "filename": "app/src/processing/app/debug/Compiler.java",
      "status": "modified",
      "additions": 47,
      "deletions": 15,
      "changes": 62,
      "blob_url": "https://github.com/arduino/Arduino/blob/0b09a8edd9a87565e247affe02f011aee036cc19/app%2Fsrc%2Fprocessing%2Fapp%2Fdebug%2FCompiler.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/0b09a8edd9a87565e247affe02f011aee036cc19/app%2Fsrc%2Fprocessing%2Fapp%2Fdebug%2FCompiler.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2Fdebug%2FCompiler.java?ref=0b09a8edd9a87565e247affe02f011aee036cc19",
      "patch": "@@ -380,28 +380,60 @@ public void message(String s) {\n //    }\n     \n     if (pieces != null) {\n-      RunnerException e = sketch.placeException(pieces[3], pieces[1], PApplet.parseInt(pieces[2]) - 1);\n-\n-      // replace full file path with the name of the sketch tab (unless we're\n-      // in verbose mode, in which case don't modify the compiler output)\n-      if (e != null && !verbose) {\n-        SketchCode code = sketch.getCode(e.getCodeIndex());\n-        String fileName = code.isExtension(sketch.getDefaultExtension()) ? code.getPrettyName() : code.getFileName();\n-        s = fileName + \":\" + e.getCodeLine() + \": error: \" + e.getMessage();        \n-      }\n+      String error = pieces[3], msg = \"\";\n       \n       if (pieces[3].trim().equals(\"SPI.h: No such file or directory\")) {\n-        e = new RunnerException(\"Please import the SPI library from the Sketch > Import Library menu.\");\n-        s += \"\\nAs of Arduino 0019, the Ethernet library depends on the SPI library.\" +\n-             \"\\nYou appear to be using it or another library that depends on the SPI library.\";\n+        error = \"Please import the SPI library from the Sketch > Import Library menu.\";\n+        msg = \"\\nAs of Arduino 0019, the Ethernet library depends on the SPI library.\" +\n+              \"\\nYou appear to be using it or another library that depends on the SPI library.\\n\\n\";\n       }\n       \n       if (pieces[3].trim().equals(\"'BYTE' was not declared in this scope\")) {\n-        e = new RunnerException(\"The 'BYTE' keyword is no longer supported.\");\n-\ts += \"\\nAs of Arduino 1.0, the 'BYTE' keyword is no longer supported.\" +\n-\t     \"\\nPlease use Serial.write() instead.\";\n+        error = \"The 'BYTE' keyword is no longer supported.\";\n+        msg = \"\\nAs of Arduino 1.0, the 'BYTE' keyword is no longer supported.\" +\n+              \"\\nPlease use Serial.write() instead.\\n\\n\";\n+      }\n+      \n+      if (pieces[3].trim().equals(\"no matching function for call to 'Server::Server(int)'\")) {\n+        error = \"The Server class has been renamed EthernetServer.\";\n+        msg = \"\\nAs of Arduino 1.0, the Server class in the Ethernet library \" +\n+              \"has been renamed to EthernetServer.\\n\\n\";\n+      }\n+      \n+      if (pieces[3].trim().equals(\"no matching function for call to 'Client::Client(byte [4], int)'\")) {\n+        error = \"The Client class has been renamed EthernetClient.\";\n+        msg = \"\\nAs of Arduino 1.0, the Client class in the Ethernet library \" +\n+              \"has been renamed to EthernetClient.\\n\\n\";\n+      }\n+      \n+      if (pieces[3].trim().equals(\"'Udp' was not declared in this scope\")) {\n+        error = \"The Udp class has been renamed EthernetUdp.\";\n+        msg = \"\\nAs of Arduino 1.0, the Udp class in the Ethernet library \" +\n+              \"has been renamed to EthernetClient.\\n\\n\";\n+      }\n+      \n+      if (pieces[3].trim().equals(\"'class TwoWire' has no member named 'send'\")) {\n+        error = \"Wire.send() has been renamed Wire.write().\";\n+        msg = \"\\nAs of Arduino 1.0, the Wire.send() function was renamed \" +\n+              \"to Wire.write() for consistency with other libraries.\\n\\n\";\n       }\n       \n+      if (pieces[3].trim().equals(\"'class TwoWire' has no member named 'receive'\")) {\n+        error = \"Wire.receive() has been renamed Wire.read().\";\n+        msg = \"\\nAs of Arduino 1.0, the Wire.receive() function was renamed \" +\n+              \"to Wire.read() for consistency with other libraries.\\n\\n\";\n+      }\n+\n+      RunnerException e = sketch.placeException(error, pieces[1], PApplet.parseInt(pieces[2]) - 1);\n+\n+      // replace full file path with the name of the sketch tab (unless we're\n+      // in verbose mode, in which case don't modify the compiler output)\n+      if (e != null && !verbose) {\n+        SketchCode code = sketch.getCode(e.getCodeIndex());\n+        String fileName = code.isExtension(sketch.getDefaultExtension()) ? code.getPrettyName() : code.getFileName();\n+        s = fileName + \":\" + e.getCodeLine() + \": error: \" + pieces[3] + msg;        \n+      }\n+            \n       if (exception == null && e != null) {\n         exception = e;\n         exception.hideStackTrace();",
      "parent_sha": "71289521bfb88d61693d4349c51b9e123d5bc42c"
    }
  },
  {
    "oid": "ada7b410633f59e065a8fff9b82b4bea33c56e81",
    "message": "Print library name when installing library via library manager",
    "date": "2015-04-09T12:47:58Z",
    "url": "https://github.com/arduino/Arduino/commit/ada7b410633f59e065a8fff9b82b4bea33c56e81",
    "details": {
      "sha": "ac87f7372b5cbd39be0cedcb5d7f8e376be8f91c",
      "filename": "arduino-core/src/cc/arduino/contributions/libraries/LibraryInstaller.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/arduino/Arduino/blob/ada7b410633f59e065a8fff9b82b4bea33c56e81/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Flibraries%2FLibraryInstaller.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/ada7b410633f59e065a8fff9b82b4bea33c56e81/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Flibraries%2FLibraryInstaller.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Flibraries%2FLibraryInstaller.java?ref=ada7b410633f59e065a8fff9b82b4bea33c56e81",
      "patch": "@@ -106,7 +106,7 @@ public void install(ContributedLibrary lib, ContributedLibrary replacedLib) thro\n \n     // Step 1: Download library\n     try {\n-      downloader.download(lib, progress, _(\"Downloading library.\"));\n+      downloader.download(lib, progress, _(\"Downloading library: \\\"\" + lib.getName() + \"\\\"\"));\n     } catch (InterruptedException e) {\n       // Download interrupted... just exit\n       return;\n@@ -117,7 +117,7 @@ public void install(ContributedLibrary lib, ContributedLibrary replacedLib) thro\n     // all the temporary folders and abort installation.\n \n     // Step 2: Unpack library on the correct location\n-    progress.setStatus(_(\"Installing library...\"));\n+    progress.setStatus(_(\"Installing library: \\\"\" + lib.getName() + \"\\\"\"));\n     onProgress(progress);\n     File libsFolder = indexer.getSketchbookLibrariesFolder();\n     File tmpFolder = FileUtils.createTempFolderIn(libsFolder);\n@@ -148,7 +148,7 @@ public void remove(ContributedLibrary lib) throws IOException {\n     final MultiStepProgress progress = new MultiStepProgress(2);\n \n     // Step 1: Remove library\n-    progress.setStatus(_(\"Removing library...\"));\n+    progress.setStatus(_(\"Removing library: \\\"\" + lib.getName() + \"\\\"\"));\n     onProgress(progress);\n     FileUtils.recursiveDelete(lib.getInstalledFolder());\n     progress.stepDone();",
      "parent_sha": "87e2e68b85c1ca3337a9c572ba01308ef9a0c446"
    }
  },
  {
    "oid": "354685bbffd3923f031f179382d616ce90920c60",
    "message": "Changed language ISO code to match Norwegian (Norsk bokm\u00e5l).",
    "date": "2012-05-29T06:33:15Z",
    "url": "https://github.com/arduino/Arduino/commit/354685bbffd3923f031f179382d616ce90920c60",
    "details": {
      "sha": "33e368da00a9d7729e8cda09ca43cf7b99cf0ee6",
      "filename": "app/src/processing/app/Preferences.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/arduino/Arduino/blob/354685bbffd3923f031f179382d616ce90920c60/app%2Fsrc%2Fprocessing%2Fapp%2FPreferences.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/354685bbffd3923f031f179382d616ce90920c60/app%2Fsrc%2Fprocessing%2Fapp%2FPreferences.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FPreferences.java?ref=354685bbffd3923f031f179382d616ce90920c60",
      "patch": "@@ -138,7 +138,7 @@ public class Preferences {\n                         \"lv\",\n                         \"lt\",\n                         \"mr\",\n-                        \"no\",\n+                        \"no_nb\",\n                         \"fa\",\n                         \"pl\",\n                         \"pt_br\",",
      "parent_sha": "77ed2f4d62d51ca9d79f3353936e9d359d886ccb"
    }
  },
  {
    "oid": "1845b2dbc3e187b30c442c6e049bb761ee40248f",
    "message": "CPUType menu renamed to Processor",
    "date": "2012-10-18T13:13:14Z",
    "url": "https://github.com/arduino/Arduino/commit/1845b2dbc3e187b30c442c6e049bb761ee40248f",
    "details": {
      "sha": "6d11af86dd44eaf37065a316b2e3658eb105baa3",
      "filename": "app/src/processing/app/Editor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/arduino/Arduino/blob/1845b2dbc3e187b30c442c6e049bb761ee40248f/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/1845b2dbc3e187b30c442c6e049bb761ee40248f/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java?ref=1845b2dbc3e187b30c442c6e049bb761ee40248f",
      "patch": "@@ -693,7 +693,7 @@ public void actionPerformed(ActionEvent e) {\n     \n     if (boardsMenu == null) {\n       boardsMenu = new JMenu(_(\"Board\"));\n-      cpuTypeMenu = new JMenu(_(\"CPUType\"));\n+      cpuTypeMenu = new JMenu(_(\"Processor\"));\n       base.rebuildBoardsMenu(boardsMenu, cpuTypeMenu);\n       //Debug: rebuild imports\n       importMenu.removeAll();",
      "parent_sha": "e8ea12c629e3a07c09dcc54d683760370dde13f4"
    }
  },
  {
    "oid": "fdb98f12135188d6810b7f63f8a777513269dc3f",
    "message": "Using [code] instead of [quote] for Copy for forum. Fixes #1675",
    "date": "2013-11-14T16:45:23Z",
    "url": "https://github.com/arduino/Arduino/commit/fdb98f12135188d6810b7f63f8a777513269dc3f",
    "details": {
      "sha": "ab5ef22fc89068b621956216ec0ece98910c32bd",
      "filename": "app/src/processing/app/tools/DiscourseFormat.java",
      "status": "modified",
      "additions": 21,
      "deletions": 21,
      "changes": 42,
      "blob_url": "https://github.com/arduino/Arduino/blob/fdb98f12135188d6810b7f63f8a777513269dc3f/app%2Fsrc%2Fprocessing%2Fapp%2Ftools%2FDiscourseFormat.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/fdb98f12135188d6810b7f63f8a777513269dc3f/app%2Fsrc%2Fprocessing%2Fapp%2Ftools%2FDiscourseFormat.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2Ftools%2FDiscourseFormat.java?ref=fdb98f12135188d6810b7f63f8a777513269dc3f",
      "patch": "@@ -52,10 +52,10 @@\n  */\n public class DiscourseFormat {\n \n-  Editor editor;\n+  private Editor editor;\n   // JTextArea of the actual Editor\n-  JEditTextArea textarea;\n-  boolean html;\n+  private JEditTextArea textarea;\n+  private boolean html;\n \n \n   /**\n@@ -75,7 +75,7 @@ public DiscourseFormat(Editor editor, boolean html) {\n    */\n   public void show() {\n     // [code] tag cancels other tags, using [quote]\n-    StringBuffer cf = new StringBuffer(html ? \"<pre>\\n\" : \"[quote]\\n\");\n+    StringBuilder cf = new StringBuilder(html ? \"<pre>\\n\" : \"[code]\\n\");\n \n     int selStart = textarea.getSelectionStart();\n     int selStop = textarea.getSelectionStop();\n@@ -99,7 +99,7 @@ public void show() {\n       appendFormattedLine(cf, i);\n     }\n \n-    cf.append(html ? \"\\n</pre>\" : \"\\n[/quote]\");\n+    cf.append(html ? \"\\n</pre>\" : \"\\n[/code]\");\n \n     StringSelection formatted = new StringSelection(cf.toString());\n     Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();\n@@ -111,17 +111,15 @@ public void lostOwnership(Clipboard clipboard, Transferable contents) {\n     Clipboard unixclipboard = Toolkit.getDefaultToolkit().getSystemSelection();\n     if (unixclipboard != null) unixclipboard.setContents(formatted, null);\n \n-    editor.statusNotice(\"Code formatted for \" +\n-                        (html ? \"HTML\" : \"the Arduino forum \") +\n-                        \" has been copied to the clipboard.\");\n+    editor.statusNotice(\"Code formatted for \" + (html ? \"HTML\" : \"the Arduino forum\") + \" has been copied to the clipboard.\");\n   }\n \n   /**\n-    * Append a char to a stringbuffer while escaping for proper display in HTML.\n+    * Append a char to a StringBuilder while escaping for proper display in HTML.\n     * @param c input char to escape\n-    * @param buffer StringBuffer to append html-safe version of c to.\n+    * @param buffer StringBuilder to append html-safe version of c to.\n     */\n-  private void appendToHTML(char c, StringBuffer buffer) {\n+  private void appendToHTML(char c, StringBuilder buffer) {\n     if (!html) {\n       buffer.append(c);\n     } else if (c == '<') {\n@@ -138,7 +136,7 @@ private void appendToHTML(char c, StringBuffer buffer) {\n   }\n \n   // A terrible headache...\n-  public void appendFormattedLine(StringBuffer cf, int line) {\n+  public void appendFormattedLine(StringBuilder cf, int line) {\n     Segment segment = new Segment();\n \n     TextAreaPainter painter = textarea.getPainter();\n@@ -203,12 +201,14 @@ public void appendFormattedLine(StringBuffer cf, int line) {\n //          fm = painter.getFontMetrics();\n         } else {\n           // Place open tags []\n-          cf.append(html ? \"<span style=\\\"color: #\" : \"[color=#\");\n-          cf.append(PApplet.hex(styles[id].getColor().getRGB() & 0xFFFFFF, 6));\n-          cf.append(html ? \";\\\">\" : \"]\");\n+          if (html) {\n+            cf.append(\"<span style=\\\"color: #\");\n+            cf.append(PApplet.hex(styles[id].getColor().getRGB() & 0xFFFFFF, 6));\n+            cf.append(\";\\\">\");\n+          }\n \n-          if (styles[id].isBold())\n-            cf.append(html ? \"<b>\" : \"[b]\");\n+          if (html && styles[id].isBold())\n+            cf.append(\"<b>\");\n \n //          fm = styles[id].getFontMetrics(defaultFont);\n         }\n@@ -228,10 +228,10 @@ public void appendFormattedLine(StringBuffer cf, int line) {\n             appendToHTML(c, cf);\n           }\n           // Place close tags [/]\n-          if (j == (length - 1) && id != Token.NULL && styles[id].isBold())\n-            cf.append(html ? \"</b>\" : \"[/b]\");\n-          if (j == (length - 1) && id != Token.NULL)\n-            cf.append(html ? \"</span>\" : \"[/color]\");\n+          if (html && j == (length - 1) && id != Token.NULL && styles[id].isBold())\n+            cf.append(\"</b>\");\n+          if (html && j == (length - 1) && id != Token.NULL)\n+            cf.append(\"</span>\");\n //          int charWidth;\n //          if (c == '\\t') {\n //            charWidth = (int) painter",
      "parent_sha": "9dcbfd47e1310e72786aa8aaf4d86352a8687bfb"
    }
  },
  {
    "oid": "17598368ac26a953a23634229b666e8b9a569ab6",
    "message": "Updated MenuScroller with latest from https://tips4java.wordpress.com/2009/02/01/menu-scroller/\nReviewed its getMaximumItems method (now getMaximumDrawableMenuItems) so that it returns a 1/3rd less the max number, avoiding a bad crash on linuxes. Fixes #3174",
    "date": "2015-05-21T09:31:18Z",
    "url": "https://github.com/arduino/Arduino/commit/17598368ac26a953a23634229b666e8b9a569ab6",
    "details": {
      "sha": "e5ac193aef1dde848bec0e541e3e0e3d83843e67",
      "filename": "app/src/processing/app/tools/MenuScroller.java",
      "status": "modified",
      "additions": 130,
      "deletions": 176,
      "changes": 306,
      "blob_url": "https://github.com/arduino/Arduino/blob/17598368ac26a953a23634229b666e8b9a569ab6/app%2Fsrc%2Fprocessing%2Fapp%2Ftools%2FMenuScroller.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/17598368ac26a953a23634229b666e8b9a569ab6/app%2Fsrc%2Fprocessing%2Fapp%2Ftools%2FMenuScroller.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2Ftools%2FMenuScroller.java?ref=17598368ac26a953a23634229b666e8b9a569ab6",
      "patch": "@@ -3,43 +3,31 @@\n  */\n package processing.app.tools;\n \n-import java.awt.Color;\n-import java.awt.Component;\n-import java.awt.Dimension;\n-import java.awt.Graphics;\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n-import java.awt.event.MouseWheelEvent;\n-import java.awt.event.MouseWheelListener;\n-\n-import javax.swing.Icon;\n-import javax.swing.JComponent;\n-import javax.swing.JMenu;\n-import javax.swing.JMenuItem;\n-import javax.swing.JPopupMenu;\n-import javax.swing.MenuSelectionManager;\n-import javax.swing.Timer;\n+import javax.swing.*;\n import javax.swing.event.ChangeEvent;\n import javax.swing.event.ChangeListener;\n import javax.swing.event.PopupMenuEvent;\n import javax.swing.event.PopupMenuListener;\n-import javax.swing.plaf.ButtonUI;\n+import java.awt.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.MouseWheelEvent;\n+import java.awt.event.MouseWheelListener;\n \n /**\n  * A class that provides scrolling capabilities to a long menu dropdown or\n  * popup menu.  A number of items can optionally be frozen at the top and/or\n  * bottom of the menu.\n- * <P>\n+ * <p/>\n  * <B>Implementation note:</B>  The default number of items to display\n  * at a time is 15, and the default scrolling interval is 125 milliseconds.\n- * <P>\n+ * <p/>\n  *\n- * @version 1.5.0 04/05/12\n  * @author Darryl\n+ * @version 1.5.0 04/05/12\n  */\n public class MenuScroller {\n \n-  //private JMenu menu;\n   private JPopupMenu menu;\n   private Component[] menuItems;\n   private MenuScrollItem upItem;\n@@ -53,40 +41,21 @@ public class MenuScroller {\n   private int firstIndex = 0;\n   private int keepVisibleIndex = -1;\n \n-  private static int getMaximumItems(JPopupMenu menu) {\n-\tJMenuItem test = new JMenuItem(\"test\");\n-\tButtonUI ui = test.getUI();\n-\tDimension d = ui.getPreferredSize(test);\n-\tdouble item_height = d.getHeight();\n-\t//System.out.println(\"JMenuItem Height \" + item_height);\n-\tJMenuItem up = new JMenuItem(MenuIcon.UP);\n-\tui = up.getUI();\n-\td = ui.getPreferredSize(up);\n-\tdouble icon_height = d.getHeight();\n-\t//System.out.println(\"icon item height \" + icon_height);\n-\tdouble menu_border_height = 8.0; // kludge - how to detect this?\n-\tdouble screen_height = java.awt.Toolkit.getDefaultToolkit().getScreenSize().getHeight();\n-\t//System.out.println(\"screen height \" + screen_height);\n-\tint n = (int)((screen_height - icon_height * 2 - menu_border_height) / item_height);\n-\t//System.out.println(\"max items \" + n);\n-\treturn n;\n-  }\n-\n   /**\n    * Registers a menu to be scrolled with the default number of items to\n    * display at a time and the default scrolling interval.\n-   * \n+   *\n    * @param menu the menu\n    * @return the MenuScroller\n-   */  \n+   */\n   public static MenuScroller setScrollerFor(JMenu menu) {\n     return new MenuScroller(menu);\n   }\n \n   /**\n    * Registers a popup menu to be scrolled with the default number of items to\n    * display at a time and the default scrolling interval.\n-   * \n+   *\n    * @param menu the popup menu\n    * @return the MenuScroller\n    */\n@@ -97,8 +66,8 @@ public static MenuScroller setScrollerFor(JPopupMenu menu) {\n   /**\n    * Registers a menu to be scrolled with the default number of items to\n    * display at a time and the specified scrolling interval.\n-   * \n-   * @param menu the menu\n+   *\n+   * @param menu        the menu\n    * @param scrollCount the number of items to display at a time\n    * @return the MenuScroller\n    * @throws IllegalArgumentException if scrollCount is 0 or negative\n@@ -110,8 +79,8 @@ public static MenuScroller setScrollerFor(JMenu menu, int scrollCount) {\n   /**\n    * Registers a popup menu to be scrolled with the default number of items to\n    * display at a time and the specified scrolling interval.\n-   * \n-   * @param menu the popup menu\n+   *\n+   * @param menu        the popup menu\n    * @param scrollCount the number of items to display at a time\n    * @return the MenuScroller\n    * @throws IllegalArgumentException if scrollCount is 0 or negative\n@@ -123,10 +92,10 @@ public static MenuScroller setScrollerFor(JPopupMenu menu, int scrollCount) {\n   /**\n    * Registers a menu to be scrolled, with the specified number of items to\n    * display at a time and the specified scrolling interval.\n-   * \n-   * @param menu the menu\n+   *\n+   * @param menu        the menu\n    * @param scrollCount the number of items to be displayed at a time\n-   * @param interval the scroll interval, in milliseconds\n+   * @param interval    the scroll interval, in milliseconds\n    * @return the MenuScroller\n    * @throws IllegalArgumentException if scrollCount or interval is 0 or negative\n    */\n@@ -137,10 +106,10 @@ public static MenuScroller setScrollerFor(JMenu menu, int scrollCount, int inter\n   /**\n    * Registers a popup menu to be scrolled, with the specified number of items to\n    * display at a time and the specified scrolling interval.\n-   * \n-   * @param menu the popup menu\n+   *\n+   * @param menu        the popup menu\n    * @param scrollCount the number of items to be displayed at a time\n-   * @param interval the scroll interval, in milliseconds\n+   * @param interval    the scroll interval, in milliseconds\n    * @return the MenuScroller\n    * @throws IllegalArgumentException if scrollCount or interval is 0 or negative\n    */\n@@ -153,71 +122,71 @@ public static MenuScroller setScrollerFor(JPopupMenu menu, int scrollCount, int\n    * to display in the scrolling region, the specified scrolling interval,\n    * and the specified numbers of items fixed at the top and bottom of the\n    * menu.\n-   * \n-   * @param menu the menu\n-   * @param scrollCount the number of items to display in the scrolling portion\n-   * @param interval the scroll interval, in milliseconds\n-   * @param topFixedCount the number of items to fix at the top.  May be 0.\n+   *\n+   * @param menu             the menu\n+   * @param scrollCount      the number of items to display in the scrolling portion\n+   * @param interval         the scroll interval, in milliseconds\n+   * @param topFixedCount    the number of items to fix at the top.  May be 0.\n    * @param bottomFixedCount the number of items to fix at the bottom. May be 0\n-   * @throws IllegalArgumentException if scrollCount or interval is 0 or\n-   * negative or if topFixedCount or bottomFixedCount is negative\n    * @return the MenuScroller\n+   * @throws IllegalArgumentException if scrollCount or interval is 0 or\n+   *                                  negative or if topFixedCount or bottomFixedCount is negative\n    */\n   public static MenuScroller setScrollerFor(JMenu menu, int scrollCount, int interval,\n-          int topFixedCount, int bottomFixedCount) {\n+                                            int topFixedCount, int bottomFixedCount) {\n     return new MenuScroller(menu, scrollCount, interval,\n-            topFixedCount, bottomFixedCount);\n+      topFixedCount, bottomFixedCount);\n   }\n \n   /**\n    * Registers a popup menu to be scrolled, with the specified number of items\n    * to display in the scrolling region, the specified scrolling interval,\n    * and the specified numbers of items fixed at the top and bottom of the\n    * popup menu.\n-   * \n-   * @param menu the popup menu\n-   * @param scrollCount the number of items to display in the scrolling portion\n-   * @param interval the scroll interval, in milliseconds\n-   * @param topFixedCount the number of items to fix at the top.  May be 0\n+   *\n+   * @param menu             the popup menu\n+   * @param scrollCount      the number of items to display in the scrolling portion\n+   * @param interval         the scroll interval, in milliseconds\n+   * @param topFixedCount    the number of items to fix at the top.  May be 0\n    * @param bottomFixedCount the number of items to fix at the bottom.  May be 0\n-   * @throws IllegalArgumentException if scrollCount or interval is 0 or\n-   * negative or if topFixedCount or bottomFixedCount is negative\n    * @return the MenuScroller\n+   * @throws IllegalArgumentException if scrollCount or interval is 0 or\n+   *                                  negative or if topFixedCount or bottomFixedCount is negative\n    */\n   public static MenuScroller setScrollerFor(JPopupMenu menu, int scrollCount, int interval,\n-          int topFixedCount, int bottomFixedCount) {\n+                                            int topFixedCount, int bottomFixedCount) {\n     return new MenuScroller(menu, scrollCount, interval,\n-            topFixedCount, bottomFixedCount);\n+      topFixedCount, bottomFixedCount);\n   }\n \n   /**\n    * Constructs a <code>MenuScroller</code> that scrolls a menu with the\n    * default number of items to display at a time, and default scrolling\n    * interval.\n-   * \n+   *\n    * @param menu the menu\n    */\n   public MenuScroller(JMenu menu) {\n-    this(menu, -1);\n+    this(menu, 15);\n   }\n \n   /**\n    * Constructs a <code>MenuScroller</code> that scrolls a popup menu with the\n    * default number of items to display at a time, and default scrolling\n    * interval.\n-   * \n+   *\n    * @param menu the popup menu\n    */\n   public MenuScroller(JPopupMenu menu) {\n-    this(menu, -1);\n+    this(menu, 15);\n   }\n \n   /**\n    * Constructs a <code>MenuScroller</code> that scrolls a menu with the\n    * specified number of items to display at a time, and default scrolling\n    * interval.\n-   * \n-   * @param menu the menu\n+   *\n+   * @param menu        the menu\n    * @param scrollCount the number of items to display at a time\n    * @throws IllegalArgumentException if scrollCount is 0 or negative\n    */\n@@ -229,8 +198,8 @@ public MenuScroller(JMenu menu, int scrollCount) {\n    * Constructs a <code>MenuScroller</code> that scrolls a popup menu with the\n    * specified number of items to display at a time, and default scrolling\n    * interval.\n-   * \n-   * @param menu the popup menu\n+   *\n+   * @param menu        the popup menu\n    * @param scrollCount the number of items to display at a time\n    * @throws IllegalArgumentException if scrollCount is 0 or negative\n    */\n@@ -242,10 +211,10 @@ public MenuScroller(JPopupMenu menu, int scrollCount) {\n    * Constructs a <code>MenuScroller</code> that scrolls a menu with the\n    * specified number of items to display at a time, and specified scrolling\n    * interval.\n-   * \n-   * @param menu the menu\n+   *\n+   * @param menu        the menu\n    * @param scrollCount the number of items to display at a time\n-   * @param interval the scroll interval, in milliseconds\n+   * @param interval    the scroll interval, in milliseconds\n    * @throws IllegalArgumentException if scrollCount or interval is 0 or negative\n    */\n   public MenuScroller(JMenu menu, int scrollCount, int interval) {\n@@ -256,10 +225,10 @@ public MenuScroller(JMenu menu, int scrollCount, int interval) {\n    * Constructs a <code>MenuScroller</code> that scrolls a popup menu with the\n    * specified number of items to display at a time, and specified scrolling\n    * interval.\n-   * \n-   * @param menu the popup menu\n+   *\n+   * @param menu        the popup menu\n    * @param scrollCount the number of items to display at a time\n-   * @param interval the scroll interval, in milliseconds\n+   * @param interval    the scroll interval, in milliseconds\n    * @throws IllegalArgumentException if scrollCount or interval is 0 or negative\n    */\n   public MenuScroller(JPopupMenu menu, int scrollCount, int interval) {\n@@ -271,17 +240,17 @@ public MenuScroller(JPopupMenu menu, int scrollCount, int interval) {\n    * specified number of items to display in the scrolling region, the\n    * specified scrolling interval, and the specified numbers of items fixed at\n    * the top and bottom of the menu.\n-   * \n-   * @param menu the menu\n-   * @param scrollCount the number of items to display in the scrolling portion\n-   * @param interval the scroll interval, in milliseconds\n-   * @param topFixedCount the number of items to fix at the top.  May be 0\n+   *\n+   * @param menu             the menu\n+   * @param scrollCount      the number of items to display in the scrolling portion\n+   * @param interval         the scroll interval, in milliseconds\n+   * @param topFixedCount    the number of items to fix at the top.  May be 0\n    * @param bottomFixedCount the number of items to fix at the bottom.  May be 0\n    * @throws IllegalArgumentException if scrollCount or interval is 0 or\n-   * negative or if topFixedCount or bottomFixedCount is negative\n+   *                                  negative or if topFixedCount or bottomFixedCount is negative\n    */\n   public MenuScroller(JMenu menu, int scrollCount, int interval,\n-          int topFixedCount, int bottomFixedCount) {\n+                      int topFixedCount, int bottomFixedCount) {\n     this(menu.getPopupMenu(), scrollCount, interval, topFixedCount, bottomFixedCount);\n   }\n \n@@ -290,24 +259,23 @@ public MenuScroller(JMenu menu, int scrollCount, int interval,\n    * specified number of items to display in the scrolling region, the\n    * specified scrolling interval, and the specified numbers of items fixed at\n    * the top and bottom of the popup menu.\n-   * \n-   * @param menu the popup menu\n-   * @param scrollCount the number of items to display in the scrolling portion\n-   * @param interval the scroll interval, in milliseconds\n-   * @param topFixedCount the number of items to fix at the top.  May be 0\n+   *\n+   * @param menu             the popup menu\n+   * @param scrollCount      the number of items to display in the scrolling portion\n+   * @param interval         the scroll interval, in milliseconds\n+   * @param topFixedCount    the number of items to fix at the top.  May be 0\n    * @param bottomFixedCount the number of items to fix at the bottom.  May be 0\n    * @throws IllegalArgumentException if scrollCount or interval is 0 or\n-   * negative or if topFixedCount or bottomFixedCount is negative\n+   *                                  negative or if topFixedCount or bottomFixedCount is negative\n    */\n   public MenuScroller(JPopupMenu menu, int scrollCount, int interval,\n-          int topFixedCount, int bottomFixedCount) {\n-          \t\n-    if(scrollCount == -1)\n-    \tscrollCount = getMaximumItems(menu)-topFixedCount-bottomFixedCount; // Autosize\n-    \n-    if(interval == -1)\n-    \tinterval = 150; // Default value\n-    \t\t\n+                      int topFixedCount, int bottomFixedCount) {\n+\n+    int autoSizeScrollCount = getMaximumDrawableMenuItems();\n+    if (autoSizeScrollCount > scrollCount) {\n+      scrollCount = autoSizeScrollCount;\n+    }\n+\n     if (scrollCount <= 0 || interval <= 0) {\n       throw new IllegalArgumentException(\"scrollCount and interval must be greater than 0\");\n     }\n@@ -329,7 +297,7 @@ public MenuScroller(JPopupMenu menu, int scrollCount, int interval,\n \n   /**\n    * Returns the scroll interval in milliseconds\n-   * \n+   *\n    * @return the scroll interval in milliseconds\n    */\n   public int getInterval() {\n@@ -338,7 +306,7 @@ public int getInterval() {\n \n   /**\n    * Sets the scroll interval in milliseconds\n-   * \n+   *\n    * @param interval the scroll interval in milliseconds\n    * @throws IllegalArgumentException if interval is 0 or negative\n    */\n@@ -362,7 +330,7 @@ public int getscrollCount() {\n \n   /**\n    * Sets the number of items in the scrolling portion of the menu.\n-   * \n+   *\n    * @param scrollCount the number of items to display at a time\n    * @throws IllegalArgumentException if scrollCount is 0 or negative\n    */\n@@ -376,7 +344,7 @@ public void setScrollCount(int scrollCount) {\n \n   /**\n    * Returns the number of items fixed at the top of the menu or popup menu.\n-   * \n+   *\n    * @return the number of items\n    */\n   public int getTopFixedCount() {\n@@ -385,7 +353,7 @@ public int getTopFixedCount() {\n \n   /**\n    * Sets the number of items to fix at the top of the menu or popup menu.\n-   * \n+   *\n    * @param topFixedCount the number of items\n    */\n   public void setTopFixedCount(int topFixedCount) {\n@@ -399,7 +367,7 @@ public void setTopFixedCount(int topFixedCount) {\n \n   /**\n    * Returns the number of items fixed at the bottom of the menu or popup menu.\n-   * \n+   *\n    * @return the number of items\n    */\n   public int getBottomFixedCount() {\n@@ -408,7 +376,7 @@ public int getBottomFixedCount() {\n \n   /**\n    * Sets the number of items to fix at the bottom of the menu or popup menu.\n-   * \n+   *\n    * @param bottomFixedCount the number of items\n    */\n   public void setBottomFixedCount(int bottomFixedCount) {\n@@ -427,8 +395,7 @@ public void keepVisible(JMenuItem item) {\n     if (item == null) {\n       keepVisibleIndex = -1;\n     } else {\n-      int index = menu.getComponentIndex(item);\n-      keepVisibleIndex = index;\n+      keepVisibleIndex = menu.getComponentIndex(item);\n     }\n   }\n \n@@ -459,56 +426,64 @@ public void dispose() {\n   /**\n    * Ensures that the <code>dispose</code> method of this MenuScroller is\n    * called when there are no more refrences to it.\n-   * \n-   * @exception  Throwable if an error occurs.\n+   *\n+   * @throws Throwable if an error occurs.\n    * @see MenuScroller#dispose()\n    */\n   @Override\n   public void finalize() throws Throwable {\n+    super.finalize();\n     dispose();\n   }\n \n   private void refreshMenu() {\n-    if (menuItems == null || menuItems.length == 0) {\n-      return;\n-    }\n-\n-    int newFirstIndex = Math.max(topFixedCount, firstIndex);\n-    newFirstIndex = Math.min(menuItems.length - bottomFixedCount - scrollCount, newFirstIndex);\n+    if (menuItems != null && menuItems.length > 0) {\n+      firstIndex = Math.max(topFixedCount, firstIndex);\n+      firstIndex = Math.min(menuItems.length - bottomFixedCount - scrollCount, firstIndex);\n \n-    if (newFirstIndex < 0) {\n-      return;\n-    }\n+      upItem.setEnabled(firstIndex > topFixedCount);\n+      downItem.setEnabled(firstIndex + scrollCount < menuItems.length - bottomFixedCount);\n \n-    firstIndex = newFirstIndex;\n+      menu.removeAll();\n+      for (int i = 0; i < topFixedCount; i++) {\n+        menu.add(menuItems[i]);\n+      }\n+      if (topFixedCount > 0) {\n+        menu.addSeparator();\n+      }\n \n-    upItem.setEnabled(firstIndex > topFixedCount);\n-    downItem.setEnabled(firstIndex + scrollCount < menuItems.length - bottomFixedCount);\n+      menu.add(upItem);\n+      for (int i = firstIndex; i < scrollCount + firstIndex; i++) {\n+        menu.add(menuItems[i]);\n+      }\n+      menu.add(downItem);\n \n-    menu.removeAll();\n-    for (int i = 0; i < topFixedCount; i++) {\n-      menu.add(menuItems[i]);\n-    }\n-      /*if (topFixedCount > 0) {\n+      if (bottomFixedCount > 0) {\n         menu.addSeparator();\n-      }*/\n+      }\n+      for (int i = menuItems.length - bottomFixedCount; i < menuItems.length; i++) {\n+        menu.add(menuItems[i]);\n+      }\n \n-    menu.add(upItem);\n-    for (int i = firstIndex; i < scrollCount + firstIndex; i++) {\n-      menu.add(menuItems[i]);\n+      JComponent parent = (JComponent) upItem.getParent();\n+      parent.revalidate();\n+      parent.repaint();\n     }\n-    menu.add(downItem);\n+  }\n \n-      /*if (bottomFixedCount > 0) {\n-        menu.addSeparator();\n-      }*/\n-    for (int i = menuItems.length - bottomFixedCount; i < menuItems.length; i++) {\n-      menu.add(menuItems[i]);\n-    }\n+  private int getMaximumDrawableMenuItems() {\n+    JMenuItem test = new JMenuItem(\"test\");\n+    double itemHeight = test.getUI().getPreferredSize(test).getHeight();\n \n-    JComponent parent = (JComponent) upItem.getParent();\n-    parent.revalidate();\n-    parent.repaint();\n+    JMenuItem arrowMenuItem = new JMenuItem(MenuIcon.UP);\n+    double arrowMenuItemHeight = arrowMenuItem.getUI().getPreferredSize(arrowMenuItem).getHeight();\n+\n+    double menuBorderHeight = 8.0; // kludge - how to detect this?\n+    double screenHeight = java.awt.Toolkit.getDefaultToolkit().getScreenSize().getHeight();\n+\n+    int maxItems = (int) ((screenHeight - arrowMenuItemHeight * 2 - menuBorderHeight) / itemHeight);\n+    maxItems -= maxItems / 3;\n+    return maxItems;\n   }\n \n   private class MouseScrollListener implements MouseWheelListener {\n@@ -518,7 +493,7 @@ public void mouseWheelMoved(MouseWheelEvent mwe) {\n       mwe.consume();\n     }\n   }\n-  \n+\n   private class MenuScrollListener implements PopupMenuListener {\n \n     @Override\n@@ -538,29 +513,10 @@ public void popupMenuCanceled(PopupMenuEvent e) {\n \n     private void setMenuItems() {\n       menuItems = menu.getComponents();\n-\n-      // Hack for auto detect the topFixed total\n-      /*int topFixedCountPrev = topFixedCount;\n-      for(int i=menuItems.length-1;i>0;i--)\n-      {\t\n-      \tif(menuItems[i].getClass().getName().endsWith(\"Separator\"))\n-      \t{\n-      \t\tSystem.out.println(i);\n-      \t\tsetTopFixedCount(i+1);\n-      \t\t\n-      \t\tif(topFixedCount!=topFixedCountPrev)\n-      \t\t{\n-      \t\t\tscrollCount = getMaximumItems()-topFixedCount;\n-      \t\t\tSystem.out.println(getMaximumItems()-topFixedCount);\n-      \t\t}\n-      \t\tbreak;\n-      \t}\n-      }*/\n-      \n       if (keepVisibleIndex >= topFixedCount\n-              && keepVisibleIndex <= menuItems.length - bottomFixedCount\n-              && (keepVisibleIndex > firstIndex + scrollCount\n-              || keepVisibleIndex < firstIndex)) {\n+        && keepVisibleIndex <= menuItems.length - bottomFixedCount\n+        && (keepVisibleIndex > firstIndex + scrollCount\n+        || keepVisibleIndex < firstIndex)) {\n         firstIndex = Math.min(firstIndex, keepVisibleIndex);\n         firstIndex = Math.max(firstIndex, keepVisibleIndex - scrollCount + 1);\n       }\n@@ -577,7 +533,6 @@ private void restoreMenuItems() {\n     }\n   }\n \n-  @SuppressWarnings(\"serial\")\n   private class MenuScrollTimer extends Timer {\n \n     public MenuScrollTimer(final int increment, int interval) {\n@@ -592,11 +547,10 @@ public void actionPerformed(ActionEvent e) {\n     }\n   }\n \n-  @SuppressWarnings(\"serial\")\n   private class MenuScrollItem extends JMenuItem\n-          implements ChangeListener {\n+    implements ChangeListener {\n \n-    private MenuScrollTimer timer;\n+    private final MenuScrollTimer timer;\n \n     public MenuScrollItem(MenuIcon icon, int increment) {\n       setIcon(icon);\n@@ -620,7 +574,7 @@ public void stateChanged(ChangeEvent e) {\n     }\n   }\n \n-  private static enum MenuIcon implements Icon {\n+  private enum MenuIcon implements Icon {\n \n     UP(9, 1, 9),\n     DOWN(1, 9, 1);",
      "parent_sha": "d8b6619de079ced8cf789b08c995cf674a9f02c1"
    }
  },
  {
    "oid": "f62b5db908089f3dff24856d6cd1e76ac19df211",
    "message": "Print log4j store directory only when operating in GUI mode (#9695)\n\nThis fixes CommandLineTest.testCommandLineVersion()\r\n\r\nLooks like the test was broken by the System.out.println statement in Base.java\r\nhttps://github.com/arduino/Arduino/commit/824567d763a29aaf439a271414c08d17ad521299",
    "date": "2020-02-07T17:57:15Z",
    "url": "https://github.com/arduino/Arduino/commit/f62b5db908089f3dff24856d6cd1e76ac19df211",
    "details": {
      "sha": "be656b8a7bf43baf92c4d1b0e39fbf52c5a6c9b9",
      "filename": "app/src/processing/app/Base.java",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/arduino/Arduino/blob/f62b5db908089f3dff24856d6cd1e76ac19df211/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/f62b5db908089f3dff24856d6cd1e76ac19df211/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java?ref=f62b5db908089f3dff24856d6cd1e76ac19df211",
      "patch": "@@ -207,9 +207,6 @@ public Base(String[] args) throws Exception {\n     BaseNoGui.getPlatform().init();\n \n     BaseNoGui.initPortableFolder();\n-    // This configure the logs root folder\n-    System.out.println(\"Set log4j store directory \" + BaseNoGui.getSettingsFolder().getAbsolutePath());\n-    System.setProperty(\"log4j.dir\", BaseNoGui.getSettingsFolder().getAbsolutePath());\n \n     // Look for a possible \"--preferences-file\" parameter and load preferences\n     BaseNoGui.initParameters(args);\n@@ -218,6 +215,12 @@ public Base(String[] args) throws Exception {\n     parser.parseArgumentsPhase1();\n     commandLine = !parser.isGuiMode();\n \n+    // This configure the logs root folder\n+    if (parser.isGuiMode()) {\n+        System.out.println(\"Set log4j store directory \" + BaseNoGui.getSettingsFolder().getAbsolutePath());\n+    }\n+    System.setProperty(\"log4j.dir\", BaseNoGui.getSettingsFolder().getAbsolutePath());\n+\n     BaseNoGui.checkInstallationFolder();\n \n     // If no path is set, get the default sketchbook folder for this platform",
      "parent_sha": "b59c91ebe288ded66d35b64175dc94b2b53d01ad"
    }
  },
  {
    "oid": "06cfbbfa74e048319bc83a0af8b4eed7717ea758",
    "message": "Annotate custom menu to avoid name clashing\n\nFixes #5260",
    "date": "2019-07-18T08:30:40Z",
    "url": "https://github.com/arduino/Arduino/commit/06cfbbfa74e048319bc83a0af8b4eed7717ea758",
    "details": {
      "sha": "d3c433802daf502191225860f51d7dc2aee8b45b",
      "filename": "app/src/processing/app/Base.java",
      "status": "modified",
      "additions": 9,
      "deletions": 10,
      "changes": 19,
      "blob_url": "https://github.com/arduino/Arduino/blob/06cfbbfa74e048319bc83a0af8b4eed7717ea758/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/06cfbbfa74e048319bc83a0af8b4eed7717ea758/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java?ref=06cfbbfa74e048319bc83a0af8b4eed7717ea758",
      "patch": "@@ -1436,17 +1436,16 @@ public void actionPerformed(ActionEvent actionevent) {\n     boardMenu.add(new JSeparator());\n \n     // Generate custom menus for all platforms\n-    Set<String> customMenusTitles = new LinkedHashSet<>();\n     for (TargetPackage targetPackage : BaseNoGui.packages.values()) {\n       for (TargetPlatform targetPlatform : targetPackage.platforms()) {\n-        customMenusTitles.addAll(targetPlatform.getCustomMenus().values());\n+        for (String customMenuTitle : targetPlatform.getCustomMenus().values()) {\n+          JMenu customMenu = new JMenu(tr(customMenuTitle));\n+          customMenu.putClientProperty(\"platform\", targetPlatform.getId());\n+          customMenu.putClientProperty(\"removeOnWindowDeactivation\", true);\n+          boardsCustomMenus.add(customMenu);\n+        }\n       }\n     }\n-    for (String customMenuTitle : customMenusTitles) {\n-      JMenu customMenu = new JMenu(tr(customMenuTitle));\n-      customMenu.putClientProperty(\"removeOnWindowDeactivation\", true);\n-      boardsCustomMenus.add(customMenu);\n-    }\n \n     List<JMenuItem> menuItemsToClickAfterStartup = new LinkedList<>();\n \n@@ -1532,7 +1531,7 @@ public void actionPerformed(ActionEvent actionevent) {\n     PreferencesMap customMenus = targetPlatform.getCustomMenus();\n     for (final String menuId : customMenus.keySet()) {\n       String title = customMenus.get(menuId);\n-      JMenu menu = getBoardCustomMenu(tr(title));\n+      JMenu menu = getBoardCustomMenu(tr(title), targetPlatform.getId());\n \n       if (board.hasMenu(menuId)) {\n         PreferencesMap boardCustomMenu = board.getMenuLabels(menuId);\n@@ -1595,9 +1594,9 @@ private static boolean ifThereAreVisibleItemsOn(JMenu menu) {\n     return false;\n   }\n \n-  private JMenu getBoardCustomMenu(String label) throws Exception {\n+  private JMenu getBoardCustomMenu(String label, String platform) throws Exception {\n     for (JMenu menu : boardsCustomMenus) {\n-      if (label.equals(menu.getText())) {\n+      if (label.equals(menu.getText()) && platform.equals(menu.getClientProperty(\"platform\"))) {\n         return menu;\n       }\n     }",
      "parent_sha": "ef8d669f6a49a438430aae3e1f29161e34ce5d63"
    }
  },
  {
    "oid": "d06710ebe5cbc3b132d9d5f3a4babf45ce84d78c",
    "message": "Also delaying after auto-reset on Windows.\n\nWindows seemed to have the same issue as Linux: scanning for the ports\nprevented the reset from happening (i.e. it opened the port or\notherwise raised DTR).",
    "date": "2012-03-06T21:33:29Z",
    "url": "https://github.com/arduino/Arduino/commit/d06710ebe5cbc3b132d9d5f3a4babf45ce84d78c",
    "details": {
      "sha": "9e0cfb43c680196d2d474fc169ed02e789d44a6b",
      "filename": "app/src/processing/app/debug/AvrdudeUploader.java",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/arduino/Arduino/blob/d06710ebe5cbc3b132d9d5f3a4babf45ce84d78c/app%2Fsrc%2Fprocessing%2Fapp%2Fdebug%2FAvrdudeUploader.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/d06710ebe5cbc3b132d9d5f3a4babf45ce84d78c/app%2Fsrc%2Fprocessing%2Fapp%2Fdebug%2FAvrdudeUploader.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2Fdebug%2FAvrdudeUploader.java?ref=d06710ebe5cbc3b132d9d5f3a4babf45ce84d78c",
      "patch": "@@ -96,14 +96,14 @@ private boolean uploadViaBootloader(String buildPath, String className)\n                 .println(_(\"Forcing reset using 1200bps open/close on port \")\n                     + uploadPort);\n           Serial.touchPort(uploadPort, 1200);\n+          \n+          // Scanning for available ports seems to open the port or\n+          // otherwise assert DTR, which would cancel the WDT reset if\n+          // it happened within 250 ms.  So we wait until the reset should\n+          // have already occured before we start scanning.\n+          if (!Base.isMacOS()) Thread.sleep(300);\n         }\n \n-        // On Linux, scanning for available ports seems to open the port\n-        // or otherwise assert DTR, which would cancel the WDT reset if\n-        // it happened within 250 ms.  So we wait until the reset should\n-        // have already occured before we start scanning.\n-        if (Base.isLinux()) Thread.sleep(300);\n-\n         // Wait for a port to appear on the list\n         int elapsed = 0;\n         while (elapsed < 10000) {",
      "parent_sha": "3a51c4c3ab81485a40b039b61b3bb3d02da0dfe4"
    }
  },
  {
    "oid": "2a53cba1397e0ea4331efce02dec1c564c6600c8",
    "message": "Clean up code",
    "date": "2019-08-23T16:28:11Z",
    "url": "https://github.com/arduino/Arduino/commit/2a53cba1397e0ea4331efce02dec1c564c6600c8",
    "details": {
      "sha": "9e9aacbcafd6066428056a0990618fb856b78871",
      "filename": "app/src/processing/app/tools/MenuScroller.java",
      "status": "modified",
      "additions": 16,
      "deletions": 5,
      "changes": 21,
      "blob_url": "https://github.com/arduino/Arduino/blob/2a53cba1397e0ea4331efce02dec1c564c6600c8/app%2Fsrc%2Fprocessing%2Fapp%2Ftools%2FMenuScroller.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/2a53cba1397e0ea4331efce02dec1c564c6600c8/app%2Fsrc%2Fprocessing%2Fapp%2Ftools%2FMenuScroller.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2Ftools%2FMenuScroller.java?ref=2a53cba1397e0ea4331efce02dec1c564c6600c8",
      "patch": "@@ -280,9 +280,6 @@ public MenuScroller(JPopupMenu menu, int scrollCount, int interval,\n       scrollCount = autoSizeScrollCount;\n     }\n \n-//    if (PreferencesData.getBoolean(\"ide.accessible\")) {\n-//      interval = 1000;\n-//    }\n     if (scrollCount <= 0 || interval <= 0) {\n       throw new IllegalArgumentException(\"scrollCount and interval must be greater than 0\");\n     }\n@@ -573,8 +570,21 @@ public void actionPerformed(ActionEvent e) {\n           firstIndex += increment * accelerator;\n           refreshMenu();\n           if (PreferencesData.getBoolean(\"ide.accessible\")) {\n+            //    If the user has chosen to use accessibility features, it means that they are using a screen reader\n+            // to assist them in development of their project.  This scroller is very unfriendly toward screen readers\n+            // because it does not tell the user that it is scrolling through the board options, and it does not read\n+            // the name of the boards as they scroll by.  It is possible that the desired board will never become\n+            // accessible.\n+            //    Because this scroller is quite nice for the sighted user, the idea here is to continue to use the\n+            // scroller, but to fool it into scrolling one item at a time for accessible features users so that the\n+            // screen readers work well, too.\n+            //    It's not the prettiest of code, but it works.\n             String    itemClassName;\n             int keyEvent;\n+\n+            // The blind user likely used an arrow key to get to the scroller.  Determine which arrow key\n+            // so we can send an event for the opposite arrow key.  This fools the scroller into scrolling\n+            // a single item.  Get the class name of the new item while we're here\n             if (increment > 0) {\n               itemClassName = menuItems[firstIndex + scrollCount - 1].getClass().getName();\n               keyEvent = KeyEvent.VK_UP;\n@@ -584,8 +594,9 @@ public void actionPerformed(ActionEvent e) {\n               keyEvent = KeyEvent.VK_DOWN;\n             }\n \n-            // if next item is a separator just go on like normal, otherwise move the cursor back to that item is read\n-            // by a screen reader and the user can continue to use their arrow keys to navigate the list\n+            // Use the class name to check if the next item is a separator.  If it is, just let it scroll on like\n+            // normal, otherwise move the cursor back with the opposite key event to the new item so that item is read\n+            // by a screen reader and the user can use their arrow keys to navigate the list one item at a time\n             if (!itemClassName.equals(JSeparator.class.getName()) ) {\n               KeyboardFocusManager manager = KeyboardFocusManager.getCurrentKeyboardFocusManager();\n               Component comp = manager.getFocusOwner();",
      "parent_sha": "a908b7b0d922f7b76574cb34bb9bd8892a91c8ca"
    }
  },
  {
    "oid": "5ba56abc8015ee865dd3551c099bc1c884b9525f",
    "message": "Initial PluggableDiscovery using BoardPort for JSON",
    "date": "2019-01-23T12:51:41Z",
    "url": "https://github.com/arduino/Arduino/commit/5ba56abc8015ee865dd3551c099bc1c884b9525f",
    "details": {
      "sha": "729b060e637cdff73d1ac256f46beb8284c37a75",
      "filename": "arduino-core/src/cc/arduino/packages/discoverers/PluggableDiscovery.java",
      "status": "modified",
      "additions": 131,
      "deletions": 19,
      "changes": 150,
      "blob_url": "https://github.com/arduino/Arduino/blob/5ba56abc8015ee865dd3551c099bc1c884b9525f/arduino-core%2Fsrc%2Fcc%2Farduino%2Fpackages%2Fdiscoverers%2FPluggableDiscovery.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/5ba56abc8015ee865dd3551c099bc1c884b9525f/arduino-core%2Fsrc%2Fcc%2Farduino%2Fpackages%2Fdiscoverers%2FPluggableDiscovery.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fcc%2Farduino%2Fpackages%2Fdiscoverers%2FPluggableDiscovery.java?ref=5ba56abc8015ee865dd3551c099bc1c884b9525f",
      "patch": "@@ -30,66 +30,178 @@\n package cc.arduino.packages.discoverers;\n \n import java.util.ArrayList;\n+import java.util.LinkedList;\n import java.util.List;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n \n import cc.arduino.packages.BoardPort;\n import cc.arduino.packages.Discovery;\n import processing.app.legacy.PApplet;\n \n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.DeserializationFeature;\n+import com.fasterxml.jackson.core.JsonFactory;\n+import com.fasterxml.jackson.core.JsonParser;\n+\n public class PluggableDiscovery implements Discovery {\n \n-  private String discoveryName;\n+  private final String discoveryName;\n+  private final String[] cmd;\n+  private final List<BoardPort> portList;\n+  private Process program=null;\n+  private Thread pollingThread;\n \n   public PluggableDiscovery(String discoveryName, String[] cmd) {\n+    this.cmd = cmd;\n     this.discoveryName = discoveryName;\n+    portList = new LinkedList<>();\n     System.out.println(\"Starting: \" + PApplet.join(cmd, \" \"));\n   }\n \n   @Override\n   public void run() {\n-    // TODO this method is started as a new thread, it will constantly\n-    // communicate with the discovery tool and keep track of the discovered\n-    // port to be returned from listDiscoveredBoard()\n+    // this method is started as a new thread, it will constantly listen\n+    // to the discovery tool and keep track of the discovered ports\n     try {\n       start();\n-      while (true) { // TODO: Find a better way to terminate discovery\n-        System.out.println(discoveryName + \": looping...\");\n-        Thread.sleep(500);\n+      InputStream input = program.getInputStream();\n+      JsonFactory factory = new JsonFactory();\n+      JsonParser parser = factory.createParser(input);\n+      ObjectMapper mapper = new ObjectMapper();\n+      mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n+\n+      while (program != null && program.isAlive()) {\n+        BoardPort port = mapper.readValue(parser, BoardPort.class);\n+        if (port != null) {\n+          System.out.println(discoveryName + \" received json\");\n+          //\n+          // TODO: check for START_SYNC not supported, call startPolling()\n+          //\n+          update(port);\n+        }\n       }\n-      // stop();\n+      System.out.println(\"thread exit normally\");\n     } catch (InterruptedException e) {\n+      System.out.println(\"thread exit by interrupt\");\n       e.printStackTrace();\n     } catch (Exception e) {\n+      System.out.println(\"thread exit other exception\");\n       e.printStackTrace();\n     }\n+    try {\n+      stop();\n+    } catch (Exception e) {\n+    }\n   }\n \n   @Override\n   public void start() throws Exception {\n-    // TODO send a START_SYNC command to the discovery tool\n-    // or fallback to START if not available\n+    System.out.println(discoveryName + \": start\");\n+    try {\n+      program = Runtime.getRuntime().exec(cmd);\n+    } catch (Exception e) {\n+      program = null;\n+      return;\n+    }\n+    write(\"START_SYNC\\n\");\n+    pollingThread = null;\n+  }\n+\n+  private void startPolling() {\n+    // Discovery tools not supporting START_SYNC require a periodic\n+    // LIST command.  A second thread is created to send these\n+    // commands, while the run() thread above listens for the\n+    // discovery tool output.\n+    write(\"START\\n\");\n+    Thread pollingThread = new Thread() {\n+      public void run() {\n+        try {\n+          while (program != null && program.isAlive()) {\n+            write(\"LIST\\n\");\n+            sleep(2500);\n+          }\n+        } catch (Exception e) {\n+        }\n+      }\n+    };\n+    pollingThread.start();\n   }\n \n   @Override\n   public void stop() throws Exception {\n-    // TODO send a STOP to the discovery\n+    if (pollingThread != null) {\n+      pollingThread.interrupt();\n+      pollingThread = null;\n+    }\n+    write(\"STOP\\n\");\n+    if (program != null) {\n+      program.destroy();\n+      program = null;\n+    }\n+  }\n+\n+  private void write(String command) {\n+    if (program != null && program.isAlive()) {\n+      OutputStream out = program.getOutputStream();\n+      try {\n+        out.write(command.getBytes());\n+        out.flush();\n+      } catch (Exception e) {\n+      }\n+    }\n+  }\n+\n+  private synchronized void update(BoardPort port) {\n+    // Update the list of discovered ports, which may involve\n+    // adding a new port, replacing the info for a previously\n+    // discovered port, or removing a port.  This function\n+    // must be synchronized with listDiscoveredBoards(), to\n+    // avoid changing the list while it's being accessed by\n+    // another thread.\n+    String address = port.getAddress();\n+    if (address == null) {\n+      return; // address is required\n+    }\n+    for (BoardPort bp : portList) {\n+      if (address.equals(bp.getAddress())) {\n+        // if address already on the list, discard old info\n+        portList.remove(bp);\n+      }\n+    }\n+    if (port.isOnline()) {\n+      if (port.getLabel() == null) {\n+        // if no label, use address\n+        port.setLabel(address);\n+      }\n+      if (port.getProtocol() == null) {\n+        // if no protocol, assume serial\n+        port.setProtocol(\"serial\");\n+      }\n+      portList.add(port);\n+    }\n   }\n \n   @Override\n-  public List<BoardPort> listDiscoveredBoards() {\n-    // TODO return the ports discovered so far\n-    final List<BoardPort> empty = new ArrayList<>();\n-    return empty;\n+  public synchronized List<BoardPort> listDiscoveredBoards() {\n+    // return the ports discovered so far.  Because the list of\n+    // ports may change at any moment, a copy of the list is\n+    // returned for use by the rest of the IDE.  This copy\n+    // operation must be synchronized with update() to assure\n+    // a clean copy.\n+    final List<BoardPort> portListCopy = new ArrayList<>();\n+    for (BoardPort bp : portList) {\n+      //portListCopy.add(new BoardPort(bp));\n+      portListCopy.add(bp);\n+    }\n+    return portListCopy;\n   }\n \n   @Override\n   public List<BoardPort> listDiscoveredBoards(boolean complete) {\n     // XXX: parameter \"complete \"is really needed?\n     // should be checked on all existing discoveries\n-\n-    // TODO\n-    final List<BoardPort> empty = new ArrayList<>();\n-    return empty;\n+    return listDiscoveredBoards();\n   }\n \n   @Override",
      "parent_sha": "f5bf6e5e7aad5349ee8807c55765f331f829faaa"
    }
  },
  {
    "oid": "334e75254f7fc9a1fe051781ce9e9720e3c50c60",
    "message": "Restoring left empty space on the editor",
    "date": "2015-05-11T15:07:09Z",
    "url": "https://github.com/arduino/Arduino/commit/334e75254f7fc9a1fe051781ce9e9720e3c50c60",
    "details": {
      "sha": "d05518b3dbd3b4f7c2790c7641bec66ba4b2bfc8",
      "filename": "app/src/processing/app/Editor.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/arduino/Arduino/blob/334e75254f7fc9a1fe051781ce9e9720e3c50c60/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/334e75254f7fc9a1fe051781ce9e9720e3c50c60/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java?ref=334e75254f7fc9a1fe051781ce9e9720e3c50c60",
      "patch": "@@ -47,7 +47,7 @@\n import java.util.zip.*;\n \n import javax.swing.*;\n-import javax.swing.border.EmptyBorder;\n+import javax.swing.border.MatteBorder;\n import javax.swing.event.*;\n import javax.swing.text.*;\n import javax.swing.undo.*;\n@@ -256,7 +256,7 @@ public void windowDeactivated(WindowEvent e) {\n \n     // RTextScrollPane\n     scrollPane = new RTextScrollPane(textarea, true);\n-    scrollPane.setBorder(new EmptyBorder(0, 0, 0, 0));\n+    scrollPane.setBorder(new MatteBorder(0, 6, 0, 0, Theme.getColor(\"editor.bgcolor\")));\n     scrollPane.setViewportBorder(BorderFactory.createEmptyBorder());\n     scrollPane.setLineNumbersEnabled(Preferences.getBoolean(\"editor.linenumbers\"));\n     scrollPane.setIconRowHeaderEnabled(false);\n@@ -265,7 +265,7 @@ public void windowDeactivated(WindowEvent e) {\n     gutter.setBookmarkingEnabled(false);\n     //gutter.setBookmarkIcon(CompletionsRenderer.getIcon(CompletionType.TEMPLATE));\n     gutter.setIconRowHeaderInheritsGutterBackground(true);\n-    \n+\n     upper.add(scrollPane);\n     splitPane = new JSplitPane(JSplitPane.VERTICAL_SPLIT, upper, consolePanel);\n ",
      "parent_sha": "050a642edfc193c610df337938ed0c075e38d719"
    }
  },
  {
    "oid": "9c741885e03f0585c98d93b2cabd9d322530259e",
    "message": "Revert \"Do not save build_properties_custom.* preferences to disk\"\n\nThis reverts commit f47165db644e432a9b7456102c6ad0f34fbf7b11.",
    "date": "2016-04-13T12:58:35Z",
    "url": "https://github.com/arduino/Arduino/commit/9c741885e03f0585c98d93b2cabd9d322530259e",
    "details": {
      "sha": "6757e7e6e4937ce649bc807b682042ffdc03cb5a",
      "filename": "arduino-core/src/processing/app/PreferencesData.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/arduino/Arduino/blob/9c741885e03f0585c98d93b2cabd9d322530259e/arduino-core%2Fsrc%2Fprocessing%2Fapp%2FPreferencesData.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/9c741885e03f0585c98d93b2cabd9d322530259e/arduino-core%2Fsrc%2Fprocessing%2Fapp%2FPreferencesData.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fprocessing%2Fapp%2FPreferencesData.java?ref=9c741885e03f0585c98d93b2cabd9d322530259e",
      "patch": "@@ -120,7 +120,7 @@ static protected void save() {\n       String[] keys = prefs.keySet().toArray(new String[0]);\n       Arrays.sort(keys);\n       for (String key : keys) {\n-        if (key.startsWith(\"runtime.\") || key.startsWith(\"build_properties_custom.\"))\n+        if (key.startsWith(\"runtime.\"))\n           continue;\n         writer.println(key + \"=\" + prefs.get(key));\n       }",
      "parent_sha": "f47165db644e432a9b7456102c6ad0f34fbf7b11"
    }
  },
  {
    "oid": "060ec30e1ccf25e6c03140098b82d5cb13b6fcac",
    "message": "GPGSignatureVerification: better error handling when reading signature",
    "date": "2015-05-05T06:49:01Z",
    "url": "https://github.com/arduino/Arduino/commit/060ec30e1ccf25e6c03140098b82d5cb13b6fcac",
    "details": {
      "sha": "2b23c3387885301000e276c96e0147d5bae762b0",
      "filename": "arduino-core/src/cc/arduino/contributions/GPGDetachedSignatureVerifier.java",
      "status": "modified",
      "additions": 10,
      "deletions": 1,
      "changes": 11,
      "blob_url": "https://github.com/arduino/Arduino/blob/060ec30e1ccf25e6c03140098b82d5cb13b6fcac/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2FGPGDetachedSignatureVerifier.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/060ec30e1ccf25e6c03140098b82d5cb13b6fcac/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2FGPGDetachedSignatureVerifier.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2FGPGDetachedSignatureVerifier.java?ref=060ec30e1ccf25e6c03140098b82d5cb13b6fcac",
      "patch": "@@ -58,7 +58,16 @@ public boolean verify(File signedFile, File signature, File publicKey) throws IO\n       signatureInputStream = new FileInputStream(signature);\n       PGPObjectFactory pgpObjectFactory = new PGPObjectFactory(signatureInputStream, new BcKeyFingerprintCalculator());\n \n-      PGPSignatureList pgpSignatureList = (PGPSignatureList) pgpObjectFactory.nextObject();\n+      Object nextObject;\n+      try {\n+        nextObject = pgpObjectFactory.nextObject();\n+        if (!(nextObject instanceof PGPSignatureList)) {\n+          return false;\n+        }\n+      } catch (IOException e) {\n+        return false;\n+      }\n+      PGPSignatureList pgpSignatureList = (PGPSignatureList) nextObject;\n       assert pgpSignatureList.size() == 1;\n       PGPSignature pgpSignature = pgpSignatureList.get(0);\n ",
      "parent_sha": "0c123d7d14d0fa7a5061e9a91dbad83df7e2448f"
    }
  },
  {
    "oid": "66a973af180689a1d86d76dd63dd562684a9b470",
    "message": "Renamed varible (typo)",
    "date": "2021-12-20T11:54:43Z",
    "url": "https://github.com/arduino/Arduino/commit/66a973af180689a1d86d76dd63dd562684a9b470",
    "details": {
      "sha": "a529a241d0fea23a995ae492f8fe603545a85f9a",
      "filename": "arduino-core/src/cc/arduino/utils/network/FileDownloaderCache.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/arduino/Arduino/blob/66a973af180689a1d86d76dd63dd562684a9b470/arduino-core%2Fsrc%2Fcc%2Farduino%2Futils%2Fnetwork%2FFileDownloaderCache.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/66a973af180689a1d86d76dd63dd562684a9b470/arduino-core%2Fsrc%2Fcc%2Farduino%2Futils%2Fnetwork%2FFileDownloaderCache.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fcc%2Farduino%2Futils%2Fnetwork%2FFileDownloaderCache.java?ref=66a973af180689a1d86d76dd63dd562684a9b470",
      "patch": "@@ -265,16 +265,16 @@ public boolean isNotChange() {\n     @JsonIgnore\n     public boolean isChange() {\n       // Check if the file is expire\n-      boolean isChange = false;\n+      boolean isChanged = false;\n       if (isExpire()) {\n-        isChange = true;\n+        isChanged = true;\n       }\n \n       if (lastETag != null && !lastETag.equals(eTag)) {\n         // Different ETag means that the file is changed\n-        isChange = true;\n+        isChanged = true;\n       }\n-      return isChange;\n+      return isChanged;\n     }\n \n     @JsonIgnore",
      "parent_sha": "9f8d19244a020c84d791549ccddcb0ad3d4d741f"
    }
  },
  {
    "oid": "26f428384b95a476eb3e12e19cfcbb3dc9002fd9",
    "message": "Preferences: remove outdated preferences",
    "date": "2019-04-02T14:20:58Z",
    "url": "https://github.com/arduino/Arduino/commit/26f428384b95a476eb3e12e19cfcbb3dc9002fd9",
    "details": {
      "sha": "736ae826cfefca7cabed61c801659dbef46290e4",
      "filename": "app/src/cc/arduino/view/preferences/Preferences.java",
      "status": "modified",
      "additions": 6,
      "deletions": 16,
      "changes": 22,
      "blob_url": "https://github.com/arduino/Arduino/blob/26f428384b95a476eb3e12e19cfcbb3dc9002fd9/app%2Fsrc%2Fcc%2Farduino%2Fview%2Fpreferences%2FPreferences.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/26f428384b95a476eb3e12e19cfcbb3dc9002fd9/app%2Fsrc%2Fcc%2Farduino%2Fview%2Fpreferences%2FPreferences.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fcc%2Farduino%2Fview%2Fpreferences%2FPreferences.java?ref=26f428384b95a476eb3e12e19cfcbb3dc9002fd9",
      "patch": "@@ -132,9 +132,7 @@ private void initComponents() {\n     enableCodeFoldingBox = new javax.swing.JCheckBox();\n     verifyUploadBox = new javax.swing.JCheckBox();\n     externalEditorBox = new javax.swing.JCheckBox();\n-    cacheCompiledCore = new javax.swing.JCheckBox();\n     checkUpdatesBox = new javax.swing.JCheckBox();\n-    updateExtensionBox = new javax.swing.JCheckBox();\n     saveVerifyUploadBox = new javax.swing.JCheckBox();\n     jLabel1 = new javax.swing.JLabel();\n     jLabel2 = new javax.swing.JLabel();\n@@ -277,15 +275,9 @@ public void mouseEntered(java.awt.event.MouseEvent evt) {\n \n     checkboxesContainer.add(externalEditorBox);\n \n-    cacheCompiledCore.setText(tr(\"Aggressively cache compiled core\"));\n-    checkboxesContainer.add(cacheCompiledCore);\n-\n     checkUpdatesBox.setText(tr(\"Check for updates on startup\"));\n     checkboxesContainer.add(checkUpdatesBox);\n \n-    updateExtensionBox.setText(tr(\"Update sketch files to new extension on save (.pde -> .ino)\"));\n-    checkboxesContainer.add(updateExtensionBox);\n-\n     saveVerifyUploadBox.setText(tr(\"Save when verifying or uploading\"));\n     checkboxesContainer.add(saveVerifyUploadBox);\n \n@@ -730,7 +722,6 @@ private void autoScaleCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//\n   private javax.swing.JCheckBox enableCodeFoldingBox;\n   private javax.swing.JButton extendedAdditionalUrlFieldWindow;\n   private javax.swing.JCheckBox externalEditorBox;\n-  private javax.swing.JCheckBox cacheCompiledCore;\n   private javax.swing.JTextField fontSizeField;\n   private javax.swing.JLabel fontSizeLabel;\n   private javax.swing.JLabel jLabel1;\n@@ -759,7 +750,6 @@ private void autoScaleCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//\n   private javax.swing.JLabel showVerboseLabel;\n   private javax.swing.JTextField sketchbookLocationField;\n   private javax.swing.JLabel sketchbookLocationLabel;\n-  private javax.swing.JCheckBox updateExtensionBox;\n   private javax.swing.JCheckBox verboseCompilationBox;\n   private javax.swing.JCheckBox verboseUploadBox;\n   private javax.swing.JCheckBox verifyUploadBox;\n@@ -834,12 +824,8 @@ private void savePreferencesData() {\n \n     PreferencesData.setBoolean(\"editor.external\", externalEditorBox.isSelected());\n \n-    PreferencesData.setBoolean(\"compiler.cache_core\", cacheCompiledCore.isSelected());\n-\n     PreferencesData.setBoolean(\"update.check\", checkUpdatesBox.isSelected());\n \n-    PreferencesData.setBoolean(\"editor.update_extension\", updateExtensionBox.isSelected());\n-\n     PreferencesData.setBoolean(\"editor.save_on_verify\", saveVerifyUploadBox.isSelected());\n \n     PreferencesData.set(\"boardsmanager.additional.urls\", additionalBoardsManagerField.getText().replace(\"\\r\\n\", \"\\n\").replace(\"\\r\", \"\\n\").replace(\"\\n\", \",\"));\n@@ -906,11 +892,15 @@ private void showPreferencesData() {\n \n     externalEditorBox.setSelected(PreferencesData.getBoolean(\"editor.external\"));\n \n-    cacheCompiledCore.setSelected(PreferencesData.get(\"compiler.cache_core\") == null || PreferencesData.getBoolean(\"compiler.cache_core\"));\n+    if (PreferencesData.get(\"compiler.cache_core\") == null) {\n+      PreferencesData.setBoolean(\"compiler.cache_core\", true);\n+    }\n \n     checkUpdatesBox.setSelected(PreferencesData.getBoolean(\"update.check\"));\n \n-    updateExtensionBox.setSelected(PreferencesData.get(\"editor.update_extension\") == null || PreferencesData.getBoolean(\"editor.update_extension\"));\n+    if (PreferencesData.get(\"editor.update_extension\") == null) {\n+      PreferencesData.setBoolean(\"editor.update_extension\", true);\n+    }\n \n     saveVerifyUploadBox.setSelected(PreferencesData.getBoolean(\"editor.save_on_verify\"));\n ",
      "parent_sha": "4c8ac047278b4e2e485c5ec151f6eec972c85dc0"
    }
  },
  {
    "oid": "2a051a76a70cd3f2581567ac765a02e0a8297549",
    "message": "Library: converted nulls to checked exceptions, removed printStackTrace, added \"dependencies\" member\n\nConflicts:\n\tapp/src/processing/app/packages/Library.java",
    "date": "2013-02-27T16:33:19Z",
    "url": "https://github.com/arduino/Arduino/commit/2a051a76a70cd3f2581567ac765a02e0a8297549",
    "details": {
      "sha": "6779c88e8b6bc3c895e76e375f7a909dcae504ee",
      "filename": "app/src/processing/app/packages/Library.java",
      "status": "modified",
      "additions": 29,
      "deletions": 27,
      "changes": 56,
      "blob_url": "https://github.com/arduino/Arduino/blob/2a051a76a70cd3f2581567ac765a02e0a8297549/app%2Fsrc%2Fprocessing%2Fapp%2Fpackages%2FLibrary.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/2a051a76a70cd3f2581567ac765a02e0a8297549/app%2Fsrc%2Fprocessing%2Fapp%2Fpackages%2FLibrary.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2Fpackages%2FLibrary.java?ref=2a051a76a70cd3f2581567ac765a02e0a8297549",
      "patch": "@@ -1,6 +1,6 @@\n package processing.app.packages;\n \n-import static processing.app.helpers.StringMatchers.wildcardMatch;\n+import processing.app.helpers.PreferencesMap;\n \n import java.io.File;\n import java.io.IOException;\n@@ -9,7 +9,7 @@\n import java.util.Comparator;\n import java.util.List;\n \n-import processing.app.helpers.PreferencesMap;\n+import static processing.app.helpers.StringMatchers.wildcardMatch;\n \n public class Library {\n \n@@ -39,11 +39,11 @@ public class Library {\n    * Scans inside a folder and create a Library object out of it. Automatically\n    * detects pre-1.5 libraries. Automatically fills metadata from\n    * library.properties file if found.\n-   * \n+   *\n    * @param libFolder\n    * @return\n    */\n-  static public Library create(File libFolder) {\n+  static public Library create(File libFolder) throws IOException {\n     // A library is considered \"new\" if it contains a file called\n     // \"library.properties\"\n     File check = new File(libFolder, \"library.properties\");\n@@ -53,42 +53,53 @@ static public Library create(File libFolder) {\n       return createLibrary(libFolder);\n   }\n \n-  private static Library createLibrary(File libFolder) {\n+  private static Library createLibrary(File libFolder) throws IOException {\n     // Parse metadata\n     File propertiesFile = new File(libFolder, \"library.properties\");\n     PreferencesMap properties = new PreferencesMap();\n-    try {\n-      properties.load(propertiesFile);\n-    } catch (IOException e) {\n-      e.printStackTrace();\n-      return null;\n-    }\n+    properties.load(propertiesFile);\n \n     // Library sanity checks\n     // ---------------------\n \n     // 1. Check mandatory properties\n     for (String p : MANDATORY_PROPERTIES)\n       if (!properties.containsKey(p))\n-        return null;\n+        throw new IOException(\"Missing '\" + p + \"' from library\");\n \n     // 2. Check mandatory folders\n     File srcFolder = new File(libFolder, \"src\");\n-    if (!srcFolder.exists() && !srcFolder.isDirectory())\n-      return null;\n+    if (!srcFolder.exists() || !srcFolder.isDirectory())\n+      throw new IOException(\"Missing 'src' folder\");\n \n     // 3. check if root folder contains prohibited stuff\n     for (File file : libFolder.listFiles()) {\n       if (file.isDirectory()) {\n         if (!OPTIONAL_FOLDERS.contains(file.getName()))\n-          return null;\n+          throw new IOException(\"Invalid folder '\" + file.getName() + \"'.\");\n       } else {\n         if (!OPTIONAL_FILES.contains(file.getName()))\n-          return null;\n+          throw new IOException(\"Invalid file '\" + file.getName() + \"'.\");\n       }\n     }\n \n     // Extract metadata info\n+    List<String> archs = new ArrayList<String>();\n+    for (String arch : properties.get(\"architectures\").split(\",\"))\n+      archs.add(arch.trim());\n+\n+    List<String> coreDeps = new ArrayList<String>();\n+    for (String dep : properties.get(\"core-dependencies\").split(\",\"))\n+      coreDeps.add(dep.trim());\n+\n+    List<String> dependencies = new ArrayList<String>();\n+    for (String dependency : properties.get(\"dependencies\").split(\",\")) {\n+      dependency = dependency.trim();\n+      if (!dependency.equals(\"\")) {\n+        dependencies.add(dependency);\n+      }\n+    }\n+\n     Library res = new Library();\n     res.folder = libFolder;\n     res.srcFolder = srcFolder;\n@@ -99,18 +110,9 @@ private static Library createLibrary(File libFolder) {\n     res.sentence = properties.get(\"sentence\").trim();\n     res.paragraph = properties.get(\"paragraph\").trim();\n     res.url = properties.get(\"url\").trim();\n-    List<String> archs = new ArrayList<String>();\n-    for (String arch : properties.get(\"architectures\").split(\",\"))\n-      archs.add(arch.trim());\n     res.architectures = archs;\n-    List<String> deps = new ArrayList<String>();\n-    for (String dep : properties.get(\"dependencies\").split(\",\"))\n-      deps.add(dep.trim());\n-    res.dependencies = deps;\n-    List<String> coreDeps = new ArrayList<String>();\n-    for (String dep : properties.get(\"core-dependencies\").split(\",\"))\n-      coreDeps.add(dep.trim());\n     res.coreDependencies = coreDeps;\n+    res.dependencies = dependencies;\n     res.version = properties.get(\"version\").trim();\n     res.pre15Lib = false;\n     return res;\n@@ -122,7 +124,7 @@ private static Library createPre15Library(File libFolder) {\n     res.folder = libFolder;\n     res.srcFolder = libFolder;\n     res.name = libFolder.getName();\n-    res.architectures = Arrays.asList(new String[] { \"*\" });\n+    res.architectures = Arrays.asList(new String[]{\"*\"});\n     res.pre15Lib = true;\n     return res;\n   }",
      "parent_sha": "bddb47ed26af6a8da8e76c512374ec61eb1ef4eb"
    }
  },
  {
    "oid": "f5f478ced69dd3a78e348445e81bb3d97dc3480d",
    "message": "Factored out method to save sketch location",
    "date": "2016-01-22T17:06:08Z",
    "url": "https://github.com/arduino/Arduino/commit/f5f478ced69dd3a78e348445e81bb3d97dc3480d",
    "details": {
      "sha": "921e065f29b4bb850d77df6210911666c34978aa",
      "filename": "app/src/processing/app/Base.java",
      "status": "modified",
      "additions": 8,
      "deletions": 5,
      "changes": 13,
      "blob_url": "https://github.com/arduino/Arduino/blob/f5f478ced69dd3a78e348445e81bb3d97dc3480d/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/f5f478ced69dd3a78e348445e81bb3d97dc3480d/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java?ref=f5f478ced69dd3a78e348445e81bb3d97dc3480d",
      "patch": "@@ -574,16 +574,19 @@ protected void storeSketches() {\n       if (path.startsWith(untitledPath) && !sketch.isModified()) {\n         continue;\n       }\n-      PreferencesData.set(\"last.sketch\" + index + \".path\", path);\n-\n-      int[] placement = editor.getPlacement();\n-      String location = PApplet.join(PApplet.str(placement), \",\");\n-      PreferencesData.set(\"last.sketch\" + index + \".location\", location);\n+      storeSketchLocation(editor, \"\" + index);\n       index++;\n     }\n     PreferencesData.setInteger(\"last.sketch.count\", index);\n   }\n \n+  private void storeSketchLocation(Editor editor, String index) {\n+    String path = editor.getSketch().getMainFilePath();\n+    String loc = StringUtils.join(editor.getPlacement(), ',');\n+    PreferencesData.set(\"last.sketch\" + index + \".path\", path);\n+    PreferencesData.set(\"last.sketch\" + index + \".location\", loc);\n+  }\n+\n   protected void storeRecentSketches(Sketch sketch) {\n     if (sketch.isUntitled()) {\n       return;",
      "parent_sha": "c98c18089ddc9becf4e2e1e3000cf5c6421f1e0f"
    }
  },
  {
    "oid": "a1e43ce4902e62b9ce7c1db3412a7b78dd96ead1",
    "message": "Removed some trivial warnings",
    "date": "2020-03-25T14:26:53Z",
    "url": "https://github.com/arduino/Arduino/commit/a1e43ce4902e62b9ce7c1db3412a7b78dd96ead1",
    "details": {
      "sha": "7af728fdd49b84a0e6263d3729d9ba485a203fcc",
      "filename": "app/src/processing/app/Base.java",
      "status": "modified",
      "additions": 8,
      "deletions": 6,
      "changes": 14,
      "blob_url": "https://github.com/arduino/Arduino/blob/a1e43ce4902e62b9ce7c1db3412a7b78dd96ead1/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/a1e43ce4902e62b9ce7c1db3412a7b78dd96ead1/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java?ref=a1e43ce4902e62b9ce7c1db3412a7b78dd96ead1",
      "patch": "@@ -999,9 +999,9 @@ public boolean handleQuit() {\n     // kill uploader (if still alive)\n     UploaderUtils uploaderInstance = new UploaderUtils();\n     Uploader uploader = uploaderInstance.getUploaderByPreferences(false);\n-    if (uploader != null && uploader.programmerPid != null && uploader.programmerPid.isAlive()) {\n+    if (uploader != null && Uploader.programmerPid != null && Uploader.programmerPid.isAlive()) {\n         // kill the stuck programmer\n-        uploader.programmerPid.destroyForcibly();\n+        Uploader.programmerPid.destroyForcibly();\n     }\n \n     if (handleQuitEach()) {\n@@ -1444,8 +1444,9 @@ public void actionPerformed(ActionEvent actionevent) {\n         String filterText = \"\";\n         String dropdownItem = \"\";\n         if (actionevent instanceof Event) {\n-          filterText = ((Event) actionevent).getPayload().get(\"filterText\").toString();\n-          dropdownItem = ((Event) actionevent).getPayload().get(\"dropdownItem\").toString();\n+          Event e = ((Event) actionevent);\n+          filterText = e.getPayload().get(\"filterText\").toString();\n+          dropdownItem = e.getPayload().get(\"dropdownItem\").toString();\n         }\n         try {\n           openBoardsManager(filterText, dropdownItem);\n@@ -1481,7 +1482,7 @@ public void actionPerformed(ActionEvent actionevent) {\n     ButtonGroup boardsButtonGroup = new ButtonGroup();\n     Map<String, ButtonGroup> buttonGroupsMap = new HashMap<>();\n \n-    List<JMenu> platformMenus = new ArrayList<JMenu>();\n+    List<JMenu> platformMenus = new ArrayList<>();\n \n     // Cycle through all packages\n     for (TargetPackage targetPackage : BaseNoGui.packages.values()) {\n@@ -1602,7 +1603,7 @@ public void actionPerformed(ActionEvent e) {\n           };\n           List<TargetBoard> boards = (List<TargetBoard>) subAction.getValue(\"board\");\n           if (boards == null) {\n-            boards = new ArrayList<TargetBoard>();\n+            boards = new ArrayList<>();\n           }\n           boards.add(board);\n           subAction.putValue(\"board\", boards);\n@@ -2003,6 +2004,7 @@ public void keyPressed(KeyEvent e) {\n               Base.this.handleFontSizeChange(-1);\n             }\n             break;\n+          default:\n           }\n         }\n       }",
      "parent_sha": "931c2b7f21b4066a07b79af892cfe1a07c9f6f83"
    }
  },
  {
    "oid": "f47165db644e432a9b7456102c6ad0f34fbf7b11",
    "message": "Do not save build_properties_custom.* preferences to disk",
    "date": "2016-04-12T14:15:01Z",
    "url": "https://github.com/arduino/Arduino/commit/f47165db644e432a9b7456102c6ad0f34fbf7b11",
    "details": {
      "sha": "0517d96cea474273aba8b4452c0aa8b990d94f41",
      "filename": "arduino-core/src/processing/app/PreferencesData.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/arduino/Arduino/blob/f47165db644e432a9b7456102c6ad0f34fbf7b11/arduino-core%2Fsrc%2Fprocessing%2Fapp%2FPreferencesData.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/f47165db644e432a9b7456102c6ad0f34fbf7b11/arduino-core%2Fsrc%2Fprocessing%2Fapp%2FPreferencesData.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fprocessing%2Fapp%2FPreferencesData.java?ref=f47165db644e432a9b7456102c6ad0f34fbf7b11",
      "patch": "@@ -120,7 +120,7 @@ static protected void save() {\n       String[] keys = prefs.keySet().toArray(new String[0]);\n       Arrays.sort(keys);\n       for (String key : keys) {\n-        if (key.startsWith(\"runtime.\"))\n+        if (key.startsWith(\"runtime.\") || key.startsWith(\"build_properties_custom.\"))\n           continue;\n         writer.println(key + \"=\" + prefs.get(key));\n       }",
      "parent_sha": "2b18d1fba0c5fb79982448dae4c09003e55457bf"
    }
  },
  {
    "oid": "5d309dbb46b20fa496ac96c69bdc9184b0d04051",
    "message": "Added error messages for Leonardo upload",
    "date": "2012-02-27T15:32:24Z",
    "url": "https://github.com/arduino/Arduino/commit/5d309dbb46b20fa496ac96c69bdc9184b0d04051",
    "details": {
      "sha": "8616db880d397338cfced5a07cfe0e308faacd7e",
      "filename": "app/src/processing/app/debug/AvrdudeUploader.java",
      "status": "modified",
      "additions": 10,
      "deletions": 11,
      "changes": 21,
      "blob_url": "https://github.com/arduino/Arduino/blob/5d309dbb46b20fa496ac96c69bdc9184b0d04051/app%2Fsrc%2Fprocessing%2Fapp%2Fdebug%2FAvrdudeUploader.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/5d309dbb46b20fa496ac96c69bdc9184b0d04051/app%2Fsrc%2Fprocessing%2Fapp%2Fdebug%2FAvrdudeUploader.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2Fdebug%2FAvrdudeUploader.java?ref=5d309dbb46b20fa496ac96c69bdc9184b0d04051",
      "patch": "@@ -125,25 +125,24 @@ private boolean uploadViaBootloader(String buildPath, String className)\n           Thread.sleep(500);\n           elapsed += 500;\n           \n-          // If after 4 seconds the selected port is active use that port\n-          if (elapsed == 4000) {\n+          // If after 5 seconds the selected port is active use that port\n+          if (elapsed == 5000 && now.contains(uploadPort)) {\n             System.out.println(\"using selected port: \" + uploadPort);\n-            if (now.contains(uploadPort)) {\n-              caterinaUploadPort = uploadPort;\n-              break;\n-            }\n+            caterinaUploadPort = uploadPort;\n+            break;\n           }\n         }\n         \n         if (caterinaUploadPort == null)\n           // Something happened while detecting port\n-          return false;\n+          throw new RunnerException(\n+              _(\"Couldn\u2019t find the selected board. Try pressing the reset button after initiating the upload.\"));\n         \n         uploadPort = caterinaUploadPort;\n-      } catch (SerialException ex) {\n-        return false;\n-      } catch (InterruptedException ex) {\n-        return false;\n+      } catch (SerialException e) {\n+        throw new RunnerException(e.getMessage());\n+      } catch (InterruptedException e) {\n+        throw new RunnerException(e.getMessage());\n       }\n     }\n     ",
      "parent_sha": "507921fd0f4c071575caeb79993ffccf19bbb62e"
    }
  },
  {
    "oid": "71106edbf886914f5993863907e40642c6ea841a",
    "message": "Boards Manager: additional URLs may be specified from File > Preferences",
    "date": "2015-05-04T11:26:18Z",
    "url": "https://github.com/arduino/Arduino/commit/71106edbf886914f5993863907e40642c6ea841a",
    "details": {
      "sha": "01d3c1454502e5a2310b3936e9791558e4cf294d",
      "filename": "app/src/processing/app/Preferences.java",
      "status": "modified",
      "additions": 19,
      "deletions": 2,
      "changes": 21,
      "blob_url": "https://github.com/arduino/Arduino/blob/71106edbf886914f5993863907e40642c6ea841a/app%2Fsrc%2Fprocessing%2Fapp%2FPreferences.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/71106edbf886914f5993863907e40642c6ea841a/app%2Fsrc%2Fprocessing%2Fapp%2FPreferences.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FPreferences.java?ref=71106edbf886914f5993863907e40642c6ea841a",
      "patch": "@@ -209,7 +209,7 @@ public String toString() {\n   // and linux is all over the map\n \n   static final int GUI_BIG     = 13;\n-  static final int GUI_BETWEEN = 10;\n+  static final int GUI_BETWEEN = 5;\n   static final int GUI_SMALL   = 6;\n \n   // gui elements\n@@ -237,7 +237,7 @@ public String toString() {\n   JTextField proxyHTTPSPort;\n   JTextField proxyUser;\n   JPasswordField proxyPassword;\n-\n+  private final JTextField additionalBoardsManagerField;\n \n   // the calling editor, so updates can be applied\n \n@@ -464,6 +464,8 @@ public void actionPerformed(ActionEvent e) {\n     right = Math.max(right, left + d.width);\n     top += d.height + GUI_BETWEEN;\n \n+    // proxy settings\n+\n     JPanel proxySettingsContainer = new JPanel();\n     pane.add(proxySettingsContainer);\n     setupProxySettingsFieldSet(proxySettingsContainer);\n@@ -472,6 +474,17 @@ public void actionPerformed(ActionEvent e) {\n     right = Math.max(right, left + d.width);\n     top += d.height + GUI_BETWEEN;\n \n+    // boards manager additional urls\n+    box = Box.createHorizontalBox();\n+    label = new JLabel(_(\"Additional Boards Manager URLs: \"));\n+    box.add(label);\n+    additionalBoardsManagerField = new JTextField(30);\n+    box.add(additionalBoardsManagerField);\n+    pane.add(box);\n+    d = box.getPreferredSize();\n+    box.setBounds(left, top, d.width, d.height);\n+    top += d.height + GUI_BETWEEN;\n+\n     // More preferences are in the ...\n \n     label = new JLabel(_(\"More preferences can be edited directly in the file\"));\n@@ -788,6 +801,8 @@ protected void applyFrame() {\n     Preferences.set(\"proxy.user\", proxyUser.getText());\n     Preferences.set(\"proxy.password\", new String(proxyPassword.getPassword()));\n \n+    Preferences.set(\"boardsmanager.additional.urls\", additionalBoardsManagerField.getText().replace(\"\\r\\n\", \"\\n\").replace(\"\\r\", \"\\n\").replace(\"\\n\", \",\"));\n+\n     editor.applyPreferences();\n   }\n \n@@ -834,6 +849,8 @@ protected void showFrame(Editor editor) {\n     proxyUser.setText(Preferences.get(\"proxy.user\"));\n     proxyPassword.setText(Preferences.get(\"proxy.password\"));\n \n+    additionalBoardsManagerField.setText(Preferences.get(\"boardsmanager.additional.urls\"));\n+\n     dialog.setLocationRelativeTo(editor);\n     dialog.setVisible(true);\n   }",
      "parent_sha": "19bb40cbb107a69aac17bfef1bb570ebad35f6ec"
    }
  },
  {
    "oid": "b918faffbd93084396e37fc0d212d83bdd7a0376",
    "message": "Fixed examples search in fat-libraries",
    "date": "2012-12-05T16:06:56Z",
    "url": "https://github.com/arduino/Arduino/commit/b918faffbd93084396e37fc0d212d83bdd7a0376",
    "details": {
      "sha": "32526f16bb097dd61c5e1873feacaad04f0f47ff",
      "filename": "app/src/processing/app/Base.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/arduino/Arduino/blob/b918faffbd93084396e37fc0d212d83bdd7a0376/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/b918faffbd93084396e37fc0d212d83bdd7a0376/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java?ref=b918faffbd93084396e37fc0d212d83bdd7a0376",
      "patch": "@@ -1052,7 +1052,7 @@ public void rebuildExamplesMenu(JMenu menu) {\n         File folder = ideLibs.get(name);\n         addSketchesSubmenu(menu, name, folder, false);\n         // Allows \"fat\" libraries to have examples in the root folder\n-        if (folder.getName().equals(Base.getTargetPlatform()))\n+        if (folder.getName().equals(Base.getTargetPlatform().getName()))\n           addSketchesSubmenu(menu, name, folder.getParentFile(), false);\n       }\n ",
      "parent_sha": "e18d2a018db5b52f9b308b832a6be7d8584dff5c"
    }
  },
  {
    "oid": "971bd770585c4612604ceda3372a082d20ad946c",
    "message": "Removed redundant call to File.deleteIfExists()\n\nfile is already checked for being not null, no need to check again.",
    "date": "2015-05-14T17:36:37Z",
    "url": "https://github.com/arduino/Arduino/commit/971bd770585c4612604ceda3372a082d20ad946c",
    "details": {
      "sha": "186141cf595ca5f5dd879dc1eeae74cebb4c0763",
      "filename": "arduino-core/src/processing/app/helpers/FileUtils.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/arduino/Arduino/blob/971bd770585c4612604ceda3372a082d20ad946c/arduino-core%2Fsrc%2Fprocessing%2Fapp%2Fhelpers%2FFileUtils.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/971bd770585c4612604ceda3372a082d20ad946c/arduino-core%2Fsrc%2Fprocessing%2Fapp%2Fhelpers%2FFileUtils.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fprocessing%2Fapp%2Fhelpers%2FFileUtils.java?ref=971bd770585c4612604ceda3372a082d20ad946c",
      "patch": "@@ -85,7 +85,7 @@ public static void recursiveDelete(File file) {\n         recursiveDelete(current);\n       }\n     }\n-    deleteIfExists(file);\n+    file.delete();\n   }\n \n   public static File createTempFolder() throws IOException {",
      "parent_sha": "956ddda98e599db3ce8b9c75a0a2fa7b85648cf7"
    }
  },
  {
    "oid": "26ae4d13b880c78dc579ed5528ee20f2404d531e",
    "message": "Don't throw exception if library is already installed",
    "date": "2015-04-09T12:56:24Z",
    "url": "https://github.com/arduino/Arduino/commit/26ae4d13b880c78dc579ed5528ee20f2404d531e",
    "details": {
      "sha": "2bae0ac405e24467cd6279fd7af2341da963a353",
      "filename": "arduino-core/src/cc/arduino/contributions/libraries/LibraryInstaller.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/arduino/Arduino/blob/26ae4d13b880c78dc579ed5528ee20f2404d531e/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Flibraries%2FLibraryInstaller.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/26ae4d13b880c78dc579ed5528ee20f2404d531e/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Flibraries%2FLibraryInstaller.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Flibraries%2FLibraryInstaller.java?ref=26ae4d13b880c78dc579ed5528ee20f2404d531e",
      "patch": "@@ -97,9 +97,10 @@ public void updateIndex() throws Exception {\n     rescanLibraryIndex(progress);\n   }\n \n-  public void install(ContributedLibrary lib, ContributedLibrary replacedLib) throws Exception {\n+  public void install(ContributedLibrary lib, ContributedLibrary replacedLib) {\n     if (lib.isInstalled()) {\n-      throw new Exception(_(\"Library is already installed!\"));\n+      System.out.println(_(\"Library is already installed: \\\"\" + lib.getName() + \"\\\"\"));\n+      return;\n     }\n \n     final MultiStepProgress progress = new MultiStepProgress(3);",
      "parent_sha": "ada7b410633f59e065a8fff9b82b4bea33c56e81"
    }
  },
  {
    "oid": "beadf8fe63e8ecd3a50f1b56a8396f1242eb0d60",
    "message": "Fix renaming of newly added files\n\nBefore 72f815bcf (Refactor file adding and renaming, and save as handling)\nrenaming a file would first save it and then rename it. Since that\ncommit, renaming an unsaved, newly added file would try to rename a\nnon-existing file on disk, causing an error message.\n\nThis is fixed by only moving the on-disk file if it exists, otherwise\njust the in-memory filename is updated and the file will be written\nduring the next save.\n\nFixes: #6265",
    "date": "2017-06-16T19:58:11Z",
    "url": "https://github.com/arduino/Arduino/commit/beadf8fe63e8ecd3a50f1b56a8396f1242eb0d60",
    "details": {
      "sha": "f1341653b57fda4a4975626031f64eab077e896f",
      "filename": "arduino-core/src/processing/app/SketchFile.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/arduino/Arduino/blob/beadf8fe63e8ecd3a50f1b56a8396f1242eb0d60/arduino-core%2Fsrc%2Fprocessing%2Fapp%2FSketchFile.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/beadf8fe63e8ecd3a50f1b56a8396f1242eb0d60/arduino-core%2Fsrc%2Fprocessing%2Fapp%2FSketchFile.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fprocessing%2Fapp%2FSketchFile.java?ref=beadf8fe63e8ecd3a50f1b56a8396f1242eb0d60",
      "patch": "@@ -177,7 +177,7 @@ private boolean deleteCompiledFilesFrom(Path tempBuildFolder) throws IOException\n   public void renameTo(String newName) throws IOException {\n     File newFile = new File(file.getParentFile(), newName);\n     sketch.checkNewFilename(newFile);\n-    if (file.renameTo(newFile)) {\n+    if (!file.exists() || file.renameTo(newFile)) {\n       renamedTo(newFile);\n     } else {\n       String msg = I18n.format(tr(\"Failed to rename \\\"{0}\\\" to \\\"{1}\\\"\"), file.getName(), newName);",
      "parent_sha": "cd798abd1b78cd1c8c629a0fba7a616498d05955"
    }
  },
  {
    "oid": "b8c795e1845aa50b2fa0a8ee0730be5acae6e3cb",
    "message": "Don't give up when loading hardware/ profile directories with some invalid directories\nThis allows you to create hardware profiles that support both pre-1.5 and 1.5 onwards (boards.txt, cores, bootloader etc. in root for pre-1.5 and <architecture>/ directories containing 1.5 onward content.\n\nStill prints a warning if a hardware folder doesn't contain anything 1.5 compatible.",
    "date": "2013-05-17T03:01:06Z",
    "url": "https://github.com/arduino/Arduino/commit/b8c795e1845aa50b2fa0a8ee0730be5acae6e3cb",
    "details": {
      "sha": "6bc199b31501b20360fa9a2aaee2ad5a98601270",
      "filename": "app/src/processing/app/debug/TargetPackage.java",
      "status": "modified",
      "additions": 10,
      "deletions": 2,
      "changes": 12,
      "blob_url": "https://github.com/arduino/Arduino/blob/b8c795e1845aa50b2fa0a8ee0730be5acae6e3cb/app%2Fsrc%2Fprocessing%2Fapp%2Fdebug%2FTargetPackage.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/b8c795e1845aa50b2fa0a8ee0730be5acae6e3cb/app%2Fsrc%2Fprocessing%2Fapp%2Fdebug%2FTargetPackage.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2Fdebug%2FTargetPackage.java?ref=b8c795e1845aa50b2fa0a8ee0730be5acae6e3cb",
      "patch": "@@ -47,8 +47,16 @@ public TargetPackage(String _id, File _folder) throws TargetPlatformException {\n       if (!subFolder.exists() || !subFolder.canRead())\n         continue;\n       String arch = subFolder.getName();\n-      TargetPlatform platform = new TargetPlatform(arch, subFolder, this);\n-      platforms.put(arch, platform);\n+      try {\n+        TargetPlatform platform = new TargetPlatform(arch, subFolder, this);\n+        platforms.put(arch, platform);\n+      } catch (TargetPlatformException e) {\n+        continue;\n+      }\n+    }\n+\n+    if(platforms.size() == 0) {\n+      throw new TargetPlatformException(\"No architecture directories with boards.txt files were found in hardware folder \" + _folder.getName() + \". Is it pre-1.5?\");\n     }\n   }\n ",
      "parent_sha": "7959d85dd43e043169ddb0797408380e1fd9ec29"
    }
  },
  {
    "oid": "fbc5d30ad7860f3f3a09dd74ba39a8c432ab0bb6",
    "message": "for Leonardo don't return from uploading until the bootloader port disconnects and the sketch port reconnects\n\nmeant to save users from accidentally opening the bootloader port in Serial Monitor when it is still open immediately after an upload.  this is bad for the user because the port dies without notice immediately afterward.",
    "date": "2012-04-08T02:47:07Z",
    "url": "https://github.com/arduino/Arduino/commit/fbc5d30ad7860f3f3a09dd74ba39a8c432ab0bb6",
    "details": {
      "sha": "213e17896e12d7b7cd87b49eb46cdd559a08564b",
      "filename": "app/src/processing/app/debug/AvrdudeUploader.java",
      "status": "modified",
      "additions": 23,
      "deletions": 1,
      "changes": 24,
      "blob_url": "https://github.com/arduino/Arduino/blob/fbc5d30ad7860f3f3a09dd74ba39a8c432ab0bb6/app%2Fsrc%2Fprocessing%2Fapp%2Fdebug%2FAvrdudeUploader.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/fbc5d30ad7860f3f3a09dd74ba39a8c432ab0bb6/app%2Fsrc%2Fprocessing%2Fapp%2Fdebug%2FAvrdudeUploader.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2Fdebug%2FAvrdudeUploader.java?ref=fbc5d30ad7860f3f3a09dd74ba39a8c432ab0bb6",
      "patch": "@@ -172,7 +172,29 @@ private boolean uploadViaBootloader(String buildPath, String className)\n       flushSerialBuffer();\n     }\n \n-    return avrdude(commandDownloader);\n+    boolean avrdudeResult = avrdude(commandDownloader);\n+\n+\t// For Leonardo wait until the bootloader serial port disconnects and the sketch serial\n+\t// port reconnects (or timeout after a few seconds if the sketch port never comes back).\n+\t// Doing this saves users from accidentally opening Serial Monitor on the soon-to-be-orphaned\n+\t// bootloader port.\n+    if (true == avrdudeResult && boardPreferences.get(\"bootloader.path\").equals(\"caterina\")) {\n+    \ttry {\n+    \t\tThread.sleep(500);\n+    \t} catch (InterruptedException ex) { } \n+    \tlong timeout = System.currentTimeMillis() + 2000;\n+    \twhile (timeout > System.currentTimeMillis()) {\n+\t    \tList<String> portList = Serial.list();\n+    \t\tif (portList.contains(Preferences.get(\"serial.port\"))) {\n+    \t\t\tbreak;\n+    \t\t}\n+    \t\ttry {\n+    \t\t\tThread.sleep(100);\n+    \t\t} catch (InterruptedException ex) { }\n+    \t}    \t\t\n+    }\n+    \n+    return avrdudeResult;\n   }\n   \n   public boolean burnBootloader() throws RunnerException {",
      "parent_sha": "79ffd4fa1b3956adc2ed7f1b026d61c7bc965455"
    }
  },
  {
    "oid": "df9c25692df05e371430dcc4929e2b878f24acc2",
    "message": "Only load Touch Bar images once",
    "date": "2018-11-14T16:14:50Z",
    "url": "https://github.com/arduino/Arduino/commit/df9c25692df05e371430dcc4929e2b878f24acc2",
    "details": {
      "sha": "45e075b55c0bb7f852671dcdeb94adcdd2b10f2b",
      "filename": "app/src/processing/app/EditorToolbar.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/arduino/Arduino/blob/df9c25692df05e371430dcc4929e2b878f24acc2/app%2Fsrc%2Fprocessing%2Fapp%2FEditorToolbar.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/df9c25692df05e371430dcc4929e2b878f24acc2/app%2Fsrc%2Fprocessing%2Fapp%2FEditorToolbar.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FEditorToolbar.java?ref=df9c25692df05e371430dcc4929e2b878f24acc2",
      "patch": "@@ -167,7 +167,9 @@ public void windowActivated(WindowEvent e) {\n   }\n   \n   private void buildTouchBar() {\n-    loadTouchBarImages();\n+    if (touchBarImages == null) {\n+      loadTouchBarImages();\n+    }\n     \n     touchBar = new JTouchBar();\n     touchBarButtons = new TouchBarButton[BUTTON_COUNT];",
      "parent_sha": "17a60f4e3dc52993e303d8631073c79ed8b5dadb"
    }
  },
  {
    "oid": "f16bbaa91d9dbe18055e658a2b72075540054bff",
    "message": "SSHUploader: if verbose, prints the actual command run on the remote board",
    "date": "2015-06-19T15:44:28Z",
    "url": "https://github.com/arduino/Arduino/commit/f16bbaa91d9dbe18055e658a2b72075540054bff",
    "details": {
      "sha": "89887e347f5af123e552e85b7c5374ed752616b0",
      "filename": "arduino-core/src/cc/arduino/packages/uploaders/SSHUploader.java",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/arduino/Arduino/blob/f16bbaa91d9dbe18055e658a2b72075540054bff/arduino-core%2Fsrc%2Fcc%2Farduino%2Fpackages%2Fuploaders%2FSSHUploader.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/f16bbaa91d9dbe18055e658a2b72075540054bff/arduino-core%2Fsrc%2Fcc%2Farduino%2Fpackages%2Fuploaders%2FSSHUploader.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fcc%2Farduino%2Fpackages%2Fuploaders%2FSSHUploader.java?ref=f16bbaa91d9dbe18055e658a2b72075540054bff",
      "patch": "@@ -157,8 +157,11 @@ private boolean runUploadTool(SSH ssh, PreferencesMap prefs) throws Exception {\n     }\n \n     String pattern = prefs.getOrExcept(\"upload.pattern\");\n-    String[] cmd = StringReplacer.formatAndSplit(pattern, prefs, true);\n-    return ssh.execSyncCommand(StringUtils.join(cmd, \" \"), System.out, System.err);\n+    String command = StringUtils.join(StringReplacer.formatAndSplit(pattern, prefs, true), \" \");\n+    if (verbose) {\n+      System.out.println(command);\n+    }\n+    return ssh.execSyncCommand(command, System.out, System.err);\n   }\n \n   private void scpFiles(SCP scp, SSH ssh, File sourcePath, File sketch, List<String> warningsAccumulator) throws JSchException, IOException {",
      "parent_sha": "fa6c931e7c67e6f3a1679910cf5f8bbc98e5a3c1"
    }
  },
  {
    "oid": "cf4584eb29c45c96ced13d11ff6a09005d225d17",
    "message": "Reverted 'copy error' button for 1.0.5, waiting for a better UI design",
    "date": "2013-05-15T09:32:22Z",
    "url": "https://github.com/arduino/Arduino/commit/cf4584eb29c45c96ced13d11ff6a09005d225d17",
    "details": {
      "sha": "30b7f59effd7d6484db4ad55d2d04b65e9417e59",
      "filename": "app/src/processing/app/EditorStatus.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/arduino/Arduino/blob/cf4584eb29c45c96ced13d11ff6a09005d225d17/app%2Fsrc%2Fprocessing%2Fapp%2FEditorStatus.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/cf4584eb29c45c96ced13d11ff6a09005d225d17/app%2Fsrc%2Fprocessing%2Fapp%2FEditorStatus.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FEditorStatus.java?ref=cf4584eb29c45c96ced13d11ff6a09005d225d17",
      "patch": "@@ -125,7 +125,7 @@ public void unnotice(String unmessage) {\n   public void error(String message) {\n     mode = ERR;\n     this.message = message;\n-    copyErrorButton.setVisible(true);\n+//    copyErrorButton.setVisible(true);\n     repaint();\n   }\n \n@@ -196,7 +196,7 @@ public void progressIndeterminate(String message)\n     progressBar.setIndeterminate(true);\n     progressBar.setValue(50);\n     progressBar.setVisible(true);\n-    copyErrorButton.setVisible(false);\n+//    copyErrorButton.setVisible(false);\n     setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));\n     repaint();\n   }",
      "parent_sha": "ffdb0d7d810e5b9e4d16a9a80a1a029de2e790c8"
    }
  },
  {
    "oid": "e360f82cae38254d9e299db5e66e4fdbbe074bc1",
    "message": "Fixed incorrect boards.txt preference handling when submenu id has underscore\n\nFixes #2533",
    "date": "2015-01-27T19:22:22Z",
    "url": "https://github.com/arduino/Arduino/commit/e360f82cae38254d9e299db5e66e4fdbbe074bc1",
    "details": {
      "sha": "ee1b1d0a697ddd89360f8268a498f21b2c1b6856",
      "filename": "arduino-core/src/processing/app/BaseNoGui.java",
      "status": "modified",
      "additions": 14,
      "deletions": 5,
      "changes": 19,
      "blob_url": "https://github.com/arduino/Arduino/blob/e360f82cae38254d9e299db5e66e4fdbbe074bc1/arduino-core%2Fsrc%2Fprocessing%2Fapp%2FBaseNoGui.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/e360f82cae38254d9e299db5e66e4fdbbe074bc1/arduino-core%2Fsrc%2Fprocessing%2Fapp%2FBaseNoGui.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fprocessing%2Fapp%2FBaseNoGui.java?ref=e360f82cae38254d9e299db5e66e4fdbbe074bc1",
      "patch": "@@ -154,18 +154,27 @@ static public PreferencesMap getBoardPreferences() {\n     TargetBoard board = getTargetBoard();\n     if (board == null)\n       return null;\n+    String boardId = board.getId();\n     \n     PreferencesMap prefs = new PreferencesMap(board.getPreferences());\n+\n+    String extendedName = prefs.get(\"name\");\n     for (String menuId : board.getMenuIds()) {\n+      if (!board.hasMenu(menuId))\n+        continue;\n+\n+      // Get \"custom_[MENU_ID]\" preference (for example \"custom_cpu\")\n       String entry = PreferencesData.get(\"custom_\" + menuId);\n-      if (board.hasMenu(menuId) && entry != null &&\n-          entry.startsWith(board.getId())) {\n-        String selectionId = entry.substring(entry.indexOf(\"_\") + 1);\n+      if (entry != null && entry.startsWith(boardId)) {\n+\n+        String selectionId = entry.substring(boardId.length() + 1);\n         prefs.putAll(board.getMenuPreferences(menuId, selectionId));\n-        prefs.put(\"name\", prefs.get(\"name\") + \", \" +\n-            board.getMenuLabel(menuId, selectionId));\n+\n+        // Update the name with the extended configuration\n+        extendedName += \", \" + board.getMenuLabel(menuId, selectionId);\n       }\n     }\n+    prefs.put(\"name\", extendedName);\n     return prefs;\n   }\n ",
      "parent_sha": "379df90b30a6da6e2d14c13e93e09a0a5b70856d"
    }
  },
  {
    "oid": "b832e0d8b10dcd76b42c5c25269e75eaf4b75192",
    "message": "Use anyMatch instead of count in ContributionSelfCheck checks",
    "date": "2018-05-17T07:14:25Z",
    "url": "https://github.com/arduino/Arduino/commit/b832e0d8b10dcd76b42c5c25269e75eaf4b75192",
    "details": {
      "sha": "ed593ae50088ecba627d1d40de4c5b1560b18c3a",
      "filename": "app/src/cc/arduino/contributions/ContributionsSelfCheck.java",
      "status": "modified",
      "additions": 7,
      "deletions": 8,
      "changes": 15,
      "blob_url": "https://github.com/arduino/Arduino/blob/b832e0d8b10dcd76b42c5c25269e75eaf4b75192/app%2Fsrc%2Fcc%2Farduino%2Fcontributions%2FContributionsSelfCheck.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/b832e0d8b10dcd76b42c5c25269e75eaf4b75192/app%2Fsrc%2Fcc%2Farduino%2Fcontributions%2FContributionsSelfCheck.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fcc%2Farduino%2Fcontributions%2FContributionsSelfCheck.java?ref=b832e0d8b10dcd76b42c5c25269e75eaf4b75192",
      "patch": "@@ -73,22 +73,21 @@ public void run() {\n     updateContributionIndex();\n     updateLibrariesIndex();\n \n-    long updatablePlatforms = BaseNoGui.indexer.getPackages().stream()\n+    boolean updatablePlatforms = BaseNoGui.indexer.getPackages().stream()\n       .flatMap(pack -> pack.getPlatforms().stream())\n-      .filter(new UpdatablePlatformPredicate()).count();\n+      .anyMatch(new UpdatablePlatformPredicate());\n \n-    long updatableLibraries = BaseNoGui.librariesIndexer.getInstalledLibraries().stream()\n-      .filter(new UpdatableLibraryPredicate())\n-      .count();\n+    boolean updatableLibraries = BaseNoGui.librariesIndexer.getIndex().getLibraries().stream()\n+      .anyMatch(new UpdatableLibraryPredicate());\n \n-    if (updatableLibraries <= 0 && updatablePlatforms <= 0) {\n+    if (!updatableLibraries && !updatablePlatforms) {\n       return;\n     }\n \n     String text;\n-    if (updatableLibraries > 0 && updatablePlatforms <= 0) {\n+    if (updatableLibraries && !updatablePlatforms) {\n       text = I18n.format(tr(\"Updates available for some of your {0}libraries{1}\"), \"<a href=\\\"http://librarymanager/DropdownUpdatableLibrariesItem\\\">\", \"</a>\");\n-    } else if (updatableLibraries <= 0 && updatablePlatforms > 0) {\n+    } else if (!updatableLibraries && updatablePlatforms) {\n       text = I18n.format(tr(\"Updates available for some of your {0}boards{1}\"), \"<a href=\\\"http://boardsmanager/DropdownUpdatableCoresItem\\\">\", \"</a>\");\n     } else {\n       text = I18n.format(tr(\"Updates available for some of your {0}boards{1} and {2}libraries{3}\"), \"<a href=\\\"http://boardsmanager/DropdownUpdatableCoresItem\\\">\", \"</a>\", \"<a href=\\\"http://librarymanager/DropdownUpdatableLibrariesItem\\\">\", \"</a>\");",
      "parent_sha": "d285b7fdc97cca0809bd8f9d88b8bb3576be1e74"
    }
  },
  {
    "oid": "21ef50beb435f5bf988b8f18d353fa9184f473aa",
    "message": "It was still using jdk FileNameExtensionFilter",
    "date": "2013-10-14T10:34:09Z",
    "url": "https://github.com/arduino/Arduino/commit/21ef50beb435f5bf988b8f18d353fa9184f473aa",
    "details": {
      "sha": "a45e69ada3ffa6e527c1985d9bde08bbeaefa1d6",
      "filename": "app/src/processing/app/Base.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/arduino/Arduino/blob/21ef50beb435f5bf988b8f18d353fa9184f473aa/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/21ef50beb435f5bf988b8f18d353fa9184f473aa/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FBase.java?ref=21ef50beb435f5bf988b8f18d353fa9184f473aa",
      "patch": "@@ -28,12 +28,12 @@\n import java.util.*;\n \n import javax.swing.*;\n-import javax.swing.filechooser.FileNameExtensionFilter;\n \n import processing.app.debug.Compiler;\n import processing.app.debug.Target;\n import processing.app.helpers.FileUtils;\n import processing.app.helpers.filefilters.OnlyDirs;\n+import processing.app.javax.swing.filechooser.FileNameExtensionFilter;\n import processing.app.tools.ZipDeflater;\n import processing.core.*;\n import static processing.app.I18n._;",
      "parent_sha": "6732677500c2321ff498a6dec072107bcd79ef2f"
    }
  },
  {
    "oid": "24a0dfdf000ae22af058f4ea3894407582353722",
    "message": "Refactoring compile and upload to speed-up compilation, too.",
    "date": "2011-12-17T00:51:07Z",
    "url": "https://github.com/arduino/Arduino/commit/24a0dfdf000ae22af058f4ea3894407582353722",
    "details": {
      "sha": "1d540c3741c363261779e041febfd1c8e3c0b937",
      "filename": "app/src/processing/app/Sketch.java",
      "status": "modified",
      "additions": 37,
      "deletions": 46,
      "changes": 83,
      "blob_url": "https://github.com/arduino/Arduino/blob/24a0dfdf000ae22af058f4ea3894407582353722/app%2Fsrc%2Fprocessing%2Fapp%2FSketch.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/24a0dfdf000ae22af058f4ea3894407582353722/app%2Fsrc%2Fprocessing%2Fapp%2FSketch.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FSketch.java?ref=24a0dfdf000ae22af058f4ea3894407582353722",
      "patch": "@@ -1210,11 +1210,39 @@ protected void cleanup() {\n     // won't be able to delete them, so we need to force a gc here\n     System.gc();\n \n-    // note that we can't remove the builddir itself, otherwise\n-    // the next time we start up, internal runs using Runner won't\n-    // work because the build dir won't exist at startup, so the classloader\n-    // will ignore the fact that that dir is in the CLASSPATH in run.sh\n-    Base.removeDescendants(tempBuildFolder);\n+    if (deleteFilesOnNextBuild) {\n+      // delete the entire directory and all contents\n+      // when we know something changed and all objects\n+      // need to be recompiled, or if the board does not\n+      // use setting build.dependency\n+      //Base.removeDir(tempBuildFolder);\n+      \n+      // note that we can't remove the builddir itself, otherwise\n+      // the next time we start up, internal runs using Runner won't\n+      // work because the build dir won't exist at startup, so the classloader\n+      // will ignore the fact that that dir is in the CLASSPATH in run.sh\n+      Base.removeDescendants(tempBuildFolder);\n+      \n+      deleteFilesOnNextBuild = false;\n+    } else {\n+      // delete only stale source files, from the previously\n+      // compiled sketch.  This allows multiple windows to be\n+      // used.  Keep everything else, which might be reusable\n+      if (tempBuildFolder.exists()) {\n+        String files[] = tempBuildFolder.list();\n+        for (String file : files) {\n+          if (file.endsWith(\".c\") || file.endsWith(\".cpp\") || file.endsWith(\".s\")) {\n+            File deleteMe = new File(tempBuildFolder, file);\n+            if (!deleteMe.delete()) {\n+              System.err.println(\"Could not delete \" + deleteMe);\n+            }\n+          }\n+        }\n+      }\n+    }\n+    \n+    // Create a fresh applet folder (needed before preproc is run below)\n+    //tempBuildFolder.mkdirs();\n   }\n \n \n@@ -1612,49 +1640,12 @@ protected boolean exportApplet(boolean usingProgrammer) throws Exception {\n    */\n   public boolean exportApplet(String appletPath, boolean usingProgrammer)\n     throws RunnerException, IOException, SerialException {\n-    \n-    // Make sure the user didn't hide the sketch folder\n-    ensureExistence();\n-\n-    current.setProgram(editor.getText());\n-\n-    // Reload the code when an external editor is being used\n-    if (Preferences.getBoolean(\"editor.external\")) {\n-      current = null;\n-      // nuke previous files and settings\n-      load();\n-    }\n-\n-    File appletFolder = new File(appletPath);\n-    if (deleteFilesOnNextBuild) {\n-      // delete the entire directory and all contents\n-      // when we know something changed and all objects\n-      // need to be recompiled, or if the board does not\n-      // use setting build.dependency\n-      Base.removeDir(appletFolder);\n-      deleteFilesOnNextBuild = false;\n-    } else {\n-      // delete only stale source files, from the previously\n-      // compiled sketch.  This allows multiple windows to be\n-      // used.  Keep everything else, which might be reusable\n-      if (appletFolder.exists()) {\n-        String files[] = appletFolder.list();\n-        for (String file : files) {\n-          if (file.endsWith(\".c\") || file.endsWith(\".cpp\") || file.endsWith(\".s\")) {\n-            File deleteMe = new File(appletFolder, file);\n-            if (!deleteMe.delete()) {\n-              System.err.println(\"Could not delete \" + deleteMe);\n-            }\n-          }\n-        }\n-      }\n-    }\n-    // Create a fresh applet folder (needed before preproc is run below)\n-    appletFolder.mkdirs();\n \n+    prepare();\n+      \n     // build the sketch\n     editor.status.progressNotice(_(\"Compiling sketch...\"));\n-    String foundName = build(appletFolder.getPath(), false);\n+    String foundName = build(appletPath, false);\n     // (already reported) error during export, exit this function\n     if (foundName == null) return false;\n \n@@ -1668,7 +1659,7 @@ public boolean exportApplet(String appletPath, boolean usingProgrammer)\n //    }\n \n     editor.status.progressNotice(_(\"Uploading...\"));\n-    upload(appletFolder.getPath(), foundName, usingProgrammer);\n+    upload(appletPath, foundName, usingProgrammer);\n     editor.status.progressUpdate(100);\n     return true;\n   }",
      "parent_sha": "a29866f7dadc98562e3ba768bf7a0bcd3e20c6a2"
    }
  },
  {
    "oid": "66117a5cc0510c7f63d8ba7c6e740aa29a8b473c",
    "message": "Burn Bootloader was run in the UI thread, avoiding intermediate messages to be printed to IDE console",
    "date": "2015-12-03T10:09:50Z",
    "url": "https://github.com/arduino/Arduino/commit/66117a5cc0510c7f63d8ba7c6e740aa29a8b473c",
    "details": {
      "sha": "9a30f5250b8c0aa9ee3a24e24e1d478f70302af0",
      "filename": "app/src/processing/app/Editor.java",
      "status": "modified",
      "additions": 20,
      "deletions": 20,
      "changes": 40,
      "blob_url": "https://github.com/arduino/Arduino/blob/66117a5cc0510c7f63d8ba7c6e740aa29a8b473c/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/66117a5cc0510c7f63d8ba7c6e740aa29a8b473c/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java?ref=66117a5cc0510c7f63d8ba7c6e740aa29a8b473c",
      "patch": "@@ -2748,28 +2748,28 @@ public void handlePlotter() {\n   private void handleBurnBootloader() {\n     console.clear();\n     statusNotice(tr(\"Burning bootloader to I/O Board (this may take a minute)...\"));\n-    SwingUtilities.invokeLater(new Runnable() {\n-      public void run() {\n-        try {\n-          Uploader uploader = new SerialUploader();\n-          if (uploader.burnBootloader()) {\n-            statusNotice(tr(\"Done burning bootloader.\"));\n-          } else {\n-            statusError(tr(\"Error while burning bootloader.\"));\n-            // error message will already be visible\n-          }\n-        } catch (PreferencesMapException e) {\n-          statusError(I18n.format(\n-                      tr(\"Error while burning bootloader: missing '{0}' configuration parameter\"),\n-                      e.getMessage()));\n-        } catch (RunnerException e) {\n-          statusError(e.getMessage());\n-        } catch (Exception e) {\n-          statusError(tr(\"Error while burning bootloader.\"));\n-          e.printStackTrace();\n+    new Thread(() -> {\n+      try {\n+        Uploader uploader = new SerialUploader();\n+        if (uploader.burnBootloader()) {\n+          SwingUtilities.invokeLater(() -> statusNotice(tr(\"Done burning bootloader.\")));\n+        } else {\n+          SwingUtilities.invokeLater(() -> statusError(tr(\"Error while burning bootloader.\")));\n+          // error message will already be visible\n         }\n+      } catch (PreferencesMapException e) {\n+        SwingUtilities.invokeLater(() -> {\n+          statusError(I18n.format(\n+            tr(\"Error while burning bootloader: missing '{0}' configuration parameter\"),\n+            e.getMessage()));\n+        });\n+      } catch (RunnerException e) {\n+        SwingUtilities.invokeLater(() -> statusError(e.getMessage()));\n+      } catch (Exception e) {\n+        SwingUtilities.invokeLater(() -> statusError(tr(\"Error while burning bootloader.\")));\n+        e.printStackTrace();\n       }\n-    });\n+    }).start();\n   }\n \n ",
      "parent_sha": "91245e216432bfac6bb1ff9fde705989d5847bf3"
    }
  },
  {
    "oid": "4f3415279cc0fe72ec91c218c611d3b3fac041b3",
    "message": "Boards manager: when upgrading, first remove, then install",
    "date": "2015-11-24T09:54:29Z",
    "url": "https://github.com/arduino/Arduino/commit/4f3415279cc0fe72ec91c218c611d3b3fac041b3",
    "details": {
      "sha": "40054d7458f30d6ebc261b0ee4569955afb9a718",
      "filename": "app/src/cc/arduino/contributions/packages/ui/ContributionManagerUI.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/arduino/Arduino/blob/4f3415279cc0fe72ec91c218c611d3b3fac041b3/app%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Fpackages%2Fui%2FContributionManagerUI.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/4f3415279cc0fe72ec91c218c611d3b3fac041b3/app%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Fpackages%2Fui%2FContributionManagerUI.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Fpackages%2Fui%2FContributionManagerUI.java?ref=4f3415279cc0fe72ec91c218c611d3b3fac041b3",
      "patch": "@@ -161,10 +161,10 @@ public void onInstallPressed(final ContributedPlatform platformToInstall, final\n       List<String> errors = new LinkedList<>();\n       try {\n         setProgressVisible(true, tr(\"Installing...\"));\n-        errors.addAll(installer.install(platformToInstall, this::setProgress));\n         if (platformToRemove != null && !platformToRemove.isReadOnly()) {\n           errors.addAll(installer.remove(platformToRemove));\n         }\n+        errors.addAll(installer.install(platformToInstall, this::setProgress));\n         onIndexesUpdated();\n       } catch (Exception e) {\n         throw new RuntimeException(e);",
      "parent_sha": "7dd6e8f57dd7c4a2a8a59b32569759b4fad04c7b"
    }
  },
  {
    "oid": "d2a251c06636c61ed95d31d731652bb5122f1ad6",
    "message": "Improved error message when no library headers are found",
    "date": "2018-08-28T14:07:35Z",
    "url": "https://github.com/arduino/Arduino/commit/d2a251c06636c61ed95d31d731652bb5122f1ad6",
    "details": {
      "sha": "8b7acae748c4090297ecfbf087d1758df136c181",
      "filename": "arduino-core/src/cc/arduino/contributions/libraries/LibrariesIndexer.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/arduino/Arduino/blob/d2a251c06636c61ed95d31d731652bb5122f1ad6/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Flibraries%2FLibrariesIndexer.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/d2a251c06636c61ed95d31d731652bb5122f1ad6/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Flibraries%2FLibrariesIndexer.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Flibraries%2FLibrariesIndexer.java?ref=d2a251c06636c61ed95d31d731652bb5122f1ad6",
      "patch": "@@ -54,6 +54,7 @@\n import java.util.List;\n import java.util.Optional;\n \n+import static processing.app.I18n.format;\n import static processing.app.I18n.tr;\n \n public class LibrariesIndexer {\n@@ -203,7 +204,7 @@ private void scanLibrary(UserLibraryFolder folderDesc) throws IOException {\n       LegacyUserLibrary lib = LegacyUserLibrary.create(folderDesc);\n       String[] headers = BaseNoGui.headerListFromIncludePath(lib.getSrcFolder());\n       if (headers.length == 0) {\n-        throw new IOException(lib.getSrcFolder().getAbsolutePath());\n+        throw new IOException(format(tr(\"no headers files (.h) found in {0}\"), lib.getSrcFolder()));\n       }\n       addToInstalledLibraries(lib);\n       return;\n@@ -213,7 +214,7 @@ private void scanLibrary(UserLibraryFolder folderDesc) throws IOException {\n     UserLibrary lib = UserLibrary.create(folderDesc);\n     String[] headers = BaseNoGui.headerListFromIncludePath(lib.getSrcFolder());\n     if (headers.length == 0) {\n-      throw new IOException(lib.getSrcFolder().getAbsolutePath());\n+      throw new IOException(format(tr(\"no headers files (.h) found in {0}\"), lib.getSrcFolder()));\n     }\n     addToInstalledLibraries(lib);\n ",
      "parent_sha": "f58f8d3c4bf2c8c46951a89f13f752052d0a85d1"
    }
  },
  {
    "oid": "93fc220c55c124fe847a3e497bc6fbac1b48e332",
    "message": "Fix simple java error in LIBRARY_INDEX_URL_GZ assignment\n\nBeing a final variable it must be assigned only once.",
    "date": "2017-07-18T11:01:03Z",
    "url": "https://github.com/arduino/Arduino/commit/93fc220c55c124fe847a3e497bc6fbac1b48e332",
    "details": {
      "sha": "7f34b6056d8d1f18c3874a80e94f5d17c3d3cea6",
      "filename": "arduino-core/src/cc/arduino/Constants.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/arduino/Arduino/blob/93fc220c55c124fe847a3e497bc6fbac1b48e332/arduino-core%2Fsrc%2Fcc%2Farduino%2FConstants.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/93fc220c55c124fe847a3e497bc6fbac1b48e332/arduino-core%2Fsrc%2Fcc%2Farduino%2FConstants.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fcc%2Farduino%2FConstants.java?ref=93fc220c55c124fe847a3e497bc6fbac1b48e332",
      "patch": "@@ -80,10 +80,11 @@ public class Constants {\n     String externalLibraryIndexUrl = System.getProperty(\"LIBRARY_INDEX_URL\");\n     if (externalLibraryIndexUrl != null && !\"\".equals(externalLibraryIndexUrl)) {\n       LIBRARY_INDEX_URL = externalLibraryIndexUrl;\n-      LIBRARY_INDEX_URL_GZ = \"\";\n       String externalLibraryIndexUrlGz = System.getProperty(\"LIBRARY_INDEX_URL_GZ\");\n       if (externalLibraryIndexUrlGz != null && !\"\".equals(externalLibraryIndexUrlGz)) {\n         LIBRARY_INDEX_URL_GZ = externalLibraryIndexUrlGz;\n+      } else {\n+        LIBRARY_INDEX_URL_GZ = \"\";\n       }\n     } else {\n       LIBRARY_INDEX_URL = \"http://downloads.arduino.cc/libraries/library_index.json\";",
      "parent_sha": "dc5827e08b5e269d3d22322cefaed90a14191b89"
    }
  },
  {
    "oid": "55ade2daeb05d2964194d6c8db774d5b2184c1d2",
    "message": "Nicer button for 'Copy error to clipboard'",
    "date": "2013-05-03T13:46:20Z",
    "url": "https://github.com/arduino/Arduino/commit/55ade2daeb05d2964194d6c8db774d5b2184c1d2",
    "details": {
      "sha": "fa45f02e564cac00f50611a2b439060def09d565",
      "filename": "app/src/processing/app/EditorStatus.java",
      "status": "modified",
      "additions": 7,
      "deletions": 3,
      "changes": 10,
      "blob_url": "https://github.com/arduino/Arduino/blob/55ade2daeb05d2964194d6c8db774d5b2184c1d2/app%2Fsrc%2Fprocessing%2Fapp%2FEditorStatus.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/55ade2daeb05d2964194d6c8db774d5b2184c1d2/app%2Fsrc%2Fprocessing%2Fapp%2FEditorStatus.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FEditorStatus.java?ref=55ade2daeb05d2964194d6c8db774d5b2184c1d2",
      "patch": "@@ -26,6 +26,7 @@\n import java.awt.*;\n import java.awt.event.*;\n import javax.swing.*;\n+\n import java.awt.datatransfer.*;\n import static processing.app.I18n._;\n \n@@ -447,11 +448,14 @@ public void keyTyped(KeyEvent event) {\n       add(progressBar);\n       progressBar.setVisible(false);\n       \n-      copyErrorButton = new JButton(_(\"Copy To Clipboard\"));\n+      copyErrorButton = new JButton(\n+         \"<html>\" + _(\"Copy error\") + \"<br>\" + _(\"to clipboard\") + \"</html>\");\n+      Font font = copyErrorButton.getFont();\n+      font = new Font(font.getName(), font.getStyle(), (int) (font.getSize()*0.7));\n+      copyErrorButton.setFont(font);\n+      copyErrorButton.setHorizontalAlignment(JLabel.CENTER);\n       add(copyErrorButton);\n-      //copyErrorButton.setVisible(true);\n       copyErrorButton.setVisible(false);\n-      System.out.println(\"create copyErrorButton\");\n       copyErrorButton.addActionListener(new ActionListener() {\n         public void actionPerformed(ActionEvent e) {\n           String message=\"\";",
      "parent_sha": "4c4878bc3f62c4bf36316f30c1a0ac6f036ab0f1"
    }
  },
  {
    "oid": "653a05273d96d91b6b12b19cf62aa4da4664c0be",
    "message": "Check sanitaryName only on basename without extension\n\nThis regression originates from:\n\n8725bb1e Clean up sketch loading\n\nbefore this commit the sketch name sanitization was made on the sketch\nname without the extension.\nAfter 8725bb1e instead the name sanitization is made on the filename, so\nincluding the \".ino\" extension.\n\nThis lead to a weird corner case, caused by the limit of 63 characters\non the sketch name: before 8725bb1e it would be possible to save a sketch\nwith a name of exactly 63 characters, but after 8725bb1e this sketch will\nsuddenly becomes invalid becuase the 63 chars name + extension would exceed\nthe 63 characters limit.\n\nThis commit fix this regression.\n\nFix #5431",
    "date": "2016-10-03T15:00:08Z",
    "url": "https://github.com/arduino/Arduino/commit/653a05273d96d91b6b12b19cf62aa4da4664c0be",
    "details": {
      "sha": "11b57ab3bbbf9c0c8669702ba0f623a26d0bcc1f",
      "filename": "arduino-core/src/processing/app/Sketch.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/arduino/Arduino/blob/653a05273d96d91b6b12b19cf62aa4da4664c0be/arduino-core%2Fsrc%2Fprocessing%2Fapp%2FSketch.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/653a05273d96d91b6b12b19cf62aa4da4664c0be/arduino-core%2Fsrc%2Fprocessing%2Fapp%2FSketch.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fprocessing%2Fapp%2FSketch.java?ref=653a05273d96d91b6b12b19cf62aa4da4664c0be",
      "patch": "@@ -106,7 +106,7 @@ public boolean reload() throws IOException {\n   private List<SketchFile> listSketchFiles(boolean showWarnings) throws IOException {\n     Set<SketchFile> result = new TreeSet<>(CODE_DOCS_COMPARATOR);\n     for (File file : FileUtils.listFiles(folder, false, EXTENSIONS)) {\n-      if (BaseNoGui.isSanitaryName(file.getName())) {\n+      if (BaseNoGui.isSanitaryName(FileUtils.splitFilename(file).basename)) {\n         result.add(new SketchFile(this, file));\n       } else if (showWarnings) {\n         System.err.println(I18n.format(tr(\"File name {0} is invalid: ignored\"), file.getName()));",
      "parent_sha": "bc5c9b8b7e44f8bd51e2338025584406f583bf6f"
    }
  },
  {
    "oid": "6847c5242826b8c959ef42c12be15bc2bec0e5e6",
    "message": "arduino-builder arguments must be passed in separate cmd.addArgument calls, otherwise special chars will break it. Fixes #3798",
    "date": "2015-09-16T08:45:52Z",
    "url": "https://github.com/arduino/Arduino/commit/6847c5242826b8c959ef42c12be15bc2bec0e5e6",
    "details": {
      "sha": "e8d6743ea4c02fc18087423672ab548107cc74d8",
      "filename": "arduino-core/src/cc/arduino/Compiler.java",
      "status": "modified",
      "additions": 26,
      "deletions": 12,
      "changes": 38,
      "blob_url": "https://github.com/arduino/Arduino/blob/6847c5242826b8c959ef42c12be15bc2bec0e5e6/arduino-core%2Fsrc%2Fcc%2Farduino%2FCompiler.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/6847c5242826b8c959ef42c12be15bc2bec0e5e6/arduino-core%2Fsrc%2Fcc%2Farduino%2FCompiler.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fcc%2Farduino%2FCompiler.java?ref=6847c5242826b8c959ef42c12be15bc2bec0e5e6",
      "patch": "@@ -172,41 +172,55 @@ private void callArduinoBuilder(TargetBoard board, TargetPlatform platform, Targ\n     File executable = BaseNoGui.getContentFile(\"arduino-builder\");\n     CommandLine commandLine = new CommandLine(executable);\n     commandLine.addArgument(action.value, false);\n-    commandLine.addArgument(\"-logger=machine\", false);\n+    commandLine.addArgument(\"-logger\", false);\n+    commandLine.addArgument(\"machine\", false);\n \n     Stream.of(BaseNoGui.getHardwarePath(), new File(BaseNoGui.getSettingsFolder(), \"packages\").getAbsolutePath(), BaseNoGui.getSketchbookHardwareFolder().getAbsolutePath())\n       .forEach(p -> {\n         if (Files.exists(Paths.get(p))) {\n-          commandLine.addArgument(\"-hardware=\\\"\" + p + \"\\\"\", false);\n+          commandLine.addArgument(\"-hardware\", false);\n+          commandLine.addArgument(\"\\\"\" + p + \"\\\"\", false);\n         }\n       });\n \n     Stream.of(BaseNoGui.getContentFile(\"tools-builder\").getAbsolutePath(), Paths.get(BaseNoGui.getHardwarePath(), \"tools\", \"avr\").toAbsolutePath().toString(), new File(BaseNoGui.getSettingsFolder(), \"packages\").getAbsolutePath())\n       .forEach(p -> {\n         if (Files.exists(Paths.get(p))) {\n-          commandLine.addArgument(\"-tools=\\\"\" + p + \"\\\"\", false);\n+          commandLine.addArgument(\"-tools\", false);\n+          commandLine.addArgument(\"\\\"\" + p + \"\\\"\", false);\n         }\n       });\n \n-    commandLine.addArgument(\"-libraries=\\\"\" + BaseNoGui.getSketchbookLibrariesFolder().getAbsolutePath() + \"\\\"\", false);\n-    commandLine.addArgument(\"-libraries=\\\"\" + BaseNoGui.getContentFile(\"libraries\").getAbsolutePath() + \"\\\"\", false);\n+    commandLine.addArgument(\"-libraries\", false);\n+    commandLine.addArgument(\"\\\"\" + BaseNoGui.getSketchbookLibrariesFolder().getAbsolutePath() + \"\\\"\", false);\n+    commandLine.addArgument(\"-libraries\", false);\n+    commandLine.addArgument(\"\\\"\" + BaseNoGui.getContentFile(\"libraries\").getAbsolutePath() + \"\\\"\", false);\n \n     String fqbn = Stream.of(aPackage.getId(), platform.getId(), board.getId(), boardOptions(board)).filter(s -> !s.isEmpty()).collect(Collectors.joining(\":\"));\n-    commandLine.addArgument(\"-fqbn=\" + fqbn, false);\n+    commandLine.addArgument(\"-fqbn\", false);\n+    commandLine.addArgument(fqbn, false);\n \n-    commandLine.addArgument(\"-ide-version=\" + BaseNoGui.REVISION, false);\n-    commandLine.addArgument(\"-build-path=\\\"\" + buildPath + \"\\\"\", false);\n-    commandLine.addArgument(\"-warnings=\" + PreferencesData.get(\"compiler.warning_level\"), false);\n+    commandLine.addArgument(\"-ide-version\", false);\n+    commandLine.addArgument(Integer.toString(BaseNoGui.REVISION), false);\n+    commandLine.addArgument(\"-build-path\", false);\n+    commandLine.addArgument(\"\\\"\" + buildPath + \"\\\"\", false);\n+    commandLine.addArgument(\"-warnings\", false);\n+    commandLine.addArgument(PreferencesData.get(\"compiler.warning_level\"), false);\n \n     PreferencesData.getMap()\n       .subTree(\"build_properties_custom\")\n       .entrySet()\n       .stream()\n-      .forEach(kv -> commandLine.addArgument(\"-prefs=\\\"\" + kv.getKey() + \"=\" + kv.getValue() + \"\\\"\", false));\n+      .forEach(kv -> {\n+        commandLine.addArgument(\"-prefs\", false);\n+        commandLine.addArgument(\"\\\"\" + kv.getKey() + \"=\" + kv.getValue() + \"\\\"\", false);\n+      });\n \n-    commandLine.addArgument(\"-prefs=build.warn_data_percentage=\" + PreferencesData.get(\"build.warn_data_percentage\"));\n+    commandLine.addArgument(\"-prefs\", false);\n+    commandLine.addArgument(\"build.warn_data_percentage=\" + PreferencesData.get(\"build.warn_data_percentage\"), false);\n \n-    //commandLine.addArgument(\"-debug-level=10\", false);\n+    //commandLine.addArgument(\"-debug-level\", false);\n+    //commandLine.addArgument(\"10\", false);\n \n     if (verbose) {\n       commandLine.addArgument(\"-verbose\", false);",
      "parent_sha": "f18721a02f5c3406c133b1aacb8ae5f430f38dd1"
    }
  },
  {
    "oid": "6ed7934ee108b28231179a0c7ce9b4d1c0285ef0",
    "message": "Do not fail if library_index.json can't be parsed\n\nFix #7937",
    "date": "2018-09-06T09:57:21Z",
    "url": "https://github.com/arduino/Arduino/commit/6ed7934ee108b28231179a0c7ce9b4d1c0285ef0",
    "details": {
      "sha": "0d1ec00e39ffed982c5a5c111886f6de6b6a2de5",
      "filename": "arduino-core/src/cc/arduino/contributions/libraries/LibrariesIndexer.java",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/arduino/Arduino/blob/6ed7934ee108b28231179a0c7ce9b4d1c0285ef0/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Flibraries%2FLibrariesIndexer.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/6ed7934ee108b28231179a0c7ce9b4d1c0285ef0/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Flibraries%2FLibrariesIndexer.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/arduino-core%2Fsrc%2Fcc%2Farduino%2Fcontributions%2Flibraries%2FLibrariesIndexer.java?ref=6ed7934ee108b28231179a0c7ce9b4d1c0285ef0",
      "patch": "@@ -73,11 +73,14 @@ public LibrariesIndexer(File preferencesFolder) {\n   }\n \n   public void parseIndex() throws IOException {\n+    index = new EmptyLibrariesIndex(); // Fallback\n+\n     if (!indexFile.exists()) {\n-      index = new EmptyLibrariesIndex();\n-    } else {\n-      parseIndex(indexFile);\n+      return;\n     }\n+\n+    parseIndex(indexFile);\n+\n     // TODO: resolve libraries inner references\n   }\n ",
      "parent_sha": "3dfe85916c2af87d820d1b0228b57c653e30c69d"
    }
  },
  {
    "oid": "8687a78db58626b606f614819e01a17fb8fcdc99",
    "message": "Removed leftover dependency from SketchCodeDocument in SketchData.",
    "date": "2014-11-13T15:23:45Z",
    "url": "https://github.com/arduino/Arduino/commit/8687a78db58626b606f614819e01a17fb8fcdc99",
    "details": {
      "sha": "36f5a8fceabba5987930ed3157019620dbb706ba",
      "filename": "app/src/processing/app/SketchData.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/arduino/Arduino/blob/8687a78db58626b606f614819e01a17fb8fcdc99/app%2Fsrc%2Fprocessing%2Fapp%2FSketchData.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/8687a78db58626b606f614819e01a17fb8fcdc99/app%2Fsrc%2Fprocessing%2Fapp%2FSketchData.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FSketchData.java?ref=8687a78db58626b606f614819e01a17fb8fcdc99",
      "patch": "@@ -123,7 +123,7 @@ protected void load() throws IOException {\n           // Don't allow people to use files with invalid names, since on load,\n           // it would be otherwise possible to sneak in nasty filenames. [0116]\n           if (BaseNoGui.isSanitaryName(base)) {\n-            addCode(new SketchCodeDocument(new File(folder, filename)));\n+            addCode(new SketchCode(new File(folder, filename)));\n           } else {\n             System.err.println(I18n.format(\"File name {0} is invalid: ignored\", filename));\n           }",
      "parent_sha": "061d1f14b6f67ed308c5335e445afcee0fd23423"
    }
  },
  {
    "oid": "3f79d129bb7a68b8fcb4b97e8d3eefc4e644f78d",
    "message": "Refactor: Removed code duplication in Export(App)Handlers",
    "date": "2018-11-14T16:41:34Z",
    "url": "https://github.com/arduino/Arduino/commit/3f79d129bb7a68b8fcb4b97e8d3eefc4e644f78d",
    "details": {
      "sha": "cfaea455e035cb44ef1d6e5e15d19b851076ae20",
      "filename": "app/src/processing/app/Editor.java",
      "status": "modified",
      "additions": 15,
      "deletions": 58,
      "changes": 73,
      "blob_url": "https://github.com/arduino/Arduino/blob/3f79d129bb7a68b8fcb4b97e8d3eefc4e644f78d/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/3f79d129bb7a68b8fcb4b97e8d3eefc4e644f78d/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java?ref=3f79d129bb7a68b8fcb4b97e8d3eefc4e644f78d",
      "patch": "@@ -226,8 +226,8 @@ public boolean test(SketchController sketch) {\n   Runnable presentHandler;\n   private Runnable runAndSaveHandler;\n   private Runnable presentAndSaveHandler;\n-  Runnable exportHandler;\n-  private Runnable exportAppHandler;\n+  private UploadHandler uploadHandler;\n+  private UploadHandler uploadUsingProgrammerHandler;\n   private Runnable timeoutUploadHandler;\n \n   private Map<String, Tool> internalToolCache = new HashMap<String, Tool>();\n@@ -1376,8 +1376,10 @@ private void resetHandlers() {\n     presentHandler = new BuildHandler(true);\n     runAndSaveHandler = new BuildHandler(false, true);\n     presentAndSaveHandler = new BuildHandler(true, true);\n-    exportHandler = new DefaultExportHandler();\n-    exportAppHandler = new DefaultExportAppHandler();\n+    uploadHandler = new UploadHandler();\n+    uploadHandler.setUsingProgrammer(false);\n+    uploadUsingProgrammerHandler = new UploadHandler();\n+    uploadUsingProgrammerHandler.setUsingProgrammer(true);\n     timeoutUploadHandler = new TimeoutUploadHandler();\n   }\n \n@@ -2007,13 +2009,17 @@ synchronized public void handleExport(final boolean usingProgrammer) {\n     avoidMultipleOperations = true;\n \n     new Thread(timeoutUploadHandler).start();\n-    new Thread(usingProgrammer ? exportAppHandler : exportHandler).start();\n+    new Thread(usingProgrammer ? uploadUsingProgrammerHandler : uploadHandler).start();\n   }\n \n-  // DAM: in Arduino, this is upload\n-  class DefaultExportHandler implements Runnable {\n-    public void run() {\n+  class UploadHandler implements Runnable {\n+    boolean usingProgrammer = false;\n+\n+    public void setUsingProgrammer(boolean usingProgrammer) {\n+      this.usingProgrammer = usingProgrammer;\n+    }\n \n+    public void run() {\n       try {\n         removeAllLineHighlights();\n         if (serialMonitor != null) {\n@@ -2025,7 +2031,7 @@ public void run() {\n \n         uploading = true;\n \n-        boolean success = sketchController.exportApplet(false);\n+        boolean success = sketchController.exportApplet(usingProgrammer);\n         if (success) {\n           statusNotice(tr(\"Done uploading.\"));\n         }\n@@ -2108,55 +2114,6 @@ private void resumeOrCloseSerialPlotter() {\n    }\n   }\n \n-  // DAM: in Arduino, this is upload (with verbose output)\n-  class DefaultExportAppHandler implements Runnable {\n-    public void run() {\n-\n-      try {\n-        if (serialMonitor != null) {\n-          serialMonitor.suspend();\n-        }\n-        if (serialPlotter != null) {\n-          serialPlotter.suspend();\n-        }\n-\n-        uploading = true;\n-\n-        boolean success = sketchController.exportApplet(true);\n-        if (success) {\n-          statusNotice(tr(\"Done uploading.\"));\n-        }\n-      } catch (SerialNotFoundException e) {\n-        if (portMenu.getItemCount() == 0) statusError(e);\n-        else if (serialPrompt()) run();\n-        else statusNotice(tr(\"Upload canceled.\"));\n-      } catch (PreferencesMapException e) {\n-        statusError(I18n.format(\n-                    tr(\"Error while uploading: missing '{0}' configuration parameter\"),\n-                    e.getMessage()));\n-      } catch (RunnerException e) {\n-        //statusError(\"Error during upload.\");\n-        //e.printStackTrace();\n-        status.unprogress();\n-        statusError(e);\n-      } catch (Exception e) {\n-        e.printStackTrace();\n-      } finally {\n-        avoidMultipleOperations = false;\n-        populatePortMenu();\n-      }\n-      status.unprogress();\n-      uploading = false;\n-      //toolbar.clear();\n-      toolbar.deactivateExport();\n-\n-      resumeOrCloseSerialMonitor();\n-      resumeOrCloseSerialPlotter();\n-\n-      base.onBoardOrPortChange();\n-    }\n-  }\n-\n   class TimeoutUploadHandler implements Runnable {\n \n     public void run() {",
      "parent_sha": "5428420e0a4286f446cabd7685301f750705b8dc"
    }
  },
  {
    "oid": "4d932327891c07f829b82d0466d0106ba7342e29",
    "message": "Verify / Compile -> Verify/Compile. Fixes #3514",
    "date": "2015-08-06T14:11:30Z",
    "url": "https://github.com/arduino/Arduino/commit/4d932327891c07f829b82d0466d0106ba7342e29",
    "details": {
      "sha": "75d4de1c7d2b8c9adc96080769f07eb684de3077",
      "filename": "app/src/processing/app/Editor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/arduino/Arduino/blob/4d932327891c07f829b82d0466d0106ba7342e29/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java",
      "raw_url": "https://github.com/arduino/Arduino/raw/4d932327891c07f829b82d0466d0106ba7342e29/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java",
      "contents_url": "https://api.github.com/repos/arduino/Arduino/contents/app%2Fsrc%2Fprocessing%2Fapp%2FEditor.java?ref=4d932327891c07f829b82d0466d0106ba7342e29",
      "patch": "@@ -722,7 +722,7 @@ public void rebuildRecentSketchesMenu() {\n   private void buildSketchMenu(JMenu sketchMenu) {\n     sketchMenu.removeAll();\n \n-    JMenuItem item = newJMenuItem(tr(\"Verify / Compile\"), 'R');\n+    JMenuItem item = newJMenuItem(tr(\"Verify/Compile\"), 'R');\n     item.addActionListener(new ActionListener() {\n         public void actionPerformed(ActionEvent e) {\n           handleRun(false, Editor.this.presentHandler, Editor.this.runHandler);",
      "parent_sha": "70fbb8b08e6d3ab418453fab037f7a4cb75248d0"
    }
  }
]