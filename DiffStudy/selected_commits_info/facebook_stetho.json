[
  {
    "oid": "59791f8f97f98afa106e63d6e9bc7e51a8211a61",
    "message": "Null check Interceptor.Chain.connection().",
    "date": "2017-07-05T14:32:31Z",
    "url": "https://github.com/facebook/stetho/commit/59791f8f97f98afa106e63d6e9bc7e51a8211a61",
    "details": {
      "sha": "447409415617f451d87bcb54208242148e0cf1ef",
      "filename": "stetho-okhttp3/src/main/java/com/facebook/stetho/okhttp3/StethoInterceptor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/facebook/stetho/blob/59791f8f97f98afa106e63d6e9bc7e51a8211a61/stetho-okhttp3%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fokhttp3%2FStethoInterceptor.java",
      "raw_url": "https://github.com/facebook/stetho/raw/59791f8f97f98afa106e63d6e9bc7e51a8211a61/stetho-okhttp3%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fokhttp3%2FStethoInterceptor.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho-okhttp3%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fokhttp3%2FStethoInterceptor.java?ref=59791f8f97f98afa106e63d6e9bc7e51a8211a61",
      "patch": "@@ -223,7 +223,7 @@ public boolean connectionReused() {\n \n     @Override\n     public int connectionId() {\n-      return mConnection.hashCode();\n+      return mConnection == null ? 0 : mConnection.hashCode();\n     }\n \n     @Override",
      "parent_sha": "05910cc9c7fe5de8a0b44231b06c98bd7e251088"
    }
  },
  {
    "oid": "28df00105515f5c92ec3fc21f25a6970736d5718",
    "message": "Fix minor gotchas in DOM.resolveNode\n\nCloses #170",
    "date": "2015-04-30T23:02:58Z",
    "url": "https://github.com/facebook/stetho/commit/28df00105515f5c92ec3fc21f25a6970736d5718",
    "details": {
      "sha": "14ee38ab2bd82540859a0023764f2b71e9b84181",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/protocol/module/DOM.java",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/facebook/stetho/blob/28df00105515f5c92ec3fc21f25a6970736d5718/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FDOM.java",
      "raw_url": "https://github.com/facebook/stetho/raw/28df00105515f5c92ec3fc21f25a6970736d5718/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FDOM.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FDOM.java?ref=28df00105515f5c92ec3fc21f25a6970736d5718",
      "patch": "@@ -26,6 +26,7 @@\n import com.facebook.stetho.inspector.jsonrpc.JsonRpcException;\n import com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;\n import com.facebook.stetho.inspector.jsonrpc.JsonRpcResult;\n+import com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError;\n import com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain;\n import com.facebook.stetho.inspector.protocol.ChromeDevtoolsMethod;\n import com.facebook.stetho.json.ObjectMapper;\n@@ -123,13 +124,20 @@ public ResolveNodeResponse resolveNode(JsonRpcPeer peer, JSONObject params)\n       throws JsonRpcException {\n     ResolveNodeRequest request = mObjectMapper.convertValue(params, ResolveNodeRequest.class);\n     Object object = mObjectIdMapper.getObjectForId(request.nodeId);\n+    if (object == null) {\n+      throw new JsonRpcException(\n+          new JsonRpcError(\n+              JsonRpcError.ErrorCode.INVALID_PARAMS,\n+              \"No known nodeId=\" + request.nodeId,\n+              null /* data */));\n+    }\n \n     int mappedObjectId = Runtime.mapObject(peer, object);\n \n     Runtime.RemoteObject remoteObject = new Runtime.RemoteObject();\n     remoteObject.type = Runtime.ObjectType.OBJECT;\n     remoteObject.subtype = Runtime.ObjectSubType.NODE;\n-    remoteObject.className = remoteObject.getClass().getName();\n+    remoteObject.className = object.getClass().getName();\n     remoteObject.value = null; // not a primitive\n     remoteObject.description = null; // not sure what this does...\n     remoteObject.objectId = String.valueOf(mappedObjectId);",
      "parent_sha": "4aa344787977a014d8794e8017331f5faf945a2c"
    }
  },
  {
    "oid": "bdc227f83e5672e115deb4a1e91a3f5a4fb03060",
    "message": "Fixed a typo in the websocket flow diagram\n\nObvious typo, a misspelled function name.",
    "date": "2017-07-06T08:07:56Z",
    "url": "https://github.com/facebook/stetho/commit/bdc227f83e5672e115deb4a1e91a3f5a4fb03060",
    "details": {
      "sha": "a2ad414960102504605640ebb2483a34819987e1",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/network/NetworkEventReporter.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/facebook/stetho/blob/bdc227f83e5672e115deb4a1e91a3f5a4fb03060/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fnetwork%2FNetworkEventReporter.java",
      "raw_url": "https://github.com/facebook/stetho/raw/bdc227f83e5672e115deb4a1e91a3f5a4fb03060/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fnetwork%2FNetworkEventReporter.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fnetwork%2FNetworkEventReporter.java?ref=bdc227f83e5672e115deb4a1e91a3f5a4fb03060",
      "patch": "@@ -37,7 +37,7 @@\n  *                  |                                                              |\n  *                  |                     ,----------------------+-----------------+--------,\n  *                  |                     v                      v                          |\n- *                  +---------> [ webSocketFrameSent | webSocketFrameReceiver ] ---,        |\n+ *                  +---------> [ webSocketFrameSent | webSocketFrameReceived ] ---,        |\n  *                  |                     ^                      ^                 |        |\n  *                  |                     `----------------------+-----------------+        |\n  *                  |                                                              |        |",
      "parent_sha": "05910cc9c7fe5de8a0b44231b06c98bd7e251088"
    }
  },
  {
    "oid": "0fecefb37833b935ec55e26e3e6785b7ec131d0e",
    "message": "Fixed the implementation of ViewUtil.hitTestImpl() so that it recursively calls itself instead of hitTest().\n\nCloses #142",
    "date": "2015-04-07T17:49:01Z",
    "url": "https://github.com/facebook/stetho/commit/0fecefb37833b935ec55e26e3e6785b7ec131d0e",
    "details": {
      "sha": "57dbbb20300cbc47d8036cda4fa1ea4627152dd5",
      "filename": "stetho/src/main/java/com/facebook/stetho/common/android/ViewUtil.java",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/facebook/stetho/blob/0fecefb37833b935ec55e26e3e6785b7ec131d0e/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fcommon%2Fandroid%2FViewUtil.java",
      "raw_url": "https://github.com/facebook/stetho/raw/0fecefb37833b935ec55e26e3e6785b7ec131d0e/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fcommon%2Fandroid%2FViewUtil.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fcommon%2Fandroid%2FViewUtil.java?ref=0fecefb37833b935ec55e26e3e6785b7ec131d0e",
      "patch": "@@ -83,7 +83,13 @@ private static View hitTestImpl(\n         final View child = viewGroup.getChildAt(i);\n \n         if (ViewUtil.isTransformedPointInView(viewGroup, child, x, y, localPoint)) {\n-          View childResult = hitTest(child, localPoint.x, localPoint.y, viewSelector);\n+          View childResult = hitTestImpl(\n+              child,\n+              localPoint.x,\n+              localPoint.y,\n+              viewSelector,\n+              allowViewGroupResult);\n+\n           if (childResult != null) {\n             return childResult;\n           }",
      "parent_sha": "94866292acd4d0f7189ff1213c6d38927afc3494"
    }
  },
  {
    "oid": "049778be22222c2ba3a63d6ca32e6daa0c8979b5",
    "message": "Fix the issue that CDT contents are disordered, new WEBKIT_REV is from https://chromedevtools.github.io/devtools-protocol/",
    "date": "2023-12-15T04:36:14Z",
    "url": "https://github.com/facebook/stetho/commit/049778be22222c2ba3a63d6ca32e6daa0c8979b5",
    "details": {
      "sha": "8409a5d308cc1acafb01c265414759bface3d383",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/ChromeDiscoveryHandler.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/facebook/stetho/blob/049778be22222c2ba3a63d6ca32e6daa0c8979b5/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2FChromeDiscoveryHandler.java",
      "raw_url": "https://github.com/facebook/stetho/raw/049778be22222c2ba3a63d6ca32e6daa0c8979b5/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2FChromeDiscoveryHandler.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2FChromeDiscoveryHandler.java?ref=049778be22222c2ba3a63d6ca32e6daa0c8979b5",
      "patch": "@@ -43,15 +43,15 @@ public class ChromeDiscoveryHandler implements HttpHandler {\n   /**\n    * Latest version of the WebKit Inspector UI that we've tested again (ideally).\n    */\n-  private static final String WEBKIT_REV = \"@188492\";\n+  private static final String WEBKIT_REV = \"@cfede9db1d154de0468cb0538479f34c0755a0f4\";\n   private static final String WEBKIT_VERSION = \"537.36 (\" + WEBKIT_REV + \")\";\n \n   private static final String USER_AGENT = \"Stetho\";\n \n   /**\n    * Structured version of the WebKit Inspector protocol that we understand.\n    */\n-  private static final String PROTOCOL_VERSION = \"1.1\";\n+  private static final String PROTOCOL_VERSION = \"1.3\";\n \n   private final Context mContext;\n   private final String mInspectorPath;\n@@ -124,7 +124,7 @@ private void handlePageList(LightHttpResponse response)\n           .authority(\"chrome-devtools-frontend.appspot.com\")\n           .appendEncodedPath(\"serve_rev\")\n           .appendEncodedPath(WEBKIT_REV)\n-          .appendEncodedPath(\"devtools.html\")\n+          .appendEncodedPath(\"inspector.html\")\n           .appendQueryParameter(\"ws\", mInspectorPath)\n           .build();\n       page.put(\"devtoolsFrontendUrl\", chromeFrontendUrl.toString());",
      "parent_sha": "65bbb19a51cf8c066553b62cdd3f30bddc3b598a"
    }
  },
  {
    "oid": "62c4a4874914675b75744dab22ff78ae3a7f7f79",
    "message": "Fix the Rhino autodetection feature\n\nThis was accidentally broken in #245 by not modifying the default\ninspector modules provider to use the new Runtime(Context) constructor,\neffectively disabling the entire feature.",
    "date": "2015-09-03T17:56:59Z",
    "url": "https://github.com/facebook/stetho/commit/62c4a4874914675b75744dab22ff78ae3a7f7f79",
    "details": {
      "sha": "c474679eea43da4eadd4e2336c4530281e8332c6",
      "filename": "stetho/src/main/java/com/facebook/stetho/Stetho.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/facebook/stetho/blob/62c4a4874914675b75744dab22ff78ae3a7f7f79/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2FStetho.java",
      "raw_url": "https://github.com/facebook/stetho/raw/62c4a4874914675b75744dab22ff78ae3a7f7f79/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2FStetho.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2FStetho.java?ref=62c4a4874914675b75744dab22ff78ae3a7f7f79",
      "patch": "@@ -274,7 +274,7 @@ public Iterable<ChromeDevtoolsDomain> finish() {\n       provideIfDesired(new Network(mContext));\n       provideIfDesired(new Page(mContext));\n       provideIfDesired(new Profiler());\n-      provideIfDesired(new Runtime());\n+      provideIfDesired(new Runtime(mContext));\n       provideIfDesired(new Worker());\n       if (Build.VERSION.SDK_INT >= DatabaseConstants.MIN_API_LEVEL) {\n         provideIfDesired(new Database(mContext, new DefaultDatabaseFilesProvider(mContext)));",
      "parent_sha": "cbc87a9c4263a5a4d333fa94ba2fd6defe20a255"
    }
  },
  {
    "oid": "935443fb40cb6e5747a16ab7d05a9af3a8643128",
    "message": "Avoid sending a null `type` or `mimeType` in network responses\n\nDevTools refuses to show any entry that lacks the `type` property in\nrecent versions.  This makes it possible to inspect network responses\nthat for whatever reason don't have the `Content-Type` header available.\n\nCloses #57",
    "date": "2015-02-21T00:15:49Z",
    "url": "https://github.com/facebook/stetho/commit/935443fb40cb6e5747a16ab7d05a9af3a8643128",
    "details": {
      "sha": "c662487957a78327a129b894deb3667fd224402f",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/network/NetworkEventReporterImpl.java",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/facebook/stetho/blob/935443fb40cb6e5747a16ab7d05a9af3a8643128/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fnetwork%2FNetworkEventReporterImpl.java",
      "raw_url": "https://github.com/facebook/stetho/raw/935443fb40cb6e5747a16ab7d05a9af3a8643128/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fnetwork%2FNetworkEventReporterImpl.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fnetwork%2FNetworkEventReporterImpl.java?ref=935443fb40cb6e5747a16ab7d05a9af3a8643128",
      "patch": "@@ -130,9 +130,9 @@ public void responseHeadersReceived(InspectorResponse response) {\n       responseJSON.statusText = response.reasonPhrase();\n       responseJSON.headers = formatHeadersAsJSON(response);\n       String contentType = getContentType(response);\n-      if (contentType != null) {\n-        responseJSON.mimeType = getResourceTypeHelper().stripContentExtras(contentType);\n-      }\n+      responseJSON.mimeType = contentType != null ?\n+          getResourceTypeHelper().stripContentExtras(contentType) :\n+          \"application/octet-stream\";\n       responseJSON.connectionReused = response.connectionReused();\n       responseJSON.connectionId = response.connectionId();\n       responseJSON.fromDiskCache = response.fromDiskCache();\n@@ -141,9 +141,9 @@ public void responseHeadersReceived(InspectorResponse response) {\n       receivedParams.frameId = \"1\";\n       receivedParams.loaderId = \"1\";\n       receivedParams.timestamp = stethoNow() / 1000.0;\n-      if (contentType != null) {\n-        receivedParams.type = getResourceTypeHelper().determineResourceType(contentType);\n-      }\n+      receivedParams.type = contentType != null ?\n+          getResourceTypeHelper().determineResourceType(contentType) :\n+          Page.ResourceType.OTHER;\n       receivedParams.response = responseJSON;\n       peerManager.sendNotificationToPeers(\"Network.responseReceived\", receivedParams);\n     }",
      "parent_sha": "95043c3fce6d90402e059549ee7f7e16d853c88d"
    }
  },
  {
    "oid": "33a9ecfe91fa83936818773943ad7792b72a9064",
    "message": "Fix memory leak in ViewGroupDescriptor\n\nCloses #205",
    "date": "2015-06-25T19:01:36Z",
    "url": "https://github.com/facebook/stetho/commit/33a9ecfe91fa83936818773943ad7792b72a9064",
    "details": {
      "sha": "dd139dfd080eb086d088f978365f6b9e786b084b",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/elements/android/ViewGroupDescriptor.java",
      "status": "modified",
      "additions": 30,
      "deletions": 30,
      "changes": 60,
      "blob_url": "https://github.com/facebook/stetho/blob/33a9ecfe91fa83936818773943ad7792b72a9064/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FViewGroupDescriptor.java",
      "raw_url": "https://github.com/facebook/stetho/raw/33a9ecfe91fa83936818773943ad7792b72a9064/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FViewGroupDescriptor.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FViewGroupDescriptor.java?ref=33a9ecfe91fa83936818773943ad7792b72a9064",
      "patch": "@@ -20,11 +20,21 @@\n import java.util.Collections;\n import java.util.IdentityHashMap;\n import java.util.Map;\n+import java.util.WeakHashMap;\n \n final class ViewGroupDescriptor extends ChainedDescriptor<ViewGroup> {\n   private final Map<ViewGroup, ElementContext> mElementToContextMap =\n       Collections.synchronizedMap(new IdentityHashMap<ViewGroup, ElementContext>());\n \n+  /**\n+   * This is a cache that maps from a View to the Fragment that contains it. If the View isn't\n+   * contained by a Fragment, then this maps the View to itself. For Views contained by Fragments,\n+   * we emit the Fragment instead, and then let the Fragment's descriptor emit the View as its sole\n+   * child. This allows us to see Fragments in the inspector as part of the UI tree.\n+   */\n+  private final Map<View, Object> mViewToElementMap =\n+      Collections.synchronizedMap(new WeakHashMap<View, Object>());\n+\n   public ViewGroupDescriptor() {\n   }\n \n@@ -54,21 +64,32 @@ protected void onUnhook(ViewGroup element) {\n     context.unhook();\n   }\n \n+  private Object getElementForView(ViewGroup parentView, View view) {\n+    Object element = mViewToElementMap.get(view);\n+    if (element != null) {\n+      if (view.getParent() == parentView) {\n+        return element;\n+      }\n+      mViewToElementMap.remove(view);\n+    }\n+\n+    Object fragment = FragmentCompatUtil.findFragmentForView(view);\n+    if (fragment != null) {\n+      mViewToElementMap.put(view, fragment);\n+      return fragment;\n+    } else {\n+      mViewToElementMap.put(view, view);\n+      return view;\n+    }\n+  }\n+\n   @Override\n   protected void onGetChildren(ViewGroup element, Accumulator<Object> children) {\n     ElementContext context = mElementToContextMap.get(element);\n     context.getChildren(children);\n   }\n \n   private final class ElementContext {\n-    // This is a cache that maps from a View to the Fragment that contains it. If the\n-    // View isn't contained by a Fragment, then this maps the View to itself.\n-    // For Views contained by Fragments, we emit the Fragment instead, and then let\n-    // the Fragment's descriptor emit the View as its sole child. This allows us to\n-    // see Fragments in the inspector as part of the UI tree.\n-    private final Map<View, Object> mViewToElementMap =\n-        Collections.synchronizedMap(new IdentityHashMap<View, Object>());\n-\n     private ViewGroup mElement;\n     private boolean mIsDecorView;\n \n@@ -79,7 +100,6 @@ public void hook(ViewGroup element) {\n     public void unhook() {\n       if (mElement != null) {\n         mElement = null;\n-        mViewToElementMap.clear();\n       }\n     }\n \n@@ -91,7 +111,7 @@ public void getChildren(Accumulator<Object> children) {\n       for (int i = 0, N = mElement.getChildCount(); i < N; ++i) {\n         final View child = mElement.getChildAt(i);\n         if (isChildVisible(child)) {\n-          final Object element = getElementForView(child);\n+          final Object element = getElementForView(mElement, child);\n           children.store(element);\n         }\n       }\n@@ -100,25 +120,5 @@ public void getChildren(Accumulator<Object> children) {\n     private boolean isChildVisible(View child) {\n       return !mIsDecorView || !(child instanceof DOMHiddenView);\n     }\n-\n-    private Object getElementForView(View view) {\n-      if (view == null) {\n-        return null;\n-      }\n-\n-      Object element = mViewToElementMap.get(view);\n-      if (element != null) {\n-        return element;\n-      }\n-\n-      Object fragment = FragmentCompatUtil.findFragmentForView(view);\n-      if (fragment != null) {\n-        mViewToElementMap.put(view, fragment);\n-        return fragment;\n-      } else {\n-        mViewToElementMap.put(view, view);\n-        return view;\n-      }\n-    }\n   }\n }",
      "parent_sha": "2f6d3995cb6f75a488264cf009acd4015af13734"
    }
  },
  {
    "oid": "8dcf373c5b77d5cebe4434d58828221b8ed2c398",
    "message": "Add status code checking for schema download",
    "date": "2015-08-19T22:17:34Z",
    "url": "https://github.com/facebook/stetho/commit/8dcf373c5b77d5cebe4434d58828221b8ed2c398",
    "details": {
      "sha": "b534e6b4be0bfcd1b42ae074eaf804185ce583ef",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/network/DownloadingAsyncPrettyPrinterFactory.java",
      "status": "modified",
      "additions": 13,
      "deletions": 4,
      "changes": 17,
      "blob_url": "https://github.com/facebook/stetho/blob/8dcf373c5b77d5cebe4434d58828221b8ed2c398/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fnetwork%2FDownloadingAsyncPrettyPrinterFactory.java",
      "raw_url": "https://github.com/facebook/stetho/raw/8dcf373c5b77d5cebe4434d58828221b8ed2c398/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fnetwork%2FDownloadingAsyncPrettyPrinterFactory.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fnetwork%2FDownloadingAsyncPrettyPrinterFactory.java?ref=8dcf373c5b77d5cebe4434d58828221b8ed2c398",
      "patch": "@@ -3,6 +3,7 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.PrintWriter;\n+import java.net.HttpURLConnection;\n import java.net.MalformedURLException;\n import java.net.URL;\n import java.util.concurrent.Callable;\n@@ -157,10 +158,18 @@ public Request(URL url) {\n \n     @Override\n     public String call() throws IOException {\n-      InputStream urlStream = url.openStream();\n-      String result = Util.readAsUTF8(urlStream);\n-      urlStream.close();\n-      return result;\n+      HttpURLConnection connection = (HttpURLConnection)url.openConnection();\n+      int statusCode = connection.getResponseCode();\n+      if (statusCode != 200) {\n+        throw new IOException(\"Got status code: \" + statusCode + \" while downloading \" +\n+            \"schema with url: \" + url.toString());\n+      }\n+      InputStream urlStream = connection.getInputStream();\n+      try {\n+        return Util.readAsUTF8(urlStream);\n+      } finally {\n+        urlStream.close();\n+      }\n     }\n   }\n }",
      "parent_sha": "3ffd980a09a8488f3799c5fb239483d2a42d4f38"
    }
  },
  {
    "oid": "8daa7686e59a95b1283805df4abb59952af7cf0d",
    "message": "Fix typo in CSS (#629)",
    "date": "2019-02-25T17:05:51Z",
    "url": "https://github.com/facebook/stetho/commit/8daa7686e59a95b1283805df4abb59952af7cf0d",
    "details": {
      "sha": "924dba278e700c4426f52c0d6e0ea5c1ad5640cd",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/protocol/module/CSS.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/facebook/stetho/blob/8daa7686e59a95b1283805df4abb59952af7cf0d/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FCSS.java",
      "raw_url": "https://github.com/facebook/stetho/raw/8daa7686e59a95b1283805df4abb59952af7cf0d/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FCSS.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FCSS.java?ref=8daa7686e59a95b1283805df4abb59952af7cf0d",
      "patch": "@@ -315,7 +315,7 @@ private static class ShorthandEntry {\n     public String value;\n \n     @JsonProperty\n-    public Boolean imporant;\n+    public Boolean important;\n   }\n \n   private static class CSSProperty {",
      "parent_sha": "6d148f20b96ecb29320cced6617830eda8af0426"
    }
  },
  {
    "oid": "47272b0d73a5fb47d4cbb9fe2a57ab563ea84660",
    "message": "use stetho#### not Guest#### which gets blocked by freenode :(",
    "date": "2017-04-13T18:19:30Z",
    "url": "https://github.com/facebook/stetho/commit/47272b0d73a5fb47d4cbb9fe2a57ab563ea84660",
    "details": {
      "sha": "77a43c9762f78c189a970b1c0c02c9bccdbf675b",
      "filename": "stetho-sample/src/main/java/com/facebook/stetho/sample/IRCConnectActivity.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/facebook/stetho/blob/47272b0d73a5fb47d4cbb9fe2a57ab563ea84660/stetho-sample%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fsample%2FIRCConnectActivity.java",
      "raw_url": "https://github.com/facebook/stetho/raw/47272b0d73a5fb47d4cbb9fe2a57ab563ea84660/stetho-sample%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fsample%2FIRCConnectActivity.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho-sample%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fsample%2FIRCConnectActivity.java?ref=47272b0d73a5fb47d4cbb9fe2a57ab563ea84660",
      "patch": "@@ -39,7 +39,7 @@ protected void onCreate(Bundle savedInstanceState) {\n     }\n     mIRCNickname = (EditText) findViewById(R.id.irc_nickname);\n     if (TextUtils.isEmpty(mIRCNickname.getText())) {\n-      mIRCNickname.setText(\"Guest\" + (new Random().nextInt(9999) + 1));\n+      mIRCNickname.setText(\"stetho\" + (new Random().nextInt(9999) + 1));\n     }\n \n     findViewById(R.id.irc_connect).setOnClickListener(mConnectClicked);",
      "parent_sha": "7133e9aff5ed3c2dffd28e5d069a6d75a72e2150"
    }
  },
  {
    "oid": "e39bc37686ee77ac6b49773ddd0d255474b7d663",
    "message": "Make HighlightableDescriptor public",
    "date": "2017-02-15T16:50:53Z",
    "url": "https://github.com/facebook/stetho/commit/e39bc37686ee77ac6b49773ddd0d255474b7d663",
    "details": {
      "sha": "5884b50abe8ca9f193cd5d1a42cf2ab071e9d9d4",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/elements/android/HighlightableDescriptor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/facebook/stetho/blob/e39bc37686ee77ac6b49773ddd0d255474b7d663/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FHighlightableDescriptor.java",
      "raw_url": "https://github.com/facebook/stetho/raw/e39bc37686ee77ac6b49773ddd0d255474b7d663/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FHighlightableDescriptor.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FHighlightableDescriptor.java?ref=e39bc37686ee77ac6b49773ddd0d255474b7d663",
      "patch": "@@ -14,7 +14,7 @@\n \n import javax.annotation.Nullable;\n \n-interface HighlightableDescriptor<E> {\n+public interface HighlightableDescriptor<E> {\n \n   /**\n    * Return the {@link View} to highlight or null if this element cannot be highlighted.",
      "parent_sha": "d15f8bf93ffce9d82020d569bfbd37f41d4439f8"
    }
  },
  {
    "oid": "8e5c94658d618a899283dbb92be0bf2930867975",
    "message": "Fixing NPE crash in ElementInfo.<init>() from Document.createDOMUpdate()\n\nCloses #272",
    "date": "2015-09-04T18:21:26Z",
    "url": "https://github.com/facebook/stetho/commit/8e5c94658d618a899283dbb92be0bf2930867975",
    "details": {
      "sha": "0143408212680b3dc7d94d6627e801c98c5ba655",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/elements/Document.java",
      "status": "modified",
      "additions": 21,
      "deletions": 3,
      "changes": 24,
      "blob_url": "https://github.com/facebook/stetho/blob/8e5c94658d618a899283dbb92be0bf2930867975/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2FDocument.java",
      "raw_url": "https://github.com/facebook/stetho/raw/8e5c94658d618a899283dbb92be0bf2930867975/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2FDocument.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2FDocument.java?ref=8e5c94658d618a899283dbb92be0bf2930867975",
      "patch": "@@ -280,10 +280,28 @@ private ShadowDocument.Update createShadowDOMUpdate() {\n       NodeDescriptor descriptor = mDocumentProvider.getNodeDescriptor(element);\n       mObjectIdMapper.putObject(element);\n       descriptor.getChildren(element, childrenAccumulator);\n-      updateBuilder.setElementChildren(element, childrenAccumulator);\n-      for (int i = 0, N = childrenAccumulator.size(); i < N; ++i) {\n-        mCachedUpdateQueue.add(childrenAccumulator.get(i));\n+\n+      for (int i = 0, size = childrenAccumulator.size(); i < size; ++i) {\n+        Object child = childrenAccumulator.get(i);\n+        if (child != null) {\n+          mCachedUpdateQueue.add(child);\n+        } else {\n+          // This could be indicative of a bug in Stetho code, but could also be caused by a\n+          // custom element of some kind, e.g. ViewGroup. Let's not allow it to kill the hosting\n+          // app.\n+          LogUtil.e(\n+              \"%s.getChildren() emitted a null child at position %s for element %s\",\n+              descriptor.getClass().getName(),\n+              Integer.toString(i),\n+              element);\n+\n+          childrenAccumulator.remove(i);\n+          --i;\n+          --size;\n+        }\n       }\n+\n+      updateBuilder.setElementChildren(element, childrenAccumulator);\n       childrenAccumulator.clear();\n     }\n ",
      "parent_sha": "30551ca4b2ee68ddfb8ad33153ee40bcbf090f0b"
    }
  },
  {
    "oid": "cbd7c4d529511da0f1b5ccc78401f9fa91fcfc2c",
    "message": "Show SQLite views as tables\n\nSimple change to make views (as with CREATE VIEW ...) show up in the\nWebSQL section as a table.  Quick smoke test reveals there's no trouble\ntreating them as tables in Stetho.\n\nCloses #285",
    "date": "2015-09-28T07:31:02Z",
    "url": "https://github.com/facebook/stetho/commit/cbd7c4d529511da0f1b5ccc78401f9fa91fcfc2c",
    "details": {
      "sha": "5f35ab7066928be491b4906436b051222839baaf",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/database/DatabasePeerManager.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/facebook/stetho/blob/cbd7c4d529511da0f1b5ccc78401f9fa91fcfc2c/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fdatabase%2FDatabasePeerManager.java",
      "raw_url": "https://github.com/facebook/stetho/raw/cbd7c4d529511da0f1b5ccc78401f9fa91fcfc2c/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fdatabase%2FDatabasePeerManager.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fdatabase%2FDatabasePeerManager.java?ref=cbd7c4d529511da0f1b5ccc78401f9fa91fcfc2c",
      "patch": "@@ -120,8 +120,8 @@ public List<String> getDatabaseTableNames(String databaseName)\n       throws SQLiteException {\n     SQLiteDatabase database = openDatabase(databaseName);\n     try {\n-      Cursor cursor = database.rawQuery(\"SELECT name FROM sqlite_master WHERE type=?\",\n-          new String[] { \"table\" });\n+      Cursor cursor = database.rawQuery(\"SELECT name FROM sqlite_master WHERE type IN (?, ?)\",\n+          new String[] { \"table\", \"view\" });\n       try {\n         List<String> tableNames = new ArrayList<String>();\n         while (cursor.moveToNext()) {",
      "parent_sha": "5f7a0f5ef0c225ed3c2f1ad6a2a4bad966b3e0fb"
    }
  },
  {
    "oid": "e7c66d6f3d6028a8620fb1fdad764ef34354e5db",
    "message": "format code",
    "date": "2018-10-10T13:43:54Z",
    "url": "https://github.com/facebook/stetho/commit/e7c66d6f3d6028a8620fb1fdad764ef34354e5db",
    "details": {
      "sha": "eb0fef3464c0b3f39cb271f058055169db972747",
      "filename": "stetho-sample/src/main/java/com/facebook/stetho/sample/MainActivity.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/facebook/stetho/blob/e7c66d6f3d6028a8620fb1fdad764ef34354e5db/stetho-sample%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fsample%2FMainActivity.java",
      "raw_url": "https://github.com/facebook/stetho/raw/e7c66d6f3d6028a8620fb1fdad764ef34354e5db/stetho-sample%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fsample%2FMainActivity.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho-sample%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fsample%2FMainActivity.java?ref=e7c66d6f3d6028a8620fb1fdad764ef34354e5db",
      "patch": "@@ -75,8 +75,8 @@ public void onClick(View v) {\n       } else if (id == R.id.irc_btn) {\n         IRCConnectActivity.show(MainActivity.this);\n       } else if (id == R.id.about) {\n-        View view=LayoutInflater.from(MainActivity.this).inflate(R.layout.dialog_layout,null);\n-        Dialog dialog=new Dialog(MainActivity.this);\n+        View view = LayoutInflater.from(MainActivity.this).inflate(R.layout.dialog_layout, null);\n+        Dialog dialog = new Dialog(MainActivity.this);\n         dialog.setContentView(view);\n         dialog.setTitle(getString(R.string.app_name));\n         dialog.show();",
      "parent_sha": "5b980e183eb4ca75d7a20fabe3257a5e68b5b856"
    }
  },
  {
    "oid": "603611a66e6b94ba1711bd908731c07be6f3d33f",
    "message": "Sort list afterwards",
    "date": "2015-10-09T04:53:20Z",
    "url": "https://github.com/facebook/stetho/commit/603611a66e6b94ba1711bd908731c07be6f3d33f",
    "details": {
      "sha": "90fb7002230dc0755d33f50e3d0b82a985fe3768",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/elements/android/ViewDescriptor.java",
      "status": "modified",
      "additions": 8,
      "deletions": 9,
      "changes": 17,
      "blob_url": "https://github.com/facebook/stetho/blob/603611a66e6b94ba1711bd908731c07be6f3d33f/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FViewDescriptor.java",
      "raw_url": "https://github.com/facebook/stetho/raw/603611a66e6b94ba1711bd908731c07be6f3d33f/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FViewDescriptor.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FViewDescriptor.java?ref=603611a66e6b94ba1711bd908731c07be6f3d33f",
      "patch": "@@ -30,8 +30,6 @@\n import java.util.Comparator;\n import java.util.List;\n import java.util.Map;\n-import java.util.Set;\n-import java.util.TreeSet;\n import java.util.regex.Pattern;\n \n final class ViewDescriptor extends AbstractChainedDescriptor<View> implements HighlightableDescriptor {\n@@ -66,12 +64,7 @@ private List<ViewCSSProperty> getViewProperties() {\n     if (mViewProperties == null) {\n       synchronized (this) {\n         if (mViewProperties == null) {\n-          Set<ViewCSSProperty> props = new TreeSet<>(new Comparator<ViewCSSProperty>() {\n-            @Override\n-            public int compare(ViewCSSProperty lhs, ViewCSSProperty rhs) {\n-              return lhs.getCSSName().compareTo(rhs.getCSSName());\n-            }\n-          });\n+          List<ViewCSSProperty> props = new ArrayList<>();\n \n           for (final Method method : View.class.getDeclaredMethods()) {\n             ViewDebug.ExportedProperty annotation =\n@@ -99,7 +92,13 @@ public int compare(ViewCSSProperty lhs, ViewCSSProperty rhs) {\n             }\n           }\n \n-          mViewProperties = Collections.unmodifiableList(new ArrayList<>(props));\n+          Collections.sort(props, new Comparator<ViewCSSProperty>() {\n+            @Override\n+            public int compare(ViewCSSProperty lhs, ViewCSSProperty rhs) {\n+              return lhs.getCSSName().compareTo(rhs.getCSSName());\n+            }\n+          });\n+          mViewProperties = Collections.unmodifiableList(props);\n         }\n       }\n     }",
      "parent_sha": "e1a4964ee974db6df11a5a8b66870e6f4fb82020"
    }
  },
  {
    "oid": "6ac57a4e037dda6caeec0f5dc017ceb3420a7395",
    "message": "Made URLConnectionInspectorHeaders case insensitive",
    "date": "2017-02-23T08:56:44Z",
    "url": "https://github.com/facebook/stetho/commit/6ac57a4e037dda6caeec0f5dc017ceb3420a7395",
    "details": {
      "sha": "91a6c5225296e9f9c3f03ac5537cf11f4e12585a",
      "filename": "stetho-urlconnection/src/main/java/com/facebook/stetho/urlconnection/URLConnectionInspectorHeaders.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/facebook/stetho/blob/6ac57a4e037dda6caeec0f5dc017ceb3420a7395/stetho-urlconnection%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Furlconnection%2FURLConnectionInspectorHeaders.java",
      "raw_url": "https://github.com/facebook/stetho/raw/6ac57a4e037dda6caeec0f5dc017ceb3420a7395/stetho-urlconnection%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Furlconnection%2FURLConnectionInspectorHeaders.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho-urlconnection%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Furlconnection%2FURLConnectionInspectorHeaders.java?ref=6ac57a4e037dda6caeec0f5dc017ceb3420a7395",
      "patch": "@@ -40,7 +40,7 @@ public String headerValue(int index) {\n   public String firstHeaderValue(String name) {\n     int N = headerCount();\n     for (int i = 0; i < N; i++) {\n-      if (name.equals(headerName(i))) {\n+      if (name.equalsIgnoreCase(headerName(i))) {\n         return headerValue(i);\n       }\n     }",
      "parent_sha": "42f0f75199e85d4b0ff34d8355df4a439f98231d"
    }
  },
  {
    "oid": "a9e516703c72f92298cdf0d93c8d2bddcd9ae872",
    "message": "Added methods to get styles from other data types",
    "date": "2016-06-16T06:56:13Z",
    "url": "https://github.com/facebook/stetho/commit/a9e516703c72f92298cdf0d93c8d2bddcd9ae872",
    "details": {
      "sha": "8d248f515a7f92bf071fdd2cb389a8bc410802c8",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/elements/android/ViewDescriptor.java",
      "status": "modified",
      "additions": 25,
      "deletions": 28,
      "changes": 53,
      "blob_url": "https://github.com/facebook/stetho/blob/a9e516703c72f92298cdf0d93c8d2bddcd9ae872/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FViewDescriptor.java",
      "raw_url": "https://github.com/facebook/stetho/raw/a9e516703c72f92298cdf0d93c8d2bddcd9ae872/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FViewDescriptor.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FViewDescriptor.java?ref=a9e516703c72f92298cdf0d93c8d2bddcd9ae872",
      "patch": "@@ -243,24 +243,6 @@ private static String mapFlagsToStringUsingAnnotation(\n     }\n   }\n \n-  private static boolean isDefaultValue(\n-      Float value) {\n-    return value == 0.0f;\n-  }\n-\n-  private static boolean isDefaultValue(\n-      Integer value,\n-      @Nullable ViewDebug.ExportedProperty annotation) {\n-    // Mappable ints should always be shown, because enums don't necessarily have\n-    // logical \"default\" values. Thus we mark all of them as not default, so that they\n-    // show up in the inspector.\n-    if (canFlagsBeMappedToString(annotation) || canIntBeMappedToString(annotation)) {\n-      return false;\n-    }\n-\n-    return value == 0;\n-  }\n-\n   private String convertViewPropertyNameToCSSName(String getterName) {\n     // Split string by uppercase characters. Thankfully since\n     // this is the android source we don't have to worry about\n@@ -297,7 +279,21 @@ private void getStyleFromValue(\n     } else if (value instanceof Integer) {\n       getStyleFromInteger(name, (Integer) value, annotation, styles);\n     } else if (value instanceof Float) {\n-      getStyleFromFloat(name, (Float) value, annotation, styles);\n+      styles.store(name, String.valueOf(value), ((Float) value) == 0.0f);\n+    } else if (value instanceof Boolean) {\n+      styles.store(name, String.valueOf(value), false);\n+    } else if (value instanceof Short) {\n+      styles.store(name, String.valueOf(value), ((Short) value) == 0);\n+    } else if (value instanceof Long) {\n+      styles.store(name, String.valueOf(value), ((Long) value) == 0);\n+    } else if (value instanceof Double) {\n+      styles.store(name, String.valueOf(value), ((Double) value) == 0.0d);\n+    } else if (value instanceof Byte) {\n+      styles.store(name, String.valueOf(value), ((Byte) value) == 0);\n+    } else if (value instanceof Character) {\n+      styles.store(name, String.valueOf(value), ((Character) value) == Character.MIN_VALUE);\n+    } else if (value instanceof CharSequence) {\n+      styles.store(name, String.valueOf(value), ((CharSequence) value).length() == 0);\n     } else {\n       getStylesFromObject(element, name, value, annotation, styles);\n     }\n@@ -335,18 +331,19 @@ private void getStyleFromInteger(\n           intValueStr + \" (\" + mapFlagsToStringUsingAnnotation(value, annotation) + \")\",\n           false);\n     } else {\n-      styles.store(name, intValueStr, isDefaultValue(value, annotation));\n+      Boolean defaultValue = true;\n+      // Mappable ints should always be shown, because enums don't necessarily have\n+      // logical \"default\" values. Thus we mark all of them as not default, so that they\n+      // show up in the inspector.\n+      if (value != 0 ||\n+          canFlagsBeMappedToString(annotation) ||\n+          canIntBeMappedToString(annotation)) {\n+        defaultValue = false;\n+      }\n+      styles.store(name, intValueStr, defaultValue);\n     }\n   }\n \n-  private void getStyleFromFloat(\n-      String name,\n-      Float value,\n-      @Nullable ViewDebug.ExportedProperty annotation,\n-      StyleAccumulator styles) {\n-    styles.store(name, String.valueOf(value), isDefaultValue(value));\n-  }\n-\n   private void getStylesFromObject(\n       View view,\n       String name,",
      "parent_sha": "21b0934311457d22a5bf67644dbffaa95c51ab07"
    }
  },
  {
    "oid": "322c86eb60511b40f03e28bbdb61daf8c762f4ba",
    "message": "Add support for EXPLAIN queries run via Web SQL console.",
    "date": "2015-07-29T17:06:31Z",
    "url": "https://github.com/facebook/stetho/commit/322c86eb60511b40f03e28bbdb61daf8c762f4ba",
    "details": {
      "sha": "42e941d0f7f4b768d65ff9c28002d467b61461f6",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/database/DatabasePeerManager.java",
      "status": "modified",
      "additions": 13,
      "deletions": 13,
      "changes": 26,
      "blob_url": "https://github.com/facebook/stetho/blob/322c86eb60511b40f03e28bbdb61daf8c762f4ba/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fdatabase%2FDatabasePeerManager.java",
      "raw_url": "https://github.com/facebook/stetho/raw/322c86eb60511b40f03e28bbdb61daf8c762f4ba/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fdatabase%2FDatabasePeerManager.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fdatabase%2FDatabasePeerManager.java?ref=322c86eb60511b40f03e28bbdb61daf8c762f4ba",
      "patch": "@@ -9,7 +9,6 @@\n \n package com.facebook.stetho.inspector.database;\n \n-import java.util.Arrays;\n import java.util.Collections;\n import java.util.HashSet;\n import java.util.Set;\n@@ -143,19 +142,20 @@ public <T> T executeSQL(String databaseName, String query, ExecuteResultHandler<\n     Util.throwIfNull(handler);\n     SQLiteDatabase database = openDatabase(databaseName);\n     try {\n-      String firstWord = getFirstWord(query);\n-\n-      if (firstWord.equalsIgnoreCase(\"UPDATE\") || firstWord.equalsIgnoreCase(\"DELETE\")) {\n-        return executeUpdateDelete(database, query, handler);\n-      } else if (firstWord.equalsIgnoreCase(\"INSERT\")) {\n-        return executeInsert(database, query, handler);\n-      } else if (firstWord.equalsIgnoreCase(\"SELECT\") ||\n-          firstWord.equalsIgnoreCase(\"PRAGMA\")) {\n-        return executeSelect(database, query, handler);\n-      } else {\n-        return executeRawQuery(database, query, handler);\n+      String firstWordUpperCase = getFirstWord(query).toUpperCase();\n+      switch (firstWordUpperCase) {\n+        case \"UPDATE\":\n+        case \"DELETE\":\n+          return executeUpdateDelete(database, query, handler);\n+        case \"INSERT\":\n+          return executeInsert(database, query, handler);\n+        case \"SELECT\":\n+        case \"PRAGMA\":\n+        case \"EXPLAIN\":\n+          return executeSelect(database, query, handler);\n+        default:\n+          return executeRawQuery(database, query, handler);\n       }\n-\n     } finally {\n       database.close();\n     }",
      "parent_sha": "082ee9c3e70e103430d319e46b5f4070a1a4f06c"
    }
  },
  {
    "oid": "68709f14486b26dfc0259fcaa44d199de2ed6000",
    "message": "Add @Nullable to constructor and field.",
    "date": "2017-07-26T17:25:43Z",
    "url": "https://github.com/facebook/stetho/commit/68709f14486b26dfc0259fcaa44d199de2ed6000",
    "details": {
      "sha": "3da7c73661c2b2e25902e929e3bafeb30e7e155a",
      "filename": "stetho-okhttp3/src/main/java/com/facebook/stetho/okhttp3/StethoInterceptor.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/facebook/stetho/blob/68709f14486b26dfc0259fcaa44d199de2ed6000/stetho-okhttp3%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fokhttp3%2FStethoInterceptor.java",
      "raw_url": "https://github.com/facebook/stetho/raw/68709f14486b26dfc0259fcaa44d199de2ed6000/stetho-okhttp3%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fokhttp3%2FStethoInterceptor.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho-okhttp3%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fokhttp3%2FStethoInterceptor.java?ref=68709f14486b26dfc0259fcaa44d199de2ed6000",
      "patch": "@@ -182,13 +182,13 @@ private static class OkHttpInspectorResponse implements NetworkEventReporter.Ins\n     private final String mRequestId;\n     private final Request mRequest;\n     private final Response mResponse;\n-    private final Connection mConnection;\n+    @Nullable private final Connection mConnection;\n \n     public OkHttpInspectorResponse(\n         String requestId,\n         Request request,\n         Response response,\n-        Connection connection) {\n+        @Nullable Connection connection) {\n       mRequestId = requestId;\n       mRequest = request;\n       mResponse = response;",
      "parent_sha": "59791f8f97f98afa106e63d6e9bc7e51a8211a61"
    }
  },
  {
    "oid": "47204f59d885ad0c35fd77333a74dae06d4230ff",
    "message": "JsConsole no longer references its JavasSript prototype\n\nTurns out that we never use the prototype so we don't need to keep it\nlying around.\n\nWe can also remove the public constructor since it will be empty and java\ndoes provide one by default.",
    "date": "2015-09-24T21:17:56Z",
    "url": "https://github.com/facebook/stetho/commit/47204f59d885ad0c35fd77333a74dae06d4230ff",
    "details": {
      "sha": "b8e137c65e65a22717db7f37e8485a7f85a3aa75",
      "filename": "stetho-js-rhino/src/main/java/com/facebook/stetho/rhino/JsConsole.java",
      "status": "modified",
      "additions": 4,
      "deletions": 10,
      "changes": 14,
      "blob_url": "https://github.com/facebook/stetho/blob/47204f59d885ad0c35fd77333a74dae06d4230ff/stetho-js-rhino%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Frhino%2FJsConsole.java",
      "raw_url": "https://github.com/facebook/stetho/raw/47204f59d885ad0c35fd77333a74dae06d4230ff/stetho-js-rhino%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Frhino%2FJsConsole.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho-js-rhino%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Frhino%2FJsConsole.java?ref=47204f59d885ad0c35fd77333a74dae06d4230ff",
      "patch": "@@ -9,7 +9,6 @@\n \n package com.facebook.stetho.rhino;\n \n-import android.support.annotation.Nullable;\n import com.facebook.stetho.inspector.console.CLog;\n import com.facebook.stetho.inspector.protocol.module.Console.MessageLevel;\n import com.facebook.stetho.inspector.protocol.module.Console.MessageSource;\n@@ -27,19 +26,14 @@ public class JsConsole extends ScriptableObject {\n    */\n   private static final long serialVersionUID = 1L;\n \n-  private @Nullable\n-  JsConsole thePrototypeInstance = null;\n-\n   /**\n-   * The zero-parameter constructor.\n+   * <p>The zero-parameter constructor.</p>\n    *\n-   * When Context.defineClass is called with this class, it will construct\n-   * File.prototype using this constructor.\n+   * <p>When Context.defineClass is called with this class, it will construct\n+   * JsConsole.prototype using this constructor.</p>\n    */\n   public JsConsole() {\n-    if (thePrototypeInstance == null) {\n-      thePrototypeInstance = this;\n-    }\n+    // Empty\n   }\n \n   public JsConsole(ScriptableObject scope) {",
      "parent_sha": "3c59548db4e0345ae8ee13137c5ab65a259060e7"
    }
  },
  {
    "oid": "89cac2b09c899edd37a0c78dbd5b93c205938c60",
    "message": "Have DefaultDatabaseProvider return filename\n\nThe API for `DatabaseProvider` is to return `List<File>` however the\ncurrent implementation of `DefaultDatabaseProvider` returns a `File`\nthat does not exist. We were able to get around this before due to the\nfact that the file was only used to call `File#getName()`.\n\nIn #390 this was changed and the actual `File` object was used to open\nthe database.\n\nThis fixes #431",
    "date": "2016-09-12T21:22:35Z",
    "url": "https://github.com/facebook/stetho/commit/89cac2b09c899edd37a0c78dbd5b93c205938c60",
    "details": {
      "sha": "290bf23faaa4dffccf1bcbf38f744fa54f0ab5c3",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/database/DefaultDatabaseFilesProvider.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/facebook/stetho/blob/89cac2b09c899edd37a0c78dbd5b93c205938c60/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fdatabase%2FDefaultDatabaseFilesProvider.java",
      "raw_url": "https://github.com/facebook/stetho/raw/89cac2b09c899edd37a0c78dbd5b93c205938c60/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fdatabase%2FDefaultDatabaseFilesProvider.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fdatabase%2FDefaultDatabaseFilesProvider.java?ref=89cac2b09c899edd37a0c78dbd5b93c205938c60",
      "patch": "@@ -28,8 +28,8 @@ public DefaultDatabaseFilesProvider(Context context) {\n   @Override\n   public List<File> getDatabaseFiles() {\n     List<File> databaseFiles = new ArrayList<File>();\n-    for (String filename : mContext.databaseList()) {\n-      databaseFiles.add(new File(filename));\n+    for (String databaseName : mContext.databaseList()) {\n+      databaseFiles.add(mContext.getDatabasePath(databaseName));\n     }\n     return databaseFiles;\n   }",
      "parent_sha": "fa75228ffbb5f5848920e694ad7e8914c43c75a3"
    }
  },
  {
    "oid": "22c1a583154769f63a9b0f2ecaf9dea977c1cfad",
    "message": "Don't evaluate twice a field's value when serializing java to JSON in ObjectMapper",
    "date": "2015-09-30T20:25:24Z",
    "url": "https://github.com/facebook/stetho/commit/22c1a583154769f63a9b0f2ecaf9dea977c1cfad",
    "details": {
      "sha": "360cb3bf924403572379248ae16fcec563d3177e",
      "filename": "stetho/src/main/java/com/facebook/stetho/json/ObjectMapper.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/facebook/stetho/blob/22c1a583154769f63a9b0f2ecaf9dea977c1cfad/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fjson%2FObjectMapper.java",
      "raw_url": "https://github.com/facebook/stetho/raw/22c1a583154769f63a9b0f2ecaf9dea977c1cfad/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fjson%2FObjectMapper.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fjson%2FObjectMapper.java?ref=22c1a583154769f63a9b0f2ecaf9dea977c1cfad",
      "patch": "@@ -101,7 +101,7 @@ private <T> T _convertFromJSONObject(JSONObject jsonObject, Class<T> type)\n       Object value = jsonObject.opt(field.getName());\n       Object setValue = getValueForField(field, value);\n       try {\n-        field.set(instance, getValueForField(field, value));\n+        field.set(instance, setValue);\n       } catch (IllegalArgumentException e) {\n         throw new IllegalArgumentException(\n             \"Class: \" + type.getSimpleName() + \" \" +",
      "parent_sha": "a58ebd88f6737444cfdf326876f78a4373f3a222"
    }
  },
  {
    "oid": "2a89189298ae2b3a31c20d118751921e96d14115",
    "message": "Clarify how `mHolder` is guarded.\n\nAlso avoid calling `isStethoPresent()` on each method call which is\nobviously much slower than intended.  The function has been removed as\nthis pattern clearly has issues.",
    "date": "2015-04-02T21:15:38Z",
    "url": "https://github.com/facebook/stetho/commit/2a89189298ae2b3a31c20d118751921e96d14115",
    "details": {
      "sha": "adba57b7227103fad6b565ea333c234f940414cf",
      "filename": "stetho-urlconnection/src/main/java/com/facebook/stetho/urlconnection/StethoURLConnectionManager.java",
      "status": "modified",
      "additions": 15,
      "deletions": 11,
      "changes": 26,
      "blob_url": "https://github.com/facebook/stetho/blob/2a89189298ae2b3a31c20d118751921e96d14115/stetho-urlconnection%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Furlconnection%2FStethoURLConnectionManager.java",
      "raw_url": "https://github.com/facebook/stetho/raw/2a89189298ae2b3a31c20d118751921e96d14115/stetho-urlconnection%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Furlconnection%2FStethoURLConnectionManager.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho-urlconnection%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Furlconnection%2FStethoURLConnectionManager.java?ref=2a89189298ae2b3a31c20d118751921e96d14115",
      "patch": "@@ -31,19 +31,23 @@\n  */\n @NotThreadSafe\n public class StethoURLConnectionManager {\n-  private static boolean sIsStethoPresent = isStethoPresent();\n+  private static final boolean sIsStethoPresent;\n \n-  private static boolean isStethoPresent() {\n+  static {\n+    boolean isStethoPresent = false;\n     try {\n       Class.forName(\"com.facebook.stetho.Stetho\");\n-      return true;\n+      isStethoPresent = true;\n     } catch (ClassNotFoundException e) {\n-      return false;\n     }\n+    sIsStethoPresent = isStethoPresent;\n   }\n \n+  @Nullable\n   private final Holder mHolder;\n \n+  // Holder hides StethoURLConnectionManagerImpl from the class verifier as per:\n+  // http://en.wikipedia.org/wiki/Initialization-on-demand_holder_idiom\n   private static class Holder {\n     private final StethoURLConnectionManagerImpl impl;\n \n@@ -61,7 +65,7 @@ public StethoURLConnectionManager(@Nullable String friendlyName) {\n   }\n \n   public boolean isStethoEnabled() {\n-    return isStethoPresent() && mHolder.impl.isStethoActive();\n+    return mHolder != null && mHolder.impl.isStethoActive();\n   }\n \n   /**\n@@ -76,7 +80,7 @@ public boolean isStethoEnabled() {\n   public void preConnect(\n       HttpURLConnection connection,\n       @Nullable SimpleRequestEntity requestEntity) {\n-    if (isStethoPresent()) {\n+    if (mHolder != null) {\n       mHolder.impl.preConnect(connection, requestEntity);\n     }\n   }\n@@ -91,7 +95,7 @@ public void preConnect(\n    *     throws.\n    */\n   public void postConnect() throws IOException {\n-    if (isStethoPresent()) {\n+    if (mHolder != null) {\n       mHolder.impl.postConnect();\n     }\n   }\n@@ -103,7 +107,7 @@ public void postConnect() throws IOException {\n    * @param ex Relay the exception that was thrown from {@link java.net.HttpURLConnection}\n    */\n   public void httpExchangeFailed(IOException ex) {\n-    if (isStethoPresent()) {\n+    if (mHolder != null) {\n       mHolder.impl.httpExchangeFailed(ex);\n     }\n   }\n@@ -124,7 +128,7 @@ public void httpExchangeFailed(IOException ex) {\n    * @return The filtering stream which is to be read after this method is called.\n    */\n   public InputStream interpretResponseStream(@Nullable InputStream responseStream) {\n-    if (isStethoPresent()) {\n+    if (mHolder != null) {\n       return mHolder.impl.interpretResponseStream(responseStream);\n     } else {\n       return responseStream;\n@@ -144,7 +148,7 @@ public InputStream interpretResponseStream(@Nullable InputStream responseStream)\n   @Deprecated\n   @Nullable\n   public Object getStethoHook() {\n-    if (isStethoPresent()) {\n+    if (mHolder != null) {\n       return mHolder.impl.getStethoHook();\n     } else {\n       return null;\n@@ -158,7 +162,7 @@ public Object getStethoHook() {\n    */\n   @Nullable\n   public String getStethoRequestId() {\n-    if (isStethoPresent()) {\n+    if (mHolder != null) {\n       return mHolder.impl.getStethoRequestId();\n     } else {\n       return null;",
      "parent_sha": "c53a222fe4765d2da7fe8f5e353b4f5155c31b76"
    }
  },
  {
    "oid": "3c59548db4e0345ae8ee13137c5ab65a259060e7",
    "message": "Fix a bug in Android M where the JsConsole is not being accessible\n\nIn Android M (Marshmallow 6 Preview) there's a problem instanciating the `console`\nobject.\n\nUsers will see the following error:\n\n  Failed to setup javascript console\n  com.facebook.stetho.rhino.JsRuntimeReplFactoryBuilder$StethoJsException: Failed to setup javascript console\n      at com.facebook.stetho.rhino.JsRuntimeReplFactoryBuilder.importConsole(JsRuntimeReplFactoryBuilder.java:214)\n      at com.facebook.stetho.rhino.JsRuntimeReplFactoryBuilder.initJsScope(JsRuntimeReplFactoryBuilder.java:170)\n      at com.facebook.stetho.rhino.JsRuntimeReplFactoryBuilder.initJsScope(JsRuntimeReplFactoryBuilder.java:153)\n      at com.facebook.stetho.rhino.JsRuntimeReplFactoryBuilder.access$000(JsRuntimeReplFactoryBuilder.java:43)\n      at com.facebook.stetho.rhino.JsRuntimeReplFactoryBuilder$1.newInstance(JsRuntimeReplFactoryBuilder.java:141)\n      at com.facebook.stetho.inspector.runtime.RhinoDetectingRuntimeReplFactory.newInstance(RhinoDetectingRuntimeReplFactory.java:51)\n      at com.facebook.stetho.inspector.protocol.module.Runtime$Session.getRepl(Runtime.java:271)\n      at com.facebook.stetho.inspector.protocol.module.Runtime$Session.evaluate(Runtime.java:260)\n      at com.facebook.stetho.inspector.protocol.module.Runtime.evaluate(Runtime.java:158)\n      at java.lang.reflect.Method.invoke(Native Method)\n      at com.facebook.stetho.inspector.MethodDispatcher$MethodDispatchHelper.invoke(MethodDispatcher.java:96)\n      at com.facebook.stetho.inspector.MethodDispatcher.dispatch(MethodDispatcher.java:67)\n      at com.facebook.stetho.inspector.ChromeDevtoolsServer.handleRemoteRequest(ChromeDevtoolsServer.java:129)\n      at com.facebook.stetho.inspector.ChromeDevtoolsServer.handleRemoteMessage(ChromeDevtoolsServer.java:111)\n      at com.facebook.stetho.inspector.ChromeDevtoolsServer.onMessage(ChromeDevtoolsServer.java:87)\n      at com.facebook.stetho.websocket.WebSocketSession$1.handleTextFrame(WebSocketSession.java:176)\n      at com.facebook.stetho.websocket.WebSocketSession$1.onCompleteFrame(WebSocketSession.java:136)\n      at com.facebook.stetho.websocket.ReadHandler.readLoop(ReadHandler.java:46)\n      at com.facebook.stetho.websocket.WebSocketSession.handle(WebSocketSession.java:45)\n      at com.facebook.stetho.websocket.WebSocketHandler.doUpgrade(WebSocketHandler.java:154)\n      at com.facebook.stetho.websocket.WebSocketHandler.handleSecured(WebSocketHandler.java:106)\n      at com.facebook.stetho.server.SecureHttpRequestHandler.handle(SecureHttpRequestHandler.java:52)\n      at org.apache.http.protocol.HttpService.doService(HttpService.java:248)\n      at org.apache.http.protocol.HttpService.handleRequest(HttpService.java:192)\n      at com.facebook.stetho.server.LocalSocketHttpServer$WorkerThread.run(LocalSocketHttpServer.java:233)\n  Caused by: java.lang.IllegalAccessException: java.lang.Class<com.facebook.stetho.rhino.JsConsole> is not accessible from java.lang.Class<org.mozilla.javascript.ScriptableObject>\n      at java.lang.reflect.Constructor.newInstance(Native Method)\n      at org.mozilla.javascript.ScriptableObject.buildClassCtor(ScriptableObject.java:1339)\n      at org.mozilla.javascript.ScriptableObject.defineClass(ScriptableObject.java:1279)\n      at org.mozilla.javascript.ScriptableObject.defineClass(ScriptableObject.java:1212)\n      at com.facebook.stetho.rhino.JsRuntimeReplFactoryBuilder.importConsole(JsRuntimeReplFactoryBuilder.java:210)\n      ... 24 more\n\nTurns out that with Android M we need the class JsConsole to be public.",
    "date": "2015-09-24T21:17:35Z",
    "url": "https://github.com/facebook/stetho/commit/3c59548db4e0345ae8ee13137c5ab65a259060e7",
    "details": {
      "sha": "276641794daac158a803905d7597f07babf99471",
      "filename": "stetho-js-rhino/src/main/java/com/facebook/stetho/rhino/JsConsole.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/facebook/stetho/blob/3c59548db4e0345ae8ee13137c5ab65a259060e7/stetho-js-rhino%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Frhino%2FJsConsole.java",
      "raw_url": "https://github.com/facebook/stetho/raw/3c59548db4e0345ae8ee13137c5ab65a259060e7/stetho-js-rhino%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Frhino%2FJsConsole.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho-js-rhino%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Frhino%2FJsConsole.java?ref=3c59548db4e0345ae8ee13137c5ab65a259060e7",
      "patch": "@@ -20,7 +20,7 @@\n import org.mozilla.javascript.ScriptableObject;\n import org.mozilla.javascript.annotations.JSFunction;\n \n-class JsConsole extends ScriptableObject {\n+public class JsConsole extends ScriptableObject {\n \n   /**\n    * Serial version UID.",
      "parent_sha": "f3e1c88be7df56b21f552b6d717079580215e045"
    }
  },
  {
    "oid": "19ffdf6765bbc7040172a3b8f6e0c12dc3d13b70",
    "message": "fix payloadData length error\n\nfix payloadData length error when it's length is more than 0xffff",
    "date": "2017-11-01T15:33:59Z",
    "url": "https://github.com/facebook/stetho/commit/19ffdf6765bbc7040172a3b8f6e0c12dc3d13b70",
    "details": {
      "sha": "1e5f4a592e03c01bbd92d2947a868ad5f5390984",
      "filename": "stetho/src/main/java/com/facebook/stetho/websocket/Frame.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/facebook/stetho/blob/19ffdf6765bbc7040172a3b8f6e0c12dc3d13b70/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fwebsocket%2FFrame.java",
      "raw_url": "https://github.com/facebook/stetho/raw/19ffdf6765bbc7040172a3b8f6e0c12dc3d13b70/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fwebsocket%2FFrame.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fwebsocket%2FFrame.java?ref=19ffdf6765bbc7040172a3b8f6e0c12dc3d13b70",
      "patch": "@@ -94,8 +94,8 @@ private long decodeLength(byte firstLenByte, InputStream in) throws IOException\n     } else if (firstLenByte == 127) {\n       long len = 0;\n       for (int i = 0; i < 8; i++) {\n-        len |= (readByteOrThrow(in) & 0xff);\n         len <<= 8;\n+        len |= (readByteOrThrow(in) & 0xff);\n       }\n       return len;\n     } else {",
      "parent_sha": "6cdd9bf939ee220c1ca1acaa64375c4cc5df7eb9"
    }
  },
  {
    "oid": "18dbfc9664d3209e6394b2c709b1b9a0f9ab54a2",
    "message": "Refined content provider initialization based on better api.",
    "date": "2015-10-05T16:42:00Z",
    "url": "https://github.com/facebook/stetho/commit/18dbfc9664d3209e6394b2c709b1b9a0f9ab54a2",
    "details": {
      "sha": "f3e1dec2df30f3559c804b1131d6b2c7a975a88d",
      "filename": "stetho-sample/src/debug/java/com/facebook/stetho/sample/SampleDebugApplication.java",
      "status": "modified",
      "additions": 33,
      "deletions": 41,
      "changes": 74,
      "blob_url": "https://github.com/facebook/stetho/blob/18dbfc9664d3209e6394b2c709b1b9a0f9ab54a2/stetho-sample%2Fsrc%2Fdebug%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fsample%2FSampleDebugApplication.java",
      "raw_url": "https://github.com/facebook/stetho/raw/18dbfc9664d3209e6394b2c709b1b9a0f9ab54a2/stetho-sample%2Fsrc%2Fdebug%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fsample%2FSampleDebugApplication.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho-sample%2Fsrc%2Fdebug%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fsample%2FSampleDebugApplication.java?ref=18dbfc9664d3209e6394b2c709b1b9a0f9ab54a2",
      "patch": "@@ -22,11 +22,7 @@\n import com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver;\n import com.facebook.stetho.inspector.database.ContentProviderSchema;\n import com.facebook.stetho.inspector.database.ContentProviderSchema.Table;\n-import com.facebook.stetho.inspector.database.DefaultDatabaseFilesProvider;\n-import com.facebook.stetho.inspector.database.SqliteDatabaseDriver;\n import com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain;\n-import com.facebook.stetho.inspector.protocol.module.Database;\n-import com.facebook.stetho.inspector.protocol.module.DatabaseConstants;\n \n public class SampleDebugApplication extends SampleApplication {\n   private static final String TAG = \"SampleDebugApplication\";\n@@ -65,47 +61,43 @@ private static class ExtInspectorModulesProvider implements InspectorModulesProv\n       mContext = context;\n     }\n \n-    @TargetApi(Build.VERSION_CODES.ICE_CREAM_SANDWICH)\n     @Override\n     public Iterable<ChromeDevtoolsDomain> get() {\n-      Stetho.DefaultInspectorModulesBuilder builder = new Stetho.DefaultInspectorModulesBuilder(mContext);\n-      if (Build.VERSION.SDK_INT >= DatabaseConstants.MIN_API_LEVEL) {\n-\n-        // sample calendars content provider we want to support\n-        ContentProviderSchema calendarsSchema = new ContentProviderSchema.Builder()\n-            .table(new Table.Builder()\n-                .uri(CalendarContract.Calendars.CONTENT_URI)\n-                .projection(new String[] {\n-                    CalendarContract.Calendars._ID,\n-                    CalendarContract.Calendars.NAME,\n-                    CalendarContract.Calendars.ACCOUNT_NAME,\n-                    CalendarContract.Calendars.IS_PRIMARY,\n-                })\n-                .build())\n-            .build();\n+      return new Stetho.DefaultInspectorModulesBuilder(mContext)\n+          .provideDatabaseDriver(createContentProviderDatabaseDriver(mContext))\n+          .finish();\n+    }\n \n-        // sample events content provider we want to support\n-        ContentProviderSchema eventsSchema = new ContentProviderSchema.Builder()\n-            .table(new Table.Builder()\n-                .uri(CalendarContract.Events.CONTENT_URI)\n-                .projection(new String[]{\n-                    CalendarContract.Events._ID,\n-                    CalendarContract.Events.TITLE,\n-                    CalendarContract.Events.DESCRIPTION,\n-                    CalendarContract.Events.ACCOUNT_NAME,\n-                    CalendarContract.Events.DTSTART,\n-                    CalendarContract.Events.DTEND,\n-                    CalendarContract.Events.CALENDAR_ID,\n-                })\n-                .build())\n-            .build();\n+    @TargetApi(Build.VERSION_CODES.ICE_CREAM_SANDWICH)\n+    private ContentProviderDatabaseDriver createContentProviderDatabaseDriver(Context context) {\n+      ContentProviderSchema calendarsSchema = new ContentProviderSchema.Builder()\n+          .table(new Table.Builder()\n+              .uri(CalendarContract.Calendars.CONTENT_URI)\n+              .projection(new String[] {\n+                  CalendarContract.Calendars._ID,\n+                  CalendarContract.Calendars.NAME,\n+                  CalendarContract.Calendars.ACCOUNT_NAME,\n+                  CalendarContract.Calendars.IS_PRIMARY,\n+              })\n+              .build())\n+          .build();\n \n-        Database database = new Database();\n-        database.add(new SqliteDatabaseDriver(mContext, new DefaultDatabaseFilesProvider(mContext)));\n-        database.add(new ContentProviderDatabaseDriver(mContext, calendarsSchema, eventsSchema));\n-        builder.provide(database);\n-      }\n-      return builder.finish();\n+      // sample events content provider we want to support\n+      ContentProviderSchema eventsSchema = new ContentProviderSchema.Builder()\n+          .table(new Table.Builder()\n+              .uri(CalendarContract.Events.CONTENT_URI)\n+              .projection(new String[]{\n+                  CalendarContract.Events._ID,\n+                  CalendarContract.Events.TITLE,\n+                  CalendarContract.Events.DESCRIPTION,\n+                  CalendarContract.Events.ACCOUNT_NAME,\n+                  CalendarContract.Events.DTSTART,\n+                  CalendarContract.Events.DTEND,\n+                  CalendarContract.Events.CALENDAR_ID,\n+              })\n+              .build())\n+          .build();\n+      return new ContentProviderDatabaseDriver(context, calendarsSchema, eventsSchema);\n     }\n   }\n ",
      "parent_sha": "7a27fc7e9557c155c7103daa4a38060332ced182"
    }
  },
  {
    "oid": "8757c9543695801023365bd8f5e8735c6129451a",
    "message": "Fix RequestBodyHelper body inflation",
    "date": "2015-08-07T01:53:51Z",
    "url": "https://github.com/facebook/stetho/commit/8757c9543695801023365bd8f5e8735c6129451a",
    "details": {
      "sha": "2faff3c3fe063068e0b9ae715f6a63c5f5e4a605",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/network/RequestBodyHelper.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/facebook/stetho/blob/8757c9543695801023365bd8f5e8735c6129451a/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fnetwork%2FRequestBodyHelper.java",
      "raw_url": "https://github.com/facebook/stetho/raw/8757c9543695801023365bd8f5e8735c6129451a/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fnetwork%2FRequestBodyHelper.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fnetwork%2FRequestBodyHelper.java?ref=8757c9543695801023365bd8f5e8735c6129451a",
      "patch": "@@ -14,7 +14,7 @@\n import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n import java.io.OutputStream;\n-import java.util.zip.DeflaterOutputStream;\n+import java.util.zip.InflaterOutputStream;\n \n /**\n  * Helper which manages provides computed request sizes as well as transparent decompression.\n@@ -44,7 +44,7 @@ public OutputStream createBodySink(@Nullable String contentEncoding) throws IOEx\n     if (DecompressionHelper.GZIP_ENCODING.equals(contentEncoding)) {\n       deflatingOutput = GunzippingOutputStream.create(deflatedOutput);\n     } else if (DecompressionHelper.DEFLATE_ENCODING.equals(contentEncoding)) {\n-      deflatingOutput = new DeflaterOutputStream(deflatedOutput);\n+      deflatingOutput = new InflaterOutputStream(deflatedOutput);\n     } else {\n       deflatingOutput = deflatedOutput;\n     }",
      "parent_sha": "f41bb1ccb21a6548ea456f2e345c7b4e7cb51dd7"
    }
  },
  {
    "oid": "118d516510ef11e633927af919300bb67be6f6c4",
    "message": "Fix ObjectMapper's treatment of static fields (#465)\n\nWe should not be setting static fields from JSON data, or serializing\r\nthem into JSON data. Also, this prevents Stetho from working with\r\nAndroid Studio's Instant Run since it injects some stuff into there.\r\nThis can manifest itself as a totally blank inspector window.",
    "date": "2016-12-08T22:43:06Z",
    "url": "https://github.com/facebook/stetho/commit/118d516510ef11e633927af919300bb67be6f6c4",
    "details": {
      "sha": "9a0e5b565e1298505f60daebf73780b15326e488",
      "filename": "stetho/src/main/java/com/facebook/stetho/json/ObjectMapper.java",
      "status": "modified",
      "additions": 13,
      "deletions": 5,
      "changes": 18,
      "blob_url": "https://github.com/facebook/stetho/blob/118d516510ef11e633927af919300bb67be6f6c4/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fjson%2FObjectMapper.java",
      "raw_url": "https://github.com/facebook/stetho/raw/118d516510ef11e633927af919300bb67be6f6c4/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fjson%2FObjectMapper.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fjson%2FObjectMapper.java?ref=118d516510ef11e633927af919300bb67be6f6c4",
      "patch": "@@ -17,6 +17,7 @@\n import java.lang.reflect.Field;\n import java.lang.reflect.InvocationTargetException;\n import java.lang.reflect.Method;\n+import java.lang.reflect.Modifier;\n import java.lang.reflect.ParameterizedType;\n import java.lang.reflect.Type;\n import java.util.ArrayList;\n@@ -104,6 +105,9 @@ private <T> T _convertFromJSONObject(JSONObject jsonObject, Class<T> type)\n     Field[] fields = type.getFields();\n     for (int i = 0; i < fields.length; ++i) {\n       Field field = fields[i];\n+      if (Modifier.isStatic(field.getModifiers())) {\n+        continue;\n+      }\n       Object value = jsonObject.opt(field.getName());\n       Object setValue = getValueForField(field, value);\n       try {\n@@ -240,21 +244,25 @@ private JSONObject _convertToJSONObject(Object fromValue)\n     JSONObject jsonObject = new JSONObject();\n     Field[] fields = fromValue.getClass().getFields();\n     for (int i = 0; i < fields.length; ++i) {\n-      JsonProperty property = fields[i].getAnnotation(JsonProperty.class);\n+      Field field = fields[i];\n+      if (Modifier.isStatic(field.getModifiers())) {\n+        continue;\n+      }\n+      JsonProperty property = field.getAnnotation(JsonProperty.class);\n       if (property != null) {\n         // AutoBox here ...\n-        Object value = fields[i].get(fromValue);\n-        Class clazz = fields[i].getType();\n+        Object value = field.get(fromValue);\n+        Class clazz = field.getType();\n         if (value != null) {\n           clazz = value.getClass();\n         }\n-        String name = fields[i].getName();\n+        String name = field.getName();\n         if (property.required() && value == null) {\n           value = JSONObject.NULL;\n         } else if (value == JSONObject.NULL) {\n           // Leave it as null in this case.\n         } else {\n-          value = getJsonValue(value, clazz, fields[i]);\n+          value = getJsonValue(value, clazz, field);\n         }\n         jsonObject.put(name, value);\n       }",
      "parent_sha": "86e9cd4dcb2a66b6e32d73a169572a248f1cbf83"
    }
  },
  {
    "oid": "d0afaad82235b5b5121dee1c08f0badf8033e5f8",
    "message": "Place nullable after private.",
    "date": "2017-07-28T00:37:51Z",
    "url": "https://github.com/facebook/stetho/commit/d0afaad82235b5b5121dee1c08f0badf8033e5f8",
    "details": {
      "sha": "0fedae4fad20d3df7980867512b3688718a70ce7",
      "filename": "stetho-okhttp3/src/main/java/com/facebook/stetho/okhttp3/StethoInterceptor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/facebook/stetho/blob/d0afaad82235b5b5121dee1c08f0badf8033e5f8/stetho-okhttp3%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fokhttp3%2FStethoInterceptor.java",
      "raw_url": "https://github.com/facebook/stetho/raw/d0afaad82235b5b5121dee1c08f0badf8033e5f8/stetho-okhttp3%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fokhttp3%2FStethoInterceptor.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho-okhttp3%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fokhttp3%2FStethoInterceptor.java?ref=d0afaad82235b5b5121dee1c08f0badf8033e5f8",
      "patch": "@@ -182,7 +182,7 @@ private static class OkHttpInspectorResponse implements NetworkEventReporter.Ins\n     private final String mRequestId;\n     private final Request mRequest;\n     private final Response mResponse;\n-    @Nullable private final Connection mConnection;\n+    private @Nullable final Connection mConnection;\n \n     public OkHttpInspectorResponse(\n         String requestId,",
      "parent_sha": "68709f14486b26dfc0259fcaa44d199de2ed6000"
    }
  },
  {
    "oid": "fac3cb30846f9111ad396a77df234a98514bb9db",
    "message": "Fix crashing",
    "date": "2018-09-24T17:33:56Z",
    "url": "https://github.com/facebook/stetho/commit/fac3cb30846f9111ad396a77df234a98514bb9db",
    "details": {
      "sha": "98f18fe1e316ddfe46f32551646a5fe0879af903",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/elements/android/ViewHighlightOverlays.java",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/facebook/stetho/blob/fac3cb30846f9111ad396a77df234a98514bb9db/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FViewHighlightOverlays.java",
      "raw_url": "https://github.com/facebook/stetho/raw/fac3cb30846f9111ad396a77df234a98514bb9db/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FViewHighlightOverlays.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FViewHighlightOverlays.java?ref=fac3cb30846f9111ad396a77df234a98514bb9db",
      "patch": "@@ -138,7 +138,12 @@ public void draw(Canvas canvas) {\n         Rect newRect = canvas.getClipBounds();\n         // Make the Canvas Rect bigger according to the View margins.\n         newRect.inset(-(mMargins.right + mMargins.left), -(mMargins.top + mMargins.bottom));\n-        canvas.clipRect(newRect, Region.Op.REPLACE);\n+\n+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.O) {\n+          canvas.clipRect(newRect, Region.Op.REPLACE);\n+        } else {\n+          canvas.clipOutRect(newRect);\n+        }\n         super.draw(canvas);\n       }\n     }",
      "parent_sha": "e111f63e4b708028e29457df9c4eda55068ae8d8"
    }
  },
  {
    "oid": "e1a4964ee974db6df11a5a8b66870e6f4fb82020",
    "message": "Sort CSS properties by cssName",
    "date": "2015-10-07T05:33:18Z",
    "url": "https://github.com/facebook/stetho/commit/e1a4964ee974db6df11a5a8b66870e6f4fb82020",
    "details": {
      "sha": "213881f69cfe45e9447c2d5fde960258aaeae4b7",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/elements/android/ViewDescriptor.java",
      "status": "modified",
      "additions": 10,
      "deletions": 2,
      "changes": 12,
      "blob_url": "https://github.com/facebook/stetho/blob/e1a4964ee974db6df11a5a8b66870e6f4fb82020/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FViewDescriptor.java",
      "raw_url": "https://github.com/facebook/stetho/raw/e1a4964ee974db6df11a5a8b66870e6f4fb82020/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FViewDescriptor.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FViewDescriptor.java?ref=e1a4964ee974db6df11a5a8b66870e6f4fb82020",
      "patch": "@@ -27,8 +27,11 @@\n import java.lang.reflect.Method;\n import java.util.ArrayList;\n import java.util.Collections;\n+import java.util.Comparator;\n import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n+import java.util.TreeSet;\n import java.util.regex.Pattern;\n \n final class ViewDescriptor extends AbstractChainedDescriptor<View> implements HighlightableDescriptor {\n@@ -63,7 +66,12 @@ private List<ViewCSSProperty> getViewProperties() {\n     if (mViewProperties == null) {\n       synchronized (this) {\n         if (mViewProperties == null) {\n-          List<ViewCSSProperty> props = new ArrayList<>();\n+          Set<ViewCSSProperty> props = new TreeSet<>(new Comparator<ViewCSSProperty>() {\n+            @Override\n+            public int compare(ViewCSSProperty lhs, ViewCSSProperty rhs) {\n+              return lhs.getCSSName().compareTo(rhs.getCSSName());\n+            }\n+          });\n \n           for (final Method method : View.class.getDeclaredMethods()) {\n             ViewDebug.ExportedProperty annotation =\n@@ -91,7 +99,7 @@ private List<ViewCSSProperty> getViewProperties() {\n             }\n           }\n \n-          mViewProperties = Collections.unmodifiableList(props);\n+          mViewProperties = Collections.unmodifiableList(new ArrayList<>(props));\n         }\n       }\n     }",
      "parent_sha": "2428d52ce29ddaf78e8007803d8218968cc74ce6"
    }
  },
  {
    "oid": "204b2c4f3da4d1f9984659648b96451591c4f53b",
    "message": "Fix importClass and importPackage not finding external classes\n\nFor external packages, the package name needs to be prefixed with `Packages.` per https://developer.mozilla.org/en-US/docs/Mozilla/Projects/Rhino/Scripting_Java#External_Packages_and_Classes",
    "date": "2016-07-05T12:54:36Z",
    "url": "https://github.com/facebook/stetho/commit/204b2c4f3da4d1f9984659648b96451591c4f53b",
    "details": {
      "sha": "d982748f956d71ab5b1b1d30e8a67b7f23ab8558",
      "filename": "stetho-js-rhino/src/main/java/com/facebook/stetho/rhino/JsRuntimeReplFactoryBuilder.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/facebook/stetho/blob/204b2c4f3da4d1f9984659648b96451591c4f53b/stetho-js-rhino%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Frhino%2FJsRuntimeReplFactoryBuilder.java",
      "raw_url": "https://github.com/facebook/stetho/raw/204b2c4f3da4d1f9984659648b96451591c4f53b/stetho-js-rhino%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Frhino%2FJsRuntimeReplFactoryBuilder.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho-js-rhino%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Frhino%2FJsRuntimeReplFactoryBuilder.java?ref=204b2c4f3da4d1f9984659648b96451591c4f53b",
      "patch": "@@ -189,7 +189,7 @@ private void importClasses(@NonNull Context jsContext, @NonNull ScriptableObject\n     for (Class<?> aClass : mClasses) {\n       String className = aClass.getName();\n       try {\n-        String expression = String.format(\"importClass(%s)\", className);\n+        String expression = String.format(\"importClass(Packages.%s)\", className);\n         jsContext.evaluateString(scope, expression, SOURCE_NAME, 1, null);\n       } catch (Exception e) {\n         throw new StethoJsException(e, \"Failed to import class: %s\", className);\n@@ -201,7 +201,7 @@ private void importPackages(@NonNull Context jsContext, @NonNull ScriptableObjec\n     // Import the packages that the caller requested\n     for (String packageName : mPackages) {\n       try {\n-        String expression = String.format(\"importPackage(%s)\", packageName);\n+        String expression = String.format(\"importPackage(Packages.%s)\", packageName);\n         jsContext.evaluateString(scope, expression, SOURCE_NAME, 1, null);\n       } catch (Exception e) {\n         throw new StethoJsException(e, \"Failed to import package: %s\", packageName);",
      "parent_sha": "2807d4248c6fa06cdd3626b6afb9bfc42ba50d55"
    }
  },
  {
    "oid": "4603abe0edfc22d2eecbbd3a86fafe1acdba6595",
    "message": "Support PRAGMA statements explicitly\n\nPRAGMA requires query/rawQuery to work and yields an error when we were\nusing execSQL anyway.  This simple change makes it possible to use\nPRAGMA to yield results.\n\nCloses #214",
    "date": "2015-07-10T14:46:42Z",
    "url": "https://github.com/facebook/stetho/commit/4603abe0edfc22d2eecbbd3a86fafe1acdba6595",
    "details": {
      "sha": "2a3f57cd3378352eea9f15683b9116f0629cb8a3",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/database/DatabasePeerManager.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/facebook/stetho/blob/4603abe0edfc22d2eecbbd3a86fafe1acdba6595/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fdatabase%2FDatabasePeerManager.java",
      "raw_url": "https://github.com/facebook/stetho/raw/4603abe0edfc22d2eecbbd3a86fafe1acdba6595/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fdatabase%2FDatabasePeerManager.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fdatabase%2FDatabasePeerManager.java?ref=4603abe0edfc22d2eecbbd3a86fafe1acdba6595",
      "patch": "@@ -147,7 +147,8 @@ public <T> T executeSQL(String databaseName, String query, ExecuteResultHandler<\n         return executeUpdateDelete(database, query, handler);\n       } else if (firstWord.equalsIgnoreCase(\"INSERT\")) {\n         return executeInsert(database, query, handler);\n-      } else if (firstWord.equalsIgnoreCase(\"SELECT\")) {\n+      } else if (firstWord.equalsIgnoreCase(\"SELECT\") ||\n+          firstWord.equalsIgnoreCase(\"PRAGMA\")) {\n         return executeSelect(database, query, handler);\n       } else {\n         return executeRawQuery(database, query, handler);\n@@ -202,6 +203,7 @@ private <T> T executeRawQuery(\n     database.execSQL(query);\n     return handler.handleRawQuery();\n   }\n+\n   private SQLiteDatabase openDatabase(String databaseName) throws SQLiteException {\n     Util.throwIfNull(databaseName);\n     File databaseFile = mContext.getDatabasePath(databaseName);",
      "parent_sha": "bffc898df85162e67ecb6c2f1104099f60cec048"
    }
  },
  {
    "oid": "24d0d3e25d8c72eee3dc373b6915368c68c649b8",
    "message": "Fix for duplicates in Element tree",
    "date": "2016-01-22T01:33:51Z",
    "url": "https://github.com/facebook/stetho/commit/24d0d3e25d8c72eee3dc373b6915368c68c649b8",
    "details": {
      "sha": "3b1e6b0995adebb865ec7ba13bf946584525d7c5",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/protocol/module/DOM.java",
      "status": "modified",
      "additions": 13,
      "deletions": 5,
      "changes": 18,
      "blob_url": "https://github.com/facebook/stetho/blob/24d0d3e25d8c72eee3dc373b6915368c68c649b8/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FDOM.java",
      "raw_url": "https://github.com/facebook/stetho/raw/24d0d3e25d8c72eee3dc373b6915368c68c649b8/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FDOM.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FDOM.java?ref=24d0d3e25d8c72eee3dc373b6915368c68c649b8",
      "patch": "@@ -32,6 +32,8 @@\n import com.facebook.stetho.json.annotation.JsonProperty;\n import org.json.JSONObject;\n \n+import javax.annotation.Nullable;\n+\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashMap;\n@@ -79,7 +81,7 @@ public JsonRpcResult getDocument(JsonRpcPeer peer, JSONObject params) {\n       @Override\n       public Node call() {\n         Object element = mDocument.getRootElement();\n-        return createNodeForElement(element, mDocument.getDocumentView());\n+        return createNodeForElement(element, mDocument.getDocumentView(), null);\n       }\n     });\n \n@@ -253,7 +255,14 @@ public void discardSearchResults(JsonRpcPeer peer, JSONObject params) {\n     }\n   }\n \n-  private Node createNodeForElement(Object element, DocumentView view) {\n+  private Node createNodeForElement(\n+      Object element,\n+      DocumentView view,\n+      @Nullable Accumulator<Object> processedElements) {\n+    if (processedElements != null) {\n+      processedElements.store(element);\n+    }\n+\n     NodeDescriptor descriptor = mDocument.getNodeDescriptor(element);\n \n     Node node = new DOM.Node();\n@@ -277,7 +286,7 @@ private Node createNodeForElement(Object element, DocumentView view) {\n \n     for (int i = 0, N = elementInfo.children.size(); i < N; ++i) {\n       final Object childElement = elementInfo.children.get(i);\n-      Node childNode = createNodeForElement(childElement, view);\n+      Node childNode = createNodeForElement(childElement, view, processedElements);\n       childrenNodes.add(childNode);\n     }\n \n@@ -374,9 +383,8 @@ public void onChildNodeInserted(\n \n       insertedEvent.parentNodeId = parentNodeId;\n       insertedEvent.previousNodeId = previousNodeId;\n-      insertedEvent.node = createNodeForElement(element, view);\n+      insertedEvent.node = createNodeForElement(element, view, insertedElements);\n \n-      insertedElements.store(element);\n       mPeerManager.sendNotificationToPeers(\"DOM.childNodeInserted\", insertedEvent);\n \n       releaseChildNodeInsertedEvent(insertedEvent);",
      "parent_sha": "a13eb9230686c24ee763611fbc3952bd2fdc6777"
    }
  },
  {
    "oid": "be1034323432be78604794fad388632ccef06b11",
    "message": "capture the result of trimming whitespace",
    "date": "2015-05-04T22:45:33Z",
    "url": "https://github.com/facebook/stetho/commit/be1034323432be78604794fad388632ccef06b11",
    "details": {
      "sha": "113add2c0b1891eb7c1455a483a0fc2ac59fda1a",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/database/DatabasePeerManager.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/facebook/stetho/blob/be1034323432be78604794fad388632ccef06b11/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fdatabase%2FDatabasePeerManager.java",
      "raw_url": "https://github.com/facebook/stetho/raw/be1034323432be78604794fad388632ccef06b11/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fdatabase%2FDatabasePeerManager.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fdatabase%2FDatabasePeerManager.java?ref=be1034323432be78604794fad388632ccef06b11",
      "patch": "@@ -159,7 +159,7 @@ public <T> T executeSQL(String databaseName, String query, ExecuteResultHandler<\n   }\n \n   private static String getFirstWord(String s) {\n-    s.trim();\n+    s = s.trim();\n     int firstSpace = s.indexOf(' ');\n     return firstSpace >= 0 ? s.substring(0, firstSpace) : s;\n   }",
      "parent_sha": "b3976a2d90443ca50881c70885d202b08f94865e"
    }
  },
  {
    "oid": "aab66fba563bae475744db9cb177434630023460",
    "message": "Restore support for default classes and packages",
    "date": "2016-07-26T11:57:51Z",
    "url": "https://github.com/facebook/stetho/commit/aab66fba563bae475744db9cb177434630023460",
    "details": {
      "sha": "235e04b64cc0f656fdee18ea38962e4d56538eee",
      "filename": "stetho-js-rhino/src/main/java/com/facebook/stetho/rhino/JsRuntimeReplFactoryBuilder.java",
      "status": "modified",
      "additions": 18,
      "deletions": 4,
      "changes": 22,
      "blob_url": "https://github.com/facebook/stetho/blob/aab66fba563bae475744db9cb177434630023460/stetho-js-rhino%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Frhino%2FJsRuntimeReplFactoryBuilder.java",
      "raw_url": "https://github.com/facebook/stetho/raw/aab66fba563bae475744db9cb177434630023460/stetho-js-rhino%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Frhino%2FJsRuntimeReplFactoryBuilder.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho-js-rhino%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Frhino%2FJsRuntimeReplFactoryBuilder.java?ref=aab66fba563bae475744db9cb177434630023460",
      "patch": "@@ -189,10 +189,17 @@ private void importClasses(@NonNull Context jsContext, @NonNull ScriptableObject\n     for (Class<?> aClass : mClasses) {\n       String className = aClass.getName();\n       try {\n-        String expression = String.format(\"importClass(Packages.%s)\", className);\n+        // import from default classes\n+        String expression = String.format(\"importClass(%s)\", className);\n         jsContext.evaluateString(scope, expression, SOURCE_NAME, 1, null);\n       } catch (Exception e) {\n-        throw new StethoJsException(e, \"Failed to import class: %s\", className);\n+        try {\n+          // import from application classes\n+          String expression = String.format(\"importClass(Packages.%s)\", className);\n+          jsContext.evaluateString(scope, expression, SOURCE_NAME, 1, null);\n+        } catch (Exception e1) {\n+          throw new StethoJsException(e1, \"Failed to import class: %s\", className);\n+        }\n       }\n     }\n   }\n@@ -201,10 +208,17 @@ private void importPackages(@NonNull Context jsContext, @NonNull ScriptableObjec\n     // Import the packages that the caller requested\n     for (String packageName : mPackages) {\n       try {\n-        String expression = String.format(\"importPackage(Packages.%s)\", packageName);\n+        // import from default packages\n+        String expression = String.format(\"importPackage(%s)\", packageName);\n         jsContext.evaluateString(scope, expression, SOURCE_NAME, 1, null);\n       } catch (Exception e) {\n-        throw new StethoJsException(e, \"Failed to import package: %s\", packageName);\n+        try {\n+          // import from application packages\n+          String expression = String.format(\"importPackage(Packages.%s)\", packageName);\n+          jsContext.evaluateString(scope, expression, SOURCE_NAME, 1, null);\n+        } catch (Exception e1) {\n+          throw new StethoJsException(e, \"Failed to import package: %s\", packageName);\n+        }\n       }\n     }\n   }",
      "parent_sha": "204b2c4f3da4d1f9984659648b96451591c4f53b"
    }
  },
  {
    "oid": "327621fd75efaa2555bd145456452d0d9c97e4ca",
    "message": "Use empty rect if bounds are null, avoiding NPE",
    "date": "2017-02-22T08:50:46Z",
    "url": "https://github.com/facebook/stetho/commit/327621fd75efaa2555bd145456452d0d9c97e4ca",
    "details": {
      "sha": "24e399cd5abcaf0e16d72de0076f1e2eee6b84ba",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/elements/android/ViewHighlighter.java",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/facebook/stetho/blob/327621fd75efaa2555bd145456452d0d9c97e4ca/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FViewHighlighter.java",
      "raw_url": "https://github.com/facebook/stetho/raw/327621fd75efaa2555bd145456452d0d9c97e4ca/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FViewHighlighter.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FViewHighlighter.java?ref=327621fd75efaa2555bd145456452d0d9c97e4ca",
      "patch": "@@ -62,6 +62,7 @@ private static final class OverlayHighlighter extends ViewHighlighter {\n     // Only assigned on the UI thread\n     private View mHighlightedView;\n     private final Rect mHighlightedBounds = new Rect();\n+    private final Rect mEmptyRect = new Rect();\n \n     private AtomicReference<View> mViewToHighlight = new AtomicReference<View>();\n     private AtomicReference<Rect> mBoundsToHighlight = new AtomicReference<Rect>();\n@@ -98,7 +99,10 @@ private void setHighlightedViewImpl(@Nullable View view, @Nullable Rect bounds,\n \n     private void highlightViewOnUiThread() {\n       final View viewToHighlight = mViewToHighlight.getAndSet(null);\n-      final Rect boundsToHighlight = mBoundsToHighlight.getAndSet(null);\n+      Rect boundsToHighlight = mBoundsToHighlight.getAndSet(null);\n+      if (boundsToHighlight == null) {\n+        boundsToHighlight = mEmptyRect;\n+      }\n \n       if (viewToHighlight == mHighlightedView && mHighlightedBounds.equals(boundsToHighlight)) {\n         return;",
      "parent_sha": "300c5f63eb24e069ae90a418abed38817d7f4a03"
    }
  },
  {
    "oid": "0b4ddfafb88ed718296141e20cb6d6c919d65112",
    "message": "Fix typo for DOM.attributeModified",
    "date": "2017-02-15T19:07:57Z",
    "url": "https://github.com/facebook/stetho/commit/0b4ddfafb88ed718296141e20cb6d6c919d65112",
    "details": {
      "sha": "b1b57aaed22340f7210d7a0f5b9d59b28e0385bb",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/protocol/module/DOM.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/facebook/stetho/blob/0b4ddfafb88ed718296141e20cb6d6c919d65112/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FDOM.java",
      "raw_url": "https://github.com/facebook/stetho/raw/0b4ddfafb88ed718296141e20cb6d6c919d65112/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FDOM.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FDOM.java?ref=0b4ddfafb88ed718296141e20cb6d6c919d65112",
      "patch": "@@ -337,7 +337,7 @@ public void onAttributeModified(Object element, String name, String value) {\n       message.nodeId = mDocument.getNodeIdForElement(element);\n       message.name = name;\n       message.value = value;\n-      mPeerManager.sendNotificationToPeers(\"DOM.onAttributeModified\", message);\n+      mPeerManager.sendNotificationToPeers(\"DOM.attributeModified\", message);\n     }\n \n     public void onAttributeRemoved(Object element, String name) {",
      "parent_sha": "d15f8bf93ffce9d82020d569bfbd37f41d4439f8"
    }
  },
  {
    "oid": "96d87792bd6b361c03ebf6cf33916e5eacb11eba",
    "message": "When opening a database the DatabaseFileProvider is checked first then we fallback to the context.getDatabasePath() call.",
    "date": "2016-03-29T19:09:08Z",
    "url": "https://github.com/facebook/stetho/commit/96d87792bd6b361c03ebf6cf33916e5eacb11eba",
    "details": {
      "sha": "0b18ff37d0f0cdf95c8f164e8b381dfb236392a2",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/database/SqliteDatabaseDriver.java",
      "status": "modified",
      "additions": 11,
      "deletions": 1,
      "changes": 12,
      "blob_url": "https://github.com/facebook/stetho/blob/96d87792bd6b361c03ebf6cf33916e5eacb11eba/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fdatabase%2FSqliteDatabaseDriver.java",
      "raw_url": "https://github.com/facebook/stetho/raw/96d87792bd6b361c03ebf6cf33916e5eacb11eba/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fdatabase%2FSqliteDatabaseDriver.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fdatabase%2FSqliteDatabaseDriver.java?ref=96d87792bd6b361c03ebf6cf33916e5eacb11eba",
      "patch": "@@ -201,12 +201,22 @@ private <T> T executeRawQuery(\n \n   private SQLiteDatabase openDatabase(String databaseName) throws SQLiteException {\n     Util.throwIfNull(databaseName);\n-    File databaseFile = mContext.getDatabasePath(databaseName);\n+    File databaseFile = findDatabaseFile(databaseName);\n \n     // Execpted to throw if it cannot open the file (for example, if it doesn't exist).\n     return SQLiteDatabase.openDatabase(databaseFile.getAbsolutePath(),\n         null /* cursorFactory */,\n         SQLiteDatabase.OPEN_READWRITE);\n   }\n \n+  private File findDatabaseFile(String databaseName) {\n+    for (File providedDatabaseFile : mDatabaseFilesProvider.getDatabaseFiles()) {\n+      if (providedDatabaseFile.getName().equals(databaseName)) {\n+        return providedDatabaseFile;\n+      }\n+    }\n+\n+    return mContext.getDatabasePath(databaseName);\n+  }\n+\n }",
      "parent_sha": "a2dd2db31e8034793e98b6ecf56e1e9f4b6d1582"
    }
  },
  {
    "oid": "b02daa5d75ac0339914a05f007c9b91932b7c81e",
    "message": "Work around a subtle race condition in Database.getDatabaseTableNames\n\nThe protocol asks for a list of databases first then allows the user to\nexpand that at any later time to a list of tables.  The database may\nhave been removed however and there is seemingly no protocol support for\ncommunicating this removal.  We have no choice but to yield a JSON-RPC\nerror.\n\nCloses #154",
    "date": "2015-04-11T22:42:57Z",
    "url": "https://github.com/facebook/stetho/commit/b02daa5d75ac0339914a05f007c9b91932b7c81e",
    "details": {
      "sha": "aa395a1e410059ea751303ea0a4139a74ac1dba9",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/protocol/module/Database.java",
      "status": "modified",
      "additions": 15,
      "deletions": 4,
      "changes": 19,
      "blob_url": "https://github.com/facebook/stetho/blob/b02daa5d75ac0339914a05f007c9b91932b7c81e/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FDatabase.java",
      "raw_url": "https://github.com/facebook/stetho/raw/b02daa5d75ac0339914a05f007c9b91932b7c81e/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FDatabase.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FDatabase.java?ref=b02daa5d75ac0339914a05f007c9b91932b7c81e",
      "patch": "@@ -25,8 +25,10 @@\n \n import com.facebook.stetho.common.Util;\n import com.facebook.stetho.inspector.database.DatabasePeerManager;\n+import com.facebook.stetho.inspector.jsonrpc.JsonRpcException;\n import com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;\n import com.facebook.stetho.inspector.jsonrpc.JsonRpcResult;\n+import com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError;\n import com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain;\n import com.facebook.stetho.inspector.protocol.ChromeDevtoolsMethod;\n import com.facebook.stetho.json.ObjectMapper;\n@@ -79,12 +81,21 @@ public void disable(JsonRpcPeer peer, JSONObject params) {\n   }\n \n   @ChromeDevtoolsMethod\n-  public JsonRpcResult getDatabaseTableNames(JsonRpcPeer peer, JSONObject params) {\n+  public JsonRpcResult getDatabaseTableNames(JsonRpcPeer peer, JSONObject params)\n+      throws JsonRpcException {\n     GetDatabaseTableNamesRequest request = mObjectMapper.convertValue(params,\n         GetDatabaseTableNamesRequest.class);\n-    GetDatabaseTableNamesResponse response = new GetDatabaseTableNamesResponse();\n-    response.tableNames = mDatabasePeerManager.getDatabaseTableNames(request.databaseId);\n-    return response;\n+    try {\n+      GetDatabaseTableNamesResponse response = new GetDatabaseTableNamesResponse();\n+      response.tableNames = mDatabasePeerManager.getDatabaseTableNames(request.databaseId);\n+      return response;\n+    } catch (SQLiteException e) {\n+      throw new JsonRpcException(\n+          new JsonRpcError(\n+              JsonRpcError.ErrorCode.INVALID_REQUEST,\n+              e.toString(),\n+              null /* data */));\n+    }\n   }\n \n   @ChromeDevtoolsMethod",
      "parent_sha": "f408e5bef4f0df5f8079f89fd032ed8551265a99"
    }
  },
  {
    "oid": "c590ace92e120f22bff840d7a55383306da15ac2",
    "message": "Simplify `dumpapp crash throw` handling\n\nSpecifically, create the Throwable on the dumper thread, then punt to a\nseparate thread only to throw.",
    "date": "2015-03-29T05:55:05Z",
    "url": "https://github.com/facebook/stetho/commit/c590ace92e120f22bff840d7a55383306da15ac2",
    "details": {
      "sha": "7dab23f9e95777bc8daa4fa1169096778f697d95",
      "filename": "stetho/src/main/java/com/facebook/stetho/dumpapp/plugins/CrashDumperPlugin.java",
      "status": "modified",
      "additions": 42,
      "deletions": 40,
      "changes": 82,
      "blob_url": "https://github.com/facebook/stetho/blob/c590ace92e120f22bff840d7a55383306da15ac2/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fdumpapp%2Fplugins%2FCrashDumperPlugin.java",
      "raw_url": "https://github.com/facebook/stetho/raw/c590ace92e120f22bff840d7a55383306da15ac2/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fdumpapp%2Fplugins%2FCrashDumperPlugin.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fdumpapp%2Fplugins%2FCrashDumperPlugin.java?ref=c590ace92e120f22bff840d7a55383306da15ac2",
      "patch": "@@ -113,61 +113,63 @@ private void doKill(DumperContext dumpContext, Iterator<String> argsIter) throws\n   }\n \n   private void doUncaughtException(Iterator<String> argsIter) throws DumpException {\n-    String throwableClass = ArgsHelper.nextOptionalArg(argsIter, OPTION_THROW_DEFAULT);\n+    String throwableClassString = ArgsHelper.nextOptionalArg(argsIter, OPTION_THROW_DEFAULT);\n+\n+\n     try {\n-      Thread crashThread = new Thread(\n-          new ThrowRunnable(\n-              (Class<? extends Throwable>)Class.forName(throwableClass)));\n+      Class<? extends Throwable> throwableClass =\n+          (Class<? extends Throwable>)Class.forName(throwableClassString);\n+      Throwable t;\n+      Constructor<? extends Throwable> ctorWithMessage =\n+          tryGetDeclaredConstructor(throwableClass, String.class);\n+      if (ctorWithMessage != null) {\n+        t = ctorWithMessage.newInstance(\"Uncaught exception triggered by Stetho\");\n+      } else {\n+        Constructor<? extends Throwable> ctorParameterless =\n+            throwableClass.getDeclaredConstructor();\n+        t = ctorParameterless.newInstance();\n+      }\n+\n+      Thread crashThread = new Thread(new ThrowRunnable(t));\n       crashThread.start();\n \n       CountDownLatch impossibleLatch = new CountDownLatch(1);\n       Util.awaitUninterruptibly(impossibleLatch);\n-    } catch (NoSuchMethodException | ClassNotFoundException | ClassCastException e) {\n+    } catch (\n+        ClassNotFoundException |\n+        ClassCastException |\n+        NoSuchMethodException |\n+        IllegalAccessException |\n+        InstantiationException e) {\n       throw new DumpException(\"Invalid supplied Throwable class: \" + e);\n+    } catch (InvocationTargetException e) {\n+      // This means that the method invoked actually threw, independent of reflection.  Best\n+      // reflect that as a normal unchecked exception in dumpapp output.\n+      ExceptionUtil.propagate(e.getCause());\n     }\n   }\n \n-  private static class ThrowRunnable implements Runnable {\n-    @Nullable\n-    private final Constructor<? extends Throwable> mDetailMessageConstructor;\n-\n-    private final Constructor<? extends Throwable> mParameterlessConstructor;\n-\n-    public ThrowRunnable(Class<? extends Throwable> throwableClass) throws NoSuchMethodException {\n-      mDetailMessageConstructor = tryGetDeclaredConstructor(throwableClass, String.class);\n-      mParameterlessConstructor = throwableClass.getDeclaredConstructor();\n+  @Nullable\n+  private static <T> Constructor<? extends T> tryGetDeclaredConstructor(\n+      Class<T> clazz,\n+      Class<?>... parameterTypes) {\n+    try {\n+      return clazz.getDeclaredConstructor(parameterTypes);\n+    } catch (NoSuchMethodException e) {\n+      return null;\n     }\n+  }\n \n-    @Nullable\n-    private static <T> Constructor<? extends T> tryGetDeclaredConstructor(\n-        Class<T> clazz,\n-        Class<?>... parameterTypes) {\n-      try {\n-        return clazz.getDeclaredConstructor(parameterTypes);\n-      } catch (NoSuchMethodException e) {\n-        return null;\n-      }\n+  private static class ThrowRunnable implements Runnable {\n+    private final Throwable mThrowable;\n+\n+    public ThrowRunnable(Throwable t) {\n+      mThrowable = t;\n     }\n \n     @Override\n     public void run() {\n-      try {\n-        Throwable t = createThrowable();\n-        ExceptionUtil.<Error>sneakyThrow(t);\n-      } catch (InstantiationException | IllegalAccessException | InvocationTargetException e) {\n-        // Hehe, ok whatever :)\n-        ExceptionUtil.<Error>sneakyThrow(e);\n-      }\n-    }\n-\n-    private Throwable createThrowable()\n-        throws IllegalAccessException, InvocationTargetException, InstantiationException {\n-      if (mDetailMessageConstructor != null) {\n-        return mDetailMessageConstructor.newInstance(\n-            \"Uncaught exception triggered by Stetho\");\n-      } else {\n-        return mParameterlessConstructor.newInstance();\n-      }\n+      ExceptionUtil.<Error>sneakyThrow(mThrowable);\n     }\n   }\n }",
      "parent_sha": "7a42454a6ad00c6082ae996c03cd9c1c3a46415f"
    }
  },
  {
    "oid": "e525f63c2effa57f45de8cb31f97e9cdfc5d5eeb",
    "message": "Fix crash when rapidly adding/removing SharedPreferences keys\n\nThis is a simple race condition that was overlooked during development\nand manifests itself in practice via a third party analytics library\n(though it is not known which one exactly).  The issue is clearly\ndemonstrable outside the context of this library though.\n\nCloses #151",
    "date": "2015-04-11T22:32:23Z",
    "url": "https://github.com/facebook/stetho/commit/e525f63c2effa57f45de8cb31f97e9cdfc5d5eeb",
    "details": {
      "sha": "4b0fd21c29ba38be5463cc4d81e9b16bdeadf648",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/domstorage/DOMStoragePeerManager.java",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/facebook/stetho/blob/e525f63c2effa57f45de8cb31f97e9cdfc5d5eeb/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fdomstorage%2FDOMStoragePeerManager.java",
      "raw_url": "https://github.com/facebook/stetho/raw/e525f63c2effa57f45de8cb31f97e9cdfc5d5eeb/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fdomstorage%2FDOMStoragePeerManager.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fdomstorage%2FDOMStoragePeerManager.java?ref=e525f63c2effa57f45de8cb31f97e9cdfc5d5eeb",
      "patch": "@@ -11,6 +11,7 @@\n \n import android.content.Context;\n import android.content.SharedPreferences;\n+import com.facebook.stetho.common.LogUtil;\n import com.facebook.stetho.inspector.console.CLog;\n import com.facebook.stetho.inspector.helper.ChromePeerManager;\n import com.facebook.stetho.inspector.helper.PeerRegistrationListener;\n@@ -142,7 +143,9 @@ public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, Strin\n             SharedPreferencesHelper.valueToString(newValue));\n         mCopy.put(key, newValue);\n       } else {\n-        throw new RuntimeException(\"Prefs change detected for unknown key=\" + key);\n+        // This can happen due to the async nature of the onSharedPreferenceChanged callback.  A\n+        // rapid put/remove as two separate commits on a background thread would cause this.\n+        LogUtil.i(\"Detected rapid put/remove of %s\", key);\n       }\n     }\n   }",
      "parent_sha": "f408e5bef4f0df5f8079f89fd032ed8551265a99"
    }
  },
  {
    "oid": "6458b5c5687baa0d106d8890b6b448292170c578",
    "message": "Remove private class (CallFunctionOnResponse) from signature of the public method\n(otherwise class can't be extended and method overridden (Only @ChromeDevtoolsMethod methods are detected and method needed to be overridden because look-up is done only in declared methods)",
    "date": "2018-08-15T14:51:25Z",
    "url": "https://github.com/facebook/stetho/commit/6458b5c5687baa0d106d8890b6b448292170c578",
    "details": {
      "sha": "321099e723284bf4f9dbcae6f5c0fd174ce7176b",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/protocol/module/Runtime.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/facebook/stetho/blob/6458b5c5687baa0d106d8890b6b448292170c578/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FRuntime.java",
      "raw_url": "https://github.com/facebook/stetho/raw/6458b5c5687baa0d106d8890b6b448292170c578/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FRuntime.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FRuntime.java?ref=6458b5c5687baa0d106d8890b6b448292170c578",
      "patch": "@@ -117,7 +117,7 @@ public void releaseObjectGroup(JsonRpcPeer peer, JSONObject params) {\n   }\n \n   @ChromeDevtoolsMethod\n-  public CallFunctionOnResponse callFunctionOn(JsonRpcPeer peer, JSONObject params)\n+  public JsonRpcResult callFunctionOn(JsonRpcPeer peer, JSONObject params)\n       throws JsonRpcException {\n     CallFunctionOnRequest args = mObjectMapper.convertValue(params, CallFunctionOnRequest.class);\n ",
      "parent_sha": "22ea395daa11e204288ef90ef5b531ce3b5b1b75"
    }
  },
  {
    "oid": "d0f805aaa8fe16e2561d6a4d3a5c7415a2eda90d",
    "message": "Fix extranneous boxing and also correctly check return value of binarySearch() (#470)",
    "date": "2016-12-13T19:24:03Z",
    "url": "https://github.com/facebook/stetho/commit/d0f805aaa8fe16e2561d6a4d3a5c7415a2eda90d",
    "details": {
      "sha": "eeab61f476bbc30e2c40cf3364e29890c6306659",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/elements/Document.java",
      "status": "modified",
      "additions": 5,
      "deletions": 8,
      "changes": 13,
      "blob_url": "https://github.com/facebook/stetho/blob/d0f805aaa8fe16e2561d6a4d3a5c7415a2eda90d/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2FDocument.java",
      "raw_url": "https://github.com/facebook/stetho/raw/d0f805aaa8fe16e2561d6a4d3a5c7415a2eda90d/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2FDocument.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2FDocument.java?ref=d0f805aaa8fe16e2561d6a4d3a5c7415a2eda90d",
      "patch": "@@ -13,6 +13,7 @@\n import com.facebook.stetho.common.Accumulator;\n import com.facebook.stetho.common.ArrayListAccumulator;\n import com.facebook.stetho.common.LogUtil;\n+import com.facebook.stetho.common.Util;\n import com.facebook.stetho.inspector.helper.ObjectIdMapper;\n import com.facebook.stetho.inspector.helper.ThreadBoundProxy;\n \n@@ -344,11 +345,7 @@ private void applyDocumentUpdate(final ShadowDocument.Update docUpdate) {\n     // TODO: it'd be nice if we could delegate our calls into mPeerManager.sendNotificationToPeers()\n     //       to a background thread so as to offload the UI from JSON serialization stuff\n \n-    // Applying the ShadowDocument.Update is done in five stages. You may notice that the code is\n-    // calling mObjectIdMapper.getIdForObject(), which returns Integer and whose return is annotated\n-    // with @Nullable, and storing it in an int without doing a null check. This is intentional: if\n-    // the element being requested is not in mObjectIdMapper, then that indicates a pretty serious\n-    // bug in the implementation of this algorithm. It's a cheap runtime assert, in other words.\n+    // Applying the ShadowDocument.Update is done in five stages:\n \n     // Stage 1: any elements that have been disconnected from the tree, and any elements in those\n     // sub-trees which have not been reconnected to the tree, should be garbage collected. For now\n@@ -369,7 +366,7 @@ private void applyDocumentUpdate(final ShadowDocument.Update docUpdate) {\n     docUpdate.getGarbageElements(new Accumulator<Object>() {\n       @Override\n       public void store(Object element) {\n-        int nodeId = mObjectIdMapper.getIdForObject(element);\n+        Integer nodeId = Util.throwIfNull(mObjectIdMapper.getIdForObject(element));\n         ElementInfo newElementInfo = docUpdate.getElementInfo(element);\n \n         // Only raise onChildNodeRemoved for the root of a disconnected tree. The remainder of the\n@@ -393,10 +390,10 @@ public void store(Object element) {\n     docUpdate.getChangedElements(new Accumulator<Object>() {\n       @Override\n       public void store(Object element) {\n-        int nodeId = mObjectIdMapper.getIdForObject(element);\n+        Integer nodeId = Util.throwIfNull(mObjectIdMapper.getIdForObject(element));\n \n         // Skip garbage elements\n-        if (Collections.binarySearch(garbageElementIds, nodeId) > 0) {\n+        if (Collections.binarySearch(garbageElementIds, nodeId) >= 0) {\n           return;\n         }\n ",
      "parent_sha": "37e615ed293ab49073f57b37e51fdcc6334cf919"
    }
  },
  {
    "oid": "9fb7de6fe83826ea8134eb245253cd484a489c2a",
    "message": "Fixes #602 - allow to change console banner",
    "date": "2018-07-06T06:31:38Z",
    "url": "https://github.com/facebook/stetho/commit/9fb7de6fe83826ea8134eb245253cd484a489c2a",
    "details": {
      "sha": "4fdbf2b2050930848f61a9a1338aae0720a5f957",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/protocol/module/Page.java",
      "status": "modified",
      "additions": 22,
      "deletions": 13,
      "changes": 35,
      "blob_url": "https://github.com/facebook/stetho/blob/9fb7de6fe83826ea8134eb245253cd484a489c2a/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FPage.java",
      "raw_url": "https://github.com/facebook/stetho/raw/9fb7de6fe83826ea8134eb245253cd484a489c2a/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FPage.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FPage.java?ref=9fb7de6fe83826ea8134eb245253cd484a489c2a",
      "patch": "@@ -29,13 +29,32 @@\n import java.util.List;\n \n public class Page implements ChromeDevtoolsDomain {\n+  public static final String BANNER = // Note: not using Android resources so we can maintain .jar distribution for now.\n+  \"_____/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_______________________________________________/\\\\\\\\\\\\_______________________\\n\" +\n+  \" ___/\\\\\\\\\\\\/////////\\\\\\\\\\\\____________________________________________\\\\/\\\\\\\\\\\\_______________________\\n\" +\n+  \"  __\\\\//\\\\\\\\\\\\______\\\\///______/\\\\\\\\\\\\_________________________/\\\\\\\\\\\\______\\\\/\\\\\\\\\\\\_______________________\\n\" +\n+  \"   ___\\\\////\\\\\\\\\\\\__________/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_____/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\___/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_\\\\/\\\\\\\\\\\\_____________/\\\\\\\\\\\\\\\\\\\\____\\n\" +\n+  \"    ______\\\\////\\\\\\\\\\\\______\\\\////\\\\\\\\\\\\////____/\\\\\\\\\\\\/////\\\\\\\\\\\\_\\\\////\\\\\\\\\\\\////__\\\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\____/\\\\\\\\\\\\///\\\\\\\\\\\\__\\n\" +\n+  \"     _________\\\\////\\\\\\\\\\\\______\\\\/\\\\\\\\\\\\_______/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_____\\\\/\\\\\\\\\\\\______\\\\/\\\\\\\\\\\\/////\\\\\\\\\\\\__/\\\\\\\\\\\\__\\\\//\\\\\\\\\\\\_\\n\" +\n+  \"      __/\\\\\\\\\\\\______\\\\//\\\\\\\\\\\\_____\\\\/\\\\\\\\\\\\_/\\\\\\\\__\\\\//\\\\\\\\///////______\\\\/\\\\\\\\\\\\_/\\\\\\\\__\\\\/\\\\\\\\\\\\___\\\\/\\\\\\\\\\\\_\\\\//\\\\\\\\\\\\__/\\\\\\\\\\\\__\\n\" +\n+  \"       _\\\\///\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\/______\\\\//\\\\\\\\\\\\\\\\\\\\____\\\\//\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\____\\\\//\\\\\\\\\\\\\\\\\\\\___\\\\/\\\\\\\\\\\\___\\\\/\\\\\\\\\\\\__\\\\///\\\\\\\\\\\\\\\\\\\\/___\\n\" +\n+  \"        ___\\\\///////////_________\\\\/////______\\\\//////////______\\\\/////____\\\\///____\\\\///_____\\\\/////_____\\n\" +\n+  \"         Welcome to Stetho\";\n+\n+\n   private final Context mContext;\n+  private final String mMessage;\n   private final ObjectMapper mObjectMapper = new ObjectMapper();\n   @Nullable\n   private ScreencastDispatcher mScreencastDispatcher;\n \n   public Page(Context context) {\n+    this(context, BANNER);\n+  }\n+\n+  public Page(Context context, String message) {\n     mContext = context;\n+    mMessage = message;\n   }\n \n   @ChromeDevtoolsMethod\n@@ -61,19 +80,7 @@ private void sendWelcomeMessage(JsonRpcPeer peer) {\n     Console.ConsoleMessage message = new Console.ConsoleMessage();\n     message.source = Console.MessageSource.JAVASCRIPT;\n     message.level = Console.MessageLevel.LOG;\n-    message.text =\n-// Note: not using Android resources so we can maintain .jar distribution for now.\n-\"_____/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_______________________________________________/\\\\\\\\\\\\_______________________\\n\" +\n-\" ___/\\\\\\\\\\\\/////////\\\\\\\\\\\\____________________________________________\\\\/\\\\\\\\\\\\_______________________\\n\" +\n-\"  __\\\\//\\\\\\\\\\\\______\\\\///______/\\\\\\\\\\\\_________________________/\\\\\\\\\\\\______\\\\/\\\\\\\\\\\\_______________________\\n\" +\n-\"   ___\\\\////\\\\\\\\\\\\__________/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_____/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\___/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_\\\\/\\\\\\\\\\\\_____________/\\\\\\\\\\\\\\\\\\\\____\\n\" +\n-\"    ______\\\\////\\\\\\\\\\\\______\\\\////\\\\\\\\\\\\////____/\\\\\\\\\\\\/////\\\\\\\\\\\\_\\\\////\\\\\\\\\\\\////__\\\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\____/\\\\\\\\\\\\///\\\\\\\\\\\\__\\n\" +\n-\"     _________\\\\////\\\\\\\\\\\\______\\\\/\\\\\\\\\\\\_______/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_____\\\\/\\\\\\\\\\\\______\\\\/\\\\\\\\\\\\/////\\\\\\\\\\\\__/\\\\\\\\\\\\__\\\\//\\\\\\\\\\\\_\\n\" +\n-\"      __/\\\\\\\\\\\\______\\\\//\\\\\\\\\\\\_____\\\\/\\\\\\\\\\\\_/\\\\\\\\__\\\\//\\\\\\\\///////______\\\\/\\\\\\\\\\\\_/\\\\\\\\__\\\\/\\\\\\\\\\\\___\\\\/\\\\\\\\\\\\_\\\\//\\\\\\\\\\\\__/\\\\\\\\\\\\__\\n\" +\n-\"       _\\\\///\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\/______\\\\//\\\\\\\\\\\\\\\\\\\\____\\\\//\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\____\\\\//\\\\\\\\\\\\\\\\\\\\___\\\\/\\\\\\\\\\\\___\\\\/\\\\\\\\\\\\__\\\\///\\\\\\\\\\\\\\\\\\\\/___\\n\" +\n-\"        ___\\\\///////////_________\\\\/////______\\\\//////////______\\\\/////____\\\\///____\\\\///_____\\\\/////_____\\n\" +\n-\"         Welcome to Stetho\\n\" +\n-\"          Attached to \" + ProcessUtil.getProcessName() + \"\\n\";\n+    message.text = mMessage + \"\\n\" + \"          Attached to \" + ProcessUtil.getProcessName() + \"\\n\";\n     Console.MessageAddedRequest messageAddedRequest = new Console.MessageAddedRequest();\n     messageAddedRequest.message = message;\n     peer.invokeMethod(\"Console.messageAdded\", messageAddedRequest, null /* callback */);\n@@ -302,4 +309,6 @@ public static class StartScreencastRequest {\n     @JsonProperty\n     public int maxHeight;\n   }\n+\n+\n }",
      "parent_sha": "22ea395daa11e204288ef90ef5b531ce3b5b1b75"
    }
  },
  {
    "oid": "8f071b571d97d151ecfacb718b415eb021f5b54e",
    "message": "Fix logical error in null check.",
    "date": "2017-03-03T20:16:46Z",
    "url": "https://github.com/facebook/stetho/commit/8f071b571d97d151ecfacb718b415eb021f5b54e",
    "details": {
      "sha": "b21d275b098c42cd2dc80e8e6ec7efbac66f1955",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/protocol/module/CSS.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/facebook/stetho/blob/8f071b571d97d151ecfacb718b415eb021f5b54e/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FCSS.java",
      "raw_url": "https://github.com/facebook/stetho/raw/8f071b571d97d151ecfacb718b415eb021f5b54e/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FCSS.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FCSS.java?ref=8f071b571d97d151ecfacb718b415eb021f5b54e",
      "patch": "@@ -201,7 +201,7 @@ public void run() {\n           return;\n         }\n \n-        if (key == null) {\n+        if (key != null) {\n           mDocument.setElementStyle(elementForNodeId, ruleName, key, value);\n         }\n ",
      "parent_sha": "bfa7162d0efe183d1353216aa21239fdae1bd9d0"
    }
  },
  {
    "oid": "92c4916062e20a1868acdcc451c59c8727857e68",
    "message": "Fix NPE in ObjectMapper\n\nFix NPE when an IllegalArgumentException is thrown from `field.set`.\nfixes #447",
    "date": "2016-11-15T23:37:09Z",
    "url": "https://github.com/facebook/stetho/commit/92c4916062e20a1868acdcc451c59c8727857e68",
    "details": {
      "sha": "172d3e6693060d86b16ce5daf5422fbfce859079",
      "filename": "stetho/src/main/java/com/facebook/stetho/json/ObjectMapper.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/facebook/stetho/blob/92c4916062e20a1868acdcc451c59c8727857e68/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fjson%2FObjectMapper.java",
      "raw_url": "https://github.com/facebook/stetho/raw/92c4916062e20a1868acdcc451c59c8727857e68/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fjson%2FObjectMapper.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fjson%2FObjectMapper.java?ref=92c4916062e20a1868acdcc451c59c8727857e68",
      "patch": "@@ -111,7 +111,9 @@ private <T> T _convertFromJSONObject(JSONObject jsonObject, Class<T> type)\n       } catch (IllegalArgumentException e) {\n         throw new IllegalArgumentException(\n             \"Class: \" + type.getSimpleName() + \" \" +\n-            \"Field: \" + field.getName() + \" type \" + setValue.getClass().getName(),\n+            \"Field: \" + field.getName() + \" type \" + (setValue != null ?\n+                setValue.getClass().getName()\n+                : \"null\"),\n             e);\n       }\n     }",
      "parent_sha": "36aa5bd356d9cf5893b9424b06a83dda9ec5e44f"
    }
  },
  {
    "oid": "7a40f4f134ccf268a83644f4ddceddf995096403",
    "message": "Make sure only unfocusable children's descriptions are being co-opted by parents",
    "date": "2016-10-20T20:28:49Z",
    "url": "https://github.com/facebook/stetho/commit/7a40f4f134ccf268a83644f4ddceddf995096403",
    "details": {
      "sha": "dc9143843c9f03f2e9a6c5f650c088e5a480060c",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/elements/android/AccessibilityNodeInfoWrapper.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/facebook/stetho/blob/7a40f4f134ccf268a83644f4ddceddf995096403/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FAccessibilityNodeInfoWrapper.java",
      "raw_url": "https://github.com/facebook/stetho/raw/7a40f4f134ccf268a83644f4ddceddf995096403/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FAccessibilityNodeInfoWrapper.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FAccessibilityNodeInfoWrapper.java?ref=7a40f4f134ccf268a83644f4ddceddf995096403",
      "patch": "@@ -255,7 +255,8 @@ public static CharSequence getDescription(AccessibilityNodeInfoCompat node, View\n         ViewCompat.onInitializeAccessibilityNodeInfo(child, childNodeInfo);\n \n         CharSequence childNodeDescription = null;\n-        if (AccessibilityUtil.isSpeakingNode(childNodeInfo, child)) {\n+        if (AccessibilityUtil.isSpeakingNode(childNodeInfo, child) &&\n+            !AccessibilityUtil.isAccessibilityFocusable(childNodeInfo, child)) {\n           childNodeDescription = getDescription(childNodeInfo, child);\n         }\n ",
      "parent_sha": "36aa5bd356d9cf5893b9424b06a83dda9ec5e44f"
    }
  },
  {
    "oid": "e2d9a92f5cef617d191b7cc40df37cae755ad6bb",
    "message": "create a new constructor that takes a custom DatabaseConnectionProvider",
    "date": "2016-03-23T21:50:06Z",
    "url": "https://github.com/facebook/stetho/commit/e2d9a92f5cef617d191b7cc40df37cae755ad6bb",
    "details": {
      "sha": "b8b80efb4ee643026b64da4836be0ecc204258ec",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/database/SqliteDatabaseDriver.java",
      "status": "modified",
      "additions": 15,
      "deletions": 1,
      "changes": 16,
      "blob_url": "https://github.com/facebook/stetho/blob/e2d9a92f5cef617d191b7cc40df37cae755ad6bb/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fdatabase%2FSqliteDatabaseDriver.java",
      "raw_url": "https://github.com/facebook/stetho/raw/e2d9a92f5cef617d191b7cc40df37cae755ad6bb/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fdatabase%2FSqliteDatabaseDriver.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fdatabase%2FSqliteDatabaseDriver.java?ref=e2d9a92f5cef617d191b7cc40df37cae755ad6bb",
      "patch": "@@ -58,11 +58,25 @@ public SqliteDatabaseDriver(Context context) {\n   /**\n    * @param context the context\n    * @param databaseFilesProvider a database file name provider\n+   * @deprecated use the other {@linkplain SqliteDatabaseDriver#SqliteDatabaseDriver(Context,\n+   * DatabaseFilesProvider, DatabaseConnectionProvider) constructor} and pass in the {@linkplain\n+   * DefaultDatabaseConnectionProvider default provider} .\n    */\n+  @Deprecated\n   public SqliteDatabaseDriver(Context context, DatabaseFilesProvider databaseFilesProvider) {\n+    this(context, databaseFilesProvider, new DefaultDatabaseConnectionProvider(context));\n+  }\n+\n+  /**\n+   * @param context the context\n+   * @param databaseFilesProvider a database file name provider\n+   * @param databaseConnectionProvider a database connection provider\n+   */\n+  public SqliteDatabaseDriver(Context context, DatabaseFilesProvider databaseFilesProvider,\n+                              DatabaseConnectionProvider databaseConnectionProvider) {\n     super(context);\n     mDatabaseFilesProvider = databaseFilesProvider;\n-    mDatabaseConnectionProvider = new DefaultDatabaseConnectionProvider(context);\n+    mDatabaseConnectionProvider = databaseConnectionProvider;\n   }\n \n   @Override",
      "parent_sha": "21aaf8e2660bbca6aaea8d0ca95a78779fdc70ac"
    }
  },
  {
    "oid": "8b678f373f3a6350bf0d928f3129c050ed7a0d79",
    "message": "spelling errors",
    "date": "2018-10-12T02:30:21Z",
    "url": "https://github.com/facebook/stetho/commit/8b678f373f3a6350bf0d928f3129c050ed7a0d79",
    "details": {
      "sha": "d7a19364622b035c8e9f3ac5f58f389ed264783e",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/elements/android/window/WindowRootViewCompactV19Impl.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/facebook/stetho/blob/8b678f373f3a6350bf0d928f3129c050ed7a0d79/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2Fwindow%2FWindowRootViewCompactV19Impl.java",
      "raw_url": "https://github.com/facebook/stetho/raw/8b678f373f3a6350bf0d928f3129c050ed7a0d79/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2Fwindow%2FWindowRootViewCompactV19Impl.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2Fwindow%2FWindowRootViewCompactV19Impl.java?ref=8b678f373f3a6350bf0d928f3129c050ed7a0d79",
      "patch": "@@ -18,10 +18,10 @@ class WindowRootViewCompactV19Impl extends WindowRootViewCompat {\n       Class wmClz = Class.forName(\"android.view.WindowManagerGlobal\");\n       Method getInstanceMethod = wmClz.getDeclaredMethod(\"getInstance\");\n       Object managerGlobal = getInstanceMethod.invoke(wmClz);\n-      Field mViewsFiled = wmClz.getDeclaredField(\"mViews\");\n-      mViewsFiled.setAccessible(true);\n-      mRootViews = (List<View>) mViewsFiled.get(managerGlobal);\n-      mViewsFiled.setAccessible(false);\n+      Field mViewsField = wmClz.getDeclaredField(\"mViews\");\n+      mViewsField.setAccessible(true);\n+      mRootViews = (List<View>) mViewsField.get(managerGlobal);\n+      mViewsField.setAccessible(false);\n     } catch (ClassNotFoundException e) {\n       throw new RuntimeException(e);\n     } catch (NoSuchMethodException e) {",
      "parent_sha": "18c2ff47e62661e88ce83bddae095651d1ada7bc"
    }
  },
  {
    "oid": "28727b1d4371cb5799e5b8252c258ea5cac7430b",
    "message": "Use a Buffer to read entire request body.",
    "date": "2015-02-18T20:27:44Z",
    "url": "https://github.com/facebook/stetho/commit/28727b1d4371cb5799e5b8252c258ea5cac7430b",
    "details": {
      "sha": "85ef5638af3e1d538fdd02cfe92e1fbcbf5253a4",
      "filename": "stetho-okhttp/src/main/java/com/facebook/stetho/okhttp/StethoInterceptor.java",
      "status": "modified",
      "additions": 5,
      "deletions": 8,
      "changes": 13,
      "blob_url": "https://github.com/facebook/stetho/blob/28727b1d4371cb5799e5b8252c258ea5cac7430b/stetho-okhttp%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fokhttp%2FStethoInterceptor.java",
      "raw_url": "https://github.com/facebook/stetho/raw/28727b1d4371cb5799e5b8252c258ea5cac7430b/stetho-okhttp%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fokhttp%2FStethoInterceptor.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho-okhttp%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fokhttp%2FStethoInterceptor.java?ref=28727b1d4371cb5799e5b8252c258ea5cac7430b",
      "patch": "@@ -4,7 +4,7 @@\n import com.facebook.stetho.inspector.network.NetworkEventReporter;\n import com.facebook.stetho.inspector.network.NetworkEventReporterImpl;\n import com.squareup.okhttp.*;\n-import okio.BufferedSink;\n+import okio.Buffer;\n import okio.BufferedSource;\n import okio.Okio;\n \n@@ -141,15 +141,12 @@ public byte[] body() throws IOException {\n \n     private byte[] generateBody() throws IOException {\n       RequestBody body = mRequest.body();\n-      if (body != null) {\n-        ByteArrayOutputStream out = new ByteArrayOutputStream();\n-        BufferedSink sink = Okio.buffer(Okio.sink(out));\n-        body.writeTo(sink);\n-        sink.flush();\n-        return out.toByteArray();\n-      } else {\n+      if (body == null) {\n         return null;\n       }\n+      Buffer buffer = new Buffer();\n+      body.writeTo(buffer);\n+      return buffer.readByteArray();\n     }\n \n     @Override",
      "parent_sha": "2ab72a12a2d88db2c1dfd5649854ef6b60b50d63"
    }
  },
  {
    "oid": "24f7fff40eae2ea6c576da7d621a37f79b2a7cac",
    "message": "Handle any runtime exception from a database driver\n\nSince database drivers are such wide ranging third party code it\ncannot be assumed that they exclusively throw SQLiteException but\ninstead could throw any manner of unknown RuntimeException and that\nshould not tear down the connection with chrome://inspect but, since\nwe are indeed a debug tool, should report sufficient debugging\ninformation to diagnose the issue.",
    "date": "2017-03-11T19:12:44Z",
    "url": "https://github.com/facebook/stetho/commit/24f7fff40eae2ea6c576da7d621a37f79b2a7cac",
    "details": {
      "sha": "1fffd44323ec0c31d0dddfd4cc4351772be9d825",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/protocol/module/Database.java",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/facebook/stetho/blob/24f7fff40eae2ea6c576da7d621a37f79b2a7cac/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FDatabase.java",
      "raw_url": "https://github.com/facebook/stetho/raw/24f7fff40eae2ea6c576da7d621a37f79b2a7cac/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FDatabase.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FDatabase.java?ref=24f7fff40eae2ea6c576da7d621a37f79b2a7cac",
      "patch": "@@ -23,6 +23,7 @@\n import android.database.sqlite.SQLiteException;\n import android.os.Build;\n \n+import com.facebook.stetho.common.LogUtil;\n import com.facebook.stetho.common.Util;\n import com.facebook.stetho.inspector.helper.ChromePeerManager;\n import com.facebook.stetho.inspector.helper.PeerRegistrationListener;\n@@ -163,7 +164,9 @@ public ExecuteSQLResponse handleUpdateDelete(int count) throws SQLiteException {\n           return response;\n         }\n       });\n-    } catch (SQLiteException e) {\n+    } catch (RuntimeException e) {\n+      LogUtil.e(e, \"Exception executing: %s\", request.query);\n+\n       Error error = new Error();\n       error.code = 0;\n       error.message = e.getMessage();",
      "parent_sha": "5c480f50c6dcc0e51a0c684b363183e66e2e62b2"
    }
  },
  {
    "oid": "c45f23663ead0043daaccb179ecd4adb88cd7c75",
    "message": "fix TextViewDescriptor npe",
    "date": "2017-02-05T11:08:39Z",
    "url": "https://github.com/facebook/stetho/commit/c45f23663ead0043daaccb179ecd4adb88cd7c75",
    "details": {
      "sha": "f0e3c0d49734115a004119a03364923ebdaf10a3",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/elements/android/TextViewDescriptor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/facebook/stetho/blob/c45f23663ead0043daaccb179ecd4adb88cd7c75/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FTextViewDescriptor.java",
      "raw_url": "https://github.com/facebook/stetho/raw/c45f23663ead0043daaccb179ecd4adb88cd7c75/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FTextViewDescriptor.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FTextViewDescriptor.java?ref=c45f23663ead0043daaccb179ecd4adb88cd7c75",
      "patch": "@@ -42,7 +42,7 @@ protected void onUnhook(TextView element) {\n   @Override\n   protected void onGetAttributes(TextView element, AttributeAccumulator attributes) {\n     CharSequence text = element.getText();\n-    if (text.length() != 0) {\n+    if (text != null && text.length() != 0) {\n       attributes.store(TEXT_ATTRIBUTE_NAME, text.toString());\n     }\n   }",
      "parent_sha": "bd3c6d3253ff99665d3cb4807fe85690285e3cd8"
    }
  },
  {
    "oid": "a08e5308befc82197eb28f3259233c9487a7185a",
    "message": "Fix ObjectMapperTest.testNestedProperty unit test\n\nThis fails on Java 8 because the order of serialization changed.",
    "date": "2016-01-22T21:35:19Z",
    "url": "https://github.com/facebook/stetho/commit/a08e5308befc82197eb28f3259233c9487a7185a",
    "details": {
      "sha": "255e7809835b758168285d2c1aab8ff8b3e36e34",
      "filename": "stetho/src/test/java/com/facebook/stetho/json/ObjectMapperTest.java",
      "status": "modified",
      "additions": 15,
      "deletions": 5,
      "changes": 20,
      "blob_url": "https://github.com/facebook/stetho/blob/a08e5308befc82197eb28f3259233c9487a7185a/stetho%2Fsrc%2Ftest%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fjson%2FObjectMapperTest.java",
      "raw_url": "https://github.com/facebook/stetho/raw/a08e5308befc82197eb28f3259233c9487a7185a/stetho%2Fsrc%2Ftest%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fjson%2FObjectMapperTest.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Ftest%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fjson%2FObjectMapperTest.java?ref=a08e5308befc82197eb28f3259233c9487a7185a",
      "patch": "@@ -29,6 +29,7 @@\n import java.util.Objects;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n \n /**\n  * Tests for {@link ObjectMapper}\n@@ -69,14 +70,23 @@ public void testNestedProperty() throws JSONException {\n     njp.child1.testString = \"testString\";\n     njp.child2.i = 4;\n \n-    String expected = \"{\\\"child1\\\":{\\\"testString\\\":\\\"testString\\\"},\\\"child2\\\":{\\\"i\\\":4}}\";\n-    NestedJsonProperty parsed = mObjectMapper.convertValue(\n-        new JSONObject(expected),\n+    // The ordering of serialization changes depending on Java 7 vs Java 8.\n+    String expected7 = \"{\\\"child1\\\":{\\\"testString\\\":\\\"testString\\\"},\\\"child2\\\":{\\\"i\\\":4}}\";\n+    String expected8 = \"{\\\"child2\\\":{\\\"i\\\":4},\\\"child1\\\":{\\\"testString\\\":\\\"testString\\\"}}\";\n+\n+    NestedJsonProperty parsed7 = mObjectMapper.convertValue(\n+        new JSONObject(expected7),\n+        NestedJsonProperty.class);\n+    assertEquals(njp, parsed7);\n+\n+    NestedJsonProperty parsed8 = mObjectMapper.convertValue(\n+        new JSONObject(expected8),\n         NestedJsonProperty.class);\n-    assertEquals(njp, parsed);\n+    assertEquals(njp, parsed8);\n \n     JSONObject jsonObject = mObjectMapper.convertValue(njp, JSONObject.class);\n-    assertEquals(expected, jsonObject.toString());\n+\n+    assertTrue(expected7.equals(jsonObject.toString()) || expected8.equals(jsonObject.toString()));\n   }\n \n   @Test",
      "parent_sha": "24d0d3e25d8c72eee3dc373b6915368c68c649b8"
    }
  },
  {
    "oid": "b75bffa5d90236dd1fed71ff95bcb54ee98f4791",
    "message": "Fix NPE crash in ResourcesUtil.getIdString()\n\nCloses #131",
    "date": "2015-04-03T18:30:28Z",
    "url": "https://github.com/facebook/stetho/commit/b75bffa5d90236dd1fed71ff95bcb54ee98f4791",
    "details": {
      "sha": "0ee749d5d1780c358f81d710e0efeff81146a701",
      "filename": "stetho/src/main/java/com/facebook/stetho/common/android/ResourcesUtil.java",
      "status": "modified",
      "additions": 13,
      "deletions": 3,
      "changes": 16,
      "blob_url": "https://github.com/facebook/stetho/blob/b75bffa5d90236dd1fed71ff95bcb54ee98f4791/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fcommon%2Fandroid%2FResourcesUtil.java",
      "raw_url": "https://github.com/facebook/stetho/raw/b75bffa5d90236dd1fed71ff95bcb54ee98f4791/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fcommon%2Fandroid%2FResourcesUtil.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fcommon%2Fandroid%2FResourcesUtil.java?ref=b75bffa5d90236dd1fed71ff95bcb54ee98f4791",
      "patch": "@@ -13,23 +13,29 @@\n import com.facebook.stetho.common.LogUtil;\n \n import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n \n public class ResourcesUtil {\n   private ResourcesUtil() {\n   }\n \n   @Nonnull\n-  public static String getIdStringQuietly(Object idContext, Resources r, int resourceId) {\n+  public static String getIdStringQuietly(Object idContext, @Nullable Resources r, int resourceId) {\n     try {\n       return getIdString(r, resourceId);\n     } catch (Resources.NotFoundException e) {\n-      String idString = \"#\" + Integer.toHexString(resourceId);\n+      String idString = getFallbackIdString(resourceId);\n       LogUtil.w(\"Unknown identifier encountered on \" + idContext + \": \" + idString);\n       return idString;\n     }\n   }\n \n-  public static String getIdString(Resources r, int resourceId) throws Resources.NotFoundException {\n+  public static String getIdString(@Nullable Resources r, int resourceId)\n+      throws Resources.NotFoundException {\n+    if (r == null) {\n+      return getFallbackIdString(resourceId);\n+    }\n+\n     String prefix;\n     String prefixSeparator;\n     switch (getResourcePackageId(resourceId)) {\n@@ -59,6 +65,10 @@ public static String getIdString(Resources r, int resourceId) throws Resources.N\n     return sb.toString();\n   }\n \n+  private static String getFallbackIdString(int resourceId) {\n+    return \"#\" + Integer.toHexString(resourceId);\n+  }\n+\n   private static int getResourcePackageId(int id) {\n     return (id >>> 24) & 0xff;\n   }",
      "parent_sha": "e07380cf35bfb79adab11be62a714375dd5553df"
    }
  },
  {
    "oid": "4a577301958f83744cbe675820edb3e5084a78b7",
    "message": "Remove databaseConnections API from the inspector builder\n\nThis isn't necessary or appropriate as the functionality concretely\nrelates to SqliteDatabaseDriver and not generically to any other\ndatabase driver.  For this reason, it should be provided there alone.",
    "date": "2016-06-02T00:45:00Z",
    "url": "https://github.com/facebook/stetho/commit/4a577301958f83744cbe675820edb3e5084a78b7",
    "details": {
      "sha": "f68a29fe48649bb818d406581066dc989e2f93a5",
      "filename": "stetho/src/main/java/com/facebook/stetho/Stetho.java",
      "status": "modified",
      "additions": 14,
      "deletions": 14,
      "changes": 28,
      "blob_url": "https://github.com/facebook/stetho/blob/4a577301958f83744cbe675820edb3e5084a78b7/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2FStetho.java",
      "raw_url": "https://github.com/facebook/stetho/raw/4a577301958f83744cbe675820edb3e5084a78b7/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2FStetho.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2FStetho.java?ref=4a577301958f83744cbe675820edb3e5084a78b7",
      "patch": "@@ -239,7 +239,6 @@ public static final class DefaultInspectorModulesBuilder {\n     @Nullable private DocumentProviderFactory mDocumentProvider;\n     @Nullable private RuntimeReplFactory mRuntimeRepl;\n     @Nullable private DatabaseFilesProvider mDatabaseFilesProvider;\n-    @Nullable private DatabaseConnectionProvider mDatabaseConnectionProvider;\n     @Nullable private List<Database.DatabaseDriver> mDatabaseDrivers;\n \n     public DefaultInspectorModulesBuilder(Context context) {\n@@ -273,22 +272,25 @@ public DefaultInspectorModulesBuilder runtimeRepl(RuntimeReplFactory factory) {\n     /**\n      * Customize the location of database files that Stetho will propogate in the UI.  Android's\n      * {@link Context#getDatabasePath} method will be used by default if not overridden here.\n+     *\n+     * <p>This method is deprecated and instead it is recommended that you explicitly\n+     * configure the {@link SqliteDatabaseDriver} as with:</p>\n+     * <pre>\n+     *   provideDatabaseDriver(\n+     *     new SqliteDatabaseDriver(\n+     *       context,\n+     *       new MyDatabaseFilesProvider(...),\n+     *       new DefaultDatabaseConnectionProvider(...)))\n+     * </pre>\n+     *\n+     * @deprecated See example alternative above.\n      */\n+    @Deprecated\n     public DefaultInspectorModulesBuilder databaseFiles(DatabaseFilesProvider provider) {\n       mDatabaseFilesProvider = provider;\n       return this;\n     }\n \n-    /**\n-     * Customize the database connection that Stetho will use in the UI. Android's\n-     * {@link SQLiteDatabase#openDatabase(String, SQLiteDatabase.CursorFactory, int)} method will\n-     * be used by default.\n-     */\n-    public DefaultInspectorModulesBuilder databaseConnections(DatabaseConnectionProvider provider) {\n-      mDatabaseConnectionProvider = provider;\n-      return this;\n-    }\n-\n     /**\n      * Extend and provide additional database drivers. Currently two database drivers are supported\n      * in this lib: <br>\n@@ -376,9 +378,7 @@ public Iterable<ChromeDevtoolsDomain> finish() {\n                   mDatabaseFilesProvider != null ?\n                       mDatabaseFilesProvider :\n                       new DefaultDatabaseFilesProvider(mContext),\n-                  mDatabaseConnectionProvider != null ?\n-                      mDatabaseConnectionProvider :\n-                      new DefaultDatabaseConnectionProvider()));\n+                  new DefaultDatabaseConnectionProvider()));\n         }\n         provideIfDesired(database);\n       }",
      "parent_sha": "d2d7f5ef9377d33e98d8f61c20315fd0bd27ec39"
    }
  },
  {
    "oid": "d2a36bdc9c837544f8c9d61ab85509e1ebb09472",
    "message": "ignore meta-data for SQLite using WAL\n\nwhen enabling WAL for SQLite the files used for journaling change.\n\nSee: https://www.sqlite.org/wal.html",
    "date": "2015-04-21T21:20:43Z",
    "url": "https://github.com/facebook/stetho/commit/d2a36bdc9c837544f8c9d61ab85509e1ebb09472",
    "details": {
      "sha": "21bb0a125429a46b4e608612dd000cd75575775a",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/database/DatabasePeerManager.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/facebook/stetho/blob/d2a36bdc9c837544f8c9d61ab85509e1ebb09472/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fdatabase%2FDatabasePeerManager.java",
      "raw_url": "https://github.com/facebook/stetho/raw/d2a36bdc9c837544f8c9d61ab85509e1ebb09472/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fdatabase%2FDatabasePeerManager.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fdatabase%2FDatabasePeerManager.java?ref=d2a36bdc9c837544f8c9d61ab85509e1ebb09472",
      "patch": "@@ -38,7 +38,9 @@\n public class DatabasePeerManager extends ChromePeerManager {\n   private static final String[] UNINTERESTING_FILENAME_SUFFIXES = new String[]{\n       \"-journal\",\n-      \"-uid\"\n+      \"-shm\",\n+      \"-uid\",\n+      \"-wal\"\n   };\n \n   private final Context mContext;",
      "parent_sha": "8e1f0dc2f0436c1de6a6afcea1f89c1a14cb5300"
    }
  },
  {
    "oid": "a61af2ad145f95c1228609e9380b8449d5274efc",
    "message": "Fixes rss url; otherwise it gets 302 status code and shows a blank list.",
    "date": "2017-02-16T18:49:17Z",
    "url": "https://github.com/facebook/stetho/commit/a61af2ad145f95c1228609e9380b8449d5274efc",
    "details": {
      "sha": "819525488117f3751498b5499a1f0d94b41cd319",
      "filename": "stetho-sample/src/main/java/com/facebook/stetho/sample/APODRssFetcher.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/facebook/stetho/blob/a61af2ad145f95c1228609e9380b8449d5274efc/stetho-sample%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fsample%2FAPODRssFetcher.java",
      "raw_url": "https://github.com/facebook/stetho/raw/a61af2ad145f95c1228609e9380b8449d5274efc/stetho-sample%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fsample%2FAPODRssFetcher.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho-sample%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fsample%2FAPODRssFetcher.java?ref=a61af2ad145f95c1228609e9380b8449d5274efc",
      "patch": "@@ -31,7 +31,8 @@\n \n public class APODRssFetcher {\n   private static final String TAG = \"APODRssFetcher\";\n-  private static final String APOD_RSS_URL = \"http://apod.nasa.gov/apod.rss\";\n+  \n+  private static final String APOD_RSS_URL = \"https://apod.nasa.gov/apod.rss\";\n \n   private final ContentResolver mContentResolver;\n ",
      "parent_sha": "bd3c6d3253ff99665d3cb4807fe85690285e3cd8"
    }
  },
  {
    "oid": "10fe52e24340cbdb29fdaa65b21f507455f9a87a",
    "message": "Fix crash when stylesheet text is empty\n\nWhen deleting the value of a style property chrome sends back an empty string instead of a key with an empty value.",
    "date": "2017-03-30T16:13:38Z",
    "url": "https://github.com/facebook/stetho/commit/10fe52e24340cbdb29fdaa65b21f507455f9a87a",
    "details": {
      "sha": "31e9e427d18b05ee884a872ec6561b4a5f4fd2d9",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/protocol/module/CSS.java",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/facebook/stetho/blob/10fe52e24340cbdb29fdaa65b21f507455f9a87a/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FCSS.java",
      "raw_url": "https://github.com/facebook/stetho/raw/10fe52e24340cbdb29fdaa65b21f507455f9a87a/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FCSS.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fprotocol%2Fmodule%2FCSS.java?ref=10fe52e24340cbdb29fdaa65b21f507455f9a87a",
      "patch": "@@ -173,9 +173,7 @@ public SetPropertyTextResult setPropertyText(JsonRpcPeer peer, JSONObject params\n \n     final String value;\n     final String key;\n-    if (\"/* undefined */\".equals(request.text)) {\n-      // This gets sent when a key is disabled. Chrome does not send the key which was disabled\n-      // though so not much we can do here.\n+    if (request.text == null || !request.text.contains(\":\")) {\n       key = null;\n       value = null;\n     } else {",
      "parent_sha": "b92b0f768e28a92d1d215ad30f7b22d704a7bb61"
    }
  },
  {
    "oid": "1673668342d3c96ca81f6cdc8ff3e21480b56ae3",
    "message": "Fix for incoherent tree diffing\n\nWhen an element is reparented, we must transmit the removal event\nbefore the insertion event. Otherwise the removal event gets ignored\nbecause the parent doesn't match up.",
    "date": "2016-01-20T22:35:25Z",
    "url": "https://github.com/facebook/stetho/commit/1673668342d3c96ca81f6cdc8ff3e21480b56ae3",
    "details": {
      "sha": "1cd85fc3659cd7101d4c485fea2591f9ce294ecc",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/elements/Document.java",
      "status": "modified",
      "additions": 39,
      "deletions": 4,
      "changes": 43,
      "blob_url": "https://github.com/facebook/stetho/blob/1673668342d3c96ca81f6cdc8ff3e21480b56ae3/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2FDocument.java",
      "raw_url": "https://github.com/facebook/stetho/raw/1673668342d3c96ca81f6cdc8ff3e21480b56ae3/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2FDocument.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2FDocument.java?ref=1673668342d3c96ca81f6cdc8ff3e21480b56ae3",
      "patch": "@@ -365,7 +365,35 @@ public void store(Object element) {\n       }\n     });\n \n-    // Transmit other Document changes to our listener\n+    // Second, remove all elements that have been reparented. Otherwise we get into trouble if we\n+    // transmit an event to insert under the new parent before we've transmitted an event to remove\n+    // it from the old parent. The removal event is ignored because the parent doesn't match the\n+    // listener's expectations, so we get ghost elements that are stuck and can't be exorcised.\n+    docUpdate.getChangedElements(new Accumulator<Object>() {\n+      @Override\n+      public void store(Object element) {\n+        // If this returns false then it means the element was garbage and has already been removed\n+        if (!mObjectIdMapper.containsObject(element)) {\n+          return;\n+        }\n+\n+        final ElementInfo oldElementInfo = mShadowDocument.getElementInfo(element);\n+        if (oldElementInfo == null) {\n+          return;\n+        }\n+\n+        final ElementInfo newElementInfo = docUpdate.getElementInfo(element);\n+\n+        if (newElementInfo.parentElement != oldElementInfo.parentElement) {\n+          int parentNodeId = mObjectIdMapper.getIdForObject(oldElementInfo.parentElement);\n+          int nodeId = mObjectIdMapper.getIdForObject(element);\n+          mUpdateListeners.onChildNodeRemoved(parentNodeId, nodeId);\n+        }\n+      }\n+    });\n+\n+    // Third, transmit all other changes to our listener. This includes inserting reparented\n+    // elements that we removed in the 2nd stage.\n     docUpdate.getChangedElements(new Accumulator<Object>() {\n       private final HashSet<Object> listenerInsertedElements = new HashSet<>();\n \n@@ -383,7 +411,7 @@ public void store(Object element) {\n \n       @Override\n       public void store(Object element) {\n-        // If this returns false then it means the element was garbage, and has already been removed\n+        // If this returns false then it means the element was garbage and has already been removed\n         if (!mObjectIdMapper.containsObject(element)) {\n           return;\n         }\n@@ -395,8 +423,8 @@ public void store(Object element) {\n           return;\n         }\n \n-        final ElementInfo newElementInfo = docUpdate.getElementInfo(element);\n         final ElementInfo oldElementInfo = mShadowDocument.getElementInfo(element);\n+        final ElementInfo newElementInfo = docUpdate.getElementInfo(element);\n \n         final List<Object> oldChildren = (oldElementInfo != null)\n             ? oldElementInfo.children\n@@ -410,9 +438,16 @@ public void store(Object element) {\n         for (int i = 0, N = oldChildren.size(); i < N; ++i) {\n           final Object childElement = oldChildren.get(i);\n           if (mObjectIdMapper.containsObject(childElement)) {\n-            listenerChildren.add(childElement);\n+            final ElementInfo newChildElementInfo = docUpdate.getElementInfo(childElement);\n+            if (newChildElementInfo != null &&\n+                newChildElementInfo.parentElement != element) {\n+              // This element was reparented, so we already told our listener to remove it.\n+            } else {\n+              listenerChildren.add(childElement);\n+            }\n           }\n         }\n+\n         updateListenerChildren(listenerChildren, newChildren, insertedElements);\n         releaseChildEventingList(listenerChildren);\n       }",
      "parent_sha": "3bbf4cec52c863150ceeea854d65d335ff5f3d74"
    }
  },
  {
    "oid": "b247a0b3363075e22da25ade97409141da3280f5",
    "message": "Cache the result from ObjectMapper.getJsonValueMethod()\n\nCaching this results in significant performance wins for the Elements\ntab.\n\nI also experimented with a general reflection cache, e.g.\nClass<?>.getFields(), getEnumConstants(), etc. While that also seemed\nto improve things, I'm not completely confident without running a\nmicro-benchmark or a sampling profiler.",
    "date": "2016-02-02T00:40:07Z",
    "url": "https://github.com/facebook/stetho/commit/b247a0b3363075e22da25ade97409141da3280f5",
    "details": {
      "sha": "0fcd610bafc13468939afc01d3b16b9798ad5e64",
      "filename": "stetho/src/main/java/com/facebook/stetho/json/ObjectMapper.java",
      "status": "modified",
      "additions": 19,
      "deletions": 1,
      "changes": 20,
      "blob_url": "https://github.com/facebook/stetho/blob/b247a0b3363075e22da25ade97409141da3280f5/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fjson%2FObjectMapper.java",
      "raw_url": "https://github.com/facebook/stetho/raw/b247a0b3363075e22da25ade97409141da3280f5/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fjson%2FObjectMapper.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fjson%2FObjectMapper.java?ref=b247a0b3363075e22da25ade97409141da3280f5",
      "patch": "@@ -10,6 +10,7 @@\n package com.facebook.stetho.json;\n \n import javax.annotation.Nullable;\n+import javax.annotation.concurrent.GuardedBy;\n \n import java.lang.annotation.Annotation;\n import java.lang.reflect.Constructor;\n@@ -19,7 +20,9 @@\n import java.lang.reflect.ParameterizedType;\n import java.lang.reflect.Type;\n import java.util.ArrayList;\n+import java.util.IdentityHashMap;\n import java.util.List;\n+import java.util.Map;\n \n import com.facebook.stetho.common.ExceptionUtil;\n import com.facebook.stetho.json.annotation.JsonProperty;\n@@ -43,6 +46,9 @@\n  */\n public class ObjectMapper {\n \n+  @GuardedBy(\"mJsonValueMethodCache\")\n+  private final Map<Class<?>, Method> mJsonValueMethodCache = new IdentityHashMap<>();\n+\n   /**\n    * Support mapping between arbitrary classes and {@link JSONObject}.\n    * <note>\n@@ -305,7 +311,19 @@ private JSONArray convertListToJsonArray(Object value)\n    * @return the first method annotated with {@link JsonValue} or null if one does not exist.\n    */\n   @Nullable\n-  private static Method getJsonValueMethod(Class<?> clazz) {\n+  private Method getJsonValueMethod(Class<?> clazz) {\n+    synchronized (mJsonValueMethodCache) {\n+      Method method = mJsonValueMethodCache.get(clazz);\n+      if (method == null && !mJsonValueMethodCache.containsKey(clazz)) {\n+        method = getJsonValueMethodImpl(clazz);\n+        mJsonValueMethodCache.put(clazz, method);\n+      }\n+      return method;\n+    }\n+  }\n+\n+  @Nullable\n+  private static Method getJsonValueMethodImpl(Class<?> clazz) {\n     Method[] methods = clazz.getMethods();\n     for(int i = 0; i < methods.length; ++i) {\n       Annotation jsonValue = methods[i].getAnnotation(JsonValue.class);",
      "parent_sha": "a08e5308befc82197eb28f3259233c9487a7185a"
    }
  },
  {
    "oid": "8ecf88d39d4c1b1f98160bae6699fc21c0213afb",
    "message": "Fixed premature stream closing issue",
    "date": "2015-06-10T00:19:20Z",
    "url": "https://github.com/facebook/stetho/commit/8ecf88d39d4c1b1f98160bae6699fc21c0213afb",
    "details": {
      "sha": "77688fca072b541f0cf540e34ff66b8f79d8af1b",
      "filename": "stetho/src/main/java/com/facebook/stetho/dumpapp/StreamFramer.java",
      "status": "modified",
      "additions": 17,
      "deletions": 6,
      "changes": 23,
      "blob_url": "https://github.com/facebook/stetho/blob/8ecf88d39d4c1b1f98160bae6699fc21c0213afb/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fdumpapp%2FStreamFramer.java",
      "raw_url": "https://github.com/facebook/stetho/raw/8ecf88d39d4c1b1f98160bae6699fc21c0213afb/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fdumpapp%2FStreamFramer.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fdumpapp%2FStreamFramer.java?ref=8ecf88d39d4c1b1f98160bae6699fc21c0213afb",
      "patch": "@@ -91,23 +91,29 @@ private void writeIntFrame(byte type, int intParameter) throws IOException {\n     mMultiplexedOutputStream.writeInt(intParameter);\n   }\n \n-  private class FramingOutputStream extends FilterOutputStream {\n+  private class FramingOutputStream extends OutputStream {\n \n+    private final OutputStream mOut;\n     private final byte mPrefix;\n-\n-    FramingOutputStream(DataOutputStream innerStream, byte prefix) {\n-      super(innerStream);\n+    private boolean mIsClosed;\n+    \n+    FramingOutputStream(OutputStream innerStream, byte prefix) {\n+      mOut = innerStream;\n       mPrefix = prefix;\n+      mIsClosed = false;\n     }\n \n     @Override\n     public void write(byte[] buffer, int offset, int length) throws IOException {\n+      if(mIsClosed) {\n+        throw new IOException(\"Stream is closed\");\n+      }\n       if (length > 0) {\n         try {\n           synchronized (StreamFramer.this) {\n             writeIntFrame(mPrefix, length);\n-            mMultiplexedOutputStream.write(buffer, offset, length);\n-            mMultiplexedOutputStream.flush();\n+            mOut.write(buffer, offset, length);\n+            mOut.flush();\n           }\n         } catch (IOException e) {\n           // I/O error here can indicate the pipe is broken, so we need to prevent any\n@@ -127,5 +133,10 @@ public void write(int oneByte) throws IOException {\n     public void write(byte[] buffer) throws IOException {\n       write(buffer, 0, buffer.length);\n     }\n+\n+    @Override\n+    public void close() throws IOException{\n+      mIsClosed = true;\n+    }\n   }\n }",
      "parent_sha": "d39e459ca8e8b6aedfb07df5bb3d9aa5b361f852"
    }
  },
  {
    "oid": "8b129192fd0083a4e4d14fba913248f8d3554565",
    "message": "Fix issue that can hide slow network requests\n\nWebKit Inspector contains an apparent implementation bug whereby if the\nrequest does not provide a Page.ResourceType guess then it will hide it\nfrom the UI until Network.responseReceived is delivered with the actual\nPage.ResourceType is given.  This works fine when there is a small delay\nbetween requestWillBeSent and responseReceived, but if the delay widens\nsignificantly, the Inspector UI will discard the record and fail to show\nit no matter how progress is made after that point.\n\nThis can be demonstrated by adding significant timing delays in network\nevents (such as by using iptables to slow down or stop traffic entirely)\nor just adding delays in NetworkEventReporterImpl.",
    "date": "2015-02-10T18:21:01Z",
    "url": "https://github.com/facebook/stetho/commit/8b129192fd0083a4e4d14fba913248f8d3554565",
    "details": {
      "sha": "385c7ac2805b92cb80c03ab6ad0d58e70b1f0a04",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/network/NetworkEventReporterImpl.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/facebook/stetho/blob/8b129192fd0083a4e4d14fba913248f8d3554565/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fnetwork%2FNetworkEventReporterImpl.java",
      "raw_url": "https://github.com/facebook/stetho/raw/8b129192fd0083a4e4d14fba913248f8d3554565/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fnetwork%2FNetworkEventReporterImpl.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fnetwork%2FNetworkEventReporterImpl.java?ref=8b129192fd0083a4e4d14fba913248f8d3554565",
      "patch": "@@ -97,6 +97,7 @@ public void requestWillBeSent(InspectorRequest request) {\n       params.timestamp = stethoNow() / 1000.0;\n       params.initiator = initiatorJSON;\n       params.redirectResponse = null;\n+      params.type = Page.ResourceType.OTHER;\n       peerManager.sendNotificationToPeers(\"Network.requestWillBeSent\", params);\n     }\n   }\n@@ -146,7 +147,7 @@ public void responseHeadersReceived(InspectorResponse response) {\n       }\n       receivedParams.response = responseJSON;\n       peerManager.sendNotificationToPeers(\"Network.responseReceived\", receivedParams);\n-      }\n+    }\n   }\n \n   @Override",
      "parent_sha": "52596d11dbc916bdfde1af33296a52c529b79a1e"
    }
  },
  {
    "oid": "78a9b262d1f1f54fcc183902626762ce48cf6756",
    "message": "ChromeDevToolsServer.java - update link to debugger protocol",
    "date": "2015-02-19T02:38:25Z",
    "url": "https://github.com/facebook/stetho/commit/78a9b262d1f1f54fcc183902626762ce48cf6756",
    "details": {
      "sha": "5f8b9b3048c50eaed1a4a1c35c7da3cce046595e",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/ChromeDevtoolsServer.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/facebook/stetho/blob/78a9b262d1f1f54fcc183902626762ce48cf6756/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2FChromeDevtoolsServer.java",
      "raw_url": "https://github.com/facebook/stetho/raw/78a9b262d1f1f54fcc183902626762ce48cf6756/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2FChromeDevtoolsServer.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2FChromeDevtoolsServer.java?ref=78a9b262d1f1f54fcc183902626762ce48cf6756",
      "patch": "@@ -27,9 +27,9 @@\n import org.json.JSONObject;\n \n /**\n- * Implements a limited version of the WebKit Inspector WebSocket protocol (using JSON-RPC 2.0).\n- * The most up-to-date documentation can be found in the WebKit source code:\n- * <a href=\"https://github.com/WebKit/webkit/blob/master/Source/WebCore/inspector/protocol\">https://github.com/WebKit/webkit/blob/master/Source/WebCore/inspector/protocol</a>\n+ * Implements a limited version of the Chrome Debugger WebSocket protocol (using JSON-RPC 2.0).\n+ * The most up-to-date documentation can be found in the Blink source code:\n+ * <a href=\"https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/devtools/protocol.json&q=protocol.json&sq=package:chromium&type=cs\">protocol.json</a>\n  */\n public class ChromeDevtoolsServer implements SimpleEndpoint {\n   private static final String TAG = \"ChromeDevtoolsServer\";",
      "parent_sha": "b02c4a56b4249a23422e622eed12626c9c7abb6a"
    }
  },
  {
    "oid": "71213be4e9ea72f70ef048e8b34148bb8891b693",
    "message": "Properly encode multiple headers with the same name\n\nUnspecified in the protocol docs, we're expected to separate multiple\nheader values with the same name using a new line character.  This is\nnecessary because a normal JSON object cannot have the same name\nrepeated twice (and headers are encoded using a JSON object not an\narray).\n\nCloses #115",
    "date": "2015-04-02T20:21:24Z",
    "url": "https://github.com/facebook/stetho/commit/71213be4e9ea72f70ef048e8b34148bb8891b693",
    "details": {
      "sha": "2445f37d9597334ace73849992c1f04a518bc62a",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/network/NetworkEventReporterImpl.java",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/facebook/stetho/blob/71213be4e9ea72f70ef048e8b34148bb8891b693/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fnetwork%2FNetworkEventReporterImpl.java",
      "raw_url": "https://github.com/facebook/stetho/raw/71213be4e9ea72f70ef048e8b34148bb8891b693/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fnetwork%2FNetworkEventReporterImpl.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Fnetwork%2FNetworkEventReporterImpl.java?ref=71213be4e9ea72f70ef048e8b34148bb8891b693",
      "patch": "@@ -280,8 +280,15 @@ private String getContentType(InspectorHeaders headers) {\n   private static JSONObject formatHeadersAsJSON(InspectorHeaders headers) {\n     JSONObject json = new JSONObject();\n     for (int i = 0; i < headers.headerCount(); i++) {\n+      String name = headers.headerName(i);\n+      String value = headers.headerValue(i);\n       try {\n-        json.put(headers.headerName(i), headers.headerValue(i));\n+        if (json.has(name)) {\n+          // Multiple headers are separated with a new line.\n+          json.put(name, json.getString(name) + \"\\n\" + value);\n+        } else {\n+          json.put(name, value);\n+        }\n       } catch (JSONException e) {\n         throw new RuntimeException(e);\n       }",
      "parent_sha": "9a1870ca8c69e767cbf63e38b8e53369d2502230"
    }
  },
  {
    "oid": "f11aa878c1951aa02e4a74d1a9cd2b5e029019bb",
    "message": "wire database connection provider into builder",
    "date": "2016-03-23T22:46:56Z",
    "url": "https://github.com/facebook/stetho/commit/f11aa878c1951aa02e4a74d1a9cd2b5e029019bb",
    "details": {
      "sha": "5bcbb7e64fe48bfe7dd177345a6688dc905c4a62",
      "filename": "stetho/src/main/java/com/facebook/stetho/Stetho.java",
      "status": "modified",
      "additions": 18,
      "deletions": 1,
      "changes": 19,
      "blob_url": "https://github.com/facebook/stetho/blob/f11aa878c1951aa02e4a74d1a9cd2b5e029019bb/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2FStetho.java",
      "raw_url": "https://github.com/facebook/stetho/raw/f11aa878c1951aa02e4a74d1a9cd2b5e029019bb/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2FStetho.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2FStetho.java?ref=f11aa878c1951aa02e4a74d1a9cd2b5e029019bb",
      "patch": "@@ -12,6 +12,7 @@\n import android.app.Application;\n import android.content.Context;\n import android.content.SharedPreferences;\n+import android.database.sqlite.SQLiteDatabase;\n import android.os.Build;\n import com.facebook.stetho.common.LogUtil;\n import com.facebook.stetho.common.Util;\n@@ -25,7 +26,9 @@\n import com.facebook.stetho.dumpapp.plugins.SharedPreferencesDumperPlugin;\n import com.facebook.stetho.inspector.DevtoolsSocketHandler;\n import com.facebook.stetho.inspector.console.RuntimeReplFactory;\n+import com.facebook.stetho.inspector.database.DatabaseConnectionProvider;\n import com.facebook.stetho.inspector.database.DatabaseFilesProvider;\n+import com.facebook.stetho.inspector.database.DefaultDatabaseConnectionProvider;\n import com.facebook.stetho.inspector.database.DefaultDatabaseFilesProvider;\n import com.facebook.stetho.inspector.database.SqliteDatabaseDriver;\n import com.facebook.stetho.inspector.elements.Document;\n@@ -236,6 +239,7 @@ public static final class DefaultInspectorModulesBuilder {\n     @Nullable private DocumentProviderFactory mDocumentProvider;\n     @Nullable private RuntimeReplFactory mRuntimeRepl;\n     @Nullable private DatabaseFilesProvider mDatabaseFilesProvider;\n+    @Nullable private DatabaseConnectionProvider mDatabaseConnectionProvider;\n     @Nullable private List<Database.DatabaseDriver> mDatabaseDrivers;\n \n     public DefaultInspectorModulesBuilder(Context context) {\n@@ -275,6 +279,16 @@ public DefaultInspectorModulesBuilder databaseFiles(DatabaseFilesProvider provid\n       return this;\n     }\n \n+    /**\n+     * Customize the database connection that Stetho will use in the UI. Android's\n+     * {@link SQLiteDatabase#openDatabase(String, SQLiteDatabase.CursorFactory, int)} method will\n+     * be used by default.\n+     */\n+    public DefaultInspectorModulesBuilder databaseConnections(DatabaseConnectionProvider provider) {\n+      mDatabaseConnectionProvider = provider;\n+      return this;\n+    }\n+\n     /**\n      * Extend and provide additional database drivers. Currently two database drivers are supported\n      * in this lib: <br>\n@@ -346,7 +360,10 @@ public Iterable<ChromeDevtoolsDomain> finish() {\n         database.add(new SqliteDatabaseDriver(mContext,\n             mDatabaseFilesProvider != null ?\n                 mDatabaseFilesProvider :\n-                new DefaultDatabaseFilesProvider(mContext)));\n+                new DefaultDatabaseFilesProvider(mContext),\n+            mDatabaseConnectionProvider != null ?\n+                mDatabaseConnectionProvider :\n+                new DefaultDatabaseConnectionProvider(mContext)));\n         if (mDatabaseDrivers != null) {\n           for (Database.DatabaseDriver databaseDriver : mDatabaseDrivers) {\n             database.add(databaseDriver);",
      "parent_sha": "e2d9a92f5cef617d191b7cc40df37cae755ad6bb"
    }
  },
  {
    "oid": "e76a769186e79025a7b98f20664810f6202e7de6",
    "message": "Fix FragmentActivity class equality issue\n\nIt must be isInstance else it would require that the Activity actually\nbe FragmentActivity directly.  This does not occur in practice, of\ncourse.",
    "date": "2015-05-01T20:00:45Z",
    "url": "https://github.com/facebook/stetho/commit/e76a769186e79025a7b98f20664810f6202e7de6",
    "details": {
      "sha": "98bb347b944568fe8b257cbfa2f7ab0ddce18982",
      "filename": "stetho/src/main/java/com/facebook/stetho/common/android/FragmentCompatUtil.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/facebook/stetho/blob/e76a769186e79025a7b98f20664810f6202e7de6/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fcommon%2Fandroid%2FFragmentCompatUtil.java",
      "raw_url": "https://github.com/facebook/stetho/raw/e76a769186e79025a7b98f20664810f6202e7de6/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fcommon%2Fandroid%2FFragmentCompatUtil.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Fcommon%2Fandroid%2FFragmentCompatUtil.java?ref=e76a769186e79025a7b98f20664810f6202e7de6",
      "patch": "@@ -29,7 +29,7 @@ private static Object findFragmentForViewInActivity(Activity activity, View view\n \n     // Try the support library version if it is present and the activity is FragmentActivity.\n     if (supportLib != null &&\n-        supportLib.getFragmentActivityClass() == activity.getClass()) {\n+        supportLib.getFragmentActivityClass().isInstance(activity)) {\n       Object fragment = findFragmentForViewInActivity(supportLib, activity, view);\n       if (fragment != null) {\n         return fragment;",
      "parent_sha": "d12a21aec96f86fe08a31642381d84095ebb38fc"
    }
  },
  {
    "oid": "a62dd11a42496ec586bb6435fc2d1719e6da22fe",
    "message": "Added ability for domain classes to be inherited: look-up for methods with @ChromeDevtoolsMethod not only in the class itself, but also in the parent classes.",
    "date": "2018-08-15T15:03:57Z",
    "url": "https://github.com/facebook/stetho/commit/a62dd11a42496ec586bb6435fc2d1719e6da22fe",
    "details": {
      "sha": "e0df3fc16735166e69dc89217cfa46cc9efdc3d9",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/MethodDispatcher.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/facebook/stetho/blob/a62dd11a42496ec586bb6435fc2d1719e6da22fe/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2FMethodDispatcher.java",
      "raw_url": "https://github.com/facebook/stetho/raw/a62dd11a42496ec586bb6435fc2d1719e6da22fe/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2FMethodDispatcher.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2FMethodDispatcher.java?ref=a62dd11a42496ec586bb6435fc2d1719e6da22fe",
      "patch": "@@ -112,7 +112,7 @@ private static Map<String, MethodDispatchHelper> buildDispatchTable(\n       Class<?> handlerClass = domainHandler.getClass();\n       String domainName = handlerClass.getSimpleName();\n \n-      for (Method method : handlerClass.getDeclaredMethods()) {\n+      for (Method method : handlerClass.getMethods()) {\n         if (isDevtoolsMethod(method)) {\n           MethodDispatchHelper dispatchHelper = new MethodDispatchHelper(\n               objectMapper,",
      "parent_sha": "22ea395daa11e204288ef90ef5b531ce3b5b1b75"
    }
  },
  {
    "oid": "e35e48396aefa0f16fd5f93cbf7d016bc9669f06",
    "message": "Allow hitting empty viewgroups\n\nThis was implemented previously to get around an issue with overlays.\nThis was wrong and should be implemented by making overlays\nnon-focusable instead.",
    "date": "2017-03-28T11:54:01Z",
    "url": "https://github.com/facebook/stetho/commit/e35e48396aefa0f16fd5f93cbf7d016bc9669f06",
    "details": {
      "sha": "be0c1d4a7d3cda1d98bf6820d2ad94dc98d9b35d",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/elements/android/ViewGroupDescriptor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/facebook/stetho/blob/e35e48396aefa0f16fd5f93cbf7d016bc9669f06/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FViewGroupDescriptor.java",
      "raw_url": "https://github.com/facebook/stetho/raw/e35e48396aefa0f16fd5f93cbf7d016bc9669f06/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FViewGroupDescriptor.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2Felements%2Fandroid%2FViewGroupDescriptor.java?ref=e35e48396aefa0f16fd5f93cbf7d016bc9669f06",
      "patch": "@@ -107,11 +107,8 @@ public Object getElementToHighlightAtPosition(ViewGroup element, int x, int y, R\n     View hitChild = null;\n     for (int i = element.getChildCount() - 1; i >= 0; --i) {\n       final View childView = element.getChildAt(i);\n-      final boolean hasChildren = childView instanceof ViewGroup &&\n-          ((ViewGroup) childView).getChildCount() > 0;\n       if (isChildVisible(childView) &&\n-          childView.getVisibility() == View.VISIBLE &&\n-          (hasChildren || childView.isFocusable())) {\n+          childView.getVisibility() == View.VISIBLE) {\n         childView.getHitRect(bounds);\n         if (bounds.contains(x, y)) {\n           hitChild = childView;",
      "parent_sha": "c42f0b3743ea24697a78cfb04a02ba03cec35fde"
    }
  },
  {
    "oid": "65bbb19a51cf8c066553b62cdd3f30bddc3b598a",
    "message": "Fix the issue that latest chrome(119 or 120) can not dicover Stetho",
    "date": "2023-12-15T04:17:32Z",
    "url": "https://github.com/facebook/stetho/commit/65bbb19a51cf8c066553b62cdd3f30bddc3b598a",
    "details": {
      "sha": "871c73791da41f3d194e97c6f4424d4f0540f689",
      "filename": "stetho/src/main/java/com/facebook/stetho/inspector/ChromeDiscoveryHandler.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/facebook/stetho/blob/65bbb19a51cf8c066553b62cdd3f30bddc3b598a/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2FChromeDiscoveryHandler.java",
      "raw_url": "https://github.com/facebook/stetho/raw/65bbb19a51cf8c066553b62cdd3f30bddc3b598a/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2FChromeDiscoveryHandler.java",
      "contents_url": "https://api.github.com/repos/facebook/stetho/contents/stetho%2Fsrc%2Fmain%2Fjava%2Fcom%2Ffacebook%2Fstetho%2Finspector%2FChromeDiscoveryHandler.java?ref=65bbb19a51cf8c066553b62cdd3f30bddc3b598a",
      "patch": "@@ -36,6 +36,7 @@ public class ChromeDiscoveryHandler implements HttpHandler {\n   private static final String PAGE_ID = \"1\";\n \n   private static final String PATH_PAGE_LIST = \"/json\";\n+  private static final String PATH_PAGE_LIST1 = \"/json/list\";\n   private static final String PATH_VERSION = \"/json/version\";\n   private static final String PATH_ACTIVATE = \"/json/activate/\" + PAGE_ID;\n \n@@ -65,6 +66,7 @@ public ChromeDiscoveryHandler(Context context, String inspectorPath) {\n \n   public void register(HandlerRegistry registry) {\n     registry.register(new ExactPathMatcher(PATH_PAGE_LIST), this);\n+    registry.register(new ExactPathMatcher(PATH_PAGE_LIST1), this);\n     registry.register(new ExactPathMatcher(PATH_VERSION), this);\n     registry.register(new ExactPathMatcher(PATH_ACTIVATE), this);\n   }\n@@ -75,7 +77,7 @@ public boolean handleRequest(SocketLike socket, LightHttpRequest request, LightH\n     try {\n       if (PATH_VERSION.equals(path)) {\n         handleVersion(response);\n-      } else if (PATH_PAGE_LIST.equals(path)) {\n+      } else if (PATH_PAGE_LIST.equals(path) || PATH_PAGE_LIST1.equals(path)) {\n         handlePageList(response);\n       } else if (PATH_ACTIVATE.equals(path)) {\n         handleActivate(response);",
      "parent_sha": "7c4dc8de4deb28c012b199ef52b9b5c7ad626793"
    }
  }
]