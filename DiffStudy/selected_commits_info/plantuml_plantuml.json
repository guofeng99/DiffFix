[
  {
    "oid": "d7efa7e9a2249017375799653660d6e3498346b9",
    "message": "Fix qualifier labels' margin calculation (#1467)",
    "date": "2023-07-24T12:56:06Z",
    "url": "https://github.com/plantuml/plantuml/commit/d7efa7e9a2249017375799653660d6e3498346b9",
    "details": {
      "sha": "05b9426fd6f88a16468e090ceb8253891c661e6a",
      "filename": "src/net/sourceforge/plantuml/svek/Kal.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/plantuml/plantuml/blob/d7efa7e9a2249017375799653660d6e3498346b9/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsvek%2FKal.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/d7efa7e9a2249017375799653660d6e3498346b9/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsvek%2FKal.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsvek%2FKal.java?ref=d7efa7e9a2249017375799653660d6e3498346b9",
      "patch": "@@ -83,11 +83,11 @@ public Kal(SvekLine svekLine, String text, FontConfiguration font, ISkinParam sk\n \n \t\t} else if (link.getEntity1() == entity) {\n \t\t\tthis.position = Direction.DOWN;\n-\t\t\tentity.ensureMargins(new Margins(0, 0, dim.getHeight(), 0));\n+\t\t\tentity.ensureMargins(new Margins(0, 0, 0, dim.getHeight()));\n \n \t\t} else if (link.getEntity2() == entity) {\n \t\t\tthis.position = Direction.UP;\n-\t\t\tentity.ensureMargins(new Margins(0, 0, 0, dim.getHeight()));\n+\t\t\tentity.ensureMargins(new Margins(0, 0, dim.getHeight(),0 ));\n \n \t\t} else {\n \t\t\tthrow new IllegalStateException();",
      "parent_sha": "bac7a4d7517eac6ec29deaee7d5ea2c032284b2f"
    }
  },
  {
    "oid": "33e5903e8059468a0da2deffe3270198293cf853",
    "message": "Avoid NPE when a remote input stream cannot be read\n\nAvoids the following stacktrace:\njava.lang.NullPointerException\n\tat java.base/java.io.Reader.<init>(Reader.java:168)\n\tat java.base/java.io.InputStreamReader.<init>(InputStreamReader.java:88)\n\tat net.sourceforge.plantuml.utils.BlocLines.load(BlocLines.java:79)\n\tat net.sourceforge.plantuml.style.CommandStyleImport.executeArg(CommandStyleImport.java:89)",
    "date": "2024-04-04T15:52:10Z",
    "url": "https://github.com/plantuml/plantuml/commit/33e5903e8059468a0da2deffe3270198293cf853",
    "details": {
      "sha": "bdc6d5ab72321049e78f0ff4020a8ebf6c71b69e",
      "filename": "src/net/sourceforge/plantuml/style/CommandStyleImport.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/plantuml/plantuml/blob/33e5903e8059468a0da2deffe3270198293cf853/src%2Fnet%2Fsourceforge%2Fplantuml%2Fstyle%2FCommandStyleImport.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/33e5903e8059468a0da2deffe3270198293cf853/src%2Fnet%2Fsourceforge%2Fplantuml%2Fstyle%2FCommandStyleImport.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fstyle%2FCommandStyleImport.java?ref=33e5903e8059468a0da2deffe3270198293cf853",
      "patch": "@@ -86,7 +86,9 @@ protected CommandExecutionResult executeArg(TitledDiagram diagram, LineLocation\n \t\t\tif (path.startsWith(\"http://\") || path.startsWith(\"https://\")) {\n \t\t\t\tSURL url = SURL.create(path);\n \t\t\t\ttry (InputStream remoteInputStream = url.openStream()) {\n-\t\t\t\t\tlines = BlocLines.load(remoteInputStream, location);\n+\t\t\t\t\tif (remoteInputStream != null) {\n+\t\t\t\t\t\tlines = BlocLines.load(remoteInputStream, location);\n+\t\t\t\t\t}\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tfinal SFile styleFile = FileSystem.getInstance().getFile(path);",
      "parent_sha": "7755ae5be4a38f1aaf98ff775ae7b46039fe367d"
    }
  },
  {
    "oid": "83b10aa5c64b66b2cfc100022d97e02e6411afd2",
    "message": "Fix #1768 Also consider \"hide stereotype\" statement (without given stereotype name)",
    "date": "2024-05-07T22:18:11Z",
    "url": "https://github.com/plantuml/plantuml/commit/83b10aa5c64b66b2cfc100022d97e02e6411afd2",
    "details": {
      "sha": "e6c89daaf1dc1ce89c39a2feee6df66988b76763",
      "filename": "src/net/atmp/CucaDiagram.java",
      "status": "modified",
      "additions": 8,
      "deletions": 3,
      "changes": 11,
      "blob_url": "https://github.com/plantuml/plantuml/blob/83b10aa5c64b66b2cfc100022d97e02e6411afd2/src%2Fnet%2Fatmp%2FCucaDiagram.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/83b10aa5c64b66b2cfc100022d97e02e6411afd2/src%2Fnet%2Fatmp%2FCucaDiagram.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fatmp%2FCucaDiagram.java?ref=83b10aa5c64b66b2cfc100022d97e02e6411afd2",
      "patch": "@@ -533,6 +533,7 @@ public List<String> getVisibleStereotypeLabels(Entity entity) {\n \t\t\treturn null;\n \t\t}\n \n+\t\t// collect hide or show statements on stereotypes\n \t\tList<EntityHideOrShow> commands = new ArrayList<>();\n \t\tfor (EntityHideOrShow hideOrShowEntry : hideOrShows) {\n \t\t\tif (hideOrShowEntry.portion == EntityPortion.STEREOTYPE) {\n@@ -542,7 +543,7 @@ public List<String> getVisibleStereotypeLabels(Entity entity) {\n \n \t\tList<String> visibleStereotypeLabels = new ArrayList<>();\n \t\tfor (String stereoTypeLabel : entity.getStereotype().getLabels(Guillemet.DOUBLE_COMPARATOR)) {\n-\t\t\tif (isHiddenStereotypeLabel(stereoTypeLabel, commands)) {\n+\t\t\tif (!isHiddenStereotypeLabel(stereoTypeLabel, commands)) {\n \t\t\t\tvisibleStereotypeLabels.add(stereoTypeLabel);\n \t\t\t}\n \t\t}\n@@ -552,12 +553,16 @@ public List<String> getVisibleStereotypeLabels(Entity entity) {\n \n \tprivate boolean isHiddenStereotypeLabel(String stereoTypeLabel, List<EntityHideOrShow> commands) {\n \t\tfor (EntityHideOrShow cmd : commands) {\n+\t\t\t// gender is here the stereotype name given in the hide or show command\n \t\t\tString gender = cmd.gender.getGender();\n \t\t\tif (gender != null && gender.equals(stereoTypeLabel)) {\n-\t\t\t\treturn false;\n+\t\t\t\treturn !cmd.show;\n+\t\t\t} else if (gender == null) {\n+\t\t\t\t// we have a hide or show command without a stereotype name => hide or show all stereotypes\n+\t\t\t\treturn !cmd.show;\n \t\t\t}\n \t\t}\n-\t\treturn true;\n+\t\treturn false;\n \t}\n \n \tpublic final void hideOrShow(EntityGender gender, EntityPortion portions, boolean show) {",
      "parent_sha": "2709ad25455bbf247d99d3626439bb5d0eec3193"
    }
  },
  {
    "oid": "376ee9d8c212c6814f1d7152d0377a323f3300fd",
    "message": "Update `TContext.java` with `RandomFunction`",
    "date": "2024-02-01T22:13:41Z",
    "url": "https://github.com/plantuml/plantuml/commit/376ee9d8c212c6814f1d7152d0377a323f3300fd",
    "details": {
      "sha": "b5eeeac68801f754f4b699f5a70ef5b450756677",
      "filename": "src/net/sourceforge/plantuml/tim/TContext.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/plantuml/plantuml/blob/376ee9d8c212c6814f1d7152d0377a323f3300fd/src%2Fnet%2Fsourceforge%2Fplantuml%2Ftim%2FTContext.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/376ee9d8c212c6814f1d7152d0377a323f3300fd/src%2Fnet%2Fsourceforge%2Fplantuml%2Ftim%2FTContext.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Ftim%2FTContext.java?ref=376ee9d8c212c6814f1d7152d0377a323f3300fd",
      "patch": "@@ -209,7 +209,7 @@ private void addStandardFunctions(Defines defines) {\n \t\tfunctionsSet.addFunction(new LogicalNor());\n \t\tfunctionsSet.addFunction(new LogicalNxor());\n \t\tfunctionsSet.addFunction(new Ord());\n-\t\tfunctionsSet.addFunction(new Random());\n+\t\tfunctionsSet.addFunction(new RandomFunction());\n \t\t// %standard_exists_function\n \t\t// %str_replace\n \t\t// !exit",
      "parent_sha": "9e18d34936adbb8848e9c2c46097617705be3449"
    }
  },
  {
    "oid": "5e30d89eb4be11906dc732fc35a5de3f81c4e879",
    "message": "Version 1.2022.8",
    "date": "2022-09-25T15:35:14Z",
    "url": "https://github.com/plantuml/plantuml/commit/5e30d89eb4be11906dc732fc35a5de3f81c4e879",
    "details": {
      "sha": "b490fbdd051e77ea5cf23608cbca2444ee138298",
      "filename": "src/net/sourceforge/plantuml/version/Version.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/plantuml/plantuml/blob/5e30d89eb4be11906dc732fc35a5de3f81c4e879/src%2Fnet%2Fsourceforge%2Fplantuml%2Fversion%2FVersion.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/5e30d89eb4be11906dc732fc35a5de3f81c4e879/src%2Fnet%2Fsourceforge%2Fplantuml%2Fversion%2FVersion.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fversion%2FVersion.java?ref=5e30d89eb4be11906dc732fc35a5de3f81c4e879",
      "patch": "@@ -45,7 +45,7 @@ public class Version {\n \tprivate static final int MAJOR_SEPARATOR = 1000000;\n \n \tpublic static int version() {\n-\t\treturn 1202207;\n+\t\treturn 1202208;\n \t}\n \n \tpublic static int versionPatched() {\n@@ -81,7 +81,7 @@ public static String versionString(int size) {\n \t}\n \n \tpublic static int beta() {\n-\t\tfinal int beta = 11;\n+\t\tfinal int beta = 0;\n \t\treturn beta;\n \t}\n \n@@ -94,7 +94,7 @@ public static String turningId() {\n \t}\n \n \tpublic static long compileTime() {\n-\t\treturn 1661187690019L;\n+\t\treturn 1664096433281L;\n \t}\n \n \tpublic static String compileTimeString() {",
      "parent_sha": "368da723f1b0708e7cbf834988ac2fa6949f0581"
    }
  },
  {
    "oid": "51f90138b759568f988637773951f3f35f847fcd",
    "message": "Use RegexConcat in CommandReferenceMultilinesOverSeveral",
    "date": "2022-04-01T21:20:30Z",
    "url": "https://github.com/plantuml/plantuml/commit/51f90138b759568f988637773951f3f35f847fcd",
    "details": {
      "sha": "f9006a1e4776ff15702882033e727005c579075b",
      "filename": "src/net/sourceforge/plantuml/sequencediagram/command/CommandReferenceMultilinesOverSeveral.java",
      "status": "modified",
      "additions": 27,
      "deletions": 6,
      "changes": 33,
      "blob_url": "https://github.com/plantuml/plantuml/blob/51f90138b759568f988637773951f3f35f847fcd/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsequencediagram%2Fcommand%2FCommandReferenceMultilinesOverSeveral.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/51f90138b759568f988637773951f3f35f847fcd/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsequencediagram%2Fcommand%2FCommandReferenceMultilinesOverSeveral.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsequencediagram%2Fcommand%2FCommandReferenceMultilinesOverSeveral.java?ref=51f90138b759568f988637773951f3f35f847fcd",
      "patch": "@@ -45,6 +45,10 @@\n import net.sourceforge.plantuml.command.BlocLines;\n import net.sourceforge.plantuml.command.CommandExecutionResult;\n import net.sourceforge.plantuml.command.CommandMultilines;\n+import net.sourceforge.plantuml.command.regex.RegexConcat;\n+import net.sourceforge.plantuml.command.regex.RegexLeaf;\n+import net.sourceforge.plantuml.command.regex.RegexOptional;\n+import net.sourceforge.plantuml.command.regex.RegexResult;\n import net.sourceforge.plantuml.cucadiagram.Display;\n import net.sourceforge.plantuml.sequencediagram.Participant;\n import net.sourceforge.plantuml.sequencediagram.Reference;\n@@ -55,24 +59,41 @@\n public class CommandReferenceMultilinesOverSeveral extends CommandMultilines<SequenceDiagram> {\n \n \tpublic CommandReferenceMultilinesOverSeveral() {\n-\t\tsuper(\"^ref(#\\\\w+)?[%s]+over[%s]+((?:[%pLN_.@]+|[%g][^%g]+[%g])(?:[%s]*,[%s]*(?:[%pLN_.@]+|[%g][^%g]+[%g]))*)$\");\n+\t\tsuper(getConcat().getPattern());\n \t}\n \n+\tprivate static RegexConcat getConcat() {\n+\t\treturn RegexConcat.build(CommandReferenceMultilinesOverSeveral.class.getName(),\n+\t\t\t\tRegexLeaf.start(), //\n+\t\t\t\tnew RegexLeaf(\"ref\"), //\n+\t\t\t\tnew RegexLeaf(\"REF\", \"(#\\\\w+)?\"), //\n+\t\t\t\tRegexLeaf.spaceOneOrMore(), //\n+\t\t\t\tnew RegexLeaf(\"over\"), //\n+\t\t\t\tRegexLeaf.spaceOneOrMore(), //\n+\t\t\t\tnew RegexLeaf(\"PARTS\", \"((?:[%pLN_.@]+|[%g][^%g]+[%g])(?:[%s]*,[%s]*(?:[%pLN_.@]+|[%g][^%g]+[%g]))*)\"), //\n+\t\t\t\tRegexLeaf.end());\n+\t}\n+\n+\n \t@Override\n \tpublic String getPatternEnd() {\n \t\treturn \"^end[%s]?(ref)?$\";\n \t}\n \n \tpublic CommandExecutionResult execute(final SequenceDiagram diagram, BlocLines lines) throws NoSuchColorException {\n-\t\tfinal List<String> line0 = StringUtils.getSplit(getStartingPattern(),\n-\t\t\t\tlines.getFirst().getTrimmed().getString());\n-\t\tfinal String s1 = line0.get(0);\n+\t\tString firstLine = lines.getFirst().getTrimmed().getString();\n+\t\tRegexResult arg = getConcat().matcher(firstLine);\n+\t\tif (arg == null) {\n+\t\t\treturn CommandExecutionResult.error(\"Cannot parse line \" + firstLine);\n+\t\t}\n+\n+\t\tString s1 = arg.get(\"REF\", 0);\n \t\tfinal HColor backColorElement = s1 == null ? null\n \t\t\t\t: diagram.getSkinParam().getIHtmlColorSet().getColor(diagram.getSkinParam().getThemeStyle(), s1);\n \t\t// final HtmlColor backColorGeneral =\n \t\t// HtmlColorSetSimple.instance().getColorIfValid(line0.get(1));\n \n-\t\tfinal List<String> participants = StringUtils.splitComma(line0.get(1));\n+\t\tfinal List<String> participants = StringUtils.splitComma(arg.get(\"PARTS\", 0));\n \t\tfinal List<Participant> p = new ArrayList<>();\n \t\tfor (String s : participants) {\n \t\t\tp.add(diagram.getOrCreateParticipant(StringUtils.eventuallyRemoveStartingAndEndingDoubleQuote(s)));\n@@ -84,7 +105,7 @@ public CommandExecutionResult execute(final SequenceDiagram diagram, BlocLines l\n \n \t\tUrl u = null;\n \t\tif (strings.size() > 0) {\n-\t\t\tfinal UrlBuilder urlBuilder = new UrlBuilder(diagram.getSkinParam().getValue(\"topurl\"), UrlMode.STRICT);\n+\t\tfinal UrlBuilder urlBuilder = new UrlBuilder(diagram.getSkinParam().getValue(\"topurl\"), UrlMode.STRICT);\n \t\t\tu = urlBuilder.getUrl(strings.get(0).toString());\n \t\t}\n \t\tif (u != null) {",
      "parent_sha": "410f1caf712ce11f323339122399a2e924cdc5b2"
    }
  },
  {
    "oid": "4318369c7236e556ee4418971a1963bb697d3b55",
    "message": "upd: uniformisation of `dirpath` (#1930)\n\nTo follow:\r\n- #1916",
    "date": "2024-09-27T17:07:20Z",
    "url": "https://github.com/plantuml/plantuml/commit/4318369c7236e556ee4418971a1963bb697d3b55",
    "details": {
      "sha": "fb8f6e60ce5dc45eb0d74e58937eef93776f27ed",
      "filename": "src/net/sourceforge/plantuml/preproc/Defines.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/plantuml/plantuml/blob/4318369c7236e556ee4418971a1963bb697d3b55/src%2Fnet%2Fsourceforge%2Fplantuml%2Fpreproc%2FDefines.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/4318369c7236e556ee4418971a1963bb697d3b55/src%2Fnet%2Fsourceforge%2Fplantuml%2Fpreproc%2FDefines.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fpreproc%2FDefines.java?ref=4318369c7236e556ee4418971a1963bb697d3b55",
      "patch": "@@ -100,7 +100,7 @@ public void overrideFilename(String filename) {\n \n \tpublic void overrideDirPath(String fileDir) {\n \t\tif (fileDir != null)\n-\t\t\tenvironment.put(\"dirpath\", fileDir);\n+\t\t\tenvironment.put(\"dirpath\", fileDir.replace('\\\\', '/'));\n \t}\n \n \tpublic void importFrom(Defines other) {",
      "parent_sha": "593d821f3fd596b01967baf42d1901542ad90009"
    }
  },
  {
    "oid": "823d27afa9906e99c4d511d0b7b3ca5659e36440",
    "message": "fix: `ord` builtin function: retrieve then cast of the value\n\nBy this indication:\n- https://github.com/plantuml/plantuml/pull/1487#issuecomment-1646545778\n\nFix `ord` builtin function:\n- retrieve then cast of the value",
    "date": "2023-07-24T14:24:35Z",
    "url": "https://github.com/plantuml/plantuml/commit/823d27afa9906e99c4d511d0b7b3ca5659e36440",
    "details": {
      "sha": "d45bf6d6223dfe0cf7d0cc4d0800df9b59e5829c",
      "filename": "src/net/sourceforge/plantuml/tim/stdlib/Ord.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/plantuml/plantuml/blob/823d27afa9906e99c4d511d0b7b3ca5659e36440/src%2Fnet%2Fsourceforge%2Fplantuml%2Ftim%2Fstdlib%2FOrd.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/823d27afa9906e99c4d511d0b7b3ca5659e36440/src%2Fnet%2Fsourceforge%2Fplantuml%2Ftim%2Fstdlib%2FOrd.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Ftim%2Fstdlib%2FOrd.java?ref=823d27afa9906e99c4d511d0b7b3ca5659e36440",
      "patch": "@@ -59,7 +59,8 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {\n \tpublic TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,\n \t\t\tMap<String, TValue> named) throws EaterException, EaterExceptionLocated {\n \t\ttry {\n-\t\t\tfinal int value = (int) values.get(0).toString();\n+\t\t\tfinal char firstChar = values.get(0).toString().charAt(0);\n+\t\t\tfinal int value = (int) firstChar;\n \t\t\treturn TValue.fromInt(value);\n \t\t} catch (Throwable t) {\n \t\t\treturn TValue.fromInt(0);",
      "parent_sha": "6e7254377ccf9ca1e6616ee457442938e9e7e472"
    }
  },
  {
    "oid": "8add65d317d6d329ed83c2c44e91136e44def831",
    "message": "transparent is no color in latex, fixes #974",
    "date": "2022-04-09T11:08:59Z",
    "url": "https://github.com/plantuml/plantuml/commit/8add65d317d6d329ed83c2c44e91136e44def831",
    "details": {
      "sha": "1d487e07c0cd6a3e7099b0be5d96ca7dc11a02ee",
      "filename": "src/net/sourceforge/plantuml/tikz/TikzGraphics.java",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/plantuml/plantuml/blob/8add65d317d6d329ed83c2c44e91136e44def831/src%2Fnet%2Fsourceforge%2Fplantuml%2Ftikz%2FTikzGraphics.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/8add65d317d6d329ed83c2c44e91136e44def831/src%2Fnet%2Fsourceforge%2Fplantuml%2Ftikz%2FTikzGraphics.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Ftikz%2FTikzGraphics.java?ref=8add65d317d6d329ed83c2c44e91136e44def831",
      "patch": "@@ -5,12 +5,12 @@\n  * (C) Copyright 2009-2023, Arnaud Roques\n  *\n  * Project Info:  http://plantuml.com\n- * \n+ *\n  * If you like this project or if you find it useful, you can support us at:\n- * \n+ *\n  * http://plantuml.com/patreon (only 1$ per month!)\n  * http://plantuml.com/paypal\n- * \n+ *\n  * This file is part of PlantUML.\n  *\n  * PlantUML is free software; you can redistribute it and/or modify it\n@@ -30,7 +30,7 @@\n  *\n  *\n  * Original Author:  Arnaud Roques\n- * \n+ *\n  *\n  */\n package net.sourceforge.plantuml.tikz;\n@@ -549,7 +549,7 @@ public void ellipse(double x, double y, double width, double height) {\n \t\tif (color != null)\n \t\t\tsb.append(\"color=\" + getColorName(color) + \",\");\n \n-\t\tif (fillcolor != null)\n+\t\tif (fillcolor != null && !HColorUtils.isTransparent(fillcolor))\n \t\t\tsb.append(\"fill=\" + getColorName(fillcolor) + \",\");\n \n \t\tsb.append(\"line width=\" + thickness + \"pt] \" + couple(x, y) + \" ellipse (\" + format(width) + \"pt and \"",
      "parent_sha": "c9137be051ce98b3e3e27f65f54ec7d9f8886903"
    }
  },
  {
    "oid": "a061b11305e8754a958fd8f59ed336de0c99f7b5",
    "message": "chore: formatting issue",
    "date": "2023-12-11T17:47:30Z",
    "url": "https://github.com/plantuml/plantuml/commit/a061b11305e8754a958fd8f59ed336de0c99f7b5",
    "details": {
      "sha": "40bde6ee610adeda4df537acd56fb443cdda5416",
      "filename": "src/net/sourceforge/plantuml/PSystemBuilder.java",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/plantuml/plantuml/blob/a061b11305e8754a958fd8f59ed336de0c99f7b5/src%2Fnet%2Fsourceforge%2Fplantuml%2FPSystemBuilder.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/a061b11305e8754a958fd8f59ed336de0c99f7b5/src%2Fnet%2Fsourceforge%2Fplantuml%2FPSystemBuilder.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2FPSystemBuilder.java?ref=a061b11305e8754a958fd8f59ed336de0c99f7b5",
      "patch": "@@ -224,8 +224,7 @@ final public Diagram createPSystem(List<StringLocated> source, List<StringLocate\n \t\t// factories.add(new PSystemSudokuFactory());\n \t\t// ::done\n \n-\t\t// ::comment when __CORE__ or __MIT__ or __EPL__ or __BSD__ or __ASL__ or\n-\t\t// __LGPL__\n+\t\t// ::comment when __CORE__ or __MIT__ or __EPL__ or __BSD__ or __ASL__ or __LGPL__\n \t\tfactories.add(new PSystemJcckitFactory());\n \t\tfactories.add(new PSystemSudokuFactory());\n \t\t// ::done\n@@ -249,8 +248,7 @@ final public Diagram createPSystem(List<StringLocated> source, List<StringLocate\n \t\t// ::done\n \n \t\tfactories.add(new PSystemCharlieFactory());\n-\t\t// ::comment when __CORE__ or __MIT__ or __EPL__ or __BSD__ or __ASL__ or\n-\t\t// __LGPL__\n+\t\t// ::comment when __CORE__ or __MIT__ or __EPL__ or __BSD__ or __ASL__ or __LGPL__\n \t\tfactories.add(new PSystemXearthFactory());\n \t\t// ::done\n ",
      "parent_sha": "428381ca44ed7f86cc9b46cf01328c224b3362c3"
    }
  },
  {
    "oid": "3af1fb71809f184504b101f6a1baaff8b9689360",
    "message": "Rename %loadJSON to %load_json",
    "date": "2022-08-26T16:06:31Z",
    "url": "https://github.com/plantuml/plantuml/commit/3af1fb71809f184504b101f6a1baaff8b9689360",
    "details": {
      "sha": "d9b11ce5ad5846a9709e0b84dd804d1fc00a583e",
      "filename": "test/net/sourceforge/plantuml/LoadJsonTest.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/plantuml/plantuml/blob/3af1fb71809f184504b101f6a1baaff8b9689360/test%2Fnet%2Fsourceforge%2Fplantuml%2FLoadJsonTest.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/3af1fb71809f184504b101f6a1baaff8b9689360/test%2Fnet%2Fsourceforge%2Fplantuml%2FLoadJsonTest.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/test%2Fnet%2Fsourceforge%2Fplantuml%2FLoadJsonTest.java?ref=3af1fb71809f184504b101f6a1baaff8b9689360",
      "patch": "@@ -34,7 +34,7 @@ class LoadJsonTest {\n     // ************ Test DSL data\n     private static final String DIAGRAM = \"\" +\n             \"@startuml\\n\" +\n-            \"!$JSON_DATA=%loadJSON(test.json)\\n\" +\n+            \"!$JSON_DATA=%load_json(test.json)\\n\" +\n \n             // title should have the value from the JSON file\n             \"title $JSON_DATA.jsonTestKey\\n\" +\n@@ -44,7 +44,7 @@ class LoadJsonTest {\n     private static final String DIAGRAM_DEF = \"\" +\n             \"@startuml\\n\" +\n             \"!$DEF_JSON=\" + DEF_JSON + \"\\n\" +\n-            \"!$JSON_DATA=%loadJSON(\\\"test-notfound.json\\\", $DEF_JSON)\\n\" +\n+            \"!$JSON_DATA=%load_json(\\\"test-notfound.json\\\", $DEF_JSON)\\n\" +\n \n             // title should have the value from the default (because the file doesn't exist)\n             \"title $JSON_DATA.jsonTestKey\\n\" +\n@@ -53,7 +53,7 @@ class LoadJsonTest {\n \n     private static final String DIAGRAM_DEF_EMPTY = \"\" +\n             \"@startuml\\n\" +\n-            \"!$JSON_DATA=%loadJSON(\\\"test-notfound.json\\\")\\n\" +\n+            \"!$JSON_DATA=%load_json(\\\"test-notfound.json\\\")\\n\" +\n             // JSON_DATA is defined, but empty (loadJSON default). So, title contains only  \"xx  yy\".\n             \"title xx $JSON_DATA.jsonTestKey yy\\n\" +\n             \"a -> b\\n\" +",
      "parent_sha": "6809546c6573faf8b02db07ebb27c08c71d811b5"
    }
  },
  {
    "oid": "75f26baab7d9ce304ad3d8563e14530e1c531869",
    "message": "Remove redundant FileFormatOption.affineTransform field (it was always null and could not be set to another value)",
    "date": "2021-03-29T01:00:19Z",
    "url": "https://github.com/plantuml/plantuml/commit/75f26baab7d9ce304ad3d8563e14530e1c531869",
    "details": {
      "sha": "f06634b873ec8993436b0f3b84a89d3518d9ea3c",
      "filename": "src/net/sourceforge/plantuml/FileFormatOption.java",
      "status": "modified",
      "additions": 13,
      "deletions": 14,
      "changes": 27,
      "blob_url": "https://github.com/plantuml/plantuml/blob/75f26baab7d9ce304ad3d8563e14530e1c531869/src%2Fnet%2Fsourceforge%2Fplantuml%2FFileFormatOption.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/75f26baab7d9ce304ad3d8563e14530e1c531869/src%2Fnet%2Fsourceforge%2Fplantuml%2FFileFormatOption.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2FFileFormatOption.java?ref=75f26baab7d9ce304ad3d8563e14530e1c531869",
      "patch": "@@ -50,7 +50,6 @@\n public final class FileFormatOption implements Serializable {\n \n \tprivate final FileFormat fileFormat;\n-\tprivate final AffineTransform affineTransform;\n \tprivate boolean withMetadata;\n \tprivate final boolean useRedForError;\n \tprivate final String svgLinkTarget;\n@@ -65,21 +64,20 @@ public double getScaleCoef() {\n \t}\n \n \tpublic FileFormatOption(FileFormat fileFormat) {\n-\t\tthis(fileFormat, null, true, false, null, false, null, TikzFontDistortion.getDefault(), 1.0, null, null);\n+\t\tthis(fileFormat, true, false, null, false, null, TikzFontDistortion.getDefault(), 1.0, null, null);\n \t}\n \n \tpublic FileFormatOption(FileFormat fileFormat, boolean withMetadata) {\n-\t\tthis(fileFormat, null, withMetadata, false, null, false, null, TikzFontDistortion.getDefault(), 1.0, null,\n+\t\tthis(fileFormat, withMetadata, false, null, false, null, TikzFontDistortion.getDefault(), 1.0, null,\n \t\t\t\tnull);\n \t}\n \n-\tprivate FileFormatOption(FileFormat fileFormat, AffineTransform at, boolean withMetadata, boolean useRedForError,\n+\tprivate FileFormatOption(FileFormat fileFormat, boolean withMetadata, boolean useRedForError,\n \t\t\tString svgLinkTarget, boolean debugsvek, String hoverColor, TikzFontDistortion tikzFontDistortion,\n \t\t\tdouble scale, String preserveAspectRatio, String watermark) {\n \t\tthis.hoverColor = hoverColor;\n \t\tthis.watermark = watermark;\n \t\tthis.fileFormat = fileFormat;\n-\t\tthis.affineTransform = at;\n \t\tthis.withMetadata = withMetadata;\n \t\tthis.useRedForError = useRedForError;\n \t\tthis.svgLinkTarget = svgLinkTarget;\n@@ -109,51 +107,52 @@ public final String getPreserveAspectRatio() {\n \t}\n \n \tpublic FileFormatOption withUseRedForError() {\n-\t\treturn new FileFormatOption(fileFormat, affineTransform, withMetadata, true, svgLinkTarget, debugsvek,\n+\t\treturn new FileFormatOption(fileFormat, withMetadata, true, svgLinkTarget, debugsvek,\n \t\t\t\thoverColor, tikzFontDistortion, scale, preserveAspectRatio, watermark);\n \t}\n \n \tpublic FileFormatOption withTikzFontDistortion(TikzFontDistortion tikzFontDistortion) {\n-\t\treturn new FileFormatOption(fileFormat, affineTransform, withMetadata, true, svgLinkTarget, debugsvek,\n+\t\treturn new FileFormatOption(fileFormat, withMetadata, true, svgLinkTarget, debugsvek,\n \t\t\t\thoverColor, tikzFontDistortion, scale, preserveAspectRatio, watermark);\n \t}\n \n \tpublic FileFormatOption withSvgLinkTarget(String svgLinkTarget) {\n-\t\treturn new FileFormatOption(fileFormat, affineTransform, withMetadata, useRedForError, svgLinkTarget, debugsvek,\n+\t\treturn new FileFormatOption(fileFormat, withMetadata, useRedForError, svgLinkTarget, debugsvek,\n \t\t\t\thoverColor, tikzFontDistortion, scale, preserveAspectRatio, watermark);\n \t}\n \n \tpublic FileFormatOption withPreserveAspectRatio(String preserveAspectRatio) {\n-\t\treturn new FileFormatOption(fileFormat, affineTransform, withMetadata, useRedForError, svgLinkTarget, debugsvek,\n+\t\treturn new FileFormatOption(fileFormat, withMetadata, useRedForError, svgLinkTarget, debugsvek,\n \t\t\t\thoverColor, tikzFontDistortion, scale, preserveAspectRatio, watermark);\n \t}\n \n \tpublic FileFormatOption withHoverColor(String hoverColor) {\n-\t\treturn new FileFormatOption(fileFormat, affineTransform, withMetadata, useRedForError, svgLinkTarget, debugsvek,\n+\t\treturn new FileFormatOption(fileFormat, withMetadata, useRedForError, svgLinkTarget, debugsvek,\n \t\t\t\thoverColor, tikzFontDistortion, scale, preserveAspectRatio, watermark);\n \t}\n \n \tpublic FileFormatOption withScale(double scale) {\n-\t\treturn new FileFormatOption(fileFormat, affineTransform, withMetadata, useRedForError, svgLinkTarget, debugsvek,\n+\t\treturn new FileFormatOption(fileFormat, withMetadata, useRedForError, svgLinkTarget, debugsvek,\n \t\t\t\thoverColor, tikzFontDistortion, scale, preserveAspectRatio, watermark);\n \t}\n \n \tpublic FileFormatOption withWartermark(String watermark) {\n-\t\treturn new FileFormatOption(fileFormat, affineTransform, withMetadata, useRedForError, svgLinkTarget, debugsvek,\n+\t\treturn new FileFormatOption(fileFormat, withMetadata, useRedForError, svgLinkTarget, debugsvek,\n \t\t\t\thoverColor, tikzFontDistortion, scale, preserveAspectRatio, watermark);\n \t}\n \n \t@Override\n \tpublic String toString() {\n-\t\treturn fileFormat.toString() + \" \" + affineTransform;\n+\t\treturn fileFormat.toString();\n \t}\n \n \tpublic final FileFormat getFileFormat() {\n \t\treturn fileFormat;\n \t}\n \n+\t@Deprecated\n \tpublic AffineTransform getAffineTransform() {\n-\t\treturn affineTransform;\n+\t\treturn null;\n \t}\n \n \tpublic final boolean isUseRedForError() {",
      "parent_sha": "d2993868f14a141f50a5b8367469a96505fc283b"
    }
  },
  {
    "oid": "42e77ed2a19cc97a44d3c14f4e0c0c5882d0bc25",
    "message": "fix: better handling of allowlist url\nhttps://github.com/plantuml/plantuml/issues/1820",
    "date": "2024-06-11T16:51:46Z",
    "url": "https://github.com/plantuml/plantuml/commit/42e77ed2a19cc97a44d3c14f4e0c0c5882d0bc25",
    "details": {
      "sha": "db42b22bf7cb80d75b7b798583f494a695f0e49f",
      "filename": "src/net/sourceforge/plantuml/security/SURL.java",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/plantuml/plantuml/blob/42e77ed2a19cc97a44d3c14f4e0c0c5882d0bc25/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsecurity%2FSURL.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/42e77ed2a19cc97a44d3c14f4e0c0c5882d0bc25/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsecurity%2FSURL.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsecurity%2FSURL.java?ref=42e77ed2a19cc97a44d3c14f4e0c0c5882d0bc25",
      "patch": "@@ -225,6 +225,11 @@ public boolean isUrlOk() {\n \t\t\t// In SANDBOX, we cannot read any URL\n \t\t\treturn false;\n \n+\t\tif (isInUrlAllowList())\n+\t\t\t// ::done\n+\t\t\treturn true;\n+\t\t// ::comment when __CORE__\n+\n \t\tif (SecurityUtils.getSecurityProfile() == SecurityProfile.LEGACY) {\n \t\t\tif (URLCheck.isURLforbidden(cleanPath(internal.toString())))\n \t\t\t\treturn false;\n@@ -235,11 +240,6 @@ public boolean isUrlOk() {\n \t\t\t// We are UNSECURE anyway\n \t\t\treturn true;\n \n-\t\tif (isInUrlAllowList())\n-\t\t\t// ::done\n-\t\t\treturn true;\n-\t\t// ::comment when __CORE__\n-\n \t\tif (SecurityUtils.getSecurityProfile() == SecurityProfile.INTERNET) {\n \t\t\tif (URLCheck.isURLforbidden(cleanPath(internal.toString())))\n \t\t\t\treturn false;",
      "parent_sha": "65acb20f1d4308c7f3da420a7cfefc050711dad9"
    }
  },
  {
    "oid": "ee7022f19ebbe9ff9bbba935840943da5761eaae",
    "message": "chore: fix test",
    "date": "2023-11-27T17:57:42Z",
    "url": "https://github.com/plantuml/plantuml/commit/ee7022f19ebbe9ff9bbba935840943da5761eaae",
    "details": {
      "sha": "f37024c6e8e9c07810b177d67907c5c86fe0cf4d",
      "filename": "test/nonreg/simple/A0003_TestResult.java",
      "status": "modified",
      "additions": 134,
      "deletions": 134,
      "changes": 268,
      "blob_url": "https://github.com/plantuml/plantuml/blob/ee7022f19ebbe9ff9bbba935840943da5761eaae/test%2Fnonreg%2Fsimple%2FA0003_TestResult.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/ee7022f19ebbe9ff9bbba935840943da5761eaae/test%2Fnonreg%2Fsimple%2FA0003_TestResult.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/test%2Fnonreg%2Fsimple%2FA0003_TestResult.java?ref=ee7022f19ebbe9ff9bbba935840943da5761eaae",
      "patch": "@@ -5,16 +5,16 @@ public class A0003_TestResult {\n /*\n \"\"\"\n DPI: 96\n-dimension: [ 367.7447 ; 76.0000 ]\n+dimension: [ 367.7447 ; 74.0000 ]\n scaleFactor: 2.0000\n seed: 2061842952546013393\n svgLinkTarget: _top\n hoverPathColorRGB: null\n preserveAspectRatio: none\n \n RECTANGLE:\n-  pt1: [ 8.0000 ; 29.0000 ]\n-  pt2: [ 16.0000 ; 59.0000 ]\n+  pt1: [ 8.0000 ; 27.0000 ]\n+  pt2: [ 16.0000 ; 57.0000 ]\n   xCorner: 0\n   yCorner: 0\n   stroke: 0.0-0.0-1.0\n@@ -23,8 +23,8 @@ public class A0003_TestResult {\n   backcolor: fff1e5e5\n \n RECTANGLE:\n-  pt1: [ 36.0000 ; 29.0000 ]\n-  pt2: [ 44.0000 ; 59.0000 ]\n+  pt1: [ 36.0000 ; 27.0000 ]\n+  pt2: [ 44.0000 ; 57.0000 ]\n   xCorner: 0\n   yCorner: 0\n   stroke: 0.0-0.0-1.0\n@@ -33,8 +33,8 @@ public class A0003_TestResult {\n   backcolor: fff1e5e5\n \n RECTANGLE:\n-  pt1: [ 44.0000 ; 29.0000 ]\n-  pt2: [ 72.0000 ; 59.0000 ]\n+  pt1: [ 44.0000 ; 27.0000 ]\n+  pt2: [ 72.0000 ; 57.0000 ]\n   xCorner: 0\n   yCorner: 0\n   stroke: 0.0-0.0-1.0\n@@ -43,8 +43,8 @@ public class A0003_TestResult {\n   backcolor: fffa8072\n \n RECTANGLE:\n-  pt1: [ 92.0000 ; 29.0000 ]\n-  pt2: [ 100.0000 ; 59.0000 ]\n+  pt1: [ 92.0000 ; 27.0000 ]\n+  pt2: [ 100.0000 ; 57.0000 ]\n   xCorner: 0\n   yCorner: 0\n   stroke: 0.0-0.0-1.0\n@@ -53,8 +53,8 @@ public class A0003_TestResult {\n   backcolor: fff1e5e5\n \n RECTANGLE:\n-  pt1: [ 120.0000 ; 29.0000 ]\n-  pt2: [ 128.0000 ; 59.0000 ]\n+  pt1: [ 120.0000 ; 27.0000 ]\n+  pt2: [ 128.0000 ; 57.0000 ]\n   xCorner: 0\n   yCorner: 0\n   stroke: 0.0-0.0-1.0\n@@ -63,8 +63,8 @@ public class A0003_TestResult {\n   backcolor: fff1e5e5\n \n RECTANGLE:\n-  pt1: [ 148.0000 ; 29.0000 ]\n-  pt2: [ 156.0000 ; 59.0000 ]\n+  pt1: [ 148.0000 ; 27.0000 ]\n+  pt2: [ 156.0000 ; 57.0000 ]\n   xCorner: 0\n   yCorner: 0\n   stroke: 0.0-0.0-1.0\n@@ -76,95 +76,95 @@ public class A0003_TestResult {\n   text: 43\n   position: [ 21.0000 ; 23.7778 ]\n   orientation: 0\n-  font: Serif.plain/10 []\n+  font: SansSerif.plain/10 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n   text: 44\n   position: [ 49.0000 ; 23.7778 ]\n   orientation: 0\n-  font: Serif.plain/10 []\n+  font: SansSerif.plain/10 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n   text: 45\n   position: [ 77.0000 ; 23.7778 ]\n   orientation: 0\n-  font: Serif.plain/10 []\n+  font: SansSerif.plain/10 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n   text: 46\n   position: [ 105.0000 ; 23.7778 ]\n   orientation: 0\n-  font: Serif.plain/10 []\n+  font: SansSerif.plain/10 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n   text: 47\n   position: [ 133.0000 ; 23.7778 ]\n   orientation: 0\n-  font: Serif.plain/10 []\n+  font: SansSerif.plain/10 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n   text: 48\n   position: [ 161.0000 ; 23.7778 ]\n   orientation: 0\n-  font: Serif.plain/10 []\n+  font: SansSerif.plain/10 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n LINE:\n   pt1: [ 16.0000 ; 16.0000 ]\n-  pt2: [ 16.0000 ; 59.0000 ]\n+  pt2: [ 16.0000 ; 57.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ffc0c0c0\n \n LINE:\n   pt1: [ 44.0000 ; 16.0000 ]\n-  pt2: [ 44.0000 ; 59.0000 ]\n+  pt2: [ 44.0000 ; 57.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ffc0c0c0\n \n LINE:\n   pt1: [ 72.0000 ; 16.0000 ]\n-  pt2: [ 72.0000 ; 59.0000 ]\n+  pt2: [ 72.0000 ; 57.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ffc0c0c0\n \n LINE:\n   pt1: [ 100.0000 ; 16.0000 ]\n-  pt2: [ 100.0000 ; 59.0000 ]\n+  pt2: [ 100.0000 ; 57.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ffc0c0c0\n \n LINE:\n   pt1: [ 128.0000 ; 16.0000 ]\n-  pt2: [ 128.0000 ; 59.0000 ]\n+  pt2: [ 128.0000 ; 57.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ffc0c0c0\n \n LINE:\n   pt1: [ 156.0000 ; 16.0000 ]\n-  pt2: [ 156.0000 ; 59.0000 ]\n+  pt2: [ 156.0000 ; 57.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ffc0c0c0\n \n LINE:\n   pt1: [ 168.0000 ; 16.0000 ]\n-  pt2: [ 168.0000 ; 59.0000 ]\n+  pt2: [ 168.0000 ; 57.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ffc0c0c0\n@@ -187,7 +187,7 @@ public class A0003_TestResult {\n   text: Oct\n   position: [ 17.4989 ; 9.3333 ]\n   orientation: 0\n-  font: Serif.bold/12 [BOLD]\n+  font: SansSerif.bold/12 [BOLD]\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n@@ -202,7 +202,7 @@ public class A0003_TestResult {\n   text: Nov 2020\n   position: [ 72.7816 ; 9.3333 ]\n   orientation: 0\n-  font: Serif.bold/12 [BOLD]\n+  font: SansSerif.bold/12 [BOLD]\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n@@ -221,40 +221,40 @@ public class A0003_TestResult {\n   color: ffc0c0c0\n \n LINE:\n-  pt1: [ 0.0000 ; 29.0000 ]\n-  pt2: [ 168.0000 ; 29.0000 ]\n+  pt1: [ 0.0000 ; 27.0000 ]\n+  pt2: [ 168.0000 ; 27.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ffc0c0c0\n \n LINE:\n-  pt1: [ 131.0000 ; 42.0000 ]\n-  pt2: [ 131.0000 ; 51.5000 ]\n+  pt1: [ 131.0000 ; 40.0000 ]\n+  pt2: [ 131.0000 ; 49.5000 ]\n   stroke: 0.0-0.0-1.5\n   shadow: 0\n   color: ff181818\n \n LINE:\n-  pt1: [ 131.0000 ; 51.5000 ]\n-  pt2: [ 139.0000 ; 51.5000 ]\n+  pt1: [ 131.0000 ; 49.5000 ]\n+  pt2: [ 139.0000 ; 49.5000 ]\n   stroke: 0.0-0.0-1.5\n   shadow: 0\n   color: ff181818\n \n POLYGON:\n   points:\n-   - [ 135.0000 ; 47.5000 ]\n-   - [ 135.0000 ; 51.5000 ]\n-   - [ 135.0000 ; 55.5000 ]\n-   - [ 139.0000 ; 51.5000 ]\n+   - [ 135.0000 ; 45.5000 ]\n+   - [ 135.0000 ; 49.5000 ]\n+   - [ 135.0000 ; 53.5000 ]\n+   - [ 139.0000 ; 49.5000 ]\n   stroke: 0.0-0.0-1.5\n   shadow: 0\n   color: ff181818\n   backcolor: ff181818\n \n RECTANGLE:\n-  pt1: [ 2.0000 ; 31.0000 ]\n-  pt2: [ 9.0000 ; 42.0000 ]\n+  pt1: [ 2.0000 ; 29.0000 ]\n+  pt2: [ 9.0000 ; 40.0000 ]\n   xCorner: 0\n   yCorner: 0\n   stroke: 0.0-0.0-1.0\n@@ -263,29 +263,29 @@ public class A0003_TestResult {\n   backcolor: ffe6e6fa\n \n LINE:\n-  pt1: [ 2.0000 ; 31.0000 ]\n-  pt2: [ 7.0000 ; 31.0000 ]\n+  pt1: [ 2.0000 ; 29.0000 ]\n+  pt2: [ 7.0000 ; 29.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ffadd8e6\n \n LINE:\n-  pt1: [ 2.0000 ; 42.0000 ]\n-  pt2: [ 7.0000 ; 42.0000 ]\n+  pt1: [ 2.0000 ; 40.0000 ]\n+  pt2: [ 7.0000 ; 40.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ffadd8e6\n \n LINE:\n-  pt1: [ 2.0000 ; 31.0000 ]\n-  pt2: [ 2.0000 ; 42.0000 ]\n+  pt1: [ 2.0000 ; 29.0000 ]\n+  pt2: [ 2.0000 ; 40.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ffadd8e6\n \n RECTANGLE:\n-  pt1: [ 16.0000 ; 31.0000 ]\n-  pt2: [ 37.0000 ; 42.0000 ]\n+  pt1: [ 16.0000 ; 29.0000 ]\n+  pt2: [ 37.0000 ; 40.0000 ]\n   xCorner: 0\n   yCorner: 0\n   stroke: 0.0-0.0-1.0\n@@ -294,22 +294,22 @@ public class A0003_TestResult {\n   backcolor: ffe6e6fa\n \n LINE:\n-  pt1: [ 17.0000 ; 31.0000 ]\n-  pt2: [ 36.0000 ; 31.0000 ]\n+  pt1: [ 17.0000 ; 29.0000 ]\n+  pt2: [ 36.0000 ; 29.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ffadd8e6\n \n LINE:\n-  pt1: [ 17.0000 ; 42.0000 ]\n-  pt2: [ 36.0000 ; 42.0000 ]\n+  pt1: [ 17.0000 ; 40.0000 ]\n+  pt2: [ 36.0000 ; 40.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ffadd8e6\n \n RECTANGLE:\n-  pt1: [ 44.0000 ; 31.0000 ]\n-  pt2: [ 65.0000 ; 42.0000 ]\n+  pt1: [ 44.0000 ; 29.0000 ]\n+  pt2: [ 65.0000 ; 40.0000 ]\n   xCorner: 0\n   yCorner: 0\n   stroke: 0.0-0.0-1.0\n@@ -318,22 +318,22 @@ public class A0003_TestResult {\n   backcolor: ffe6e6fa\n \n LINE:\n-  pt1: [ 45.0000 ; 31.0000 ]\n-  pt2: [ 64.0000 ; 31.0000 ]\n+  pt1: [ 45.0000 ; 29.0000 ]\n+  pt2: [ 64.0000 ; 29.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ffadd8e6\n \n LINE:\n-  pt1: [ 45.0000 ; 42.0000 ]\n-  pt2: [ 64.0000 ; 42.0000 ]\n+  pt1: [ 45.0000 ; 40.0000 ]\n+  pt2: [ 64.0000 ; 40.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ffadd8e6\n \n RECTANGLE:\n-  pt1: [ 72.0000 ; 31.0000 ]\n-  pt2: [ 93.0000 ; 42.0000 ]\n+  pt1: [ 72.0000 ; 29.0000 ]\n+  pt2: [ 93.0000 ; 40.0000 ]\n   xCorner: 0\n   yCorner: 0\n   stroke: 0.0-0.0-1.0\n@@ -342,22 +342,22 @@ public class A0003_TestResult {\n   backcolor: ffe6e6fa\n \n LINE:\n-  pt1: [ 73.0000 ; 31.0000 ]\n-  pt2: [ 92.0000 ; 31.0000 ]\n+  pt1: [ 73.0000 ; 29.0000 ]\n+  pt2: [ 92.0000 ; 29.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ffadd8e6\n \n LINE:\n-  pt1: [ 73.0000 ; 42.0000 ]\n-  pt2: [ 92.0000 ; 42.0000 ]\n+  pt1: [ 73.0000 ; 40.0000 ]\n+  pt2: [ 92.0000 ; 40.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ffadd8e6\n \n RECTANGLE:\n-  pt1: [ 100.0000 ; 31.0000 ]\n-  pt2: [ 121.0000 ; 42.0000 ]\n+  pt1: [ 100.0000 ; 29.0000 ]\n+  pt2: [ 121.0000 ; 40.0000 ]\n   xCorner: 0\n   yCorner: 0\n   stroke: 0.0-0.0-1.0\n@@ -366,22 +366,22 @@ public class A0003_TestResult {\n   backcolor: ffe6e6fa\n \n LINE:\n-  pt1: [ 101.0000 ; 31.0000 ]\n-  pt2: [ 120.0000 ; 31.0000 ]\n+  pt1: [ 101.0000 ; 29.0000 ]\n+  pt2: [ 120.0000 ; 29.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ffadd8e6\n \n LINE:\n-  pt1: [ 101.0000 ; 42.0000 ]\n-  pt2: [ 120.0000 ; 42.0000 ]\n+  pt1: [ 101.0000 ; 40.0000 ]\n+  pt2: [ 120.0000 ; 40.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ffadd8e6\n \n RECTANGLE:\n-  pt1: [ 128.0000 ; 31.0000 ]\n-  pt2: [ 138.0000 ; 42.0000 ]\n+  pt1: [ 128.0000 ; 29.0000 ]\n+  pt2: [ 138.0000 ; 40.0000 ]\n   xCorner: 0\n   yCorner: 0\n   stroke: 0.0-0.0-1.0\n@@ -390,99 +390,99 @@ public class A0003_TestResult {\n   backcolor: ffe6e6fa\n \n LINE:\n-  pt1: [ 129.0000 ; 31.0000 ]\n-  pt2: [ 138.0000 ; 31.0000 ]\n+  pt1: [ 129.0000 ; 29.0000 ]\n+  pt2: [ 138.0000 ; 29.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ffadd8e6\n \n LINE:\n-  pt1: [ 129.0000 ; 42.0000 ]\n-  pt2: [ 138.0000 ; 42.0000 ]\n+  pt1: [ 129.0000 ; 40.0000 ]\n+  pt2: [ 138.0000 ; 40.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ffadd8e6\n \n LINE:\n-  pt1: [ 138.0000 ; 31.0000 ]\n-  pt2: [ 138.0000 ; 42.0000 ]\n+  pt1: [ 138.0000 ; 29.0000 ]\n+  pt2: [ 138.0000 ; 40.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ffadd8e6\n \n LINE:\n-  pt1: [ 11.0000 ; 31.0000 ]\n-  pt2: [ 13.0000 ; 31.0000 ]\n+  pt1: [ 11.0000 ; 29.0000 ]\n+  pt2: [ 13.0000 ; 29.0000 ]\n   stroke: 2.0-3.0-1.0\n   shadow: 0\n   color: ffadd8e6\n \n LINE:\n-  pt1: [ 11.0000 ; 42.0000 ]\n-  pt2: [ 13.0000 ; 42.0000 ]\n+  pt1: [ 11.0000 ; 40.0000 ]\n+  pt2: [ 13.0000 ; 40.0000 ]\n   stroke: 2.0-3.0-1.0\n   shadow: 0\n   color: ffadd8e6\n \n LINE:\n-  pt1: [ 39.0000 ; 31.0000 ]\n-  pt2: [ 41.0000 ; 31.0000 ]\n+  pt1: [ 39.0000 ; 29.0000 ]\n+  pt2: [ 41.0000 ; 29.0000 ]\n   stroke: 2.0-3.0-1.0\n   shadow: 0\n   color: ffadd8e6\n \n LINE:\n-  pt1: [ 39.0000 ; 42.0000 ]\n-  pt2: [ 41.0000 ; 42.0000 ]\n+  pt1: [ 39.0000 ; 40.0000 ]\n+  pt2: [ 41.0000 ; 40.0000 ]\n   stroke: 2.0-3.0-1.0\n   shadow: 0\n   color: ffadd8e6\n \n LINE:\n-  pt1: [ 67.0000 ; 31.0000 ]\n-  pt2: [ 69.0000 ; 31.0000 ]\n+  pt1: [ 67.0000 ; 29.0000 ]\n+  pt2: [ 69.0000 ; 29.0000 ]\n   stroke: 2.0-3.0-1.0\n   shadow: 0\n   color: ffadd8e6\n \n LINE:\n-  pt1: [ 67.0000 ; 42.0000 ]\n-  pt2: [ 69.0000 ; 42.0000 ]\n+  pt1: [ 67.0000 ; 40.0000 ]\n+  pt2: [ 69.0000 ; 40.0000 ]\n   stroke: 2.0-3.0-1.0\n   shadow: 0\n   color: ffadd8e6\n \n LINE:\n-  pt1: [ 95.0000 ; 31.0000 ]\n-  pt2: [ 97.0000 ; 31.0000 ]\n+  pt1: [ 95.0000 ; 29.0000 ]\n+  pt2: [ 97.0000 ; 29.0000 ]\n   stroke: 2.0-3.0-1.0\n   shadow: 0\n   color: ffadd8e6\n \n LINE:\n-  pt1: [ 95.0000 ; 42.0000 ]\n-  pt2: [ 97.0000 ; 42.0000 ]\n+  pt1: [ 95.0000 ; 40.0000 ]\n+  pt2: [ 97.0000 ; 40.0000 ]\n   stroke: 2.0-3.0-1.0\n   shadow: 0\n   color: ffadd8e6\n \n LINE:\n-  pt1: [ 123.0000 ; 31.0000 ]\n-  pt2: [ 125.0000 ; 31.0000 ]\n+  pt1: [ 123.0000 ; 29.0000 ]\n+  pt2: [ 125.0000 ; 29.0000 ]\n   stroke: 2.0-3.0-1.0\n   shadow: 0\n   color: ffadd8e6\n \n LINE:\n-  pt1: [ 123.0000 ; 42.0000 ]\n-  pt2: [ 125.0000 ; 42.0000 ]\n+  pt1: [ 123.0000 ; 40.0000 ]\n+  pt2: [ 125.0000 ; 40.0000 ]\n   stroke: 2.0-3.0-1.0\n   shadow: 0\n   color: ffadd8e6\n \n RECTANGLE:\n-  pt1: [ 142.0000 ; 46.0000 ]\n-  pt2: [ 149.0000 ; 57.0000 ]\n+  pt1: [ 142.0000 ; 44.0000 ]\n+  pt2: [ 149.0000 ; 55.0000 ]\n   xCorner: 0\n   yCorner: 0\n   stroke: 0.0-0.0-1.0\n@@ -491,29 +491,29 @@ public class A0003_TestResult {\n   backcolor: ffe2e2f0\n \n LINE:\n-  pt1: [ 142.0000 ; 46.0000 ]\n-  pt2: [ 147.0000 ; 46.0000 ]\n+  pt1: [ 142.0000 ; 44.0000 ]\n+  pt2: [ 147.0000 ; 44.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ff181818\n \n LINE:\n-  pt1: [ 142.0000 ; 57.0000 ]\n-  pt2: [ 147.0000 ; 57.0000 ]\n+  pt1: [ 142.0000 ; 55.0000 ]\n+  pt2: [ 147.0000 ; 55.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ff181818\n \n LINE:\n-  pt1: [ 142.0000 ; 46.0000 ]\n-  pt2: [ 142.0000 ; 57.0000 ]\n+  pt1: [ 142.0000 ; 44.0000 ]\n+  pt2: [ 142.0000 ; 55.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ff181818\n \n RECTANGLE:\n-  pt1: [ 156.0000 ; 46.0000 ]\n-  pt2: [ 166.0000 ; 57.0000 ]\n+  pt1: [ 156.0000 ; 44.0000 ]\n+  pt2: [ 166.0000 ; 55.0000 ]\n   xCorner: 0\n   yCorner: 0\n   stroke: 0.0-0.0-1.0\n@@ -522,103 +522,103 @@ public class A0003_TestResult {\n   backcolor: ffe2e2f0\n \n LINE:\n-  pt1: [ 157.0000 ; 46.0000 ]\n-  pt2: [ 166.0000 ; 46.0000 ]\n+  pt1: [ 157.0000 ; 44.0000 ]\n+  pt2: [ 166.0000 ; 44.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ff181818\n \n LINE:\n-  pt1: [ 157.0000 ; 57.0000 ]\n-  pt2: [ 166.0000 ; 57.0000 ]\n+  pt1: [ 157.0000 ; 55.0000 ]\n+  pt2: [ 166.0000 ; 55.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ff181818\n \n LINE:\n-  pt1: [ 166.0000 ; 46.0000 ]\n-  pt2: [ 166.0000 ; 57.0000 ]\n+  pt1: [ 166.0000 ; 44.0000 ]\n+  pt2: [ 166.0000 ; 55.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ff181818\n \n LINE:\n-  pt1: [ 151.0000 ; 46.0000 ]\n-  pt2: [ 153.0000 ; 46.0000 ]\n+  pt1: [ 151.0000 ; 44.0000 ]\n+  pt2: [ 153.0000 ; 44.0000 ]\n   stroke: 2.0-3.0-1.0\n   shadow: 0\n   color: ff181818\n \n LINE:\n-  pt1: [ 151.0000 ; 57.0000 ]\n-  pt2: [ 153.0000 ; 57.0000 ]\n+  pt1: [ 151.0000 ; 55.0000 ]\n+  pt2: [ 153.0000 ; 55.0000 ]\n   stroke: 2.0-3.0-1.0\n   shadow: 0\n   color: ff181818\n \n TEXT:\n   text: Prototype design\n-  position: [ 142.0000 ; 39.5556 ]\n+  position: [ 142.0000 ; 37.5556 ]\n   orientation: 0\n   font: SansSerif.plain/11 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n   text: Testing\n-  position: [ 170.0000 ; 54.5556 ]\n+  position: [ 170.0000 ; 52.5556 ]\n   orientation: 0\n   font: SansSerif.plain/11 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n LINE:\n-  pt1: [ 0.0000 ; 59.0000 ]\n-  pt2: [ 168.0000 ; 59.0000 ]\n+  pt1: [ 0.0000 ; 57.0000 ]\n+  pt2: [ 168.0000 ; 57.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ffc0c0c0\n \n LINE:\n-  pt1: [ 0.0000 ; 59.0000 ]\n-  pt2: [ 0.0000 ; 75.0000 ]\n+  pt1: [ 0.0000 ; 57.0000 ]\n+  pt2: [ 0.0000 ; 73.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ffc0c0c0\n \n LINE:\n-  pt1: [ 68.0000 ; 59.0000 ]\n-  pt2: [ 68.0000 ; 75.0000 ]\n+  pt1: [ 68.0000 ; 57.0000 ]\n+  pt2: [ 68.0000 ; 73.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ffc0c0c0\n \n TEXT:\n   text: Oct\n-  position: [ 17.4989 ; 68.3333 ]\n+  position: [ 17.4989 ; 66.3333 ]\n   orientation: 0\n-  font: Serif.bold/12 [BOLD]\n+  font: SansSerif.bold/12 [BOLD]\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n LINE:\n-  pt1: [ 168.0000 ; 59.0000 ]\n-  pt2: [ 168.0000 ; 75.0000 ]\n+  pt1: [ 168.0000 ; 57.0000 ]\n+  pt2: [ 168.0000 ; 73.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ffc0c0c0\n \n TEXT:\n   text: Nov 2020\n-  position: [ 72.7816 ; 68.3333 ]\n+  position: [ 72.7816 ; 66.3333 ]\n   orientation: 0\n-  font: Serif.bold/12 [BOLD]\n+  font: SansSerif.bold/12 [BOLD]\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n LINE:\n-  pt1: [ 0.0000 ; 75.0000 ]\n-  pt2: [ 168.0000 ; 75.0000 ]\n+  pt1: [ 0.0000 ; 73.0000 ]\n+  pt2: [ 168.0000 ; 73.0000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ffc0c0c0",
      "parent_sha": "e991c4699be76588535ef1f4ba2bd2d0908ae80f"
    }
  },
  {
    "oid": "5d445ae80187863aa86177f90646823fa9ddca04",
    "message": "java-20, create uri directly, not via url.",
    "date": "2023-07-08T20:58:42Z",
    "url": "https://github.com/plantuml/plantuml/commit/5d445ae80187863aa86177f90646823fa9ddca04",
    "details": {
      "sha": "7ea2ac4c783a6a89cc630b0d448209ef5a52545c",
      "filename": "src/net/sourceforge/plantuml/Splash.java",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/plantuml/plantuml/blob/5d445ae80187863aa86177f90646823fa9ddca04/src%2Fnet%2Fsourceforge%2Fplantuml%2FSplash.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/5d445ae80187863aa86177f90646823fa9ddca04/src%2Fnet%2Fsourceforge%2Fplantuml%2FSplash.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2FSplash.java?ref=5d445ae80187863aa86177f90646823fa9ddca04",
      "patch": "@@ -5,12 +5,12 @@\n  * (C) Copyright 2009-2024, Arnaud Roques\n  *\n  * Project Info:  https://plantuml.com\n- * \n+ *\n  * If you like this project or if you find it useful, you can support us at:\n- * \n+ *\n  * https://plantuml.com/patreon (only 1$ per month!)\n  * https://plantuml.com/paypal\n- * \n+ *\n  * This file is part of PlantUML.\n  *\n  * PlantUML is free software; you can redistribute it and/or modify it\n@@ -48,7 +48,7 @@\n import java.awt.event.MouseMotionListener;\n import java.awt.geom.Rectangle2D;\n import java.awt.image.BufferedImage;\n-import java.net.URL;\n+import java.net.URI;\n import java.util.concurrent.atomic.AtomicInteger;\n \n import net.sourceforge.plantuml.log.Logme;\n@@ -140,7 +140,7 @@ public void mousePressed(MouseEvent event) {\n \tpublic void mouseClicked(MouseEvent event) {\n \t\tif (link != LINK_NORMAL) {\n \t\t\ttry {\n-\t\t\t\tDesktop.getDesktop().browse(new URL(\"https://plantuml.com\").toURI());\n+\t\t\t\tDesktop.getDesktop().browse(new URI(\"https://plantuml.com\"));\n \t\t\t} catch (Exception e) {\n \t\t\t\tLogme.error(e);\n \t\t\t}",
      "parent_sha": "f530bf4d308942d5e8081478f20054e620ff7de5"
    }
  },
  {
    "oid": "c38b269089a4272bc124354ef6c50a87485a6440",
    "message": "Simplify StringBounder code in ImageBuilder",
    "date": "2021-10-02T19:11:03Z",
    "url": "https://github.com/plantuml/plantuml/commit/c38b269089a4272bc124354ef6c50a87485a6440",
    "details": {
      "sha": "887a53818b571532a64a4dd7bfa0edc37bffc780",
      "filename": "src/net/sourceforge/plantuml/ugraphic/ImageBuilder.java",
      "status": "modified",
      "additions": 7,
      "deletions": 12,
      "changes": 19,
      "blob_url": "https://github.com/plantuml/plantuml/blob/c38b269089a4272bc124354ef6c50a87485a6440/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2FImageBuilder.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/c38b269089a4272bc124354ef6c50a87485a6440/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2FImageBuilder.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2FImageBuilder.java?ref=c38b269089a4272bc124354ef6c50a87485a6440",
      "patch": "@@ -121,6 +121,7 @@ public class ImageBuilder {\n \tprivate String metadata;\n \tprivate long seed = 42;\n \tprivate ISkinParam skinParam;\n+\tprivate StringBounder stringBounder;\n \tprivate int status = 0;\n \tprivate TitledDiagram titledDiagram;\n \tprivate boolean randomPixel;\n@@ -140,6 +141,7 @@ public static ImageBuilder plainPngBuilder(UDrawable drawable) {\n \n \tprivate ImageBuilder(FileFormatOption fileFormatOption) {\n \t\tthis.fileFormatOption = fileFormatOption;\n+\t\tthis.stringBounder = fileFormatOption.getDefaultStringBounder(SvgCharSizeHack.NO_HACK);\n \t}\n \n \tpublic ImageBuilder annotations(boolean annotations) {\n@@ -198,10 +200,6 @@ public ImageBuilder status(int status) {\n \t\treturn this;\n \t}\n \n-\tprivate SvgCharSizeHack getSvgCharSizeHack() {\n-\t\treturn skinParam == null ? SvgCharSizeHack.NO_HACK : skinParam;\n-\t}\n-\n \tprivate String getSvgLinkTarget() {\n \t\tif (fileFormatOption.getSvgLinkTarget() != null) {\n \t\t\treturn fileFormatOption.getSvgLinkTarget();\n@@ -219,6 +217,7 @@ public ImageBuilder warningOrError(String warningOrError) {\n \n \tpublic ImageBuilder styled(TitledDiagram diagram) {\n \t\tskinParam = diagram.getSkinParam();\n+\t\tstringBounder = fileFormatOption.getDefaultStringBounder(skinParam);\n \t\tanimation = diagram.getAnimation();\n \t\tannotations = true;\n \t\tbackcolor = diagram.calculateBackColor();\n@@ -235,8 +234,6 @@ public ImageData write(OutputStream os) throws IOException {\n \t\tif (annotations && titledDiagram != null) {\n \t\t\tif (!(udrawable instanceof TextBlock))\n \t\t\t\tthrow new IllegalStateException(\"udrawable is not a TextBlock\");\n-\t\t\tfinal ISkinParam skinParam = titledDiagram.getSkinParam();\n-\t\t\tfinal StringBounder stringBounder = fileFormatOption.getDefaultStringBounder(skinParam);\n \t\t\tfinal AnnotatedWorker annotatedWorker = new AnnotatedWorker(titledDiagram, skinParam, stringBounder);\n \t\t\tudrawable = annotatedWorker.addAdd((TextBlock) udrawable);\n \t\t}\n@@ -325,8 +322,7 @@ private void drawRandomPoint(UGraphic ug2) {\n \n \tprivate Dimension2D getFinalDimension() {\n \t\tif (dimension == null) {\n-\t\t\tfinal LimitFinder limitFinder = new LimitFinder(\n-\t\t\t\t\tfileFormatOption.getDefaultStringBounder(getSvgCharSizeHack()), true);\n+\t\t\tfinal LimitFinder limitFinder = new LimitFinder(stringBounder, true);\n \t\t\tudrawable.drawU(limitFinder);\n \t\t\tdimension = new Dimension2DDouble(limitFinder.getMaxX() + 1 + margin.getLeft() + margin.getRight(),\n \t\t\t\t\tlimitFinder.getMaxY() + 1 + margin.getTop() + margin.getBottom());\n@@ -418,9 +414,9 @@ private UGraphic createUGraphic(FileFormatOption option, final Dimension2D dim,\n \t\tcase VDX:\n \t\t\treturn new UGraphicVdx(backcolor, colorMapper);\n \t\tcase LATEX:\n-\t\t\treturn new UGraphicTikz(backcolor, colorMapper, FileFormat.LATEX.getDefaultStringBounder(option.getTikzFontDistortion()), scaleFactor, true);\n+\t\t\treturn new UGraphicTikz(backcolor, colorMapper, stringBounder, scaleFactor, true);\n \t\tcase LATEX_NO_PREAMBLE:\n-\t\t\treturn new UGraphicTikz(backcolor, colorMapper, FileFormat.LATEX.getDefaultStringBounder(option.getTikzFontDistortion()), scaleFactor, false);\n+\t\t\treturn new UGraphicTikz(backcolor, colorMapper, stringBounder, scaleFactor, false);\n \t\tcase BRAILLE_PNG:\n \t\t\treturn new UGraphicBraille(backcolor, colorMapper);\n \t\tcase UTXT:\n@@ -441,7 +437,7 @@ private UGraphic createUGraphicSVG(double scaleFactor, Dimension2D dim) {\n \t\tfinal boolean svgDimensionStyle = skinParam == null || skinParam.svgDimensionStyle();\n \t\tfinal String svgLinkTarget = getSvgLinkTarget();\n \t\tfinal UGraphicSvg ug = new UGraphicSvg(backcolor, svgDimensionStyle, dim, colorMapper, false, scaleFactor,\n-\t\t\t\tsvgLinkTarget, hoverPathColorRGB, seed, preserveAspectRatio, FileFormat.SVG.getDefaultStringBounder(getSvgCharSizeHack()), lengthAdjust);\n+\t\t\t\tsvgLinkTarget, hoverPathColorRGB, seed, preserveAspectRatio, stringBounder, lengthAdjust);\n \t\treturn ug;\n \n \t}\n@@ -461,7 +457,6 @@ private UGraphic createUGraphicPNG(double scaleFactor, final Dimension2D dim, An\n \t\t\tbackColor = new Color(0, 0, 0, 0);\n \t\t}\n \n-\t\tfinal StringBounder stringBounder = FileFormat.PNG.getDefaultStringBounder();\n \t\tfinal EmptyImageBuilder builder = new EmptyImageBuilder(watermark, (int) (dim.getWidth() * scaleFactor),\n \t\t\t\t(int) (dim.getHeight() * scaleFactor), backColor, stringBounder);\n \t\tfinal Graphics2D graphics2D = builder.getGraphics2D();",
      "parent_sha": "102d67271c5608275ad0241599c066815dc26a5d"
    }
  },
  {
    "oid": "37344654416e2de28e0385ff2304c3c8bb458ef3",
    "message": "Style associations",
    "date": "2023-11-16T00:36:34Z",
    "url": "https://github.com/plantuml/plantuml/commit/37344654416e2de28e0385ff2304c3c8bb458ef3",
    "details": {
      "sha": "a43da9d3c34f5076b24d55f7e872b140a147aeab",
      "filename": "src/net/sourceforge/plantuml/cheneer/command/CommandAssociate.java",
      "status": "modified",
      "additions": 9,
      "deletions": 3,
      "changes": 12,
      "blob_url": "https://github.com/plantuml/plantuml/blob/37344654416e2de28e0385ff2304c3c8bb458ef3/src%2Fnet%2Fsourceforge%2Fplantuml%2Fcheneer%2Fcommand%2FCommandAssociate.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/37344654416e2de28e0385ff2304c3c8bb458ef3/src%2Fnet%2Fsourceforge%2Fplantuml%2Fcheneer%2Fcommand%2FCommandAssociate.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fcheneer%2Fcommand%2FCommandAssociate.java?ref=37344654416e2de28e0385ff2304c3c8bb458ef3",
      "patch": "@@ -42,6 +42,8 @@\n import net.sourceforge.plantuml.command.CommandExecutionResult;\n import net.sourceforge.plantuml.command.SingleLineCommand2;\n import net.sourceforge.plantuml.decoration.LinkDecor;\n+import net.sourceforge.plantuml.decoration.LinkMiddleDecor;\n+import net.sourceforge.plantuml.decoration.LinkStyle;\n import net.sourceforge.plantuml.decoration.LinkType;\n import net.sourceforge.plantuml.klimt.color.NoSuchColorException;\n import net.sourceforge.plantuml.klimt.creole.Display;\n@@ -77,6 +79,8 @@ protected CommandExecutionResult executeArg(ChenEerDiagram diagram, LineLocation\n       throws NoSuchColorException {\n     final String name1 = diagram.cleanId(arg.get(\"NAME1\", 0));\n     final String name2 = diagram.cleanId(arg.get(\"NAME2\", 0));\n+    final boolean isDouble = arg.get(\"PARTICIPATION\", 0).equals(\"=\");\n+    final String cardinality = arg.get(\"CARDINALITY\", 0);\n \n     final Quark<Entity> quark1 = diagram.quarkInContext(true, name1);\n     final Entity entity1 = quark1.getData();\n@@ -90,11 +94,13 @@ protected CommandExecutionResult executeArg(ChenEerDiagram diagram, LineLocation\n       return CommandExecutionResult.error(\"No such entity: \" + name2);\n     }\n \n-    final LinkType linkType = new LinkType(LinkDecor.NONE, LinkDecor.NONE);\n+    LinkType linkType = new LinkType(LinkDecor.NONE, LinkDecor.NONE);\n+    if (isDouble) {\n+      linkType = linkType.goBold();\n+    }\n     final Link link = new Link(diagram.getEntityFactory(), diagram.getCurrentStyleBuilder(), entity1, entity2,\n         linkType,\n-        // TODO: Cardinality\n-        LinkArg.build(Display.NULL, 3));\n+        LinkArg.build(Display.getWithNewlines(cardinality), 3));\n     link.setPortMembers(diagram.getPortId(entity1.getName()), diagram.getPortId(entity2.getName()));\n     diagram.addLink(link);\n ",
      "parent_sha": "de74e7fae9d971ece7729a26053e86bba6b1b840"
    }
  },
  {
    "oid": "1603fa93fa3fa17210f1f70593639ea72c10d354",
    "message": "\ud83d\udc1b fix scale issue for timing diagram\n\nfix https://github.com/plantuml/plantuml/issues/2144",
    "date": "2025-04-07T12:33:50Z",
    "url": "https://github.com/plantuml/plantuml/commit/1603fa93fa3fa17210f1f70593639ea72c10d354",
    "details": {
      "sha": "344af58746b6ba9183d5760957716a33a847c7d7",
      "filename": "src/main/java/net/sourceforge/plantuml/timingdiagram/TimingRuler.java",
      "status": "modified",
      "additions": 24,
      "deletions": 18,
      "changes": 42,
      "blob_url": "https://github.com/plantuml/plantuml/blob/1603fa93fa3fa17210f1f70593639ea72c10d354/src%2Fmain%2Fjava%2Fnet%2Fsourceforge%2Fplantuml%2Ftimingdiagram%2FTimingRuler.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/1603fa93fa3fa17210f1f70593639ea72c10d354/src%2Fmain%2Fjava%2Fnet%2Fsourceforge%2Fplantuml%2Ftimingdiagram%2FTimingRuler.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fmain%2Fjava%2Fnet%2Fsourceforge%2Fplantuml%2Ftimingdiagram%2FTimingRuler.java?ref=1603fa93fa3fa17210f1f70593639ea72c10d354",
      "patch": "@@ -98,35 +98,41 @@ public void scaleInPixels(long tick, long pixel) {\n \t\tthis.forcedTickUnitary = tick;\n \t}\n \n-\tprivate long getTickUnitary() {\n+\tprivate long getOptimalTickUnit() {\n \t\tif (forcedTickUnitary == 0) {\n-\t\t\tfinal long highestCommonFactor = highestCommonFactor();\n-\t\t\tif (highestCommonFactor > 1)\n-\t\t\t\treturn highestCommonFactor;\n-\t\t\t/*\n-\t\t\t * Normally, we use the highest common factor (HCF) of significant timing\n-\t\t\t * values. However, if the HCF is 1 (implying no suitable common scale), we fall\n-\t\t\t * back to an approximate calculation based on the diagram width in pixels and\n-\t\t\t * the time range (delta). This ensures readability and prevents extremely long\n-\t\t\t * diagrams.\n-\t\t\t */\n-\t\t\tfinal double delta = getMax().getTime().doubleValue() - getMin().getTime().doubleValue();\n-\t\t\tfinal double totalWidth = 1000.0;\n-\t\t\treturn Math.round(1 + (tickIntervalInPixels * delta / totalWidth));\n+\t\t\tfinal long hcfTickUnit = calculateHighestCommonFactor();\n+\t\t\tfinal double maxDiagramWidth = 4000.0;\n+\t\t\tif (hcfTickUnit == 1 && calculateDiagramWidth(hcfTickUnit) > maxDiagramWidth) {\n+\t\t\t\t/*\n+\t\t\t\t * Typically, we determine the optimal tick unit using the highest common factor\n+\t\t\t\t * (HCF) of all significant timing values. However, when the HCF is too small\n+\t\t\t\t * (e.g., equal to 1), the resulting diagram becomes excessively wide. In such\n+\t\t\t\t * cases, we fall back to an approximate tick unit calculation based on the\n+\t\t\t\t * diagram's pixel width and the total time range, ensuring the diagram remains\n+\t\t\t\t * clear and readable.\n+\t\t\t\t */\n+\t\t\t\tfinal double totalTimeRange = getMax().getTime().doubleValue() - getMin().getTime().doubleValue();\n+\t\t\t\treturn Math.round(1 + (tickIntervalInPixels * totalTimeRange / maxDiagramWidth));\n+\t\t\t}\n+\t\t\treturn hcfTickUnit;\n \t\t}\n \t\treturn forcedTickUnitary;\n \t}\n \n \tpublic double getWidth() {\n \t\tif (times.size() == 0)\n \t\t\treturn 100;\n+\t\treturn calculateDiagramWidth(getOptimalTickUnit());\n+\t}\n+\n+\tprivate double calculateDiagramWidth(final long tickUnitary) {\n \t\tfinal double delta = getMax().getTime().doubleValue() - getMin().getTime().doubleValue();\n-\t\treturn (delta / getTickUnitary() + 1) * tickIntervalInPixels;\n+\t\treturn (delta / tickUnitary + 1) * tickIntervalInPixels;\n \t}\n \n \tprivate long highestCommonFactorInternal = -1;\n \n-\tprivate long highestCommonFactor() {\n+\tprivate long calculateHighestCommonFactor() {\n \t\tif (highestCommonFactorInternal == -1)\n \t\t\tfor (long tick : getAbsolutesTicks())\n \t\t\t\tif (highestCommonFactorInternal == -1)\n@@ -157,7 +163,7 @@ private int getNbTick() {\n \t\t\treturn 1;\n \n \t\tfinal long delta = getMax().getTime().longValue() - getMin().getTime().longValue();\n-\t\treturn Math.min(1000, (int) (1 + delta / getTickUnitary()));\n+\t\treturn Math.min(1000, (int) (1 + delta / getOptimalTickUnit()));\n \t}\n \n \tpublic final double getPosInPixel(TimeTick when) {\n@@ -166,7 +172,7 @@ public final double getPosInPixel(TimeTick when) {\n \n \tprivate double getPosInPixelInternal(double time) {\n \t\ttime -= getMin().getTime().doubleValue();\n-\t\treturn time / getTickUnitary() * tickIntervalInPixels;\n+\t\treturn time / getOptimalTickUnit() * tickIntervalInPixels;\n \t}\n \n \tpublic void addTime(TimeTick time) {",
      "parent_sha": "6b2abaefbde3bcabf8f29e79b97e33e808d95a33"
    }
  },
  {
    "oid": "d85f96256ecf622a581ee663d75e6dd501808f0e",
    "message": "Prevent IndexOutOfBoundsException in equation rendering by checking non-empty 'texsymbol' strings\n\nThis commit introduces a check before accessing the first character of 'texsymbol' strings in equation rendering, preventing IndexOutOfBoundsException when custom functions names are used which can lead to an empty string. This change ensures that equations custom variables names ending with standard function strings are handled gracefully without errors",
    "date": "2024-03-04T08:58:29Z",
    "url": "https://github.com/plantuml/plantuml/commit/d85f96256ecf622a581ee663d75e6dd501808f0e",
    "details": {
      "sha": "7a23f266783b0d3404c355c7a0c8ba1d756ae85a",
      "filename": "src/net/sourceforge/plantuml/math/ASCIIMathTeXImg.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/plantuml/plantuml/blob/d85f96256ecf622a581ee663d75e6dd501808f0e/src%2Fnet%2Fsourceforge%2Fplantuml%2Fmath%2FASCIIMathTeXImg.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/d85f96256ecf622a581ee663d75e6dd501808f0e/src%2Fnet%2Fsourceforge%2Fplantuml%2Fmath%2FASCIIMathTeXImg.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fmath%2FASCIIMathTeXImg.java?ref=d85f96256ecf622a581ee663d75e6dd501808f0e",
      "patch": "@@ -602,7 +602,7 @@ private String[] AMTparseSexpr(String str) {\n \t\tcase CONST:\n \t\t\tstr = AMremoveCharsAndBlanks(str, symbol.input.length());\n \t\t\tString texsymbol = AMTgetTeXsymbol(symbol);\n-\t\t\tif (texsymbol.charAt(0) == '\\\\' || symbol.tag.equals(\"mo\"))\n+\t\t\tif (texsymbol.isEmpty() || texsymbol.charAt(0) == '\\\\' || symbol.tag.equals(\"mo\"))\n \t\t\t\treturn new String[] { texsymbol, str };\n \t\t\telse {\n \t\t\t\treturn new String[] { \"{\" + texsymbol + \"}\", str };\n@@ -676,7 +676,7 @@ else if (symbol == AMquote)\n \t\t\tif (result[0] == null)\n \t\t\t\treturn new String[] { \"{\" + AMTgetTeXsymbol(symbol) + \"}\", str };\n \t\t\tif (symbol.hasFlag(\"func\")) { // functions hack\n-\t\t\t\tst = \"\" + str.charAt(0);\n+\t\t\t\tst = \"\" + (str.isEmpty() ? \"\" : str.charAt(0));\n \t\t\t\tif (st.equals(\"^\") || st.equals(\"_\") || st.equals(\"/\") || st.equals(\"|\") || st.equals(\",\")\n \t\t\t\t\t\t|| (symbol.input.length() == 1 && symbol.input.matches(\"\\\\w\") && !st.equals(\"(\"))) {\n \t\t\t\t\treturn new String[] { \"{\" + AMTgetTeXsymbol(symbol) + \"}\", str };",
      "parent_sha": "a0be1ed677c45b3f21ba7aebd8173789df1f6bd4"
    }
  },
  {
    "oid": "a87f84406465e29784342173ee1eb2733d135b81",
    "message": "fix: missing label in activity diagrams\nhttps://github.com/plantuml/plantuml/issues/1622#issuecomment-1847091587",
    "date": "2023-12-11T18:03:13Z",
    "url": "https://github.com/plantuml/plantuml/commit/a87f84406465e29784342173ee1eb2733d135b81",
    "details": {
      "sha": "d8362f6561764799ac6ea9d8f7087ef4d3a45456",
      "filename": "src/net/sourceforge/plantuml/activitydiagram3/InstructionList.java",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/plantuml/plantuml/blob/a87f84406465e29784342173ee1eb2733d135b81/src%2Fnet%2Fsourceforge%2Fplantuml%2Factivitydiagram3%2FInstructionList.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/a87f84406465e29784342173ee1eb2733d135b81/src%2Fnet%2Fsourceforge%2Fplantuml%2Factivitydiagram3%2FInstructionList.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Factivitydiagram3%2FInstructionList.java?ref=a87f84406465e29784342173ee1eb2733d135b81",
      "patch": "@@ -129,8 +129,13 @@ public Gtile createGtile(ISkinParam skinParam, StringBounder stringBounder) {\n \n \t@Override\n \tpublic Ftile createFtile(FtileFactory factory) {\n-\t\tif (all.size() == 0)\n-\t\t\treturn new FtileEmpty(factory.skinParam(), defaultSwimlane);\n+\t\tif (all.size() == 0) {\n+\t\t\tFtile result = new FtileEmpty(factory.skinParam(), defaultSwimlane);\n+\t\t\t// Not a typo, in that case, we decide to decorate the entry link.\n+\t\t\tif (outlinkRendering != null)\n+\t\t\t\tresult = factory.decorateIn(result, outlinkRendering);\n+\t\t\treturn result;\n+\t\t}\n \n \t\tfinal List<WeldingPoint> breaks = new ArrayList<>();\n \t\tFtile result = eventuallyAddNote(factory, null, getSwimlaneIn(), VerticalAlignment.CENTER);",
      "parent_sha": "a061b11305e8754a958fd8f59ed336de0c99f7b5"
    }
  },
  {
    "oid": "4c2d1cc3efcf6669944453285d69007c516e7a05",
    "message": "\ud83d\udcdd change `Graphviz instance` to `Graphviz implementation` on javadoc (#2015)",
    "date": "2024-12-18T12:26:36Z",
    "url": "https://github.com/plantuml/plantuml/commit/4c2d1cc3efcf6669944453285d69007c516e7a05",
    "details": {
      "sha": "adbda9ad79d61bfbb3f06e94d3943f8f5553b41f",
      "filename": "src/net/sourceforge/plantuml/dot/GraphvizFactory.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/plantuml/plantuml/blob/4c2d1cc3efcf6669944453285d69007c516e7a05/src%2Fnet%2Fsourceforge%2Fplantuml%2Fdot%2FGraphvizFactory.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/4c2d1cc3efcf6669944453285d69007c516e7a05/src%2Fnet%2Fsourceforge%2Fplantuml%2Fdot%2FGraphvizFactory.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fdot%2FGraphvizFactory.java?ref=4c2d1cc3efcf6669944453285d69007c516e7a05",
      "patch": "@@ -43,12 +43,12 @@\n public interface GraphvizFactory {\n \n     /**\n-     * Creates a {@link Graphviz} instance if possible with the specified parameters.\n+     * Creates a {@link Graphviz} implementation if possible with the specified parameters.\n      *\n      * @param skinParam\n      * @param dotString\n      * @param type\n-     * @return a {@link Graphviz} instance or {@code null}.\n+     * @return a {@link Graphviz} implementation or {@code null}.\n      */\n     Graphviz create(ISkinParam skinParam, String dotString, String... type);\n }",
      "parent_sha": "0a22623c026d1d96bf8586d55e520ca912ef5fda"
    }
  },
  {
    "oid": "187a6b83081f1e9263801e351028613d73b37608",
    "message": "fix: protection against infinite loop",
    "date": "2024-10-02T20:19:09Z",
    "url": "https://github.com/plantuml/plantuml/commit/187a6b83081f1e9263801e351028613d73b37608",
    "details": {
      "sha": "eb6c7b0906580396e8a8d274cfc0c8121d77f02f",
      "filename": "src/net/sourceforge/plantuml/abel/Entity.java",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/plantuml/plantuml/blob/187a6b83081f1e9263801e351028613d73b37608/src%2Fnet%2Fsourceforge%2Fplantuml%2Fabel%2FEntity.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/187a6b83081f1e9263801e351028613d73b37608/src%2Fnet%2Fsourceforge%2Fplantuml%2Fabel%2FEntity.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fabel%2FEntity.java?ref=187a6b83081f1e9263801e351028613d73b37608",
      "patch": "@@ -448,7 +448,11 @@ public boolean isRemoved() {\n \t\tif (isRoot())\n \t\t\treturn false;\n \n-\t\tif (getParentContainer() != null && getParentContainer().isRemoved())\n+\t\tfinal Entity parentContainer = getParentContainer();\n+\t\tif (parentContainer == this)\n+\t\t\treturn false;\n+\t\t\n+\t\tif (parentContainer != null && parentContainer.isRemoved())\n \t\t\treturn true;\n \n \t\treturn isRemovedInternal();",
      "parent_sha": "8b239508682bd56dbb7f6b7dd86f387663aec476"
    }
  },
  {
    "oid": "113265a90f1ec0137bf288bcf0b70db0632a8c2a",
    "message": "\ud83d\udea7 prepare jaws deployment",
    "date": "2024-12-12T16:53:47Z",
    "url": "https://github.com/plantuml/plantuml/commit/113265a90f1ec0137bf288bcf0b70db0632a8c2a",
    "details": {
      "sha": "9ca0cbe3dd89c3df319d3e6a58903871e11808fa",
      "filename": "src/net/atmp/ImageBuilder.java",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/plantuml/plantuml/blob/113265a90f1ec0137bf288bcf0b70db0632a8c2a/src%2Fnet%2Fatmp%2FImageBuilder.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/113265a90f1ec0137bf288bcf0b70db0632a8c2a/src%2Fnet%2Fatmp%2FImageBuilder.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fatmp%2FImageBuilder.java?ref=113265a90f1ec0137bf288bcf0b70db0632a8c2a",
      "patch": "@@ -37,7 +37,6 @@\n \n import java.awt.Color;\n import java.awt.Graphics2D;\n-import java.awt.geom.Dimension2D;\n import java.awt.image.BufferedImage;\n import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n@@ -252,7 +251,7 @@ public byte[] writeByteArray() throws IOException {\n \tprivate ImageData writeImageInternal(OutputStream os) throws IOException {\n \t\tXDimension2D dim = getFinalDimension();\n \t\tXDimension2D dimWarning = null;\n-\t\tif (warnings.size() > 0) {\n+\t\tif (warnings != null && warnings.size() > 0) {\n \t\t\tdimWarning = getWarningDimension(fileFormatOption.getFileFormat().getDefaultStringBounder());\n \t\t\tdim = dim.atLeast(dimWarning.getWidth(), 0);\n \t\t\tdim = dim.delta(15, dimWarning.getHeight() + 20);\n@@ -266,7 +265,7 @@ private ImageData writeImageInternal(OutputStream os) throws IOException {\n \t\tUGraphic ug = createUGraphic(dim, scaleFactor,\n \t\t\t\ttitledDiagram == null ? Pragma.createEmpty() : titledDiagram.getPragma());\n \n-\t\tif (warnings.size() > 0) {\n+\t\tif (warnings != null && warnings.size() > 0) {\n \t\t\tdrawWarning(dimWarning, ug.apply(UTranslate.dy(5)), dim.getWidth());\n \t\t\tug = ug.apply(UTranslate.dy(dimWarning.getHeight() + 20));\n \t\t}",
      "parent_sha": "d3b4e7af35cb224a07dd3c1fe40c6bd64fcf052c"
    }
  },
  {
    "oid": "aa547f85ed7d3cd576618aa550ad2669cd97ac00",
    "message": "Bring back whitespaces to doc text",
    "date": "2021-03-06T10:06:53Z",
    "url": "https://github.com/plantuml/plantuml/commit/aa547f85ed7d3cd576618aa550ad2669cd97ac00",
    "details": {
      "sha": "ecbaabe8f54d19ef90f8b00d6a3234b0cfb33a55",
      "filename": "src/net/sourceforge/plantuml/svg/SvgGraphics.java",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/plantuml/plantuml/blob/aa547f85ed7d3cd576618aa550ad2669cd97ac00/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsvg%2FSvgGraphics.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/aa547f85ed7d3cd576618aa550ad2669cd97ac00/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsvg%2FSvgGraphics.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsvg%2FSvgGraphics.java?ref=aa547f85ed7d3cd576618aa550ad2669cd97ac00",
      "patch": "@@ -5,12 +5,12 @@\n  * (C) Copyright 2009-2020, Arnaud Roques\n  *\n  * Project Info:  http://plantuml.com\n- *\n+ * \n  * If you like this project or if you find it useful, you can support us at:\n- *\n+ * \n  * http://plantuml.com/patreon (only 1$ per month!)\n  * http://plantuml.com/paypal\n- *\n+ * \n  * This file is part of PlantUML.\n  *\n  * PlantUML is free software; you can redistribute it and/or modify it\n@@ -30,7 +30,7 @@\n  *\n  *\n  * Original Author:  Arnaud Roques\n- *\n+ * \n  *\n  */\n package net.sourceforge.plantuml.svg;",
      "parent_sha": "6928eb806b0fd6878f93a8575de8a2e96c0d2dcd"
    }
  },
  {
    "oid": "f617c1403231a22cd845274851990a15d40b7e07",
    "message": "fix: issue 1531 style for backward element",
    "date": "2024-07-23T09:04:29Z",
    "url": "https://github.com/plantuml/plantuml/commit/f617c1403231a22cd845274851990a15d40b7e07",
    "details": {
      "sha": "ed928ee09c7ec9a835b95fc64b3220ff30c13f08",
      "filename": "src/net/sourceforge/plantuml/activitydiagram3/InstructionRepeat.java",
      "status": "modified",
      "additions": 7,
      "deletions": 6,
      "changes": 13,
      "blob_url": "https://github.com/plantuml/plantuml/blob/f617c1403231a22cd845274851990a15d40b7e07/src%2Fnet%2Fsourceforge%2Fplantuml%2Factivitydiagram3%2FInstructionRepeat.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/f617c1403231a22cd845274851990a15d40b7e07/src%2Fnet%2Fsourceforge%2Fplantuml%2Factivitydiagram3%2FInstructionRepeat.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Factivitydiagram3%2FInstructionRepeat.java?ref=f617c1403231a22cd845274851990a15d40b7e07",
      "patch": "@@ -76,7 +76,8 @@ public class InstructionRepeat extends AbstractInstruction implements Instructio\n \n \tprivate Display backward = Display.NULL;\n \n-\tprivate Stereotype stereotype;\n+\tprivate Stereotype stereotypeLoop;\n+\tprivate Stereotype stereotypeBack;\n \tprivate LinkRendering incoming1 = LinkRendering.none();\n \tprivate LinkRendering incoming2 = LinkRendering.none();\n \tprivate List<PositionedNote> backwardNotes = new ArrayList<>();\n@@ -105,7 +106,7 @@ public InstructionRepeat(Swimlanes swimlanes, Instruction parent, LinkRendering\n \t\tthis.parent = parent;\n \t\tthis.nextLinkRenderer = Objects.requireNonNull(nextLinkRenderer);\n \t\tthis.colors = colors;\n-\t\tthis.stereotype = stereotype;\n+\t\tthis.stereotypeLoop = stereotype;\n \t}\n \n \tprivate boolean isLastOfTheParent() {\n@@ -122,7 +123,7 @@ public void setBackward(Display label, Swimlane swimlaneBackward, BoxStyle boxSt\n \t\tthis.boxStyle = boxStyle;\n \t\tthis.incoming1 = incoming1;\n \t\tthis.incoming2 = incoming2;\n-\t\tthis.stereotype = stereotype;\n+\t\tthis.stereotypeBack = stereotype;\n \t}\n \n \tpublic boolean hasBackward() {\n@@ -161,8 +162,8 @@ public Ftile createFtile(FtileFactory factory) {\n \t\tfinal Ftile decorateOut = factory.decorateOut(repeatList.createFtile(factory), endRepeatLinkRendering);\n \t\tif (this.testCalled == false && incoming1.isNone())\n \t\t\tincoming1 = swimlanes.nextLinkRenderer();\n-\t\tfinal Ftile result = factory.repeat(boxStyleIn, stereotype, swimlane, swimlaneOut, startLabel, decorateOut, test, yes, out,\n-\t\t\t\tcolors, back, isLastOfTheParent(), incoming1, incoming2, currentStyleBuilder);\n+\t\tfinal Ftile result = factory.repeat(boxStyleIn, stereotypeLoop, swimlane, swimlaneOut, startLabel, decorateOut,\n+\t\t\t\ttest, yes, out, colors, back, isLastOfTheParent(), incoming1, incoming2, currentStyleBuilder);\n \t\tif (killed)\n \t\t\treturn new FtileKilled(result);\n \n@@ -173,7 +174,7 @@ private Ftile getFtileBackward(FtileFactory factory) {\n \t\tif (Display.isNull(backward))\n \t\t\treturn null;\n \n-\t\tFtile result = factory.activity(backward, swimlaneBackward, boxStyle, Colors.empty(), stereotype);\n+\t\tFtile result = factory.activity(backward, swimlaneBackward, boxStyle, Colors.empty(), stereotypeBack);\n \t\tif (backwardNotes.size() > 0)\n \t\t\tresult = factory.addNote(result, swimlaneBackward, backwardNotes, VerticalAlignment.CENTER);\n ",
      "parent_sha": "1427bb5acccdce67bc4730671b253bbe9b1a80e1"
    }
  },
  {
    "oid": "14be338e77446daec7ad479e6cf235f6314d7cf3",
    "message": "\ud83d\udea7 improve the brand new YAML parser",
    "date": "2025-02-06T21:49:09Z",
    "url": "https://github.com/plantuml/plantuml/commit/14be338e77446daec7ad479e6cf235f6314d7cf3",
    "details": {
      "sha": "d5bc32d2173d4fa06b750d8535cd270d1e1e1b56",
      "filename": "test/net/sourceforge/plantuml/yaml/parser/YamlLineTest.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/plantuml/plantuml/blob/14be338e77446daec7ad479e6cf235f6314d7cf3/test%2Fnet%2Fsourceforge%2Fplantuml%2Fyaml%2Fparser%2FYamlLineTest.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/14be338e77446daec7ad479e6cf235f6314d7cf3/test%2Fnet%2Fsourceforge%2Fplantuml%2Fyaml%2Fparser%2FYamlLineTest.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/test%2Fnet%2Fsourceforge%2Fplantuml%2Fyaml%2Fparser%2FYamlLineTest.java?ref=14be338e77446daec7ad479e6cf235f6314d7cf3",
      "patch": "@@ -169,7 +169,7 @@ void testList03() {\n \t\tassertEquals(YamlValueType.PLAIN_ELEMENT_LIST, yamlLine.getType());\n \t}\n \n-\t@Test\n+\t// @Test\n \tvoid testList04() {\n \t\tYamlLine yamlLine = YamlLine.build(\"colors: ['red', 'blue', 'green']\").get();\n \t\tassertEquals(0, yamlLine.getIndent());",
      "parent_sha": "0486877d9555cb8935d8a0b8ceec3c733cb9d5fa"
    }
  },
  {
    "oid": "f1b5a4c8270664ea65e399e2dc8e8b5243b50d68",
    "message": "Infer svgDimensionStyle instead of storing it in ImageBuilder.",
    "date": "2021-04-07T09:41:13Z",
    "url": "https://github.com/plantuml/plantuml/commit/f1b5a4c8270664ea65e399e2dc8e8b5243b50d68",
    "details": {
      "sha": "d16fd170626dc977f0e36a85b96abd7f2dc0bee9",
      "filename": "src/net/sourceforge/plantuml/ugraphic/ImageBuilder.java",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/plantuml/plantuml/blob/f1b5a4c8270664ea65e399e2dc8e8b5243b50d68/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2FImageBuilder.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/f1b5a4c8270664ea65e399e2dc8e8b5243b50d68/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2FImageBuilder.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2FImageBuilder.java?ref=f1b5a4c8270664ea65e399e2dc8e8b5243b50d68",
      "patch": "@@ -121,7 +121,6 @@ public class ImageBuilder {\n \tprivate long seed = 42;\n \tprivate ISkinParam skinParam;\n \tprivate int status = 0;\n-\tprivate boolean svgDimensionStyle = true;\n \tprivate String svgLinkTarget;\n \tprivate TitledDiagram titledDiagram;\n \tprivate boolean randomPixel;\n@@ -219,7 +218,6 @@ public ImageBuilder styled(TitledDiagram diagram) {\n \t\tmargin = calculateMargin(diagram);\n \t\tmetadata = fileFormatOption.isWithMetadata() ? diagram.getMetadata() : null;\n \t\tseed = diagram.seed();\n-\t\tsvgDimensionStyle = skinParam.svgDimensionStyle();\n \t\tsvgLinkTarget = (fileFormatOption.getSvgLinkTarget() != null)\n \t\t\t\t? fileFormatOption.getSvgLinkTarget() : skinParam.getSvgLinkTarget();\n \t\ttitledDiagram = diagram;\n@@ -433,6 +431,7 @@ private UGraphic2 createUGraphicSVG(double scaleFactor, Dimension2D dim) {\n \t\tfinal LengthAdjust lengthAdjust = skinParam == null ? LengthAdjust.defaultValue() : skinParam.getlengthAdjust();\n \t\tfinal String preserveAspectRatio = getPreserveAspectRatio();\n \t\tfinal SvgCharSizeHack svgCharSizeHack = getSvgCharSizeHack();\n+\t\tfinal boolean svgDimensionStyle = skinParam == null || skinParam.svgDimensionStyle();\n \t\tHColor backColor = HColorUtils.WHITE; // TODO simplify backcolor some more in a future PR\n \t\tif (this.backcolor instanceof HColorSimple) {\n \t\t\tbackColor = this.backcolor;",
      "parent_sha": "8fc84d437a1d223063c6e3d22013c4f8f4bcb894"
    }
  },
  {
    "oid": "ec0611d7cfef31e43ee41ddb382064354e00a3cd",
    "message": "Fix SuggestEngineResult.sameString for two non-null strings",
    "date": "2019-01-23T15:06:56Z",
    "url": "https://github.com/plantuml/plantuml/commit/ec0611d7cfef31e43ee41ddb382064354e00a3cd",
    "details": {
      "sha": "30ac3b99042e3732336974722b870103540fd4a2",
      "filename": "src/net/sourceforge/plantuml/suggest/SuggestEngineResult.java",
      "status": "modified",
      "additions": 1,
      "deletions": 7,
      "changes": 8,
      "blob_url": "https://github.com/plantuml/plantuml/blob/ec0611d7cfef31e43ee41ddb382064354e00a3cd/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsuggest%2FSuggestEngineResult.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/ec0611d7cfef31e43ee41ddb382064354e00a3cd/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsuggest%2FSuggestEngineResult.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsuggest%2FSuggestEngineResult.java?ref=ec0611d7cfef31e43ee41ddb382064354e00a3cd",
      "patch": "@@ -71,13 +71,7 @@ public boolean equals(Object obj) {\n \t}\n \n \tprivate static boolean sameString(String a, String b) {\n-\t\tif (a == null && b == null) {\n-\t\t\treturn true;\n-\t\t}\n-\t\tif (a != null || b != null) {\n-\t\t\treturn false;\n-\t\t}\n-\t\treturn a.equals(b);\n+\t\treturn (a == null && b == null) || (a != null && a.equals(b));\n \t}\n \n \tpublic SuggestEngineResult(String suggestedLine) {",
      "parent_sha": "1ec667cc0b0beeaaa785f2e5f046ced0afd33851"
    }
  },
  {
    "oid": "9e18d34936adbb8848e9c2c46097617705be3449",
    "message": "Update and rename Random.java to RandomFunction.java\n\nFeat: improve to accept 0, 1, 2 args",
    "date": "2024-02-01T22:10:43Z",
    "url": "https://github.com/plantuml/plantuml/commit/9e18d34936adbb8848e9c2c46097617705be3449",
    "details": {
      "sha": "915779c9c88225d2fead71354f066f63d590c51e",
      "filename": "src/net/sourceforge/plantuml/tim/stdlib/RandomFunction.java",
      "status": "renamed",
      "additions": 21,
      "deletions": 7,
      "changes": 28,
      "blob_url": "https://github.com/plantuml/plantuml/blob/9e18d34936adbb8848e9c2c46097617705be3449/src%2Fnet%2Fsourceforge%2Fplantuml%2Ftim%2Fstdlib%2FRandomFunction.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/9e18d34936adbb8848e9c2c46097617705be3449/src%2Fnet%2Fsourceforge%2Fplantuml%2Ftim%2Fstdlib%2FRandomFunction.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Ftim%2Fstdlib%2FRandomFunction.java?ref=9e18d34936adbb8848e9c2c46097617705be3449",
      "patch": "@@ -36,6 +36,7 @@\n \n import java.util.List;\n import java.util.Map;\n+import java.util.Random;\n import java.util.Set;\n \n import net.sourceforge.plantuml.tim.EaterException;\n@@ -46,22 +47,35 @@\n import net.sourceforge.plantuml.tim.expression.TValue;\n import net.sourceforge.plantuml.utils.LineLocation;\n \n-public class Random extends SimpleReturnFunction {\n+public class RandomFunction extends SimpleReturnFunction {\n \n \tpublic TFunctionSignature getSignature() {\n-\t\treturn new TFunctionSignature(\"%random\", 1);\n+\t\treturn new TFunctionSignature(\"%random\", 2);\n \t}\n \n \tpublic boolean canCover(int nbArg, Set<String> namedArgument) {\n-\t\treturn nbArg == 1;\n+\t\treturn nbArg == 0 || nbArg == 1 || nbArg == 2;\n \t}\n \n+\tfinal Random random = new Random();\n+\t\n \tpublic TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,\n \t\t\tMap<String, TValue> named) throws EaterException, EaterExceptionLocated {\n-\t\tif (values.get(0).isNumber()) {\n-\t\t\tfinal int limit = values.get(0).toInt();\n-\t\t\treturn TValue.fromInt((int) (Math.random() * limit));\n+\t\tswitch (values.size()) {\n+\t\t\tcase 0:\n+\t\t\t\treturn TValue.fromInt(random.nextInt(2));\n+\n+\t\t\tcase 1:\n+\t\t\t\tfinal Integer mx = values.get(0).toInt();\n+\t\t\t\treturn TValue.fromInt(random.nextInt(mx));\n+\n+\t\t\tcase 2:\n+\t\t\t\tfinal Integer min = values.get(0).toInt();\n+\t\t\t\tfinal Integer max = values.get(1).toInt();\t\t\t\n+\t\t\t\treturn TValue.fromInt(random.nextInt(max - min) + min);\n+\n+\t\t\tdefault:\n+\t\t\t\tthrow EaterException.located(\"Error on Random: Too many argument\");\n \t\t}\n-\t\treturn TValue.fromInt(0);\n \t}\n }",
      "previous_filename": "src/net/sourceforge/plantuml/tim/stdlib/Random.java",
      "parent_sha": "dbaf8ac2cd50f04ac4ec4309e7dadae234ea8375"
    }
  },
  {
    "oid": "9e7db1ce64abd750444aceb6bb2a67c35ae933b6",
    "message": "Fix copy to clipboard on Mac.\n\nThe previous code `Toolkit.getDefaultToolkit().createImage()` does not read the image file into memory but Clipboard.setContents() on Mac seems to need an image that is already in memory.",
    "date": "2021-09-08T04:51:40Z",
    "url": "https://github.com/plantuml/plantuml/commit/9e7db1ce64abd750444aceb6bb2a67c35ae933b6",
    "details": {
      "sha": "a86940ce7939568e63aeda909dd178c7cde44ecb",
      "filename": "src/net/sourceforge/plantuml/swing/ImageWindow.java",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/plantuml/plantuml/blob/9e7db1ce64abd750444aceb6bb2a67c35ae933b6/src%2Fnet%2Fsourceforge%2Fplantuml%2Fswing%2FImageWindow.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/9e7db1ce64abd750444aceb6bb2a67c35ae933b6/src%2Fnet%2Fsourceforge%2Fplantuml%2Fswing%2FImageWindow.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fswing%2FImageWindow.java?ref=9e7db1ce64abd750444aceb6bb2a67c35ae933b6",
      "patch": "@@ -388,10 +388,14 @@ private void copy() {\n \t\tif (generatedImage == null) {\n \t\t\treturn;\n \t\t}\n-\t\tfinal File png = generatedImage.getPngFile();\n-\t\tfinal Image image = Toolkit.getDefaultToolkit().createImage(png.getAbsolutePath());\n-\t\tfinal ImageSelection imgSel = new ImageSelection(image);\n-\t\tToolkit.getDefaultToolkit().getSystemClipboard().setContents(imgSel, null);\n+\t\ttry {\n+\t\t\tfinal File png = generatedImage.getPngFile();\n+\t\t\tfinal Image image = ImageIO.read(png);\n+\t\t\tfinal ImageSelection imgSel = new ImageSelection(image);\n+\t\t\tToolkit.getDefaultToolkit().getSystemClipboard().setContents(imgSel, null);\n+\t\t} catch (IOException e) {\n+\t\t\te.printStackTrace();\n+\t\t}\n \t}\n \n \tpublic SimpleLine getSimpleLine() {",
      "parent_sha": "ce95fff0faa55205a5e1262f1a10f3e2e75a321e"
    }
  },
  {
    "oid": "2a49ef06da44f8465dfa59cea920347e076f14ea",
    "message": "fix negative values causing syntax error in robust \"has\" list\nhttps://forum.plantuml.net/18701/negative-values-causing-syntax-error-in-robust-has-list?show=18705",
    "date": "2024-02-27T18:42:44Z",
    "url": "https://github.com/plantuml/plantuml/commit/2a49ef06da44f8465dfa59cea920347e076f14ea",
    "details": {
      "sha": "c18d064d383836ded7e04df3d82f9f6aba2d7e1a",
      "filename": "src/net/sourceforge/plantuml/timingdiagram/command/CommandDefineStateShort.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/plantuml/plantuml/blob/2a49ef06da44f8465dfa59cea920347e076f14ea/src%2Fnet%2Fsourceforge%2Fplantuml%2Ftimingdiagram%2Fcommand%2FCommandDefineStateShort.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/2a49ef06da44f8465dfa59cea920347e076f14ea/src%2Fnet%2Fsourceforge%2Fplantuml%2Ftimingdiagram%2Fcommand%2FCommandDefineStateShort.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Ftimingdiagram%2Fcommand%2FCommandDefineStateShort.java?ref=2a49ef06da44f8465dfa59cea920347e076f14ea",
      "patch": "@@ -59,8 +59,9 @@ private static IRegex getRegexConcat() {\n \t\t\t\tRegexLeaf.spaceOneOrMore(), //\n \t\t\t\tnew RegexLeaf(\"has\"), //\n \t\t\t\tRegexLeaf.spaceOneOrMore(), //\n-\t\t\t\tnew RegexLeaf(\"STATE\", \"([%pLN_.@]+)\"), //\n-\t\t\t\tnew RegexLeaf(\"STATES\", \"((,([%pLN_.@]+))*)\"), RegexLeaf.end());\n+\t\t\t\tnew RegexLeaf(\"STATE\", \"([-%pLN_.@]+)\"), //\n+\t\t\t\tnew RegexLeaf(\"STATES\", \"((,([-%pLN_.@]+))*)\"), //\n+\t\t\t\tRegexLeaf.end());\n \t}\n \n \t@Override",
      "parent_sha": "6c945e2508936d710789e4d6071ffb6122b953bc"
    }
  },
  {
    "oid": "ece128c3f19afe8eefb17010546bfaf1b53921b8",
    "message": "Allow underscore to be used as an escape character for pattern -->\n\n\r\n\r\nThe issue is described in more detail at https://forum.plantuml.net/17507/dotted-arrow-also-the-close-comment-blocks-html-xml-markdown --\r\nSimilar to the issue in https://forum.plantuml.net/11806/dotted-arrow-also-the-close-comment-blocks-html-xml-markdown map uses the syntax with --> for longer arrows but they pose a problem when embedding in HTML.\r\n\r\nFor example, the following cannot be embedded in HTML.\r\n\r\nmap example {\r\n\r\n    A*--> B\r\n\r\n}\r\n\r\nThe linked thread above suggests the use of _ before the > but that doesn't work for maps.",
    "date": "2023-02-28T19:38:27Z",
    "url": "https://github.com/plantuml/plantuml/commit/ece128c3f19afe8eefb17010546bfaf1b53921b8",
    "details": {
      "sha": "0048977f59f402f7c268af3fa977f94735653800",
      "filename": "src/net/sourceforge/plantuml/cucadiagram/BodierMap.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/plantuml/plantuml/blob/ece128c3f19afe8eefb17010546bfaf1b53921b8/src%2Fnet%2Fsourceforge%2Fplantuml%2Fcucadiagram%2FBodierMap.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/ece128c3f19afe8eefb17010546bfaf1b53921b8/src%2Fnet%2Fsourceforge%2Fplantuml%2Fcucadiagram%2FBodierMap.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fcucadiagram%2FBodierMap.java?ref=ece128c3f19afe8eefb17010546bfaf1b53921b8",
      "patch": "@@ -74,7 +74,7 @@ public void setLeaf(Entity leaf) {\n \t}\n \n \tpublic static String getLinkedEntry(String s) {\n-\t\tfinal Pattern p = Pattern.compile(\"(\\\\*-+\\\\>)\");\n+\t\tfinal Pattern p = Pattern.compile(\"(\\\\*-+_*\\\\>)\");\n \t\tfinal Matcher m = p.matcher(s);\n \t\tif (m.find()) {\n \t\t\treturn m.group(1);",
      "parent_sha": "52664342f6492e1d47fe06c232fbc9c03ea70742"
    }
  },
  {
    "oid": "1899280e21d6f7ea05e47d670b5789a8ec4b10d4",
    "message": "fix: minor fix `final` variable definition",
    "date": "2023-12-03T09:48:30Z",
    "url": "https://github.com/plantuml/plantuml/commit/1899280e21d6f7ea05e47d670b5789a8ec4b10d4",
    "details": {
      "sha": "c23fbf085affee586d0a23908b1fc4f20101f7b2",
      "filename": "src/net/sourceforge/plantuml/tim/Eater.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/plantuml/plantuml/blob/1899280e21d6f7ea05e47d670b5789a8ec4b10d4/src%2Fnet%2Fsourceforge%2Fplantuml%2Ftim%2FEater.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/1899280e21d6f7ea05e47d670b5789a8ec4b10d4/src%2Fnet%2Fsourceforge%2Fplantuml%2Ftim%2FEater.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Ftim%2FEater.java?ref=1899280e21d6f7ea05e47d670b5789a8ec4b10d4",
      "patch": "@@ -79,7 +79,7 @@ final protected String eatAllToEnd() throws EaterException {\n \t}\n \n \tfinal public TValue eatExpression(TContext context, TMemory memory) throws EaterException, EaterExceptionLocated {\n-\t\tchar ch = peekChar();\n+\t\tfinal char ch = peekChar();\n \t\tif (ch == '{' || ch == '[') {\n \t\t\tfinal String data = eatAllToEnd();\n \t\t\t// System.err.println(\"data=\" + data);",
      "parent_sha": "d2dd274881b1d429b91de73e8a9670e3c2170110"
    }
  },
  {
    "oid": "b6a5270b9cca3419db0053a197a06cc67f2f0ed2",
    "message": "#437-Implement arrow style color",
    "date": "2021-01-08T01:56:09Z",
    "url": "https://github.com/plantuml/plantuml/commit/b6a5270b9cca3419db0053a197a06cc67f2f0ed2",
    "details": {
      "sha": "aa43b85419358554cda42ce2d232903145bd429b",
      "filename": "src/net/sourceforge/plantuml/project/GanttDiagram.java",
      "status": "modified",
      "additions": 24,
      "deletions": 4,
      "changes": 28,
      "blob_url": "https://github.com/plantuml/plantuml/blob/b6a5270b9cca3419db0053a197a06cc67f2f0ed2/src%2Fnet%2Fsourceforge%2Fplantuml%2Fproject%2FGanttDiagram.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/b6a5270b9cca3419db0053a197a06cc67f2f0ed2/src%2Fnet%2Fsourceforge%2Fplantuml%2Fproject%2FGanttDiagram.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fproject%2FGanttDiagram.java?ref=b6a5270b9cca3419db0053a197a06cc67f2f0ed2",
      "patch": "@@ -91,6 +91,10 @@\n import net.sourceforge.plantuml.project.time.DayOfWeek;\n import net.sourceforge.plantuml.project.timescale.TimeScale;\n import net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft;\n+import net.sourceforge.plantuml.style.PName;\n+import net.sourceforge.plantuml.style.SName;\n+import net.sourceforge.plantuml.style.Style;\n+import net.sourceforge.plantuml.style.StyleSignature;\n import net.sourceforge.plantuml.svek.TextBlockBackcolored;\n import net.sourceforge.plantuml.ugraphic.ImageBuilder;\n import net.sourceforge.plantuml.ugraphic.ImageParameter;\n@@ -288,10 +292,25 @@ private void drawConstraints(final UGraphic ug, TimeScale timeScale) {\n \t\t\tif (printStart != null && constraint.isHidden(min, max)) {\n \t\t\t\tcontinue;\n \t\t\t}\n-\t\t\tconstraint.getUDrawable(timeScale, linksColor, this).drawU(ug);\n+\n+\t\t\t// If the linksColor is the default color, we should try to get the arrow color (default is RED_DARK)\n+\t\t\tif (linksColor == HColorUtils.RED_DARK) {\n+\t\t\t\tconstraint.getUDrawable(timeScale, getLinkColor(), this).drawU(ug);\n+\t\t\t} else {\n+\t\t\t\tconstraint.getUDrawable(timeScale, linksColor, this).drawU(ug);\n+\t\t\t}\n \t\t}\n \t}\n \n+\tprivate HColor getLinkColor() {\n+\t\tfinal Style styleArrow = getDefaultStyleDefinitionArrow().getMergedStyle(getCurrentStyleBuilder());\n+\t\treturn styleArrow.value(PName.LineColor).asColor(colorSet);\n+\t}\n+\n+\tpublic StyleSignature getDefaultStyleDefinitionArrow() {\n+\t\treturn StyleSignature.of(SName.root, SName.element, SName.ganttDiagram, SName.arrow);\n+\t}\n+\n \tprivate void drawTasksTitle(final UGraphic ug1) {\n \t\tfor (Task task : tasks.values()) {\n \t\t\tif (isHidden(task)) {\n@@ -405,12 +424,13 @@ private void pushIncluding(TaskDraw first, double deltaY) {\n \t\t\tfirst = first.getTrueRow();\n \t\t}\n \t\tfor (TaskDraw td : draws.values()) {\n-\t\t\tif (td == first)\n+\t\t\tif (td == first) {\n \t\t\t\tskipping = false;\n-\t\t\tif (skipping)\n+\t\t\t}\n+\t\t\tif (skipping) {\n \t\t\t\tcontinue;\n+\t\t\t}\n \t\t\ttd.pushMe(deltaY + 1);\n-\n \t\t}\n \n \t}",
      "parent_sha": "0575e7cf08d4508639a214f97abcac258558dee9"
    }
  },
  {
    "oid": "4b9abcdb633946219739dfee899ffabeaed283b4",
    "message": "simplify this test until we understand why an OS dependent StringBounder is used here",
    "date": "2021-03-21T14:13:28Z",
    "url": "https://github.com/plantuml/plantuml/commit/4b9abcdb633946219739dfee899ffabeaed283b4",
    "details": {
      "sha": "1024ba7f9d97b45fa6f5f622ad1db5d44f46306e",
      "filename": "test/demo1/SimpleSequenceDiagramTest.java",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/plantuml/plantuml/blob/4b9abcdb633946219739dfee899ffabeaed283b4/test%2Fdemo1%2FSimpleSequenceDiagramTest.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/4b9abcdb633946219739dfee899ffabeaed283b4/test%2Fdemo1%2FSimpleSequenceDiagramTest.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/test%2Fdemo1%2FSimpleSequenceDiagramTest.java?ref=4b9abcdb633946219739dfee899ffabeaed283b4",
      "patch": "@@ -1,6 +1,6 @@\n package demo1;\n \n-import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.*;\n \n import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n@@ -33,7 +33,10 @@ void testSimple() throws IOException {\n \t\tfinal String desc = new String(baos.toByteArray(), \"UTF-8\");\n \n \t\tfinal String expected = getExpectedResult();\n-\t\tassertEquals(expected, desc);\n+\t\t// assertEquals(expected, desc);\n+\t\t// We simplify this test until we understand why an OS dependant\n+\t\t// StringBounder is used here.\n+\t\tassertTrue(desc.startsWith(\"DPI: 96\"));\n \n \t}\n ",
      "parent_sha": "c4540da8d7bdb4d462775711060d2d13763c5a48"
    }
  },
  {
    "oid": "9f576036dfdce12f66ffea2b9631b9ad1b965124",
    "message": "Fix top & left margin problems with CucaDiagrams (#497)",
    "date": "2021-03-20T13:37:59Z",
    "url": "https://github.com/plantuml/plantuml/commit/9f576036dfdce12f66ffea2b9631b9ad1b965124",
    "details": {
      "sha": "f6b606a0040cefb770f66e9c9d175122999dae6a",
      "filename": "src/net/sourceforge/plantuml/sdot/CucaDiagramFileMakerSmetana.java",
      "status": "modified",
      "additions": 12,
      "deletions": 8,
      "changes": 20,
      "blob_url": "https://github.com/plantuml/plantuml/blob/9f576036dfdce12f66ffea2b9631b9ad1b965124/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsdot%2FCucaDiagramFileMakerSmetana.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/9f576036dfdce12f66ffea2b9631b9ad1b965124/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsdot%2FCucaDiagramFileMakerSmetana.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsdot%2FCucaDiagramFileMakerSmetana.java?ref=9f576036dfdce12f66ffea2b9631b9ad1b965124",
      "patch": "@@ -102,6 +102,7 @@\n import net.sourceforge.plantuml.svek.TextBlockBackcolored;\n import net.sourceforge.plantuml.ugraphic.ImageBuilder;\n import net.sourceforge.plantuml.ugraphic.ImageParameter;\n+import net.sourceforge.plantuml.ugraphic.MinMax;\n import net.sourceforge.plantuml.ugraphic.UGraphic;\n import net.sourceforge.plantuml.ugraphic.UStroke;\n import net.sourceforge.plantuml.ugraphic.UTranslate;\n@@ -126,14 +127,18 @@ public class CucaDiagramFileMakerSmetana implements CucaDiagramFileMaker {\n \tclass Drawing extends AbstractTextBlock implements TextBlockBackcolored {\n \n \t\tprivate final YMirror ymirror;\n-\t\tprivate final Dimension2D dim;\n+\t\tprivate final MinMax minMax;\n \n-\t\tpublic Drawing(YMirror ymirror, Dimension2D dim) {\n+\t\tpublic Drawing(YMirror ymirror, MinMax minMax) {\n \t\t\tthis.ymirror = ymirror;\n-\t\t\tthis.dim = dim;\n+\t\t\tthis.minMax = minMax;\n \t\t}\n \n \t\tpublic void drawU(UGraphic ug) {\n+\t\t\tif (minMax != null) {\n+\t\t\t\t// Matches the adjustment in SvekResult.calculateDimension()\n+\t\t\t\tug = ug.apply(new UTranslate(6 - minMax.getMinX(), 6 - minMax.getMinY()));\n+\t\t\t}\n \n \t\t\tfor (Map.Entry<IGroup, ST_Agraph_s> ent : clusters.entrySet()) {\n \t\t\t\tdrawGroup(ug, ymirror, ent.getKey(), ent.getValue());\n@@ -161,10 +166,10 @@ public void drawU(UGraphic ug) {\n \t\t}\n \n \t\tpublic Dimension2D calculateDimension(StringBounder stringBounder) {\n-\t\t\tif (dim == null) {\n+\t\t\tif (minMax == null) {\n \t\t\t\tthrow new UnsupportedOperationException();\n \t\t\t}\n-\t\t\treturn dim;\n+\t\t\treturn minMax.getDimension();\n \t\t}\n \n \t\tprivate Point2D getCorner(ST_Agnode_s n) {\n@@ -446,14 +451,13 @@ private ImageData createFileLocked(OutputStream os, List<String> dotStrings, Fil\n \n \t\t\tfinal ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);\n \n-\t\t\timageBuilder.setUDrawable(new Drawing(null, null));\n-\t\t\tfinal Dimension2D dim = imageBuilder.getFinalDimension(stringBounder);\n+\t\t\tfinal MinMax minMax = TextBlockUtils.getMinMax(new Drawing(null, null), stringBounder, false);\n \n \t\t\tfinal AnnotatedWorker annotatedWorker = new AnnotatedWorker(diagram, diagram.getSkinParam(),\n \t\t\t\t\tfileFormatOption.getDefaultStringBounder(diagram.getSkinParam()));\n \n \t\t\t// imageBuilder.setUDrawable(new Drawing(new YMirror(dim.getHeight())));\n-\t\t\timageBuilder.setUDrawable(annotatedWorker.addAdd(new Drawing(new YMirror(dim.getHeight()), dim)));\n+\t\t\timageBuilder.setUDrawable(annotatedWorker.addAdd(new Drawing(new YMirror(minMax.getHeight()), minMax)));\n \n \t\t\treturn imageBuilder.writeImageTOBEMOVED(diagram.seed(), os);\n \t\t} catch (Throwable e) {",
      "parent_sha": "f7b9b3181ec1fd2c45f1daf52e1c6b3f27b5fee2"
    }
  },
  {
    "oid": "8b87aa0c1c84026408b1b07de2a196146f38e603",
    "message": "#1580 Make source code compatible to Java 1.7",
    "date": "2023-10-30T09:18:27Z",
    "url": "https://github.com/plantuml/plantuml/commit/8b87aa0c1c84026408b1b07de2a196146f38e603",
    "details": {
      "sha": "22ac0627102d71f53abb7f17cf534c98026c40f1",
      "filename": "src/net/atmp/CucaDiagram.java",
      "status": "modified",
      "additions": 15,
      "deletions": 9,
      "changes": 24,
      "blob_url": "https://github.com/plantuml/plantuml/blob/8b87aa0c1c84026408b1b07de2a196146f38e603/src%2Fnet%2Fatmp%2FCucaDiagram.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/8b87aa0c1c84026408b1b07de2a196146f38e603/src%2Fnet%2Fatmp%2FCucaDiagram.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fatmp%2FCucaDiagram.java?ref=8b87aa0c1c84026408b1b07de2a196146f38e603",
      "patch": "@@ -534,15 +534,21 @@ public List<String> getVisibleStereotypeLabels(Entity entity) {\n \t\t\treturn null;\n \t\t}\n \n-\t\tList<EntityHideOrShow> commands = hideOrShows.stream()\n-\t\t\t\t\t\t.filter(cmd -> cmd.portion == EntityPortion.STEREOTYPE)\n-\t\t\t\t\t\t.collect(Collectors.toList());\n-\n-\t\treturn entity.getStereotype()\n-\t\t\t\t\t\t.getLabels(Guillemet.DOUBLE_COMPARATOR)\n-\t\t\t\t\t\t.stream()\n-\t\t\t\t\t\t.filter(stereoTypeLabel -> isHiddenStereotypeLabel(stereoTypeLabel, commands))\n-\t\t\t\t\t\t.collect(Collectors.toList());\n+\t\tList<EntityHideOrShow> commands = new ArrayList<>();\n+\t\tfor (EntityHideOrShow hideOrShowEntry : hideOrShows) {\n+\t\t\tif (hideOrShowEntry.portion == EntityPortion.STEREOTYPE) {\n+\t\t\t\tcommands.add(hideOrShowEntry);\n+\t\t\t}\n+\t\t}\n+\n+\t\tList<String> visibleStereotypeLabels = new ArrayList<>();\n+\t\tfor (String stereoTypeLabel: entity.getStereotype().getLabels(Guillemet.DOUBLE_COMPARATOR)) {\n+\t\t\tif (isHiddenStereotypeLabel(stereoTypeLabel, commands)) {\n+\t\t\t\tvisibleStereotypeLabels.add(stereoTypeLabel);\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn visibleStereotypeLabels;\n \t}\n \n \tprivate boolean isHiddenStereotypeLabel(String stereoTypeLabel, List<EntityHideOrShow> commands) {",
      "parent_sha": "f47ca8c3394db57f854350b6789cdd18ce757f6b"
    }
  },
  {
    "oid": "e14c8ef0a50bf094444c1f2ac47ff412e9292a09",
    "message": "Re-add chronology diagram\n\nThis was accidentally removed in a merge",
    "date": "2024-03-21T06:34:33Z",
    "url": "https://github.com/plantuml/plantuml/commit/e14c8ef0a50bf094444c1f2ac47ff412e9292a09",
    "details": {
      "sha": "0105cbd839a0af9324e3a2a2c1250059a49d3461",
      "filename": "src/net/sourceforge/plantuml/core/DiagramType.java",
      "status": "modified",
      "additions": 7,
      "deletions": 4,
      "changes": 11,
      "blob_url": "https://github.com/plantuml/plantuml/blob/e14c8ef0a50bf094444c1f2ac47ff412e9292a09/src%2Fnet%2Fsourceforge%2Fplantuml%2Fcore%2FDiagramType.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/e14c8ef0a50bf094444c1f2ac47ff412e9292a09/src%2Fnet%2Fsourceforge%2Fplantuml%2Fcore%2FDiagramType.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fcore%2FDiagramType.java?ref=e14c8ef0a50bf094444c1f2ac47ff412e9292a09",
      "patch": "@@ -5,12 +5,12 @@\n  * (C) Copyright 2009-2024, Arnaud Roques\n  *\n  * Project Info:  https://plantuml.com\n- * \n+ *\n  * If you like this project or if you find it useful, you can support us at:\n- * \n+ *\n  * https://plantuml.com/patreon (only 1$ per month!)\n  * https://plantuml.com/paypal\n- * \n+ *\n  * This file is part of PlantUML.\n  *\n  * PlantUML is free software; you can redistribute it and/or modify it\n@@ -127,8 +127,11 @@ static public DiagramType getTypeFromArobaseStart(String s) {\n \t\tif (StartUtils.startsWithSymbolAnd(\"startfiles\", s))\n \t\t\treturn FILES;\n \n+\t\tif (StartUtils.startsWithSymbolAnd(\"startchronology\", s))\n+\t\t\treturn CHRONOLOGY;\n+\n \t\tif (StartUtils.startsWithSymbolAnd(\"startchen\", s))\n-\t\t\t\treturn CHEN_EER;\n+\t\t\treturn CHEN_EER;\n \n \t\treturn UNKNOWN;\n \t}",
      "parent_sha": "234cb3adea19aea3ecfc33f541622cc3343db683"
    }
  },
  {
    "oid": "f0e978de36bf7bcdda64d61168b1d607abeb00ee",
    "message": "Move all ImageBuilder border related code into maybeDrawBorder() method.",
    "date": "2021-04-07T03:01:15Z",
    "url": "https://github.com/plantuml/plantuml/commit/f0e978de36bf7bcdda64d61168b1d607abeb00ee",
    "details": {
      "sha": "9591e62a74f12cb2aa8589a008bef6287186f617",
      "filename": "src/net/sourceforge/plantuml/ugraphic/ImageBuilder.java",
      "status": "modified",
      "additions": 18,
      "deletions": 20,
      "changes": 38,
      "blob_url": "https://github.com/plantuml/plantuml/blob/f0e978de36bf7bcdda64d61168b1d607abeb00ee/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2FImageBuilder.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/f0e978de36bf7bcdda64d61168b1d607abeb00ee/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2FImageBuilder.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2FImageBuilder.java?ref=f0e978de36bf7bcdda64d61168b1d607abeb00ee",
      "patch": "@@ -112,9 +112,6 @@ public class ImageBuilder {\n \tprivate Animation animation;\n \tprivate boolean annotations;\n \tprivate HColor backcolor = HColorUtils.WHITE;\n-\tprivate HColor borderColor;\n-\tprivate double borderCorner;\n-\tprivate UStroke borderStroke;\n \tprivate ColorMapper colorMapper = new ColorMapperIdentity();\n \tprivate Dimension2D dimension;\n \tprivate int dpi = 96;\n@@ -128,6 +125,7 @@ public class ImageBuilder {\n \tprivate String preserveAspectRatio;\n \tprivate Scale scale;\n \tprivate long seed = 42;\n+\tprivate ISkinParam skinParam;\n \tprivate int status = 0;\n \tprivate SvgCharSizeHack svgCharSizeHack = SvgCharSizeHack.NO_HACK;\n \tprivate boolean svgDimensionStyle = true;\n@@ -217,13 +215,10 @@ public ImageBuilder warningOrError(String warningOrError) {\n \t}\n \n \tpublic ImageBuilder styled(TitledDiagram diagram) {\n-\t\tfinal ISkinParam skinParam = diagram.getSkinParam();\n+\t\tskinParam = diagram.getSkinParam();\n \t\tanimation = diagram.getAnimation();\n \t\tannotations = true;\n \t\tbackcolor = calculateBackColor(diagram);\n-\t\tborderColor = new Rose().getHtmlColor(skinParam, ColorParam.diagramBorder);\n-\t\tborderCorner = skinParam.getRoundCorner(CornerParam.diagramBorder, null);\n-\t\tborderStroke = calculateBorderStroke(borderColor, skinParam);\n \t\tcolorMapper = skinParam.getColorMapper();\n \t\tdpi = skinParam.getDpi();\n \t\thandwritten = skinParam.handwritten();\n@@ -285,14 +280,7 @@ private ImageData writeImageInternal(FileFormatOption fileFormatOption, OutputSt\n \n \t\tfinal UGraphic2 ug = createUGraphic(fileFormatOption, dim, animationArg, dx, dy);\n \t\tUGraphic ug2 = ug;\n-\n-\t\tif (borderStroke != null) {\n-\t\t\tfinal HColor color = borderColor == null ? HColorUtils.BLACK : borderColor;\n-\t\t\tfinal double width = dim.getWidth() - borderStroke.getThickness();\n-\t\t\tfinal double height = dim.getHeight() - borderStroke.getThickness();\n-\t\t\tfinal URectangle shape = new URectangle(width, height).rounded(borderCorner);\n-\t\t\tug2.apply(color).apply(borderStroke).draw(shape);\n-\t\t}\n+\t\tmaybeDrawBorder(ug, dim);\n \t\tif (randomPixel) {\n \t\t\tdrawRandomPoint(ug2);\n \t\t}\n@@ -313,6 +301,21 @@ private ImageData writeImageInternal(FileFormatOption fileFormatOption, OutputSt\n \t\treturn createImageData(dim);\n \t}\n \n+\tprivate void maybeDrawBorder(UGraphic ug, Dimension2D dim) {\n+\t\tif (skinParam == null) return;\n+\n+\t\tfinal HColor color = new Rose().getHtmlColor(skinParam, ColorParam.diagramBorder);\n+\n+\t\tUStroke stroke = skinParam.getThickness(LineParam.diagramBorder, null);\n+\t\tif (stroke == null && color != null) stroke = new UStroke();\n+\t\tif (stroke == null) return;\n+\n+\t\tfinal URectangle rectangle = new URectangle(dim.getWidth() - stroke.getThickness(), dim.getHeight() - stroke.getThickness())\n+\t\t\t\t.rounded(skinParam.getRoundCorner(CornerParam.diagramBorder, null));\n+\t\t\n+\t\tug.apply(color == null ? HColorUtils.BLACK : color).apply(stroke).draw(rectangle);\n+\t}\n+\n \tprivate void drawRandomPoint(UGraphic ug2) {\n \t\tfinal Random rnd = new Random();\n \t\tfinal int red = rnd.nextInt(40);\n@@ -501,11 +504,6 @@ private static HColor calculateBackColor(TitledDiagram diagram) {\n \t\treturn diagram.getSkinParam().getBackgroundColor(false);\n \t}\n \n-\tprivate static UStroke calculateBorderStroke(HColor borderColor, ISkinParam skinParam) {\n-\t\tfinal UStroke thickness = skinParam.getThickness(LineParam.diagramBorder, null);\n-\t\treturn (thickness == null && borderColor != null) ? new UStroke() : thickness;\n-\t}\n-\n \tprivate String calculateHoverPathColor(ISkinParam skinParam) {\n \t\tif (fileFormatOption.getHoverColor() != null) {\n \t\t\treturn fileFormatOption.getHoverColor();",
      "parent_sha": "ee0503cbe530425f70cc278897d703ab462b561b"
    }
  },
  {
    "oid": "b8958d727c1f71a1062196c684e2e0ecf0bbcd00",
    "message": "fix: change UNSECURE profile\nhttps://github.com/plantuml/plantuml/issues/1878",
    "date": "2024-08-26T10:39:10Z",
    "url": "https://github.com/plantuml/plantuml/commit/b8958d727c1f71a1062196c684e2e0ecf0bbcd00",
    "details": {
      "sha": "2ec9e5419567dcc754506eaf8cd281b61ec93337",
      "filename": "src/net/sourceforge/plantuml/security/URLCheck.java",
      "status": "modified",
      "additions": 11,
      "deletions": 8,
      "changes": 19,
      "blob_url": "https://github.com/plantuml/plantuml/blob/b8958d727c1f71a1062196c684e2e0ecf0bbcd00/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsecurity%2FURLCheck.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/b8958d727c1f71a1062196c684e2e0ecf0bbcd00/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsecurity%2FURLCheck.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsecurity%2FURLCheck.java?ref=b8958d727c1f71a1062196c684e2e0ecf0bbcd00",
      "patch": "@@ -84,14 +84,17 @@ public static boolean isURLforbidden(URL url) throws UnsupportedEncodingExceptio\n \t\tif (host == null || host.isEmpty() || !host.contains(\".\"))\n \t\t\treturn true;\n \n-\t\t// Additional check for IP addresses or invalid host patterns\n-\t\tif (host.matches(\"^[-#.0-9:\\\\[\\\\]+]+$\"))\n-\t\t\treturn true;\n+\t\t// When UNSECURE, we allow localhost\n+\t\tif (SecurityUtils.getSecurityProfile() != SecurityProfile.UNSECURE) {\n+\t\t\t// Additional check for IP addresses or invalid host patterns\n+\t\t\tif (host.matches(\"^[-#.0-9:\\\\[\\\\]+]+$\"))\n+\t\t\t\treturn true;\n \n-\t\tfinal InetAddress inetAddress = InetAddress.getByName(host);\n-\t\t// Check host address\n-\t\tif (isInnerAddress(inetAddress))\n-\t\t\treturn true;\n+\t\t\tfinal InetAddress inetAddress = InetAddress.getByName(host);\n+\t\t\t// Check host address\n+\t\t\tif (isInnerAddress(inetAddress))\n+\t\t\t\treturn true;\n+\t\t}\n \n \t\t// Additional checks (e.g., encoding)\n \t\tfinal String decodedHost = URLDecoder.decode(host, \"UTF-8\");\n@@ -101,7 +104,7 @@ public static boolean isURLforbidden(URL url) throws UnsupportedEncodingExceptio\n \t\treturn false;\n \t}\n \n-\tpublic static boolean isInnerAddress(InetAddress inetAddress) {\n+\tprivate static boolean isInnerAddress(InetAddress inetAddress) {\n \t\treturn inetAddress.isAnyLocalAddress() //\n \t\t\t\t|| inetAddress.isLoopbackAddress() //\n \t\t\t\t|| inetAddress.isLinkLocalAddress() //",
      "parent_sha": "5dbc82c2f08a7e16c418946ce28be7f05796fffd"
    }
  },
  {
    "oid": "d6d3f62ab655f252878e8cbc3df394a7e2a0af89",
    "message": "\ud83d\udc3e display regular error message",
    "date": "2025-04-06T19:11:50Z",
    "url": "https://github.com/plantuml/plantuml/commit/d6d3f62ab655f252878e8cbc3df394a7e2a0af89",
    "details": {
      "sha": "b34c69274abfca155103047dd282d4485431b8cf",
      "filename": "src/main/java/net/sourceforge/plantuml/command/CommandSkinParamMultilines.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/plantuml/plantuml/blob/d6d3f62ab655f252878e8cbc3df394a7e2a0af89/src%2Fmain%2Fjava%2Fnet%2Fsourceforge%2Fplantuml%2Fcommand%2FCommandSkinParamMultilines.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/d6d3f62ab655f252878e8cbc3df394a7e2a0af89/src%2Fmain%2Fjava%2Fnet%2Fsourceforge%2Fplantuml%2Fcommand%2FCommandSkinParamMultilines.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fmain%2Fjava%2Fnet%2Fsourceforge%2Fplantuml%2Fcommand%2FCommandSkinParamMultilines.java?ref=d6d3f62ab655f252878e8cbc3df394a7e2a0af89",
      "patch": "@@ -70,7 +70,7 @@ public CommandExecutionResult execute(TitledDiagram diagram, BlocLines lines, Pa\n \n \t\tfinal Matcher2 mStart = getStartingPattern().matcher(lines.getFirst().getTrimmed().getString());\n \t\tif (mStart.find() == false)\n-\t\t\tthrow new IllegalStateException();\n+\t\t\treturn CommandExecutionResult.error(\"Bad syntax for skinparam\");\n \n \t\tfinal String group1 = mStart.group(1);\n ",
      "parent_sha": "ba8c1215410a09b833d21bae096752489ce56d35"
    }
  },
  {
    "oid": "18a7f99b556af3a451bdf9c8a41929f820106fd6",
    "message": "fix: improve theme support",
    "date": "2023-05-18T11:32:30Z",
    "url": "https://github.com/plantuml/plantuml/commit/18a7f99b556af3a451bdf9c8a41929f820106fd6",
    "details": {
      "sha": "35dfc4938bd84cb121753c7ba1c1f518d4139ee0",
      "filename": "src/net/sourceforge/plantuml/tim/EaterTheme.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/plantuml/plantuml/blob/18a7f99b556af3a451bdf9c8a41929f820106fd6/src%2Fnet%2Fsourceforge%2Fplantuml%2Ftim%2FEaterTheme.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/18a7f99b556af3a451bdf9c8a41929f820106fd6/src%2Fnet%2Fsourceforge%2Fplantuml%2Ftim%2FEaterTheme.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Ftim%2FEaterTheme.java?ref=18a7f99b556af3a451bdf9c8a41929f820106fd6",
      "patch": "@@ -75,7 +75,7 @@ public void analyze(TContext context, TMemory memory) throws EaterException, Eat\n \n \t\tfinal int x = this.name.toLowerCase().indexOf(\" from \");\n \t\tif (x != -1) {\n-\t\t\tfinal String fromTmp = this.name.substring(x + \" from \".length());\n+\t\t\tfinal String fromTmp = this.name.substring(x + \" from \".length()).trim();\n \t\t\tthis.from = context.applyFunctionsAndVariables(memory, getLineLocation(), fromTmp);\n \t\t\tthis.name = this.name.substring(0, x).trim();\n \t\t\tthis.context = context;",
      "parent_sha": "95026709a6619cc3f086820a7f9c099e90525b85"
    }
  },
  {
    "oid": "9b8474a4d9c869999e88a05b6193e0ab55925c01",
    "message": "\u267b\ufe0f fix mutability issue\nhttps://github.com/plantuml/plantuml/pull/2136#issuecomment-2789195660",
    "date": "2025-04-09T10:47:15Z",
    "url": "https://github.com/plantuml/plantuml/commit/9b8474a4d9c869999e88a05b6193e0ab55925c01",
    "details": {
      "sha": "d6591aa7a77da55395b44c6b7cfd77aa9c60d20d",
      "filename": "src/main/java/net/sourceforge/plantuml/sequencediagram/Note.java",
      "status": "modified",
      "additions": 6,
      "deletions": 9,
      "changes": 15,
      "blob_url": "https://github.com/plantuml/plantuml/blob/9b8474a4d9c869999e88a05b6193e0ab55925c01/src%2Fmain%2Fjava%2Fnet%2Fsourceforge%2Fplantuml%2Fsequencediagram%2FNote.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/9b8474a4d9c869999e88a05b6193e0ab55925c01/src%2Fmain%2Fjava%2Fnet%2Fsourceforge%2Fplantuml%2Fsequencediagram%2FNote.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fmain%2Fjava%2Fnet%2Fsourceforge%2Fplantuml%2Fsequencediagram%2FNote.java?ref=9b8474a4d9c869999e88a05b6193e0ab55925c01",
      "patch": "@@ -68,16 +68,17 @@ public void temporaryProtectedUntilTeozIsStandard() {\n \tprivate Colors colors = Colors.empty();\n \n \tprivate Url url;\n-\n-\tprivate Style style;\n+\tprivate Stereotype stereotype;\n \n \tpublic StyleSignatureBasic getStyleSignature() {\n \t\treturn noteStyle.getDefaultStyleDefinition();\n \t}\n \n \tpublic Style[] getUsedStyles() {\n-\t\tif (style != null)\n-\t\t\treturn new Style[] { style.eventuallyOverride(colors) };\n+\t\tStyleSignatureBasic styleSignature = getStyleSignature();\n+\t\tif (stereotype != null)\n+\t\t\tstyleSignature = styleSignature.mergeWith(stereotype.getStyles(styleBuilder));\n+\t\tfinal Style style = styleSignature.getMergedStyle(styleBuilder).eventuallyOverride(colors);\n \n \t\treturn new Style[] { style };\n \t}\n@@ -101,12 +102,10 @@ private Note(Participant p, Participant p2, NotePosition position, Display strin\n \t\tthis.styleBuilder = styleBuilder;\n \t\tthis.position = position;\n \t\tthis.strings = strings;\n-\t\tthis.style = getStyleSignature().getMergedStyle(styleBuilder);\n \t}\n \n \tpublic void setStereotype(Stereotype stereotype) {\n-\t\tfinal List<Style> others = stereotype.getStyles(styleBuilder);\n-\t\tthis.style = getStyleSignature().mergeWith(others).getMergedStyle(styleBuilder);\n+\t\tthis.stereotype = stereotype;\n \t}\n \n \tpublic Note withPosition(NotePosition newPosition) {\n@@ -118,7 +117,6 @@ public Note withPosition(NotePosition newPosition) {\n \t\tresult.url = this.url;\n \t\tresult.colors = this.colors;\n \t\tresult.parallel = this.parallel;\n-\t\tresult.style = getStyleSignature().getMergedStyle(styleBuilder);\n \t\treturn result;\n \t}\n \n@@ -164,7 +162,6 @@ public final NoteStyle getNoteStyle() {\n \n \tpublic final void setNoteStyle(NoteStyle style) {\n \t\tthis.noteStyle = style;\n-\t\tthis.style = getStyleSignature().getMergedStyle(styleBuilder);\n \t}\n \n \tpublic ISkinParam getSkinParamBackcolored(ISkinParam skinParam) {",
      "parent_sha": "18624f5137a93311a2d2462e7127161de99d0221"
    }
  },
  {
    "oid": "7568e37f73a3d8055419c94a3ea3a68c1e050a9a",
    "message": "Fix error message\n\nFix:\r\n- https://forum.plantuml.net/14905/typo-in-error-message\r\nAnd comment on:\r\n- https://forum.plantuml.net/12557/problems-with-built-in-functions-%25upper-and-%25lower-eclipse",
    "date": "2021-11-06T18:31:11Z",
    "url": "https://github.com/plantuml/plantuml/commit/7568e37f73a3d8055419c94a3ea3a68c1e050a9a",
    "details": {
      "sha": "c29ad70ceebe6368dfdc2130ac92ccb5e71d28ef",
      "filename": "src/net/sourceforge/plantuml/tim/expression/ReversePolishInterpretor.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/plantuml/plantuml/blob/7568e37f73a3d8055419c94a3ea3a68c1e050a9a/src%2Fnet%2Fsourceforge%2Fplantuml%2Ftim%2Fexpression%2FReversePolishInterpretor.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/7568e37f73a3d8055419c94a3ea3a68c1e050a9a/src%2Fnet%2Fsourceforge%2Fplantuml%2Ftim%2Fexpression%2FReversePolishInterpretor.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Ftim%2Fexpression%2FReversePolishInterpretor.java?ref=7568e37f73a3d8055419c94a3ea3a68c1e050a9a",
      "patch": "@@ -95,7 +95,7 @@ public ReversePolishInterpretor(LineLocation location, TokenStack queue, Knowled\n \t\t\t\tif (trace)\n \t\t\t\t\tSystem.err.println(\"function=\" + function);\n \t\t\t\tif (function == null) {\n-\t\t\t\t\tthrow EaterException.unlocated(\"Unknow built-in function \" + token2.getSurface());\n+\t\t\t\t\tthrow EaterException.unlocated(\"Unknown built-in function \" + token2.getSurface());\n \t\t\t\t}\n \t\t\t\tif (function.canCover(nb, Collections.<String>emptySet()) == false) {\n \t\t\t\t\tthrow EaterException",
      "parent_sha": "de5d963afe04cb0da8217edb5c19dacc082ddf2a"
    }
  },
  {
    "oid": "357498726736615ba8cd7af9a40ca0bb3e686e8a",
    "message": "upd: Add `regex`, `files` on Embedded Diagram\n\nupd: for Embedded Diagram, add:\r\n-  `regex`\r\n-  `files`",
    "date": "2023-06-14T13:03:59Z",
    "url": "https://github.com/plantuml/plantuml/commit/357498726736615ba8cd7af9a40ca0bb3e686e8a",
    "details": {
      "sha": "9543cdd91daa1e6be4410330353e3d32cb777228",
      "filename": "src/net/sourceforge/plantuml/EmbeddedDiagram.java",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/plantuml/plantuml/blob/357498726736615ba8cd7af9a40ca0bb3e686e8a/src%2Fnet%2Fsourceforge%2Fplantuml%2FEmbeddedDiagram.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/357498726736615ba8cd7af9a40ca0bb3e686e8a/src%2Fnet%2Fsourceforge%2Fplantuml%2FEmbeddedDiagram.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2FEmbeddedDiagram.java?ref=357498726736615ba8cd7af9a40ca0bb3e686e8a",
      "patch": "@@ -113,6 +113,12 @@ public static String getEmbeddedType(CharSequence cs) {\n \t\tif (s.equals(EMBEDDED_START + \"ebnf\"))\n \t\t\treturn \"ebnf\";\n \n+\t\tif (s.equals(EMBEDDED_START + \"regex\"))\n+\t\t\treturn \"regex\";\n+\n+\t\tif (s.equals(EMBEDDED_START + \"files\"))\n+\t\t\treturn \"files\";\n+\n \t\treturn null;\n \t}\n \n@@ -229,4 +235,4 @@ public List<Neutron> getNeutrons() {\n \t\treturn Arrays.asList(Neutron.create(this));\n \t}\n \n-}\n\\ No newline at end of file\n+}",
      "parent_sha": "74574c4f57d8d56b0e740b64e3d005ed071b2da2"
    }
  },
  {
    "oid": "f83674f4b3618fc2294b2e164a24e3aa52d0ea5e",
    "message": "Fix #635 Link in ref element not displayed",
    "date": "2022-03-31T18:57:04Z",
    "url": "https://github.com/plantuml/plantuml/commit/f83674f4b3618fc2294b2e164a24e3aa52d0ea5e",
    "details": {
      "sha": "104ddf722020cba49ee71412d32e49af6ca44b61",
      "filename": "src/net/sourceforge/plantuml/sequencediagram/command/CommandReferenceOverSeveral.java",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/plantuml/plantuml/blob/f83674f4b3618fc2294b2e164a24e3aa52d0ea5e/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsequencediagram%2Fcommand%2FCommandReferenceOverSeveral.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/f83674f4b3618fc2294b2e164a24e3aa52d0ea5e/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsequencediagram%2Fcommand%2FCommandReferenceOverSeveral.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsequencediagram%2Fcommand%2FCommandReferenceOverSeveral.java?ref=f83674f4b3618fc2294b2e164a24e3aa52d0ea5e",
      "patch": "@@ -41,6 +41,8 @@\n import net.sourceforge.plantuml.LineLocation;\n import net.sourceforge.plantuml.StringUtils;\n import net.sourceforge.plantuml.Url;\n+import net.sourceforge.plantuml.UrlBuilder;\n+import net.sourceforge.plantuml.UrlMode;\n import net.sourceforge.plantuml.command.CommandExecutionResult;\n import net.sourceforge.plantuml.command.SingleLineCommand2;\n import net.sourceforge.plantuml.command.regex.RegexConcat;\n@@ -72,7 +74,7 @@ private static RegexConcat getConcat() {\n \t\t\t\tRegexLeaf.spaceZeroOrMore(), //\n \t\t\t\tnew RegexLeaf(\":\"), //\n \t\t\t\tRegexLeaf.spaceZeroOrMore(), //\n-\t\t\t\tnew RegexOptional(new RegexLeaf(\"URL\", \"\\\\[\\\\[([^|]*)(?:\\\\|([^|]*))?\\\\]\\\\]\")), //\n+\t\t\t\tnew RegexOptional(new RegexLeaf(\"URL\", \"(\\\\[\\\\[.*?\\\\]\\\\])\")), //\n \t\t\t\tnew RegexLeaf(\"TEXT\", \"(.*)\"), RegexLeaf.end());\n \t}\n \n@@ -87,7 +89,6 @@ protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocatio\n \n \t\tfinal List<String> participants = StringUtils.splitComma(arg.get(\"PARTS\", 0));\n \t\tfinal String url = arg.get(\"URL\", 0);\n-\t\tfinal String title = arg.get(\"URL\", 1);\n \t\tfinal String text = StringUtils.trin(arg.get(\"TEXT\", 0));\n \n \t\tfinal List<Participant> p = new ArrayList<>();\n@@ -97,9 +98,10 @@ protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocatio\n \n \t\tfinal Display strings = Display.getWithNewlines(text);\n \n+\t\tfinal UrlBuilder b = new UrlBuilder(null, UrlMode.STRICT);\n \t\tUrl u = null;\n \t\tif (url != null) {\n-\t\t\tu = new Url(url, title);\n+\t\t\tu = b.getUrl(url);\n \t\t}\n \n \t\tfinal HColor backColorGeneral = null;",
      "parent_sha": "a5fe482b594110525b876c7edce669312067417e"
    }
  },
  {
    "oid": "89ff4699a00bda942ead4956e36b9133cd9e9ac8",
    "message": "fix: allow notes with smetana\nhttps://github.com/plantuml/plantuml/issues/1332",
    "date": "2023-03-17T21:48:24Z",
    "url": "https://github.com/plantuml/plantuml/commit/89ff4699a00bda942ead4956e36b9133cd9e9ac8",
    "details": {
      "sha": "2f700d8cf3698a5b99e4eca35afafac309a16754",
      "filename": "src/net/sourceforge/plantuml/sdot/CucaDiagramFileMakerSmetana.java",
      "status": "modified",
      "additions": 25,
      "deletions": 5,
      "changes": 30,
      "blob_url": "https://github.com/plantuml/plantuml/blob/89ff4699a00bda942ead4956e36b9133cd9e9ac8/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsdot%2FCucaDiagramFileMakerSmetana.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/89ff4699a00bda942ead4956e36b9133cd9e9ac8/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsdot%2FCucaDiagramFileMakerSmetana.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsdot%2FCucaDiagramFileMakerSmetana.java?ref=89ff4699a00bda942ead4956e36b9133cd9e9ac8",
      "patch": "@@ -62,6 +62,7 @@\n import net.sourceforge.plantuml.FileFormatOption;\n import net.sourceforge.plantuml.StringUtils;\n import net.sourceforge.plantuml.UmlDiagram;\n+import net.sourceforge.plantuml.abel.CucaNote;\n import net.sourceforge.plantuml.abel.Entity;\n import net.sourceforge.plantuml.abel.GroupType;\n import net.sourceforge.plantuml.abel.LeafType;\n@@ -79,6 +80,7 @@\n import net.sourceforge.plantuml.klimt.geom.HorizontalAlignment;\n import net.sourceforge.plantuml.klimt.geom.MinMaxMutable;\n import net.sourceforge.plantuml.klimt.geom.Rankdir;\n+import net.sourceforge.plantuml.klimt.geom.VerticalAlignment;\n import net.sourceforge.plantuml.klimt.geom.XDimension2D;\n import net.sourceforge.plantuml.klimt.geom.XPoint2D;\n import net.sourceforge.plantuml.klimt.shape.AbstractTextBlock;\n@@ -98,6 +100,8 @@\n import net.sourceforge.plantuml.svek.GraphvizCrash;\n import net.sourceforge.plantuml.svek.IEntityImage;\n import net.sourceforge.plantuml.svek.SvekNode;\n+import net.sourceforge.plantuml.svek.image.EntityImageNoteLink;\n+import net.sourceforge.plantuml.utils.Position;\n import smetana.core.CString;\n import smetana.core.Globals;\n import smetana.core.JUtils;\n@@ -461,16 +465,32 @@ private Style getStyle() {\n \t}\n \n \tprivate TextBlock getLabel(Link link) {\n-\t\tfinal double marginLabel = 1; // startUid.equals(endUid) ? 6 : 1;\n \t\tISkinParam skinParam = diagram.getSkinParam();\n+\t\tfinal double marginLabel = 1; // startUid.equals(endUid) ? 6 : 1;\n \t\tfinal Style style = getStyle();\n+\n \t\tfinal FontConfiguration labelFont = style.getFontConfiguration(skinParam.getIHtmlColorSet());\n-\t\tfinal TextBlock label = link.getLabel().create(labelFont,\n+\t\tTextBlock labelOnly = link.getLabel().create(labelFont,\n \t\t\t\tskinParam.getDefaultTextAlignment(HorizontalAlignment.CENTER), skinParam);\n-\t\tif (TextBlockUtils.isEmpty(label, stringBounder))\n-\t\t\treturn label;\n \n-\t\treturn TextBlockUtils.withMargin(label, marginLabel, marginLabel);\n+\t\tfinal CucaNote note = link.getNote();\n+\t\tif (note == null) {\n+\t\t\tif (TextBlockUtils.isEmpty(labelOnly, stringBounder) == false)\n+\t\t\t\tlabelOnly = TextBlockUtils.withMargin(labelOnly, marginLabel, marginLabel);\n+\t\t\treturn labelOnly;\n+\t\t}\n+\t\tfinal TextBlock noteOnly = new EntityImageNoteLink(note.getDisplay(), note.getColors(), skinParam,\n+\t\t\t\tlink.getStyleBuilder());\n+\n+\t\tif (note.getPosition() == Position.LEFT)\n+\t\t\treturn TextBlockUtils.mergeLR(noteOnly, labelOnly, VerticalAlignment.CENTER);\n+\t\telse if (note.getPosition() == Position.RIGHT)\n+\t\t\treturn TextBlockUtils.mergeLR(labelOnly, noteOnly, VerticalAlignment.CENTER);\n+\t\telse if (note.getPosition() == Position.TOP)\n+\t\t\treturn TextBlockUtils.mergeTB(noteOnly, labelOnly, HorizontalAlignment.CENTER);\n+\t\telse\n+\t\t\treturn TextBlockUtils.mergeTB(labelOnly, noteOnly, HorizontalAlignment.CENTER);\n+\n \t}\n \n \tprivate TextBlock getQuantifier(Link link, int n) {",
      "parent_sha": "68c35a5ac34c1b66f268267e0365160c3a5622fa"
    }
  },
  {
    "oid": "fb2296510c5bafc156be035ba6e1fed4d5e6e10c",
    "message": "Fix buggy links in sequence groups #970",
    "date": "2022-03-27T19:07:34Z",
    "url": "https://github.com/plantuml/plantuml/commit/fb2296510c5bafc156be035ba6e1fed4d5e6e10c",
    "details": {
      "sha": "b631dda563cdfc961697ced27825cc8cb262fae8",
      "filename": "src/net/sourceforge/plantuml/sequencediagram/command/CommandGrouping.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/plantuml/plantuml/blob/fb2296510c5bafc156be035ba6e1fed4d5e6e10c/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsequencediagram%2Fcommand%2FCommandGrouping.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/fb2296510c5bafc156be035ba6e1fed4d5e6e10c/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsequencediagram%2Fcommand%2FCommandGrouping.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsequencediagram%2Fcommand%2FCommandGrouping.java?ref=fb2296510c5bafc156be035ba6e1fed4d5e6e10c",
      "patch": "@@ -93,7 +93,7 @@ protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocatio\n \t\t\tif (StringUtils.isEmpty(comment)) {\n \t\t\t\tcomment = \"group\";\n \t\t\t} else {\n-\t\t\t\tfinal Pattern p = Pattern.compile(\"^(.*?)\\\\[(.*)\\\\]$\");\n+\t\t\t\tfinal Pattern p = Pattern.compile(\"^(.*(?:\\\\[\\\\[.*\\\\]\\\\]).*?|.*?)\\\\[(.*)\\\\]$\");\n \t\t\t\tfinal Matcher m = p.matcher(comment);\n \t\t\t\tif (m.find()) {\n \t\t\t\t\ttype = m.group(1);",
      "parent_sha": "d6afa3fb5aca6ea5db234d232824275643c8636f"
    }
  },
  {
    "oid": "5d9a939dd23c9a2356a4c0c130c352fe6baf353d",
    "message": "fix: better magnetic cluster handling for class diagram\nhttps://github.com/plantuml/plantuml/issues/1815",
    "date": "2024-10-05T14:32:21Z",
    "url": "https://github.com/plantuml/plantuml/commit/5d9a939dd23c9a2356a4c0c130c352fe6baf353d",
    "details": {
      "sha": "6c704ac1812928f050c24daf7fd0964ec9b56151",
      "filename": "src/net/sourceforge/plantuml/svek/Cluster.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/plantuml/plantuml/blob/5d9a939dd23c9a2356a4c0c130c352fe6baf353d/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsvek%2FCluster.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/5d9a939dd23c9a2356a4c0c130c352fe6baf353d/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsvek%2FCluster.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsvek%2FCluster.java?ref=5d9a939dd23c9a2356a4c0c130c352fe6baf353d",
      "patch": "@@ -697,7 +697,7 @@ public XDimension2D getTitleDimension(StringBounder stringBounder) {\n \n \tpublic MagneticBorder getMagneticBorder() {\n \n-\t\tif (group.getUSymbol() == null)\n+\t\tif (group.getUSymbol() == null && group.getGroupType() != GroupType.PACKAGE)\n \t\t\treturn new MagneticBorderNone();\n \n \t\tfinal USymbol uSymbol = group.getUSymbol();",
      "parent_sha": "15d63c28e601fdfa9e985d6d2057db31b95a7079"
    }
  },
  {
    "oid": "986a521a66d357cebc06e3906e4f057f2020c047",
    "message": "Add missing topurl argument to UrlBuilder",
    "date": "2022-04-01T21:04:54Z",
    "url": "https://github.com/plantuml/plantuml/commit/986a521a66d357cebc06e3906e4f057f2020c047",
    "details": {
      "sha": "08723624c540dffd042ff866704509304c1e2fd5",
      "filename": "src/net/sourceforge/plantuml/sequencediagram/command/CommandReferenceOverSeveral.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/plantuml/plantuml/blob/986a521a66d357cebc06e3906e4f057f2020c047/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsequencediagram%2Fcommand%2FCommandReferenceOverSeveral.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/986a521a66d357cebc06e3906e4f057f2020c047/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsequencediagram%2Fcommand%2FCommandReferenceOverSeveral.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsequencediagram%2Fcommand%2FCommandReferenceOverSeveral.java?ref=986a521a66d357cebc06e3906e4f057f2020c047",
      "patch": "@@ -98,7 +98,7 @@ protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocatio\n \n \t\tfinal Display strings = Display.getWithNewlines(text);\n \n-\t\tfinal UrlBuilder b = new UrlBuilder(null, UrlMode.STRICT);\n+\t\tfinal UrlBuilder b = new UrlBuilder(diagram.getSkinParam().getValue(\"topurl\"), UrlMode.STRICT);\n \t\tUrl u = null;\n \t\tif (url != null) {\n \t\t\tu = b.getUrl(url);",
      "parent_sha": "fb7dcc213b46d03d8aa1c7866e09768f86dd11aa"
    }
  },
  {
    "oid": "c116531554edc464a1f6d1578b54dd46954ca4cc",
    "message": "fix: Improve HorizontalAlignment management (wip)\nhttps://github.com/plantuml/plantuml/issues/1640",
    "date": "2024-11-12T13:06:00Z",
    "url": "https://github.com/plantuml/plantuml/commit/c116531554edc464a1f6d1578b54dd46954ca4cc",
    "details": {
      "sha": "a47131ef770e0d4fe590db07a2d1ff63564e5463",
      "filename": "src/net/sourceforge/plantuml/svek/Cluster.java",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/plantuml/plantuml/blob/c116531554edc464a1f6d1578b54dd46954ca4cc/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsvek%2FCluster.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/c116531554edc464a1f6d1578b54dd46954ca4cc/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsvek%2FCluster.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsvek%2FCluster.java?ref=c116531554edc464a1f6d1578b54dd46954ca4cc",
      "patch": "@@ -349,10 +349,11 @@ public void drawU(UGraphic ug) {\n \t\t\t\t\tgroup.getUSymbol(), skinParam.getCurrentStyleBuilder(), skinParam.getIHtmlColorSet(),\n \t\t\t\t\tgroup.getGroupType());\n \n-\t\t\tfinal HorizontalAlignment horizontalAlignment = skinParam\n-\t\t\t\t\t.getHorizontalAlignment(AlignmentParam.packageTitleAlignment, null, false, null);\n \t\t\tfinal ClusterDecoration decoration = new ClusterDecoration(packageStyle, group.getUSymbol(),\n \t\t\t\t\tclusterHeader.getTitle(), clusterHeader.getStereo(), rectangleArea, stroke);\n+//\t\t\tfinal HorizontalAlignment horizontalAlignment = skinParam\n+//\t\t\t.getHorizontalAlignment(AlignmentParam.packageTitleAlignment, null, false, null);\n+\t\t\tfinal HorizontalAlignment horizontalAlignment = clusterHeader.getTitleHorizontalAlignment();\n \n \t\t\tdecoration.drawU(ug, backColor, borderColor, shadowing, rounded, horizontalAlignment,\n \t\t\t\t\tskinParam.getStereotypeAlignment(), diagonalCorner);",
      "parent_sha": "2ee6aa6e8b0b7d290279992c91042c2f747b6e76"
    }
  },
  {
    "oid": "7a0cfff2091fec69b6f2e579a8666e6767ed0eae",
    "message": "refactor: private visibility",
    "date": "2024-06-20T17:01:46Z",
    "url": "https://github.com/plantuml/plantuml/commit/7a0cfff2091fec69b6f2e579a8666e6767ed0eae",
    "details": {
      "sha": "bc9a45e0c7208eae4192fd84a5f32734ebbf977b",
      "filename": "test/test/utils/PlantUmlTestUtils.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/plantuml/plantuml/blob/7a0cfff2091fec69b6f2e579a8666e6767ed0eae/test%2Ftest%2Futils%2FPlantUmlTestUtils.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/7a0cfff2091fec69b6f2e579a8666e6767ed0eae/test%2Ftest%2Futils%2FPlantUmlTestUtils.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/test%2Ftest%2Futils%2FPlantUmlTestUtils.java?ref=7a0cfff2091fec69b6f2e579a8666e6767ed0eae",
      "patch": "@@ -33,7 +33,7 @@ public static ExportDiagram exportDiagram(String... source) {\n \n \t@SuppressWarnings(\"unused\")\n \tpublic static class ExportDiagram {\n-\t\tpublic final Diagram diagram;\n+\t\tprivate final Diagram diagram;\n \t\tprivate boolean metadata;\n \n \t\tpublic ExportDiagram(Diagram diagram) {",
      "parent_sha": "37dca80b18314027f197bda301243a3727825a2a"
    }
  },
  {
    "oid": "270fec579a8f1dcfb8bef0f84527c22cb22a3e5b",
    "message": "Simplify GitDiagram code for consistency with other diagrams.  Margin / scale / background color etc will not take effect until those commands are enabled for this diagram type.",
    "date": "2021-03-18T19:00:55Z",
    "url": "https://github.com/plantuml/plantuml/commit/270fec579a8f1dcfb8bef0f84527c22cb22a3e5b",
    "details": {
      "sha": "59fe66f9a62e66a8bb179d46cce2891d3e3a9e4c",
      "filename": "src/net/sourceforge/plantuml/gitlog/GitDiagram.java",
      "status": "modified",
      "additions": 1,
      "deletions": 16,
      "changes": 17,
      "blob_url": "https://github.com/plantuml/plantuml/blob/270fec579a8f1dcfb8bef0f84527c22cb22a3e5b/src%2Fnet%2Fsourceforge%2Fplantuml%2Fgitlog%2FGitDiagram.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/270fec579a8f1dcfb8bef0f84527c22cb22a3e5b/src%2Fnet%2Fsourceforge%2Fplantuml%2Fgitlog%2FGitDiagram.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fgitlog%2FGitDiagram.java?ref=270fec579a8f1dcfb8bef0f84527c22cb22a3e5b",
      "patch": "@@ -43,22 +43,18 @@\n import net.sourceforge.plantuml.AnnotatedWorker;\n import net.sourceforge.plantuml.FileFormatOption;\n import net.sourceforge.plantuml.ISkinParam;\n-import net.sourceforge.plantuml.SkinParam;\n import net.sourceforge.plantuml.UmlDiagram;\n import net.sourceforge.plantuml.UmlDiagramType;\n-import net.sourceforge.plantuml.UseStyle;\n import net.sourceforge.plantuml.core.DiagramDescription;\n import net.sourceforge.plantuml.core.ImageData;\n import net.sourceforge.plantuml.graphic.InnerStrategy;\n import net.sourceforge.plantuml.graphic.StringBounder;\n import net.sourceforge.plantuml.graphic.TextBlock;\n-import net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft;\n import net.sourceforge.plantuml.svek.TextBlockBackcolored;\n import net.sourceforge.plantuml.ugraphic.ImageBuilder;\n import net.sourceforge.plantuml.ugraphic.ImageParameter;\n import net.sourceforge.plantuml.ugraphic.MinMax;\n import net.sourceforge.plantuml.ugraphic.UGraphic;\n-import net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity;\n import net.sourceforge.plantuml.ugraphic.color.HColor;\n \n public class GitDiagram extends UmlDiagram {\n@@ -81,18 +77,7 @@ protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormat\n \t\t\tthrows IOException {\n \n \t\tfinal ISkinParam skinParam = getSkinParam();\n-\t\tfinal int margin1;\n-\t\tfinal int margin2;\n-\t\tif (UseStyle.useBetaStyle()) {\n-\t\t\tmargin1 = SkinParam.zeroMargin(10);\n-\t\t\tmargin2 = SkinParam.zeroMargin(10);\n-\t\t} else {\n-\t\t\tmargin1 = 10;\n-\t\t\tmargin2 = 10;\n-\t\t}\n-\t\t// TODO change to other ImageParameter constructor?\n-\t\tfinal ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, \"\",\n-\t\t\t\t\"\", ClockwiseTopRightBottomLeft.margin1margin2(margin1, margin2), null);\n+\t\tfinal ImageParameter imageParameter = new ImageParameter(this, fileFormatOption);\n \t\tfinal ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);\n \t\tTextBlock result = getTextBlock();\n \t\tresult = new AnnotatedWorker(this, skinParam, fileFormatOption.getDefaultStringBounder(getSkinParam()))",
      "parent_sha": "2da2146f214ba6826e57f6635cf86f19ca68ffa6"
    }
  },
  {
    "oid": "aa537297529d5841209b672735cb78bee2aa63f4",
    "message": "Fix state id in Scxml export",
    "date": "2023-01-31T19:45:20Z",
    "url": "https://github.com/plantuml/plantuml/commit/aa537297529d5841209b672735cb78bee2aa63f4",
    "details": {
      "sha": "b5bdb55fb0c7461e169e5352cc9cecd127a61719",
      "filename": "src/net/sourceforge/plantuml/xmlsc/ScxmlStateDiagramStandard.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/plantuml/plantuml/blob/aa537297529d5841209b672735cb78bee2aa63f4/src%2Fnet%2Fsourceforge%2Fplantuml%2Fxmlsc%2FScxmlStateDiagramStandard.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/aa537297529d5841209b672735cb78bee2aa63f4/src%2Fnet%2Fsourceforge%2Fplantuml%2Fxmlsc%2FScxmlStateDiagramStandard.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fxmlsc%2FScxmlStateDiagramStandard.java?ref=aa537297529d5841209b672735cb78bee2aa63f4",
      "patch": "@@ -55,6 +55,7 @@\n \n import net.sourceforge.plantuml.Guillemet;\n import net.sourceforge.plantuml.baraye.EntityImp;\n+import net.sourceforge.plantuml.baraye.Quark;\n import net.sourceforge.plantuml.cucadiagram.Display;\n import net.sourceforge.plantuml.cucadiagram.LeafType;\n import net.sourceforge.plantuml.cucadiagram.Link;\n@@ -162,9 +163,8 @@ private void addLink(Element state, Link link) {\n \t}\n \n \tprivate String getId(EntityImp entity) {\n-\t\tString result = entity.getDisplay().get(0).toString();\n-\t\tresult = result.replaceAll(\"\\\\*\", \"\");\n-\t\treturn result;\n+\t\tfinal Quark quark = entity.getQuark();\n+\t\treturn quark.getName().replaceAll(\"\\\\*\", \"\");\n \t}\n \n \tpublic void transformerXml(OutputStream os) throws TransformerException, ParserConfigurationException {",
      "parent_sha": "6979fb6d555f391b0365fcbcbfd79b3f84a06ffe"
    }
  },
  {
    "oid": "ac64f9fa11c4fb9bca7e5a061cd83afeb6dab9b8",
    "message": "fix FileFormatOption constructor not using withMetadata parameter",
    "date": "2019-07-01T15:52:38Z",
    "url": "https://github.com/plantuml/plantuml/commit/ac64f9fa11c4fb9bca7e5a061cd83afeb6dab9b8",
    "details": {
      "sha": "4dd262bed55f395cb2881c44bb896804ddaf7507",
      "filename": "src/net/sourceforge/plantuml/FileFormatOption.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/plantuml/plantuml/blob/ac64f9fa11c4fb9bca7e5a061cd83afeb6dab9b8/src%2Fnet%2Fsourceforge%2Fplantuml%2FFileFormatOption.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/ac64f9fa11c4fb9bca7e5a061cd83afeb6dab9b8/src%2Fnet%2Fsourceforge%2Fplantuml%2FFileFormatOption.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2FFileFormatOption.java?ref=ac64f9fa11c4fb9bca7e5a061cd83afeb6dab9b8",
      "patch": "@@ -79,7 +79,7 @@ public final boolean isWithMetadata() {\n \t}\n \n \tpublic FileFormatOption(FileFormat fileFormat, boolean withMetadata) {\n-\t\tthis(fileFormat, null, false, false, \"_top\", false, null, TikzFontDistortion.getDefault(), 1.0);\n+\t\tthis(fileFormat, null, withMetadata, false, \"_top\", false, null, TikzFontDistortion.getDefault(), 1.0);\n \t}\n \n \tprivate FileFormatOption(FileFormat fileFormat, AffineTransform at, boolean withMetadata, boolean useRedForError,",
      "parent_sha": "fb108ebb5afa93915787d7ce6e686ef526edfd96"
    }
  },
  {
    "oid": "af012b24fb0edc2108d3029dbc2649bc89a719d9",
    "message": "Fix minor regression when exporting Cmap data in PNG image.\nDPI is no more relevant, scaleFactor must be used instead.",
    "date": "2021-04-05T20:57:59Z",
    "url": "https://github.com/plantuml/plantuml/commit/af012b24fb0edc2108d3029dbc2649bc89a719d9",
    "details": {
      "sha": "cf1703c73b847ad88a7a1cd5085862f3d15ed33d",
      "filename": "src/net/sourceforge/plantuml/ugraphic/ImageBuilder.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/plantuml/plantuml/blob/af012b24fb0edc2108d3029dbc2649bc89a719d9/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2FImageBuilder.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/af012b24fb0edc2108d3029dbc2649bc89a719d9/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2FImageBuilder.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2FImageBuilder.java?ref=af012b24fb0edc2108d3029dbc2649bc89a719d9",
      "patch": "@@ -313,7 +313,8 @@ private ImageData writeImageInternal(FileFormatOption fileFormatOption, OutputSt\n \t\tif (ug instanceof UGraphicG2d) {\n \t\t\tfinal Set<Url> urls = ((UGraphicG2d) ug).getAllUrlsEncountered();\n \t\t\tif (urls.size() > 0) {\n-\t\t\t\tfinal CMapData cmap = CMapData.cmapString(urls, dpi);\n+\t\t\t\tfinal double scaleFactor = (scale == null ? 1 : scale.getScale(dim.getWidth(), dim.getHeight())) * dpi / 96.0;\n+\t\t\t\tfinal CMapData cmap = CMapData.cmapString(urls, scaleFactor);\n \t\t\t\treturn new ImageDataComplex(dim, cmap, warningOrError, status);\n \t\t\t}\n \t\t}",
      "parent_sha": "b659ee4d3b91af900bd2a5b9fe2cd8e57120c6ee"
    }
  },
  {
    "oid": "296621971e3cf4c01ee3bc9254fb920e11306b38",
    "message": "\u2705 updated date check to be more permissive",
    "date": "2025-03-31T14:42:49Z",
    "url": "https://github.com/plantuml/plantuml/commit/296621971e3cf4c01ee3bc9254fb920e11306b38",
    "details": {
      "sha": "b4ddfa2cc39bfb28c644b1adb3a43902502c86f1",
      "filename": "src/test/java/net/sourceforge/plantuml/tim/builtin/DateFunctionTest.java",
      "status": "modified",
      "additions": 11,
      "deletions": 2,
      "changes": 13,
      "blob_url": "https://github.com/plantuml/plantuml/blob/296621971e3cf4c01ee3bc9254fb920e11306b38/src%2Ftest%2Fjava%2Fnet%2Fsourceforge%2Fplantuml%2Ftim%2Fbuiltin%2FDateFunctionTest.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/296621971e3cf4c01ee3bc9254fb920e11306b38/src%2Ftest%2Fjava%2Fnet%2Fsourceforge%2Fplantuml%2Ftim%2Fbuiltin%2FDateFunctionTest.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Ftest%2Fjava%2Fnet%2Fsourceforge%2Fplantuml%2Ftim%2Fbuiltin%2FDateFunctionTest.java?ref=296621971e3cf4c01ee3bc9254fb920e11306b38",
      "patch": "@@ -1,7 +1,6 @@\n package net.sourceforge.plantuml.tim.builtin;\n \n import static org.assertj.core.api.Assertions.assertThat;\n-import static org.assertj.core.api.Assertions.assertThatCode;\n import static org.assertj.core.api.Assertions.assertThatThrownBy;\n \n import java.text.SimpleDateFormat;\n@@ -22,7 +21,17 @@ public void testDateFunctionNoArgs() throws EaterException {\n         TValue result = dateFunction.executeReturnFunction(null, null, null, Arrays.asList(), null);\n         String dateString = result.toString();\n         assertThat(dateString).isNotNull();\n-        assertThatCode(() -> new Date(dateString)).doesNotThrowAnyException();\n+\n+\t\t// Permissive pattern for date formats such as:\n+\t\t// \"Mon Mar 31 14:23:55 CEST 2025\"         (English)\n+\t\t// \"lun. mars 31 14:23:55 UTC+1 2025\"      (French)\n+\t\t// \"\u5468\u4e00 \u4e09\u6708 31 14:23:55 GMT+08:00 2025\"   (Chinese)\n+\t\t// \"Mo M\u00e4r 31 14:23:55 CET 2025\"           (German)\n+\t\t// \"lun mar 31 14:23:55 CET 2025\"          (Spanish)\n+\t\tfinal String pattern = \"^\\\\S+\\\\s+\\\\S+\\\\s+\\\\d{1,2}\\\\s+\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\s+\\\\S+\\\\s+\\\\d{4}$\";\n+\n+\t\tassertThat(dateString).matches(pattern);\n+\n     }\n \n     @Test",
      "parent_sha": "47dedf2f1bd7e7aeeaea6552033790ca36cea781"
    }
  },
  {
    "oid": "4937c8f1becf866df6f55a2acb544aade6589a57",
    "message": "Enable cmapx file creation for Board, Mindmap, Network, Timing & WBS diagrams.",
    "date": "2021-09-22T05:19:39Z",
    "url": "https://github.com/plantuml/plantuml/commit/4937c8f1becf866df6f55a2acb544aade6589a57",
    "details": {
      "sha": "b57bc5559cafe8c01daa9ca8104ef596a2b65108",
      "filename": "src/net/sourceforge/plantuml/PSystemUtils.java",
      "status": "modified",
      "additions": 36,
      "deletions": 124,
      "changes": 160,
      "blob_url": "https://github.com/plantuml/plantuml/blob/4937c8f1becf866df6f55a2acb544aade6589a57/src%2Fnet%2Fsourceforge%2Fplantuml%2FPSystemUtils.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/4937c8f1becf866df6f55a2acb544aade6589a57/src%2Fnet%2Fsourceforge%2Fplantuml%2FPSystemUtils.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2FPSystemUtils.java?ref=4937c8f1becf866df6f55a2acb544aade6589a57",
      "patch": "@@ -44,7 +44,6 @@\n import java.util.Arrays;\n import java.util.List;\n \n-import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;\n import net.sourceforge.plantuml.core.Diagram;\n import net.sourceforge.plantuml.core.ImageData;\n import net.sourceforge.plantuml.cucadiagram.CucaDiagram;\n@@ -91,30 +90,7 @@ public static List<FileImageData> exportDiagrams(Diagram system, SuggestedFile s\n \t\t\treturn createFilesHtml((CucaDiagram) system, suggestedFile);\n \t\t}\n \n-\t\tfinal FileImageData fileImageData;\n-\t\t\n-\t\tif (system instanceof CucaDiagram) {\n-\t\t\tfileImageData = exportDiagramsCuca((CucaDiagram) system, suggestedFile, fileFormatOption);\n-\t\t}\n-\t\telse if (system instanceof GanttDiagram) {\n-\t\t\tfileImageData = exportDiagramsGantt2((GanttDiagram) system, suggestedFile, fileFormatOption);\n-\t\t}\n-\t\telse if (system instanceof ActivityDiagram3) {\n-\t\t\tfileImageData = exportDiagramsActivityDiagram3((ActivityDiagram3) system, suggestedFile, fileFormatOption);\n-\t\t}\n-\t\telse {\n-\t\t\tfileImageData = exportDiagramsDefault(system, suggestedFile, fileFormatOption);\n-\t\t}\n-\t\t\n-\t\tif (fileImageData == null) {\n-\t\t\treturn emptyList();\n-\t\t}\n-\t\t\n-\t\tif (system instanceof TitledDiagram && fileFormatOption.getFileFormat() == FileFormat.PNG) {\n-\t\t\treturn splitPng((TitledDiagram) system, suggestedFile, fileImageData, fileFormatOption);\n-\t\t}\n-\t\t\n-\t\treturn singletonList(fileImageData);\n+\t\treturn exportDiagramsDefault(system, suggestedFile, fileFormatOption);\n \t}\n \n \tprivate static List<FileImageData> exportDiagramsNewpaged(NewpagedDiagram system, SuggestedFile suggestedFile,\n@@ -158,53 +134,6 @@ public static boolean canFileBeWritten(final SFile f) {\n \t\treturn true;\n \t}\n \n-\tstatic private FileImageData exportDiagramsDefault(Diagram system, SuggestedFile suggestedFile,\n-\t\t\tFileFormatOption fileFormat) throws IOException {\n-\t\tif (suggestedFile.getFile(0).exists() && suggestedFile.getFile(0).isDirectory()) {\n-\t\t\tthrow new IllegalArgumentException(\"File is a directory \" + suggestedFile);\n-\t\t}\n-\t\tOutputStream os = null;\n-\t\tImageData imageData = null;\n-\t\ttry {\n-\t\t\tif (PSystemUtils.canFileBeWritten(suggestedFile.getFile(0)) == false) {\n-\t\t\t\treturn null;\n-\t\t\t}\n-\t\t\tos = suggestedFile.getFile(0).createBufferedOutputStream();\n-\t\t\t// system.exportDiagram(os, null, 0, fileFormat);\n-\t\t\timageData = system.exportDiagram(os, 0, fileFormat);\n-\t\t} finally {\n-\t\t\tif (os != null) {\n-\t\t\t\tos.close();\n-\t\t\t}\n-\t\t}\n-\t\treturn new FileImageData(suggestedFile.getFile(0), imageData);\n-\t}\n-\n-\tstatic private FileImageData exportDiagramsActivityDiagram3(ActivityDiagram3 system,\n-\t\t\tSuggestedFile suggestedFile, FileFormatOption fileFormat) throws IOException {\n-\t\tif (suggestedFile.getFile(0).exists() && suggestedFile.getFile(0).isDirectory()) {\n-\t\t\tthrow new IllegalArgumentException(\"File is a directory \" + suggestedFile);\n-\t\t}\n-\t\tOutputStream os = null;\n-\t\tImageData cmap = null;\n-\t\tImageData imageData = null;\n-\t\ttry {\n-\t\t\tif (PSystemUtils.canFileBeWritten(suggestedFile.getFile(0)) == false) {\n-\t\t\t\treturn null;\n-\t\t\t}\n-\t\t\tos = suggestedFile.getFile(0).createBufferedOutputStream();\n-\t\t\timageData = cmap = system.exportDiagram(os, 0, fileFormat);\n-\t\t} finally {\n-\t\t\tif (os != null) {\n-\t\t\t\tos.close();\n-\t\t\t}\n-\t\t}\n-\t\tif (cmap != null && cmap.containsCMapData()) {\n-\t\t\tsystem.exportCmap(suggestedFile, 0, cmap);\n-\t\t}\n-\t\treturn new FileImageData(suggestedFile.getFile(0), imageData);\n-\t}\n-\n \tprivate static List<FileImageData> exportDiagramsSequence(SequenceDiagram system, SuggestedFile suggestedFile,\n \t\t\tFileFormatOption fileFormat) throws IOException {\n \t\tfinal List<FileImageData> result = new ArrayList<>();\n@@ -231,56 +160,6 @@ private static List<FileImageData> exportDiagramsSequence(SequenceDiagram system\n \t\treturn result;\n \t}\n \n-\tstatic private FileImageData exportDiagramsCuca(CucaDiagram system, SuggestedFile suggestedFile,\n-\t\t\tFileFormatOption fileFormat) throws IOException {\n-\t\tif (suggestedFile.getFile(0).exists() && suggestedFile.getFile(0).isDirectory()) {\n-\t\t\tthrow new IllegalArgumentException(\"File is a directory \" + suggestedFile);\n-\t\t}\n-\n-\t\tImageData cmap = null;\n-\t\tOutputStream os = null;\n-\t\ttry {\n-\t\t\tif (PSystemUtils.canFileBeWritten(suggestedFile.getFile(0)) == false) {\n-\t\t\t\treturn null;\n-\t\t\t}\n-\t\t\t// System.err.println(\"FOO11=\" + suggestedFile);\n-\t\t\t// os = SecurityUtils.BufferedOutputStream(suggestedFile));\n-\t\t\tos = new NamedOutputStream(suggestedFile.getFile(0));\n-\t\t\tcmap = system.exportDiagram(os, 0, fileFormat);\n-\t\t} finally {\n-\t\t\tif (os != null) {\n-\t\t\t\tos.close();\n-\t\t\t}\n-\t\t}\n-\t\tif (cmap != null && cmap.containsCMapData()) {\n-\t\t\tsystem.exportCmap(suggestedFile, 0, cmap);\n-\t\t}\n-\n-\t\treturn new FileImageData(suggestedFile.getFile(0), cmap);\n-\t}\n-\n-\tstatic private FileImageData exportDiagramsGantt2(GanttDiagram system, SuggestedFile suggestedFile,\n-\t\t\tFileFormatOption fileFormat) throws IOException {\n-\t\tif (suggestedFile.getFile(0).exists() && suggestedFile.getFile(0).isDirectory()) {\n-\t\t\tthrow new IllegalArgumentException(\"File is a directory \" + suggestedFile);\n-\t\t}\n-\n-\t\tImageData cmap = null;\n-\t\tOutputStream os = null;\n-\t\ttry {\n-\t\t\tif (PSystemUtils.canFileBeWritten(suggestedFile.getFile(0)) == false) {\n-\t\t\t\treturn null;\n-\t\t\t}\n-\t\t\tos = new NamedOutputStream(suggestedFile.getFile(0));\n-\t\t\tcmap = system.exportDiagram(os, 0, fileFormat);\n-\t\t} finally {\n-\t\t\tif (os != null) {\n-\t\t\t\tos.close();\n-\t\t\t}\n-\t\t}\n-\t\treturn new FileImageData(suggestedFile.getFile(0), cmap);\n-\t}\n-\n \tprivate static List<FileImageData> createFilesHtml(CucaDiagram system, SuggestedFile suggestedFile)\n \t\t\tthrows IOException {\n \t\tfinal String name = suggestedFile.getName();\n@@ -290,7 +169,7 @@ private static List<FileImageData> createFilesHtml(CucaDiagram system, Suggested\n \t\treturn maker.create();\n \t}\n \n-\tprivate static List<FileImageData> splitPng(TitledDiagram diagram, SuggestedFile pngFile, FileImageData fileImageData, FileFormatOption fileFormatOption)\n+\tprivate static List<FileImageData> splitPng(TitledDiagram diagram, SuggestedFile pngFile, ImageData imageData, FileFormatOption fileFormatOption)\n \t\t\tthrows IOException {\n \n \t\tfinal List<SFile> files = new PngSplitter(\n@@ -306,9 +185,42 @@ private static List<FileImageData> splitPng(TitledDiagram diagram, SuggestedFile\n \n \t\tfinal List<FileImageData> result = new ArrayList<>();\n \t\tfor (SFile f : files) {\n-\t\t\tresult.add(new FileImageData(f, fileImageData.getImageData()));\n+\t\t\tresult.add(new FileImageData(f, imageData));\n \t\t}\n \t\treturn result;\n \t}\n \n+\tprivate static List<FileImageData> exportDiagramsDefault(Diagram system, SuggestedFile suggestedFile,\n+\t\t\tFileFormatOption fileFormatOption) throws IOException {\n+\n+\t\tfinal SFile outputFile = suggestedFile.getFile(0);\n+\n+\t\tif (outputFile.isDirectory()) {\n+\t\t\tthrow new IllegalArgumentException(\"File is a directory \" + suggestedFile);\n+\t\t}\n+\n+\t\tif (!canFileBeWritten(outputFile)) {\n+\t\t\treturn emptyList();\n+\t\t}\n+\n+\t\tfinal ImageData imageData;\n+\n+\t\ttry (OutputStream os = outputFile.createBufferedOutputStream()) {\n+\t\t\timageData = system.exportDiagram(os, 0, fileFormatOption);\n+\t\t}\n+\n+\t\tif (imageData == null) {\n+\t\t\treturn emptyList();\n+\t\t}\n+\n+\t\tif (imageData.containsCMapData() && system instanceof UmlDiagram) {\n+\t\t\t((UmlDiagram) system).exportCmap(suggestedFile, 0, imageData);\n+\t\t}\n+\n+\t\tif (system instanceof TitledDiagram && fileFormatOption.getFileFormat() == FileFormat.PNG) {\n+\t\t\treturn splitPng((TitledDiagram) system, suggestedFile, imageData, fileFormatOption);\n+\t\t}\n+\n+\t\treturn singletonList(new FileImageData(outputFile, imageData));\n+\t}\n }",
      "parent_sha": "08cba946b3b9606565c5e90fdc6eabecb813b988"
    }
  },
  {
    "oid": "81abee58fa0ec4e05d84938da4b74003c48f95b6",
    "message": "Refactor duplicate scaleFactor calculations.",
    "date": "2021-04-07T08:38:29Z",
    "url": "https://github.com/plantuml/plantuml/commit/81abee58fa0ec4e05d84938da4b74003c48f95b6",
    "details": {
      "sha": "4e837a95e67d2de0eb369c8b54502b0bdbb06617",
      "filename": "src/net/sourceforge/plantuml/ugraphic/ImageBuilder.java",
      "status": "modified",
      "additions": 3,
      "deletions": 5,
      "changes": 8,
      "blob_url": "https://github.com/plantuml/plantuml/blob/81abee58fa0ec4e05d84938da4b74003c48f95b6/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2FImageBuilder.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/81abee58fa0ec4e05d84938da4b74003c48f95b6/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2FImageBuilder.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2FImageBuilder.java?ref=81abee58fa0ec4e05d84938da4b74003c48f95b6",
      "patch": "@@ -279,8 +279,8 @@ private ImageData writeImageInternal(FileFormatOption fileFormatOption, OutputSt\n \t\t\tdx = -minmax.getMinX();\n \t\t\tdy = -minmax.getMinY();\n \t\t}\n-\n-\t\tfinal UGraphic2 ug = createUGraphic(fileFormatOption, dim, animationArg, dx, dy);\n+\t\tfinal double scaleFactor = (scale == null ? 1 : scale.getScale(dim.getWidth(), dim.getHeight())) * dpi / 96.0;\n+\t\tfinal UGraphic2 ug = createUGraphic(fileFormatOption, dim, animationArg, dx, dy, scaleFactor);\n \t\tUGraphic ug2 = ug;\n \t\tmaybeDrawBorder(ug, dim);\n \t\tif (randomPixel) {\n@@ -295,7 +295,6 @@ private ImageData writeImageInternal(FileFormatOption fileFormatOption, OutputSt\n \t\tif (ug instanceof UGraphicG2d) {\n \t\t\tfinal Set<Url> urls = ((UGraphicG2d) ug).getAllUrlsEncountered();\n \t\t\tif (urls.size() > 0) {\n-\t\t\t\tfinal double scaleFactor = (scale == null ? 1 : scale.getScale(dim.getWidth(), dim.getHeight())) * dpi / 96.0;\n \t\t\t\tfinal CMapData cmap = CMapData.cmapString(urls, scaleFactor);\n \t\t\t\treturn new ImageDataComplex(dim, cmap, warningOrError, status);\n \t\t\t}\n@@ -412,8 +411,7 @@ private Image getAviImage(AffineTransformation affineTransform) throws IOExcepti\n \t}\n \n \tprivate UGraphic2 createUGraphic(FileFormatOption option, final Dimension2D dim, Animation animationArg,\n-\t\t\tdouble dx, double dy) {\n-\t\tfinal double scaleFactor = (scale == null ? 1 : scale.getScale(dim.getWidth(), dim.getHeight())) * dpi / 96.0;\n+\t\t\tdouble dx, double dy, double scaleFactor) {\n \t\tswitch (option.getFileFormat()) {\n \t\tcase PNG:\n \t\t\treturn createUGraphicPNG(scaleFactor, dim, animationArg, dx, dy,",
      "parent_sha": "9c865ab58bef7178eeb31212aa1194165e2a74b1"
    }
  },
  {
    "oid": "1e6ffb0bec9e02d0bc3b48d9ab5f53b876032a33",
    "message": "fix: add some hard-coded dot path for MacOS\nhttps://github.com/plantuml/plantuml/issues/1583",
    "date": "2023-10-20T13:44:00Z",
    "url": "https://github.com/plantuml/plantuml/commit/1e6ffb0bec9e02d0bc3b48d9ab5f53b876032a33",
    "details": {
      "sha": "c3282131d38ee95fdf4b09ba9b039b2374e8b61b",
      "filename": "src/net/sourceforge/plantuml/dot/GraphvizLinux.java",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/plantuml/plantuml/blob/1e6ffb0bec9e02d0bc3b48d9ab5f53b876032a33/src%2Fnet%2Fsourceforge%2Fplantuml%2Fdot%2FGraphvizLinux.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/1e6ffb0bec9e02d0bc3b48d9ab5f53b876032a33/src%2Fnet%2Fsourceforge%2Fplantuml%2Fdot%2FGraphvizLinux.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fdot%2FGraphvizLinux.java?ref=1e6ffb0bec9e02d0bc3b48d9ab5f53b876032a33",
      "patch": "@@ -48,10 +48,10 @@ class GraphvizLinux extends AbstractGraphviz {\n \n \t@Override\n \tprotected File specificDotExe() {\n-\t\tfinal File all[] = new File[] { new File(\"/usr/local/bin/dot\"), new File(\"/usr/bin/dot\"),\n-\t\t\t\tnew File(\"/opt/homebrew/bin/dot\") };\n+\t\tfinal File all[] = new File[] { new File(\"/usr/local/bin/dot\"), new File(\"/opt/homebrew/bin/dot\"),\n+\t\t\t\tnew File(\"/opt/homebrew/opt/graphviz/bin/dot\"), new File(\"/usr/bin/dot\") };\n \t\tfor (File f : all)\n-\t\t\tif (f.exists())\n+\t\t\tif (f.exists() && f.canRead() && f.canExecute())\n \t\t\t\treturn f;\n \t\treturn new File(\"/opt/local/bin/dot\");\n \t}",
      "parent_sha": "4adacbabe505437219dc4c02788fb3e7abece5f9"
    }
  },
  {
    "oid": "229a6129e2473da8227f5138f26edbb352e38376",
    "message": "Fixing tests",
    "date": "2022-05-04T17:54:15Z",
    "url": "https://github.com/plantuml/plantuml/commit/229a6129e2473da8227f5138f26edbb352e38376",
    "details": {
      "sha": "8bb0c140fb95732baf5887b3e6a62fbd8c838da5",
      "filename": "test/net/sourceforge/plantuml/security/SURLTest.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/plantuml/plantuml/blob/229a6129e2473da8227f5138f26edbb352e38376/test%2Fnet%2Fsourceforge%2Fplantuml%2Fsecurity%2FSURLTest.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/229a6129e2473da8227f5138f26edbb352e38376/test%2Fnet%2Fsourceforge%2Fplantuml%2Fsecurity%2FSURLTest.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/test%2Fnet%2Fsourceforge%2Fplantuml%2Fsecurity%2FSURLTest.java?ref=229a6129e2473da8227f5138f26edbb352e38376",
      "patch": "@@ -71,10 +71,10 @@ void urlWithoutSecurity(String url) {\n \t@ValueSource(strings = {\n \t\t\t\"http://localhost:8080/api\",\n \t\t\t\"http://alice@localhost:8080/api\",\n-\t\t\t\"http://alice:secret@localhost:8080/api\",\n+\t\t\t\"http://alice_secret@localhost:8080/api\",\n \t\t\t\"https://localhost:8080/api\",\n \t\t\t\"https://alice@localhost:8080/api\",\n-\t\t\t\"https://alice:secret@localhost:8080/api\"})\n+\t\t\t\"https://alice_secret@localhost:8080/api\"})\n \tvoid removeUserInfo(String url) throws MalformedURLException {\n \t\tSURL surl = SURL.createWithoutUser(new URL(url));\n ",
      "parent_sha": "93e5964e5f35914f3f7b89de620c596795550083"
    }
  },
  {
    "oid": "e8d057127a70532af61646fe300f0d55b9705bad",
    "message": "Double.valueOf instead of new Double()",
    "date": "2022-09-17T17:37:51Z",
    "url": "https://github.com/plantuml/plantuml/commit/e8d057127a70532af61646fe300f0d55b9705bad",
    "details": {
      "sha": "a03bfc028f3e4975bef81b256371b4d017d8194d",
      "filename": "src/net/sourceforge/plantuml/awt/geom/XPoint2D.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/plantuml/plantuml/blob/e8d057127a70532af61646fe300f0d55b9705bad/src%2Fnet%2Fsourceforge%2Fplantuml%2Fawt%2Fgeom%2FXPoint2D.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/e8d057127a70532af61646fe300f0d55b9705bad/src%2Fnet%2Fsourceforge%2Fplantuml%2Fawt%2Fgeom%2FXPoint2D.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fawt%2Fgeom%2FXPoint2D.java?ref=e8d057127a70532af61646fe300f0d55b9705bad",
      "patch": "@@ -30,7 +30,7 @@ public boolean equals(Object obj) {\n \n \t@Override\n \tpublic int hashCode() {\n-\t\treturn new Double(x).hashCode() + new Double(y).hashCode();\n+\t\treturn Double.valueOf(x).hashCode() + Double.valueOf(y).hashCode();\n \t}\n \n \tpublic final double getX() {",
      "parent_sha": "74ce471d7131aedab0dacce638a0c0aaaf6119d4"
    }
  },
  {
    "oid": "206f807952517da80d98344a72b4ef31d277b916",
    "message": "wip",
    "date": "2022-09-14T20:02:44Z",
    "url": "https://github.com/plantuml/plantuml/commit/206f807952517da80d98344a72b4ef31d277b916",
    "details": {
      "sha": "ec782c7a579d6d52193495f97c5ae4961aa08646",
      "filename": "src/net/sourceforge/plantuml/ugraphic/debug/UGraphicDebug.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/plantuml/plantuml/blob/206f807952517da80d98344a72b4ef31d277b916/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2Fdebug%2FUGraphicDebug.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/206f807952517da80d98344a72b4ef31d277b916/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2Fdebug%2FUGraphicDebug.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2Fdebug%2FUGraphicDebug.java?ref=206f807952517da80d98344a72b4ef31d277b916",
      "patch": "@@ -255,7 +255,7 @@ private String pointd(double x, double y) {\n \t}\n \n \tprivate String colorToString(HColor color) {\n-\t\tif (color == null)\n+\t\tif (HColors.isTransparent(color))\n \t\t\treturn \"NULL_COLOR\";\n \n \t\tif (color instanceof HColorSimple) {",
      "parent_sha": "b2afe9c9165e4e5bdaa39ca975499320a0bce5a2"
    }
  },
  {
    "oid": "a2859242ff4762b94b3287da5c13f38a0d230225",
    "message": "Move main link on header line of CommandReferenceMultilinesOverSeveral",
    "date": "2022-04-01T21:21:59Z",
    "url": "https://github.com/plantuml/plantuml/commit/a2859242ff4762b94b3287da5c13f38a0d230225",
    "details": {
      "sha": "cbb6210ce3cf3aa7304344c595eea2171c2564e2",
      "filename": "src/net/sourceforge/plantuml/sequencediagram/command/CommandReferenceMultilinesOverSeveral.java",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/plantuml/plantuml/blob/a2859242ff4762b94b3287da5c13f38a0d230225/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsequencediagram%2Fcommand%2FCommandReferenceMultilinesOverSeveral.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/a2859242ff4762b94b3287da5c13f38a0d230225/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsequencediagram%2Fcommand%2FCommandReferenceMultilinesOverSeveral.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsequencediagram%2Fcommand%2FCommandReferenceMultilinesOverSeveral.java?ref=a2859242ff4762b94b3287da5c13f38a0d230225",
      "patch": "@@ -71,6 +71,8 @@ private static RegexConcat getConcat() {\n \t\t\t\tnew RegexLeaf(\"over\"), //\n \t\t\t\tRegexLeaf.spaceOneOrMore(), //\n \t\t\t\tnew RegexLeaf(\"PARTS\", \"((?:[%pLN_.@]+|[%g][^%g]+[%g])(?:[%s]*,[%s]*(?:[%pLN_.@]+|[%g][^%g]+[%g]))*)\"), //\n+\t\t\t\tRegexLeaf.spaceZeroOrMore(), //\n+\t\t\t\tnew RegexOptional(new RegexLeaf(\"URL\", \"(\\\\[\\\\[.*?\\\\]\\\\])\")), //\n \t\t\t\tRegexLeaf.end());\n \t}\n \n@@ -103,13 +105,11 @@ public CommandExecutionResult execute(final SequenceDiagram diagram, BlocLines l\n \t\tlines = lines.removeEmptyColumns();\n \t\tDisplay strings = lines.toDisplay();\n \n+\t\tString url = arg.get(\"URL\", 0);\n+\t\tfinal UrlBuilder b = new UrlBuilder(diagram.getSkinParam().getValue(\"topurl\"), UrlMode.STRICT);\n \t\tUrl u = null;\n-\t\tif (strings.size() > 0) {\n-\t\tfinal UrlBuilder urlBuilder = new UrlBuilder(diagram.getSkinParam().getValue(\"topurl\"), UrlMode.STRICT);\n-\t\t\tu = urlBuilder.getUrl(strings.get(0).toString());\n-\t\t}\n-\t\tif (u != null) {\n-\t\t\tstrings = strings.subList(1, strings.size());\n+\t\tif (url != null) {\n+\t\t\tu = b.getUrl(url);\n \t\t}\n \n \t\tfinal HColor backColorGeneral = null;",
      "parent_sha": "51f90138b759568f988637773951f3f35f847fcd"
    }
  },
  {
    "oid": "465d53a545bd351dbabb326a000791103ee2921b",
    "message": "Try to turn around some rounding issues",
    "date": "2021-03-22T09:51:48Z",
    "url": "https://github.com/plantuml/plantuml/commit/465d53a545bd351dbabb326a000791103ee2921b",
    "details": {
      "sha": "dd9292c0fa00a9573ecfb18c8861ccbcaa0ccb6d",
      "filename": "test/demo1/SimpleSequenceDiagramTest.java",
      "status": "modified",
      "additions": 76,
      "deletions": 25,
      "changes": 101,
      "blob_url": "https://github.com/plantuml/plantuml/blob/465d53a545bd351dbabb326a000791103ee2921b/test%2Fdemo1%2FSimpleSequenceDiagramTest.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/465d53a545bd351dbabb326a000791103ee2921b/test%2Fdemo1%2FSimpleSequenceDiagramTest.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/test%2Fdemo1%2FSimpleSequenceDiagramTest.java?ref=465d53a545bd351dbabb326a000791103ee2921b",
      "patch": "@@ -4,6 +4,8 @@\n \n import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n \n import org.junit.jupiter.api.Test;\n \n@@ -30,11 +32,59 @@ void testSimple() throws IOException {\n \n \t\tassertEquals(\"(2 participants)\", diagramDescription.getDescription());\n \n-\t\tfinal String desc = new String(baos.toByteArray(), \"UTF-8\");\n+\t\tfinal String actual = new String(baos.toByteArray(), \"UTF-8\");\n \n \t\tfinal String expected = getExpectedResult();\n-\t\tassertEquals(expected, desc);\n+\t\tassertSameDebugGraphic(expected, actual);\n+\t}\n+\n+\tprivate void assertSameDebugGraphic(String expectedString, String actualString) {\n+\t\tfinal String[] expected = expectedString.split(\"\\n\");\n+\t\tfinal String[] actual = actualString.split(\"\\n\");\n+\n+\t\tif (expected.length != actual.length) {\n+\t\t\t// We know it will fail here, but we want to print the full info\n+\t\t\tassertEquals(expectedString, actualString);\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tfor (int i = 0; i < actual.length; i++) {\n+\t\t\tif (sameString(expected[i], actual[i]) == false) {\n+\t\t\t\tSystem.err.println(\"expected: \" + expected[i]);\n+\t\t\t\tSystem.err.println(\"actual  : \" + actual[i]);\n+\t\t\t\t// We know it will fail here, but we want to print the full info\n+\t\t\t\tassertEquals(expectedString, actualString);\n+\t\t\t}\n+\t\t}\n+\t}\n \n+\tprivate final Pattern pointLine = Pattern.compile(\"^(.*?)\\\\[ ([-.0-9]+) ; ([-.0-9]+) \\\\]$\");\n+\n+\tprivate boolean sameString(String s1, String s2) {\n+\t\tfinal Matcher line1 = pointLine.matcher(s1);\n+\t\tfinal Matcher line2 = pointLine.matcher(s2);\n+\t\tif (line1.matches() && line2.matches()) {\n+\t\t\tfinal String start1 = line1.group(1);\n+\t\t\tfinal String start2 = line2.group(1);\n+\t\t\tfinal String x1 = line1.group(2);\n+\t\t\tfinal String x2 = line2.group(2);\n+\t\t\tfinal String y1 = line1.group(3);\n+\t\t\tfinal String y2 = line2.group(3);\n+\t\t\treturn start1.equals(start2) && sameDouble(x1, x2) && sameDouble(y1, y2);\n+\n+\t\t}\n+\t\treturn s1.equals(s2);\n+\t}\n+\n+\tprivate boolean sameDouble(String double1, String double2) {\n+\t\tfinal double value1 = Double.parseDouble(double1);\n+\t\tfinal double value2 = Double.parseDouble(double2);\n+\t\tfinal double diff = Math.abs(value1 - value2);\n+\t\tfinal boolean result = diff < 0.005;\n+\t\tif (result == false) {\n+\t\t\tSystem.err.println(\"sameDouble:Non null diff=\" + diff);\n+\t\t}\n+\t\treturn result;\n \t}\n \n \tprivate String getText() {\n@@ -49,22 +99,22 @@ private String getExpectedResult() {\n \t\t\t\t\"DPI: 96\", //\n \t\t\t\t\"\", //\n \t\t\t\t\"LINE:\", //\n-\t\t\t\t\"  pt1: 49;38\", //\n-\t\t\t\t\"  pt2: 49;85\", //\n+\t\t\t\t\"  pt1: [ 49.0000 ; 38.0000 ]\", //\n+\t\t\t\t\"  pt2: [ 49.0000 ; 85.0000 ]\", //\n \t\t\t\t\"  stroke: 5.0-5.0-1.0\", //\n \t\t\t\t\"  shadow: 0\", //\n \t\t\t\t\"  color: ffa80036\", //\n \t\t\t\t\"\", //\n \t\t\t\t\"LINE:\", //\n-\t\t\t\t\"  pt1: 138;38\", //\n-\t\t\t\t\"  pt2: 138;85\", //\n+\t\t\t\t\"  pt1: [ 138.0000 ; 38.0000 ]\", //\n+\t\t\t\t\"  pt2: [ 138.0000 ; 85.0000 ]\", //\n \t\t\t\t\"  stroke: 5.0-5.0-1.0\", //\n \t\t\t\t\"  shadow: 0\", //\n \t\t\t\t\"  color: ffa80036\", //\n \t\t\t\t\"\", //\n \t\t\t\t\"RECTANGLE:\", //\n-\t\t\t\t\"  pt1: 5;5\", //\n-\t\t\t\t\"  pt2: 89;33\", //\n+\t\t\t\t\"  pt1: [ 5.0000 ; 5.0000 ]\", //\n+\t\t\t\t\"  pt2: [ 89.0000 ; 33.0000 ]\", //\n \t\t\t\t\"  xCorner: 0\", //\n \t\t\t\t\"  yCorner: 0\", //\n \t\t\t\t\"  stroke: 0.0-0.0-1.5\", //\n@@ -74,14 +124,14 @@ private String getExpectedResult() {\n \t\t\t\t\"\", //\n \t\t\t\t\"TEXT:\", //\n \t\t\t\t\"  text: Alice\", //\n-\t\t\t\t\"  position: 12;22\", //\n+\t\t\t\t\"  position: [ 12.0000 ; 22.9238 ]\", //\n \t\t\t\t\"  orientation: 0\", //\n \t\t\t\t\"  font: SansSerif.plain/14 []\", //\n \t\t\t\t\"  color: ffa80036\", //\n \t\t\t\t\"\", //\n \t\t\t\t\"RECTANGLE:\", //\n-\t\t\t\t\"  pt1: 5;84\", //\n-\t\t\t\t\"  pt2: 89;112\", //\n+\t\t\t\t\"  pt1: [ 5.0000 ; 84.0000 ]\", //\n+\t\t\t\t\"  pt2: [ 89.0000 ; 112.0000 ]\", //\n \t\t\t\t\"  xCorner: 0\", //\n \t\t\t\t\"  yCorner: 0\", //\n \t\t\t\t\"  stroke: 0.0-0.0-1.5\", //\n@@ -91,14 +141,14 @@ private String getExpectedResult() {\n \t\t\t\t\"\", //\n \t\t\t\t\"TEXT:\", //\n \t\t\t\t\"  text: Alice\", //\n-\t\t\t\t\"  position: 12;101\", //\n+\t\t\t\t\"  position: [ 12.0000 ; 101.9238 ]\", //\n \t\t\t\t\"  orientation: 0\", //\n \t\t\t\t\"  font: SansSerif.plain/14 []\", //\n \t\t\t\t\"  color: ffa80036\", //\n \t\t\t\t\"\", //\n \t\t\t\t\"RECTANGLE:\", //\n-\t\t\t\t\"  pt1: 108;5\", //\n-\t\t\t\t\"  pt2: 164;33\", //\n+\t\t\t\t\"  pt1: [ 108.0000 ; 5.0000 ]\", //\n+\t\t\t\t\"  pt2: [ 164.0000 ; 33.0000 ]\", //\n \t\t\t\t\"  xCorner: 0\", //\n \t\t\t\t\"  yCorner: 0\", //\n \t\t\t\t\"  stroke: 0.0-0.0-1.5\", //\n@@ -108,14 +158,14 @@ private String getExpectedResult() {\n \t\t\t\t\"\", //\n \t\t\t\t\"TEXT:\", //\n \t\t\t\t\"  text: Bob\", //\n-\t\t\t\t\"  position: 115;22\", //\n+\t\t\t\t\"  position: [ 115.0000 ; 22.9238 ]\", //\n \t\t\t\t\"  orientation: 0\", //\n \t\t\t\t\"  font: SansSerif.plain/14 []\", //\n \t\t\t\t\"  color: ffa80036\", //\n \t\t\t\t\"\", //\n \t\t\t\t\"RECTANGLE:\", //\n-\t\t\t\t\"  pt1: 108;84\", //\n-\t\t\t\t\"  pt2: 164;112\", //\n+\t\t\t\t\"  pt1: [ 108.0000 ; 84.0000 ]\", //\n+\t\t\t\t\"  pt2: [ 164.0000 ; 112.0000 ]\", //\n \t\t\t\t\"  xCorner: 0\", //\n \t\t\t\t\"  yCorner: 0\", //\n \t\t\t\t\"  stroke: 0.0-0.0-1.5\", //\n@@ -125,35 +175,36 @@ private String getExpectedResult() {\n \t\t\t\t\"\", //\n \t\t\t\t\"TEXT:\", //\n \t\t\t\t\"  text: Bob\", //\n-\t\t\t\t\"  position: 115;101\", //\n+\t\t\t\t\"  position: [ 115.0000 ; 101.9238 ]\", //\n \t\t\t\t\"  orientation: 0\", //\n \t\t\t\t\"  font: SansSerif.plain/14 []\", //\n \t\t\t\t\"  color: ffa80036\", //\n \t\t\t\t\"\", //\n \t\t\t\t\"POLYGON:\", //\n \t\t\t\t\"  points:\", //\n-\t\t\t\t\"   - 126;63\", //\n-\t\t\t\t\"   - 136;67\", //\n-\t\t\t\t\"   - 126;71\", //\n-\t\t\t\t\"   - 130;67\", //\n+\t\t\t\t\"   - [ 126.0000 ; 63.0000 ]\", //\n+\t\t\t\t\"   - [ 136.0000 ; 67.0000 ]\", //\n+\t\t\t\t\"   - [ 126.0000 ; 71.0000 ]\", //\n+\t\t\t\t\"   - [ 130.0000 ; 67.0000 ]\", //\n \t\t\t\t\"  stroke: 0.0-0.0-1.0\", //\n \t\t\t\t\"  shadow: 0\", //\n \t\t\t\t\"  color: ffa80036\", //\n \t\t\t\t\"  backcolor: ffa80036\", //\n \t\t\t\t\"\", //\n \t\t\t\t\"LINE:\", //\n-\t\t\t\t\"  pt1: 49;67\", //\n-\t\t\t\t\"  pt2: 132;67\", //\n+\t\t\t\t\"  pt1: [ 49.0000 ; 67.0000 ]\", //\n+\t\t\t\t\"  pt2: [ 132.0000 ; 67.0000 ]\", //\n \t\t\t\t\"  stroke: 0.0-0.0-1.0\", //\n \t\t\t\t\"  shadow: 0\", //\n \t\t\t\t\"  color: ffa80036\", //\n \t\t\t\t\"\", //\n \t\t\t\t\"TEXT:\", //\n \t\t\t\t\"  text: Hello\", //\n-\t\t\t\t\"  position: 56;62\", //\n+\t\t\t\t\"  position: [ 56.0000 ; 62.1436 ]\", //\n \t\t\t\t\"  orientation: 0\", //\n \t\t\t\t\"  font: SansSerif.plain/13 []\", //\n \t\t\t\t\"  color: ffa80036\" //\n+\n \t\t);\n \t}\n ",
      "parent_sha": "0d6a17a27e100afd8010db35388b2076e1e7f671"
    }
  },
  {
    "oid": "35f94e2b6de505e637039b3e12253ef65cd71535",
    "message": "Fix poorly distributed hashCode in Position.java\n\nBitwise shift has lower precedence than addition, so the hashCode calculation was like `(xmin + ymin) << (8 + xmax) << (16 + ymax) << 24` which results in absolutely poor hashCode (in particular, lower 24 bits are always zero).",
    "date": "2022-10-28T09:26:32Z",
    "url": "https://github.com/plantuml/plantuml/commit/35f94e2b6de505e637039b3e12253ef65cd71535",
    "details": {
      "sha": "cc776d9f8d8474124cb25d51a40fe2b41ab03d45",
      "filename": "src/net/sourceforge/plantuml/golem/Position.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/plantuml/plantuml/blob/35f94e2b6de505e637039b3e12253ef65cd71535/src%2Fnet%2Fsourceforge%2Fplantuml%2Fgolem%2FPosition.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/35f94e2b6de505e637039b3e12253ef65cd71535/src%2Fnet%2Fsourceforge%2Fplantuml%2Fgolem%2FPosition.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fgolem%2FPosition.java?ref=35f94e2b6de505e637039b3e12253ef65cd71535",
      "patch": "@@ -57,7 +57,7 @@ public boolean equals(Object o) {\n \n \t@Override\n \tpublic int hashCode() {\n-\t\treturn xmin + ymin << 8 + xmax << 16 + ymax << 24;\n+\t\treturn xmin + (ymin << 8) + (xmax << 16) + (ymax << 24);\n \t}\n \n \t@Override",
      "parent_sha": "ab8d4f41183293be960fd2518cb226cefa53b51c"
    }
  },
  {
    "oid": "151fa30a5db99e7218fb6700ce0d745cbb84c668",
    "message": "Make source code Java-7-compatible",
    "date": "2023-07-24T15:03:58Z",
    "url": "https://github.com/plantuml/plantuml/commit/151fa30a5db99e7218fb6700ce0d745cbb84c668",
    "details": {
      "sha": "606601bd7858fb684ea13a6921d6309aba7d8f52",
      "filename": "src/net/sourceforge/plantuml/svek/SvekNode.java",
      "status": "modified",
      "additions": 10,
      "deletions": 4,
      "changes": 14,
      "blob_url": "https://github.com/plantuml/plantuml/blob/151fa30a5db99e7218fb6700ce0d745cbb84c668/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsvek%2FSvekNode.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/151fa30a5db99e7218fb6700ce0d745cbb84c668/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsvek%2FSvekNode.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsvek%2FSvekNode.java?ref=151fa30a5db99e7218fb6700ce0d745cbb84c668",
      "patch": "@@ -41,6 +41,7 @@\n import net.sourceforge.plantuml.abel.Entity;\n import net.sourceforge.plantuml.abel.EntityPosition;\n import net.sourceforge.plantuml.abel.Hideable;\n+import net.sourceforge.plantuml.abel.Link;\n import net.sourceforge.plantuml.abel.Together;\n import net.sourceforge.plantuml.klimt.Shadowable;\n import net.sourceforge.plantuml.klimt.UTranslate;\n@@ -389,10 +390,15 @@ public boolean isShielded() {\n \t\t// Instead, only check if we will have a shield (size is irrelevant here)\n \t\t// This node will have a shield if it is target of a qualified association (will have a qualifier label\n \t\t// placed besides this type's bounding box.)\n-\t\treturn this.leaf.getDiagram().getLinks().stream()\n-\t\t\t\t\t\t.filter(link -> link.getEntity1() == this.leaf || link.getEntity2() == this.leaf)\n-\t\t\t\t\t\t.anyMatch(link -> (this.leaf == link.getEntity1() && link.hasKal1())\n-\t\t\t\t\t\t\t\t\t\t|| (this.leaf == link.getEntity2() && link.hasKal2()));\n+\t\tfor (Link link: this.leaf.getDiagram().getLinks()) {\n+\t\t\tif (link.getEntity1() == this.leaf || link.getEntity2() == this.leaf) {\n+\t\t\t\tif ((this.leaf == link.getEntity1() && link.hasKal1())\n+\t\t\t\t\t\t\t\t|| (this.leaf == link.getEntity2() && link.hasKal2())) {\n+\t\t\t\t\treturn true;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\treturn false;\n \t}\n \n \tpublic void resetMoveSvek() {",
      "parent_sha": "49ab6c9c6ec02dac1c10bd6d974522ce3d3f7a8b"
    }
  },
  {
    "oid": "fc8924e65f9312deb58023cec8d20cc6b22a9c10",
    "message": "\ud83d\udc1b fix `data-source-line` for multiline command\nhttps://github.com/plantuml/plantuml/issues/2080",
    "date": "2025-03-30T09:58:49Z",
    "url": "https://github.com/plantuml/plantuml/commit/fc8924e65f9312deb58023cec8d20cc6b22a9c10",
    "details": {
      "sha": "8519896d76013c4c6c61961353637a8016ad1ff4",
      "filename": "src/main/java/net/sourceforge/plantuml/descdiagram/command/CommandCreateElementMultilines.java",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/plantuml/plantuml/blob/fc8924e65f9312deb58023cec8d20cc6b22a9c10/src%2Fmain%2Fjava%2Fnet%2Fsourceforge%2Fplantuml%2Fdescdiagram%2Fcommand%2FCommandCreateElementMultilines.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/fc8924e65f9312deb58023cec8d20cc6b22a9c10/src%2Fmain%2Fjava%2Fnet%2Fsourceforge%2Fplantuml%2Fdescdiagram%2Fcommand%2FCommandCreateElementMultilines.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fmain%2Fjava%2Fnet%2Fsourceforge%2Fplantuml%2Fdescdiagram%2Fcommand%2FCommandCreateElementMultilines.java?ref=fc8924e65f9312deb58023cec8d20cc6b22a9c10",
      "patch": "@@ -65,6 +65,7 @@\n import net.sourceforge.plantuml.url.UrlBuilder;\n import net.sourceforge.plantuml.url.UrlMode;\n import net.sourceforge.plantuml.utils.BlocLines;\n+import net.sourceforge.plantuml.utils.LineLocation;\n \n public class CommandCreateElementMultilines extends CommandMultilines2<AbstractEntityDiagram> {\n \n@@ -125,6 +126,8 @@ private static RegexConcat getRegexConcat(int type) {\n \t@Override\n \tprotected CommandExecutionResult executeNow(AbstractEntityDiagram diagram, BlocLines lines, ParserPass currentPass)\n \t\t\tthrows NoSuchColorException {\n+\t\tfinal LineLocation location = lines.getLocation();\n+\n \t\tlines = lines.trimSmart(1).expandsNewline(false);\n \t\tfinal RegexResult line0 = getStartingPattern().matcher(lines.getFirst().getTrimmed().getString());\n \t\tfinal String symbol = StringUtils.goUpperCase(line0.get(\"TYPE\", 0));\n@@ -163,7 +166,7 @@ protected CommandExecutionResult executeNow(AbstractEntityDiagram diagram, BlocL\n \t\tfinal Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(idShort));\n \t\tEntity result = quark.getData();\n \t\tif (quark.getData() == null)\n-\t\t\tresult = diagram.reallyCreateLeaf(lines.getLocation(), quark, display, type, usymbol);\n+\t\t\tresult = diagram.reallyCreateLeaf(location, quark, display, type, usymbol);\n \n \t\tif (CommandCreateElementFull.existsWithBadType3(diagram, quark, type, usymbol))\n \t\t\treturn CommandExecutionResult.error(\"This element (\" + quark.getName() + \") is already defined\");",
      "parent_sha": "1b239dbce7a7dffe1f8a35a5ea0633e7f5f17d4d"
    }
  },
  {
    "oid": "8015ed12853b5e52c643b78ea218e327604a6d73",
    "message": "Remove contentScriptType: application/ecmascript",
    "date": "2022-02-14T11:42:16Z",
    "url": "https://github.com/plantuml/plantuml/commit/8015ed12853b5e52c643b78ea218e327604a6d73",
    "details": {
      "sha": "93e55f94a49abcca47ca65dbb94561075980967a",
      "filename": "src/net/sourceforge/plantuml/svg/SvgGraphics.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/plantuml/plantuml/blob/8015ed12853b5e52c643b78ea218e327604a6d73/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsvg%2FSvgGraphics.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/8015ed12853b5e52c643b78ea218e327604a6d73/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsvg%2FSvgGraphics.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsvg%2FSvgGraphics.java?ref=8015ed12853b5e52c643b78ea218e327604a6d73",
      "patch": "@@ -680,7 +680,7 @@ private void createXmlInternal(OutputStream os) throws TransformerException {\n \t\troot.setAttribute(\"viewBox\", \"0 0 \" + maxXscaled + \" \" + maxYscaled);\n \t\troot.setAttribute(\"zoomAndPan\", \"magnify\");\n \t\troot.setAttribute(\"preserveAspectRatio\", preserveAspectRatio);\n-\t\troot.setAttribute(\"contentScriptType\", \"application/ecmascript\");\n+\t\t// root.setAttribute(\"contentScriptType\", \"application/ecmascript\");\n \t\troot.setAttribute(\"contentStyleType\", \"text/css\");\n \n \t\tif (pendingBackground != null) {",
      "parent_sha": "fce81ce26745e5b1428ae3430d73e8c18b032047"
    }
  },
  {
    "oid": "7d7fdaddf2805195db76c03b2413069dd3a788a5",
    "message": "Tweak visibility in PSystemError to help with tests.",
    "date": "2021-03-18T13:12:00Z",
    "url": "https://github.com/plantuml/plantuml/commit/7d7fdaddf2805195db76c03b2413069dd3a788a5",
    "details": {
      "sha": "423b12c4d0f30a3a3d0918d1fbd512805849587b",
      "filename": "src/net/sourceforge/plantuml/error/PSystemError.java",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/plantuml/plantuml/blob/7d7fdaddf2805195db76c03b2413069dd3a788a5/src%2Fnet%2Fsourceforge%2Fplantuml%2Ferror%2FPSystemError.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/7d7fdaddf2805195db76c03b2413069dd3a788a5/src%2Fnet%2Fsourceforge%2Fplantuml%2Ferror%2FPSystemError.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Ferror%2FPSystemError.java?ref=7d7fdaddf2805195db76c03b2413069dd3a788a5",
      "patch": "@@ -115,6 +115,10 @@ final public Collection<ErrorUml> getErrorsUml() {\n \t\treturn Collections.singleton(singleError);\n \t}\n \n+\tfinal public ErrorUml getFirstError() {\n+\t\treturn singleError;\n+\t}\n+\n \tfinal public String getWarningOrError() {\n \t\tfinal StringBuilder sb = new StringBuilder();\n \t\tsb.append(getDescription());\n@@ -156,7 +160,7 @@ private List<String> header() {\n \t\treturn result;\n \t}\n \n-\tprivate List<String> getPureAsciiFormatted() {\n+\tpublic List<String> getPureAsciiFormatted() {\n \t\tfinal List<String> result = getTextFromStack();\n \t\tresult.addAll(getTextFullBody());\n \t\tresult.add(\"^^^^^\");",
      "parent_sha": "82c57e1b543caab35cfdfe00dc9ff3a6b23994e7"
    }
  },
  {
    "oid": "8b5ee45cd754fdaa8e0e1917b0ba9d6f514c6695",
    "message": "Fixed typo : arround becomes around",
    "date": "2022-11-14T09:59:47Z",
    "url": "https://github.com/plantuml/plantuml/commit/8b5ee45cd754fdaa8e0e1917b0ba9d6f514c6695",
    "details": {
      "sha": "4b6a49fd07bacde5e5084270d5317cf7998f2b64",
      "filename": "src/net/sourceforge/plantuml/svek/GraphvizCrash.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/plantuml/plantuml/blob/8b5ee45cd754fdaa8e0e1917b0ba9d6f514c6695/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsvek%2FGraphvizCrash.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/8b5ee45cd754fdaa8e0e1917b0ba9d6f514c6695/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsvek%2FGraphvizCrash.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsvek%2FGraphvizCrash.java?ref=8b5ee45cd754fdaa8e0e1917b0ba9d6f514c6695",
      "patch": "@@ -124,7 +124,7 @@ public static void pleaseGoTo(List<String> strings) {\n \tpublic static void youShouldSendThisDiagram(List<String> strings) {\n \t\tstrings.add(\"You should send this diagram and this image to <b>plantuml@gmail.com</b> or\");\n \t\tstrings.add(\"post to <b>https://plantuml.com/qa</b> to solve this issue.\");\n-\t\tstrings.add(\"You can try to turn arround this issue by simplifing your diagram.\");\n+\t\tstrings.add(\"You can try to turn around this issue by simplifing your diagram.\");\n \t}\n \n \tpublic static void thisMayBeCaused(final List<String> strings) {",
      "parent_sha": "a3f11281728a4b3952218d9eb7468f893199669d"
    }
  },
  {
    "oid": "5fe658158f66cb5c4816ba77a1a00ed6978f619b",
    "message": "Try to fix getPackageName",
    "date": "2021-03-23T17:30:58Z",
    "url": "https://github.com/plantuml/plantuml/commit/5fe658158f66cb5c4816ba77a1a00ed6978f619b",
    "details": {
      "sha": "5700d66854683d0b2f636ee89ef803fadd7e91db",
      "filename": "test/nonreg/BasicTest.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/plantuml/plantuml/blob/5fe658158f66cb5c4816ba77a1a00ed6978f619b/test%2Fnonreg%2FBasicTest.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/5fe658158f66cb5c4816ba77a1a00ed6978f619b/test%2Fnonreg%2FBasicTest.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/test%2Fnonreg%2FBasicTest.java?ref=5fe658158f66cb5c4816ba77a1a00ed6978f619b",
      "patch": "@@ -23,6 +23,7 @@\n \n /*\n  * All non-regression tests must extends BasicTest class.\n+ * \n  * The tests must have a single test method that call the 'checkImage()' method.\n  * Diagram to be tested must be stored in the test itself, separated by triple-quoted strings\n  * The expected result (build using UGraphicDebug) is stored in a class xxxxResult.java, also separated by triple-quoted strings.\n@@ -75,7 +76,7 @@ protected String getLocalFolder() {\n \t}\n \n \tprivate String getPackageName() {\n-\t\treturn getClass().getPackageName();\n+\t\treturn getClass().getPackage().getName();\n \t}\n \n \tprotected Path getResultFile() {",
      "parent_sha": "a4f8170d946de2d7f761ec830e25f5de05ff614f"
    }
  },
  {
    "oid": "ee3eef865231b816b0157184312c5c006c7d5132",
    "message": "feat: enable DITAA in LGPL version\nhttps://github.com/plantuml/plantuml/issues/1514",
    "date": "2023-08-26T10:03:19Z",
    "url": "https://github.com/plantuml/plantuml/commit/ee3eef865231b816b0157184312c5c006c7d5132",
    "details": {
      "sha": "cf47b90094469ab24909bd107d91c2aace561381",
      "filename": "src/net/sourceforge/plantuml/PSystemBuilder.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/plantuml/plantuml/blob/ee3eef865231b816b0157184312c5c006c7d5132/src%2Fnet%2Fsourceforge%2Fplantuml%2FPSystemBuilder.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/ee3eef865231b816b0157184312c5c006c7d5132/src%2Fnet%2Fsourceforge%2Fplantuml%2FPSystemBuilder.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2FPSystemBuilder.java?ref=ee3eef865231b816b0157184312c5c006c7d5132",
      "patch": "@@ -218,10 +218,12 @@ final public Diagram createPSystem(List<StringLocated> source, List<StringLocate\n \t\t// ::done\n \n \t\t// ::comment when __CORE__ or __MIT__ or __EPL__ or __BSD__ or __ASL__ or __LGPL__\n-\t\tfactories.add(new PSystemDitaaFactory());\n \t\tfactories.add(new PSystemJcckitFactory());\n \t\tfactories.add(new PSystemSudokuFactory());\n \t\t// ::done\n+\t\t// ::comment when __CORE__ or __MIT__ or __EPL__ or __BSD__ or __ASL__\n+\t\tfactories.add(new PSystemDitaaFactory());\n+\t\t// ::done\n \n \t\t// ::comment when __CORE__\n \t\tfactories.add(new PSystemDefinitionFactory());",
      "parent_sha": "33f0d5b204fae70cdca3943ff4e8997829e56fae"
    }
  },
  {
    "oid": "25a51b27e7856b6983f1b1b734cfbf70c7430dab",
    "message": "wip",
    "date": "2022-04-27T16:37:41Z",
    "url": "https://github.com/plantuml/plantuml/commit/25a51b27e7856b6983f1b1b734cfbf70c7430dab",
    "details": {
      "sha": "68a0cdb9e0d143e602a129421b1e85bf76da71c9",
      "filename": "src/net/sourceforge/plantuml/security/SURL.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/plantuml/plantuml/blob/25a51b27e7856b6983f1b1b734cfbf70c7430dab/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsecurity%2FSURL.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/25a51b27e7856b6983f1b1b734cfbf70c7430dab/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsecurity%2FSURL.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsecurity%2FSURL.java?ref=25a51b27e7856b6983f1b1b734cfbf70c7430dab",
      "patch": "@@ -110,7 +110,7 @@ public class SURL {\n \t/**\n \t * Regex to remove the UserInfo part from a URL.\n \t */\n-\tprivate static final Pattern PATTERN_USERINFO = Pattern.compile(\"(^https?://)([-_0-9a-zA-Z]+@)([^@]*)\");\n+\tprivate static final Pattern PATTERN_USERINFO = Pattern.compile(\"(^https?://)([-_:0-9a-zA-Z]+@)([^@]*)\");\n \n \tprivate static final ExecutorService EXE = Executors.newCachedThreadPool(new ThreadFactory() {\n \t\tpublic Thread newThread(Runnable r) {",
      "parent_sha": "dbaaa0165ee199ec3f8cdc8c44c86f63bba1d080"
    }
  },
  {
    "oid": "ec246f16a0c878dd09203d6e879e29b812f1a651",
    "message": "dot: be less restrictive in digraph header\n\nThe space between the digraph title and the following brace is not required by\n\"dot\".",
    "date": "2020-05-05T11:48:56Z",
    "url": "https://github.com/plantuml/plantuml/commit/ec246f16a0c878dd09203d6e879e29b812f1a651",
    "details": {
      "sha": "a7fd314a1afedd57497f32cb37d6cded0437eb8b",
      "filename": "src/net/sourceforge/plantuml/directdot/PSystemDotFactory.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/plantuml/plantuml/blob/ec246f16a0c878dd09203d6e879e29b812f1a651/src%2Fnet%2Fsourceforge%2Fplantuml%2Fdirectdot%2FPSystemDotFactory.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/ec246f16a0c878dd09203d6e879e29b812f1a651/src%2Fnet%2Fsourceforge%2Fplantuml%2Fdirectdot%2FPSystemDotFactory.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fdirectdot%2FPSystemDotFactory.java?ref=ec246f16a0c878dd09203d6e879e29b812f1a651",
      "patch": "@@ -53,7 +53,7 @@ public PSystemDot init(String startLine) {\n \n \t@Override\n \tpublic PSystemDot executeLine(PSystemDot system, String line) {\n-\t\tif (system == null && line.matches(\"(strict\\\\s+)?(di)?graph\\\\s+\\\\w+\\\\s+\\\\{\")) {\n+\t\tif (system == null && line.matches(\"(strict\\\\s+)?(di)?graph\\\\s+\\\\w+\\\\s*\\\\{\")) {\n \t\t\tdata = new StringBuilder(line);\n \t\t\tdata.append(\"\\n\");\n \t\t\treturn new PSystemDot(data.toString());",
      "parent_sha": "138cfb900a502043230d575dbf79aa911e2e265b"
    }
  },
  {
    "oid": "263662d6d3cca0865f8d1320a9f5825758f968c2",
    "message": "#1580 Make source code compatible to Java 1.7 (forgot one stream usage)",
    "date": "2023-10-30T09:39:34Z",
    "url": "https://github.com/plantuml/plantuml/commit/263662d6d3cca0865f8d1320a9f5825758f968c2",
    "details": {
      "sha": "4c10b60fc512da9b99b82de0c2ab31408e323332",
      "filename": "src/net/sourceforge/plantuml/abel/EntityGenderUtils.java",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/plantuml/plantuml/blob/263662d6d3cca0865f8d1320a9f5825758f968c2/src%2Fnet%2Fsourceforge%2Fplantuml%2Fabel%2FEntityGenderUtils.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/263662d6d3cca0865f8d1320a9f5825758f968c2/src%2Fnet%2Fsourceforge%2Fplantuml%2Fabel%2FEntityGenderUtils.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fabel%2FEntityGenderUtils.java?ref=263662d6d3cca0865f8d1320a9f5825758f968c2",
      "patch": "@@ -71,7 +71,14 @@ public boolean contains(Entity test) {\n \t\t\t\tif (test.getStereotype() == null) {\n \t\t\t\t\treturn false;\n \t\t\t\t}\n-\t\t\t\treturn test.getStereotype().getLabels(Guillemet.DOUBLE_COMPARATOR).stream().anyMatch(stereotype::equals);\n+\n+\t\t\t\tfor (String label : test.getStereotype().getLabels(Guillemet.DOUBLE_COMPARATOR)) {\n+\t\t\t\t\tif (label.equals(stereotype)) {\n+\t\t\t\t\t\treturn true;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\n+\t\t\t\treturn false;\n \t\t\t}\n \n \t\t\t@Override",
      "parent_sha": "8b87aa0c1c84026408b1b07de2a196146f38e603"
    }
  },
  {
    "oid": "b2f33306cae58ee6420206a3b515f889e2b55f48",
    "message": "Update Colors according to Archiate off. Specs \n\nThis is mainly a proposal.\r\nThe colors at the moment are sometimes quite \"loud\" and on some it's a bit hard to read the (black) text on it. The colors from the Archimate Specifications (https://pubs.opengroup.org/architecture/archimate3-doc/chap03.html#_Toc10045294) are more subtle and you can better read text on it. It is not necessary to change the colors of the sprites too. But that's just my opinion.",
    "date": "2020-04-10T12:29:24Z",
    "url": "https://github.com/plantuml/plantuml/commit/b2f33306cae58ee6420206a3b515f889e2b55f48",
    "details": {
      "sha": "bc9736a2c024b377dabca85b8036b40c742e9e53",
      "filename": "src/net/sourceforge/plantuml/ugraphic/color/HColorSet.java",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/plantuml/plantuml/blob/b2f33306cae58ee6420206a3b515f889e2b55f48/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2Fcolor%2FHColorSet.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/b2f33306cae58ee6420206a3b515f889e2b55f48/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2Fcolor%2FHColorSet.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2Fcolor%2FHColorSet.java?ref=b2f33306cae58ee6420206a3b515f889e2b55f48",
      "patch": "@@ -213,13 +213,13 @@ private HColorSet() {\n \t\tregister(\"Yellow\", \"#FFFF00\");\n \t\tregister(\"YellowGreen\", \"#9ACD32\");\n \t\t// Archimate\n-\t\tregister(\"BUSINESS\", \"#FFFF00\");\n-\t\tregister(\"APPLICATION\", \"#A9DCDF\");\n-\t\tregister(\"MOTIVATION\", \"#B19CD9\");\n-\t\tregister(\"STRATEGY\", \"#F6E4CC\");\n-\t\tregister(\"TECHNOLOGY\", \"#90EE90\");\n-\t\tregister(\"PHYSICAL\", \"#CCFFCC\");\n-\t\tregister(\"IMPLEMENTATION\", \"#FFA6BF\");\n+\t\tregister(\"BUSINESS\", \"#FFFFCC\");\n+\t\tregister(\"APPLICATION\", \"#C2F0FF\");\n+\t\tregister(\"MOTIVATION\", \"#EFEFFF\");\n+\t\tregister(\"STRATEGY\", \"#F8E7C0\");\n+\t\tregister(\"TECHNOLOGY\", \"#C9FFC9\");\n+\t\tregister(\"PHYSICAL\", \"#97FF97\");\n+\t\tregister(\"IMPLEMENTATION\", \"#FFE0E0\");\n \t}\n \n \tprivate void register(String s, String color) {",
      "parent_sha": "85ad30b381a0322fedcf6dc0deac6b642e0a515e"
    }
  },
  {
    "oid": "a38383b9e313390307956f90a3c943567fbf9725",
    "message": "Fix buggy links in sequence groups #970",
    "date": "2022-03-27T19:22:28Z",
    "url": "https://github.com/plantuml/plantuml/commit/a38383b9e313390307956f90a3c943567fbf9725",
    "details": {
      "sha": "859c29bda346c8d281a3c81c267b2e699ea4145c",
      "filename": "src/net/sourceforge/plantuml/sequencediagram/command/CommandGrouping.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/plantuml/plantuml/blob/a38383b9e313390307956f90a3c943567fbf9725/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsequencediagram%2Fcommand%2FCommandGrouping.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/a38383b9e313390307956f90a3c943567fbf9725/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsequencediagram%2Fcommand%2FCommandGrouping.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsequencediagram%2Fcommand%2FCommandGrouping.java?ref=a38383b9e313390307956f90a3c943567fbf9725",
      "patch": "@@ -93,7 +93,7 @@ protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocatio\n \t\t\tif (StringUtils.isEmpty(comment)) {\n \t\t\t\tcomment = \"group\";\n \t\t\t} else {\n-\t\t\t\tfinal Pattern p = Pattern.compile(\"^(.*(?:\\\\[\\\\[.*\\\\]\\\\]).*?|.*?)\\\\[(.*)\\\\]$\");\n+\t\t\t\tfinal Pattern p = Pattern.compile(\"^(.*\\\\[\\\\[.*\\\\]\\\\].*?|.*?)\\\\[(.*)\\\\]$\");\n \t\t\t\tfinal Matcher m = p.matcher(comment);\n \t\t\t\tif (m.find()) {\n \t\t\t\t\ttype = m.group(1);",
      "parent_sha": "fb2296510c5bafc156be035ba6e1fed4d5e6e10c"
    }
  },
  {
    "oid": "659b723dd3339e36dd797e4d4d61d0dcbc58b9e5",
    "message": "Avoid too early shield size calculation in some additional cases (#1467)",
    "date": "2023-07-24T15:03:58Z",
    "url": "https://github.com/plantuml/plantuml/commit/659b723dd3339e36dd797e4d4d61d0dcbc58b9e5",
    "details": {
      "sha": "097813da94ccdfbbaa9183fe2954f734a65db7c0",
      "filename": "src/net/sourceforge/plantuml/svek/SvekNode.java",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/plantuml/plantuml/blob/659b723dd3339e36dd797e4d4d61d0dcbc58b9e5/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsvek%2FSvekNode.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/659b723dd3339e36dd797e4d4d61d0dcbc58b9e5/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsvek%2FSvekNode.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsvek%2FSvekNode.java?ref=659b723dd3339e36dd797e4d4d61d0dcbc58b9e5",
      "patch": "@@ -146,7 +146,7 @@ public void appendShape(StringBuilder sb, StringBounder stringBounder) {\n \t\t\tSvekUtils.println(sb);\n \t\t\treturn;\n \t\t}\n-\t\tif (type == ShapeType.RECTANGLE && shield().isZero() == false) {\n+\t\tif (type == ShapeType.RECTANGLE && isShielded()) {\n \t\t\tappendHtml(sb);\n \t\t\tSvekUtils.println(sb);\n \t\t\treturn;\n@@ -326,7 +326,7 @@ private void appendTd(StringBuilder sb) {\n \t}\n \n \tprivate void appendShapeInternal(StringBuilder sb) {\n-\t\tif (type == ShapeType.RECTANGLE && shield().isZero() == false)\n+\t\tif (type == ShapeType.RECTANGLE && isShielded())\n \t\t\tthrow new UnsupportedOperationException();\n \t\telse if (type == ShapeType.RECTANGLE || type == ShapeType.RECTANGLE_WITH_CIRCLE_INSIDE\n \t\t\t\t|| type == ShapeType.FOLDER)",
      "parent_sha": "151fa30a5db99e7218fb6700ce0d745cbb84c668"
    }
  },
  {
    "oid": "829b7558a05fbbfad0031505ea7c889b71b831f1",
    "message": "refactor: code simplification",
    "date": "2024-08-28T08:21:53Z",
    "url": "https://github.com/plantuml/plantuml/commit/829b7558a05fbbfad0031505ea7c889b71b831f1",
    "details": {
      "sha": "7ca5f8895d3c30d4a90e7e13bff5ea36e275c9a1",
      "filename": "src/net/sourceforge/plantuml/activitydiagram3/ftile/vcompact/FtileRepeat.java",
      "status": "modified",
      "additions": 32,
      "deletions": 45,
      "changes": 77,
      "blob_url": "https://github.com/plantuml/plantuml/blob/829b7558a05fbbfad0031505ea7c889b71b831f1/src%2Fnet%2Fsourceforge%2Fplantuml%2Factivitydiagram3%2Fftile%2Fvcompact%2FFtileRepeat.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/829b7558a05fbbfad0031505ea7c889b71b831f1/src%2Fnet%2Fsourceforge%2Fplantuml%2Factivitydiagram3%2Fftile%2Fvcompact%2FFtileRepeat.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Factivitydiagram3%2Fftile%2Fvcompact%2FFtileRepeat.java?ref=829b7558a05fbbfad0031505ea7c889b71b831f1",
      "patch": "@@ -71,6 +71,7 @@\n import net.sourceforge.plantuml.klimt.geom.XPoint2D;\n import net.sourceforge.plantuml.klimt.shape.TextBlock;\n import net.sourceforge.plantuml.klimt.shape.TextBlockUtils;\n+import net.sourceforge.plantuml.klimt.shape.UPolygon;\n import net.sourceforge.plantuml.style.ISkinSimple;\n import net.sourceforge.plantuml.svek.ConditionStyle;\n import net.sourceforge.plantuml.utils.Direction;\n@@ -220,30 +221,24 @@ private XPoint2D getP2(final StringBounder stringBounder) {\n \t\tpublic void drawU(UGraphic ug) {\n \t\t\tfinal StringBounder stringBounder = ug.getStringBounder();\n \n-\t\t\tfinal Snake snake = Snake.create(skinParam(), arrowColor, skinParam().arrows().asToDown()).withLabel(tbin,\n-\t\t\t\t\tarrowHorizontalAlignment());\n \t\t\tfinal XPoint2D p1 = getP1(stringBounder);\n \t\t\tfinal XPoint2D p2 = getP2(stringBounder);\n-\t\t\tsnake.addPoint(p1);\n-\t\t\tif (p1.getX() != p2.getX()) {\n-\t\t\t\tfinal double my = (p1.getY() + p2.getY()) / 2;\n-\t\t\t\tsnake.addPoint(new XPoint2D(p1.getX(), my));\n-\t\t\t\tsnake.addPoint(new XPoint2D(p2.getX(), my));\n-\t\t\t}\n-\t\t\tsnake.addPoint(p2);\n-\n-\t\t\tug.draw(snake);\n+\t\t\tdrawSnake(ug, p1, p2);\n \t\t}\n \n \t\t@Override\n \t\tpublic void drawTranslate(UGraphic ug, UTranslate translate1, UTranslate translate2) {\n \t\t\tfinal StringBounder stringBounder = ug.getStringBounder();\n \n-\t\t\tfinal Snake snake = Snake.create(skinParam(), arrowColor, skinParam().arrows().asToDown()).withLabel(tbin,\n-\t\t\t\t\tarrowHorizontalAlignment());\n \t\t\tfinal XPoint2D p1 = translate1.getTranslated(getP1(stringBounder));\n \t\t\tfinal XPoint2D p2 = translate2.getTranslated(getP2(stringBounder));\n \n+\t\t\tdrawSnake(ug, p1, p2);\n+\t\t}\n+\n+\t\tprivate void drawSnake(UGraphic ug, final XPoint2D p1, final XPoint2D p2) {\n+\t\t\tfinal Snake snake = Snake.create(skinParam(), arrowColor, skinParam().arrows().asToDown()).withLabel(tbin,\n+\t\t\t\t\tarrowHorizontalAlignment());\n \t\t\tsnake.addPoint(p1);\n \t\t\tif (p1.getX() != p2.getX()) {\n \t\t\t\tfinal double my = (p1.getY() + p2.getY()) / 2;\n@@ -254,6 +249,7 @@ public void drawTranslate(UGraphic ug, UTranslate translate1, UTranslate transla\n \n \t\t\tug.draw(snake);\n \t\t}\n+\n \t}\n \n \tclass ConnectionOut extends AbstractConnection implements ConnectionTranslatable {\n@@ -334,18 +330,18 @@ public void drawU(UGraphic ug) {\n \t\t\tfinal StringBounder stringBounder = ug.getStringBounder();\n \t\t\tfinal XPoint2D p1 = getP1(stringBounder);\n \t\t\tfinal XPoint2D p2 = getP2(stringBounder);\n-\t\t\tdrawBack(ug, p1, p2);\n+\t\t\tdrawSnake(ug, p1, p2);\n \t\t}\n \n \t\t@Override\n \t\tpublic void drawTranslate(UGraphic ug, UTranslate translate1, UTranslate translate2) {\n \t\t\tfinal StringBounder stringBounder = ug.getStringBounder();\n \t\t\tfinal XPoint2D p1 = translate1.getTranslated(getP1(stringBounder));\n \t\t\tfinal XPoint2D p2 = translate2.getTranslated(getP2(stringBounder));\n-\t\t\tdrawBack(ug, p1, p2);\n+\t\t\tdrawSnake(ug, p1, p2);\n \t\t}\n \n-\t\tprivate void drawBack(UGraphic ug, XPoint2D p1, XPoint2D p2) {\n+\t\tprivate void drawSnake(UGraphic ug, XPoint2D p1, XPoint2D p2) {\n \t\t\tfinal StringBounder stringBounder = ug.getStringBounder();\n \n \t\t\tfinal XDimension2D dimRepeat = repeat.calculateDimension(stringBounder);\n@@ -408,35 +404,21 @@ private XPoint2D getP2(final StringBounder stringBounder) {\n \n \t\tpublic void drawU(UGraphic ug) {\n \t\t\tfinal StringBounder stringBounder = ug.getStringBounder();\n-\n \t\t\tfinal XPoint2D p1 = getP1(stringBounder);\n \t\t\tfinal XPoint2D p2 = getP2(stringBounder);\n-\t\t\tfinal XDimension2D dimDiamond2 = diamond2.calculateDimension(stringBounder);\n-\t\t\tfinal double x1 = p1.getX() + dimDiamond2.getWidth();\n-\t\t\tfinal double y1 = p1.getY() + dimDiamond2.getHeight() / 2;\n-\t\t\tfinal double x2 = p2.getX();\n-\t\t\tfinal double y2 = p2.getY();\n-\n-\t\t\tfinal Snake snake = Snake.create(skinParam(), arrowColor, skinParam().arrows().asToUp()).withLabel(tbback,\n-\t\t\t\t\tarrowHorizontalAlignment());\n-\n-\t\t\tsnake.addPoint(x1, y1);\n-\t\t\tsnake.addPoint(x2, y1);\n-\t\t\tsnake.addPoint(x2, y2);\n-\n-\t\t\tug.draw(snake);\n+\t\t\tdrawSnake(ug, p1, p2);\n \t\t}\n \n \t\t@Override\n \t\tpublic void drawTranslate(UGraphic ug, UTranslate translate1, UTranslate translate2) {\n \t\t\tfinal StringBounder stringBounder = ug.getStringBounder();\n+\t\t\tfinal XPoint2D p1 = translate1.getTranslated(getP1(stringBounder));\n+\t\t\tfinal XPoint2D p2 = translate2.getTranslated(getP2(stringBounder));\n+\t\t\tdrawSnake(ug, p1, p2);\n+\t\t}\n \n-\t\t\tXPoint2D p1 = getP1(stringBounder);\n-\t\t\tXPoint2D p2 = getP2(stringBounder);\n-\t\t\tp1 = translate1.getTranslated(p1);\n-\t\t\tp2 = translate2.getTranslated(p2);\n-\n-\t\t\tfinal XDimension2D dimDiamond2 = diamond2.calculateDimension(stringBounder);\n+\t\tprivate void drawSnake(UGraphic ug, final XPoint2D p1, final XPoint2D p2) {\n+\t\t\tfinal XDimension2D dimDiamond2 = diamond2.calculateDimension(ug.getStringBounder());\n \t\t\tfinal double x1 = p1.getX() + dimDiamond2.getWidth();\n \t\t\tfinal double y1 = p1.getY() + dimDiamond2.getHeight() / 2;\n \t\t\tfinal double x2 = p2.getX();\n@@ -644,9 +626,6 @@ public void drawU(UGraphic ug) {\n \t\t@Override\n \t\tpublic void drawTranslate(UGraphic ug, UTranslate translate1, UTranslate translate2) {\n \t\t\tfinal StringBounder stringBounder = ug.getStringBounder();\n-\t\t\tfinal Snake snake = Snake.create(skinParam(), arrowColor, skinParam().arrows().asToLeft())\n-\t\t\t\t\t.emphasizeDirection(Direction.UP).withLabel(tbback, arrowHorizontalAlignment());\n-\t\t\tfinal XDimension2D dimRepeat = repeat.calculateDimension(stringBounder);\n \n \t\t\tXPoint2D p1 = getP1(stringBounder);\n \t\t\tXPoint2D p2 = getP2(stringBounder);\n@@ -656,14 +635,22 @@ public void drawTranslate(UGraphic ug, UTranslate translate1, UTranslate transla\n \t\t\tfinal XDimension2D dimDiamond2 = diamond2.calculateDimension(stringBounder);\n \t\t\tfinal double x1 = p1.getX() + dimDiamond2.getWidth();\n \t\t\tfinal double y1 = p1.getY() + dimDiamond2.getHeight() / 2;\n-\t\t\tfinal double x2 = p2.getX() + dimDiamond1.getWidth();\n+\n+\t\t\tfinal double x2a = p2.getX();\n+\t\t\tfinal double x2b = p2.getX() + dimDiamond1.getWidth();\n+\t\t\tfinal boolean isOnA = x1 < (x2a + x2b) / 2;\n+\n+\t\t\tfinal double x2 = isOnA ? x2a : x2b;\n \t\t\tfinal double y2 = p2.getY() + dimDiamond1.getHeight() / 2;\n \n+\t\t\tfinal UPolygon arrow = isOnA ? skinParam().arrows().asToRight() : skinParam().arrows().asToLeft();\n+\t\t\tfinal Snake snake = Snake.create(skinParam(), arrowColor, arrow).emphasizeDirection(Direction.UP)\n+\t\t\t\t\t.withLabel(tbback, arrowHorizontalAlignment());\n+\n \t\t\tsnake.addPoint(x1, y1);\n-\t\t\tfinal double xmax = p1.getX() + dimDiamond2.getWidth() / 2 + dimRepeat.getWidth() / 2\n-\t\t\t\t\t+ Hexagon.hexagonHalfSize;\n-\t\t\tsnake.addPoint(xmax, y1);\n-\t\t\tsnake.addPoint(xmax, y2);\n+\t\t\tfinal double xmiddle = (x1 + x2) / 2;\n+\t\t\tsnake.addPoint(xmiddle, y1);\n+\t\t\tsnake.addPoint(xmiddle, y2);\n \t\t\tsnake.addPoint(x2, y2);\n \n \t\t\tug.draw(snake);",
      "parent_sha": "303341fa3330359ae48359db04e0e39f506559a8"
    }
  },
  {
    "oid": "64510e5c8871c97d07e91a114e0eb7b3c5de76d2",
    "message": "Change Executors.newCachedThreadPool to daemon",
    "date": "2021-11-28T22:46:36Z",
    "url": "https://github.com/plantuml/plantuml/commit/64510e5c8871c97d07e91a114e0eb7b3c5de76d2",
    "details": {
      "sha": "404cbedb55ebc320ac6a3ed88a6b07ba77c494b2",
      "filename": "src/net/sourceforge/plantuml/security/SURL.java",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/plantuml/plantuml/blob/64510e5c8871c97d07e91a114e0eb7b3c5de76d2/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsecurity%2FSURL.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/64510e5c8871c97d07e91a114e0eb7b3c5de76d2/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsecurity%2FSURL.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fsecurity%2FSURL.java?ref=64510e5c8871c97d07e91a114e0eb7b3c5de76d2",
      "patch": "@@ -59,6 +59,7 @@\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n import java.util.concurrent.Future;\n+import java.util.concurrent.ThreadFactory;\n import java.util.concurrent.TimeUnit;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n@@ -111,7 +112,13 @@ public class SURL {\n \t */\n \tprivate static final Pattern PATTERN_USERINFO = Pattern.compile(\"(^https?://)(.*@)(.*)\");\n \n-\tprivate static final ExecutorService EXE = Executors.newCachedThreadPool();\n+\tprivate static final ExecutorService EXE = Executors.newCachedThreadPool(new ThreadFactory() {\n+\t\tpublic Thread newThread(Runnable r) {\n+\t\t\tfinal Thread t = Executors.defaultThreadFactory().newThread(r);\n+\t\t\tt.setDaemon(true);\n+\t\t\treturn t;\n+\t\t}\n+\t});\n \n \tprivate static final Map<String, Long> BAD_HOSTS = new ConcurrentHashMap<String, Long>();\n ",
      "parent_sha": "1afbb8f35c9d9d40bcb79d46bb7c7c8d037d0b47"
    }
  },
  {
    "oid": "9c865ab58bef7178eeb31212aa1194165e2a74b1",
    "message": "Infer svgCharSizeHack instead of storing it in ImageBuilder.",
    "date": "2021-04-07T08:27:57Z",
    "url": "https://github.com/plantuml/plantuml/commit/9c865ab58bef7178eeb31212aa1194165e2a74b1",
    "details": {
      "sha": "51f4c818a2309ea4099eb8f928170cb5c4d7bc14",
      "filename": "src/net/sourceforge/plantuml/ugraphic/ImageBuilder.java",
      "status": "modified",
      "additions": 7,
      "deletions": 4,
      "changes": 11,
      "blob_url": "https://github.com/plantuml/plantuml/blob/9c865ab58bef7178eeb31212aa1194165e2a74b1/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2FImageBuilder.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/9c865ab58bef7178eeb31212aa1194165e2a74b1/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2FImageBuilder.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2FImageBuilder.java?ref=9c865ab58bef7178eeb31212aa1194165e2a74b1",
      "patch": "@@ -127,7 +127,6 @@ public class ImageBuilder {\n \tprivate long seed = 42;\n \tprivate ISkinParam skinParam;\n \tprivate int status = 0;\n-\tprivate SvgCharSizeHack svgCharSizeHack = SvgCharSizeHack.NO_HACK;\n \tprivate boolean svgDimensionStyle = true;\n \tprivate String svgLinkTarget;\n \tprivate TitledDiagram titledDiagram;\n@@ -209,6 +208,10 @@ public ImageBuilder status(int status) {\n \t\treturn this;\n \t}\n \n+\tprivate SvgCharSizeHack getSvgCharSizeHack() {\n+\t\treturn skinParam == null ? SvgCharSizeHack.NO_HACK : skinParam;\n+\t}\n+\t\n \tpublic ImageBuilder warningOrError(String warningOrError) {\n \t\tthis.warningOrError = warningOrError;\n \t\treturn this;\n@@ -229,7 +232,6 @@ public ImageBuilder styled(TitledDiagram diagram) {\n \t\tpreserveAspectRatio = calculatePreserveAspectRatio(fileFormatOption, skinParam);\n \t\tscale = diagram.getScale();\n \t\tseed = diagram.seed();\n-\t\tsvgCharSizeHack = skinParam;\n \t\tsvgDimensionStyle = skinParam.svgDimensionStyle();\n \t\tsvgLinkTarget = (fileFormatOption.getSvgLinkTarget() != null)\n \t\t\t\t? fileFormatOption.getSvgLinkTarget() : skinParam.getSvgLinkTarget();\n@@ -267,7 +269,7 @@ public byte[] writeByteArray() throws IOException {\n \tprivate ImageData writeImageInternal(FileFormatOption fileFormatOption, OutputStream os,\n \t\t\tAnimation animationArg) throws IOException {\n \t\tDimension2D dim = (dimension == null)\n-\t\t\t\t? getFinalDimension(fileFormatOption.getDefaultStringBounder(svgCharSizeHack)) : dimension;\n+\t\t\t\t? getFinalDimension(fileFormatOption.getDefaultStringBounder(getSvgCharSizeHack())) : dimension;\n \t\tdouble dx = 0;\n \t\tdouble dy = 0;\n \t\tif (animationArg != null) {\n@@ -334,7 +336,7 @@ private Dimension2D getFinalDimension(StringBounder stringBounder) {\n \t}\n \n \tprivate Dimension2D getFinalDimension() {\n-\t\treturn getFinalDimension(fileFormatOption.getDefaultStringBounder(svgCharSizeHack));\n+\t\treturn getFinalDimension(fileFormatOption.getDefaultStringBounder(getSvgCharSizeHack()));\n \t}\n \n \tprivate UGraphic handwritten(UGraphic ug) {\n@@ -443,6 +445,7 @@ private UGraphic2 createUGraphic(FileFormatOption option, final Dimension2D dim,\n \t}\n \n \tprivate UGraphic2 createUGraphicSVG(double scaleFactor, Dimension2D dim) {\n+\t\tfinal SvgCharSizeHack svgCharSizeHack = getSvgCharSizeHack();\n \t\tHColor backColor = HColorUtils.WHITE; // TODO simplify backcolor some more in a future PR\n \t\tif (this.backcolor instanceof HColorSimple) {\n \t\t\tbackColor = this.backcolor;",
      "parent_sha": "66c7f9a92f4ad98ebbee56c9d401105a59628ee2"
    }
  },
  {
    "oid": "8fc84d437a1d223063c6e3d22013c4f8f4bcb894",
    "message": "Infer preserveAspectRatio instead of storing it in ImageBuilder.",
    "date": "2021-04-07T09:38:03Z",
    "url": "https://github.com/plantuml/plantuml/commit/8fc84d437a1d223063c6e3d22013c4f8f4bcb894",
    "details": {
      "sha": "c7fcb174a5f65a23dc61e202d66d5d777a25a638",
      "filename": "src/net/sourceforge/plantuml/ugraphic/ImageBuilder.java",
      "status": "modified",
      "additions": 3,
      "deletions": 9,
      "changes": 12,
      "blob_url": "https://github.com/plantuml/plantuml/blob/8fc84d437a1d223063c6e3d22013c4f8f4bcb894/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2FImageBuilder.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/8fc84d437a1d223063c6e3d22013c4f8f4bcb894/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2FImageBuilder.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2FImageBuilder.java?ref=8fc84d437a1d223063c6e3d22013c4f8f4bcb894",
      "patch": "@@ -118,7 +118,6 @@ public class ImageBuilder {\n \tprivate UDrawable udrawable;\n \tprivate ClockwiseTopRightBottomLeft margin = ClockwiseTopRightBottomLeft.none();\n \tprivate String metadata;\n-\tprivate String preserveAspectRatio;\n \tprivate long seed = 42;\n \tprivate ISkinParam skinParam;\n \tprivate int status = 0;\n@@ -144,7 +143,6 @@ public static ImageBuilder plainPngBuilder(UDrawable drawable) {\n \n \tprivate ImageBuilder(FileFormatOption fileFormatOption) {\n \t\tthis.fileFormatOption = fileFormatOption;\n-\t\tthis.preserveAspectRatio = calculatePreserveAspectRatio(fileFormatOption, null);\n \t}\n \n \tpublic ImageBuilder annotations(boolean annotations) {\n@@ -188,10 +186,6 @@ public ImageBuilder metadata(String metadata) {\n \t\treturn this;\n \t}\n \n-\tpublic String getPreserveAspectRatio() {\n-\t\treturn preserveAspectRatio;\n-\t}\n-\n \tpublic ImageBuilder randomPixel() {\n \t\tthis.randomPixel = true;\n \t\treturn this;\n@@ -224,7 +218,6 @@ public ImageBuilder styled(TitledDiagram diagram) {\n \t\tcolorMapper = skinParam.getColorMapper();\n \t\tmargin = calculateMargin(diagram);\n \t\tmetadata = fileFormatOption.isWithMetadata() ? diagram.getMetadata() : null;\n-\t\tpreserveAspectRatio = calculatePreserveAspectRatio(fileFormatOption, skinParam);\n \t\tseed = diagram.seed();\n \t\tsvgDimensionStyle = skinParam.svgDimensionStyle();\n \t\tsvgLinkTarget = (fileFormatOption.getSvgLinkTarget() != null)\n@@ -429,7 +422,7 @@ private UGraphic2 createUGraphic(FileFormatOption option, final Dimension2D dim,\n \t\tcase ATXT:\n \t\t\treturn new UGraphicTxt();\n \t\tcase DEBUG:\n-\t\t\treturn new UGraphicDebug(scaleFactor, dim, svgLinkTarget, getHoverPathColorRGB(), seed, preserveAspectRatio);\n+\t\t\treturn new UGraphicDebug(scaleFactor, dim, svgLinkTarget, getHoverPathColorRGB(), seed, getPreserveAspectRatio());\n \t\tdefault:\n \t\t\tthrow new UnsupportedOperationException(option.getFileFormat().toString());\n \t\t}\n@@ -438,6 +431,7 @@ private UGraphic2 createUGraphic(FileFormatOption option, final Dimension2D dim,\n \tprivate UGraphic2 createUGraphicSVG(double scaleFactor, Dimension2D dim) {\n \t\tfinal String hoverPathColorRGB = getHoverPathColorRGB();\n \t\tfinal LengthAdjust lengthAdjust = skinParam == null ? LengthAdjust.defaultValue() : skinParam.getlengthAdjust();\n+\t\tfinal String preserveAspectRatio = getPreserveAspectRatio();\n \t\tfinal SvgCharSizeHack svgCharSizeHack = getSvgCharSizeHack();\n \t\tHColor backColor = HColorUtils.WHITE; // TODO simplify backcolor some more in a future PR\n \t\tif (this.backcolor instanceof HColorSimple) {\n@@ -523,7 +517,7 @@ private static ClockwiseTopRightBottomLeft calculateMargin(TitledDiagram diagram\n \t\treturn diagram.getDefaultMargins();\n \t}\n \n-\tprivate static String calculatePreserveAspectRatio(FileFormatOption fileFormatOption, ISkinParam skinParam) {\n+\tpublic String getPreserveAspectRatio() {\n \t\tif (fileFormatOption.getPreserveAspectRatio() != null) {\n \t\t\treturn fileFormatOption.getPreserveAspectRatio();\n \t\t} else if (skinParam != null) {",
      "parent_sha": "5b970db545bf72fe94be3a61df0005bb4c35cab8"
    }
  },
  {
    "oid": "03dbd4a8481c27ad90d7ba5d22cab022a64a027c",
    "message": "Fix test issue",
    "date": "2022-11-23T19:12:05Z",
    "url": "https://github.com/plantuml/plantuml/commit/03dbd4a8481c27ad90d7ba5d22cab022a64a027c",
    "details": {
      "sha": "5dcc01844c7528f2228655044b27dd762e8ea637",
      "filename": "test/nonreg/simple/A0002_TestResult.java",
      "status": "modified",
      "additions": 358,
      "deletions": 206,
      "changes": 564,
      "blob_url": "https://github.com/plantuml/plantuml/blob/03dbd4a8481c27ad90d7ba5d22cab022a64a027c/test%2Fnonreg%2Fsimple%2FA0002_TestResult.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/03dbd4a8481c27ad90d7ba5d22cab022a64a027c/test%2Fnonreg%2Fsimple%2FA0002_TestResult.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/test%2Fnonreg%2Fsimple%2FA0002_TestResult.java?ref=03dbd4a8481c27ad90d7ba5d22cab022a64a027c",
      "patch": "@@ -5,7 +5,7 @@ public class A0002_TestResult {\n /*\n \"\"\"\n DPI: 96\n-dimension: [ 762.1795 ; 890.5000 ]\n+dimension: [ 660.1096 ; 994.5000 ]\n scaleFactor: 1.0000\n seed: -9181376250803721714\n svgLinkTarget: _top\n@@ -14,7 +14,7 @@ public class A0002_TestResult {\n \n RECTANGLE:\n   pt1: [ 15.0000 ; 12.5000 ]\n-  pt2: [ 745.1795 ; 30.5000 ]\n+  pt2: [ 643.1096 ; 30.5000 ]\n   xCorner: 0\n   yCorner: 0\n   stroke: 0.0-0.0-1.0\n@@ -23,8 +23,8 @@ public class A0002_TestResult {\n   backcolor: NULL_COLOR\n \n ELLIPSE:\n-  pt1: [ 170.9019 ; 35.5000 ]\n-  pt2: [ 190.9019 ; 55.5000 ]\n+  pt1: [ 166.5761 ; 35.5000 ]\n+  pt2: [ 186.5761 ; 55.5000 ]\n   start: 0.0\n   extend: 0.0\n   stroke: 0.0-0.0-1.0\n@@ -33,20 +33,20 @@ public class A0002_TestResult {\n   backcolor: ff222222\n \n EMPTY:\n-  pt1: [ 20.0000 ; 220.0000 ]\n-  pt2: [ 143.4243 ; 289.0000 ]\n+  pt1: [ 20.0000 ; 252.5000 ]\n+  pt2: [ 139.0985 ; 308.5000 ]\n \n PATH:\n    - type: SEG_MOVETO\n      pt1: [ 0.0000 ; 0.0000 ]\n    - type: SEG_LINETO\n-     pt1: [ 0.0000 ; 49.0000 ]\n+     pt1: [ 0.0000 ; 36.0000 ]\n    - type: SEG_LINETO\n-     pt1: [ 103.4243 ; 49.0000 ]\n+     pt1: [ 99.0985 ; 36.0000 ]\n    - type: SEG_LINETO\n-     pt1: [ 103.4243 ; 10.0000 ]\n+     pt1: [ 99.0985 ; 10.0000 ]\n    - type: SEG_LINETO\n-     pt1: [ 93.4243 ; 0.0000 ]\n+     pt1: [ 89.0985 ; 0.0000 ]\n    - type: SEG_LINETO\n      pt1: [ 0.0000 ; 0.0000 ]\n   stroke: 0.0-0.0-0.5\n@@ -56,57 +56,81 @@ public class A0002_TestResult {\n \n PATH:\n    - type: SEG_MOVETO\n-     pt1: [ 93.4243 ; 0.0000 ]\n+     pt1: [ 89.0985 ; 0.0000 ]\n    - type: SEG_LINETO\n-     pt1: [ 93.4243 ; 10.0000 ]\n+     pt1: [ 89.0985 ; 10.0000 ]\n    - type: SEG_LINETO\n-     pt1: [ 103.4243 ; 10.0000 ]\n+     pt1: [ 99.0985 ; 10.0000 ]\n    - type: SEG_LINETO\n-     pt1: [ 93.4243 ; 0.0000 ]\n+     pt1: [ 89.0985 ; 0.0000 ]\n   stroke: 0.0-0.0-0.5\n   shadow: 0\n   color: ff181818\n   backcolor: fffeffdd\n \n TEXT:\n-  text: This \n-  position: [ 36.0000 ; 245.1111 ]\n+  text: This\n+  position: [ 36.0000 ; 277.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: is a \n-  position: [ 36.0000 ; 258.1111 ]\n+  text:  \n+  position: [ 78.5404 ; 277.6111 ]\n+  orientation: 0\n+  font: SansSerif.plain/13 []\n+  color: ff000000\n+  extendedColor: NULL_COLOR\n+\n+TEXT:\n+  text: is\n+  position: [ 90.8586 ; 277.6111 ]\n+  orientation: 0\n+  font: SansSerif.plain/13 []\n+  color: ff000000\n+  extendedColor: NULL_COLOR\n+\n+TEXT:\n+  text: a\n+  position: [ 36.0000 ; 290.6111 ]\n+  orientation: 0\n+  font: SansSerif.plain/13 []\n+  color: ff000000\n+  extendedColor: NULL_COLOR\n+\n+TEXT:\n+  text:  \n+  position: [ 48.4270 ; 290.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n   text: note\n-  position: [ 36.0000 ; 271.1111 ]\n+  position: [ 60.7452 ; 290.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n EMPTY:\n-  pt1: [ 218.3794 ; 65.5000 ]\n-  pt2: [ 441.3210 ; 443.5000 ]\n+  pt1: [ 214.0537 ; 65.5000 ]\n+  pt2: [ 379.3412 ; 495.5000 ]\n \n PATH:\n    - type: SEG_MOVETO\n      pt1: [ 0.0000 ; 0.0000 ]\n    - type: SEG_LINETO\n-     pt1: [ 0.0000 ; 358.0000 ]\n+     pt1: [ 0.0000 ; 410.0000 ]\n    - type: SEG_LINETO\n-     pt1: [ 202.9416 ; 358.0000 ]\n+     pt1: [ 145.2875 ; 410.0000 ]\n    - type: SEG_LINETO\n-     pt1: [ 202.9416 ; 10.0000 ]\n+     pt1: [ 145.2875 ; 10.0000 ]\n    - type: SEG_LINETO\n-     pt1: [ 192.9416 ; 0.0000 ]\n+     pt1: [ 135.2875 ; 0.0000 ]\n    - type: SEG_LINETO\n      pt1: [ 0.0000 ; 0.0000 ]\n   stroke: 0.0-0.0-0.5\n@@ -116,219 +140,267 @@ public class A0002_TestResult {\n \n PATH:\n    - type: SEG_MOVETO\n-     pt1: [ 192.9416 ; 0.0000 ]\n+     pt1: [ 135.2875 ; 0.0000 ]\n    - type: SEG_LINETO\n-     pt1: [ 192.9416 ; 10.0000 ]\n+     pt1: [ 135.2875 ; 10.0000 ]\n    - type: SEG_LINETO\n-     pt1: [ 202.9416 ; 10.0000 ]\n+     pt1: [ 145.2875 ; 10.0000 ]\n    - type: SEG_LINETO\n-     pt1: [ 192.9416 ; 0.0000 ]\n+     pt1: [ 135.2875 ; 0.0000 ]\n   stroke: 0.0-0.0-0.5\n   shadow: 0\n   color: ff181818\n   backcolor: fffeffdd\n \n TEXT:\n-  text: A Long\n-  position: [ 234.3794 ; 90.6111 ]\n+  text: A\n+  position: [ 230.0537 ; 90.6111 ]\n+  orientation: 0\n+  font: SansSerif.plain/13 []\n+  color: ff000000\n+  extendedColor: NULL_COLOR\n+\n+TEXT:\n+  text:  \n+  position: [ 242.3503 ; 90.6111 ]\n+  orientation: 0\n+  font: SansSerif.plain/13 []\n+  color: ff000000\n+  extendedColor: NULL_COLOR\n+\n+TEXT:\n+  text: Long\n+  position: [ 254.6684 ; 90.6111 ]\n+  orientation: 0\n+  font: SansSerif.plain/13 []\n+  color: ff000000\n+  extendedColor: NULL_COLOR\n+\n+TEXT:\n+  text: Long\n+  position: [ 230.0537 ; 103.6111 ]\n+  orientation: 0\n+  font: SansSerif.plain/13 []\n+  color: ff000000\n+  extendedColor: NULL_COLOR\n+\n+TEXT:\n+  text: Long\n+  position: [ 230.0537 ; 116.6111 ]\n+  orientation: 0\n+  font: SansSerif.plain/13 []\n+  color: ff000000\n+  extendedColor: NULL_COLOR\n+\n+TEXT:\n+  text: Long\n+  position: [ 230.0537 ; 129.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: Long \n-  position: [ 234.3794 ; 103.6111 ]\n+  text: Long\n+  position: [ 230.0537 ; 142.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: Long \n-  position: [ 234.3794 ; 116.6111 ]\n+  text: Long\n+  position: [ 230.0537 ; 155.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: Long \n-  position: [ 234.3794 ; 129.6111 ]\n+  text: Long\n+  position: [ 230.0537 ; 168.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: Long \n-  position: [ 234.3794 ; 142.6111 ]\n+  text: Long\n+  position: [ 230.0537 ; 181.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: Long \n-  position: [ 234.3794 ; 155.6111 ]\n+  text: Long\n+  position: [ 230.0537 ; 194.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: Long \n-  position: [ 234.3794 ; 168.6111 ]\n+  text: Long\n+  position: [ 230.0537 ; 207.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: Long \n-  position: [ 234.3794 ; 181.6111 ]\n+  text: Long\n+  position: [ 230.0537 ; 220.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: Long \n-  position: [ 234.3794 ; 194.6111 ]\n+  text: Long\n+  position: [ 230.0537 ; 233.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: Long \n-  position: [ 234.3794 ; 207.6111 ]\n+  text: Long\n+  position: [ 230.0537 ; 246.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: Long \n-  position: [ 234.3794 ; 220.6111 ]\n+  text: Long\n+  position: [ 230.0537 ; 259.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: Long \n-  position: [ 234.3794 ; 233.6111 ]\n+  text: note\n+  position: [ 230.0537 ; 272.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: Long \n-  position: [ 234.3794 ; 246.6111 ]\n+  text: This\n+  position: [ 230.0537 ; 285.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: Long note\n-  position: [ 234.3794 ; 259.6111 ]\n+  text: note\n+  position: [ 230.0537 ; 298.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: This \n-  position: [ 234.3794 ; 272.6111 ]\n+  text:  \n+  position: [ 279.4261 ; 298.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: note \n-  position: [ 234.3794 ; 285.6111 ]\n+  text: is\n+  position: [ 291.7443 ; 298.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: is on \n-  position: [ 234.3794 ; 298.6111 ]\n+  text: on\n+  position: [ 230.0537 ; 311.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n   text: several\n-  position: [ 234.3794 ; 311.6111 ]\n+  position: [ 230.0537 ; 324.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n   text: lines\n-  position: [ 234.3794 ; 324.6111 ]\n+  position: [ 230.0537 ; 337.6111 ]\n   orientation: 0\n   font: SansSerif.italic/13 [ITALIC]\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n+TEXT:\n+  text: and\n+  position: [ 230.0537 ; 350.6111 ]\n+  orientation: 0\n+  font: SansSerif.plain/13 []\n+  color: ff000000\n+  extendedColor: NULL_COLOR\n+\n TEXT:\n   text:  \n-  position: [ 315.7608 ; 324.6111 ]\n+  position: [ 277.0323 ; 350.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: and can\n-  position: [ 234.3794 ; 337.6111 ]\n+  text: can\n+  position: [ 289.3504 ; 350.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: contain \n-  position: [ 234.3794 ; 350.6111 ]\n+  text: contain\n+  position: [ 230.0537 ; 363.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n   text: HTML\n-  position: [ 321.5906 ; 350.6111 ]\n+  position: [ 230.0537 ; 376.6111 ]\n   orientation: 0\n   font: SansSerif.bold/13 [BOLD]\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n LINE:\n-  pt1: [ 228.3794 ; 358.5000 ]\n-  pt2: [ 431.3210 ; 358.5000 ]\n+  pt1: [ 224.0537 ; 384.5000 ]\n+  pt2: [ 369.3412 ; 384.5000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ff181818\n \n LINE:\n-  pt1: [ 228.3794 ; 360.5000 ]\n-  pt2: [ 431.3210 ; 360.5000 ]\n+  pt1: [ 224.0537 ; 386.5000 ]\n+  pt2: [ 369.3412 ; 386.5000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ff181818\n \n ELLIPSE:\n-  pt1: [ 237.3794 ; 366.5000 ]\n-  pt2: [ 242.3794 ; 371.5000 ]\n+  pt1: [ 233.0537 ; 392.5000 ]\n+  pt2: [ 238.0537 ; 397.5000 ]\n   start: 0.0\n   extend: 0.0\n   stroke: 0.0-0.0-0.0\n@@ -337,64 +409,64 @@ public class A0002_TestResult {\n   backcolor: ff000000\n \n TEXT:\n-  text: Calling \n-  position: [ 246.3794 ; 373.6111 ]\n+  text: Calling\n+  position: [ 242.0537 ; 399.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: the \n-  position: [ 246.3794 ; 386.6111 ]\n+  text: the\n+  position: [ 242.0537 ; 412.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: method \n-  position: [ 246.3794 ; 399.6111 ]\n+  text: method\n+  position: [ 242.0537 ; 425.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n   text: foo()\n-  position: [ 342.5324 ; 399.6111 ]\n+  position: [ 242.0537 ; 438.6111 ]\n   orientation: 0\n   font: Monospaced.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text:  is \n-  position: [ 246.3794 ; 412.6111 ]\n+  text: is\n+  position: [ 242.0537 ; 451.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n   text: prohibited\n-  position: [ 304.0335 ; 412.6111 ]\n+  position: [ 242.0537 ; 464.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 [BACKCOLOR]\n   color: ff000000\n   extendedColor: ffff0000\n \n TEXT:\n   text: overlap\n-  position: [ 246.3794 ; 425.6111 ]\n+  position: [ 242.0537 ; 477.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 [BACKCOLOR]\n   color: ff000000\n   extendedColor: ffff0000\n \n RECTANGLE:\n-  pt1: [ 143.4243 ; 238.5000 ]\n-  pt2: [ 218.3794 ; 270.5000 ]\n+  pt1: [ 139.0985 ; 264.5000 ]\n+  pt2: [ 214.0537 ; 296.5000 ]\n   xCorner: 25\n   yCorner: 25\n   stroke: 0.0-0.0-0.5\n@@ -404,7 +476,7 @@ public class A0002_TestResult {\n \n TEXT:\n   text: foo1\n-  position: [ 153.4243 ; 257.8333 ]\n+  position: [ 149.0985 ; 283.8333 ]\n   orientation: 0\n   font: SansSerif.plain/12 []\n   color: ff000000\n@@ -416,7 +488,7 @@ public class A0002_TestResult {\n \n LINE:\n   pt1: [ 15.0000 ; 12.5000 ]\n-  pt2: [ 15.0000 ; 879.5000 ]\n+  pt2: [ 15.0000 ; 983.5000 ]\n   stroke: 0.0-0.0-1.5\n   shadow: 0\n   color: ff000000\n@@ -425,31 +497,31 @@ public class A0002_TestResult {\n    - type: SEG_MOVETO\n      pt1: [ 0.0000 ; 0.0000 ]\n    - type: SEG_LINETO\n-     pt1: [ 0.0000 ; 188.0000 ]\n+     pt1: [ 0.0000 ; 214.0000 ]\n    - type: SEG_LINETO\n-     pt1: [ -20.0000 ; 192.0000 ]\n+     pt1: [ -20.0000 ; 218.0000 ]\n    - type: SEG_LINETO\n-     pt1: [ 0.0000 ; 196.0000 ]\n+     pt1: [ 0.0000 ; 222.0000 ]\n    - type: SEG_LINETO\n-     pt1: [ 0.0000 ; 384.0000 ]\n+     pt1: [ 0.0000 ; 436.0000 ]\n    - type: SEG_ARCTO\n      radius: [ 0.0000 ; 0.0000 ]\n      angle: 0.0\n      largeArcFlag: false\n      sweepFlag: false\n-     dest: [ 0.0000 ; 384.0000 ]\n+     dest: [ 0.0000 ; 436.0000 ]\n    - type: SEG_LINETO\n-     pt1: [ 185.3775 ; 384.0000 ]\n+     pt1: [ 145.2875 ; 436.0000 ]\n    - type: SEG_ARCTO\n      radius: [ 0.0000 ; 0.0000 ]\n      angle: 0.0\n      largeArcFlag: false\n      sweepFlag: false\n-     dest: [ 185.3775 ; 384.0000 ]\n+     dest: [ 145.2875 ; 436.0000 ]\n    - type: SEG_LINETO\n-     pt1: [ 185.3775 ; 10.0000 ]\n+     pt1: [ 145.2875 ; 10.0000 ]\n    - type: SEG_LINETO\n-     pt1: [ 175.3775 ; 0.0000 ]\n+     pt1: [ 135.2875 ; 0.0000 ]\n    - type: SEG_LINETO\n      pt1: [ 0.0000 ; 0.0000 ]\n    - type: SEG_ARCTO\n@@ -465,235 +537,315 @@ public class A0002_TestResult {\n \n PATH:\n    - type: SEG_MOVETO\n-     pt1: [ 175.3775 ; 0.0000 ]\n+     pt1: [ 135.2875 ; 0.0000 ]\n    - type: SEG_LINETO\n-     pt1: [ 175.3775 ; 10.0000 ]\n+     pt1: [ 135.2875 ; 10.0000 ]\n    - type: SEG_LINETO\n-     pt1: [ 185.3775 ; 10.0000 ]\n+     pt1: [ 145.2875 ; 10.0000 ]\n    - type: SEG_LINETO\n-     pt1: [ 175.3775 ; 0.0000 ]\n+     pt1: [ 135.2875 ; 0.0000 ]\n   stroke: 0.0-0.0-0.5\n   shadow: 0\n   color: ff181818\n   backcolor: fffeffdd\n \n TEXT:\n-  text:  KO for \n-  position: [ 553.2740 ; 468.6111 ]\n+  text:  \n+  position: [ 491.2942 ; 520.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 [BACKCOLOR]\n   color: ff000000\n   extendedColor: ffff0000\n \n TEXT:\n-  text: this note\n-  position: [ 553.2740 ; 481.6111 ]\n+  text: KO\n+  position: [ 503.6123 ; 520.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 [BACKCOLOR]\n   color: ff000000\n   extendedColor: ffff0000\n \n TEXT:\n-  text: A Long\n-  position: [ 553.2740 ; 494.6111 ]\n+  text:  \n+  position: [ 527.0782 ; 520.6111 ]\n+  orientation: 0\n+  font: SansSerif.plain/13 [BACKCOLOR]\n+  color: ff000000\n+  extendedColor: ffff0000\n+\n+TEXT:\n+  text: for\n+  position: [ 539.3963 ; 520.6111 ]\n+  orientation: 0\n+  font: SansSerif.plain/13 [BACKCOLOR]\n+  color: ff000000\n+  extendedColor: ffff0000\n+\n+TEXT:\n+  text: this\n+  position: [ 491.2942 ; 533.6111 ]\n+  orientation: 0\n+  font: SansSerif.plain/13 [BACKCOLOR]\n+  color: ff000000\n+  extendedColor: ffff0000\n+\n+TEXT:\n+  text: note\n+  position: [ 491.2942 ; 546.6111 ]\n+  orientation: 0\n+  font: SansSerif.plain/13 [BACKCOLOR]\n+  color: ff000000\n+  extendedColor: ffff0000\n+\n+TEXT:\n+  text: A\n+  position: [ 491.2942 ; 559.6111 ]\n+  orientation: 0\n+  font: SansSerif.plain/13 []\n+  color: ff000000\n+  extendedColor: NULL_COLOR\n+\n+TEXT:\n+  text:  \n+  position: [ 503.5908 ; 559.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: Long \n-  position: [ 553.2740 ; 507.6111 ]\n+  text: Long\n+  position: [ 515.9089 ; 559.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: Long \n-  position: [ 553.2740 ; 520.6111 ]\n+  text: Long\n+  position: [ 491.2942 ; 572.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: Long \n-  position: [ 553.2740 ; 533.6111 ]\n+  text: Long\n+  position: [ 491.2942 ; 585.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: Long \n-  position: [ 553.2740 ; 546.6111 ]\n+  text: Long\n+  position: [ 491.2942 ; 598.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: Long \n-  position: [ 553.2740 ; 559.6111 ]\n+  text: Long\n+  position: [ 491.2942 ; 611.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: Long \n-  position: [ 553.2740 ; 572.6111 ]\n+  text: Long\n+  position: [ 491.2942 ; 624.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: Long \n-  position: [ 553.2740 ; 585.6111 ]\n+  text: Long\n+  position: [ 491.2942 ; 637.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: Long \n-  position: [ 553.2740 ; 598.6111 ]\n+  text: Long\n+  position: [ 491.2942 ; 650.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: Long \n-  position: [ 553.2740 ; 611.6111 ]\n+  text: Long\n+  position: [ 491.2942 ; 663.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: Long \n-  position: [ 553.2740 ; 624.6111 ]\n+  text: Long\n+  position: [ 491.2942 ; 676.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: Long \n-  position: [ 553.2740 ; 637.6111 ]\n+  text: Long\n+  position: [ 491.2942 ; 689.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: Long \n-  position: [ 553.2740 ; 650.6111 ]\n+  text: Long\n+  position: [ 491.2942 ; 702.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: Long note\n-  position: [ 553.2740 ; 663.6111 ]\n+  text: Long\n+  position: [ 491.2942 ; 715.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: This \n-  position: [ 553.2740 ; 676.6111 ]\n+  text: Long\n+  position: [ 491.2942 ; 728.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: note \n-  position: [ 553.2740 ; 689.6111 ]\n+  text: note\n+  position: [ 491.2942 ; 741.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: is on \n-  position: [ 553.2740 ; 702.6111 ]\n+  text: This\n+  position: [ 491.2942 ; 754.6111 ]\n+  orientation: 0\n+  font: SansSerif.plain/13 []\n+  color: ff000000\n+  extendedColor: NULL_COLOR\n+\n+TEXT:\n+  text: note\n+  position: [ 491.2942 ; 767.6111 ]\n+  orientation: 0\n+  font: SansSerif.plain/13 []\n+  color: ff000000\n+  extendedColor: NULL_COLOR\n+\n+TEXT:\n+  text:  \n+  position: [ 540.6666 ; 767.6111 ]\n+  orientation: 0\n+  font: SansSerif.plain/13 []\n+  color: ff000000\n+  extendedColor: NULL_COLOR\n+\n+TEXT:\n+  text: is\n+  position: [ 552.9847 ; 767.6111 ]\n+  orientation: 0\n+  font: SansSerif.plain/13 []\n+  color: ff000000\n+  extendedColor: NULL_COLOR\n+\n+TEXT:\n+  text: on\n+  position: [ 491.2942 ; 780.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n   text: several\n-  position: [ 553.2740 ; 715.6111 ]\n+  position: [ 491.2942 ; 793.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n   text: lines\n-  position: [ 553.2740 ; 728.6111 ]\n+  position: [ 491.2942 ; 806.6111 ]\n   orientation: 0\n   font: SansSerif.italic/13 [ITALIC]\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n+TEXT:\n+  text: and\n+  position: [ 491.2942 ; 819.6111 ]\n+  orientation: 0\n+  font: SansSerif.plain/13 []\n+  color: ff000000\n+  extendedColor: NULL_COLOR\n+\n TEXT:\n   text:  \n-  position: [ 634.6554 ; 728.6111 ]\n+  position: [ 538.2727 ; 819.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: and can\n-  position: [ 553.2740 ; 741.6111 ]\n+  text: can\n+  position: [ 550.5909 ; 819.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: contain \n-  position: [ 553.2740 ; 754.6111 ]\n+  text: contain\n+  position: [ 491.2942 ; 832.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n   text: HTML\n-  position: [ 640.4852 ; 754.6111 ]\n+  position: [ 491.2942 ; 845.6111 ]\n   orientation: 0\n   font: SansSerif.bold/13 [BOLD]\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n LINE:\n-  pt1: [ 547.2740 ; 762.5000 ]\n-  pt2: [ 732.6515 ; 762.5000 ]\n+  pt1: [ 485.2942 ; 853.5000 ]\n+  pt2: [ 630.5816 ; 853.5000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ff181818\n \n LINE:\n-  pt1: [ 547.2740 ; 764.5000 ]\n-  pt2: [ 732.6515 ; 764.5000 ]\n+  pt1: [ 485.2942 ; 855.5000 ]\n+  pt2: [ 630.5816 ; 855.5000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ff181818\n \n ELLIPSE:\n-  pt1: [ 556.2740 ; 770.5000 ]\n-  pt2: [ 561.2740 ; 775.5000 ]\n+  pt1: [ 494.2942 ; 861.5000 ]\n+  pt2: [ 499.2942 ; 866.5000 ]\n   start: 0.0\n   extend: 0.0\n   stroke: 0.0-0.0-0.0\n@@ -702,56 +854,56 @@ public class A0002_TestResult {\n   backcolor: ff000000\n \n TEXT:\n-  text: Calling \n-  position: [ 565.2740 ; 777.6111 ]\n+  text: Calling\n+  position: [ 503.2942 ; 868.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: the \n-  position: [ 565.2740 ; 790.6111 ]\n+  text: the\n+  position: [ 503.2942 ; 881.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text: method \n-  position: [ 565.2740 ; 803.6111 ]\n+  text: method\n+  position: [ 503.2942 ; 894.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n   text: foo()\n-  position: [ 661.4270 ; 803.6111 ]\n+  position: [ 503.2942 ; 907.6111 ]\n   orientation: 0\n   font: Monospaced.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n-  text:  is \n-  position: [ 565.2740 ; 816.6111 ]\n+  text: is\n+  position: [ 503.2942 ; 920.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n   text: prohibited\n-  position: [ 565.2740 ; 829.6111 ]\n+  position: [ 503.2942 ; 933.6111 ]\n   orientation: 0\n   font: SansSerif.plain/13 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n RECTANGLE:\n-  pt1: [ 452.3210 ; 629.5000 ]\n-  pt2: [ 527.2740 ; 661.5000 ]\n+  pt1: [ 390.3412 ; 707.5000 ]\n+  pt2: [ 465.2942 ; 739.5000 ]\n   xCorner: 25\n   yCorner: 25\n   stroke: 0.0-0.0-0.5\n@@ -761,15 +913,15 @@ public class A0002_TestResult {\n \n TEXT:\n   text: foo2\n-  position: [ 462.3210 ; 648.8333 ]\n+  position: [ 400.3412 ; 726.8333 ]\n   orientation: 0\n   font: SansSerif.plain/12 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n ELLIPSE:\n-  pt1: [ 478.7975 ; 857.5000 ]\n-  pt2: [ 500.7975 ; 879.5000 ]\n+  pt1: [ 416.8177 ; 961.5000 ]\n+  pt2: [ 438.8177 ; 983.5000 ]\n   start: 0.0\n   extend: 0.0\n   stroke: 0.0-0.0-1.0\n@@ -778,8 +930,8 @@ public class A0002_TestResult {\n   backcolor: NULL_COLOR\n \n ELLIPSE:\n-  pt1: [ 483.7975 ; 862.5000 ]\n-  pt2: [ 495.7975 ; 874.5000 ]\n+  pt1: [ 421.8177 ; 966.5000 ]\n+  pt2: [ 433.8177 ; 978.5000 ]\n   start: 0.0\n   extend: 0.0\n   stroke: 0.0-0.0-1.0\n@@ -788,106 +940,106 @@ public class A0002_TestResult {\n   backcolor: ff222222\n \n EMPTY:\n-  pt1: [ 441.3210 ; 12.5000 ]\n-  pt2: [ 451.3210 ; 13.5000 ]\n+  pt1: [ 379.3412 ; 12.5000 ]\n+  pt2: [ 389.3412 ; 13.5000 ]\n \n LINE:\n-  pt1: [ 446.3210 ; 12.5000 ]\n-  pt2: [ 446.3210 ; 879.5000 ]\n+  pt1: [ 384.3412 ; 12.5000 ]\n+  pt2: [ 384.3412 ; 983.5000 ]\n   stroke: 0.0-0.0-1.5\n   shadow: 0\n   color: ff000000\n \n EMPTY:\n-  pt1: [ 732.6515 ; 12.5000 ]\n-  pt2: [ 751.1795 ; 13.5000 ]\n+  pt1: [ 630.5816 ; 12.5000 ]\n+  pt2: [ 649.1096 ; 13.5000 ]\n \n LINE:\n-  pt1: [ 737.6515 ; 12.5000 ]\n-  pt2: [ 737.6515 ; 879.5000 ]\n+  pt1: [ 635.5816 ; 12.5000 ]\n+  pt2: [ 635.5816 ; 983.5000 ]\n   stroke: 0.0-0.0-1.5\n   shadow: 0\n   color: ff000000\n \n LINE:\n-  pt1: [ 180.9019 ; 55.5000 ]\n-  pt2: [ 180.9019 ; 238.5000 ]\n+  pt1: [ 176.5761 ; 55.5000 ]\n+  pt2: [ 176.5761 ; 264.5000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ff181818\n \n POLYGON:\n   points:\n-   - [ 176.9019 ; 228.5000 ]\n-   - [ 180.9019 ; 238.5000 ]\n-   - [ 184.9019 ; 228.5000 ]\n-   - [ 180.9019 ; 232.5000 ]\n+   - [ 172.5761 ; 254.5000 ]\n+   - [ 176.5761 ; 264.5000 ]\n+   - [ 180.5761 ; 254.5000 ]\n+   - [ 176.5761 ; 258.5000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ff181818\n   backcolor: ff181818\n \n LINE:\n-  pt1: [ 489.7975 ; 661.5000 ]\n-  pt2: [ 489.7975 ; 857.5000 ]\n+  pt1: [ 427.8177 ; 739.5000 ]\n+  pt2: [ 427.8177 ; 961.5000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ff181818\n \n POLYGON:\n   points:\n-   - [ 485.7975 ; 847.5000 ]\n-   - [ 489.7975 ; 857.5000 ]\n-   - [ 493.7975 ; 847.5000 ]\n-   - [ 489.7975 ; 851.5000 ]\n+   - [ 423.8177 ; 951.5000 ]\n+   - [ 427.8177 ; 961.5000 ]\n+   - [ 431.8177 ; 951.5000 ]\n+   - [ 427.8177 ; 955.5000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ff181818\n   backcolor: ff181818\n \n LINE:\n-  pt1: [ 180.9019 ; 270.5000 ]\n-  pt2: [ 180.9019 ; 448.5000 ]\n+  pt1: [ 176.5761 ; 296.5000 ]\n+  pt2: [ 176.5761 ; 500.5000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ff181818\n \n LINE:\n-  pt1: [ 180.9019 ; 448.5000 ]\n-  pt2: [ 489.7975 ; 448.5000 ]\n+  pt1: [ 176.5761 ; 500.5000 ]\n+  pt2: [ 427.8177 ; 500.5000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ff181818\n \n LINE:\n-  pt1: [ 489.7975 ; 448.5000 ]\n-  pt2: [ 489.7975 ; 629.5000 ]\n+  pt1: [ 427.8177 ; 500.5000 ]\n+  pt2: [ 427.8177 ; 707.5000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ff181818\n \n POLYGON:\n   points:\n-   - [ 485.7975 ; 619.5000 ]\n-   - [ 489.7975 ; 629.5000 ]\n-   - [ 493.7975 ; 619.5000 ]\n-   - [ 489.7975 ; 623.5000 ]\n+   - [ 423.8177 ; 697.5000 ]\n+   - [ 427.8177 ; 707.5000 ]\n+   - [ 431.8177 ; 697.5000 ]\n+   - [ 427.8177 ; 701.5000 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ff181818\n   backcolor: ff181818\n \n TEXT:\n   text: Actor 1\n-  position: [ 163.0708 ; 26.5000 ]\n+  position: [ 132.0809 ; 26.5000 ]\n   orientation: 0\n   font: SansSerif.plain/18 []\n   color: ff000000\n   extendedColor: NULL_COLOR\n \n TEXT:\n   text: Actor 2\n-  position: [ 524.3881 ; 26.5000 ]\n+  position: [ 442.3632 ; 26.5000 ]\n   orientation: 0\n   font: SansSerif.plain/18 []\n   color: ff000000",
      "parent_sha": "5fce218b08879339e9f3ed53f476f921b9d613c4"
    }
  },
  {
    "oid": "90198c40d8faed1d764980ded635efba9f0cde18",
    "message": "refactor: change formatting of `should_readFirstDiagram_decode_correctly_different_line_endings` for more readability",
    "date": "2023-08-28T15:01:45Z",
    "url": "https://github.com/plantuml/plantuml/commit/90198c40d8faed1d764980ded635efba9f0cde18",
    "details": {
      "sha": "671928c7878593150690eda93839ebe69799ed76",
      "filename": "test/net/sourceforge/plantuml/PipeTest.java",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/plantuml/plantuml/blob/90198c40d8faed1d764980ded635efba9f0cde18/test%2Fnet%2Fsourceforge%2Fplantuml%2FPipeTest.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/90198c40d8faed1d764980ded635efba9f0cde18/test%2Fnet%2Fsourceforge%2Fplantuml%2FPipeTest.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/test%2Fnet%2Fsourceforge%2Fplantuml%2FPipeTest.java?ref=90198c40d8faed1d764980ded635efba9f0cde18",
      "patch": "@@ -217,12 +217,15 @@ void should_readFirstDiagram_uses_current_charset_if_not_provided() throws IOExc\n \t}\n \n \t@ParameterizedTest\n-\t@ValueSource(strings = { \"ab\\nc\", // *nix, macOsX\n+\t@ValueSource(strings = {\n+\t\t\t\"ab\\nc\", // *nix, macOsX\n \t\t\t\"ab\\rc\", // pre-macOsX macs\n \t\t\t\"ab\\r\\nc\", // Windows\n \t\t\t// the case \\n\\r is handled as 2 new lines, thus not added\n-\n-\t\t\t\"ab\\nc\\n\", \"ab\\nc\\r\", \"ab\\nc\\r\\n\" })\n+\t\t\t\"ab\\nc\\n\",\n+\t\t\t\"ab\\nc\\r\",\n+\t\t\t\"ab\\nc\\r\\n\"\n+\t})\n \tvoid should_readFirstDiagram_decode_correctly_different_line_endings(String input) throws IOException {\n \t\tpipe = new Pipe(option, null, new ByteArrayInputStream(input.getBytes(UTF_8)), UTF_8.name());\n ",
      "parent_sha": "0c7f026f6c48916aae06887345b350a217c45c02"
    }
  },
  {
    "oid": "c4fe9f434915c2430284f67d845347c8d98661de",
    "message": "Infer dpi instead of storing it in ImageBuilder.",
    "date": "2021-04-07T08:46:12Z",
    "url": "https://github.com/plantuml/plantuml/commit/c4fe9f434915c2430284f67d845347c8d98661de",
    "details": {
      "sha": "9785cca9aa420bd18adba8e16fc3245b4894e6f2",
      "filename": "src/net/sourceforge/plantuml/ugraphic/ImageBuilder.java",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/plantuml/plantuml/blob/c4fe9f434915c2430284f67d845347c8d98661de/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2FImageBuilder.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/c4fe9f434915c2430284f67d845347c8d98661de/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2FImageBuilder.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fugraphic%2FImageBuilder.java?ref=c4fe9f434915c2430284f67d845347c8d98661de",
      "patch": "@@ -114,7 +114,6 @@ public class ImageBuilder {\n \tprivate HColor backcolor = HColorUtils.WHITE;\n \tprivate ColorMapper colorMapper = new ColorMapperIdentity();\n \tprivate Dimension2D dimension;\n-\tprivate int dpi = 96;\n \tprivate final FileFormatOption fileFormatOption;\n \tprivate boolean handwritten;\n \tprivate String hoverPathColorRGB;\n@@ -171,6 +170,10 @@ public ImageBuilder dimension(Dimension2D dimension) {\n \t\treturn this;\n \t}\n \n+\tprivate int getDpi() {\n+\t\treturn skinParam == null ? 96 : skinParam.getDpi();\n+\t}\n+\t\n \tpublic ImageBuilder drawable(UDrawable drawable) {\n \t\tthis.udrawable = drawable;\n \t\tif (backcolor == null && drawable instanceof TextBlockBackcolored) {\n@@ -223,7 +226,6 @@ public ImageBuilder styled(TitledDiagram diagram) {\n \t\tannotations = true;\n \t\tbackcolor = calculateBackColor(diagram);\n \t\tcolorMapper = skinParam.getColorMapper();\n-\t\tdpi = skinParam.getDpi();\n \t\thandwritten = skinParam.handwritten();\n \t\thoverPathColorRGB = calculateHoverPathColor(skinParam);\n \t\tlengthAdjust = skinParam.getlengthAdjust();\n@@ -279,7 +281,7 @@ private ImageData writeImageInternal(FileFormatOption fileFormatOption, OutputSt\n \t\t\tdx = -minmax.getMinX();\n \t\t\tdy = -minmax.getMinY();\n \t\t}\n-\t\tfinal double scaleFactor = (scale == null ? 1 : scale.getScale(dim.getWidth(), dim.getHeight())) * dpi / 96.0;\n+\t\tfinal double scaleFactor = (scale == null ? 1 : scale.getScale(dim.getWidth(), dim.getHeight())) * getDpi() / 96.0;\n \t\tfinal UGraphic2 ug = createUGraphic(fileFormatOption, dim, animationArg, dx, dy, scaleFactor);\n \t\tUGraphic ug2 = ug;\n \t\tmaybeDrawBorder(ug, dim);",
      "parent_sha": "81abee58fa0ec4e05d84938da4b74003c48f95b6"
    }
  },
  {
    "oid": "15535536f68b80f247d85a060ad85479ffd2e5a6",
    "message": "fix: better format stroke width",
    "date": "2024-11-15T10:49:01Z",
    "url": "https://github.com/plantuml/plantuml/commit/15535536f68b80f247d85a060ad85479ffd2e5a6",
    "details": {
      "sha": "3d55ed5176c4c7e22760417dca4f841f175f2e0c",
      "filename": "src/net/sourceforge/plantuml/klimt/drawing/svg/SvgGraphics.java",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/plantuml/plantuml/blob/15535536f68b80f247d85a060ad85479ffd2e5a6/src%2Fnet%2Fsourceforge%2Fplantuml%2Fklimt%2Fdrawing%2Fsvg%2FSvgGraphics.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/15535536f68b80f247d85a060ad85479ffd2e5a6/src%2Fnet%2Fsourceforge%2Fplantuml%2Fklimt%2Fdrawing%2Fsvg%2FSvgGraphics.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fklimt%2Fdrawing%2Fsvg%2FSvgGraphics.java?ref=15535536f68b80f247d85a060ad85479ffd2e5a6",
      "patch": "@@ -151,7 +151,7 @@ public SvgGraphics(long seed, SvgOption option) {\n \t\t\t// for a pair of linear gradient definitions.\n \t\t\tdefs = simpleElement(\"defs\");\n \t\t\tgRoot = simpleElement(\"g\");\n-\t\t\tstrokeWidth = \"\" + option.getScale();\n+\t\t\tstrokeWidth = format(1);\n \t\t\tthis.filterUid = \"b\" + getSeed(seed);\n \t\t\tthis.shadowId = \"f\" + getSeed(seed);\n \t\t\tthis.gradientId = \"g\" + getSeed(seed);\n@@ -417,7 +417,7 @@ private String fixColor(String color) {\n \t}\n \n \tpublic final void setStrokeWidth(double strokeWidth, String strokeDasharray) {\n-\t\tthis.strokeWidth = \"\" + (option.getScale() * strokeWidth);\n+\t\tthis.strokeWidth = format(strokeWidth);\n \t\tthis.strokeDasharray = strokeDasharray;\n \t}\n \n@@ -984,11 +984,10 @@ private void manageShadow(double deltaShadow) {\n \t\t\t\tfilter.setAttribute(\"y\", \"-1\");\n \t\t\t\tfilter.setAttribute(\"width\", \"300%\");\n \t\t\t\tfilter.setAttribute(\"height\", \"300%\");\n-\t\t\t\taddFilter(filter, \"feGaussianBlur\", \"result\", \"blurOut\", \"stdDeviation\", \"\" + (2 * option.getScale()));\n+\t\t\t\taddFilter(filter, \"feGaussianBlur\", \"result\", \"blurOut\", \"stdDeviation\", format(2));\n \t\t\t\taddFilter(filter, \"feColorMatrix\", \"type\", \"matrix\", \"in\", \"blurOut\", \"result\", \"blurOut2\", \"values\",\n \t\t\t\t\t\t\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0\");\n-\t\t\t\taddFilter(filter, \"feOffset\", \"result\", \"blurOut3\", \"in\", \"blurOut2\", \"dx\",\n-\t\t\t\t\t\t\"\" + (4 * option.getScale()), \"dy\", \"\" + (4 * option.getScale()));\n+\t\t\t\taddFilter(filter, \"feOffset\", \"result\", \"blurOut3\", \"in\", \"blurOut2\", \"dx\", format(4), \"dy\", format(4));\n \t\t\t\taddFilter(filter, \"feBlend\", \"in\", \"SourceGraphic\", \"in2\", \"blurOut3\", \"mode\", \"normal\");\n \t\t\t\tdefs.appendChild(filter);\n ",
      "parent_sha": "effe131fcb37e894990d35f691cf57ccdf54b5a8"
    }
  },
  {
    "oid": "36b113afe4f057a42134fdc9b5ca8ac840050073",
    "message": "\ud83d\udc1b fix regression with title",
    "date": "2025-01-09T12:37:43Z",
    "url": "https://github.com/plantuml/plantuml/commit/36b113afe4f057a42134fdc9b5ca8ac840050073",
    "details": {
      "sha": "de8052211c872351d8207b7dc4977902d2f983fc",
      "filename": "src/net/sourceforge/plantuml/skin/rose/ComponentRoseLine.java",
      "status": "modified",
      "additions": 7,
      "deletions": 5,
      "changes": 12,
      "blob_url": "https://github.com/plantuml/plantuml/blob/36b113afe4f057a42134fdc9b5ca8ac840050073/src%2Fnet%2Fsourceforge%2Fplantuml%2Fskin%2Frose%2FComponentRoseLine.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/36b113afe4f057a42134fdc9b5ca8ac840050073/src%2Fnet%2Fsourceforge%2Fplantuml%2Fskin%2Frose%2FComponentRoseLine.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fskin%2Frose%2FComponentRoseLine.java?ref=36b113afe4f057a42134fdc9b5ca8ac840050073",
      "patch": "@@ -98,10 +98,12 @@ public double getPreferredWidth(StringBounder stringBounder) {\n \t}\n \n \tprivate void drawTitleHoverTargetRect(UGraphic ug, XDimension2D dimensionToUse) {\n-\t\tfinal double hoverTargetWidth = 8;\n-\t\tug = ug.apply(UStroke.withThickness(0));\n-\t\tug = ug.apply(HColors.transparent());\n-\t\tug = ug.apply(UTranslate.dx((dimensionToUse.getWidth() - hoverTargetWidth) / 2));\n-\t\tug.draw(URectangle.build(hoverTargetWidth, dimensionToUse.getHeight()));\n+\t\tif (dimensionToUse.getHeight() > 0) {\n+\t\t\tfinal double hoverTargetWidth = 8;\n+\t\t\tug = ug.apply(UStroke.withThickness(0));\n+\t\t\tug = ug.apply(HColors.transparent());\n+\t\t\tug = ug.apply(UTranslate.dx((dimensionToUse.getWidth() - hoverTargetWidth) / 2));\n+\t\t\tug.draw(URectangle.build(hoverTargetWidth, dimensionToUse.getHeight()));\n+\t\t}\n \t}\n }",
      "parent_sha": "b900158e794fd4704588417110bc39dc4f32c9e0"
    }
  },
  {
    "oid": "bcb3b92dbc28b911c258bd1067e33f319248a80d",
    "message": "fix: disable creole for file listing\nhttps://github.com/plantuml/plantuml/issues/1448#issuecomment-1820720969",
    "date": "2023-11-23T20:16:49Z",
    "url": "https://github.com/plantuml/plantuml/commit/bcb3b92dbc28b911c258bd1067e33f319248a80d",
    "details": {
      "sha": "8364e560d3826e540d4484416faca05a1e74b33a",
      "filename": "src/net/sourceforge/plantuml/filesdiagram/FEntry.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/plantuml/plantuml/blob/bcb3b92dbc28b911c258bd1067e33f319248a80d/src%2Fnet%2Fsourceforge%2Fplantuml%2Ffilesdiagram%2FFEntry.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/bcb3b92dbc28b911c258bd1067e33f319248a80d/src%2Fnet%2Fsourceforge%2Fplantuml%2Ffilesdiagram%2FFEntry.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Ffilesdiagram%2FFEntry.java?ref=bcb3b92dbc28b911c258bd1067e33f319248a80d",
      "patch": "@@ -135,7 +135,7 @@ private TextBlock getTextBlock(FontConfiguration fontConfiguration, ISkinParam s\n \t\t\treturn createOpale();\n \n \t\tfinal Display display = Display.getWithNewlines(getEmoticon() + getName());\n-\t\tTextBlock result = display.create(fontConfiguration, HorizontalAlignment.LEFT, skinParam);\n+\t\tTextBlock result = display.create7(fontConfiguration, HorizontalAlignment.LEFT, skinParam, CreoleMode.NO_CREOLE);\n \t\treturn result;\n \t}\n ",
      "parent_sha": "a98d8ccdd5db6976cf01a6467b52d013b497072a"
    }
  },
  {
    "oid": "9693b72255ec829e87556a87fefbcd5fe5c67b73",
    "message": "fix: hide inside package\nhttps://github.com/plantuml/plantuml/issues/1870",
    "date": "2024-08-29T10:38:17Z",
    "url": "https://github.com/plantuml/plantuml/commit/9693b72255ec829e87556a87fefbcd5fe5c67b73",
    "details": {
      "sha": "b896ca4bcb8202bb23b2d20fef94fc867359d63c",
      "filename": "src/net/atmp/CucaDiagram.java",
      "status": "modified",
      "additions": 15,
      "deletions": 4,
      "changes": 19,
      "blob_url": "https://github.com/plantuml/plantuml/blob/9693b72255ec829e87556a87fefbcd5fe5c67b73/src%2Fnet%2Fatmp%2FCucaDiagram.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/9693b72255ec829e87556a87fefbcd5fe5c67b73/src%2Fnet%2Fatmp%2FCucaDiagram.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fatmp%2FCucaDiagram.java?ref=9693b72255ec829e87556a87fefbcd5fe5c67b73",
      "patch": "@@ -192,8 +192,8 @@ public boolean hasUrl() {\n \t\treturn false;\n \t}\n \n-\tfinal public void setLastEntity(Entity foo) {\n-\t\tthis.lastEntity = (Entity) foo;\n+\tfinal public void setLastEntity(Entity last) {\n+\t\tthis.lastEntity = last;\n \t}\n \n \tprotected void updateLasts(Entity result) {\n@@ -436,9 +436,8 @@ protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormat\n \t\t}\n \t\t// ::done\n \n-\t\tif (getUmlDiagramType() == UmlDiagramType.COMPOSITE) \n+\t\tif (getUmlDiagramType() == UmlDiagramType.COMPOSITE)\n \t\t\tthrow new UnsupportedOperationException();\n-\t\t\n \n \t\tthis.eventuallyBuildPhantomGroups();\n \t\tfinal CucaDiagramFileMaker maker;\n@@ -592,13 +591,25 @@ public void hideOrShow(Set<VisibilityModifier> visibilities, boolean show) {\n \t}\n \n \tpublic void hideOrShow2(String what, boolean show) {\n+\t\twhat = fixWhat(what);\n \t\tthis.hides2.add(new HideOrShow(what, show));\n \t}\n \n \tpublic void removeOrRestore(String what, boolean show) {\n+\t\twhat = fixWhat(what);\n \t\tthis.removed.add(new HideOrShow(what, show));\n \t}\n \n+\tprivate String fixWhat(String what) {\n+\t\tfinal String sep = getNamespaceSeparator();\n+\t\tif (sep != null) {\n+\t\t\tfinal Quark<Entity> currentQuark = getCurrentGroup().getQuark();\n+\t\t\tif (currentQuark.getQualifiedName().length() > 0)\n+\t\t\t\twhat = currentQuark.getQualifiedName() + sep + what;\n+\t\t}\n+\t\treturn what;\n+\t}\n+\n \tpublic final Set<VisibilityModifier> getHides() {\n \t\treturn Collections.unmodifiableSet(hides);\n \t}",
      "parent_sha": "dee82dc6568adeb06428ab789d493f96977e0739"
    }
  },
  {
    "oid": "03b6e9daf9242882b2d768ed7992d1a36b49241a",
    "message": "chore: print info about X11 and XWayland\n\nhttps://github.com/plantuml/plantuml/issues/1975",
    "date": "2024-11-13T10:11:51Z",
    "url": "https://github.com/plantuml/plantuml/commit/03b6e9daf9242882b2d768ed7992d1a36b49241a",
    "details": {
      "sha": "4ea25ebb26cd34d78f29e30c35f335e4a7c6681d",
      "filename": "src/net/sourceforge/plantuml/Run.java",
      "status": "modified",
      "additions": 21,
      "deletions": 5,
      "changes": 26,
      "blob_url": "https://github.com/plantuml/plantuml/blob/03b6e9daf9242882b2d768ed7992d1a36b49241a/src%2Fnet%2Fsourceforge%2Fplantuml%2FRun.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/03b6e9daf9242882b2d768ed7992d1a36b49241a/src%2Fnet%2Fsourceforge%2Fplantuml%2FRun.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2FRun.java?ref=03b6e9daf9242882b2d768ed7992d1a36b49241a",
      "patch": "@@ -92,6 +92,27 @@ public static void main(String[] argsArray)\n \t\t\tSystem.setProperty(\"java.awt.headless\", \"true\");\n \t\tsaveCommandLine(argsArray);\n \n+\t\tfinal String display = System.getenv(\"DISPLAY\");\n+\t\tfinal String waylandDisplay = System.getenv(\"WAYLAND_DISPLAY\");\n+\n+\t\tif (display == null && waylandDisplay != null)\n+\t\t\tLog.info(\"Wayland detected; X11 compatibility may be required via XWayland.\");\n+\t\telse if (display != null)\n+\t\t\tLog.info(\"X11 display available: \" + display);\n+\t\telse\n+\t\t\tLog.info(\"No display detected; you may need the -headless flag.\");\n+\n+\t\tif (GraphicsEnvironment.isHeadless()) {\n+\t\t\tLog.info(\"Forcing -Djava.awt.headless=true\");\n+\t\t\tSystem.setProperty(\"java.awt.headless\", \"true\");\n+\t\t}\n+\n+\t\tfinal String javaAwtHeadless = System.getProperty(\"java.awt.headless\");\n+\t\tif (javaAwtHeadless == null)\n+\t\t\tLog.info(\"java.awt.headless not set\");\n+\t\telse\n+\t\t\tLog.info(\"java.awt.headless set as '\" + javaAwtHeadless + \"'\");\n+\n \t\tfinal Option option = new Option(argsArray);\n \t\tProgressBar.setEnable(option.isTextProgressBar());\n \t\tif (OptionFlags.getInstance().isClipboardLoop()) {\n@@ -131,12 +152,7 @@ public static void main(String[] argsArray)\n \t\t\tLog.info(\"PlantUML Version \" + Version.versionString());\n \t\t\tLog.info(\"GraphicsEnvironment.isHeadless() \" + GraphicsEnvironment.isHeadless());\n \t\t}\n-\t\tif (GraphicsEnvironment.isHeadless()) {\n-\t\t\tLog.info(\"Forcing -Djava.awt.headless=true\");\n-\t\t\tSystem.setProperty(\"java.awt.headless\", \"true\");\n-\t\t\tLog.info(\"java.awt.headless set as true\");\n \n-\t\t}\n \t\tif (OptionFlags.getInstance().isPrintFonts()) {\n \t\t\tprintFonts();\n \t\t\treturn;",
      "parent_sha": "1ebc4f089062e7a5f3a5cb0d6da0e41a4d9292eb"
    }
  },
  {
    "oid": "a202116a0c506f3f7a26b6a2333ad275cab47718",
    "message": "fix: improve dot message status",
    "date": "2023-03-16T20:33:59Z",
    "url": "https://github.com/plantuml/plantuml/commit/a202116a0c506f3f7a26b6a2333ad275cab47718",
    "details": {
      "sha": "79f2359a67b22edc19340b04009e08c74bff37df",
      "filename": "src/net/sourceforge/plantuml/dot/ExeState.java",
      "status": "modified",
      "additions": 11,
      "deletions": 11,
      "changes": 22,
      "blob_url": "https://github.com/plantuml/plantuml/blob/a202116a0c506f3f7a26b6a2333ad275cab47718/src%2Fnet%2Fsourceforge%2Fplantuml%2Fdot%2FExeState.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/a202116a0c506f3f7a26b6a2333ad275cab47718/src%2Fnet%2Fsourceforge%2Fplantuml%2Fdot%2FExeState.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fdot%2FExeState.java?ref=a202116a0c506f3f7a26b6a2333ad275cab47718",
      "patch": "@@ -43,34 +43,34 @@ public enum ExeState {\n \tNULL_UNDEFINED, OK, DOES_NOT_EXIST, IS_A_DIRECTORY, NOT_A_FILE, CANNOT_BE_READ;\n \n \tpublic static ExeState checkFile(File dotExe) {\n-\t\tif (dotExe == null) {\n+\t\tif (dotExe == null)\n \t\t\treturn NULL_UNDEFINED;\n-\t\t} else if (dotExe.exists() == false) {\n+\t\telse if (dotExe.exists() == false)\n \t\t\treturn DOES_NOT_EXIST;\n-\t\t} else if (dotExe.isDirectory()) {\n+\t\telse if (dotExe.isDirectory())\n \t\t\treturn IS_A_DIRECTORY;\n-\t\t} else if (dotExe.isFile() == false) {\n+\t\telse if (dotExe.isFile() == false)\n \t\t\treturn NOT_A_FILE;\n-\t\t} else if (dotExe.canRead() == false) {\n+\t\telse if (dotExe.canRead() == false)\n \t\t\treturn CANNOT_BE_READ;\n-\t\t}\n+\n \t\treturn OK;\n \t}\n \n \tpublic String getTextMessage() {\n \t\tswitch (this) {\n \t\tcase OK:\n-\t\t\treturn \"File OK\";\n+\t\t\treturn \"Dot executable OK\";\n \t\tcase NULL_UNDEFINED:\n \t\t\treturn \"No dot executable found\";\n \t\tcase DOES_NOT_EXIST:\n-\t\t\treturn \"File does not exist\";\n+\t\t\treturn \"Dot executable does not exist\";\n \t\tcase IS_A_DIRECTORY:\n-\t\t\treturn \"It should be an executable, not a directory\";\n+\t\t\treturn \"Dot executable should be an executable, not a directory\";\n \t\tcase NOT_A_FILE:\n-\t\t\treturn \"Not a valid file\";\n+\t\t\treturn \"Dot executable is not a valid file\";\n \t\tcase CANNOT_BE_READ:\n-\t\t\treturn \"File cannot be read\";\n+\t\t\treturn \"Dot executable cannot be read\";\n \t\t}\n \t\tthrow new IllegalStateException();\n \t}",
      "parent_sha": "0f9f96dade24b29bf9bcb07867459a328d2766e8"
    }
  },
  {
    "oid": "6802c2b578e9cd2b427783de32d30ba70a6e3365",
    "message": "fix: rename `%splitstrregex` builtin function to `%splitstr_regex`\n\nAccording to:\n- https://forum.plantuml.net/18827/%25splitstr-please-add-regex-support-as-second-argument?show=18838#c18838",
    "date": "2024-04-10T13:25:15Z",
    "url": "https://github.com/plantuml/plantuml/commit/6802c2b578e9cd2b427783de32d30ba70a6e3365",
    "details": {
      "sha": "6c15e7b1a5feefa48f3eddd65c02bb8cf3adecb4",
      "filename": "src/net/sourceforge/plantuml/tim/stdlib/SplitStrRegex.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/plantuml/plantuml/blob/6802c2b578e9cd2b427783de32d30ba70a6e3365/src%2Fnet%2Fsourceforge%2Fplantuml%2Ftim%2Fstdlib%2FSplitStrRegex.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/6802c2b578e9cd2b427783de32d30ba70a6e3365/src%2Fnet%2Fsourceforge%2Fplantuml%2Ftim%2Fstdlib%2FSplitStrRegex.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Ftim%2Fstdlib%2FSplitStrRegex.java?ref=6802c2b578e9cd2b427783de32d30ba70a6e3365",
      "patch": "@@ -49,7 +49,7 @@\n public class SplitStrRegex extends SimpleReturnFunction {\n \n \tpublic TFunctionSignature getSignature() {\n-\t\treturn new TFunctionSignature(\"%splitstrregex\", 2);\n+\t\treturn new TFunctionSignature(\"%splitstr_regex\", 2);\n \t}\n \n \t@Override",
      "parent_sha": "52fdd3bbe4d99111a578731ca2f6bfb4d73eefcf"
    }
  },
  {
    "oid": "37e5eb66fa946671c23506fc24811f1bae8a7a04",
    "message": "fix: improve edge cases for JSON diagram (manage null and empty Array/Object) (#1900)\n\n* fix: improve edge cases for JSON diagram (manage null and empty array/object))\r\n\r\nImprove edge test for JSON diagram:\r\n- [x] manage null JSON\r\n- [x] manage empty array\r\n- [x] manage empty object\r\n\r\nThat fixes:\r\n- https://forum.plantuml.net/14397/empty-json-fails-to-render\r\n\r\n* fix indentation on `JsonDiagram.java`\r\n\r\nfix indentation\r\n\r\n* fix indentation on `JsonDiagram.java`\r\n\r\nfix indentation",
    "date": "2024-09-09T11:59:24Z",
    "url": "https://github.com/plantuml/plantuml/commit/37e5eb66fa946671c23506fc24811f1bae8a7a04",
    "details": {
      "sha": "59c84ba9cfa64d9a92357dfacae0c6ca7e8b248a",
      "filename": "src/net/sourceforge/plantuml/jsondiagram/JsonDiagram.java",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/plantuml/plantuml/blob/37e5eb66fa946671c23506fc24811f1bae8a7a04/src%2Fnet%2Fsourceforge%2Fplantuml%2Fjsondiagram%2FJsonDiagram.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/37e5eb66fa946671c23506fc24811f1bae8a7a04/src%2Fnet%2Fsourceforge%2Fplantuml%2Fjsondiagram%2FJsonDiagram.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fjsondiagram%2FJsonDiagram.java?ref=37e5eb66fa946671c23506fc24811f1bae8a7a04",
      "patch": "@@ -81,9 +81,13 @@ public JsonDiagram(UmlSource source, UmlDiagramType type, JsonValue json, List<H\n \t\t\tStyleExtractor styleExtractor) {\n \t\tsuper(source, type, null);\n \t\tthis.handwritten = styleExtractor.isHandwritten();\n-\t\tif (json != null && (json.isString() || json.isBoolean() || json.isNumber())) {\n+\t\tif (json != null && (json.isString() || json.isBoolean() || json.isNumber() || json.isNull())) {\n \t\t\tthis.root = new JsonArray();\n \t\t\t((JsonArray) this.root).add(json);\n+\t\t} else if (json != null && ((json.isArray() && json.asArray().isEmpty())\n+\t\t\t\t\t\t\t\t\t|| (json.isObject() && json.asObject().isEmpty()))) {\n+\t\t\tthis.root = new JsonArray();\n+\t\t\t((JsonArray) this.root).add(\"\");\n \t\t} else {\n \t\t\tthis.root = json;\n \t\t}",
      "parent_sha": "8647a4816c7421defafcc0c0e7b3d769f04b2dee"
    }
  },
  {
    "oid": "673da114f2f57ff07248b00084abaefcbd823794",
    "message": "Temporary rollback to fix issue when import zip file",
    "date": "2021-09-13T15:58:32Z",
    "url": "https://github.com/plantuml/plantuml/commit/673da114f2f57ff07248b00084abaefcbd823794",
    "details": {
      "sha": "ee29ccf82b0a1f81f199090b6069d3fd7ec54eab",
      "filename": "src/net/sourceforge/plantuml/AFileZipEntry.java",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/plantuml/plantuml/blob/673da114f2f57ff07248b00084abaefcbd823794/src%2Fnet%2Fsourceforge%2Fplantuml%2FAFileZipEntry.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/673da114f2f57ff07248b00084abaefcbd823794/src%2Fnet%2Fsourceforge%2Fplantuml%2FAFileZipEntry.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2FAFileZipEntry.java?ref=673da114f2f57ff07248b00084abaefcbd823794",
      "patch": "@@ -60,7 +60,8 @@ public String toString() {\n \tpublic InputStream openFile() {\n \t\tfinal InputStream tmp = zipFile.openFile();\n \t\tif (tmp != null)\n-\t\t\ttry (final ZipInputStream zis = new ZipInputStream(tmp)) {\n+\t\t\ttry {\n+\t\t\t\tfinal ZipInputStream zis = new ZipInputStream(tmp);\n \t\t\t\tZipEntry ze = zis.getNextEntry();\n \n \t\t\t\twhile (ze != null) {\n@@ -72,6 +73,7 @@ public InputStream openFile() {\n \t\t\t\t\tze = zis.getNextEntry();\n \t\t\t\t}\n \t\t\t\tzis.closeEntry();\n+\t\t\t\tzis.close();\n \t\t\t} catch (IOException e) {\n \t\t\t\te.printStackTrace();\n \t\t\t}",
      "parent_sha": "1bd97a0992b3a6cf43691480b7ac483ddc4c18d8"
    }
  },
  {
    "oid": "b0dbb29e2a128bb93abc8ff41af34c879ec43fb3",
    "message": "Add text support in inline SVG sprites",
    "date": "2022-09-06T09:56:31Z",
    "url": "https://github.com/plantuml/plantuml/commit/b0dbb29e2a128bb93abc8ff41af34c879ec43fb3",
    "details": {
      "sha": "908b9dd0559c1e00dc6d2e0cc57a67cf01f9a64c",
      "filename": "src/net/sourceforge/plantuml/emoji/SvgNanoParser.java",
      "status": "modified",
      "additions": 35,
      "deletions": 13,
      "changes": 48,
      "blob_url": "https://github.com/plantuml/plantuml/blob/b0dbb29e2a128bb93abc8ff41af34c879ec43fb3/src%2Fnet%2Fsourceforge%2Fplantuml%2Femoji%2FSvgNanoParser.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/b0dbb29e2a128bb93abc8ff41af34c879ec43fb3/src%2Fnet%2Fsourceforge%2Fplantuml%2Femoji%2FSvgNanoParser.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Femoji%2FSvgNanoParser.java?ref=b0dbb29e2a128bb93abc8ff41af34c879ec43fb3",
      "patch": "@@ -10,14 +10,17 @@\n import net.sourceforge.plantuml.Dimension2DDouble;\n import net.sourceforge.plantuml.awt.geom.Dimension2D;\n import net.sourceforge.plantuml.graphic.AbstractTextBlock;\n+import net.sourceforge.plantuml.graphic.FontConfiguration;\n import net.sourceforge.plantuml.graphic.StringBounder;\n import net.sourceforge.plantuml.graphic.TextBlock;\n import net.sourceforge.plantuml.openiconic.SvgPath;\n import net.sourceforge.plantuml.sprite.Sprite;\n import net.sourceforge.plantuml.ugraphic.UEllipse;\n+import net.sourceforge.plantuml.ugraphic.UFont;\n import net.sourceforge.plantuml.ugraphic.UGraphic;\n import net.sourceforge.plantuml.ugraphic.UImageSvg;\n import net.sourceforge.plantuml.ugraphic.UStroke;\n+import net.sourceforge.plantuml.ugraphic.UText;\n import net.sourceforge.plantuml.ugraphic.UTranslate;\n import net.sourceforge.plantuml.ugraphic.color.ColorChangerMonochrome;\n import net.sourceforge.plantuml.ugraphic.color.ColorMapper;\n@@ -54,12 +57,13 @@ public SvgNanoParser(List<String> svg, boolean keepColors) {\n \t\tthis.keepColors = keepColors;\n \n \t\tfor (String singleLine : svg) {\n-\t\t\tfinal Pattern p = Pattern.compile(\"\\\\<[^<>]+\\\\>\");\n+\t\t\tfinal Pattern p = Pattern\n+\t\t\t\t\t.compile(\"(\\\\<text .*?\\\\</text\\\\>)|(\\\\<(svg|path|g|circle|ellipse)[^<>]*\\\\>)|(\\\\</[^<>]*\\\\>)\");\n \t\t\tfinal Matcher m = p.matcher(singleLine);\n \t\t\twhile (m.find()) {\n \t\t\t\tfinal String s = m.group(0);\n-\t\t\t\tif (s.contains(\"<path\") || s.contains(\"<g \") || s.contains(\"<g>\") || s.contains(\"</g>\")\n-\t\t\t\t\t\t|| s.contains(\"<circle \") || s.contains(\"<ellipse \"))\n+\t\t\t\tif (s.startsWith(\"<path\") || s.startsWith(\"<g \") || s.startsWith(\"<g>\") || s.startsWith(\"</g>\")\n+\t\t\t\t\t\t|| s.startsWith(\"<circle \") || s.startsWith(\"<ellipse \") || s.startsWith(\"<text \"))\n \t\t\t\t\tdata.add(s);\n \t\t\t\telse if (s.startsWith(\"<svg\") || s.startsWith(\"</svg\")) {\n \t\t\t\t\t// Ignore\n@@ -79,21 +83,22 @@ public void drawU(UGraphic ug, double scale, HColor colorForMonochrome) {\n \n \t\tfinal List<UGraphicWithScale> stack = new ArrayList<>();\n \t\tfor (String s : data) {\n-\t\t\tif (s.contains(\"<path \")) {\n+\t\t\tif (s.startsWith(\"<path \")) {\n \t\t\t\tdrawPath(ugs, s, colorForMonochrome);\n-\t\t\t} else if (s.contains(\"</g>\")) {\n+\t\t\t} else if (s.startsWith(\"</g>\")) {\n \t\t\t\tugs = stack.remove(0);\n-\t\t\t} else if (s.contains(\"<g>\")) {\n+\t\t\t} else if (s.startsWith(\"<g>\")) {\n \t\t\t\tstack.add(0, ugs);\n-\t\t\t} else if (s.contains(\"<g \")) {\n+\t\t\t} else if (s.startsWith(\"<g \")) {\n \t\t\t\tstack.add(0, ugs);\n \t\t\t\tugs = applyFill(ugs, s, colorForMonochrome);\n \t\t\t\tugs = applyTransform(ugs, s);\n-\n-\t\t\t} else if (s.contains(\"<circle \")) {\n+\t\t\t} else if (s.startsWith(\"<circle \")) {\n \t\t\t\tdrawCircle(ugs, s, colorForMonochrome);\n-\t\t\t} else if (s.contains(\"<ellipse \")) {\n+\t\t\t} else if (s.startsWith(\"<ellipse \")) {\n \t\t\t\tdrawEllipse(ugs, s, colorForMonochrome);\n+\t\t\t} else if (s.startsWith(\"<text \")) {\n+\t\t\t\tdrawText(ugs, s, colorForMonochrome);\n \t\t\t} else {\n \t\t\t\tSystem.err.println(\"**?=\" + s);\n \t\t\t}\n@@ -133,11 +138,9 @@ private UGraphicWithScale applyFill(UGraphicWithScale ugs, String s, HColor colo\n \t\t\tfinal HColor stroke = getTrueColor(strokeString, colorForMonochrome);\n \t\t\tugs = ugs.apply(stroke);\n \t\t\tfinal String strokeWidth = extractData(\"stroke-width\", s);\n-\t\t\tif (strokeWidth != null) {\n+\t\t\tif (strokeWidth != null)\n \t\t\t\tugs = ugs.apply(new UStroke(Double.parseDouble(strokeWidth)));\n \n-\t\t\t}\n-\n \t\t} else {\n \t\t\tfinal HColor fill = getTrueColor(fillString, colorForMonochrome);\n \t\t\tugs = ugs.apply(fill).apply(fill.bg());\n@@ -215,6 +218,25 @@ private void drawEllipse(UGraphicWithScale ugs, String s, HColor colorForMonochr\n \t\tugs.apply(translate).draw(new UEllipse(rx * 2, ry * 2));\n \t}\n \n+\tprivate void drawText(UGraphicWithScale ugs, String s, HColor colorForMonochrome) {\n+\t\tfinal double x = Double.parseDouble(extractData(\"x\", s));\n+\t\tfinal double y = Double.parseDouble(extractData(\"y\", s));\n+\t\tfinal String fill = extractData(\"fill\", s);\n+\t\tfinal int fontSize = Integer.parseInt(extractData(\"font-size\", s));\n+\n+\t\tfinal Pattern p = Pattern.compile(\"\\\\<text[^<>]*\\\\>(.*?)\\\\</text\\\\>\");\n+\t\tfinal Matcher m = p.matcher(s);\n+\t\tif (m.find()) {\n+\t\t\tfinal String text = m.group(1);\n+\t\t\tHColor color = HColorSet.instance().getColorOrWhite(fill);\n+\t\t\tfinal FontConfiguration fc = FontConfiguration.create(UFont.sansSerif(fontSize), color, color, false);\n+\t\t\tfinal UText utext = new UText(text, fc);\n+\t\t\tUGraphic ug = ugs.getUg();\n+\t\t\tug = ug.apply(new UTranslate(x, y));\n+\t\t\tug.draw(utext);\n+\t\t}\n+\t}\n+\n \tprivate void drawPath(UGraphicWithScale ugs, String s, HColor colorForMonochrome) {\n \t\ts = s.replace(\"id=\\\"\", \"ID=\\\"\");\n \t\tugs = applyFill(ugs, s, colorForMonochrome);",
      "parent_sha": "847f482609b0cd31e69516c08161c232fff5382b"
    }
  },
  {
    "oid": "ecb22dfd46479c514b2230b53d7378aa68482606",
    "message": "fix: amend test",
    "date": "2023-08-26T09:18:40Z",
    "url": "https://github.com/plantuml/plantuml/commit/ecb22dfd46479c514b2230b53d7378aa68482606",
    "details": {
      "sha": "2c3e526de70a9e880c985b650f20d6e0191d5533",
      "filename": "test/nonreg/simple/A0004_TestResult.java",
      "status": "modified",
      "additions": 23,
      "deletions": 23,
      "changes": 46,
      "blob_url": "https://github.com/plantuml/plantuml/blob/ecb22dfd46479c514b2230b53d7378aa68482606/test%2Fnonreg%2Fsimple%2FA0004_TestResult.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/ecb22dfd46479c514b2230b53d7378aa68482606/test%2Fnonreg%2Fsimple%2FA0004_TestResult.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/test%2Fnonreg%2Fsimple%2FA0004_TestResult.java?ref=ecb22dfd46479c514b2230b53d7378aa68482606",
      "patch": "@@ -5,7 +5,7 @@ public class A0004_TestResult {\n /*\n \"\"\"\n DPI: 96\n-dimension: [ 550.6156 ; 680.0000 ]\n+dimension: [ 550.6156 ; 682.0000 ]\n scaleFactor: 1.0000\n seed: -1093380870564056548\n svgLinkTarget: _top\n@@ -19,7 +19,7 @@ public class A0004_TestResult {\n   extend: 0.0\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n-  color: NULL_COLOR\n+  color: ff222222\n   backcolor: ff222222\n \n RECTANGLE:\n@@ -71,8 +71,8 @@ public class A0004_TestResult {\n   extendedColor: NULL_COLOR\n \n ELLIPSE:\n-  pt1: [ 127.0000 ; 655.0000 ]\n-  pt2: [ 147.0000 ; 675.0000 ]\n+  pt1: [ 126.0000 ; 655.0000 ]\n+  pt2: [ 148.0000 ; 677.0000 ]\n   start: 0.0\n   extend: 0.0\n   stroke: 0.0-0.0-1.0\n@@ -81,13 +81,13 @@ public class A0004_TestResult {\n   backcolor: NULL_COLOR\n \n ELLIPSE:\n-  pt1: [ 131.5000 ; 659.5000 ]\n-  pt2: [ 143.5000 ; 671.5000 ]\n+  pt1: [ 131.0000 ; 660.0000 ]\n+  pt2: [ 143.0000 ; 672.0000 ]\n   start: 0.0\n   extend: 0.0\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n-  color: NULL_COLOR\n+  color: middle(ff222222 & ff222222 )\n   backcolor: ff222222\n \n RECTANGLE:\n@@ -292,11 +292,11 @@ public class A0004_TestResult {\n \n POLYGON:\n   points:\n-   - [ 126.9122 ; 660.5023 ]\n-   - [ 121.2339 ; 652.4551 ]\n-   - [ 122.6187 ; 657.9399 ]\n-   - [ 117.1340 ; 659.3247 ]\n-   - [ 126.9122 ; 660.5023 ]\n+   - [ 125.8699 ; 659.8750 ]\n+   - [ 120.2522 ; 651.7854 ]\n+   - [ 121.5958 ; 657.2804 ]\n+   - [ 116.1008 ; 658.6240 ]\n+   - [ 125.8699 ; 659.8750 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ff181818\n@@ -314,9 +314,9 @@ public class A0004_TestResult {\n      pt2: [ 76.0000 ; 278.0000 ]\n      pt3: [ 76.0000 ; 597.0000 ]\n    - type: SEG_CUBICTO\n-     pt1: [ 76.0000 ; 624.0056 ]\n-     pt2: [ 99.8820 ; 641.9510 ]\n-     pt3: [ 115.7600 ; 651.4274 ]\n+     pt1: [ 76.0000 ; 623.4248 ]\n+     pt2: [ 98.6698 ; 641.0056 ]\n+     pt3: [ 114.7410 ; 650.7615 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ff181818\n@@ -604,11 +604,11 @@ public class A0004_TestResult {\n \n POLYGON:\n   points:\n-   - [ 147.1865 ; 661.4161 ]\n-   - [ 157.0353 ; 661.3705 ]\n-   - [ 151.7461 ; 659.3642 ]\n-   - [ 153.7524 ; 654.0751 ]\n-   - [ 147.1865 ; 661.4161 ]\n+   - [ 148.1292 ; 660.9919 ]\n+   - [ 157.9779 ; 660.9463 ]\n+   - [ 152.6888 ; 658.9400 ]\n+   - [ 154.6950 ; 653.6509 ]\n+   - [ 148.1292 ; 660.9919 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ff181818\n@@ -618,9 +618,9 @@ public class A0004_TestResult {\n    - type: SEG_MOVETO\n      pt1: [ 237.4665 ; 612.0901 ]\n    - type: SEG_CUBICTO\n-     pt1: [ 206.0796 ; 626.2142 ]\n-     pt2: [ 166.5934 ; 643.9829 ]\n-     pt3: [ 146.6581 ; 652.9539 ]\n+     pt1: [ 206.5650 ; 625.9958 ]\n+     pt2: [ 167.9806 ; 643.3587 ]\n+     pt3: [ 147.6007 ; 652.5297 ]\n   stroke: 0.0-0.0-1.0\n   shadow: 0\n   color: ff181818",
      "parent_sha": "86513bfbc835918dcbefc8f8adf20d5f575ba4fa"
    }
  },
  {
    "oid": "9fe1686e406a728f03cea8a27b26b67d08d228bd",
    "message": "define -> arrows as request and <- as response\n\nInstead of defining that every message from the left to the right side is always a request and every message from the right to the left side is always a response, I propose to used the arrow direction from the PlantUML diagram code.\n\nEach arrow with the arrow direction on the right (`->`) is a request and each arrow with the arrow direction on the left (`<-`) is a response.\n\nThis way the users can define themselves what is a request and what is a response.",
    "date": "2023-07-31T20:09:30Z",
    "url": "https://github.com/plantuml/plantuml/commit/9fe1686e406a728f03cea8a27b26b67d08d228bd",
    "details": {
      "sha": "e00dc5170238cbb9a77e2e386ba3d419f13c672e",
      "filename": "src/net/sourceforge/plantuml/skin/rose/ComponentRoseArrow.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/plantuml/plantuml/blob/9fe1686e406a728f03cea8a27b26b67d08d228bd/src%2Fnet%2Fsourceforge%2Fplantuml%2Fskin%2Frose%2FComponentRoseArrow.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/9fe1686e406a728f03cea8a27b26b67d08d228bd/src%2Fnet%2Fsourceforge%2Fplantuml%2Fskin%2Frose%2FComponentRoseArrow.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fskin%2Frose%2FComponentRoseArrow.java?ref=9fe1686e406a728f03cea8a27b26b67d08d228bd",
      "patch": "@@ -185,7 +185,7 @@ public double getPosArrow(StringBounder stringBounder) {\n \t}\n \n \tprivate boolean isBelowForResponse() {\n-\t\treturn belowForResponse && getDirection2() == ArrowDirection.RIGHT_TO_LEFT_REVERSE;\n+\t\treturn belowForResponse && getArrowConfiguration().isReverseDefine();\n \t}\n \n \tprivate void drawDressing1(UGraphic ug, ArrowDressing dressing, ArrowDecoration decoration, double lenFull) {",
      "parent_sha": "49115dfc7d4156961e5b49a81c09b474daa79823"
    }
  },
  {
    "oid": "c54983bb5ebf73d5acdff01d6f1c1a1de8e5128f",
    "message": "Make AgoUML work",
    "date": "2023-02-22T19:55:55Z",
    "url": "https://github.com/plantuml/plantuml/commit/c54983bb5ebf73d5acdff01d6f1c1a1de8e5128f",
    "details": {
      "sha": "1cc39a9cf74bbd00bf7066d74306b85c965caf40",
      "filename": "src/net/sourceforge/plantuml/xmi/XmiClassDiagramArgo.java",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/plantuml/plantuml/blob/c54983bb5ebf73d5acdff01d6f1c1a1de8e5128f/src%2Fnet%2Fsourceforge%2Fplantuml%2Fxmi%2FXmiClassDiagramArgo.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/c54983bb5ebf73d5acdff01d6f1c1a1de8e5128f/src%2Fnet%2Fsourceforge%2Fplantuml%2Fxmi%2FXmiClassDiagramArgo.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2Fxmi%2FXmiClassDiagramArgo.java?ref=c54983bb5ebf73d5acdff01d6f1c1a1de8e5128f",
      "patch": "@@ -52,8 +52,8 @@ public XmiClassDiagramArgo(ClassDiagram classDiagram) throws ParserConfiguration\n \n \t\taddPackage(ownedElementRoot, classDiagram.getRootGroup());\n \n-//\t\tfor (final Link link : classDiagram.getLinks())\n-//\t\t\taddLink(link);\n+\t\tfor (final Link link : classDiagram.getLinks())\n+\t\t\taddLink(link);\n \n \t}\n \n@@ -152,7 +152,6 @@ private void addLink(Link link) {\n \tprivate void addExtension(Link link, String assId) {\n \t\tfinal Element association = document.createElement(\"UML:Generalization\");\n \t\tassociation.setAttribute(\"xmi.id\", assId);\n-\t\tassociation.setAttribute(\"namespace\", CucaDiagramXmiMaker.getModel(classDiagram));\n \t\tif (link.getLabel() != null)\n \t\t\tassociation.setAttribute(\"name\", forXMI(link.getLabel()));\n \n@@ -181,8 +180,8 @@ private void generalizationChildParent(Element association, String uidChild, Str\n \t\t\n \t\tassociation.appendChild(child);\n \t\tassociation.appendChild(parent);\n-\t\tassociation.setAttribute(\"child\", uidChild);\n-\t\tassociation.setAttribute(\"parent\", uidParent);\n+//\t\tassociation.setAttribute(\"child\", uidChild);\n+//\t\tassociation.setAttribute(\"parent\", uidParent);\n \n \t}\n ",
      "parent_sha": "9660d3ced9652013328b2c6da7b70de2627c960e"
    }
  },
  {
    "oid": "467241bf92738af707ffc1749e539625ddcc1534",
    "message": "Change the output of a file to match the natural file structure. In reference to plantuml/plantuml#672",
    "date": "2021-09-24T05:15:07Z",
    "url": "https://github.com/plantuml/plantuml/commit/467241bf92738af707ffc1749e539625ddcc1534",
    "details": {
      "sha": "3b935a0c16a4217884f21994f3157bccc03d691b",
      "filename": "src/net/sourceforge/plantuml/Run.java",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/plantuml/plantuml/blob/467241bf92738af707ffc1749e539625ddcc1534/src%2Fnet%2Fsourceforge%2Fplantuml%2FRun.java",
      "raw_url": "https://github.com/plantuml/plantuml/raw/467241bf92738af707ffc1749e539625ddcc1534/src%2Fnet%2Fsourceforge%2Fplantuml%2FRun.java",
      "contents_url": "https://api.github.com/repos/plantuml/plantuml/contents/src%2Fnet%2Fsourceforge%2Fplantuml%2FRun.java?ref=467241bf92738af707ffc1749e539625ddcc1534",
      "patch": "@@ -477,7 +477,7 @@ private static void manageFileInternal(File f, Option option, ErrorStatus error)\n \t\t}\n \t\tfinal ISourceFileReader sourceFileReader;\n \t\tif (option.getOutputFile() == null) {\n-\t\t\tFile outputDir = option.getOutputDir();\n+\t\t\tFile outputDir = option.getOutputDir().getAbsoluteFile();\n \t\t\tif (outputDir != null && outputDir.getPath().endsWith(\"$\")) {\n \t\t\t\tfinal String path = outputDir.getPath();\n \t\t\t\toutputDir = new File(path.substring(0, path.length() - 1)).getAbsoluteFile();\n@@ -490,6 +490,7 @@ private static void manageFileInternal(File f, Option option, ErrorStatus error)\n \t\t} else {\n \t\t\tsourceFileReader = new SourceFileReaderHardFile(option.getDefaultDefines(f), f, option.getOutputFile(),\n \t\t\t\t\toption.getConfig(), option.getCharset(), option.getFileFormatOption());\n+\t\t\tSystem.out.println(option.getOutputFile().getAbsolutePath());\n \t\t}\n \t\tsourceFileReader.setCheckMetadata(option.isCheckMetadata());\n \t\t((SourceFileReaderAbstract) sourceFileReader).setNoerror(option.isNoerror());",
      "parent_sha": "2a3ecbb72e8425dba31c88f06ee65480d89359ad"
    }
  }
]